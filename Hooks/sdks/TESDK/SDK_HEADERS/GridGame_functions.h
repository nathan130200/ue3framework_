/*
#############################################################################################
# Tron Evolution (1.0) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: GridGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function GridGame.PgAltConfig.LoadAltConfig
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 configName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 altName                        ( CPF_Parm | CPF_NeedCtorLink )

void UPgAltConfig::LoadAltConfig ( struct FString configName, struct FString altName )
{
	static UFunction* pFnLoadAltConfig = NULL;

	if ( ! pFnLoadAltConfig )
		pFnLoadAltConfig = (UFunction*) UObject::GObjObjects()->Data[ 41619 ];

	UPgAltConfig_execLoadAltConfig_Parms LoadAltConfig_Parms;
	memcpy ( &LoadAltConfig_Parms.configName, &configName, 0xC );
	memcpy ( &LoadAltConfig_Parms.altName, &altName, 0xC );

	pFnLoadAltConfig->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadAltConfig, &LoadAltConfig_Parms, NULL );

	pFnLoadAltConfig->FunctionFlags |= 0x400;
};

// Function GridGame.PgDamageParamInterface.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void UPgDamageParamInterface::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 44424 ];

	UPgDamageParamInterface_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgDamageParamInterface.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* UPgDamageParamInterface::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 42041 ];

	UPgDamageParamInterface_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgEventTrackerInterface.ClearTrackedEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgEventTrackerInterface::ClearTrackedEvents ( )
{
	static UFunction* pFnClearTrackedEvents = NULL;

	if ( ! pFnClearTrackedEvents )
		pFnClearTrackedEvents = (UFunction*) UObject::GObjObjects()->Data[ 44674 ];

	UPgEventTrackerInterface_execClearTrackedEvents_Parms ClearTrackedEvents_Parms;

	pFnClearTrackedEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearTrackedEvents, &ClearTrackedEvents_Parms, NULL );

	pFnClearTrackedEvents->FunctionFlags |= 0x400;
};

// Function GridGame.PgEventTrackerInterface.GetTrackedEventInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   EventName                      ( CPF_Parm )
// struct FTrackedEventInfo       Info                           ( CPF_Parm | CPF_OutParm )

bool UPgEventTrackerInterface::GetTrackedEventInfo ( struct FName EventName, struct FTrackedEventInfo* Info )
{
	static UFunction* pFnGetTrackedEventInfo = NULL;

	if ( ! pFnGetTrackedEventInfo )
		pFnGetTrackedEventInfo = (UFunction*) UObject::GObjObjects()->Data[ 44670 ];

	UPgEventTrackerInterface_execGetTrackedEventInfo_Parms GetTrackedEventInfo_Parms;
	memcpy ( &GetTrackedEventInfo_Parms.EventName, &EventName, 0x8 );

	pFnGetTrackedEventInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTrackedEventInfo, &GetTrackedEventInfo_Parms, NULL );

	pFnGetTrackedEventInfo->FunctionFlags |= 0x400;

	if ( Info )
		memcpy ( Info, &GetTrackedEventInfo_Parms.Info, 0xC );

	return GetTrackedEventInfo_Parms.ReturnValue;
};

// Function GridGame.PgEventTrackerInterface.CheckForTrackedEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   EventName                      ( CPF_Parm )

bool UPgEventTrackerInterface::CheckForTrackedEvent ( struct FName EventName )
{
	static UFunction* pFnCheckForTrackedEvent = NULL;

	if ( ! pFnCheckForTrackedEvent )
		pFnCheckForTrackedEvent = (UFunction*) UObject::GObjObjects()->Data[ 44667 ];

	UPgEventTrackerInterface_execCheckForTrackedEvent_Parms CheckForTrackedEvent_Parms;
	memcpy ( &CheckForTrackedEvent_Parms.EventName, &EventName, 0x8 );

	pFnCheckForTrackedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckForTrackedEvent, &CheckForTrackedEvent_Parms, NULL );

	pFnCheckForTrackedEvent->FunctionFlags |= 0x400;

	return CheckForTrackedEvent_Parms.ReturnValue;
};

// Function GridGame.PgEventTrackerInterface.TrackEventByName
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_OptionalParm | CPF_Parm )

void UPgEventTrackerInterface::TrackEventByName ( struct FName EventName, struct FVector HitNormal )
{
	static UFunction* pFnTrackEventByName = NULL;

	if ( ! pFnTrackEventByName )
		pFnTrackEventByName = (UFunction*) UObject::GObjObjects()->Data[ 44664 ];

	UPgEventTrackerInterface_execTrackEventByName_Parms TrackEventByName_Parms;
	memcpy ( &TrackEventByName_Parms.EventName, &EventName, 0x8 );
	memcpy ( &TrackEventByName_Parms.HitNormal, &HitNormal, 0xC );

	pFnTrackEventByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTrackEventByName, &TrackEventByName_Parms, NULL );

	pFnTrackEventByName->FunctionFlags |= 0x400;
};

// Function GridGame.PgGridProfileSettings.HasCompletedAchievement
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  AchievementId                  ( CPF_Parm )

bool UPgGridProfileSettings::eventHasCompletedAchievement ( unsigned char AchievementId )
{
	static UFunction* pFnHasCompletedAchievement = NULL;

	if ( ! pFnHasCompletedAchievement )
		pFnHasCompletedAchievement = (UFunction*) UObject::GObjObjects()->Data[ 46957 ];

	UPgGridProfileSettings_eventHasCompletedAchievement_Parms HasCompletedAchievement_Parms;
	HasCompletedAchievement_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnHasCompletedAchievement, &HasCompletedAchievement_Parms, NULL );

	return HasCompletedAchievement_Parms.ReturnValue;
};

// Function GridGame.PgGridProfileSettings.MarkAchievementAsCompleted
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  AchievementId                  ( CPF_Parm )
// class APgPlayerController*     GPC                            ( CPF_Parm )
// unsigned long                  bSaveProfile                   ( CPF_OptionalParm | CPF_Parm )

bool UPgGridProfileSettings::eventMarkAchievementAsCompleted ( unsigned char AchievementId, class APgPlayerController* GPC, unsigned long bSaveProfile )
{
	static UFunction* pFnMarkAchievementAsCompleted = NULL;

	if ( ! pFnMarkAchievementAsCompleted )
		pFnMarkAchievementAsCompleted = (UFunction*) UObject::GObjObjects()->Data[ 46949 ];

	UPgGridProfileSettings_eventMarkAchievementAsCompleted_Parms MarkAchievementAsCompleted_Parms;
	MarkAchievementAsCompleted_Parms.AchievementId = AchievementId;
	MarkAchievementAsCompleted_Parms.GPC = GPC;
	MarkAchievementAsCompleted_Parms.bSaveProfile = bSaveProfile;

	this->ProcessEvent ( pFnMarkAchievementAsCompleted, &MarkAchievementAsCompleted_Parms, NULL );

	return MarkAchievementAsCompleted_Parms.ReturnValue;
};

// Function GridGame.PgGridProfileSettings.GetProfileSettingValueIdByName
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SettingName                    ( CPF_Parm )
// int                            OutValue                       ( CPF_Parm | CPF_OutParm )

bool UPgGridProfileSettings::GetProfileSettingValueIdByName ( struct FName SettingName, int* OutValue )
{
	static UFunction* pFnGetProfileSettingValueIdByName = NULL;

	if ( ! pFnGetProfileSettingValueIdByName )
		pFnGetProfileSettingValueIdByName = (UFunction*) UObject::GObjObjects()->Data[ 46943 ];

	UPgGridProfileSettings_execGetProfileSettingValueIdByName_Parms GetProfileSettingValueIdByName_Parms;
	memcpy ( &GetProfileSettingValueIdByName_Parms.SettingName, &SettingName, 0x8 );

	this->ProcessEvent ( pFnGetProfileSettingValueIdByName, &GetProfileSettingValueIdByName_Parms, NULL );

	if ( OutValue )
		*OutValue = GetProfileSettingValueIdByName_Parms.OutValue;

	return GetProfileSettingValueIdByName_Parms.ReturnValue;
};

// Function GridGame.PgGridProfileSettings.GetProfileSettingValueStringByName
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SettingName                    ( CPF_Parm )
// struct FString                 OutValue                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgGridProfileSettings::GetProfileSettingValueStringByName ( struct FName SettingName, struct FString* OutValue )
{
	static UFunction* pFnGetProfileSettingValueStringByName = NULL;

	if ( ! pFnGetProfileSettingValueStringByName )
		pFnGetProfileSettingValueStringByName = (UFunction*) UObject::GObjObjects()->Data[ 46937 ];

	UPgGridProfileSettings_execGetProfileSettingValueStringByName_Parms GetProfileSettingValueStringByName_Parms;
	memcpy ( &GetProfileSettingValueStringByName_Parms.SettingName, &SettingName, 0x8 );

	this->ProcessEvent ( pFnGetProfileSettingValueStringByName, &GetProfileSettingValueStringByName_Parms, NULL );

	if ( OutValue )
		memcpy ( OutValue, &GetProfileSettingValueStringByName_Parms.OutValue, 0xC );

	return GetProfileSettingValueStringByName_Parms.ReturnValue;
};

// Function GridGame.PgGridProfileSettings.GetProfileSettingValueFloatByName
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SettingName                    ( CPF_Parm )
// float                          OutValue                       ( CPF_Parm | CPF_OutParm )

bool UPgGridProfileSettings::GetProfileSettingValueFloatByName ( struct FName SettingName, float* OutValue )
{
	static UFunction* pFnGetProfileSettingValueFloatByName = NULL;

	if ( ! pFnGetProfileSettingValueFloatByName )
		pFnGetProfileSettingValueFloatByName = (UFunction*) UObject::GObjObjects()->Data[ 46931 ];

	UPgGridProfileSettings_execGetProfileSettingValueFloatByName_Parms GetProfileSettingValueFloatByName_Parms;
	memcpy ( &GetProfileSettingValueFloatByName_Parms.SettingName, &SettingName, 0x8 );

	this->ProcessEvent ( pFnGetProfileSettingValueFloatByName, &GetProfileSettingValueFloatByName_Parms, NULL );

	if ( OutValue )
		*OutValue = GetProfileSettingValueFloatByName_Parms.OutValue;

	return GetProfileSettingValueFloatByName_Parms.ReturnValue;
};

// Function GridGame.PgGridProfileSettings.GetProfileSettingValueIntByName
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   SettingName                    ( CPF_Parm )
// int                            OutValue                       ( CPF_Parm | CPF_OutParm )

bool UPgGridProfileSettings::GetProfileSettingValueIntByName ( struct FName SettingName, int* OutValue )
{
	static UFunction* pFnGetProfileSettingValueIntByName = NULL;

	if ( ! pFnGetProfileSettingValueIntByName )
		pFnGetProfileSettingValueIntByName = (UFunction*) UObject::GObjObjects()->Data[ 46925 ];

	UPgGridProfileSettings_execGetProfileSettingValueIntByName_Parms GetProfileSettingValueIntByName_Parms;
	memcpy ( &GetProfileSettingValueIntByName_Parms.SettingName, &SettingName, 0x8 );

	this->ProcessEvent ( pFnGetProfileSettingValueIntByName, &GetProfileSettingValueIntByName_Parms, NULL );

	if ( OutValue )
		*OutValue = GetProfileSettingValueIntByName_Parms.OutValue;

	return GetProfileSettingValueIntByName_Parms.ReturnValue;
};

// Function GridGame.PgHud.ShowGammaCalibration
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  show                           ( CPF_Parm )
// int                            X                              ( CPF_OptionalParm | CPF_Parm )
// int                            Y                              ( CPF_OptionalParm | CPF_Parm )
// int                            Width                          ( CPF_OptionalParm | CPF_Parm )
// int                            Height                         ( CPF_OptionalParm | CPF_Parm )

void APgHud::eventShowGammaCalibration ( unsigned long show, int X, int Y, int Width, int Height )
{
	static UFunction* pFnShowGammaCalibration = NULL;

	if ( ! pFnShowGammaCalibration )
		pFnShowGammaCalibration = (UFunction*) UObject::GObjObjects()->Data[ 46995 ];

	APgHud_eventShowGammaCalibration_Parms ShowGammaCalibration_Parms;
	ShowGammaCalibration_Parms.show = show;
	ShowGammaCalibration_Parms.X = X;
	ShowGammaCalibration_Parms.Y = Y;
	ShowGammaCalibration_Parms.Width = Width;
	ShowGammaCalibration_Parms.Height = Height;

	this->ProcessEvent ( pFnShowGammaCalibration, &ShowGammaCalibration_Parms, NULL );
};

// Function GridGame.PgHud.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgHud::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 46990 ];

	APgHud_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function GridGame.PgMaterialInstanceInterface.GetMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > UPgMaterialInstanceInterface::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 47269 ];

	UPgMaterialInstanceInterface_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgMaterialInstanceInterface.InitMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgMaterialInstanceInterface::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 47268 ];

	UPgMaterialInstanceInterface_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInInterface.PlugIns
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UClass*                  BaseClass                      ( CPF_OptionalParm | CPF_Parm )
// class UPgActorPlugIn*          PlugIn                         ( CPF_Parm | CPF_OutParm )

void UPgPlugInInterface::PlugIns ( class UClass* BaseClass, class UPgActorPlugIn** PlugIn )
{
	static UFunction* pFnPlugIns = NULL;

	if ( ! pFnPlugIns )
		pFnPlugIns = (UFunction*) UObject::GObjObjects()->Data[ 49345 ];

	UPgPlugInInterface_execPlugIns_Parms PlugIns_Parms;
	PlugIns_Parms.BaseClass = BaseClass;

	pFnPlugIns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlugIns, &PlugIns_Parms, NULL );

	pFnPlugIns->FunctionFlags |= 0x400;

	if ( PlugIn )
		*PlugIn = PlugIns_Parms.PlugIn;
};

// Function GridGame.PgPlugInInterface.TriggerInputPlugIns
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  pressed                        ( CPF_Parm )
// struct FName                   Button                         ( CPF_Parm )

bool UPgPlugInInterface::TriggerInputPlugIns ( unsigned long pressed, struct FName Button )
{
	static UFunction* pFnTriggerInputPlugIns = NULL;

	if ( ! pFnTriggerInputPlugIns )
		pFnTriggerInputPlugIns = (UFunction*) UObject::GObjObjects()->Data[ 49341 ];

	UPgPlugInInterface_execTriggerInputPlugIns_Parms TriggerInputPlugIns_Parms;
	TriggerInputPlugIns_Parms.pressed = pressed;
	memcpy ( &TriggerInputPlugIns_Parms.Button, &Button, 0x8 );

	pFnTriggerInputPlugIns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerInputPlugIns, &TriggerInputPlugIns_Parms, NULL );

	pFnTriggerInputPlugIns->FunctionFlags |= 0x400;

	return TriggerInputPlugIns_Parms.ReturnValue;
};

// Function GridGame.PgPlugInInterface.SyncClientPlugIns
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void UPgPlugInInterface::SyncClientPlugIns ( )
{
	static UFunction* pFnSyncClientPlugIns = NULL;

	if ( ! pFnSyncClientPlugIns )
		pFnSyncClientPlugIns = (UFunction*) UObject::GObjObjects()->Data[ 49340 ];

	UPgPlugInInterface_execSyncClientPlugIns_Parms SyncClientPlugIns_Parms;

	pFnSyncClientPlugIns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSyncClientPlugIns, &SyncClientPlugIns_Parms, NULL );

	pFnSyncClientPlugIns->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInInterface.SyncServerPlugIns
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            plugInRep                      ( CPF_Parm )

void UPgPlugInInterface::eventSyncServerPlugIns ( int plugInRep )
{
	static UFunction* pFnSyncServerPlugIns = NULL;

	if ( ! pFnSyncServerPlugIns )
		pFnSyncServerPlugIns = (UFunction*) UObject::GObjObjects()->Data[ 49338 ];

	UPgPlugInInterface_eventSyncServerPlugIns_Parms SyncServerPlugIns_Parms;
	SyncServerPlugIns_Parms.plugInRep = plugInRep;

	pFnSyncServerPlugIns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSyncServerPlugIns, &SyncServerPlugIns_Parms, NULL );

	pFnSyncServerPlugIns->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInInterface.GetConditionalPlugInField
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgPlugInInterface::GetConditionalPlugInField ( )
{
	static UFunction* pFnGetConditionalPlugInField = NULL;

	if ( ! pFnGetConditionalPlugInField )
		pFnGetConditionalPlugInField = (UFunction*) UObject::GObjObjects()->Data[ 49336 ];

	UPgPlugInInterface_execGetConditionalPlugInField_Parms GetConditionalPlugInField_Parms;

	pFnGetConditionalPlugInField->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetConditionalPlugInField, &GetConditionalPlugInField_Parms, NULL );

	pFnGetConditionalPlugInField->FunctionFlags |= 0x400;

	return GetConditionalPlugInField_Parms.ReturnValue;
};

// Function GridGame.PgPlugInInterface.SetConditionalPlugInField
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            plugInRep                      ( CPF_Parm )

void UPgPlugInInterface::SetConditionalPlugInField ( int plugInRep )
{
	static UFunction* pFnSetConditionalPlugInField = NULL;

	if ( ! pFnSetConditionalPlugInField )
		pFnSetConditionalPlugInField = (UFunction*) UObject::GObjObjects()->Data[ 49334 ];

	UPgPlugInInterface_execSetConditionalPlugInField_Parms SetConditionalPlugInField_Parms;
	SetConditionalPlugInField_Parms.plugInRep = plugInRep;

	pFnSetConditionalPlugInField->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetConditionalPlugInField, &SetConditionalPlugInField_Parms, NULL );

	pFnSetConditionalPlugInField->FunctionFlags |= 0x400;
};

// Function GridGame.PgSimpleMenuMovie.Start
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UPgSimpleMenuMovie::eventStart ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 50103 ];

	UPgSimpleMenuMovie_eventStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	pFnStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	pFnStart->FunctionFlags |= 0x400;

	return Start_Parms.ReturnValue;
};

// Function GridGame.PgTargetableInterface.CanTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   thePawn                        ( CPF_Parm )

bool UPgTargetableInterface::CanTarget ( class APawn* thePawn )
{
	static UFunction* pFnCanTarget = NULL;

	if ( ! pFnCanTarget )
		pFnCanTarget = (UFunction*) UObject::GObjObjects()->Data[ 50262 ];

	UPgTargetableInterface_execCanTarget_Parms CanTarget_Parms;
	CanTarget_Parms.thePawn = thePawn;

	pFnCanTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanTarget, &CanTarget_Parms, NULL );

	pFnCanTarget->FunctionFlags |= 0x400;

	return CanTarget_Parms.ReturnValue;
};

// Function GridGame.PgTargetableInterface.GetMaxTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgTargetableInterface::GetMaxTargetableDist ( )
{
	static UFunction* pFnGetMaxTargetableDist = NULL;

	if ( ! pFnGetMaxTargetableDist )
		pFnGetMaxTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50260 ];

	UPgTargetableInterface_execGetMaxTargetableDist_Parms GetMaxTargetableDist_Parms;

	pFnGetMaxTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxTargetableDist, &GetMaxTargetableDist_Parms, NULL );

	pFnGetMaxTargetableDist->FunctionFlags |= 0x400;

	return GetMaxTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgTargetableInterface.GetMinTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgTargetableInterface::GetMinTargetableDist ( )
{
	static UFunction* pFnGetMinTargetableDist = NULL;

	if ( ! pFnGetMinTargetableDist )
		pFnGetMinTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50258 ];

	UPgTargetableInterface_execGetMinTargetableDist_Parms GetMinTargetableDist_Parms;

	pFnGetMinTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinTargetableDist, &GetMinTargetableDist_Parms, NULL );

	pFnGetMinTargetableDist->FunctionFlags |= 0x400;

	return GetMinTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgActorPlugIn.Detach
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugIn::Detach ( )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 40773 ];

	UPgActorPlugIn_execDetach_Parms Detach_Parms;

	pFnDetach->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );

	pFnDetach->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugIn.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugIn::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40772 ];

	UPgActorPlugIn_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugIn.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugIn::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40771 ];

	UPgActorPlugIn_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugIn.OnDeactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgActorPlugIn::OnDeactivate ( )
{
	static UFunction* pFnOnDeactivate = NULL;

	if ( ! pFnOnDeactivate )
		pFnOnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40769 ];

	UPgActorPlugIn_execOnDeactivate_Parms OnDeactivate_Parms;

	pFnOnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDeactivate, &OnDeactivate_Parms, NULL );

	pFnOnDeactivate->FunctionFlags |= 0x400;

	return OnDeactivate_Parms.ReturnValue;
};

// Function GridGame.PgActorPlugIn.OnActivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgActorPlugIn::OnActivate ( )
{
	static UFunction* pFnOnActivate = NULL;

	if ( ! pFnOnActivate )
		pFnOnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40767 ];

	UPgActorPlugIn_execOnActivate_Parms OnActivate_Parms;

	pFnOnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnActivate, &OnActivate_Parms, NULL );

	pFnOnActivate->FunctionFlags |= 0x400;

	return OnActivate_Parms.ReturnValue;
};

// Function GridGame.PgActorPlugInActorFactory.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInActorFactory::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40788 ];

	UPgActorPlugInActorFactory_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInActorFactory.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInActorFactory::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40787 ];

	UPgActorPlugInActorFactory_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInAkSetState.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInAkSetState::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40796 ];

	UPgActorPlugInAkSetState_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInAkSetSwitch.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInAkSetSwitch::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40799 ];

	UPgActorPlugInAkSetSwitch_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInComponent.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInComponent::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40833 ];

	UPgActorPlugInComponent_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInComponent.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInComponent::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40832 ];

	UPgActorPlugInComponent_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInConditional.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInConditional::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40851 ];

	UPgActorPlugInConditional_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInConditional.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInConditional::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40850 ];

	UPgActorPlugInConditional_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInConditional.Detach
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInConditional::Detach ( )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 40849 ];

	UPgActorPlugInConditional_execDetach_Parms Detach_Parms;

	pFnDetach->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );

	pFnDetach->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInEmitter.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInEmitter::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40823 ];

	UPgActorPlugInEmitter_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInEmitter.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInEmitter::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40822 ];

	UPgActorPlugInEmitter_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInBeamTrailEmitter.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInBeamTrailEmitter::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40827 ];

	UPgActorPlugInBeamTrailEmitter_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInBeamTrailEmitter.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInBeamTrailEmitter::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40826 ];

	UPgActorPlugInBeamTrailEmitter_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInFireSideEffect.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInFireSideEffect::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40859 ];

	UPgActorPlugInFireSideEffect_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInFireSideEffect.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInFireSideEffect::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40858 ];

	UPgActorPlugInFireSideEffect_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInLightWall.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInLightWall::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40872 ];

	UPgActorPlugInLightWall_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInMaterialParam.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInMaterialParam::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40894 ];

	UPgActorPlugInMaterialParam_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInModifyCameraScore.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInModifyCameraScore::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40900 ];

	UPgActorPlugInModifyCameraScore_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInModifyCameraScore.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInModifyCameraScore::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40899 ];

	UPgActorPlugInModifyCameraScore_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInModifyProperty.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInModifyProperty::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40914 ];

	UPgActorPlugInModifyProperty_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInModifyProperty.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInModifyProperty::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40913 ];

	UPgActorPlugInModifyProperty_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInPhysMatEffect.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInPhysMatEffect::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40918 ];

	UPgActorPlugInPhysMatEffect_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInResetFreeCamera.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInResetFreeCamera::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40940 ];

	UPgActorPlugInResetFreeCamera_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSeqAction.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSeqAction::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40943 ];

	UPgActorPlugInSeqAction_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSetCameraStyle.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSetCameraStyle::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40945 ];

	UPgActorPlugInSetCameraStyle_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSetMaterial.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSetMaterial::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40951 ];

	UPgActorPlugInSetMaterial_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSetPhysics.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSetPhysics::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40953 ];

	UPgActorPlugInSetPhysics_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSetSkeletalMesh.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSetSkeletalMesh::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40956 ];

	UPgActorPlugInSetSkeletalMesh_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSound.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSound::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 40964 ];

	UPgActorPlugInSound_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInSound.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInSound::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40963 ];

	UPgActorPlugInSound_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgActorPlugInTakeDamage.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgActorPlugInTakeDamage::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 40967 ];

	UPgActorPlugInTakeDamage_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawnPlugInSpecialMove.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPawnPlugInSpecialMove::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 48987 ];

	UPgPawnPlugInSpecialMove_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawnPlugInSpecialMove.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPawnPlugInSpecialMove::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 48986 ];

	UPgPawnPlugInSpecialMove_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawnPlugInVehicle.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPawnPlugInVehicle::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 49005 ];

	UPgPawnPlugInVehicle_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.SetLockTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  lockTarget                     ( CPF_Parm )

void UPgPlayerPlugInLockOn::SetLockTarget ( unsigned long lockTarget )
{
	static UFunction* pFnSetLockTarget = NULL;

	if ( ! pFnSetLockTarget )
		pFnSetLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 44904 ];

	UPgPlayerPlugInLockOn_execSetLockTarget_Parms SetLockTarget_Parms;
	SetLockTarget_Parms.lockTarget = lockTarget;

	pFnSetLockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLockTarget, &SetLockTarget_Parms, NULL );

	pFnSetLockTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlayerPlugInLockOn::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 44903 ];

	UPgPlayerPlugInLockOn_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlayerPlugInLockOn::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 44902 ];

	UPgPlayerPlugInLockOn_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.SetTargetScan
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  targetScan                     ( CPF_Parm )
// float                          targetScanAngle                ( CPF_OptionalParm | CPF_Parm )

void UPgPlayerPlugInLockOn::SetTargetScan ( unsigned char targetScan, float targetScanAngle )
{
	static UFunction* pFnSetTargetScan = NULL;

	if ( ! pFnSetTargetScan )
		pFnSetTargetScan = (UFunction*) UObject::GObjObjects()->Data[ 44898 ];

	UPgPlayerPlugInLockOn_execSetTargetScan_Parms SetTargetScan_Parms;
	SetTargetScan_Parms.targetScan = targetScan;
	SetTargetScan_Parms.targetScanAngle = targetScanAngle;

	pFnSetTargetScan->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetScan, &SetTargetScan_Parms, NULL );

	pFnSetTargetScan->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.SwitchTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlayerPlugInLockOn::SwitchTarget ( )
{
	static UFunction* pFnSwitchTarget = NULL;

	if ( ! pFnSwitchTarget )
		pFnSwitchTarget = (UFunction*) UObject::GObjObjects()->Data[ 44897 ];

	UPgPlayerPlugInLockOn_execSwitchTarget_Parms SwitchTarget_Parms;

	pFnSwitchTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwitchTarget, &SwitchTarget_Parms, NULL );

	pFnSwitchTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInLockOn.GetTargets
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        Targets                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgPlayerPlugInLockOn::GetTargets ( TArray< class AActor* >* Targets )
{
	static UFunction* pFnGetTargets = NULL;

	if ( ! pFnGetTargets )
		pFnGetTargets = (UFunction*) UObject::GObjObjects()->Data[ 44894 ];

	UPgPlayerPlugInLockOn_execGetTargets_Parms GetTargets_Parms;

	pFnGetTargets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargets, &GetTargets_Parms, NULL );

	pFnGetTargets->FunctionFlags |= 0x400;

	if ( Targets )
		memcpy ( Targets, &GetTargets_Parms.Targets, 0xC );
};

// Function GridGame.PgPlayerPlugInLockOn.GetTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  TargetClass                    ( CPF_OptionalParm | CPF_Parm )

class AActor* UPgPlayerPlugInLockOn::GetTarget ( class UClass* TargetClass )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 44891 ];

	UPgPlayerPlugInLockOn_execGetTarget_Parms GetTarget_Parms;
	GetTarget_Parms.TargetClass = TargetClass;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function GridGame.PgPlayerPlugInLockOn.DisplayDebug
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgPlayerPlugInLockOn::DisplayDebug ( float DeltaTime )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 44888 ];

	UPgPlayerPlugInLockOn_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.DeltaTime = DeltaTime;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerPlugInTargetSelector.SetLockTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  lockTarget                     ( CPF_Parm )

void UPgPlayerPlugInTargetSelector::SetLockTarget ( unsigned long lockTarget )
{
	static UFunction* pFnSetLockTarget = NULL;

	if ( ! pFnSetLockTarget )
		pFnSetLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 45909 ];

	UPgPlayerPlugInTargetSelector_execSetLockTarget_Parms SetLockTarget_Parms;
	SetLockTarget_Parms.lockTarget = lockTarget;

	pFnSetLockTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLockTarget, &SetLockTarget_Parms, NULL );

	pFnSetLockTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInList.Detach
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlugInList::Detach ( )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 41560 ];

	UPgPlugInList_execDetach_Parms Detach_Parms;

	pFnDetach->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );

	pFnDetach->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInList.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlugInList::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 41559 ];

	UPgPlugInList_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlugInList.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgPlugInList::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 41558 ];

	UPgPlugInList_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgDynamicSMActor.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgDynamicSMActor::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 44576 ];

	APgDynamicSMActor_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgDynamicSMActor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 44571 ];

	APgDynamicSMActor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.TouchDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgDynamicSMActor::TouchDamage ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouchDamage = NULL;

	if ( ! pFnTouchDamage )
		pFnTouchDamage = (UFunction*) UObject::GObjObjects()->Data[ 44567 ];

	APgDynamicSMActor_execTouchDamage_Parms TouchDamage_Parms;
	TouchDamage_Parms.Other = Other;
	memcpy ( &TouchDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TouchDamage_Parms.HitNormal, &HitNormal, 0xC );

	pFnTouchDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTouchDamage, &TouchDamage_Parms, NULL );

	pFnTouchDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgDynamicSMActor.Detach
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgDynamicSMActor::eventDetach ( class AActor* Other )
{
	static UFunction* pFnDetach = NULL;

	if ( ! pFnDetach )
		pFnDetach = (UFunction*) UObject::GObjObjects()->Data[ 44565 ];

	APgDynamicSMActor_eventDetach_Parms Detach_Parms;
	Detach_Parms.Other = Other;

	this->ProcessEvent ( pFnDetach, &Detach_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.Attach
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgDynamicSMActor::eventAttach ( class AActor* Other )
{
	static UFunction* pFnAttach = NULL;

	if ( ! pFnAttach )
		pFnAttach = (UFunction*) UObject::GObjObjects()->Data[ 44563 ];

	APgDynamicSMActor_eventAttach_Parms Attach_Parms;
	Attach_Parms.Other = Other;

	this->ProcessEvent ( pFnAttach, &Attach_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgDynamicSMActor::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 44562 ];

	APgDynamicSMActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgDynamicSMActor::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 44561 ];

	APgDynamicSMActor_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function GridGame.PgDynamicSMActor.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgDynamicSMActor::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 44557 ];

	APgDynamicSMActor_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgDynamicSMActor.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgDynamicSMActor::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 44555 ];

	APgDynamicSMActor_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgPathNode.IsUsableAnchorFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool APgPathNode::IsUsableAnchorFor ( class APawn* P )
{
	static UFunction* pFnIsUsableAnchorFor = NULL;

	if ( ! pFnIsUsableAnchorFor )
		pFnIsUsableAnchorFor = (UFunction*) UObject::GObjObjects()->Data[ 48959 ];

	APgPathNode_execIsUsableAnchorFor_Parms IsUsableAnchorFor_Parms;
	IsUsableAnchorFor_Parms.P = P;

	pFnIsUsableAnchorFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsUsableAnchorFor, &IsUsableAnchorFor_Parms, NULL );

	pFnIsUsableAnchorFor->FunctionFlags |= 0x400;

	return IsUsableAnchorFor_Parms.ReturnValue;
};

// Function GridGame.PgRallyPoint.GenericToggle
// [0x00020102] 
// Parameters infos:

void APgRallyPoint::GenericToggle ( )
{
	static UFunction* pFnGenericToggle = NULL;

	if ( ! pFnGenericToggle )
		pFnGenericToggle = (UFunction*) UObject::GObjObjects()->Data[ 49598 ];

	APgRallyPoint_execGenericToggle_Parms GenericToggle_Parms;

	this->ProcessEvent ( pFnGenericToggle, &GenericToggle_Parms, NULL );
};

// Function GridGame.PgRallyPoint.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void APgRallyPoint::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 49596 ];

	APgRallyPoint_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function GridGame.PgRallyPoint.UpdatePawnCounts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgRallyPoint::UpdatePawnCounts ( )
{
	static UFunction* pFnUpdatePawnCounts = NULL;

	if ( ! pFnUpdatePawnCounts )
		pFnUpdatePawnCounts = (UFunction*) UObject::GObjObjects()->Data[ 49595 ];

	APgRallyPoint_execUpdatePawnCounts_Parms UpdatePawnCounts_Parms;

	pFnUpdatePawnCounts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePawnCounts, &UpdatePawnCounts_Parms, NULL );

	pFnUpdatePawnCounts->FunctionFlags |= 0x400;
};

// Function GridGame.PgRallyPoint.GetAllRallyPointActors
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        rallyPointActors               ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgRallyPoint::GetAllRallyPointActors ( TArray< class AActor* >* rallyPointActors )
{
	static UFunction* pFnGetAllRallyPointActors = NULL;

	if ( ! pFnGetAllRallyPointActors )
		pFnGetAllRallyPointActors = (UFunction*) UObject::GObjObjects()->Data[ 49592 ];

	APgRallyPoint_execGetAllRallyPointActors_Parms GetAllRallyPointActors_Parms;

	pFnGetAllRallyPointActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllRallyPointActors, &GetAllRallyPointActors_Parms, NULL );

	pFnGetAllRallyPointActors->FunctionFlags |= 0x400;

	if ( rallyPointActors )
		memcpy ( rallyPointActors, &GetAllRallyPointActors_Parms.rallyPointActors, 0xC );
};

// Function GridGame.PgRallyPoint.IsValidRallyPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgAIController*         Controller                     ( CPF_Parm )

bool APgRallyPoint::IsValidRallyPoint ( class APgAIController* Controller )
{
	static UFunction* pFnIsValidRallyPoint = NULL;

	if ( ! pFnIsValidRallyPoint )
		pFnIsValidRallyPoint = (UFunction*) UObject::GObjObjects()->Data[ 49589 ];

	APgRallyPoint_execIsValidRallyPoint_Parms IsValidRallyPoint_Parms;
	IsValidRallyPoint_Parms.Controller = Controller;

	pFnIsValidRallyPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidRallyPoint, &IsValidRallyPoint_Parms, NULL );

	pFnIsValidRallyPoint->FunctionFlags |= 0x400;

	return IsValidRallyPoint_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnPoint.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void APgPedestrianSpawnPoint::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 49035 ];

	APgPedestrianSpawnPoint_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function GridGame.PgAIController.Restart
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void APgAIController::Restart ( unsigned long bVehicleTransition )
{
	static UFunction* pFnRestart = NULL;

	if ( ! pFnRestart )
		pFnRestart = (UFunction*) UObject::GObjObjects()->Data[ 41307 ];

	APgAIController_execRestart_Parms Restart_Parms;
	Restart_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnRestart, &Restart_Parms, NULL );
};

// Function GridGame.PgAIController.CanFireWeapon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weap                           ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool APgAIController::CanFireWeapon ( class AWeapon* Weap, unsigned char FireModeNum )
{
	static UFunction* pFnCanFireWeapon = NULL;

	if ( ! pFnCanFireWeapon )
		pFnCanFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 41303 ];

	APgAIController_execCanFireWeapon_Parms CanFireWeapon_Parms;
	CanFireWeapon_Parms.Weap = Weap;
	CanFireWeapon_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnCanFireWeapon, &CanFireWeapon_Parms, NULL );

	return CanFireWeapon_Parms.ReturnValue;
};

// Function GridGame.PgAIController.PawnDied
// [0x00020002] 
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )

void APgAIController::PawnDied ( class APawn* inPawn )
{
	static UFunction* pFnPawnDied = NULL;

	if ( ! pFnPawnDied )
		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 41301 ];

	APgAIController_execPawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.inPawn = inPawn;

	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
};

// Function GridGame.PgAIController.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          Delta                          ( CPF_Parm )

void APgAIController::eventTick ( float Delta )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 41299 ];

	APgAIController_eventTick_Parms Tick_Parms;
	Tick_Parms.Delta = Delta;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function GridGame.PgAIController.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgAIController::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41294 ];

	APgAIController_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgAIController.ReceiveProjectileWarning
// [0x00820002] 
// Parameters infos:
// class AProjectile*             Proj                           ( CPF_Parm )

void APgAIController::ReceiveProjectileWarning ( class AProjectile* Proj )
{
	static UFunction* pFnReceiveProjectileWarning = NULL;

	if ( ! pFnReceiveProjectileWarning )
		pFnReceiveProjectileWarning = (UFunction*) UObject::GObjObjects()->Data[ 41290 ];

	APgAIController_execReceiveProjectileWarning_Parms ReceiveProjectileWarning_Parms;
	ReceiveProjectileWarning_Parms.Proj = Proj;

	this->ProcessEvent ( pFnReceiveProjectileWarning, &ReceiveProjectileWarning_Parms, NULL );
};

// Function GridGame.PgAIController.ReceiveWarning
// [0x00820002] 
// Parameters infos:
// class APawn*                   shooter                        ( CPF_Parm )
// float                          projSpeed                      ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )

void APgAIController::ReceiveWarning ( class APawn* shooter, float projSpeed, struct FVector FireDir )
{
	static UFunction* pFnReceiveWarning = NULL;

	if ( ! pFnReceiveWarning )
		pFnReceiveWarning = (UFunction*) UObject::GObjObjects()->Data[ 41284 ];

	APgAIController_execReceiveWarning_Parms ReceiveWarning_Parms;
	ReceiveWarning_Parms.shooter = shooter;
	ReceiveWarning_Parms.projSpeed = projSpeed;
	memcpy ( &ReceiveWarning_Parms.FireDir, &FireDir, 0xC );

	this->ProcessEvent ( pFnReceiveWarning, &ReceiveWarning_Parms, NULL );
};

// Function GridGame.PgAIController.ReceiveFireWarning
// [0x00820002] 
// Parameters infos:
// class AActor*                  shooter                        ( CPF_Parm )
// class AWeapon*                 FiredWeapon                    ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )

void APgAIController::ReceiveFireWarning ( class AActor* shooter, class AWeapon* FiredWeapon, struct FVector FireDir )
{
	static UFunction* pFnReceiveFireWarning = NULL;

	if ( ! pFnReceiveFireWarning )
		pFnReceiveFireWarning = (UFunction*) UObject::GObjObjects()->Data[ 41278 ];

	APgAIController_execReceiveFireWarning_Parms ReceiveFireWarning_Parms;
	ReceiveFireWarning_Parms.shooter = shooter;
	ReceiveFireWarning_Parms.FiredWeapon = FiredWeapon;
	memcpy ( &ReceiveFireWarning_Parms.FireDir, &FireDir, 0xC );

	this->ProcessEvent ( pFnReceiveFireWarning, &ReceiveFireWarning_Parms, NULL );
};

// Function GridGame.PgAIController.GetAdjustedAimFor
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 projStart                      ( CPF_Parm )

struct FRotator APgAIController::GetAdjustedAimFor ( class AWeapon* InWeapon, struct FVector projStart )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 41270 ];

	APgAIController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.InWeapon = InWeapon;
	memcpy ( &GetAdjustedAimFor_Parms.projStart, &projStart, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function GridGame.PgAIController.NotifyLandedFromHighFall
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APgAIController::eventNotifyLandedFromHighFall ( )
{
	static UFunction* pFnNotifyLandedFromHighFall = NULL;

	if ( ! pFnNotifyLandedFromHighFall )
		pFnNotifyLandedFromHighFall = (UFunction*) UObject::GObjObjects()->Data[ 41269 ];

	APgAIController_eventNotifyLandedFromHighFall_Parms NotifyLandedFromHighFall_Parms;

	this->ProcessEvent ( pFnNotifyLandedFromHighFall, &NotifyLandedFromHighFall_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyRagdollKnockdown
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APgAIController::eventNotifyRagdollKnockdown ( )
{
	static UFunction* pFnNotifyRagdollKnockdown = NULL;

	if ( ! pFnNotifyRagdollKnockdown )
		pFnNotifyRagdollKnockdown = (UFunction*) UObject::GObjObjects()->Data[ 41268 ];

	APgAIController_eventNotifyRagdollKnockdown_Parms NotifyRagdollKnockdown_Parms;

	this->ProcessEvent ( pFnNotifyRagdollKnockdown, &NotifyRagdollKnockdown_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Killed                         ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )

void APgAIController::NotifyKilled ( class AController* Killer, class AController* Killed, class APawn* KilledPawn )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 41264 ];

	APgAIController_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyTakeHit
// [0x00020000] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void APgAIController::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 41258 ];

	APgAIController_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyWeaponFiredShot
// [0x00020000] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )
// unsigned char                  FiringMode                     ( CPF_Parm )

void APgAIController::NotifyWeaponFiredShot ( class AWeapon* Weapon, unsigned char FiringMode )
{
	static UFunction* pFnNotifyWeaponFiredShot = NULL;

	if ( ! pFnNotifyWeaponFiredShot )
		pFnNotifyWeaponFiredShot = (UFunction*) UObject::GObjObjects()->Data[ 41255 ];

	APgAIController_execNotifyWeaponFiredShot_Parms NotifyWeaponFiredShot_Parms;
	NotifyWeaponFiredShot_Parms.Weapon = Weapon;
	NotifyWeaponFiredShot_Parms.FiringMode = FiringMode;

	this->ProcessEvent ( pFnNotifyWeaponFiredShot, &NotifyWeaponFiredShot_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyWeaponFinishedReloading
// [0x00020000] 
// Parameters infos:

void APgAIController::NotifyWeaponFinishedReloading ( )
{
	static UFunction* pFnNotifyWeaponFinishedReloading = NULL;

	if ( ! pFnNotifyWeaponFinishedReloading )
		pFnNotifyWeaponFinishedReloading = (UFunction*) UObject::GObjObjects()->Data[ 41254 ];

	APgAIController_execNotifyWeaponFinishedReloading_Parms NotifyWeaponFinishedReloading_Parms;

	this->ProcessEvent ( pFnNotifyWeaponFinishedReloading, &NotifyWeaponFinishedReloading_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyWeaponFinishedFiring
// [0x00020000] 
// Parameters infos:
// class AWeapon*                 W                              ( CPF_Parm )
// unsigned char                  FireMode                       ( CPF_Parm )

void APgAIController::NotifyWeaponFinishedFiring ( class AWeapon* W, unsigned char FireMode )
{
	static UFunction* pFnNotifyWeaponFinishedFiring = NULL;

	if ( ! pFnNotifyWeaponFinishedFiring )
		pFnNotifyWeaponFinishedFiring = (UFunction*) UObject::GObjObjects()->Data[ 41251 ];

	APgAIController_execNotifyWeaponFinishedFiring_Parms NotifyWeaponFinishedFiring_Parms;
	NotifyWeaponFinishedFiring_Parms.W = W;
	NotifyWeaponFinishedFiring_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnNotifyWeaponFinishedFiring, &NotifyWeaponFinishedFiring_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyWeaponFired
// [0x00020000] 
// Parameters infos:
// class AWeapon*                 W                              ( CPF_Parm )
// unsigned char                  FireMode                       ( CPF_Parm )

void APgAIController::NotifyWeaponFired ( class AWeapon* W, unsigned char FireMode )
{
	static UFunction* pFnNotifyWeaponFired = NULL;

	if ( ! pFnNotifyWeaponFired )
		pFnNotifyWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 41248 ];

	APgAIController_execNotifyWeaponFired_Parms NotifyWeaponFired_Parms;
	NotifyWeaponFired_Parms.W = W;
	NotifyWeaponFired_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnNotifyWeaponFired, &NotifyWeaponFired_Parms, NULL );
};

// Function GridGame.PgAIController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void APgAIController::eventPossess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 41245 ];

	APgAIController_eventPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function GridGame.PgAIController.PlayerAimingAt
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   aimer                          ( CPF_Parm )

void APgAIController::eventPlayerAimingAt ( class APawn* aimer )
{
	static UFunction* pFnPlayerAimingAt = NULL;

	if ( ! pFnPlayerAimingAt )
		pFnPlayerAimingAt = (UFunction*) UObject::GObjObjects()->Data[ 41243 ];

	APgAIController_eventPlayerAimingAt_Parms PlayerAimingAt_Parms;
	PlayerAimingAt_Parms.aimer = aimer;

	this->ProcessEvent ( pFnPlayerAimingAt, &PlayerAimingAt_Parms, NULL );
};

// Function GridGame.PgAIController.FriendlyDied
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   friendly                       ( CPF_Parm )

void APgAIController::eventFriendlyDied ( class APawn* friendly )
{
	static UFunction* pFnFriendlyDied = NULL;

	if ( ! pFnFriendlyDied )
		pFnFriendlyDied = (UFunction*) UObject::GObjObjects()->Data[ 41241 ];

	APgAIController_eventFriendlyDied_Parms FriendlyDied_Parms;
	FriendlyDied_Parms.friendly = friendly;

	this->ProcessEvent ( pFnFriendlyDied, &FriendlyDied_Parms, NULL );
};

// Function GridGame.PgAIController.PlayerNotVisible
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Player                         ( CPF_Parm )

void APgAIController::eventPlayerNotVisible ( class APawn* Player )
{
	static UFunction* pFnPlayerNotVisible = NULL;

	if ( ! pFnPlayerNotVisible )
		pFnPlayerNotVisible = (UFunction*) UObject::GObjObjects()->Data[ 41239 ];

	APgAIController_eventPlayerNotVisible_Parms PlayerNotVisible_Parms;
	PlayerNotVisible_Parms.Player = Player;

	this->ProcessEvent ( pFnPlayerNotVisible, &PlayerNotVisible_Parms, NULL );
};

// Function GridGame.PgAIController.HearNoise
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void APgAIController::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 41235 ];

	APgAIController_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function GridGame.PgAIController.EnemyNotVisible
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgAIController::eventEnemyNotVisible ( )
{
	static UFunction* pFnEnemyNotVisible = NULL;

	if ( ! pFnEnemyNotVisible )
		pFnEnemyNotVisible = (UFunction*) UObject::GObjObjects()->Data[ 41234 ];

	APgAIController_eventEnemyNotVisible_Parms EnemyNotVisible_Parms;

	this->ProcessEvent ( pFnEnemyNotVisible, &EnemyNotVisible_Parms, NULL );
};

// Function GridGame.PgAIController.SeeMonster
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   seenMonster                    ( CPF_Parm )

void APgAIController::eventSeeMonster ( class APawn* seenMonster )
{
	static UFunction* pFnSeeMonster = NULL;

	if ( ! pFnSeeMonster )
		pFnSeeMonster = (UFunction*) UObject::GObjObjects()->Data[ 41232 ];

	APgAIController_eventSeeMonster_Parms SeeMonster_Parms;
	SeeMonster_Parms.seenMonster = seenMonster;

	this->ProcessEvent ( pFnSeeMonster, &SeeMonster_Parms, NULL );
};

// Function GridGame.PgAIController.SeePlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   seenPlayer                     ( CPF_Parm )

void APgAIController::eventSeePlayer ( class APawn* seenPlayer )
{
	static UFunction* pFnSeePlayer = NULL;

	if ( ! pFnSeePlayer )
		pFnSeePlayer = (UFunction*) UObject::GObjObjects()->Data[ 41230 ];

	APgAIController_eventSeePlayer_Parms SeePlayer_Parms;
	SeePlayer_Parms.seenPlayer = seenPlayer;

	this->ProcessEvent ( pFnSeePlayer, &SeePlayer_Parms, NULL );
};

// Function GridGame.PgAIController.NotifyLanded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

bool APgAIController::eventNotifyLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnNotifyLanded = NULL;

	if ( ! pFnNotifyLanded )
		pFnNotifyLanded = (UFunction*) UObject::GObjObjects()->Data[ 41226 ];

	APgAIController_eventNotifyLanded_Parms NotifyLanded_Parms;
	memcpy ( &NotifyLanded_Parms.HitNormal, &HitNormal, 0xC );
	NotifyLanded_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnNotifyLanded, &NotifyLanded_Parms, NULL );

	return NotifyLanded_Parms.ReturnValue;
};

// Function GridGame.PgAIController.NotifyBump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool APgAIController::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 41218 ];

	APgAIController_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function GridGame.PgAIController.NotifyHitWall
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

bool APgAIController::eventNotifyHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyHitWall = NULL;

	if ( ! pFnNotifyHitWall )
		pFnNotifyHitWall = (UFunction*) UObject::GObjObjects()->Data[ 41214 ];

	APgAIController_eventNotifyHitWall_Parms NotifyHitWall_Parms;
	memcpy ( &NotifyHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyHitWall, &NotifyHitWall_Parms, NULL );

	return NotifyHitWall_Parms.ReturnValue;
};

// Function GridGame.PgAIController.OnCheckCondition
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class UPgSeqAct_CheckCondition* inAction                       ( CPF_Parm )

void APgAIController::OnCheckCondition ( class UPgSeqAct_CheckCondition* inAction )
{
	static UFunction* pFnOnCheckCondition = NULL;

	if ( ! pFnOnCheckCondition )
		pFnOnCheckCondition = (UFunction*) UObject::GObjObjects()->Data[ 41212 ];

	APgAIController_execOnCheckCondition_Parms OnCheckCondition_Parms;
	OnCheckCondition_Parms.inAction = inAction;

	pFnOnCheckCondition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCheckCondition, &OnCheckCondition_Parms, NULL );

	pFnOnCheckCondition->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.Release
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgObjective*            Obj                            ( CPF_Parm )

void APgAIController::Release ( class APgObjective* Obj )
{
	static UFunction* pFnRelease = NULL;

	if ( ! pFnRelease )
		pFnRelease = (UFunction*) UObject::GObjObjects()->Data[ 41210 ];

	APgAIController_execRelease_Parms Release_Parms;
	Release_Parms.Obj = Obj;

	pFnRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRelease, &Release_Parms, NULL );

	pFnRelease->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.Claim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgObjective*            Obj                            ( CPF_Parm )

void APgAIController::Claim ( class APgObjective* Obj )
{
	static UFunction* pFnClaim = NULL;

	if ( ! pFnClaim )
		pFnClaim = (UFunction*) UObject::GObjObjects()->Data[ 41208 ];

	APgAIController_execClaim_Parms Claim_Parms;
	Claim_Parms.Obj = Obj;

	pFnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaim, &Claim_Parms, NULL );

	pFnClaim->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.VehicleCourseCorrect
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::VehicleCourseCorrect ( )
{
	static UFunction* pFnVehicleCourseCorrect = NULL;

	if ( ! pFnVehicleCourseCorrect )
		pFnVehicleCourseCorrect = (UFunction*) UObject::GObjObjects()->Data[ 41207 ];

	APgAIController_execVehicleCourseCorrect_Parms VehicleCourseCorrect_Parms;

	pFnVehicleCourseCorrect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVehicleCourseCorrect, &VehicleCourseCorrect_Parms, NULL );

	pFnVehicleCourseCorrect->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.LeaveVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::LeaveVehicle ( )
{
	static UFunction* pFnLeaveVehicle = NULL;

	if ( ! pFnLeaveVehicle )
		pFnLeaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41206 ];

	APgAIController_execLeaveVehicle_Parms LeaveVehicle_Parms;

	pFnLeaveVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveVehicle, &LeaveVehicle_Parms, NULL );

	pFnLeaveVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.EnterVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::EnterVehicle ( )
{
	static UFunction* pFnEnterVehicle = NULL;

	if ( ! pFnEnterVehicle )
		pFnEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41205 ];

	APgAIController_execEnterVehicle_Parms EnterVehicle_Parms;

	pFnEnterVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnterVehicle, &EnterVehicle_Parms, NULL );

	pFnEnterVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.ShouldLeaveVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::ShouldLeaveVehicle ( )
{
	static UFunction* pFnShouldLeaveVehicle = NULL;

	if ( ! pFnShouldLeaveVehicle )
		pFnShouldLeaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41203 ];

	APgAIController_execShouldLeaveVehicle_Parms ShouldLeaveVehicle_Parms;

	pFnShouldLeaveVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldLeaveVehicle, &ShouldLeaveVehicle_Parms, NULL );

	pFnShouldLeaveVehicle->FunctionFlags |= 0x400;

	return ShouldLeaveVehicle_Parms.ReturnValue;
};

// Function GridGame.PgAIController.ShouldEnterVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::ShouldEnterVehicle ( )
{
	static UFunction* pFnShouldEnterVehicle = NULL;

	if ( ! pFnShouldEnterVehicle )
		pFnShouldEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41201 ];

	APgAIController_execShouldEnterVehicle_Parms ShouldEnterVehicle_Parms;

	pFnShouldEnterVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldEnterVehicle, &ShouldEnterVehicle_Parms, NULL );

	pFnShouldEnterVehicle->FunctionFlags |= 0x400;

	return ShouldEnterVehicle_Parms.ReturnValue;
};

// Function GridGame.PgAIController.CanLeaveVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::CanLeaveVehicle ( )
{
	static UFunction* pFnCanLeaveVehicle = NULL;

	if ( ! pFnCanLeaveVehicle )
		pFnCanLeaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41199 ];

	APgAIController_execCanLeaveVehicle_Parms CanLeaveVehicle_Parms;

	pFnCanLeaveVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanLeaveVehicle, &CanLeaveVehicle_Parms, NULL );

	pFnCanLeaveVehicle->FunctionFlags |= 0x400;

	return CanLeaveVehicle_Parms.ReturnValue;
};

// Function GridGame.PgAIController.CanEnterVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::CanEnterVehicle ( )
{
	static UFunction* pFnCanEnterVehicle = NULL;

	if ( ! pFnCanEnterVehicle )
		pFnCanEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 41197 ];

	APgAIController_execCanEnterVehicle_Parms CanEnterVehicle_Parms;

	pFnCanEnterVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanEnterVehicle, &CanEnterVehicle_Parms, NULL );

	pFnCanEnterVehicle->FunctionFlags |= 0x400;

	return CanEnterVehicle_Parms.ReturnValue;
};

// Function GridGame.PgAIController.IsDriving
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::IsDriving ( )
{
	static UFunction* pFnIsDriving = NULL;

	if ( ! pFnIsDriving )
		pFnIsDriving = (UFunction*) UObject::GObjObjects()->Data[ 41195 ];

	APgAIController_execIsDriving_Parms IsDriving_Parms;

	pFnIsDriving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDriving, &IsDriving_Parms, NULL );

	pFnIsDriving->FunctionFlags |= 0x400;

	return IsDriving_Parms.ReturnValue;
};

// Function GridGame.PgAIController.LeaveGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::LeaveGame ( )
{
	static UFunction* pFnLeaveGame = NULL;

	if ( ! pFnLeaveGame )
		pFnLeaveGame = (UFunction*) UObject::GObjObjects()->Data[ 41194 ];

	APgAIController_execLeaveGame_Parms LeaveGame_Parms;

	pFnLeaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveGame, &LeaveGame_Parms, NULL );

	pFnLeaveGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.CanLeaveGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::CanLeaveGame ( )
{
	static UFunction* pFnCanLeaveGame = NULL;

	if ( ! pFnCanLeaveGame )
		pFnCanLeaveGame = (UFunction*) UObject::GObjObjects()->Data[ 41192 ];

	APgAIController_execCanLeaveGame_Parms CanLeaveGame_Parms;

	pFnCanLeaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanLeaveGame, &CanLeaveGame_Parms, NULL );

	pFnCanLeaveGame->FunctionFlags |= 0x400;

	return CanLeaveGame_Parms.ReturnValue;
};

// Function GridGame.PgAIController.IsLeavingGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::IsLeavingGame ( )
{
	static UFunction* pFnIsLeavingGame = NULL;

	if ( ! pFnIsLeavingGame )
		pFnIsLeavingGame = (UFunction*) UObject::GObjObjects()->Data[ 41190 ];

	APgAIController_execIsLeavingGame_Parms IsLeavingGame_Parms;

	pFnIsLeavingGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLeavingGame, &IsLeavingGame_Parms, NULL );

	pFnIsLeavingGame->FunctionFlags |= 0x400;

	return IsLeavingGame_Parms.ReturnValue;
};

// Function GridGame.PgAIController.SetIsLeavingGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Leaving                        ( CPF_Parm )

void APgAIController::SetIsLeavingGame ( unsigned long Leaving )
{
	static UFunction* pFnSetIsLeavingGame = NULL;

	if ( ! pFnSetIsLeavingGame )
		pFnSetIsLeavingGame = (UFunction*) UObject::GObjObjects()->Data[ 41188 ];

	APgAIController_execSetIsLeavingGame_Parms SetIsLeavingGame_Parms;
	SetIsLeavingGame_Parms.Leaving = Leaving;

	pFnSetIsLeavingGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIsLeavingGame, &SetIsLeavingGame_Parms, NULL );

	pFnSetIsLeavingGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.GetTarget
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* APgAIController::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 41186 ];

	APgAIController_execGetTarget_Parms GetTarget_Parms;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetIncomingProjectile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* APgAIController::GetIncomingProjectile ( )
{
	static UFunction* pFnGetIncomingProjectile = NULL;

	if ( ! pFnGetIncomingProjectile )
		pFnGetIncomingProjectile = (UFunction*) UObject::GObjObjects()->Data[ 41184 ];

	APgAIController_execGetIncomingProjectile_Parms GetIncomingProjectile_Parms;

	pFnGetIncomingProjectile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIncomingProjectile, &GetIncomingProjectile_Parms, NULL );

	pFnGetIncomingProjectile->FunctionFlags |= 0x400;

	return GetIncomingProjectile_Parms.ReturnValue;
};

// Function GridGame.PgAIController.IsPedestrian
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::IsPedestrian ( )
{
	static UFunction* pFnIsPedestrian = NULL;

	if ( ! pFnIsPedestrian )
		pFnIsPedestrian = (UFunction*) UObject::GObjObjects()->Data[ 41182 ];

	APgAIController_execIsPedestrian_Parms IsPedestrian_Parms;

	pFnIsPedestrian->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPedestrian, &IsPedestrian_Parms, NULL );

	pFnIsPedestrian->FunctionFlags |= 0x400;

	return IsPedestrian_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetTeamSpawnOrder
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgAIController::GetTeamSpawnOrder ( )
{
	static UFunction* pFnGetTeamSpawnOrder = NULL;

	if ( ! pFnGetTeamSpawnOrder )
		pFnGetTeamSpawnOrder = (UFunction*) UObject::GObjObjects()->Data[ 41180 ];

	APgAIController_execGetTeamSpawnOrder_Parms GetTeamSpawnOrder_Parms;

	pFnGetTeamSpawnOrder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamSpawnOrder, &GetTeamSpawnOrder_Parms, NULL );

	pFnGetTeamSpawnOrder->FunctionFlags |= 0x400;

	return GetTeamSpawnOrder_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetTeamSpawnCount
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgAIController::GetTeamSpawnCount ( )
{
	static UFunction* pFnGetTeamSpawnCount = NULL;

	if ( ! pFnGetTeamSpawnCount )
		pFnGetTeamSpawnCount = (UFunction*) UObject::GObjObjects()->Data[ 41178 ];

	APgAIController_execGetTeamSpawnCount_Parms GetTeamSpawnCount_Parms;

	pFnGetTeamSpawnCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamSpawnCount, &GetTeamSpawnCount_Parms, NULL );

	pFnGetTeamSpawnCount->FunctionFlags |= 0x400;

	return GetTeamSpawnCount_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetTeamIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgAIController::GetTeamIndex ( )
{
	static UFunction* pFnGetTeamIndex = NULL;

	if ( ! pFnGetTeamIndex )
		pFnGetTeamIndex = (UFunction*) UObject::GObjObjects()->Data[ 41176 ];

	APgAIController_execGetTeamIndex_Parms GetTeamIndex_Parms;

	pFnGetTeamIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamIndex, &GetTeamIndex_Parms, NULL );

	pFnGetTeamIndex->FunctionFlags |= 0x400;

	return GetTeamIndex_Parms.ReturnValue;
};

// Function GridGame.PgAIController.IsFriendly
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool APgAIController::IsFriendly ( class AActor* Target )
{
	static UFunction* pFnIsFriendly = NULL;

	if ( ! pFnIsFriendly )
		pFnIsFriendly = (UFunction*) UObject::GObjObjects()->Data[ 41173 ];

	APgAIController_execIsFriendly_Parms IsFriendly_Parms;
	IsFriendly_Parms.Target = Target;

	pFnIsFriendly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFriendly, &IsFriendly_Parms, NULL );

	pFnIsFriendly->FunctionFlags |= 0x400;

	return IsFriendly_Parms.ReturnValue;
};

// Function GridGame.PgAIController.ReadyToFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::ReadyToFire ( )
{
	static UFunction* pFnReadyToFire = NULL;

	if ( ! pFnReadyToFire )
		pFnReadyToFire = (UFunction*) UObject::GObjObjects()->Data[ 41171 ];

	APgAIController_execReadyToFire_Parms ReadyToFire_Parms;

	pFnReadyToFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadyToFire, &ReadyToFire_Parms, NULL );

	pFnReadyToFire->FunctionFlags |= 0x400;

	return ReadyToFire_Parms.ReturnValue;
};

// Function GridGame.PgAIController.SetEnemy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   newEnemy                       ( CPF_Parm )

void APgAIController::SetEnemy ( class APawn* newEnemy )
{
	static UFunction* pFnSetEnemy = NULL;

	if ( ! pFnSetEnemy )
		pFnSetEnemy = (UFunction*) UObject::GObjObjects()->Data[ 41169 ];

	APgAIController_execSetEnemy_Parms SetEnemy_Parms;
	SetEnemy_Parms.newEnemy = newEnemy;

	pFnSetEnemy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEnemy, &SetEnemy_Parms, NULL );

	pFnSetEnemy->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.LineOfSightToEnemy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAIController::LineOfSightToEnemy ( )
{
	static UFunction* pFnLineOfSightToEnemy = NULL;

	if ( ! pFnLineOfSightToEnemy )
		pFnLineOfSightToEnemy = (UFunction*) UObject::GObjObjects()->Data[ 41167 ];

	APgAIController_execLineOfSightToEnemy_Parms LineOfSightToEnemy_Parms;

	pFnLineOfSightToEnemy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLineOfSightToEnemy, &LineOfSightToEnemy_Parms, NULL );

	pFnLineOfSightToEnemy->FunctionFlags |= 0x400;

	return LineOfSightToEnemy_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetInvestigateMarker
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTargetMarker*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgTargetMarker* APgAIController::GetInvestigateMarker ( )
{
	static UFunction* pFnGetInvestigateMarker = NULL;

	if ( ! pFnGetInvestigateMarker )
		pFnGetInvestigateMarker = (UFunction*) UObject::GObjObjects()->Data[ 41165 ];

	APgAIController_execGetInvestigateMarker_Parms GetInvestigateMarker_Parms;

	pFnGetInvestigateMarker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInvestigateMarker, &GetInvestigateMarker_Parms, NULL );

	pFnGetInvestigateMarker->FunctionFlags |= 0x400;

	return GetInvestigateMarker_Parms.ReturnValue;
};

// Function GridGame.PgAIController.GetTargetMarkerFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTargetMarker*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

class APgTargetMarker* APgAIController::GetTargetMarkerFor ( class AActor* Target )
{
	static UFunction* pFnGetTargetMarkerFor = NULL;

	if ( ! pFnGetTargetMarkerFor )
		pFnGetTargetMarkerFor = (UFunction*) UObject::GObjObjects()->Data[ 41162 ];

	APgAIController_execGetTargetMarkerFor_Parms GetTargetMarkerFor_Parms;
	GetTargetMarkerFor_Parms.Target = Target;

	pFnGetTargetMarkerFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetMarkerFor, &GetTargetMarkerFor_Parms, NULL );

	pFnGetTargetMarkerFor->FunctionFlags |= 0x400;

	return GetTargetMarkerFor_Parms.ReturnValue;
};

// Function GridGame.PgAIController.EndPlannerAnimation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::EndPlannerAnimation ( )
{
	static UFunction* pFnEndPlannerAnimation = NULL;

	if ( ! pFnEndPlannerAnimation )
		pFnEndPlannerAnimation = (UFunction*) UObject::GObjObjects()->Data[ 41161 ];

	APgAIController_execEndPlannerAnimation_Parms EndPlannerAnimation_Parms;

	pFnEndPlannerAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndPlannerAnimation, &EndPlannerAnimation_Parms, NULL );

	pFnEndPlannerAnimation->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.UnPauseAIController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::UnPauseAIController ( )
{
	static UFunction* pFnUnPauseAIController = NULL;

	if ( ! pFnUnPauseAIController )
		pFnUnPauseAIController = (UFunction*) UObject::GObjObjects()->Data[ 41160 ];

	APgAIController_execUnPauseAIController_Parms UnPauseAIController_Parms;

	pFnUnPauseAIController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnPauseAIController, &UnPauseAIController_Parms, NULL );

	pFnUnPauseAIController->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.PauseAIController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAIController::PauseAIController ( )
{
	static UFunction* pFnPauseAIController = NULL;

	if ( ! pFnPauseAIController )
		pFnPauseAIController = (UFunction*) UObject::GObjObjects()->Data[ 41159 ];

	APgAIController_execPauseAIController_Parms PauseAIController_Parms;

	pFnPauseAIController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPauseAIController, &PauseAIController_Parms, NULL );

	pFnPauseAIController->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIController.GetAIState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgAIController::GetAIState ( )
{
	static UFunction* pFnGetAIState = NULL;

	if ( ! pFnGetAIState )
		pFnGetAIState = (UFunction*) UObject::GObjObjects()->Data[ 41157 ];

	APgAIController_execGetAIState_Parms GetAIState_Parms;

	pFnGetAIState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAIState, &GetAIState_Parms, NULL );

	pFnGetAIState->FunctionFlags |= 0x400;

	return GetAIState_Parms.ReturnValue;
};

// Function GridGame.PgAIController.PostEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )

void APgAIController::PostEvent ( struct FName EventName, struct FName listName )
{
	static UFunction* pFnPostEvent = NULL;

	if ( ! pFnPostEvent )
		pFnPostEvent = (UFunction*) UObject::GObjObjects()->Data[ 41154 ];

	APgAIController_execPostEvent_Parms PostEvent_Parms;
	memcpy ( &PostEvent_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEvent_Parms.listName, &listName, 0x8 );

	pFnPostEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEvent, &PostEvent_Parms, NULL );

	pFnPostEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIAwareness.GetTargetMarkerFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTargetMarker*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

class APgTargetMarker* UPgAIAwareness::GetTargetMarkerFor ( class AActor* Target )
{
	static UFunction* pFnGetTargetMarkerFor = NULL;

	if ( ! pFnGetTargetMarkerFor )
		pFnGetTargetMarkerFor = (UFunction*) UObject::GObjObjects()->Data[ 41108 ];

	UPgAIAwareness_execGetTargetMarkerFor_Parms GetTargetMarkerFor_Parms;
	GetTargetMarkerFor_Parms.Target = Target;

	pFnGetTargetMarkerFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetMarkerFor, &GetTargetMarkerFor_Parms, NULL );

	pFnGetTargetMarkerFor->FunctionFlags |= 0x400;

	return GetTargetMarkerFor_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.SpawnTargetMarker
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgTargetMarker*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

class APgTargetMarker* UPgAIAwareness::SpawnTargetMarker ( class AActor* Target )
{
	static UFunction* pFnSpawnTargetMarker = NULL;

	if ( ! pFnSpawnTargetMarker )
		pFnSpawnTargetMarker = (UFunction*) UObject::GObjObjects()->Data[ 41105 ];

	UPgAIAwareness_execSpawnTargetMarker_Parms SpawnTargetMarker_Parms;
	SpawnTargetMarker_Parms.Target = Target;

	pFnSpawnTargetMarker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnTargetMarker, &SpawnTargetMarker_Parms, NULL );

	pFnSpawnTargetMarker->FunctionFlags |= 0x400;

	return SpawnTargetMarker_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.GetRawAwarenessOfTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

float UPgAIAwareness::GetRawAwarenessOfTarget ( class AActor* Target )
{
	static UFunction* pFnGetRawAwarenessOfTarget = NULL;

	if ( ! pFnGetRawAwarenessOfTarget )
		pFnGetRawAwarenessOfTarget = (UFunction*) UObject::GObjObjects()->Data[ 41102 ];

	UPgAIAwareness_execGetRawAwarenessOfTarget_Parms GetRawAwarenessOfTarget_Parms;
	GetRawAwarenessOfTarget_Parms.Target = Target;

	pFnGetRawAwarenessOfTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRawAwarenessOfTarget, &GetRawAwarenessOfTarget_Parms, NULL );

	pFnGetRawAwarenessOfTarget->FunctionFlags |= 0x400;

	return GetRawAwarenessOfTarget_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.GetAwarenessOfTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

unsigned char UPgAIAwareness::GetAwarenessOfTarget ( class AActor* Target )
{
	static UFunction* pFnGetAwarenessOfTarget = NULL;

	if ( ! pFnGetAwarenessOfTarget )
		pFnGetAwarenessOfTarget = (UFunction*) UObject::GObjObjects()->Data[ 41099 ];

	UPgAIAwareness_execGetAwarenessOfTarget_Parms GetAwarenessOfTarget_Parms;
	GetAwarenessOfTarget_Parms.Target = Target;

	pFnGetAwarenessOfTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAwarenessOfTarget, &GetAwarenessOfTarget_Parms, NULL );

	pFnGetAwarenessOfTarget->FunctionFlags |= 0x400;

	return GetAwarenessOfTarget_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.TargetNotVisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

unsigned char UPgAIAwareness::TargetNotVisible ( class AActor* Target )
{
	static UFunction* pFnTargetNotVisible = NULL;

	if ( ! pFnTargetNotVisible )
		pFnTargetNotVisible = (UFunction*) UObject::GObjObjects()->Data[ 41096 ];

	UPgAIAwareness_execTargetNotVisible_Parms TargetNotVisible_Parms;
	TargetNotVisible_Parms.Target = Target;

	pFnTargetNotVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTargetNotVisible, &TargetNotVisible_Parms, NULL );

	pFnTargetNotVisible->FunctionFlags |= 0x400;

	return TargetNotVisible_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.HearTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  awareness                      ( CPF_Parm )

unsigned char UPgAIAwareness::HearTarget ( class AActor* Target, unsigned char awareness )
{
	static UFunction* pFnHearTarget = NULL;

	if ( ! pFnHearTarget )
		pFnHearTarget = (UFunction*) UObject::GObjObjects()->Data[ 41092 ];

	UPgAIAwareness_execHearTarget_Parms HearTarget_Parms;
	HearTarget_Parms.Target = Target;
	HearTarget_Parms.awareness = awareness;

	pFnHearTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHearTarget, &HearTarget_Parms, NULL );

	pFnHearTarget->FunctionFlags |= 0x400;

	return HearTarget_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.SeeTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  awareness                      ( CPF_Parm )

unsigned char UPgAIAwareness::SeeTarget ( class AActor* Target, unsigned char awareness )
{
	static UFunction* pFnSeeTarget = NULL;

	if ( ! pFnSeeTarget )
		pFnSeeTarget = (UFunction*) UObject::GObjObjects()->Data[ 41088 ];

	UPgAIAwareness_execSeeTarget_Parms SeeTarget_Parms;
	SeeTarget_Parms.Target = Target;
	SeeTarget_Parms.awareness = awareness;

	pFnSeeTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSeeTarget, &SeeTarget_Parms, NULL );

	pFnSeeTarget->FunctionFlags |= 0x400;

	return SeeTarget_Parms.ReturnValue;
};

// Function GridGame.PgAIAwareness.DisplayDebug
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgAIAwareness::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41084 ];

	UPgAIAwareness_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgAISenses.DisplayDebug
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgAISenses::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41615 ];

	UPgAISenses_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgAIPlanner.IsPaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgAIPlanner::IsPaused ( )
{
	static UFunction* pFnIsPaused = NULL;

	if ( ! pFnIsPaused )
		pFnIsPaused = (UFunction*) UObject::GObjObjects()->Data[ 41122 ];

	UPgAIPlanner_execIsPaused_Parms IsPaused_Parms;

	pFnIsPaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPaused, &IsPaused_Parms, NULL );

	pFnIsPaused->FunctionFlags |= 0x400;

	return IsPaused_Parms.ReturnValue;
};

// Function GridGame.PgAIPlanner.SetPauseTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void UPgAIPlanner::SetPauseTime ( float Time )
{
	static UFunction* pFnSetPauseTime = NULL;

	if ( ! pFnSetPauseTime )
		pFnSetPauseTime = (UFunction*) UObject::GObjObjects()->Data[ 41120 ];

	UPgAIPlanner_execSetPauseTime_Parms SetPauseTime_Parms;
	SetPauseTime_Parms.Time = Time;

	pFnSetPauseTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPauseTime, &SetPauseTime_Parms, NULL );

	pFnSetPauseTime->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIPlanner.UnPause
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgAIPlanner::UnPause ( )
{
	static UFunction* pFnUnPause = NULL;

	if ( ! pFnUnPause )
		pFnUnPause = (UFunction*) UObject::GObjObjects()->Data[ 41119 ];

	UPgAIPlanner_execUnPause_Parms UnPause_Parms;

	pFnUnPause->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnPause, &UnPause_Parms, NULL );

	pFnUnPause->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIPlanner.Pause
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgAIPlanner::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 41118 ];

	UPgAIPlanner_execPause_Parms Pause_Parms;

	pFnPause->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );

	pFnPause->FunctionFlags |= 0x400;
};

// Function GridGame.PgAIPlanner.ContinuePlan
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgAIPlanner::ContinuePlan ( )
{
	static UFunction* pFnContinuePlan = NULL;

	if ( ! pFnContinuePlan )
		pFnContinuePlan = (UFunction*) UObject::GObjObjects()->Data[ 41117 ];

	UPgAIPlanner_execContinuePlan_Parms ContinuePlan_Parms;

	pFnContinuePlan->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnContinuePlan, &ContinuePlan_Parms, NULL );

	pFnContinuePlan->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimBehavior.DebugCompareBehaviorStates
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FDebugAnimBehaviorState One                            ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FDebugAnimBehaviorState Two                            ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UPgAnimBehavior::DebugCompareBehaviorStates ( struct FDebugAnimBehaviorState* One, struct FDebugAnimBehaviorState* Two )
{
	static UFunction* pFnDebugCompareBehaviorStates = NULL;

	if ( ! pFnDebugCompareBehaviorStates )
		pFnDebugCompareBehaviorStates = (UFunction*) UObject::GObjObjects()->Data[ 41634 ];

	UPgAnimBehavior_execDebugCompareBehaviorStates_Parms DebugCompareBehaviorStates_Parms;

	pFnDebugCompareBehaviorStates->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugCompareBehaviorStates, &DebugCompareBehaviorStates_Parms, NULL );

	pFnDebugCompareBehaviorStates->FunctionFlags |= 0x400;

	if ( One )
		memcpy ( One, &DebugCompareBehaviorStates_Parms.One, 0xC );

	if ( Two )
		memcpy ( Two, &DebugCompareBehaviorStates_Parms.Two, 0xC );

	return DebugCompareBehaviorStates_Parms.ReturnValue;
};

// Function GridGame.PgAnimBehavior.DebugGetState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FDebugAnimBehaviorState ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FDebugAnimBehaviorState UPgAnimBehavior::DebugGetState ( )
{
	static UFunction* pFnDebugGetState = NULL;

	if ( ! pFnDebugGetState )
		pFnDebugGetState = (UFunction*) UObject::GObjObjects()->Data[ 41632 ];

	UPgAnimBehavior_execDebugGetState_Parms DebugGetState_Parms;

	pFnDebugGetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugGetState, &DebugGetState_Parms, NULL );

	pFnDebugGetState->FunctionFlags |= 0x400;

	return DebugGetState_Parms.ReturnValue;
};

// Function GridGame.PgPawn.IsInKnockdown
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsInKnockdown ( )
{
	static UFunction* pFnIsInKnockdown = NULL;

	if ( ! pFnIsInKnockdown )
		pFnIsInKnockdown = (UFunction*) UObject::GObjObjects()->Data[ 42501 ];

	APgPawn_execIsInKnockdown_Parms IsInKnockdown_Parms;

	this->ProcessEvent ( pFnIsInKnockdown, &IsInKnockdown_Parms, NULL );

	return IsInKnockdown_Parms.ReturnValue;
};

// Function GridGame.PgPawn.StartRecoveryTimers
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgPawn::eventStartRecoveryTimers ( )
{
	static UFunction* pFnStartRecoveryTimers = NULL;

	if ( ! pFnStartRecoveryTimers )
		pFnStartRecoveryTimers = (UFunction*) UObject::GObjObjects()->Data[ 42495 ];

	APgPawn_eventStartRecoveryTimers_Parms StartRecoveryTimers_Parms;

	this->ProcessEvent ( pFnStartRecoveryTimers, &StartRecoveryTimers_Parms, NULL );
};

// Function GridGame.PgPawn.ServerKnockdown
// [0x002240C2] 
// Parameters infos:
// struct FVector                 RBLinearVelocity               ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 RBAngularVelocity              ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 RadialOrigin                   ( CPF_OptionalParm | CPF_Parm )
// float                          RadialRadius                   ( CPF_OptionalParm | CPF_Parm )
// float                          RadialStrength                 ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 PointImpulse                   ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 PointImpulsePosition           ( CPF_OptionalParm | CPF_Parm )
// struct FName                   PointImpulseBoneName           ( CPF_OptionalParm | CPF_Parm )

void APgPawn::ServerKnockdown ( struct FVector RBLinearVelocity, struct FVector RBAngularVelocity, struct FVector RadialOrigin, float RadialRadius, float RadialStrength, struct FVector PointImpulse, struct FVector PointImpulsePosition, struct FName PointImpulseBoneName )
{
	static UFunction* pFnServerKnockdown = NULL;

	if ( ! pFnServerKnockdown )
		pFnServerKnockdown = (UFunction*) UObject::GObjObjects()->Data[ 42485 ];

	APgPawn_execServerKnockdown_Parms ServerKnockdown_Parms;
	memcpy ( &ServerKnockdown_Parms.RBLinearVelocity, &RBLinearVelocity, 0xC );
	memcpy ( &ServerKnockdown_Parms.RBAngularVelocity, &RBAngularVelocity, 0xC );
	memcpy ( &ServerKnockdown_Parms.RadialOrigin, &RadialOrigin, 0xC );
	ServerKnockdown_Parms.RadialRadius = RadialRadius;
	ServerKnockdown_Parms.RadialStrength = RadialStrength;
	memcpy ( &ServerKnockdown_Parms.PointImpulse, &PointImpulse, 0xC );
	memcpy ( &ServerKnockdown_Parms.PointImpulsePosition, &PointImpulsePosition, 0xC );
	memcpy ( &ServerKnockdown_Parms.PointImpulseBoneName, &PointImpulseBoneName, 0x8 );

	this->ProcessEvent ( pFnServerKnockdown, &ServerKnockdown_Parms, NULL );
};

// Function GridGame.PgPawn.OnRadialKnockdownPawn
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_RadialKnockdownPawn* Widget                         ( CPF_Parm )

void APgPawn::OnRadialKnockdownPawn ( class UPgSeqAct_RadialKnockdownPawn* Widget )
{
	static UFunction* pFnOnRadialKnockdownPawn = NULL;

	if ( ! pFnOnRadialKnockdownPawn )
		pFnOnRadialKnockdownPawn = (UFunction*) UObject::GObjObjects()->Data[ 42479 ];

	APgPawn_execOnRadialKnockdownPawn_Parms OnRadialKnockdownPawn_Parms;
	OnRadialKnockdownPawn_Parms.Widget = Widget;

	this->ProcessEvent ( pFnOnRadialKnockdownPawn, &OnRadialKnockdownPawn_Parms, NULL );
};

// Function GridGame.PgPawn.KnockdownStartRecoveryTimer
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void APgPawn::eventKnockdownStartRecoveryTimer ( )
{
	static UFunction* pFnKnockdownStartRecoveryTimer = NULL;

	if ( ! pFnKnockdownStartRecoveryTimer )
		pFnKnockdownStartRecoveryTimer = (UFunction*) UObject::GObjObjects()->Data[ 42478 ];

	APgPawn_eventKnockdownStartRecoveryTimer_Parms KnockdownStartRecoveryTimer_Parms;

	this->ProcessEvent ( pFnKnockdownStartRecoveryTimer, &KnockdownStartRecoveryTimer_Parms, NULL );
};

// Function GridGame.PgPawn.KnockdownRecoverToStanding
// [0x00080501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::KnockdownRecoverToStanding ( )
{
	static UFunction* pFnKnockdownRecoverToStanding = NULL;

	if ( ! pFnKnockdownRecoverToStanding )
		pFnKnockdownRecoverToStanding = (UFunction*) UObject::GObjObjects()->Data[ 42477 ];

	APgPawn_execKnockdownRecoverToStanding_Parms KnockdownRecoverToStanding_Parms;

	pFnKnockdownRecoverToStanding->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKnockdownRecoverToStanding, &KnockdownRecoverToStanding_Parms, NULL );

	pFnKnockdownRecoverToStanding->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.KnockdownDriveToRecoveryPosition
// [0x00080501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::KnockdownDriveToRecoveryPosition ( )
{
	static UFunction* pFnKnockdownDriveToRecoveryPosition = NULL;

	if ( ! pFnKnockdownDriveToRecoveryPosition )
		pFnKnockdownDriveToRecoveryPosition = (UFunction*) UObject::GObjObjects()->Data[ 42476 ];

	APgPawn_execKnockdownDriveToRecoveryPosition_Parms KnockdownDriveToRecoveryPosition_Parms;

	pFnKnockdownDriveToRecoveryPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKnockdownDriveToRecoveryPosition, &KnockdownDriveToRecoveryPosition_Parms, NULL );

	pFnKnockdownDriveToRecoveryPosition->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.IsInvisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsInvisible ( )
{
	static UFunction* pFnIsInvisible = NULL;

	if ( ! pFnIsInvisible )
		pFnIsInvisible = (UFunction*) UObject::GObjObjects()->Data[ 42474 ];

	APgPawn_execIsInvisible_Parms IsInvisible_Parms;

	pFnIsInvisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInvisible, &IsInvisible_Parms, NULL );

	pFnIsInvisible->FunctionFlags |= 0x400;

	return IsInvisible_Parms.ReturnValue;
};

// Function GridGame.PgPawn.UnTouchAllVolumes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPawn::UnTouchAllVolumes ( )
{
	static UFunction* pFnUnTouchAllVolumes = NULL;

	if ( ! pFnUnTouchAllVolumes )
		pFnUnTouchAllVolumes = (UFunction*) UObject::GObjObjects()->Data[ 42453 ];

	APgPawn_execUnTouchAllVolumes_Parms UnTouchAllVolumes_Parms;

	pFnUnTouchAllVolumes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnTouchAllVolumes, &UnTouchAllVolumes_Parms, NULL );

	pFnUnTouchAllVolumes->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetVehicling
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  vehicling                      ( CPF_Parm )

bool APgPawn::SetVehicling ( unsigned long vehicling )
{
	static UFunction* pFnSetVehicling = NULL;

	if ( ! pFnSetVehicling )
		pFnSetVehicling = (UFunction*) UObject::GObjObjects()->Data[ 42450 ];

	APgPawn_execSetVehicling_Parms SetVehicling_Parms;
	SetVehicling_Parms.vehicling = vehicling;

	pFnSetVehicling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVehicling, &SetVehicling_Parms, NULL );

	pFnSetVehicling->FunctionFlags |= 0x400;

	return SetVehicling_Parms.ReturnValue;
};

// Function GridGame.PgPawn.SetBlocking
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  blocking                       ( CPF_Parm )

void APgPawn::SetBlocking ( unsigned long blocking )
{
	static UFunction* pFnSetBlocking = NULL;

	if ( ! pFnSetBlocking )
		pFnSetBlocking = (UFunction*) UObject::GObjObjects()->Data[ 42167 ];

	APgPawn_execSetBlocking_Parms SetBlocking_Parms;
	SetBlocking_Parms.blocking = blocking;

	pFnSetBlocking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBlocking, &SetBlocking_Parms, NULL );

	pFnSetBlocking->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetSprinting
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  sprinting                      ( CPF_Parm )

void APgPawn::SetSprinting ( unsigned long sprinting )
{
	static UFunction* pFnSetSprinting = NULL;

	if ( ! pFnSetSprinting )
		pFnSetSprinting = (UFunction*) UObject::GObjObjects()->Data[ 42168 ];

	APgPawn_execSetSprinting_Parms SetSprinting_Parms;
	SetSprinting_Parms.sprinting = sprinting;

	pFnSetSprinting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSprinting, &SetSprinting_Parms, NULL );

	pFnSetSprinting->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.OnTeleport
// [0x00020102] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void APgPawn::OnTeleport ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleport = NULL;

	if ( ! pFnOnTeleport )
		pFnOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 42441 ];

	APgPawn_execOnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleport, &OnTeleport_Parms, NULL );
};

// Function GridGame.PgPawn.StaticOnTeleport
// [0x00022002] 
// Parameters infos:
// class AController*             PlayerController               ( CPF_Parm )

void APgPawn::StaticOnTeleport ( class AController* PlayerController )
{
	static UFunction* pFnStaticOnTeleport = NULL;

	if ( ! pFnStaticOnTeleport )
		pFnStaticOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 42436 ];

	APgPawn_execStaticOnTeleport_Parms StaticOnTeleport_Parms;
	StaticOnTeleport_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnStaticOnTeleport, &StaticOnTeleport_Parms, NULL );
};

// Function GridGame.PgPawn.AdjustDamage
// [0x00424002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// int                            inDamage                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void APgPawn::AdjustDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, int* inDamage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustDamage = NULL;

	if ( ! pFnAdjustDamage )
		pFnAdjustDamage = (UFunction*) UObject::GObjObjects()->Data[ 42425 ];

	APgPawn_execAdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy ( &AdjustDamage_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnAdjustDamage, &AdjustDamage_Parms, NULL );

	if ( inDamage )
		*inDamage = AdjustDamage_Parms.inDamage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustDamage_Parms.Momentum, 0xC );
};

// Function GridGame.PgPawn.DetermineLastDamageCauser
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgPawn::DetermineLastDamageCauser ( class AController* InstigatedBy, class AActor* DamageCauser )
{
	static UFunction* pFnDetermineLastDamageCauser = NULL;

	if ( ! pFnDetermineLastDamageCauser )
		pFnDetermineLastDamageCauser = (UFunction*) UObject::GObjObjects()->Data[ 42421 ];

	APgPawn_execDetermineLastDamageCauser_Parms DetermineLastDamageCauser_Parms;
	DetermineLastDamageCauser_Parms.InstigatedBy = InstigatedBy;
	DetermineLastDamageCauser_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnDetermineLastDamageCauser, &DetermineLastDamageCauser_Parms, NULL );
};

// Function GridGame.PgPawn.UpdateStun
// [0x00020102] 
// Parameters infos:

void APgPawn::UpdateStun ( )
{
	static UFunction* pFnUpdateStun = NULL;

	if ( ! pFnUpdateStun )
		pFnUpdateStun = (UFunction*) UObject::GObjObjects()->Data[ 42419 ];

	APgPawn_execUpdateStun_Parms UpdateStun_Parms;

	this->ProcessEvent ( pFnUpdateStun, &UpdateStun_Parms, NULL );
};

// Function GridGame.PgPawn.PerformStunRevived
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::PerformStunRevived ( )
{
	static UFunction* pFnPerformStunRevived = NULL;

	if ( ! pFnPerformStunRevived )
		pFnPerformStunRevived = (UFunction*) UObject::GObjObjects()->Data[ 42418 ];

	APgPawn_execPerformStunRevived_Parms PerformStunRevived_Parms;

	pFnPerformStunRevived->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformStunRevived, &PerformStunRevived_Parms, NULL );

	pFnPerformStunRevived->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PerformStunReviver
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::PerformStunReviver ( )
{
	static UFunction* pFnPerformStunReviver = NULL;

	if ( ! pFnPerformStunReviver )
		pFnPerformStunReviver = (UFunction*) UObject::GObjObjects()->Data[ 42417 ];

	APgPawn_execPerformStunReviver_Parms PerformStunReviver_Parms;

	pFnPerformStunReviver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformStunReviver, &PerformStunReviver_Parms, NULL );

	pFnPerformStunReviver->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PerformStun
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::PerformStun ( )
{
	static UFunction* pFnPerformStun = NULL;

	if ( ! pFnPerformStun )
		pFnPerformStun = (UFunction*) UObject::GObjObjects()->Data[ 42416 ];

	APgPawn_execPerformStun_Parms PerformStun_Parms;

	pFnPerformStun->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformStun, &PerformStun_Parms, NULL );

	pFnPerformStun->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.StunAllowed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inDamage                       ( CPF_Parm )

bool APgPawn::StunAllowed ( int inDamage )
{
	static UFunction* pFnStunAllowed = NULL;

	if ( ! pFnStunAllowed )
		pFnStunAllowed = (UFunction*) UObject::GObjObjects()->Data[ 42413 ];

	APgPawn_execStunAllowed_Parms StunAllowed_Parms;
	StunAllowed_Parms.inDamage = inDamage;

	pFnStunAllowed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStunAllowed, &StunAllowed_Parms, NULL );

	pFnStunAllowed->FunctionFlags |= 0x400;

	return StunAllowed_Parms.ReturnValue;
};

// Function GridGame.PgPawn.IsMagDiscToSmartObj
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsMagDiscToSmartObj ( )
{
	static UFunction* pFnIsMagDiscToSmartObj = NULL;

	if ( ! pFnIsMagDiscToSmartObj )
		pFnIsMagDiscToSmartObj = (UFunction*) UObject::GObjObjects()->Data[ 42411 ];

	APgPawn_execIsMagDiscToSmartObj_Parms IsMagDiscToSmartObj_Parms;

	pFnIsMagDiscToSmartObj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMagDiscToSmartObj, &IsMagDiscToSmartObj_Parms, NULL );

	pFnIsMagDiscToSmartObj->FunctionFlags |= 0x400;

	return IsMagDiscToSmartObj_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PerformMagDisc
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPawn::PerformMagDisc ( )
{
	static UFunction* pFnPerformMagDisc = NULL;

	if ( ! pFnPerformMagDisc )
		pFnPerformMagDisc = (UFunction*) UObject::GObjObjects()->Data[ 42410 ];

	APgPawn_execPerformMagDisc_Parms PerformMagDisc_Parms;

	pFnPerformMagDisc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformMagDisc, &PerformMagDisc_Parms, NULL );

	pFnPerformMagDisc->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ServerPerformMagDiscAntic
// [0x002200C2] 
// Parameters infos:

void APgPawn::ServerPerformMagDiscAntic ( )
{
	static UFunction* pFnServerPerformMagDiscAntic = NULL;

	if ( ! pFnServerPerformMagDiscAntic )
		pFnServerPerformMagDiscAntic = (UFunction*) UObject::GObjObjects()->Data[ 42398 ];

	APgPawn_execServerPerformMagDiscAntic_Parms ServerPerformMagDiscAntic_Parms;

	this->ProcessEvent ( pFnServerPerformMagDiscAntic, &ServerPerformMagDiscAntic_Parms, NULL );
};

// Function GridGame.PgPawn.PerformMagDiscAntic
// [0x00020102] 
// Parameters infos:

void APgPawn::PerformMagDiscAntic ( )
{
	static UFunction* pFnPerformMagDiscAntic = NULL;

	if ( ! pFnPerformMagDiscAntic )
		pFnPerformMagDiscAntic = (UFunction*) UObject::GObjObjects()->Data[ 42396 ];

	APgPawn_execPerformMagDiscAntic_Parms PerformMagDiscAntic_Parms;

	this->ProcessEvent ( pFnPerformMagDiscAntic, &PerformMagDiscAntic_Parms, NULL );
};

// Function GridGame.PgPawn.GetBestPowerLevel
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgPawn::GetBestPowerLevel ( )
{
	static UFunction* pFnGetBestPowerLevel = NULL;

	if ( ! pFnGetBestPowerLevel )
		pFnGetBestPowerLevel = (UFunction*) UObject::GObjObjects()->Data[ 42394 ];

	APgPawn_execGetBestPowerLevel_Parms GetBestPowerLevel_Parms;

	pFnGetBestPowerLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBestPowerLevel, &GetBestPowerLevel_Parms, NULL );

	pFnGetBestPowerLevel->FunctionFlags |= 0x400;

	return GetBestPowerLevel_Parms.ReturnValue;
};

// Function GridGame.PgPawn.FXHandleEnergyParticleEffect
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void APgPawn::FXHandleEnergyParticleEffect ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnFXHandleEnergyParticleEffect = NULL;

	if ( ! pFnFXHandleEnergyParticleEffect )
		pFnFXHandleEnergyParticleEffect = (UFunction*) UObject::GObjObjects()->Data[ 41910 ];

	APgPawn_execFXHandleEnergyParticleEffect_Parms FXHandleEnergyParticleEffect_Parms;
	FXHandleEnergyParticleEffect_Parms.PSC = PSC;

	pFnFXHandleEnergyParticleEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFXHandleEnergyParticleEffect, &FXHandleEnergyParticleEffect_Parms, NULL );

	pFnFXHandleEnergyParticleEffect->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ServerSetEnergy
// [0x00220CC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            energy                         ( CPF_Parm )

void APgPawn::eventServerSetEnergy ( int energy )
{
	static UFunction* pFnServerSetEnergy = NULL;

	if ( ! pFnServerSetEnergy )
		pFnServerSetEnergy = (UFunction*) UObject::GObjObjects()->Data[ 42391 ];

	APgPawn_eventServerSetEnergy_Parms ServerSetEnergy_Parms;
	ServerSetEnergy_Parms.energy = energy;

	pFnServerSetEnergy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetEnergy, &ServerSetEnergy_Parms, NULL );

	pFnServerSetEnergy->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetEnergyMax
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            energyMax                      ( CPF_Parm )

void APgPawn::SetEnergyMax ( int energyMax )
{
	static UFunction* pFnSetEnergyMax = NULL;

	if ( ! pFnSetEnergyMax )
		pFnSetEnergyMax = (UFunction*) UObject::GObjObjects()->Data[ 42389 ];

	APgPawn_execSetEnergyMax_Parms SetEnergyMax_Parms;
	SetEnergyMax_Parms.energyMax = energyMax;

	pFnSetEnergyMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetEnergyMax, &SetEnergyMax_Parms, NULL );

	pFnSetEnergyMax->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.EnergyFlow
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inEnergy                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int APgPawn::EnergyFlow ( int inEnergy, unsigned long overCharge )
{
	static UFunction* pFnEnergyFlow = NULL;

	if ( ! pFnEnergyFlow )
		pFnEnergyFlow = (UFunction*) UObject::GObjObjects()->Data[ 42385 ];

	APgPawn_execEnergyFlow_Parms EnergyFlow_Parms;
	EnergyFlow_Parms.inEnergy = inEnergy;
	EnergyFlow_Parms.overCharge = overCharge;

	pFnEnergyFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnergyFlow, &EnergyFlow_Parms, NULL );

	pFnEnergyFlow->FunctionFlags |= 0x400;

	return EnergyFlow_Parms.ReturnValue;
};

// Function GridGame.PgPawn.HealthFlow
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inHealth                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int APgPawn::HealthFlow ( int inHealth, unsigned long overCharge )
{
	static UFunction* pFnHealthFlow = NULL;

	if ( ! pFnHealthFlow )
		pFnHealthFlow = (UFunction*) UObject::GObjObjects()->Data[ 42381 ];

	APgPawn_execHealthFlow_Parms HealthFlow_Parms;
	HealthFlow_Parms.inHealth = inHealth;
	HealthFlow_Parms.overCharge = overCharge;

	pFnHealthFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHealthFlow, &HealthFlow_Parms, NULL );

	pFnHealthFlow->FunctionFlags |= 0x400;

	return HealthFlow_Parms.ReturnValue;
};

// Function GridGame.PgPawn.EnergyDampenDamage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inDamage                       ( CPF_Parm )

int APgPawn::EnergyDampenDamage ( int inDamage )
{
	static UFunction* pFnEnergyDampenDamage = NULL;

	if ( ! pFnEnergyDampenDamage )
		pFnEnergyDampenDamage = (UFunction*) UObject::GObjObjects()->Data[ 42378 ];

	APgPawn_execEnergyDampenDamage_Parms EnergyDampenDamage_Parms;
	EnergyDampenDamage_Parms.inDamage = inDamage;

	pFnEnergyDampenDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnergyDampenDamage, &EnergyDampenDamage_Parms, NULL );

	pFnEnergyDampenDamage->FunctionFlags |= 0x400;

	return EnergyDampenDamage_Parms.ReturnValue;
};

// Function GridGame.PgPawn.MeleeAttack
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 Center                         ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// class UPgDamageParam*          damageParam                    ( CPF_Parm )

void APgPawn::MeleeAttack ( struct FVector Center, int Damage, float DamageRadius, float Momentum, class UPgDamageParam* damageParam )
{
	static UFunction* pFnMeleeAttack = NULL;

	if ( ! pFnMeleeAttack )
		pFnMeleeAttack = (UFunction*) UObject::GObjObjects()->Data[ 42372 ];

	APgPawn_execMeleeAttack_Parms MeleeAttack_Parms;
	memcpy ( &MeleeAttack_Parms.Center, &Center, 0xC );
	MeleeAttack_Parms.Damage = Damage;
	MeleeAttack_Parms.DamageRadius = DamageRadius;
	MeleeAttack_Parms.Momentum = Momentum;
	MeleeAttack_Parms.damageParam = damageParam;

	pFnMeleeAttack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMeleeAttack, &MeleeAttack_Parms, NULL );

	pFnMeleeAttack->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ServerPerformDodge
// [0x002200C2] 
// Parameters infos:

void APgPawn::ServerPerformDodge ( )
{
	static UFunction* pFnServerPerformDodge = NULL;

	if ( ! pFnServerPerformDodge )
		pFnServerPerformDodge = (UFunction*) UObject::GObjObjects()->Data[ 42371 ];

	APgPawn_execServerPerformDodge_Parms ServerPerformDodge_Parms;

	this->ProcessEvent ( pFnServerPerformDodge, &ServerPerformDodge_Parms, NULL );
};

// Function GridGame.PgPawn.PerformDodge
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::PerformDodge ( )
{
	static UFunction* pFnPerformDodge = NULL;

	if ( ! pFnPerformDodge )
		pFnPerformDodge = (UFunction*) UObject::GObjObjects()->Data[ 42370 ];

	APgPawn_execPerformDodge_Parms PerformDodge_Parms;

	pFnPerformDodge->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformDodge, &PerformDodge_Parms, NULL );

	pFnPerformDodge->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.UpdateWeaponReplication
// [0x00080102] 
// Parameters infos:

void APgPawn::UpdateWeaponReplication ( )
{
	static UFunction* pFnUpdateWeaponReplication = NULL;

	if ( ! pFnUpdateWeaponReplication )
		pFnUpdateWeaponReplication = (UFunction*) UObject::GObjObjects()->Data[ 42365 ];

	APgPawn_execUpdateWeaponReplication_Parms UpdateWeaponReplication_Parms;

	this->ProcessEvent ( pFnUpdateWeaponReplication, &UpdateWeaponReplication_Parms, NULL );
};

// Function GridGame.PgPawn.GetBaseAimRotation
// [0x00820922] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator APgPawn::eventGetBaseAimRotation ( )
{
	static UFunction* pFnGetBaseAimRotation = NULL;

	if ( ! pFnGetBaseAimRotation )
		pFnGetBaseAimRotation = (UFunction*) UObject::GObjObjects()->Data[ 42358 ];

	APgPawn_eventGetBaseAimRotation_Parms GetBaseAimRotation_Parms;

	this->ProcessEvent ( pFnGetBaseAimRotation, &GetBaseAimRotation_Parms, NULL );

	return GetBaseAimRotation_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetAdjustedAimFor
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator APgPawn::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 42354 ];

	APgPawn_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function GridGame.PgPawn.OnAssignControllerArch
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_AssignControllerArch* inAction                       ( CPF_Parm )

void APgPawn::OnAssignControllerArch ( class UPgSeqAct_AssignControllerArch* inAction )
{
	static UFunction* pFnOnAssignControllerArch = NULL;

	if ( ! pFnOnAssignControllerArch )
		pFnOnAssignControllerArch = (UFunction*) UObject::GObjObjects()->Data[ 42349 ];

	APgPawn_execOnAssignControllerArch_Parms OnAssignControllerArch_Parms;
	OnAssignControllerArch_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnAssignControllerArch, &OnAssignControllerArch_Parms, NULL );
};

// Function GridGame.PgPawn.OnRemoveInventoryArch
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_RemoveInventoryArch* inAction                       ( CPF_Parm )

void APgPawn::OnRemoveInventoryArch ( class UPgSeqAct_RemoveInventoryArch* inAction )
{
	static UFunction* pFnOnRemoveInventoryArch = NULL;

	if ( ! pFnOnRemoveInventoryArch )
		pFnOnRemoveInventoryArch = (UFunction*) UObject::GObjObjects()->Data[ 42341 ];

	APgPawn_execOnRemoveInventoryArch_Parms OnRemoveInventoryArch_Parms;
	OnRemoveInventoryArch_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnRemoveInventoryArch, &OnRemoveInventoryArch_Parms, NULL );
};

// Function GridGame.PgPawn.OnGiveInventoryArch
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_GiveInventoryArch* inAction                       ( CPF_Parm )

void APgPawn::OnGiveInventoryArch ( class UPgSeqAct_GiveInventoryArch* inAction )
{
	static UFunction* pFnOnGiveInventoryArch = NULL;

	if ( ! pFnOnGiveInventoryArch )
		pFnOnGiveInventoryArch = (UFunction*) UObject::GObjObjects()->Data[ 42334 ];

	APgPawn_execOnGiveInventoryArch_Parms OnGiveInventoryArch_Parms;
	OnGiveInventoryArch_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnGiveInventoryArch, &OnGiveInventoryArch_Parms, NULL );
};

// Function GridGame.PgPawn.OnGiveInventory
// [0x00020100] 
// Parameters infos:
// class USeqAct_GiveInventory*   inAction                       ( CPF_Parm )

void APgPawn::OnGiveInventory ( class USeqAct_GiveInventory* inAction )
{
	static UFunction* pFnOnGiveInventory = NULL;

	if ( ! pFnOnGiveInventory )
		pFnOnGiveInventory = (UFunction*) UObject::GObjObjects()->Data[ 42332 ];

	APgPawn_execOnGiveInventory_Parms OnGiveInventory_Parms;
	OnGiveInventory_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnGiveInventory, &OnGiveInventory_Parms, NULL );
};

// Function GridGame.PgPawn.RemoveRepInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgInventory*            Inv                            ( CPF_Parm )

void APgPawn::RemoveRepInventory ( class APgInventory* Inv )
{
	static UFunction* pFnRemoveRepInventory = NULL;

	if ( ! pFnRemoveRepInventory )
		pFnRemoveRepInventory = (UFunction*) UObject::GObjObjects()->Data[ 42330 ];

	APgPawn_execRemoveRepInventory_Parms RemoveRepInventory_Parms;
	RemoveRepInventory_Parms.Inv = Inv;

	pFnRemoveRepInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveRepInventory, &RemoveRepInventory_Parms, NULL );

	pFnRemoveRepInventory->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.AddRepInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgInventory*            Inv                            ( CPF_Parm )

void APgPawn::AddRepInventory ( class APgInventory* Inv )
{
	static UFunction* pFnAddRepInventory = NULL;

	if ( ! pFnAddRepInventory )
		pFnAddRepInventory = (UFunction*) UObject::GObjObjects()->Data[ 42328 ];

	APgPawn_execAddRepInventory_Parms AddRepInventory_Parms;
	AddRepInventory_Parms.Inv = Inv;

	pFnAddRepInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddRepInventory, &AddRepInventory_Parms, NULL );

	pFnAddRepInventory->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ClearPassivePowers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPawn::ClearPassivePowers ( )
{
	static UFunction* pFnClearPassivePowers = NULL;

	if ( ! pFnClearPassivePowers )
		pFnClearPassivePowers = (UFunction*) UObject::GObjObjects()->Data[ 42327 ];

	APgPawn_execClearPassivePowers_Parms ClearPassivePowers_Parms;

	pFnClearPassivePowers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearPassivePowers, &ClearPassivePowers_Parms, NULL );

	pFnClearPassivePowers->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.RestorePassivePower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgInventoryPassivePower* Power                          ( CPF_Parm )

void APgPawn::RestorePassivePower ( class APgInventoryPassivePower* Power )
{
	static UFunction* pFnRestorePassivePower = NULL;

	if ( ! pFnRestorePassivePower )
		pFnRestorePassivePower = (UFunction*) UObject::GObjObjects()->Data[ 42325 ];

	APgPawn_execRestorePassivePower_Parms RestorePassivePower_Parms;
	RestorePassivePower_Parms.Power = Power;

	pFnRestorePassivePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestorePassivePower, &RestorePassivePower_Parms, NULL );

	pFnRestorePassivePower->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.TossInventory
// [0x00824002] 
// Parameters infos:
// class AInventory*              Inv                            ( CPF_Parm )
// struct FVector                 ForceVelocity                  ( CPF_OptionalParm | CPF_Parm )

void APgPawn::TossInventory ( class AInventory* Inv, struct FVector ForceVelocity )
{
	static UFunction* pFnTossInventory = NULL;

	if ( ! pFnTossInventory )
		pFnTossInventory = (UFunction*) UObject::GObjObjects()->Data[ 42316 ];

	APgPawn_execTossInventory_Parms TossInventory_Parms;
	TossInventory_Parms.Inv = Inv;
	memcpy ( &TossInventory_Parms.ForceVelocity, &ForceVelocity, 0xC );

	this->ProcessEvent ( pFnTossInventory, &TossInventory_Parms, NULL );
};

// Function GridGame.PgPawn.RestoreInventory
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 invString                      ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Activate                       ( CPF_Parm )
// float                          invLifeSpan                    ( CPF_Parm )

void APgPawn::eventRestoreInventory ( struct FString invString, unsigned long Activate, float invLifeSpan )
{
	static UFunction* pFnRestoreInventory = NULL;

	if ( ! pFnRestoreInventory )
		pFnRestoreInventory = (UFunction*) UObject::GObjObjects()->Data[ 42309 ];

	APgPawn_eventRestoreInventory_Parms RestoreInventory_Parms;
	memcpy ( &RestoreInventory_Parms.invString, &invString, 0xC );
	RestoreInventory_Parms.Activate = Activate;
	RestoreInventory_Parms.invLifeSpan = invLifeSpan;

	this->ProcessEvent ( pFnRestoreInventory, &RestoreInventory_Parms, NULL );
};

// Function GridGame.PgPawn.SetupInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPawn::SetupInventory ( )
{
	static UFunction* pFnSetupInventory = NULL;

	if ( ! pFnSetupInventory )
		pFnSetupInventory = (UFunction*) UObject::GObjObjects()->Data[ 42308 ];

	APgPawn_execSetupInventory_Parms SetupInventory_Parms;

	pFnSetupInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupInventory, &SetupInventory_Parms, NULL );

	pFnSetupInventory->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.AddDefaultInventory
// [0x00020002] 
// Parameters infos:

void APgPawn::AddDefaultInventory ( )
{
	static UFunction* pFnAddDefaultInventory = NULL;

	if ( ! pFnAddDefaultInventory )
		pFnAddDefaultInventory = (UFunction*) UObject::GObjObjects()->Data[ 42303 ];

	APgPawn_execAddDefaultInventory_Parms AddDefaultInventory_Parms;

	this->ProcessEvent ( pFnAddDefaultInventory, &AddDefaultInventory_Parms, NULL );
};

// Function GridGame.PgPawn.CloneCoopInventory
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::CloneCoopInventory ( )
{
	static UFunction* pFnCloneCoopInventory = NULL;

	if ( ! pFnCloneCoopInventory )
		pFnCloneCoopInventory = (UFunction*) UObject::GObjObjects()->Data[ 42301 ];

	APgPawn_execCloneCoopInventory_Parms CloneCoopInventory_Parms;

	pFnCloneCoopInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCloneCoopInventory, &CloneCoopInventory_Parms, NULL );

	pFnCloneCoopInventory->FunctionFlags |= 0x400;

	return CloneCoopInventory_Parms.ReturnValue;
};

// Function GridGame.PgPawn.IsFiring
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsFiring ( )
{
	static UFunction* pFnIsFiring = NULL;

	if ( ! pFnIsFiring )
		pFnIsFiring = (UFunction*) UObject::GObjObjects()->Data[ 42299 ];

	APgPawn_execIsFiring_Parms IsFiring_Parms;

	pFnIsFiring->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFiring, &IsFiring_Parms, NULL );

	pFnIsFiring->FunctionFlags |= 0x400;

	return IsFiring_Parms.ReturnValue;
};

// Function GridGame.PgPawn.InventoryChanged
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::InventoryChanged ( )
{
	static UFunction* pFnInventoryChanged = NULL;

	if ( ! pFnInventoryChanged )
		pFnInventoryChanged = (UFunction*) UObject::GObjObjects()->Data[ 41832 ];

	APgPawn_execInventoryChanged_Parms InventoryChanged_Parms;

	pFnInventoryChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInventoryChanged, &InventoryChanged_Parms, NULL );

	pFnInventoryChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ServerSetPowerDamageScaling
// [0x00220CC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:
// float                          DamageScale                    ( CPF_Parm )
// float                          Duration                       ( CPF_Parm )

void APgPawn::eventServerSetPowerDamageScaling ( float DamageScale, float Duration )
{
	static UFunction* pFnServerSetPowerDamageScaling = NULL;

	if ( ! pFnServerSetPowerDamageScaling )
		pFnServerSetPowerDamageScaling = (UFunction*) UObject::GObjObjects()->Data[ 42296 ];

	APgPawn_eventServerSetPowerDamageScaling_Parms ServerSetPowerDamageScaling_Parms;
	ServerSetPowerDamageScaling_Parms.DamageScale = DamageScale;
	ServerSetPowerDamageScaling_Parms.Duration = Duration;

	pFnServerSetPowerDamageScaling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetPowerDamageScaling, &ServerSetPowerDamageScaling_Parms, NULL );

	pFnServerSetPowerDamageScaling->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PowerDamageScalingTick
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APgPawn::PowerDamageScalingTick ( float DeltaSeconds )
{
	static UFunction* pFnPowerDamageScalingTick = NULL;

	if ( ! pFnPowerDamageScalingTick )
		pFnPowerDamageScalingTick = (UFunction*) UObject::GObjObjects()->Data[ 42294 ];

	APgPawn_execPowerDamageScalingTick_Parms PowerDamageScalingTick_Parms;
	PowerDamageScalingTick_Parms.DeltaSeconds = DeltaSeconds;

	pFnPowerDamageScalingTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPowerDamageScalingTick, &PowerDamageScalingTick_Parms, NULL );

	pFnPowerDamageScalingTick->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PlayDying
// [0x00820102] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )

void APgPawn::PlayDying ( class UClass* DamageType, struct FVector HitLoc )
{
	static UFunction* pFnPlayDying = NULL;

	if ( ! pFnPlayDying )
		pFnPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 42289 ];

	APgPawn_execPlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy ( &PlayDying_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnPlayDying, &PlayDying_Parms, NULL );
};

// Function GridGame.PgPawn.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgPawn::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 42263 ];

	APgPawn_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function GridGame.PgPawn.NotifyTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void APgPawn::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 42257 ];

	APgPawn_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function GridGame.PgPawn.AddVelocity
// [0x00024002] 
// Parameters infos:
// struct FVector                 NewVelocity                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )

void APgPawn::AddVelocity ( struct FVector NewVelocity, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnAddVelocity = NULL;

	if ( ! pFnAddVelocity )
		pFnAddVelocity = (UFunction*) UObject::GObjObjects()->Data[ 42252 ];

	APgPawn_execAddVelocity_Parms AddVelocity_Parms;
	memcpy ( &AddVelocity_Parms.NewVelocity, &NewVelocity, 0xC );
	memcpy ( &AddVelocity_Parms.HitLocation, &HitLocation, 0xC );
	AddVelocity_Parms.DamageType = DamageType;
	memcpy ( &AddVelocity_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnAddVelocity, &AddVelocity_Parms, NULL );
};

// Function GridGame.PgPawn.GetDamageCauserDamageScaling
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InstigatedBy                   ( CPF_Parm )

float APgPawn::GetDamageCauserDamageScaling ( class AController* InstigatedBy )
{
	static UFunction* pFnGetDamageCauserDamageScaling = NULL;

	if ( ! pFnGetDamageCauserDamageScaling )
		pFnGetDamageCauserDamageScaling = (UFunction*) UObject::GObjObjects()->Data[ 42249 ];

	APgPawn_execGetDamageCauserDamageScaling_Parms GetDamageCauserDamageScaling_Parms;
	GetDamageCauserDamageScaling_Parms.InstigatedBy = InstigatedBy;

	pFnGetDamageCauserDamageScaling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDamageCauserDamageScaling, &GetDamageCauserDamageScaling_Parms, NULL );

	pFnGetDamageCauserDamageScaling->FunctionFlags |= 0x400;

	return GetDamageCauserDamageScaling_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetCumlativeDamage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          timePassed                     ( CPF_Parm )
// struct FName                   damageCauserArchetypeName      ( CPF_Parm )

int APgPawn::GetCumlativeDamage ( float timePassed, struct FName damageCauserArchetypeName )
{
	static UFunction* pFnGetCumlativeDamage = NULL;

	if ( ! pFnGetCumlativeDamage )
		pFnGetCumlativeDamage = (UFunction*) UObject::GObjObjects()->Data[ 42245 ];

	APgPawn_execGetCumlativeDamage_Parms GetCumlativeDamage_Parms;
	GetCumlativeDamage_Parms.timePassed = timePassed;
	memcpy ( &GetCumlativeDamage_Parms.damageCauserArchetypeName, &damageCauserArchetypeName, 0x8 );

	pFnGetCumlativeDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCumlativeDamage, &GetCumlativeDamage_Parms, NULL );

	pFnGetCumlativeDamage->FunctionFlags |= 0x400;

	return GetCumlativeDamage_Parms.ReturnValue;
};

// Function GridGame.PgPawn.TrackDamage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// struct FName                   damageCauserArchetypeName      ( CPF_Parm )
// struct FName                   damageInstigatorArchetypeName  ( CPF_Parm )
// int                            damageInstigatorPlayerIndex    ( CPF_Parm )

void APgPawn::TrackDamage ( int Damage, struct FName damageCauserArchetypeName, struct FName damageInstigatorArchetypeName, int damageInstigatorPlayerIndex )
{
	static UFunction* pFnTrackDamage = NULL;

	if ( ! pFnTrackDamage )
		pFnTrackDamage = (UFunction*) UObject::GObjObjects()->Data[ 42240 ];

	APgPawn_execTrackDamage_Parms TrackDamage_Parms;
	TrackDamage_Parms.Damage = Damage;
	memcpy ( &TrackDamage_Parms.damageCauserArchetypeName, &damageCauserArchetypeName, 0x8 );
	memcpy ( &TrackDamage_Parms.damageInstigatorArchetypeName, &damageInstigatorArchetypeName, 0x8 );
	TrackDamage_Parms.damageInstigatorPlayerIndex = damageInstigatorPlayerIndex;

	pFnTrackDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTrackDamage, &TrackDamage_Parms, NULL );

	pFnTrackDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetDamageScaling
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgPawn::GetDamageScaling ( )
{
	static UFunction* pFnGetDamageScaling = NULL;

	if ( ! pFnGetDamageScaling )
		pFnGetDamageScaling = (UFunction*) UObject::GObjObjects()->Data[ 42231 ];

	APgPawn_execGetDamageScaling_Parms GetDamageScaling_Parms;

	this->ProcessEvent ( pFnGetDamageScaling, &GetDamageScaling_Parms, NULL );

	return GetDamageScaling_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetDefaultCameraMode
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       RequestedBy                    ( CPF_Parm )

struct FName APgPawn::GetDefaultCameraMode ( class APlayerController* RequestedBy )
{
	static UFunction* pFnGetDefaultCameraMode = NULL;

	if ( ! pFnGetDefaultCameraMode )
		pFnGetDefaultCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 42227 ];

	APgPawn_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms, NULL );

	return GetDefaultCameraMode_Parms.ReturnValue;
};

// Function GridGame.PgPawn.SetCameraArchetype
// [0x010201C2] 
// Parameters infos:
// class APgPlayerCamera*         newArchetype                   ( CPF_Parm )

void APgPawn::SetCameraArchetype ( class APgPlayerCamera* newArchetype )
{
	static UFunction* pFnSetCameraArchetype = NULL;

	if ( ! pFnSetCameraArchetype )
		pFnSetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 42225 ];

	APgPawn_execSetCameraArchetype_Parms SetCameraArchetype_Parms;
	SetCameraArchetype_Parms.newArchetype = newArchetype;

	this->ProcessEvent ( pFnSetCameraArchetype, &SetCameraArchetype_Parms, NULL );
};

// Function GridGame.PgPawn.GetCameraArchetype
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerCamera* APgPawn::GetCameraArchetype ( )
{
	static UFunction* pFnGetCameraArchetype = NULL;

	if ( ! pFnGetCameraArchetype )
		pFnGetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 42222 ];

	APgPawn_execGetCameraArchetype_Parms GetCameraArchetype_Parms;

	this->ProcessEvent ( pFnGetCameraArchetype, &GetCameraArchetype_Parms, NULL );

	return GetCameraArchetype_Parms.ReturnValue;
};

// Function GridGame.PgPawn.DrawEnergyActorDebug3D
// [0x00C20102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPawn::DrawEnergyActorDebug3D ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDrawEnergyActorDebug3D = NULL;

	if ( ! pFnDrawEnergyActorDebug3D )
		pFnDrawEnergyActorDebug3D = (UFunction*) UObject::GObjObjects()->Data[ 42201 ];

	APgPawn_execDrawEnergyActorDebug3D_Parms DrawEnergyActorDebug3D_Parms;
	DrawEnergyActorDebug3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawEnergyActorDebug3D, &DrawEnergyActorDebug3D_Parms, NULL );

	if ( out_YL )
		*out_YL = DrawEnergyActorDebug3D_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DrawEnergyActorDebug3D_Parms.out_YPos;
};

// Function GridGame.PgPawn.DisplayDebug
// [0x00C20102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPawn::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 42187 ];

	APgPawn_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgPawn.FindWalkBlockingActor
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AActor*                  blockActor                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )

void APgPawn::FindWalkBlockingActor ( class AActor** blockActor, struct FVector* HitLocation )
{
	static UFunction* pFnFindWalkBlockingActor = NULL;

	if ( ! pFnFindWalkBlockingActor )
		pFnFindWalkBlockingActor = (UFunction*) UObject::GObjObjects()->Data[ 42184 ];

	APgPawn_execFindWalkBlockingActor_Parms FindWalkBlockingActor_Parms;

	pFnFindWalkBlockingActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindWalkBlockingActor, &FindWalkBlockingActor_Parms, NULL );

	pFnFindWalkBlockingActor->FunctionFlags |= 0x400;

	if ( blockActor )
		*blockActor = FindWalkBlockingActor_Parms.blockActor;

	if ( HitLocation )
		memcpy ( HitLocation, &FindWalkBlockingActor_Parms.HitLocation, 0xC );
};

// Function GridGame.PgPawn.DebugDrawCombo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void APgPawn::DebugDrawCombo ( class AHUD* HUD )
{
	static UFunction* pFnDebugDrawCombo = NULL;

	if ( ! pFnDebugDrawCombo )
		pFnDebugDrawCombo = (UFunction*) UObject::GObjObjects()->Data[ 42182 ];

	APgPawn_execDebugDrawCombo_Parms DebugDrawCombo_Parms;
	DebugDrawCombo_Parms.HUD = HUD;

	pFnDebugDrawCombo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDrawCombo, &DebugDrawCombo_Parms, NULL );

	pFnDebugDrawCombo->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.DebugDrawAnimation
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPawn::DebugDrawAnimation ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDebugDrawAnimation = NULL;

	if ( ! pFnDebugDrawAnimation )
		pFnDebugDrawAnimation = (UFunction*) UObject::GObjObjects()->Data[ 42178 ];

	APgPawn_execDebugDrawAnimation_Parms DebugDrawAnimation_Parms;
	DebugDrawAnimation_Parms.HUD = HUD;

	pFnDebugDrawAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDrawAnimation, &DebugDrawAnimation_Parms, NULL );

	pFnDebugDrawAnimation->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DebugDrawAnimation_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DebugDrawAnimation_Parms.out_YPos;
};

// Function GridGame.PgPawn.DebugDrawOnlinePlayerName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void APgPawn::DebugDrawOnlinePlayerName ( class AHUD* HUD )
{
	static UFunction* pFnDebugDrawOnlinePlayerName = NULL;

	if ( ! pFnDebugDrawOnlinePlayerName )
		pFnDebugDrawOnlinePlayerName = (UFunction*) UObject::GObjObjects()->Data[ 42176 ];

	APgPawn_execDebugDrawOnlinePlayerName_Parms DebugDrawOnlinePlayerName_Parms;
	DebugDrawOnlinePlayerName_Parms.HUD = HUD;

	pFnDebugDrawOnlinePlayerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDrawOnlinePlayerName, &DebugDrawOnlinePlayerName_Parms, NULL );

	pFnDebugDrawOnlinePlayerName->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PgPostPossession
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AController*             inController                   ( CPF_Parm )

void APgPawn::PgPostPossession ( class AController* inController )
{
	static UFunction* pFnPgPostPossession = NULL;

	if ( ! pFnPgPostPossession )
		pFnPgPostPossession = (UFunction*) UObject::GObjObjects()->Data[ 42158 ];

	APgPawn_execPgPostPossession_Parms PgPostPossession_Parms;
	PgPostPossession_Parms.inController = inController;

	pFnPgPostPossession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgPostPossession, &PgPostPossession_Parms, NULL );

	pFnPgPostPossession->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.Falling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPawn::eventFalling ( )
{
	static UFunction* pFnFalling = NULL;

	if ( ! pFnFalling )
		pFnFalling = (UFunction*) UObject::GObjObjects()->Data[ 42173 ];

	APgPawn_eventFalling_Parms Falling_Parms;

	this->ProcessEvent ( pFnFalling, &Falling_Parms, NULL );
};

// Function GridGame.PgPawn.EncroachedBy
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgPawn::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 42171 ];

	APgPawn_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function GridGame.PgPawn.FirePgOnDeathEvents
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledController               ( CPF_Parm )

void APgPawn::FirePgOnDeathEvents ( class AController* Killer, class AController* KilledController )
{
	static UFunction* pFnFirePgOnDeathEvents = NULL;

	if ( ! pFnFirePgOnDeathEvents )
		pFnFirePgOnDeathEvents = (UFunction*) UObject::GObjObjects()->Data[ 42164 ];

	APgPawn_execFirePgOnDeathEvents_Parms FirePgOnDeathEvents_Parms;
	FirePgOnDeathEvents_Parms.Killer = Killer;
	FirePgOnDeathEvents_Parms.KilledController = KilledController;

	pFnFirePgOnDeathEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFirePgOnDeathEvents, &FirePgOnDeathEvents_Parms, NULL );

	pFnFirePgOnDeathEvents->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.UnPossessed
// [0x00020002] 
// Parameters infos:

void APgPawn::UnPossessed ( )
{
	static UFunction* pFnUnPossessed = NULL;

	if ( ! pFnUnPossessed )
		pFnUnPossessed = (UFunction*) UObject::GObjObjects()->Data[ 42166 ];

	APgPawn_execUnPossessed_Parms UnPossessed_Parms;

	this->ProcessEvent ( pFnUnPossessed, &UnPossessed_Parms, NULL );
};

// Function GridGame.PgPawn.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool APgPawn::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 42159 ];

	APgPawn_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void APgPawn::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 42153 ];

	APgPawn_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function GridGame.PgPawn.IsPlayingDriverLeave
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsPlayingDriverLeave ( )
{
	static UFunction* pFnIsPlayingDriverLeave = NULL;

	if ( ! pFnIsPlayingDriverLeave )
		pFnIsPlayingDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 42151 ];

	APgPawn_execIsPlayingDriverLeave_Parms IsPlayingDriverLeave_Parms;

	pFnIsPlayingDriverLeave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPlayingDriverLeave, &IsPlayingDriverLeave_Parms, NULL );

	pFnIsPlayingDriverLeave->FunctionFlags |= 0x400;

	return IsPlayingDriverLeave_Parms.ReturnValue;
};

// Function GridGame.PgPawn.IsPlayingDriverEnter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsPlayingDriverEnter ( )
{
	static UFunction* pFnIsPlayingDriverEnter = NULL;

	if ( ! pFnIsPlayingDriverEnter )
		pFnIsPlayingDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 42149 ];

	APgPawn_execIsPlayingDriverEnter_Parms IsPlayingDriverEnter_Parms;

	pFnIsPlayingDriverEnter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPlayingDriverEnter, &IsPlayingDriverEnter_Parms, NULL );

	pFnIsPlayingDriverEnter->FunctionFlags |= 0x400;

	return IsPlayingDriverEnter_Parms.ReturnValue;
};

// Function GridGame.PgPawn.StopDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void APgPawn::eventStopDriving ( class AVehicle* V )
{
	static UFunction* pFnStopDriving = NULL;

	if ( ! pFnStopDriving )
		pFnStopDriving = (UFunction*) UObject::GObjObjects()->Data[ 42144 ];

	APgPawn_eventStopDriving_Parms StopDriving_Parms;
	StopDriving_Parms.V = V;

	this->ProcessEvent ( pFnStopDriving, &StopDriving_Parms, NULL );
};

// Function GridGame.PgPawn.AdjustHealthOnStopDriving
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void APgPawn::AdjustHealthOnStopDriving ( class AVehicle* V )
{
	static UFunction* pFnAdjustHealthOnStopDriving = NULL;

	if ( ! pFnAdjustHealthOnStopDriving )
		pFnAdjustHealthOnStopDriving = (UFunction*) UObject::GObjObjects()->Data[ 42140 ];

	APgPawn_execAdjustHealthOnStopDriving_Parms AdjustHealthOnStopDriving_Parms;
	AdjustHealthOnStopDriving_Parms.V = V;

	this->ProcessEvent ( pFnAdjustHealthOnStopDriving, &AdjustHealthOnStopDriving_Parms, NULL );
};

// Function GridGame.PgPawn.StartDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void APgPawn::eventStartDriving ( class AVehicle* V )
{
	static UFunction* pFnStartDriving = NULL;

	if ( ! pFnStartDriving )
		pFnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 42133 ];

	APgPawn_eventStartDriving_Parms StartDriving_Parms;
	StartDriving_Parms.V = V;

	this->ProcessEvent ( pFnStartDriving, &StartDriving_Parms, NULL );
};

// Function GridGame.PgPawn.AdjustHealthOnStartDriving
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void APgPawn::AdjustHealthOnStartDriving ( class AVehicle* V )
{
	static UFunction* pFnAdjustHealthOnStartDriving = NULL;

	if ( ! pFnAdjustHealthOnStartDriving )
		pFnAdjustHealthOnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 42128 ];

	APgPawn_execAdjustHealthOnStartDriving_Parms AdjustHealthOnStartDriving_Parms;
	AdjustHealthOnStartDriving_Parms.V = V;

	this->ProcessEvent ( pFnAdjustHealthOnStartDriving, &AdjustHealthOnStartDriving_Parms, NULL );
};

// Function GridGame.PgPawn.SetSimulateGravity
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  Simulated                      ( CPF_Parm )

void APgPawn::SetSimulateGravity ( unsigned long Simulated )
{
	static UFunction* pFnSetSimulateGravity = NULL;

	if ( ! pFnSetSimulateGravity )
		pFnSetSimulateGravity = (UFunction*) UObject::GObjObjects()->Data[ 42126 ];

	APgPawn_execSetSimulateGravity_Parms SetSimulateGravity_Parms;
	SetSimulateGravity_Parms.Simulated = Simulated;

	pFnSetSimulateGravity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSimulateGravity, &SetSimulateGravity_Parms, NULL );

	pFnSetSimulateGravity->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.BaseHiddenVehicle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::BaseHiddenVehicle ( )
{
	static UFunction* pFnBaseHiddenVehicle = NULL;

	if ( ! pFnBaseHiddenVehicle )
		pFnBaseHiddenVehicle = (UFunction*) UObject::GObjObjects()->Data[ 42125 ];

	APgPawn_execBaseHiddenVehicle_Parms BaseHiddenVehicle_Parms;

	pFnBaseHiddenVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBaseHiddenVehicle, &BaseHiddenVehicle_Parms, NULL );

	pFnBaseHiddenVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.UnHideVehicle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::UnHideVehicle ( )
{
	static UFunction* pFnUnHideVehicle = NULL;

	if ( ! pFnUnHideVehicle )
		pFnUnHideVehicle = (UFunction*) UObject::GObjObjects()->Data[ 42124 ];

	APgPawn_execUnHideVehicle_Parms UnHideVehicle_Parms;

	pFnUnHideVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnHideVehicle, &UnHideVehicle_Parms, NULL );

	pFnUnHideVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.HideVehicle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgVehicle*              V                              ( CPF_Parm )

void APgPawn::HideVehicle ( class APgVehicle* V )
{
	static UFunction* pFnHideVehicle = NULL;

	if ( ! pFnHideVehicle )
		pFnHideVehicle = (UFunction*) UObject::GObjObjects()->Data[ 42121 ];

	APgPawn_execHideVehicle_Parms HideVehicle_Parms;
	HideVehicle_Parms.V = V;

	pFnHideVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideVehicle, &HideVehicle_Parms, NULL );

	pFnHideVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.FindHiddenVehicle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgVehicle* APgPawn::FindHiddenVehicle ( )
{
	static UFunction* pFnFindHiddenVehicle = NULL;

	if ( ! pFnFindHiddenVehicle )
		pFnFindHiddenVehicle = (UFunction*) UObject::GObjObjects()->Data[ 42118 ];

	APgPawn_execFindHiddenVehicle_Parms FindHiddenVehicle_Parms;

	pFnFindHiddenVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindHiddenVehicle, &FindHiddenVehicle_Parms, NULL );

	pFnFindHiddenVehicle->FunctionFlags |= 0x400;

	return FindHiddenVehicle_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetOnVehicle
// [0x00020102] 
// Parameters infos:
// class APgVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgVehicle*              newVehicleType                 ( CPF_Parm )
// unsigned long                  playDriverEnter                ( CPF_Parm )

class APgVehicle* APgPawn::GetOnVehicle ( class APgVehicle* newVehicleType, unsigned long playDriverEnter )
{
	static UFunction* pFnGetOnVehicle = NULL;

	if ( ! pFnGetOnVehicle )
		pFnGetOnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 42113 ];

	APgPawn_execGetOnVehicle_Parms GetOnVehicle_Parms;
	GetOnVehicle_Parms.newVehicleType = newVehicleType;
	GetOnVehicle_Parms.playDriverEnter = playDriverEnter;

	this->ProcessEvent ( pFnGetOnVehicle, &GetOnVehicle_Parms, NULL );

	return GetOnVehicle_Parms.ReturnValue;
};

// Function GridGame.PgPawn.JumpOffPawn
// [0x00020102] 
// Parameters infos:

void APgPawn::JumpOffPawn ( )
{
	static UFunction* pFnJumpOffPawn = NULL;

	if ( ! pFnJumpOffPawn )
		pFnJumpOffPawn = (UFunction*) UObject::GObjObjects()->Data[ 42111 ];

	APgPawn_execJumpOffPawn_Parms JumpOffPawn_Parms;

	this->ProcessEvent ( pFnJumpOffPawn, &JumpOffPawn_Parms, NULL );
};

// Function GridGame.PgPawn.DoJump
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool APgPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 42107 ];

	APgPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function GridGame.PgPawn.SetWalking
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewIsWalking                  ( CPF_Parm )

void APgPawn::eventSetWalking ( unsigned long bNewIsWalking )
{
	static UFunction* pFnSetWalking = NULL;

	if ( ! pFnSetWalking )
		pFnSetWalking = (UFunction*) UObject::GObjObjects()->Data[ 42105 ];

	APgPawn_eventSetWalking_Parms SetWalking_Parms;
	SetWalking_Parms.bNewIsWalking = bNewIsWalking;

	this->ProcessEvent ( pFnSetWalking, &SetWalking_Parms, NULL );
};

// Function GridGame.PgPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void APgPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 42097 ];

	APgPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function GridGame.PgPawn._Suicide
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPawn::event_Suicide ( )
{
	static UFunction* pFn_Suicide = NULL;

	if ( ! pFn_Suicide )
		pFn_Suicide = (UFunction*) UObject::GObjObjects()->Data[ 42096 ];

	APgPawn_event_Suicide_Parms _Suicide_Parms;

	this->ProcessEvent ( pFn_Suicide, &_Suicide_Parms, NULL );
};

// Function GridGame.PgPawn.SpawnDefaultController
// [0x00020002] 
// Parameters infos:

void APgPawn::SpawnDefaultController ( )
{
	static UFunction* pFnSpawnDefaultController = NULL;

	if ( ! pFnSpawnDefaultController )
		pFnSpawnDefaultController = (UFunction*) UObject::GObjObjects()->Data[ 42093 ];

	APgPawn_execSpawnDefaultController_Parms SpawnDefaultController_Parms;

	this->ProcessEvent ( pFnSpawnDefaultController, &SpawnDefaultController_Parms, NULL );
};

// Function GridGame.PgPawn.OnSetMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USeqAct_SetMesh*         Action                         ( CPF_Parm )

void APgPawn::eventOnSetMesh ( class USeqAct_SetMesh* Action )
{
	static UFunction* pFnOnSetMesh = NULL;

	if ( ! pFnOnSetMesh )
		pFnOnSetMesh = (UFunction*) UObject::GObjObjects()->Data[ 42090 ];

	APgPawn_eventOnSetMesh_Parms OnSetMesh_Parms;
	OnSetMesh_Parms.Action = Action;

	this->ProcessEvent ( pFnOnSetMesh, &OnSetMesh_Parms, NULL );
};

// Function GridGame.PgPawn.SetTargetedSmartObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgSmartObject*          targetedSmartObject            ( CPF_Parm )

void APgPawn::SetTargetedSmartObject ( class APgSmartObject* targetedSmartObject )
{
	static UFunction* pFnSetTargetedSmartObject = NULL;

	if ( ! pFnSetTargetedSmartObject )
		pFnSetTargetedSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 42088 ];

	APgPawn_execSetTargetedSmartObject_Parms SetTargetedSmartObject_Parms;
	SetTargetedSmartObject_Parms.targetedSmartObject = targetedSmartObject;

	pFnSetTargetedSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetedSmartObject, &SetTargetedSmartObject_Parms, NULL );

	pFnSetTargetedSmartObject->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetTargetedSmartObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgSmartObject*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgSmartObject* APgPawn::GetTargetedSmartObject ( )
{
	static UFunction* pFnGetTargetedSmartObject = NULL;

	if ( ! pFnGetTargetedSmartObject )
		pFnGetTargetedSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 42086 ];

	APgPawn_execGetTargetedSmartObject_Parms GetTargetedSmartObject_Parms;

	pFnGetTargetedSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetedSmartObject, &GetTargetedSmartObject_Parms, NULL );

	pFnGetTargetedSmartObject->FunctionFlags |= 0x400;

	return GetTargetedSmartObject_Parms.ReturnValue;
};

// Function GridGame.PgPawn.SetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void APgPawn::SetTarget ( class AActor* Target )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 42084 ];

	APgPawn_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.Target = Target;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* APgPawn::GetTarget ( )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 42082 ];

	APgPawn_execGetTarget_Parms GetTarget_Parms;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function GridGame.PgPawn.LastHitWasKnockdown
// [0x00080102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::LastHitWasKnockdown ( )
{
	static UFunction* pFnLastHitWasKnockdown = NULL;

	if ( ! pFnLastHitWasKnockdown )
		pFnLastHitWasKnockdown = (UFunction*) UObject::GObjObjects()->Data[ 42080 ];

	APgPawn_execLastHitWasKnockdown_Parms LastHitWasKnockdown_Parms;

	this->ProcessEvent ( pFnLastHitWasKnockdown, &LastHitWasKnockdown_Parms, NULL );

	return LastHitWasKnockdown_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PerformHitReaction
// [0x00880102] 
// Parameters infos:

void APgPawn::PerformHitReaction ( )
{
	static UFunction* pFnPerformHitReaction = NULL;

	if ( ! pFnPerformHitReaction )
		pFnPerformHitReaction = (UFunction*) UObject::GObjObjects()->Data[ 42077 ];

	APgPawn_execPerformHitReaction_Parms PerformHitReaction_Parms;

	this->ProcessEvent ( pFnPerformHitReaction, &PerformHitReaction_Parms, NULL );
};

// Function GridGame.PgPawn.GetDamageReactionSpecialMove
// [0x00080102] 
// Parameters infos:
// class UPgSpecialMoveAsset*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  findKnockDown                  ( CPF_Parm )

class UPgSpecialMoveAsset* APgPawn::GetDamageReactionSpecialMove ( unsigned long findKnockDown )
{
	static UFunction* pFnGetDamageReactionSpecialMove = NULL;

	if ( ! pFnGetDamageReactionSpecialMove )
		pFnGetDamageReactionSpecialMove = (UFunction*) UObject::GObjObjects()->Data[ 42072 ];

	APgPawn_execGetDamageReactionSpecialMove_Parms GetDamageReactionSpecialMove_Parms;
	GetDamageReactionSpecialMove_Parms.findKnockDown = findKnockDown;

	this->ProcessEvent ( pFnGetDamageReactionSpecialMove, &GetDamageReactionSpecialMove_Parms, NULL );

	return GetDamageReactionSpecialMove_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetDamageReactionDamageParamOverride
// [0x00080002] 
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

class UPgDamageParam* APgPawn::GetDamageReactionDamageParamOverride ( class AActor* DamageCauser )
{
	static UFunction* pFnGetDamageReactionDamageParamOverride = NULL;

	if ( ! pFnGetDamageReactionDamageParamOverride )
		pFnGetDamageReactionDamageParamOverride = (UFunction*) UObject::GObjObjects()->Data[ 42065 ];

	APgPawn_execGetDamageReactionDamageParamOverride_Parms GetDamageReactionDamageParamOverride_Parms;
	GetDamageReactionDamageParamOverride_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnGetDamageReactionDamageParamOverride, &GetDamageReactionDamageParamOverride_Parms, NULL );

	return GetDamageReactionDamageParamOverride_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetDamageReactionDamageScaling
// [0x00080002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

float APgPawn::GetDamageReactionDamageScaling ( class AActor* DamageCauser )
{
	static UFunction* pFnGetDamageReactionDamageScaling = NULL;

	if ( ! pFnGetDamageReactionDamageScaling )
		pFnGetDamageReactionDamageScaling = (UFunction*) UObject::GObjObjects()->Data[ 42056 ];

	APgPawn_execGetDamageReactionDamageScaling_Parms GetDamageReactionDamageScaling_Parms;
	GetDamageReactionDamageScaling_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnGetDamageReactionDamageScaling, &GetDamageReactionDamageScaling_Parms, NULL );

	return GetDamageReactionDamageScaling_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ReplicatedPlayHitEffects
// [0x00080102] 
// Parameters infos:

void APgPawn::ReplicatedPlayHitEffects ( )
{
	static UFunction* pFnReplicatedPlayHitEffects = NULL;

	if ( ! pFnReplicatedPlayHitEffects )
		pFnReplicatedPlayHitEffects = (UFunction*) UObject::GObjObjects()->Data[ 42055 ];

	APgPawn_execReplicatedPlayHitEffects_Parms ReplicatedPlayHitEffects_Parms;

	this->ProcessEvent ( pFnReplicatedPlayHitEffects, &ReplicatedPlayHitEffects_Parms, NULL );
};

// Function GridGame.PgPawn.PopulateHitReactionRepInfo
// [0x00C80002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FVector                 hitFromLoc                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void APgPawn::PopulateHitReactionRepInfo ( float Damage, struct FVector HitLocation, class UClass* DamageType, struct FVector Momentum, struct FVector hitFromLoc, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnPopulateHitReactionRepInfo = NULL;

	if ( ! pFnPopulateHitReactionRepInfo )
		pFnPopulateHitReactionRepInfo = (UFunction*) UObject::GObjObjects()->Data[ 42044 ];

	APgPawn_execPopulateHitReactionRepInfo_Parms PopulateHitReactionRepInfo_Parms;
	PopulateHitReactionRepInfo_Parms.Damage = Damage;
	memcpy ( &PopulateHitReactionRepInfo_Parms.HitLocation, &HitLocation, 0xC );
	PopulateHitReactionRepInfo_Parms.DamageType = DamageType;
	memcpy ( &PopulateHitReactionRepInfo_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &PopulateHitReactionRepInfo_Parms.hitFromLoc, &hitFromLoc, 0xC );

	this->ProcessEvent ( pFnPopulateHitReactionRepInfo, &PopulateHitReactionRepInfo_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &PopulateHitReactionRepInfo_Parms.HitInfo, 0x1C );
};

// Function GridGame.PgPawn.GetDamageReactionIndex
// [0x00080102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

int APgPawn::GetDamageReactionIndex ( class AActor* DamageCauser )
{
	static UFunction* pFnGetDamageReactionIndex = NULL;

	if ( ! pFnGetDamageReactionIndex )
		pFnGetDamageReactionIndex = (UFunction*) UObject::GObjObjects()->Data[ 42034 ];

	APgPawn_execGetDamageReactionIndex_Parms GetDamageReactionIndex_Parms;
	GetDamageReactionIndex_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnGetDamageReactionIndex, &GetDamageReactionIndex_Parms, NULL );

	return GetDamageReactionIndex_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetMovementMode
// [0x00080002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char APgPawn::GetMovementMode ( )
{
	static UFunction* pFnGetMovementMode = NULL;

	if ( ! pFnGetMovementMode )
		pFnGetMovementMode = (UFunction*) UObject::GObjObjects()->Data[ 42027 ];

	APgPawn_execGetMovementMode_Parms GetMovementMode_Parms;

	this->ProcessEvent ( pFnGetMovementMode, &GetMovementMode_Parms, NULL );

	return GetMovementMode_Parms.ReturnValue;
};

// Function GridGame.PgPawn._TurnOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPawn::event_TurnOff ( )
{
	static UFunction* pFn_TurnOff = NULL;

	if ( ! pFn_TurnOff )
		pFn_TurnOff = (UFunction*) UObject::GObjObjects()->Data[ 42026 ];

	APgPawn_event_TurnOff_Parms _TurnOff_Parms;

	this->ProcessEvent ( pFn_TurnOff, &_TurnOff_Parms, NULL );
};

// Function GridGame.PgPawn.TurnOff
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPawn::TurnOff ( )
{
	static UFunction* pFnTurnOff = NULL;

	if ( ! pFnTurnOff )
		pFnTurnOff = (UFunction*) UObject::GObjObjects()->Data[ 42025 ];

	APgPawn_execTurnOff_Parms TurnOff_Parms;

	pFnTurnOff->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnOff, &TurnOff_Parms, NULL );

	pFnTurnOff->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PlayHit
// [0x00820002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void APgPawn::PlayHit ( float Damage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FVector Momentum, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnPlayHit = NULL;

	if ( ! pFnPlayHit )
		pFnPlayHit = (UFunction*) UObject::GObjObjects()->Data[ 42015 ];

	APgPawn_execPlayHit_Parms PlayHit_Parms;
	PlayHit_Parms.Damage = Damage;
	PlayHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &PlayHit_Parms.HitLocation, &HitLocation, 0xC );
	PlayHit_Parms.DamageType = DamageType;
	memcpy ( &PlayHit_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &PlayHit_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnPlayHit, &PlayHit_Parms, NULL );
};

// Function GridGame.PgPawn.IsPlayingHitReaction
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsPlayingHitReaction ( )
{
	static UFunction* pFnIsPlayingHitReaction = NULL;

	if ( ! pFnIsPlayingHitReaction )
		pFnIsPlayingHitReaction = (UFunction*) UObject::GObjObjects()->Data[ 42013 ];

	APgPawn_execIsPlayingHitReaction_Parms IsPlayingHitReaction_Parms;

	pFnIsPlayingHitReaction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPlayingHitReaction, &IsPlayingHitReaction_Parms, NULL );

	pFnIsPlayingHitReaction->FunctionFlags |= 0x400;

	return IsPlayingHitReaction_Parms.ReturnValue;
};

// Function GridGame.PgPawn.OnClothSim
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_ClothSim*      Action                         ( CPF_Parm )

void APgPawn::OnClothSim ( class UPgSeqAct_ClothSim* Action )
{
	static UFunction* pFnOnClothSim = NULL;

	if ( ! pFnOnClothSim )
		pFnOnClothSim = (UFunction*) UObject::GObjObjects()->Data[ 42009 ];

	APgPawn_execOnClothSim_Parms OnClothSim_Parms;
	OnClothSim_Parms.Action = Action;

	this->ProcessEvent ( pFnOnClothSim, &OnClothSim_Parms, NULL );
};

// Function GridGame.PgPawn.SetMovementPhysics
// [0x00020002] 
// Parameters infos:

void APgPawn::SetMovementPhysics ( )
{
	static UFunction* pFnSetMovementPhysics = NULL;

	if ( ! pFnSetMovementPhysics )
		pFnSetMovementPhysics = (UFunction*) UObject::GObjObjects()->Data[ 42008 ];

	APgPawn_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

	this->ProcessEvent ( pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL );
};

// Function GridGame.PgPawn.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void APgPawn::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 42004 ];

	APgPawn_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function GridGame.PgPawn.PlayHitWall
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgPawn::PlayHitWall ( struct FVector HitNormal )
{
	static UFunction* pFnPlayHitWall = NULL;

	if ( ! pFnPlayHitWall )
		pFnPlayHitWall = (UFunction*) UObject::GObjObjects()->Data[ 42002 ];

	APgPawn_execPlayHitWall_Parms PlayHitWall_Parms;
	memcpy ( &PlayHitWall_Parms.HitNormal, &HitNormal, 0xC );

	pFnPlayHitWall->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayHitWall, &PlayHitWall_Parms, NULL );

	pFnPlayHitWall->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PlayLanded
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ImpactVel                      ( CPF_Parm )

void APgPawn::PlayLanded ( float ImpactVel )
{
	static UFunction* pFnPlayLanded = NULL;

	if ( ! pFnPlayLanded )
		pFnPlayLanded = (UFunction*) UObject::GObjObjects()->Data[ 42000 ];

	APgPawn_execPlayLanded_Parms PlayLanded_Parms;
	PlayLanded_Parms.ImpactVel = ImpactVel;

	pFnPlayLanded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayLanded, &PlayLanded_Parms, NULL );

	pFnPlayLanded->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void APgPawn::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 41997 ];

	APgPawn_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function GridGame.PgPawn.Landed
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void APgPawn::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 41992 ];

	APgPawn_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function GridGame.PgPawn.PgLockDesiredRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bLock                          ( CPF_Parm )

void APgPawn::PgLockDesiredRotation ( unsigned long bLock )
{
	static UFunction* pFnPgLockDesiredRotation = NULL;

	if ( ! pFnPgLockDesiredRotation )
		pFnPgLockDesiredRotation = (UFunction*) UObject::GObjObjects()->Data[ 41990 ];

	APgPawn_execPgLockDesiredRotation_Parms PgLockDesiredRotation_Parms;
	PgLockDesiredRotation_Parms.bLock = bLock;

	pFnPgLockDesiredRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgLockDesiredRotation, &PgLockDesiredRotation_Parms, NULL );

	pFnPgLockDesiredRotation->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.PgSetDesiredRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FRotator                TargetDesiredRotation          ( CPF_Parm )

void APgPawn::PgSetDesiredRotation ( struct FRotator TargetDesiredRotation )
{
	static UFunction* pFnPgSetDesiredRotation = NULL;

	if ( ! pFnPgSetDesiredRotation )
		pFnPgSetDesiredRotation = (UFunction*) UObject::GObjObjects()->Data[ 41988 ];

	APgPawn_execPgSetDesiredRotation_Parms PgSetDesiredRotation_Parms;
	memcpy ( &PgSetDesiredRotation_Parms.TargetDesiredRotation, &TargetDesiredRotation, 0xC );

	pFnPgSetDesiredRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgSetDesiredRotation, &PgSetDesiredRotation_Parms, NULL );

	pFnPgSetDesiredRotation->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ComboStopProgression
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::ComboStopProgression ( )
{
	static UFunction* pFnComboStopProgression = NULL;

	if ( ! pFnComboStopProgression )
		pFnComboStopProgression = (UFunction*) UObject::GObjObjects()->Data[ 41987 ];

	APgPawn_execComboStopProgression_Parms ComboStopProgression_Parms;

	pFnComboStopProgression->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboStopProgression, &ComboStopProgression_Parms, NULL );

	pFnComboStopProgression->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.ComboSetTime
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// float                          NewTime                        ( CPF_Parm )

void APgPawn::ComboSetTime ( float NewTime )
{
	static UFunction* pFnComboSetTime = NULL;

	if ( ! pFnComboSetTime )
		pFnComboSetTime = (UFunction*) UObject::GObjObjects()->Data[ 41984 ];

	APgPawn_execComboSetTime_Parms ComboSetTime_Parms;
	ComboSetTime_Parms.NewTime = NewTime;

	this->ProcessEvent ( pFnComboSetTime, &ComboSetTime_Parms, NULL );
};

// Function GridGame.PgPawn.DebugComboCompareStates
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FPgComboState           One                            ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FPgComboState           Two                            ( CPF_Const | CPF_Parm | CPF_OutParm )

bool APgPawn::DebugComboCompareStates ( struct FPgComboState* One, struct FPgComboState* Two )
{
	static UFunction* pFnDebugComboCompareStates = NULL;

	if ( ! pFnDebugComboCompareStates )
		pFnDebugComboCompareStates = (UFunction*) UObject::GObjObjects()->Data[ 41980 ];

	APgPawn_execDebugComboCompareStates_Parms DebugComboCompareStates_Parms;

	pFnDebugComboCompareStates->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugComboCompareStates, &DebugComboCompareStates_Parms, NULL );

	pFnDebugComboCompareStates->FunctionFlags |= 0x400;

	if ( One )
		memcpy ( One, &DebugComboCompareStates_Parms.One, 0xA0 );

	if ( Two )
		memcpy ( Two, &DebugComboCompareStates_Parms.Two, 0xA0 );

	return DebugComboCompareStates_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboEnd
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::ComboEnd ( )
{
	static UFunction* pFnComboEnd = NULL;

	if ( ! pFnComboEnd )
		pFnComboEnd = (UFunction*) UObject::GObjObjects()->Data[ 41979 ];

	APgPawn_execComboEnd_Parms ComboEnd_Parms;

	pFnComboEnd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboEnd, &ComboEnd_Parms, NULL );

	pFnComboEnd->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.IsInCombo
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::IsInCombo ( )
{
	static UFunction* pFnIsInCombo = NULL;

	if ( ! pFnIsInCombo )
		pFnIsInCombo = (UFunction*) UObject::GObjObjects()->Data[ 41977 ];

	APgPawn_execIsInCombo_Parms IsInCombo_Parms;

	pFnIsInCombo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInCombo, &IsInCombo_Parms, NULL );

	pFnIsInCombo->FunctionFlags |= 0x400;

	return IsInCombo_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboSyncAnimAndBehaviorsToState
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgComboState           comboState                     ( CPF_Const | CPF_Parm | CPF_OutParm )

void APgPawn::ComboSyncAnimAndBehaviorsToState ( struct FPgComboState* comboState )
{
	static UFunction* pFnComboSyncAnimAndBehaviorsToState = NULL;

	if ( ! pFnComboSyncAnimAndBehaviorsToState )
		pFnComboSyncAnimAndBehaviorsToState = (UFunction*) UObject::GObjObjects()->Data[ 41975 ];

	APgPawn_execComboSyncAnimAndBehaviorsToState_Parms ComboSyncAnimAndBehaviorsToState_Parms;

	pFnComboSyncAnimAndBehaviorsToState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboSyncAnimAndBehaviorsToState, &ComboSyncAnimAndBehaviorsToState_Parms, NULL );

	pFnComboSyncAnimAndBehaviorsToState->FunctionFlags |= 0x400;

	if ( comboState )
		memcpy ( comboState, &ComboSyncAnimAndBehaviorsToState_Parms.comboState, 0xA0 );
};

// Function GridGame.PgPawn.ComboSetPendingState
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgComboFrameState      comboPendingState              ( CPF_Const | CPF_Parm | CPF_OutParm )

void APgPawn::ComboSetPendingState ( struct FPgComboFrameState* comboPendingState )
{
	static UFunction* pFnComboSetPendingState = NULL;

	if ( ! pFnComboSetPendingState )
		pFnComboSetPendingState = (UFunction*) UObject::GObjObjects()->Data[ 41973 ];

	APgPawn_execComboSetPendingState_Parms ComboSetPendingState_Parms;

	pFnComboSetPendingState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboSetPendingState, &ComboSetPendingState_Parms, NULL );

	pFnComboSetPendingState->FunctionFlags |= 0x400;

	if ( comboPendingState )
		memcpy ( comboPendingState, &ComboSetPendingState_Parms.comboPendingState, 0x30 );
};

// Function GridGame.PgPawn.ComboGetPendingState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgComboFrameState      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FPgComboFrameState APgPawn::ComboGetPendingState ( )
{
	static UFunction* pFnComboGetPendingState = NULL;

	if ( ! pFnComboGetPendingState )
		pFnComboGetPendingState = (UFunction*) UObject::GObjObjects()->Data[ 41971 ];

	APgPawn_execComboGetPendingState_Parms ComboGetPendingState_Parms;

	pFnComboGetPendingState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboGetPendingState, &ComboGetPendingState_Parms, NULL );

	pFnComboGetPendingState->FunctionFlags |= 0x400;

	return ComboGetPendingState_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboGetState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgComboState           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FPgComboState APgPawn::ComboGetState ( )
{
	static UFunction* pFnComboGetState = NULL;

	if ( ! pFnComboGetState )
		pFnComboGetState = (UFunction*) UObject::GObjObjects()->Data[ 41969 ];

	APgPawn_execComboGetState_Parms ComboGetState_Parms;

	pFnComboGetState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboGetState, &ComboGetState_Parms, NULL );

	pFnComboGetState->FunctionFlags |= 0x400;

	return ComboGetState_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboReplicateWithParams
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgSpecialMoveAsset*     specialMoveAsset               ( CPF_Parm )
// struct FPgSpecialMoveParams    Params                         ( CPF_Const | CPF_Parm | CPF_OutParm )

bool APgPawn::ComboReplicateWithParams ( class UPgSpecialMoveAsset* specialMoveAsset, struct FPgSpecialMoveParams* Params )
{
	static UFunction* pFnComboReplicateWithParams = NULL;

	if ( ! pFnComboReplicateWithParams )
		pFnComboReplicateWithParams = (UFunction*) UObject::GObjObjects()->Data[ 41950 ];

	APgPawn_execComboReplicateWithParams_Parms ComboReplicateWithParams_Parms;
	ComboReplicateWithParams_Parms.specialMoveAsset = specialMoveAsset;

	pFnComboReplicateWithParams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboReplicateWithParams, &ComboReplicateWithParams_Parms, NULL );

	pFnComboReplicateWithParams->FunctionFlags |= 0x400;

	if ( Params )
		memcpy ( Params, &ComboReplicateWithParams_Parms.Params, 0x18 );

	return ComboReplicateWithParams_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboReplicate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgSpecialMoveAsset*     specialMoveAsset               ( CPF_Parm )

bool APgPawn::ComboReplicate ( class UPgSpecialMoveAsset* specialMoveAsset )
{
	static UFunction* pFnComboReplicate = NULL;

	if ( ! pFnComboReplicate )
		pFnComboReplicate = (UFunction*) UObject::GObjObjects()->Data[ 41963 ];

	APgPawn_execComboReplicate_Parms ComboReplicate_Parms;
	ComboReplicate_Parms.specialMoveAsset = specialMoveAsset;

	pFnComboReplicate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboReplicate, &ComboReplicate_Parms, NULL );

	pFnComboReplicate->FunctionFlags |= 0x400;

	return ComboReplicate_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboSimulateWithParams
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgSpecialMoveAsset*     SpecialMove                    ( CPF_Parm )
// struct FPgSpecialMoveParams    Params                         ( CPF_Const | CPF_Parm | CPF_OutParm )

bool APgPawn::ComboSimulateWithParams ( class UPgSpecialMoveAsset* SpecialMove, struct FPgSpecialMoveParams* Params )
{
	static UFunction* pFnComboSimulateWithParams = NULL;

	if ( ! pFnComboSimulateWithParams )
		pFnComboSimulateWithParams = (UFunction*) UObject::GObjObjects()->Data[ 41959 ];

	APgPawn_execComboSimulateWithParams_Parms ComboSimulateWithParams_Parms;
	ComboSimulateWithParams_Parms.SpecialMove = SpecialMove;

	pFnComboSimulateWithParams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboSimulateWithParams, &ComboSimulateWithParams_Parms, NULL );

	pFnComboSimulateWithParams->FunctionFlags |= 0x400;

	if ( Params )
		memcpy ( Params, &ComboSimulateWithParams_Parms.Params, 0x18 );

	return ComboSimulateWithParams_Parms.ReturnValue;
};

// Function GridGame.PgPawn.ComboSimulate
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgSpecialMoveAsset*     SpecialMove                    ( CPF_Parm )

bool APgPawn::ComboSimulate ( class UPgSpecialMoveAsset* SpecialMove )
{
	static UFunction* pFnComboSimulate = NULL;

	if ( ! pFnComboSimulate )
		pFnComboSimulate = (UFunction*) UObject::GObjObjects()->Data[ 41956 ];

	APgPawn_execComboSimulate_Parms ComboSimulate_Parms;
	ComboSimulate_Parms.SpecialMove = SpecialMove;

	pFnComboSimulate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComboSimulate, &ComboSimulate_Parms, NULL );

	pFnComboSimulate->FunctionFlags |= 0x400;

	return ComboSimulate_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PgTickNetworkTime
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgPawn::PgTickNetworkTime ( float DeltaTime )
{
	static UFunction* pFnPgTickNetworkTime = NULL;

	if ( ! pFnPgTickNetworkTime )
		pFnPgTickNetworkTime = (UFunction*) UObject::GObjObjects()->Data[ 41954 ];

	APgPawn_execPgTickNetworkTime_Parms PgTickNetworkTime_Parms;
	PgTickNetworkTime_Parms.DeltaTime = DeltaTime;

	pFnPgTickNetworkTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgTickNetworkTime, &PgTickNetworkTime_Parms, NULL );

	pFnPgTickNetworkTime->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetSpecialMove
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgSpecialMoveAsset*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgSpecialMoveAsset* APgPawn::GetSpecialMove ( )
{
	static UFunction* pFnGetSpecialMove = NULL;

	if ( ! pFnGetSpecialMove )
		pFnGetSpecialMove = (UFunction*) UObject::GObjObjects()->Data[ 41952 ];

	APgPawn_execGetSpecialMove_Parms GetSpecialMove_Parms;

	pFnGetSpecialMove->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpecialMove, &GetSpecialMove_Parms, NULL );

	pFnGetSpecialMove->FunctionFlags |= 0x400;

	return GetSpecialMove_Parms.ReturnValue;
};

// Function GridGame.PgPawn.OnPerformSpecialMove
// [0x00820002] 
// Parameters infos:
// class UPgSeqAct_PerformSpecialMove* specialMoveSeqAct              ( CPF_Parm )

void APgPawn::OnPerformSpecialMove ( class UPgSeqAct_PerformSpecialMove* specialMoveSeqAct )
{
	static UFunction* pFnOnPerformSpecialMove = NULL;

	if ( ! pFnOnPerformSpecialMove )
		pFnOnPerformSpecialMove = (UFunction*) UObject::GObjObjects()->Data[ 41946 ];

	APgPawn_execOnPerformSpecialMove_Parms OnPerformSpecialMove_Parms;
	OnPerformSpecialMove_Parms.specialMoveSeqAct = specialMoveSeqAct;

	this->ProcessEvent ( pFnOnPerformSpecialMove, &OnPerformSpecialMove_Parms, NULL );
};

// Function GridGame.PgPawn.RagdollDisable
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::RagdollDisable ( )
{
	static UFunction* pFnRagdollDisable = NULL;

	if ( ! pFnRagdollDisable )
		pFnRagdollDisable = (UFunction*) UObject::GObjObjects()->Data[ 41945 ];

	APgPawn_execRagdollDisable_Parms RagdollDisable_Parms;

	pFnRagdollDisable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRagdollDisable, &RagdollDisable_Parms, NULL );

	pFnRagdollDisable->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetGroundAudioSwitch
// [0x00020002] 
// Parameters infos:
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void APgPawn::SetGroundAudioSwitch ( struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnSetGroundAudioSwitch = NULL;

	if ( ! pFnSetGroundAudioSwitch )
		pFnSetGroundAudioSwitch = (UFunction*) UObject::GObjObjects()->Data[ 41935 ];

	APgPawn_execSetGroundAudioSwitch_Parms SetGroundAudioSwitch_Parms;
	memcpy ( &SetGroundAudioSwitch_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnSetGroundAudioSwitch, &SetGroundAudioSwitch_Parms, NULL );
};

// Function GridGame.PgPawn.PlayFootSound
// [0x00880002] 
// Parameters infos:
// unsigned char                  WhichImpact                    ( CPF_Parm )

void APgPawn::PlayFootSound ( unsigned char WhichImpact )
{
	static UFunction* pFnPlayFootSound = NULL;

	if ( ! pFnPlayFootSound )
		pFnPlayFootSound = (UFunction*) UObject::GObjObjects()->Data[ 41917 ];

	APgPawn_execPlayFootSound_Parms PlayFootSound_Parms;
	PlayFootSound_Parms.WhichImpact = WhichImpact;

	this->ProcessEvent ( pFnPlayFootSound, &PlayFootSound_Parms, NULL );
};

// Function GridGame.PgPawn.PlayFootStepSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void APgPawn::eventPlayFootStepSound ( int FootDown )
{
	static UFunction* pFnPlayFootStepSound = NULL;

	if ( ! pFnPlayFootStepSound )
		pFnPlayFootStepSound = (UFunction*) UObject::GObjObjects()->Data[ 41915 ];

	APgPawn_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL );
};

// Function GridGame.PgPawn.PlayFootJumpSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void APgPawn::eventPlayFootJumpSound ( int FootDown )
{
	static UFunction* pFnPlayFootJumpSound = NULL;

	if ( ! pFnPlayFootJumpSound )
		pFnPlayFootJumpSound = (UFunction*) UObject::GObjObjects()->Data[ 41913 ];

	APgPawn_eventPlayFootJumpSound_Parms PlayFootJumpSound_Parms;
	PlayFootJumpSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootJumpSound, &PlayFootJumpSound_Parms, NULL );
};

// Function GridGame.PgPawn.PlayFootShuffleSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void APgPawn::eventPlayFootShuffleSound ( int FootDown )
{
	static UFunction* pFnPlayFootShuffleSound = NULL;

	if ( ! pFnPlayFootShuffleSound )
		pFnPlayFootShuffleSound = (UFunction*) UObject::GObjObjects()->Data[ 41911 ];

	APgPawn_eventPlayFootShuffleSound_Parms PlayFootShuffleSound_Parms;
	PlayFootShuffleSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootShuffleSound, &PlayFootShuffleSound_Parms, NULL );
};

// Function GridGame.PgPawn.PlayParticleEffect
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UAnimNotify_PlayParticleEffect* AnimNotifyData                 ( CPF_Const | CPF_Parm )

bool APgPawn::eventPlayParticleEffect ( class UAnimNotify_PlayParticleEffect* AnimNotifyData )
{
	static UFunction* pFnPlayParticleEffect = NULL;

	if ( ! pFnPlayParticleEffect )
		pFnPlayParticleEffect = (UFunction*) UObject::GObjObjects()->Data[ 41899 ];

	APgPawn_eventPlayParticleEffect_Parms PlayParticleEffect_Parms;
	PlayParticleEffect_Parms.AnimNotifyData = AnimNotifyData;

	this->ProcessEvent ( pFnPlayParticleEffect, &PlayParticleEffect_Parms, NULL );

	return PlayParticleEffect_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void APgPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 41896 ];

	APgPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function GridGame.PgPawn.RootMotionExtracted
// [0x00420D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )
// struct FBoneAtom               ExtractedRootMotionDelta       ( CPF_Parm | CPF_OutParm )

void APgPawn::eventRootMotionExtracted ( class USkeletalMeshComponent* SkelComp, struct FBoneAtom* ExtractedRootMotionDelta )
{
	static UFunction* pFnRootMotionExtracted = NULL;

	if ( ! pFnRootMotionExtracted )
		pFnRootMotionExtracted = (UFunction*) UObject::GObjObjects()->Data[ 41893 ];

	APgPawn_eventRootMotionExtracted_Parms RootMotionExtracted_Parms;
	RootMotionExtracted_Parms.SkelComp = SkelComp;

	pFnRootMotionExtracted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRootMotionExtracted, &RootMotionExtracted_Parms, NULL );

	pFnRootMotionExtracted->FunctionFlags |= 0x400;

	if ( ExtractedRootMotionDelta )
		memcpy ( ExtractedRootMotionDelta, &RootMotionExtracted_Parms.ExtractedRootMotionDelta, 0x20 );
};

// Function GridGame.PgPawn.OnAnimEnd
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void APgPawn::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 41889 ];

	APgPawn_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	pFnOnAnimEnd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );

	pFnOnAnimEnd->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.AnimGetLocomotionTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgPawn::AnimGetLocomotionTime ( )
{
	static UFunction* pFnAnimGetLocomotionTime = NULL;

	if ( ! pFnAnimGetLocomotionTime )
		pFnAnimGetLocomotionTime = (UFunction*) UObject::GObjObjects()->Data[ 41887 ];

	APgPawn_execAnimGetLocomotionTime_Parms AnimGetLocomotionTime_Parms;

	pFnAnimGetLocomotionTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimGetLocomotionTime, &AnimGetLocomotionTime_Parms, NULL );

	pFnAnimGetLocomotionTime->FunctionFlags |= 0x400;

	return AnimGetLocomotionTime_Parms.ReturnValue;
};

// Function GridGame.PgPawn.AnimSetLocomotionTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          inTime                         ( CPF_Parm )

void APgPawn::AnimSetLocomotionTime ( float inTime )
{
	static UFunction* pFnAnimSetLocomotionTime = NULL;

	if ( ! pFnAnimSetLocomotionTime )
		pFnAnimSetLocomotionTime = (UFunction*) UObject::GObjObjects()->Data[ 41885 ];

	APgPawn_execAnimSetLocomotionTime_Parms AnimSetLocomotionTime_Parms;
	AnimSetLocomotionTime_Parms.inTime = inTime;

	pFnAnimSetLocomotionTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimSetLocomotionTime, &AnimSetLocomotionTime_Parms, NULL );

	pFnAnimSetLocomotionTime->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.AnimPlayActionTree
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgAnimTreeInstance*     AnimTreeInstance               ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void APgPawn::AnimPlayActionTree ( class UPgAnimTreeInstance* AnimTreeInstance, float BlendTime )
{
	static UFunction* pFnAnimPlayActionTree = NULL;

	if ( ! pFnAnimPlayActionTree )
		pFnAnimPlayActionTree = (UFunction*) UObject::GObjObjects()->Data[ 41882 ];

	APgPawn_execAnimPlayActionTree_Parms AnimPlayActionTree_Parms;
	AnimPlayActionTree_Parms.AnimTreeInstance = AnimTreeInstance;
	AnimPlayActionTree_Parms.BlendTime = BlendTime;

	pFnAnimPlayActionTree->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimPlayActionTree, &AnimPlayActionTree_Parms, NULL );

	pFnAnimPlayActionTree->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.AnimIsLineup
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPawn::AnimIsLineup ( )
{
	static UFunction* pFnAnimIsLineup = NULL;

	if ( ! pFnAnimIsLineup )
		pFnAnimIsLineup = (UFunction*) UObject::GObjObjects()->Data[ 41880 ];

	APgPawn_execAnimIsLineup_Parms AnimIsLineup_Parms;

	pFnAnimIsLineup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimIsLineup, &AnimIsLineup_Parms, NULL );

	pFnAnimIsLineup->FunctionFlags |= 0x400;

	return AnimIsLineup_Parms.ReturnValue;
};

// Function GridGame.PgPawn.AnimApplyRootMotion
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FBoneAtom               rootMotionAtom                 ( CPF_Parm | CPF_OutParm )

void APgPawn::AnimApplyRootMotion ( float DeltaTime, struct FBoneAtom* rootMotionAtom )
{
	static UFunction* pFnAnimApplyRootMotion = NULL;

	if ( ! pFnAnimApplyRootMotion )
		pFnAnimApplyRootMotion = (UFunction*) UObject::GObjObjects()->Data[ 41877 ];

	APgPawn_execAnimApplyRootMotion_Parms AnimApplyRootMotion_Parms;
	AnimApplyRootMotion_Parms.DeltaTime = DeltaTime;

	pFnAnimApplyRootMotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimApplyRootMotion, &AnimApplyRootMotion_Parms, NULL );

	pFnAnimApplyRootMotion->FunctionFlags |= 0x400;

	if ( rootMotionAtom )
		memcpy ( rootMotionAtom, &AnimApplyRootMotion_Parms.rootMotionAtom, 0x20 );
};

// Function GridGame.PgPawn.AnimInit
// [0x00040501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::AnimInit ( )
{
	static UFunction* pFnAnimInit = NULL;

	if ( ! pFnAnimInit )
		pFnAnimInit = (UFunction*) UObject::GObjObjects()->Data[ 41876 ];

	APgPawn_execAnimInit_Parms AnimInit_Parms;

	pFnAnimInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnimInit, &AnimInit_Parms, NULL );

	pFnAnimInit->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.StartMeshLightwallCollisionTimer
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPawn::StartMeshLightwallCollisionTimer ( )
{
	static UFunction* pFnStartMeshLightwallCollisionTimer = NULL;

	if ( ! pFnStartMeshLightwallCollisionTimer )
		pFnStartMeshLightwallCollisionTimer = (UFunction*) UObject::GObjObjects()->Data[ 41875 ];

	APgPawn_execStartMeshLightwallCollisionTimer_Parms StartMeshLightwallCollisionTimer_Parms;

	pFnStartMeshLightwallCollisionTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartMeshLightwallCollisionTimer, &StartMeshLightwallCollisionTimer_Parms, NULL );

	pFnStartMeshLightwallCollisionTimer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetMeshLightwallCollision
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  collideWithLightwalls          ( CPF_Parm )

void APgPawn::SetMeshLightwallCollision ( unsigned long collideWithLightwalls )
{
	static UFunction* pFnSetMeshLightwallCollision = NULL;

	if ( ! pFnSetMeshLightwallCollision )
		pFnSetMeshLightwallCollision = (UFunction*) UObject::GObjObjects()->Data[ 41873 ];

	APgPawn_execSetMeshLightwallCollision_Parms SetMeshLightwallCollision_Parms;
	SetMeshLightwallCollision_Parms.collideWithLightwalls = collideWithLightwalls;

	pFnSetMeshLightwallCollision->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMeshLightwallCollision, &SetMeshLightwallCollision_Parms, NULL );

	pFnSetMeshLightwallCollision->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.DeInitPlayerTeamCollisionChannels
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::DeInitPlayerTeamCollisionChannels ( )
{
	static UFunction* pFnDeInitPlayerTeamCollisionChannels = NULL;

	if ( ! pFnDeInitPlayerTeamCollisionChannels )
		pFnDeInitPlayerTeamCollisionChannels = (UFunction*) UObject::GObjObjects()->Data[ 41872 ];

	APgPawn_execDeInitPlayerTeamCollisionChannels_Parms DeInitPlayerTeamCollisionChannels_Parms;

	pFnDeInitPlayerTeamCollisionChannels->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeInitPlayerTeamCollisionChannels, &DeInitPlayerTeamCollisionChannels_Parms, NULL );

	pFnDeInitPlayerTeamCollisionChannels->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.InitPlayerTeamCollisionChannels
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::InitPlayerTeamCollisionChannels ( )
{
	static UFunction* pFnInitPlayerTeamCollisionChannels = NULL;

	if ( ! pFnInitPlayerTeamCollisionChannels )
		pFnInitPlayerTeamCollisionChannels = (UFunction*) UObject::GObjObjects()->Data[ 41871 ];

	APgPawn_execInitPlayerTeamCollisionChannels_Parms InitPlayerTeamCollisionChannels_Parms;

	pFnInitPlayerTeamCollisionChannels->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPlayerTeamCollisionChannels, &InitPlayerTeamCollisionChannels_Parms, NULL );

	pFnInitPlayerTeamCollisionChannels->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgPawn::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 41867 ];

	APgPawn_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgPawn::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 41865 ];

	APgPawn_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgPawn.GetMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgPawn::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 41862 ];

	APgPawn_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgPawn.InitMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgPawn::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 41861 ];

	APgPawn_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetSpecialMoveManualLineup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 lineupDist                     ( CPF_Parm )
// struct FRotator                rotDelta                       ( CPF_Parm )
// struct FVector                 initialLoc                     ( CPF_Parm )

void APgPawn::SetSpecialMoveManualLineup ( struct FVector lineupDist, struct FRotator rotDelta, struct FVector initialLoc )
{
	static UFunction* pFnSetSpecialMoveManualLineup = NULL;

	if ( ! pFnSetSpecialMoveManualLineup )
		pFnSetSpecialMoveManualLineup = (UFunction*) UObject::GObjObjects()->Data[ 41857 ];

	APgPawn_execSetSpecialMoveManualLineup_Parms SetSpecialMoveManualLineup_Parms;
	memcpy ( &SetSpecialMoveManualLineup_Parms.lineupDist, &lineupDist, 0xC );
	memcpy ( &SetSpecialMoveManualLineup_Parms.rotDelta, &rotDelta, 0xC );
	memcpy ( &SetSpecialMoveManualLineup_Parms.initialLoc, &initialLoc, 0xC );

	pFnSetSpecialMoveManualLineup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSpecialMoveManualLineup, &SetSpecialMoveManualLineup_Parms, NULL );

	pFnSetSpecialMoveManualLineup->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.UpdateSpecialMoveManualLineup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgSpecialMoveManualLineupParams State                          ( CPF_Parm )

void APgPawn::UpdateSpecialMoveManualLineup ( struct FPgSpecialMoveManualLineupParams State )
{
	static UFunction* pFnUpdateSpecialMoveManualLineup = NULL;

	if ( ! pFnUpdateSpecialMoveManualLineup )
		pFnUpdateSpecialMoveManualLineup = (UFunction*) UObject::GObjObjects()->Data[ 41855 ];

	APgPawn_execUpdateSpecialMoveManualLineup_Parms UpdateSpecialMoveManualLineup_Parms;
	memcpy ( &UpdateSpecialMoveManualLineup_Parms.State, &State, 0x24 );

	pFnUpdateSpecialMoveManualLineup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSpecialMoveManualLineup, &UpdateSpecialMoveManualLineup_Parms, NULL );

	pFnUpdateSpecialMoveManualLineup->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetSpecialMoveState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgSpecialMoveState     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FPgSpecialMoveState APgPawn::GetSpecialMoveState ( )
{
	static UFunction* pFnGetSpecialMoveState = NULL;

	if ( ! pFnGetSpecialMoveState )
		pFnGetSpecialMoveState = (UFunction*) UObject::GObjObjects()->Data[ 41853 ];

	APgPawn_execGetSpecialMoveState_Parms GetSpecialMoveState_Parms;

	pFnGetSpecialMoveState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpecialMoveState, &GetSpecialMoveState_Parms, NULL );

	pFnGetSpecialMoveState->FunctionFlags |= 0x400;

	return GetSpecialMoveState_Parms.ReturnValue;
};

// Function GridGame.PgPawn.UpdateSpecialMoveState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FPgSpecialMoveState     State                          ( CPF_Parm )

void APgPawn::UpdateSpecialMoveState ( struct FPgSpecialMoveState State )
{
	static UFunction* pFnUpdateSpecialMoveState = NULL;

	if ( ! pFnUpdateSpecialMoveState )
		pFnUpdateSpecialMoveState = (UFunction*) UObject::GObjObjects()->Data[ 41851 ];

	APgPawn_execUpdateSpecialMoveState_Parms UpdateSpecialMoveState_Parms;
	memcpy ( &UpdateSpecialMoveState_Parms.State, &State, 0x20 );

	pFnUpdateSpecialMoveState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSpecialMoveState, &UpdateSpecialMoveState_Parms, NULL );

	pFnUpdateSpecialMoveState->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.GetTeamName
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgPawn::GetTeamName ( )
{
	static UFunction* pFnGetTeamName = NULL;

	if ( ! pFnGetTeamName )
		pFnGetTeamName = (UFunction*) UObject::GObjObjects()->Data[ 41849 ];

	APgPawn_execGetTeamName_Parms GetTeamName_Parms;

	pFnGetTeamName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamName, &GetTeamName_Parms, NULL );

	pFnGetTeamName->FunctionFlags |= 0x400;

	return GetTeamName_Parms.ReturnValue;
};

// Function GridGame.PgPawn.PostEvent
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )

void APgPawn::PostEvent ( struct FName EventName, struct FName listName )
{
	static UFunction* pFnPostEvent = NULL;

	if ( ! pFnPostEvent )
		pFnPostEvent = (UFunction*) UObject::GObjObjects()->Data[ 41846 ];

	APgPawn_execPostEvent_Parms PostEvent_Parms;
	memcpy ( &PostEvent_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEvent_Parms.listName, &listName, 0x8 );

	pFnPostEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEvent, &PostEvent_Parms, NULL );

	pFnPostEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SetSmartObjectUsage
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgSmartObject*          smartObject                    ( CPF_Parm )

void APgPawn::SetSmartObjectUsage ( class APgSmartObject* smartObject )
{
	static UFunction* pFnSetSmartObjectUsage = NULL;

	if ( ! pFnSetSmartObjectUsage )
		pFnSetSmartObjectUsage = (UFunction*) UObject::GObjObjects()->Data[ 41844 ];

	APgPawn_execSetSmartObjectUsage_Parms SetSmartObjectUsage_Parms;
	SetSmartObjectUsage_Parms.smartObject = smartObject;

	pFnSetSmartObjectUsage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSmartObjectUsage, &SetSmartObjectUsage_Parms, NULL );

	pFnSetSmartObjectUsage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.OnUseSmartObject
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgSeqAct_UseSmartObject* inAction                       ( CPF_Parm )

void APgPawn::OnUseSmartObject ( class UPgSeqAct_UseSmartObject* inAction )
{
	static UFunction* pFnOnUseSmartObject = NULL;

	if ( ! pFnOnUseSmartObject )
		pFnOnUseSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 41842 ];

	APgPawn_execOnUseSmartObject_Parms OnUseSmartObject_Parms;
	OnUseSmartObject_Parms.inAction = inAction;

	pFnOnUseSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnUseSmartObject, &OnUseSmartObject_Parms, NULL );

	pFnOnUseSmartObject->FunctionFlags |= 0x400;
};

// Function GridGame.PgPawn.SpecialMoveTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        Start                          ( CPF_Parm )
// class ANavigationPoint*        End                            ( CPF_Parm )
// class AActor*                  Next                           ( CPF_Parm )

bool APgPawn::SpecialMoveTo ( class ANavigationPoint* Start, class ANavigationPoint* End, class AActor* Next )
{
	static UFunction* pFnSpecialMoveTo = NULL;

	if ( ! pFnSpecialMoveTo )
		pFnSpecialMoveTo = (UFunction*) UObject::GObjObjects()->Data[ 41837 ];

	APgPawn_execSpecialMoveTo_Parms SpecialMoveTo_Parms;
	SpecialMoveTo_Parms.Start = Start;
	SpecialMoveTo_Parms.End = End;
	SpecialMoveTo_Parms.Next = Next;

	pFnSpecialMoveTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpecialMoveTo, &SpecialMoveTo_Parms, NULL );

	pFnSpecialMoveTo->FunctionFlags |= 0x400;

	return SpecialMoveTo_Parms.ReturnValue;
};

// Function GridGame.PgPawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgPawn::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 41834 ];

	APgPawn_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function GridGame.PgPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 41830 ];

	APgPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgAnimNodeBlendByDriving.StopDriving
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgAnimNodeBlendByDriving::StopDriving ( )
{
	static UFunction* pFnStopDriving = NULL;

	if ( ! pFnStopDriving )
		pFnStopDriving = (UFunction*) UObject::GObjObjects()->Data[ 42148 ];

	UPgAnimNodeBlendByDriving_execStopDriving_Parms StopDriving_Parms;

	pFnStopDriving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopDriving, &StopDriving_Parms, NULL );

	pFnStopDriving->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeBlendByDriving.StartDriving
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgAnimNodeBlendByDriving::StartDriving ( )
{
	static UFunction* pFnStartDriving = NULL;

	if ( ! pFnStartDriving )
		pFnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 42138 ];

	UPgAnimNodeBlendByDriving_execStartDriving_Parms StartDriving_Parms;

	pFnStartDriving->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartDriving, &StartDriving_Parms, NULL );

	pFnStartDriving->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeBlendByPhysics.SetTimeToWaitBeforeBlend
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          waitTime                       ( CPF_Parm )

void UPgAnimNodeBlendByPhysics::SetTimeToWaitBeforeBlend ( float waitTime )
{
	static UFunction* pFnSetTimeToWaitBeforeBlend = NULL;

	if ( ! pFnSetTimeToWaitBeforeBlend )
		pFnSetTimeToWaitBeforeBlend = (UFunction*) UObject::GObjObjects()->Data[ 42806 ];

	UPgAnimNodeBlendByPhysics_execSetTimeToWaitBeforeBlend_Parms SetTimeToWaitBeforeBlend_Parms;
	SetTimeToWaitBeforeBlend_Parms.waitTime = waitTime;

	pFnSetTimeToWaitBeforeBlend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTimeToWaitBeforeBlend, &SetTimeToWaitBeforeBlend_Parms, NULL );

	pFnSetTimeToWaitBeforeBlend->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeLoop.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// float                          Rate                           ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

void UPgAnimNodeLoop::PlayAnim ( unsigned long bLoop, float Rate, float StartTime )
{
	static UFunction* pFnPlayAnim = NULL;

	if ( ! pFnPlayAnim )
		pFnPlayAnim = (UFunction*) UObject::GObjObjects()->Data[ 42880 ];

	UPgAnimNodeLoop_execPlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.Rate = Rate;
	PlayAnim_Parms.StartTime = StartTime;

	pFnPlayAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAnim, &PlayAnim_Parms, NULL );

	pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSequenceList.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UPgAnimNodeSequenceList::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 42924 ];

	UPgAnimNodeSequenceList_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSequenceStack.OnInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPgAnimNodeSequenceStack::eventOnInit ( )
{
	static UFunction* pFnOnInit = NULL;

	if ( ! pFnOnInit )
		pFnOnInit = (UFunction*) UObject::GObjObjects()->Data[ 42940 ];

	UPgAnimNodeSequenceStack_eventOnInit_Parms OnInit_Parms;

	this->ProcessEvent ( pFnOnInit, &OnInit_Parms, NULL );
};

// Function GridGame.PgAnimNodeSequenceStack.PlayAnimationSet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         Sequences                      ( CPF_Parm | CPF_NeedCtorLink )
// float                          SeqRate                        ( CPF_Parm )
// unsigned long                  bLoopLast                      ( CPF_Parm )

void UPgAnimNodeSequenceStack::PlayAnimationSet ( TArray< struct FName > Sequences, float SeqRate, unsigned long bLoopLast )
{
	static UFunction* pFnPlayAnimationSet = NULL;

	if ( ! pFnPlayAnimationSet )
		pFnPlayAnimationSet = (UFunction*) UObject::GObjObjects()->Data[ 42935 ];

	UPgAnimNodeSequenceStack_execPlayAnimationSet_Parms PlayAnimationSet_Parms;
	memcpy ( &PlayAnimationSet_Parms.Sequences, &Sequences, 0xC );
	PlayAnimationSet_Parms.SeqRate = SeqRate;
	PlayAnimationSet_Parms.bLoopLast = bLoopLast;

	pFnPlayAnimationSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAnimationSet, &PlayAnimationSet_Parms, NULL );

	pFnPlayAnimationSet->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSequenceStack.PlayAnimation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Sequence                       ( CPF_Parm )
// float                          SeqRate                        ( CPF_Parm )
// unsigned long                  bSeqLoop                       ( CPF_Parm )

void UPgAnimNodeSequenceStack::PlayAnimation ( struct FName Sequence, float SeqRate, unsigned long bSeqLoop )
{
	static UFunction* pFnPlayAnimation = NULL;

	if ( ! pFnPlayAnimation )
		pFnPlayAnimation = (UFunction*) UObject::GObjObjects()->Data[ 42931 ];

	UPgAnimNodeSequenceStack_execPlayAnimation_Parms PlayAnimation_Parms;
	memcpy ( &PlayAnimation_Parms.Sequence, &Sequence, 0x8 );
	PlayAnimation_Parms.SeqRate = SeqRate;
	PlayAnimation_Parms.bSeqLoop = bSeqLoop;

	pFnPlayAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAnimation, &PlayAnimation_Parms, NULL );

	pFnPlayAnimation->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSubtree.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgAnimNodeSubtree::StopAnim ( )
{
	static UFunction* pFnStopAnim = NULL;

	if ( ! pFnStopAnim )
		pFnStopAnim = (UFunction*) UObject::GObjObjects()->Data[ 42956 ];

	UPgAnimNodeSubtree_execStopAnim_Parms StopAnim_Parms;

	pFnStopAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopAnim, &StopAnim_Parms, NULL );

	pFnStopAnim->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSubtree.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// float                          Rate                           ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )

void UPgAnimNodeSubtree::PlayAnim ( unsigned long bLoop, float Rate, float StartTime )
{
	static UFunction* pFnPlayAnim = NULL;

	if ( ! pFnPlayAnim )
		pFnPlayAnim = (UFunction*) UObject::GObjObjects()->Data[ 42952 ];

	UPgAnimNodeSubtree_execPlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.Rate = Rate;
	PlayAnim_Parms.StartTime = StartTime;

	pFnPlayAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAnim, &PlayAnim_Parms, NULL );

	pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSubtree.SetAnimTreeInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgAnimTreeInstance*     animSubtree                    ( CPF_Parm )

void UPgAnimNodeSubtree::SetAnimTreeInstance ( class UPgAnimTreeInstance* animSubtree )
{
	static UFunction* pFnSetAnimTreeInstance = NULL;

	if ( ! pFnSetAnimTreeInstance )
		pFnSetAnimTreeInstance = (UFunction*) UObject::GObjObjects()->Data[ 42950 ];

	UPgAnimNodeSubtree_execSetAnimTreeInstance_Parms SetAnimTreeInstance_Parms;
	SetAnimTreeInstance_Parms.animSubtree = animSubtree;

	pFnSetAnimTreeInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAnimTreeInstance, &SetAnimTreeInstance_Parms, NULL );

	pFnSetAnimTreeInstance->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimNodeSubtree.GenerateAnimTreeFromTemplate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UAnimTree*               animSubtree                    ( CPF_Parm )

void UPgAnimNodeSubtree::GenerateAnimTreeFromTemplate ( class UAnimTree* animSubtree )
{
	static UFunction* pFnGenerateAnimTreeFromTemplate = NULL;

	if ( ! pFnGenerateAnimTreeFromTemplate )
		pFnGenerateAnimTreeFromTemplate = (UFunction*) UObject::GObjObjects()->Data[ 42948 ];

	UPgAnimNodeSubtree_execGenerateAnimTreeFromTemplate_Parms GenerateAnimTreeFromTemplate_Parms;
	GenerateAnimTreeFromTemplate_Parms.animSubtree = animSubtree;

	pFnGenerateAnimTreeFromTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateAnimTreeFromTemplate, &GenerateAnimTreeFromTemplate_Parms, NULL );

	pFnGenerateAnimTreeFromTemplate->FunctionFlags |= 0x400;
};

// Function GridGame.PgAnimTreeInstance.GenerateInstanceFromTemplate
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgAnimTreeInstance*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UAnimTree*               AnimTreeTemplate               ( CPF_Parm )

class UPgAnimTreeInstance* UPgAnimTreeInstance::GenerateInstanceFromTemplate ( class UAnimTree* AnimTreeTemplate )
{
	static UFunction* pFnGenerateInstanceFromTemplate = NULL;

	if ( ! pFnGenerateInstanceFromTemplate )
		pFnGenerateInstanceFromTemplate = (UFunction*) UObject::GObjObjects()->Data[ 42962 ];

	UPgAnimTreeInstance_execGenerateInstanceFromTemplate_Parms GenerateInstanceFromTemplate_Parms;
	GenerateInstanceFromTemplate_Parms.AnimTreeTemplate = AnimTreeTemplate;

	pFnGenerateInstanceFromTemplate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGenerateInstanceFromTemplate, &GenerateInstanceFromTemplate_Parms, NULL );

	pFnGenerateInstanceFromTemplate->FunctionFlags |= 0x400;

	return GenerateInstanceFromTemplate_Parms.ReturnValue;
};

// Function GridGame.PgAutoTestManager.EnableMemUpdate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void APgAutoTestManager::EnableMemUpdate ( unsigned long bEnable )
{
	static UFunction* pFnEnableMemUpdate = NULL;

	if ( ! pFnEnableMemUpdate )
		pFnEnableMemUpdate = (UFunction*) UObject::GObjObjects()->Data[ 42979 ];

	APgAutoTestManager_execEnableMemUpdate_Parms EnableMemUpdate_Parms;
	EnableMemUpdate_Parms.bEnable = bEnable;

	pFnEnableMemUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableMemUpdate, &EnableMemUpdate_Parms, NULL );

	pFnEnableMemUpdate->FunctionFlags |= 0x400;
};

// Function GridGame.PgAutoTestManager.StopCurrentFMV
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgAutoTestManager::StopCurrentFMV ( )
{
	static UFunction* pFnStopCurrentFMV = NULL;

	if ( ! pFnStopCurrentFMV )
		pFnStopCurrentFMV = (UFunction*) UObject::GObjObjects()->Data[ 42978 ];

	APgAutoTestManager_execStopCurrentFMV_Parms StopCurrentFMV_Parms;

	pFnStopCurrentFMV->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopCurrentFMV, &StopCurrentFMV_Parms, NULL );

	pFnStopCurrentFMV->FunctionFlags |= 0x400;
};

// Function GridGame.PgAutoTestManager.AddSentinelLabel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FVector                 InLocation                     ( CPF_Const | CPF_Parm )
// struct FRotator                InRotation                     ( CPF_Const | CPF_Parm )

void APgAutoTestManager::AddSentinelLabel ( struct FString Label, struct FVector InLocation, struct FRotator InRotation )
{
	static UFunction* pFnAddSentinelLabel = NULL;

	if ( ! pFnAddSentinelLabel )
		pFnAddSentinelLabel = (UFunction*) UObject::GObjObjects()->Data[ 42974 ];

	APgAutoTestManager_execAddSentinelLabel_Parms AddSentinelLabel_Parms;
	memcpy ( &AddSentinelLabel_Parms.Label, &Label, 0xC );
	memcpy ( &AddSentinelLabel_Parms.InLocation, &InLocation, 0xC );
	memcpy ( &AddSentinelLabel_Parms.InRotation, &InRotation, 0xC );

	pFnAddSentinelLabel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddSentinelLabel, &AddSentinelLabel_Parms, NULL );

	pFnAddSentinelLabel->FunctionFlags |= 0x400;
};

// Function GridGame.PgAutoTestManager.OnAutotestComplete
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgAutoTestManager::eventOnAutotestComplete ( )
{
	static UFunction* pFnOnAutotestComplete = NULL;

	if ( ! pFnOnAutotestComplete )
		pFnOnAutotestComplete = (UFunction*) UObject::GObjObjects()->Data[ 42973 ];

	APgAutoTestManager_eventOnAutotestComplete_Parms OnAutotestComplete_Parms;

	this->ProcessEvent ( pFnOnAutotestComplete, &OnAutotestComplete_Parms, NULL );
};

// Function GridGame.PgAutoTestManager.DoTravelTheWorld
// [0x00020002] 
// Parameters infos:

void APgAutoTestManager::DoTravelTheWorld ( )
{
	static UFunction* pFnDoTravelTheWorld = NULL;

	if ( ! pFnDoTravelTheWorld )
		pFnDoTravelTheWorld = (UFunction*) UObject::GObjObjects()->Data[ 42972 ];

	APgAutoTestManager_execDoTravelTheWorld_Parms DoTravelTheWorld_Parms;

	this->ProcessEvent ( pFnDoTravelTheWorld, &DoTravelTheWorld_Parms, NULL );
};

// Function GridGame.PgAutoTestManager.GatherStats
// [0x00020002] 
// Parameters infos:

void APgAutoTestManager::GatherStats ( )
{
	static UFunction* pFnGatherStats = NULL;

	if ( ! pFnGatherStats )
		pFnGatherStats = (UFunction*) UObject::GObjObjects()->Data[ 42970 ];

	APgAutoTestManager_execGatherStats_Parms GatherStats_Parms;

	this->ProcessEvent ( pFnGatherStats, &GatherStats_Parms, NULL );
};

// Function GridGame.PgAutoTestManager.CheckForSentinelRun
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgAutoTestManager::CheckForSentinelRun ( )
{
	static UFunction* pFnCheckForSentinelRun = NULL;

	if ( ! pFnCheckForSentinelRun )
		pFnCheckForSentinelRun = (UFunction*) UObject::GObjObjects()->Data[ 42968 ];

	APgAutoTestManager_execCheckForSentinelRun_Parms CheckForSentinelRun_Parms;

	this->ProcessEvent ( pFnCheckForSentinelRun, &CheckForSentinelRun_Parms, NULL );

	return CheckForSentinelRun_Parms.ReturnValue;
};

// Function GridGame.PgAutoTestManager.InitializeOptions
// [0x00020002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )

void APgAutoTestManager::InitializeOptions ( struct FString Options )
{
	static UFunction* pFnInitializeOptions = NULL;

	if ( ! pFnInitializeOptions )
		pFnInitializeOptions = (UFunction*) UObject::GObjObjects()->Data[ 42965 ];

	APgAutoTestManager_execInitializeOptions_Parms InitializeOptions_Parms;
	memcpy ( &InitializeOptions_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitializeOptions, &InitializeOptions_Parms, NULL );
};

// Function GridGame.PgCriticallyDampedSpring_Float.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgCriticallyDampedSpring_Float::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43099 ];

	UPgCriticallyDampedSpring_Float_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.SpringParametersToString
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FSpringParameters       P                              ( CPF_Parm )

struct FString UPgCriticallyDampedSpring_Float::SpringParametersToString ( struct FSpringParameters P )
{
	static UFunction* pFnSpringParametersToString = NULL;

	if ( ! pFnSpringParametersToString )
		pFnSpringParametersToString = (UFunction*) UObject::GObjObjects()->Data[ 43096 ];

	UPgCriticallyDampedSpring_Float_execSpringParametersToString_Parms SpringParametersToString_Parms;
	memcpy ( &SpringParametersToString_Parms.P, &P, 0x4 );

	this->ProcessEvent ( pFnSpringParametersToString, &SpringParametersToString_Parms, NULL );

	return SpringParametersToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.IsFullyCompressed
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          kThreshold                     ( CPF_Const | CPF_OptionalParm | CPF_Parm )

bool UPgCriticallyDampedSpring_Float::IsFullyCompressed ( float kThreshold )
{
	static UFunction* pFnIsFullyCompressed = NULL;

	if ( ! pFnIsFullyCompressed )
		pFnIsFullyCompressed = (UFunction*) UObject::GObjObjects()->Data[ 43093 ];

	UPgCriticallyDampedSpring_Float_execIsFullyCompressed_Parms IsFullyCompressed_Parms;
	IsFullyCompressed_Parms.kThreshold = kThreshold;

	pFnIsFullyCompressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFullyCompressed, &IsFullyCompressed_Parms, NULL );

	pFnIsFullyCompressed->FunctionFlags |= 0x400;

	return IsFullyCompressed_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.GetGoal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCriticallyDampedSpring_Float::GetGoal ( )
{
	static UFunction* pFnGetGoal = NULL;

	if ( ! pFnGetGoal )
		pFnGetGoal = (UFunction*) UObject::GObjObjects()->Data[ 43091 ];

	UPgCriticallyDampedSpring_Float_execGetGoal_Parms GetGoal_Parms;

	pFnGetGoal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGoal, &GetGoal_Parms, NULL );

	pFnGetGoal->FunctionFlags |= 0x400;

	return GetGoal_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.GetVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCriticallyDampedSpring_Float::GetVelocity ( )
{
	static UFunction* pFnGetVelocity = NULL;

	if ( ! pFnGetVelocity )
		pFnGetVelocity = (UFunction*) UObject::GObjObjects()->Data[ 43089 ];

	UPgCriticallyDampedSpring_Float_execGetVelocity_Parms GetVelocity_Parms;

	pFnGetVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVelocity, &GetVelocity_Parms, NULL );

	pFnGetVelocity->FunctionFlags |= 0x400;

	return GetVelocity_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCriticallyDampedSpring_Float::GetPosition ( )
{
	static UFunction* pFnGetPosition = NULL;

	if ( ! pFnGetPosition )
		pFnGetPosition = (UFunction*) UObject::GObjObjects()->Data[ 43087 ];

	UPgCriticallyDampedSpring_Float_execGetPosition_Parms GetPosition_Parms;

	pFnGetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPosition, &GetPosition_Parms, NULL );

	pFnGetPosition->FunctionFlags |= 0x400;

	return GetPosition_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Float.GetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FSpringParameters       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FSpringParameters UPgCriticallyDampedSpring_Float::GetParameters ( )
{
	static UFunction* pFnGetParameters = NULL;

	if ( ! pFnGetParameters )
		pFnGetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43085 ];

	UPgCriticallyDampedSpring_Float_execGetParameters_Parms GetParameters_Parms;

	pFnGetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParameters, &GetParameters_Parms, NULL );

	pFnGetParameters->FunctionFlags |= 0x400;

	return GetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgCriticallyDampedSpring_Orbit::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43335 ];

	UPgCriticallyDampedSpring_Orbit_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.SpringParametersToString
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FOrbitSpringParameters  P                              ( CPF_Parm )

struct FString UPgCriticallyDampedSpring_Orbit::SpringParametersToString ( struct FOrbitSpringParameters P )
{
	static UFunction* pFnSpringParametersToString = NULL;

	if ( ! pFnSpringParametersToString )
		pFnSpringParametersToString = (UFunction*) UObject::GObjObjects()->Data[ 43332 ];

	UPgCriticallyDampedSpring_Orbit_execSpringParametersToString_Parms SpringParametersToString_Parms;
	memcpy ( &SpringParametersToString_Parms.P, &P, 0x10 );

	this->ProcessEvent ( pFnSpringParametersToString, &SpringParametersToString_Parms, NULL );

	return SpringParametersToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.GetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FOrbitSpringParameters  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FOrbitSpringParameters UPgCriticallyDampedSpring_Orbit::GetParameters ( )
{
	static UFunction* pFnGetParameters = NULL;

	if ( ! pFnGetParameters )
		pFnGetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43328 ];

	UPgCriticallyDampedSpring_Orbit_execGetParameters_Parms GetParameters_Parms;

	pFnGetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParameters, &GetParameters_Parms, NULL );

	pFnGetParameters->FunctionFlags |= 0x400;

	return GetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.GetGoal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FOrbitComponents        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FOrbitComponents UPgCriticallyDampedSpring_Orbit::GetGoal ( )
{
	static UFunction* pFnGetGoal = NULL;

	if ( ! pFnGetGoal )
		pFnGetGoal = (UFunction*) UObject::GObjObjects()->Data[ 43326 ];

	UPgCriticallyDampedSpring_Orbit_execGetGoal_Parms GetGoal_Parms;

	pFnGetGoal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGoal, &GetGoal_Parms, NULL );

	pFnGetGoal->FunctionFlags |= 0x400;

	return GetGoal_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FOrbitComponents        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FOrbitComponents UPgCriticallyDampedSpring_Orbit::GetPosition ( )
{
	static UFunction* pFnGetPosition = NULL;

	if ( ! pFnGetPosition )
		pFnGetPosition = (UFunction*) UObject::GObjObjects()->Data[ 43324 ];

	UPgCriticallyDampedSpring_Orbit_execGetPosition_Parms GetPosition_Parms;

	pFnGetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPosition, &GetPosition_Parms, NULL );

	pFnGetPosition->FunctionFlags |= 0x400;

	return GetPosition_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Orbit.IsFullyCompressed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgCriticallyDampedSpring_Orbit::IsFullyCompressed ( )
{
	static UFunction* pFnIsFullyCompressed = NULL;

	if ( ! pFnIsFullyCompressed )
		pFnIsFullyCompressed = (UFunction*) UObject::GObjObjects()->Data[ 43321 ];

	UPgCriticallyDampedSpring_Orbit_execIsFullyCompressed_Parms IsFullyCompressed_Parms;

	pFnIsFullyCompressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFullyCompressed, &IsFullyCompressed_Parms, NULL );

	pFnIsFullyCompressed->FunctionFlags |= 0x400;

	return IsFullyCompressed_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgCriticallyDampedSpring_Rotator::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43114 ];

	UPgCriticallyDampedSpring_Rotator_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.SpringParametersToString
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FRotationSpringParameters P                              ( CPF_Parm )

struct FString UPgCriticallyDampedSpring_Rotator::SpringParametersToString ( struct FRotationSpringParameters P )
{
	static UFunction* pFnSpringParametersToString = NULL;

	if ( ! pFnSpringParametersToString )
		pFnSpringParametersToString = (UFunction*) UObject::GObjObjects()->Data[ 43111 ];

	UPgCriticallyDampedSpring_Rotator_execSpringParametersToString_Parms SpringParametersToString_Parms;
	memcpy ( &SpringParametersToString_Parms.P, &P, 0xC );

	this->ProcessEvent ( pFnSpringParametersToString, &SpringParametersToString_Parms, NULL );

	return SpringParametersToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.IsFullyCompressed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgCriticallyDampedSpring_Rotator::IsFullyCompressed ( )
{
	static UFunction* pFnIsFullyCompressed = NULL;

	if ( ! pFnIsFullyCompressed )
		pFnIsFullyCompressed = (UFunction*) UObject::GObjObjects()->Data[ 43109 ];

	UPgCriticallyDampedSpring_Rotator_execIsFullyCompressed_Parms IsFullyCompressed_Parms;

	pFnIsFullyCompressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFullyCompressed, &IsFullyCompressed_Parms, NULL );

	pFnIsFullyCompressed->FunctionFlags |= 0x400;

	return IsFullyCompressed_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.GetGoal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UPgCriticallyDampedSpring_Rotator::GetGoal ( )
{
	static UFunction* pFnGetGoal = NULL;

	if ( ! pFnGetGoal )
		pFnGetGoal = (UFunction*) UObject::GObjObjects()->Data[ 43107 ];

	UPgCriticallyDampedSpring_Rotator_execGetGoal_Parms GetGoal_Parms;

	pFnGetGoal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGoal, &GetGoal_Parms, NULL );

	pFnGetGoal->FunctionFlags |= 0x400;

	return GetGoal_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.GetVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UPgCriticallyDampedSpring_Rotator::GetVelocity ( )
{
	static UFunction* pFnGetVelocity = NULL;

	if ( ! pFnGetVelocity )
		pFnGetVelocity = (UFunction*) UObject::GObjObjects()->Data[ 43105 ];

	UPgCriticallyDampedSpring_Rotator_execGetVelocity_Parms GetVelocity_Parms;

	pFnGetVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVelocity, &GetVelocity_Parms, NULL );

	pFnGetVelocity->FunctionFlags |= 0x400;

	return GetVelocity_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator UPgCriticallyDampedSpring_Rotator::GetPosition ( )
{
	static UFunction* pFnGetPosition = NULL;

	if ( ! pFnGetPosition )
		pFnGetPosition = (UFunction*) UObject::GObjObjects()->Data[ 43103 ];

	UPgCriticallyDampedSpring_Rotator_execGetPosition_Parms GetPosition_Parms;

	pFnGetPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPosition, &GetPosition_Parms, NULL );

	pFnGetPosition->FunctionFlags |= 0x400;

	return GetPosition_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Rotator.GetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FRotationSpringParameters ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotationSpringParameters UPgCriticallyDampedSpring_Rotator::GetParameters ( )
{
	static UFunction* pFnGetParameters = NULL;

	if ( ! pFnGetParameters )
		pFnGetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43101 ];

	UPgCriticallyDampedSpring_Rotator_execGetParameters_Parms GetParameters_Parms;

	pFnGetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParameters, &GetParameters_Parms, NULL );

	pFnGetParameters->FunctionFlags |= 0x400;

	return GetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Vector.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgCriticallyDampedSpring_Vector::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43349 ];

	UPgCriticallyDampedSpring_Vector_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Vector.GetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVectorSpringParameters ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVectorSpringParameters UPgCriticallyDampedSpring_Vector::GetParameters ( )
{
	static UFunction* pFnGetParameters = NULL;

	if ( ! pFnGetParameters )
		pFnGetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43347 ];

	UPgCriticallyDampedSpring_Vector_execGetParameters_Parms GetParameters_Parms;

	pFnGetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetParameters, &GetParameters_Parms, NULL );

	pFnGetParameters->FunctionFlags |= 0x400;

	return GetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCriticallyDampedSpring_Vector.IsFullyCompressed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgCriticallyDampedSpring_Vector::IsFullyCompressed ( )
{
	static UFunction* pFnIsFullyCompressed = NULL;

	if ( ! pFnIsFullyCompressed )
		pFnIsFullyCompressed = (UFunction*) UObject::GObjObjects()->Data[ 43345 ];

	UPgCriticallyDampedSpring_Vector_execIsFullyCompressed_Parms IsFullyCompressed_Parms;

	pFnIsFullyCompressed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFullyCompressed, &IsFullyCompressed_Parms, NULL );

	pFnIsFullyCompressed->FunctionFlags |= 0x400;

	return IsFullyCompressed_Parms.ReturnValue;
};

// Function GridGame.PgPhysicsSimulationObject_CriticallyDampedFloatSpring.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgPhysicsSimulationObject_CriticallyDampedFloatSpring::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43128 ];

	UPgPhysicsSimulationObject_CriticallyDampedFloatSpring_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgPhysicsSimulationObject_CriticallyDampedOrbitSpring.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgPhysicsSimulationObject_CriticallyDampedOrbitSpring::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43342 ];

	UPgPhysicsSimulationObject_CriticallyDampedOrbitSpring_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgPhysicsSimulationObject_CriticallyDampedRotatorSpring.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgPhysicsSimulationObject_CriticallyDampedRotatorSpring::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43122 ];

	UPgPhysicsSimulationObject_CriticallyDampedRotatorSpring_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgPhysicsSimulationObject_CriticallyDampedVectorSpring.ToString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgPhysicsSimulationObject_CriticallyDampedVectorSpring::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 43357 ];

	UPgPhysicsSimulationObject_CriticallyDampedVectorSpring_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgCamera.GetRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* UPgCamera::GetRootCamera ( )
{
	static UFunction* pFnGetRootCamera = NULL;

	if ( ! pFnGetRootCamera )
		pFnGetRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 43061 ];

	UPgCamera_execGetRootCamera_Parms GetRootCamera_Parms;

	pFnGetRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRootCamera, &GetRootCamera_Parms, NULL );

	pFnGetRootCamera->FunctionFlags |= 0x400;

	return GetRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgCamera.GetViewTargetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FTViewTarget            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FTViewTarget UPgCamera::GetViewTargetParameters ( )
{
	static UFunction* pFnGetViewTargetParameters = NULL;

	if ( ! pFnGetViewTargetParameters )
		pFnGetViewTargetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43059 ];

	UPgCamera_execGetViewTargetParameters_Parms GetViewTargetParameters_Parms;

	pFnGetViewTargetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetViewTargetParameters, &GetViewTargetParameters_Parms, NULL );

	pFnGetViewTargetParameters->FunctionFlags |= 0x400;

	return GetViewTargetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCamera.GetFullCameraStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCamera::GetFullCameraStyle ( )
{
	static UFunction* pFnGetFullCameraStyle = NULL;

	if ( ! pFnGetFullCameraStyle )
		pFnGetFullCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 43057 ];

	UPgCamera_execGetFullCameraStyle_Parms GetFullCameraStyle_Parms;

	pFnGetFullCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFullCameraStyle, &GetFullCameraStyle_Parms, NULL );

	pFnGetFullCameraStyle->FunctionFlags |= 0x400;

	return GetFullCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgCamera.DisplayDebug
// [0x00020000] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCamera::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 43054 ];

	UPgCamera_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCamera.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCamera::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43052 ];

	UPgCamera_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCamera.GetName
// [0x00020000] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCamera::GetName ( )
{
	static UFunction* pFnGetName = NULL;

	if ( ! pFnGetName )
		pFnGetName = (UFunction*) UObject::GObjObjects()->Data[ 43050 ];

	UPgCamera_execGetName_Parms GetName_Parms;

	this->ProcessEvent ( pFnGetName, &GetName_Parms, NULL );

	return GetName_Parms.ReturnValue;
};

// Function GridGame.PgCamera_PgMatinee.DisplayDebug
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCamera_PgMatinee::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41545 ];

	UPgCamera_PgMatinee_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCamera_PgMatinee.GetName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCamera_PgMatinee::GetName ( )
{
	static UFunction* pFnGetName = NULL;

	if ( ! pFnGetName )
		pFnGetName = (UFunction*) UObject::GObjObjects()->Data[ 41543 ];

	UPgCamera_PgMatinee_execGetName_Parms GetName_Parms;

	this->ProcessEvent ( pFnGetName, &GetName_Parms, NULL );

	return GetName_Parms.ReturnValue;
};

// Function GridGame.PgCamera_PgMatinee.GetViewTargetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FTViewTarget            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FTViewTarget UPgCamera_PgMatinee::GetViewTargetParameters ( )
{
	static UFunction* pFnGetViewTargetParameters = NULL;

	if ( ! pFnGetViewTargetParameters )
		pFnGetViewTargetParameters = (UFunction*) UObject::GObjObjects()->Data[ 41541 ];

	UPgCamera_PgMatinee_execGetViewTargetParameters_Parms GetViewTargetParameters_Parms;

	pFnGetViewTargetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetViewTargetParameters, &GetViewTargetParameters_Parms, NULL );

	pFnGetViewTargetParameters->FunctionFlags |= 0x400;

	return GetViewTargetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCamera_PgMatinee.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCamera_PgMatinee::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 41539 ];

	UPgCamera_PgMatinee_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCamera_PgMatinee.GetRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* UPgCamera_PgMatinee::GetRootCamera ( )
{
	static UFunction* pFnGetRootCamera = NULL;

	if ( ! pFnGetRootCamera )
		pFnGetRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 41537 ];

	UPgCamera_PgMatinee_execGetRootCamera_Parms GetRootCamera_Parms;

	pFnGetRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRootCamera, &GetRootCamera_Parms, NULL );

	pFnGetRootCamera->FunctionFlags |= 0x400;

	return GetRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgCamera_PgMatinee.GetFullCameraStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCamera_PgMatinee::GetFullCameraStyle ( )
{
	static UFunction* pFnGetFullCameraStyle = NULL;

	if ( ! pFnGetFullCameraStyle )
		pFnGetFullCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 41535 ];

	UPgCamera_PgMatinee_execGetFullCameraStyle_Parms GetFullCameraStyle_Parms;

	pFnGetFullCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFullCameraStyle, &GetFullCameraStyle_Parms, NULL );

	pFnGetFullCameraStyle->FunctionFlags |= 0x400;

	return GetFullCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgCameraAndBlenderBase.GetFullCameraStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCameraAndBlenderBase::GetFullCameraStyle ( )
{
	static UFunction* pFnGetFullCameraStyle = NULL;

	if ( ! pFnGetFullCameraStyle )
		pFnGetFullCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 43077 ];

	UPgCameraAndBlenderBase_execGetFullCameraStyle_Parms GetFullCameraStyle_Parms;

	pFnGetFullCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFullCameraStyle, &GetFullCameraStyle_Parms, NULL );

	pFnGetFullCameraStyle->FunctionFlags |= 0x400;

	return GetFullCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgCameraAndBlenderBase.GetRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* UPgCameraAndBlenderBase::GetRootCamera ( )
{
	static UFunction* pFnGetRootCamera = NULL;

	if ( ! pFnGetRootCamera )
		pFnGetRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 43075 ];

	UPgCameraAndBlenderBase_execGetRootCamera_Parms GetRootCamera_Parms;

	pFnGetRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRootCamera, &GetRootCamera_Parms, NULL );

	pFnGetRootCamera->FunctionFlags |= 0x400;

	return GetRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgCameraAndBlenderBase.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCameraAndBlenderBase::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43073 ];

	UPgCameraAndBlenderBase_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraAndBlenderBase.GetName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCameraAndBlenderBase::GetName ( )
{
	static UFunction* pFnGetName = NULL;

	if ( ! pFnGetName )
		pFnGetName = (UFunction*) UObject::GObjObjects()->Data[ 43071 ];

	UPgCameraAndBlenderBase_execGetName_Parms GetName_Parms;

	this->ProcessEvent ( pFnGetName, &GetName_Parms, NULL );

	return GetName_Parms.ReturnValue;
};

// Function GridGame.PgCameraAndBlenderBase.GetViewTargetParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FTViewTarget            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FTViewTarget UPgCameraAndBlenderBase::GetViewTargetParameters ( )
{
	static UFunction* pFnGetViewTargetParameters = NULL;

	if ( ! pFnGetViewTargetParameters )
		pFnGetViewTargetParameters = (UFunction*) UObject::GObjObjects()->Data[ 43069 ];

	UPgCameraAndBlenderBase_execGetViewTargetParameters_Parms GetViewTargetParameters_Parms;

	pFnGetViewTargetParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetViewTargetParameters, &GetViewTargetParameters_Parms, NULL );

	pFnGetViewTargetParameters->FunctionFlags |= 0x400;

	return GetViewTargetParameters_Parms.ReturnValue;
};

// Function GridGame.PgCameraAndBlenderBase.DisplayDebug
// [0x00020000] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCameraAndBlenderBase::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 43066 ];

	UPgCameraAndBlenderBase_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCameraBase.GetName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCameraBase::GetName ( )
{
	static UFunction* pFnGetName = NULL;

	if ( ! pFnGetName )
		pFnGetName = (UFunction*) UObject::GObjObjects()->Data[ 43177 ];

	UPgCameraBase_execGetName_Parms GetName_Parms;

	this->ProcessEvent ( pFnGetName, &GetName_Parms, NULL );

	return GetName_Parms.ReturnValue;
};

// Function GridGame.PgCameraBase.DisplayDebug
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCameraBase::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 43174 ];

	UPgCameraBase_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCameraBase.DisplayDebugDetails
// [0x00020102] 
// Parameters infos:
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCameraBase::DisplayDebugDetails ( class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebugDetails = NULL;

	if ( ! pFnDisplayDebugDetails )
		pFnDisplayDebugDetails = (UFunction*) UObject::GObjObjects()->Data[ 43170 ];

	UPgCameraBase_execDisplayDebugDetails_Parms DisplayDebugDetails_Parms;
	DisplayDebugDetails_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebugDetails, &DisplayDebugDetails_Parms, NULL );
};

// Function GridGame.PgCameraBase.GetScore
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCameraBase::GetScore ( )
{
	static UFunction* pFnGetScore = NULL;

	if ( ! pFnGetScore )
		pFnGetScore = (UFunction*) UObject::GObjObjects()->Data[ 43168 ];

	UPgCameraBase_execGetScore_Parms GetScore_Parms;

	pFnGetScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetScore, &GetScore_Parms, NULL );

	pFnGetScore->FunctionFlags |= 0x400;

	return GetScore_Parms.ReturnValue;
};

// Function GridGame.PgCameraBase.GetRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* UPgCameraBase::GetRootCamera ( )
{
	static UFunction* pFnGetRootCamera = NULL;

	if ( ! pFnGetRootCamera )
		pFnGetRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 43166 ];

	UPgCameraBase_execGetRootCamera_Parms GetRootCamera_Parms;

	pFnGetRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRootCamera, &GetRootCamera_Parms, NULL );

	pFnGetRootCamera->FunctionFlags |= 0x400;

	return GetRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgCameraBase.GetFullCameraStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCameraBase::GetFullCameraStyle ( )
{
	static UFunction* pFnGetFullCameraStyle = NULL;

	if ( ! pFnGetFullCameraStyle )
		pFnGetFullCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 43164 ];

	UPgCameraBase_execGetFullCameraStyle_Parms GetFullCameraStyle_Parms;

	pFnGetFullCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFullCameraStyle, &GetFullCameraStyle_Parms, NULL );

	pFnGetFullCameraStyle->FunctionFlags |= 0x400;

	return GetFullCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgCameraBase.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCameraBase::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43162 ];

	UPgCameraBase_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCamera_PgOrbitCam.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCamera_PgOrbitCam::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43381 ];

	UPgCamera_PgOrbitCam_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraBlender.DisplayDebug
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCameraBlender::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 43429 ];

	UPgCameraBlender_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCameraBlender.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCameraBlender::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43427 ];

	UPgCameraBlender_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraBlender.DisplayDebug_DrawText
// [0x00420102] 
// Parameters infos:
// struct FString                 T                              ( CPF_Parm | CPF_NeedCtorLink )
// class UCanvas*                 C                              ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCameraBlender::DisplayDebug_DrawText ( struct FString T, class UCanvas* C, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug_DrawText = NULL;

	if ( ! pFnDisplayDebug_DrawText )
		pFnDisplayDebug_DrawText = (UFunction*) UObject::GObjObjects()->Data[ 43422 ];

	UPgCameraBlender_execDisplayDebug_DrawText_Parms DisplayDebug_DrawText_Parms;
	memcpy ( &DisplayDebug_DrawText_Parms.T, &T, 0xC );
	DisplayDebug_DrawText_Parms.C = C;

	this->ProcessEvent ( pFnDisplayDebug_DrawText, &DisplayDebug_DrawText_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_DrawText_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_DrawText_Parms.out_YPos;
};

// Function GridGame.PgCameraBlender.GetRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* UPgCameraBlender::GetRootCamera ( )
{
	static UFunction* pFnGetRootCamera = NULL;

	if ( ! pFnGetRootCamera )
		pFnGetRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 43420 ];

	UPgCameraBlender_execGetRootCamera_Parms GetRootCamera_Parms;

	pFnGetRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRootCamera, &GetRootCamera_Parms, NULL );

	pFnGetRootCamera->FunctionFlags |= 0x400;

	return GetRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgCameraBlender.GetTotalBlendTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCameraBlender::GetTotalBlendTime ( )
{
	static UFunction* pFnGetTotalBlendTime = NULL;

	if ( ! pFnGetTotalBlendTime )
		pFnGetTotalBlendTime = (UFunction*) UObject::GObjObjects()->Data[ 43418 ];

	UPgCameraBlender_execGetTotalBlendTime_Parms GetTotalBlendTime_Parms;

	pFnGetTotalBlendTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTotalBlendTime, &GetTotalBlendTime_Parms, NULL );

	pFnGetTotalBlendTime->FunctionFlags |= 0x400;

	return GetTotalBlendTime_Parms.ReturnValue;
};

// Function GridGame.PgCameraBlender.GetFullCameraStyle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UPgCameraBlender::GetFullCameraStyle ( )
{
	static UFunction* pFnGetFullCameraStyle = NULL;

	if ( ! pFnGetFullCameraStyle )
		pFnGetFullCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 43416 ];

	UPgCameraBlender_execGetFullCameraStyle_Parms GetFullCameraStyle_Parms;

	pFnGetFullCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFullCameraStyle, &GetFullCameraStyle_Parms, NULL );

	pFnGetFullCameraStyle->FunctionFlags |= 0x400;

	return GetFullCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgCameraBlenderOrbit.DrawDebugInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCameraBlenderOrbit::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 43434 ];

	UPgCameraBlenderOrbit_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	pFnDrawDebugInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );

	pFnDrawDebugInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraList.DisplayDebug
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgCameraList::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41525 ];

	UPgCameraList_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCameraList.DrawDebugInfo
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCameraList::DrawDebugInfo ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugInfo = NULL;

	if ( ! pFnDrawDebugInfo )
		pFnDrawDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 41522 ];

	UPgCameraList_execDrawDebugInfo_Parms DrawDebugInfo_Parms;
	DrawDebugInfo_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawDebugInfo, &DrawDebugInfo_Parms, NULL );
};

// Function GridGame.PgEddoCameraList.DisplayDebug
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         PlayerCamera                   ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm )

void UPgEddoCameraList::DisplayDebug ( class APgPlayerCamera* PlayerCamera, class UPgDisplayDebugHelper* helper )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 44582 ];

	UPgEddoCameraList_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.PlayerCamera = PlayerCamera;
	DisplayDebug_Parms.helper = helper;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );
};

// Function GridGame.PgCameraModifier.PgGetCameraViewPoint
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 OutCamLoc                      ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutCamRot                      ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier::eventPgGetCameraViewPoint ( struct FVector* OutCamLoc, struct FRotator* OutCamRot )
{
	static UFunction* pFnPgGetCameraViewPoint = NULL;

	if ( ! pFnPgGetCameraViewPoint )
		pFnPgGetCameraViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 43502 ];

	UPgCameraModifier_eventPgGetCameraViewPoint_Parms PgGetCameraViewPoint_Parms;

	this->ProcessEvent ( pFnPgGetCameraViewPoint, &PgGetCameraViewPoint_Parms, NULL );

	if ( OutCamLoc )
		memcpy ( OutCamLoc, &PgGetCameraViewPoint_Parms.OutCamLoc, 0xC );

	if ( OutCamRot )
		memcpy ( OutCamRot, &PgGetCameraViewPoint_Parms.OutCamRot, 0xC );
};

// Function GridGame.PgCameraModifier.IsAttached
// [0x00426002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ACamera*                 Cam                            ( CPF_Parm )
// class UClass*                  CamClass                       ( CPF_Parm )
// class UPgCameraModifier*       Modifier                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool UPgCameraModifier::IsAttached ( class ACamera* Cam, class UClass* CamClass, class UPgCameraModifier** Modifier )
{
	static UFunction* pFnIsAttached = NULL;

	if ( ! pFnIsAttached )
		pFnIsAttached = (UFunction*) UObject::GObjObjects()->Data[ 43496 ];

	UPgCameraModifier_execIsAttached_Parms IsAttached_Parms;
	IsAttached_Parms.Cam = Cam;
	IsAttached_Parms.CamClass = CamClass;

	this->ProcessEvent ( pFnIsAttached, &IsAttached_Parms, NULL );

	if ( Modifier )
		*Modifier = IsAttached_Parms.Modifier;

	return IsAttached_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.EnableModifier
// [0x00020002] 
// Parameters infos:

void UPgCameraModifier::EnableModifier ( )
{
	static UFunction* pFnEnableModifier = NULL;

	if ( ! pFnEnableModifier )
		pFnEnableModifier = (UFunction*) UObject::GObjObjects()->Data[ 43495 ];

	UPgCameraModifier_execEnableModifier_Parms EnableModifier_Parms;

	this->ProcessEvent ( pFnEnableModifier, &EnableModifier_Parms, NULL );
};

// Function GridGame.PgCameraModifier._AddCameraModifier
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ACamera*                 Camera                         ( CPF_Parm )

bool UPgCameraModifier::event_AddCameraModifier ( class ACamera* Camera )
{
	static UFunction* pFn_AddCameraModifier = NULL;

	if ( ! pFn_AddCameraModifier )
		pFn_AddCameraModifier = (UFunction*) UObject::GObjObjects()->Data[ 43492 ];

	UPgCameraModifier_event_AddCameraModifier_Parms _AddCameraModifier_Parms;
	_AddCameraModifier_Parms.Camera = Camera;

	this->ProcessEvent ( pFn_AddCameraModifier, &_AddCameraModifier_Parms, NULL );

	return _AddCameraModifier_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.Init
// [0x00020002] 
// Parameters infos:

void UPgCameraModifier::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 43491 ];

	UPgCameraModifier_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function GridGame.PgCameraModifier.RemoveModifier
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ACamera*                 Camera                         ( CPF_Parm )

bool UPgCameraModifier::eventRemoveModifier ( class ACamera* Camera )
{
	static UFunction* pFnRemoveModifier = NULL;

	if ( ! pFnRemoveModifier )
		pFnRemoveModifier = (UFunction*) UObject::GObjObjects()->Data[ 43488 ];

	UPgCameraModifier_eventRemoveModifier_Parms RemoveModifier_Parms;
	RemoveModifier_Parms.Camera = Camera;

	this->ProcessEvent ( pFnRemoveModifier, &RemoveModifier_Parms, NULL );

	return RemoveModifier_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.ComputeDamper
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCameraModifier::ComputeDamper ( )
{
	static UFunction* pFnComputeDamper = NULL;

	if ( ! pFnComputeDamper )
		pFnComputeDamper = (UFunction*) UObject::GObjObjects()->Data[ 43486 ];

	UPgCameraModifier_execComputeDamper_Parms ComputeDamper_Parms;

	pFnComputeDamper->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeDamper, &ComputeDamper_Parms, NULL );

	pFnComputeDamper->FunctionFlags |= 0x400;

	return ComputeDamper_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.IsDone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgCameraModifier::IsDone ( )
{
	static UFunction* pFnIsDone = NULL;

	if ( ! pFnIsDone )
		pFnIsDone = (UFunction*) UObject::GObjObjects()->Data[ 43484 ];

	UPgCameraModifier_execIsDone_Parms IsDone_Parms;

	pFnIsDone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDone, &IsDone_Parms, NULL );

	pFnIsDone->FunctionFlags |= 0x400;

	return IsDone_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.UpdateTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgCameraModifier::UpdateTime ( float DeltaTime )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 43482 ];

	UPgCameraModifier_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.DeltaTime = DeltaTime;

	pFnUpdateTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );

	pFnUpdateTime->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraModifier.ModifyCamera
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ACamera*                 Camera                         ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FTPOV                   OutPOV                         ( CPF_Parm | CPF_OutParm )

bool UPgCameraModifier::ModifyCamera ( class ACamera* Camera, float DeltaTime, struct FTPOV* OutPOV )
{
	static UFunction* pFnModifyCamera = NULL;

	if ( ! pFnModifyCamera )
		pFnModifyCamera = (UFunction*) UObject::GObjObjects()->Data[ 43477 ];

	UPgCameraModifier_execModifyCamera_Parms ModifyCamera_Parms;
	ModifyCamera_Parms.Camera = Camera;
	ModifyCamera_Parms.DeltaTime = DeltaTime;

	pFnModifyCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnModifyCamera, &ModifyCamera_Parms, NULL );

	pFnModifyCamera->FunctionFlags |= 0x400;

	if ( OutPOV )
		memcpy ( OutPOV, &ModifyCamera_Parms.OutPOV, 0x1C );

	return ModifyCamera_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.ComputeShakeValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Amp                            ( CPF_Parm )
// float                          Freq                           ( CPF_Parm )

float UPgCameraModifier::ComputeShakeValue ( float Amp, float Freq )
{
	static UFunction* pFnComputeShakeValue = NULL;

	if ( ! pFnComputeShakeValue )
		pFnComputeShakeValue = (UFunction*) UObject::GObjObjects()->Data[ 43473 ];

	UPgCameraModifier_execComputeShakeValue_Parms ComputeShakeValue_Parms;
	ComputeShakeValue_Parms.Amp = Amp;
	ComputeShakeValue_Parms.Freq = Freq;

	pFnComputeShakeValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeShakeValue, &ComputeShakeValue_Parms, NULL );

	pFnComputeShakeValue->FunctionFlags |= 0x400;

	return ComputeShakeValue_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.PercentageComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCameraModifier::PercentageComplete ( )
{
	static UFunction* pFnPercentageComplete = NULL;

	if ( ! pFnPercentageComplete )
		pFnPercentageComplete = (UFunction*) UObject::GObjObjects()->Data[ 43471 ];

	UPgCameraModifier_execPercentageComplete_Parms PercentageComplete_Parms;

	pFnPercentageComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPercentageComplete, &PercentageComplete_Parms, NULL );

	pFnPercentageComplete->FunctionFlags |= 0x400;

	return PercentageComplete_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier.ComputeNewFOV
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          FOV                            ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier::ComputeNewFOV ( float* FOV )
{
	static UFunction* pFnComputeNewFOV = NULL;

	if ( ! pFnComputeNewFOV )
		pFnComputeNewFOV = (UFunction*) UObject::GObjObjects()->Data[ 43469 ];

	UPgCameraModifier_execComputeNewFOV_Parms ComputeNewFOV_Parms;

	pFnComputeNewFOV->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewFOV, &ComputeNewFOV_Parms, NULL );

	pFnComputeNewFOV->FunctionFlags |= 0x400;

	if ( FOV )
		*FOV = ComputeNewFOV_Parms.FOV;
};

// Function GridGame.PgCameraModifier.ComputeNewTranslation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 TranslationDelta               ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier::ComputeNewTranslation ( struct FVector* TranslationDelta )
{
	static UFunction* pFnComputeNewTranslation = NULL;

	if ( ! pFnComputeNewTranslation )
		pFnComputeNewTranslation = (UFunction*) UObject::GObjObjects()->Data[ 43467 ];

	UPgCameraModifier_execComputeNewTranslation_Parms ComputeNewTranslation_Parms;

	pFnComputeNewTranslation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewTranslation, &ComputeNewTranslation_Parms, NULL );

	pFnComputeNewTranslation->FunctionFlags |= 0x400;

	if ( TranslationDelta )
		memcpy ( TranslationDelta, &ComputeNewTranslation_Parms.TranslationDelta, 0xC );
};

// Function GridGame.PgCameraModifier.ComputeNewRotation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                RotationDelta                  ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier::ComputeNewRotation ( struct FRotator* RotationDelta )
{
	static UFunction* pFnComputeNewRotation = NULL;

	if ( ! pFnComputeNewRotation )
		pFnComputeNewRotation = (UFunction*) UObject::GObjObjects()->Data[ 43465 ];

	UPgCameraModifier_execComputeNewRotation_Parms ComputeNewRotation_Parms;

	pFnComputeNewRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewRotation, &ComputeNewRotation_Parms, NULL );

	pFnComputeNewRotation->FunctionFlags |= 0x400;

	if ( RotationDelta )
		memcpy ( RotationDelta, &ComputeNewRotation_Parms.RotationDelta, 0xC );
};

// Function GridGame.PgCameraModifier.DampenShake
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                Rotation                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Translation                    ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier::DampenShake ( struct FRotator* Rotation, struct FVector* Translation )
{
	static UFunction* pFnDampenShake = NULL;

	if ( ! pFnDampenShake )
		pFnDampenShake = (UFunction*) UObject::GObjObjects()->Data[ 43462 ];

	UPgCameraModifier_execDampenShake_Parms DampenShake_Parms;

	pFnDampenShake->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDampenShake, &DampenShake_Parms, NULL );

	pFnDampenShake->FunctionFlags |= 0x400;

	if ( Rotation )
		memcpy ( Rotation, &DampenShake_Parms.Rotation, 0xC );

	if ( Translation )
		memcpy ( Translation, &DampenShake_Parms.Translation, 0xC );
};

// Function GridGame.PgCameraModifier_Generic.ComputeDamper
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCameraModifier_Generic::ComputeDamper ( )
{
	static UFunction* pFnComputeDamper = NULL;

	if ( ! pFnComputeDamper )
		pFnComputeDamper = (UFunction*) UObject::GObjObjects()->Data[ 43540 ];

	UPgCameraModifier_Generic_execComputeDamper_Parms ComputeDamper_Parms;

	pFnComputeDamper->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeDamper, &ComputeDamper_Parms, NULL );

	pFnComputeDamper->FunctionFlags |= 0x400;

	return ComputeDamper_Parms.ReturnValue;
};

// Function GridGame.PgCameraModifier_Generic.ComputeNewFOV
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          FOV                            ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier_Generic::ComputeNewFOV ( float* FOV )
{
	static UFunction* pFnComputeNewFOV = NULL;

	if ( ! pFnComputeNewFOV )
		pFnComputeNewFOV = (UFunction*) UObject::GObjObjects()->Data[ 43538 ];

	UPgCameraModifier_Generic_execComputeNewFOV_Parms ComputeNewFOV_Parms;

	pFnComputeNewFOV->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewFOV, &ComputeNewFOV_Parms, NULL );

	pFnComputeNewFOV->FunctionFlags |= 0x400;

	if ( FOV )
		*FOV = ComputeNewFOV_Parms.FOV;
};

// Function GridGame.PgCameraModifier_Generic.ComputeNewTranslation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 TranslationDelta               ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier_Generic::ComputeNewTranslation ( struct FVector* TranslationDelta )
{
	static UFunction* pFnComputeNewTranslation = NULL;

	if ( ! pFnComputeNewTranslation )
		pFnComputeNewTranslation = (UFunction*) UObject::GObjObjects()->Data[ 43536 ];

	UPgCameraModifier_Generic_execComputeNewTranslation_Parms ComputeNewTranslation_Parms;

	pFnComputeNewTranslation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewTranslation, &ComputeNewTranslation_Parms, NULL );

	pFnComputeNewTranslation->FunctionFlags |= 0x400;

	if ( TranslationDelta )
		memcpy ( TranslationDelta, &ComputeNewTranslation_Parms.TranslationDelta, 0xC );
};

// Function GridGame.PgCameraModifier_Generic.ComputeNewRotation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                RotationDelta                  ( CPF_Parm | CPF_OutParm )

void UPgCameraModifier_Generic::ComputeNewRotation ( struct FRotator* RotationDelta )
{
	static UFunction* pFnComputeNewRotation = NULL;

	if ( ! pFnComputeNewRotation )
		pFnComputeNewRotation = (UFunction*) UObject::GObjObjects()->Data[ 43534 ];

	UPgCameraModifier_Generic_execComputeNewRotation_Parms ComputeNewRotation_Parms;

	pFnComputeNewRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeNewRotation, &ComputeNewRotation_Parms, NULL );

	pFnComputeNewRotation->FunctionFlags |= 0x400;

	if ( RotationDelta )
		memcpy ( RotationDelta, &ComputeNewRotation_Parms.RotationDelta, 0xC );
};

// Function GridGame.PgCameraModifier_Generic.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgCameraModifier_Generic::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 43533 ];

	UPgCameraModifier_Generic_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgCameraModifier_Generic.Init
// [0x00020002] 
// Parameters infos:

void UPgCameraModifier_Generic::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 43532 ];

	UPgCameraModifier_Generic_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function GridGame.PgPlayerCamera.SetScoreModifier
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 pOwner                         ( CPF_Const | CPF_Parm )
// struct FName                   kCameraStyle                   ( CPF_Parm )
// float                          kAmount                        ( CPF_Parm )

void APgPlayerCamera::SetScoreModifier ( class UObject* pOwner, struct FName kCameraStyle, float kAmount )
{
	static UFunction* pFnSetScoreModifier = NULL;

	if ( ! pFnSetScoreModifier )
		pFnSetScoreModifier = (UFunction*) UObject::GObjObjects()->Data[ 41512 ];

	APgPlayerCamera_execSetScoreModifier_Parms SetScoreModifier_Parms;
	SetScoreModifier_Parms.pOwner = pOwner;
	memcpy ( &SetScoreModifier_Parms.kCameraStyle, &kCameraStyle, 0x8 );
	SetScoreModifier_Parms.kAmount = kAmount;

	pFnSetScoreModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScoreModifier, &SetScoreModifier_Parms, NULL );

	pFnSetScoreModifier->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.RemoveScoreModifier
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 pOwner                         ( CPF_Const | CPF_Parm )
// struct FName                   kCameraStyle                   ( CPF_Parm )

void APgPlayerCamera::RemoveScoreModifier ( class UObject* pOwner, struct FName kCameraStyle )
{
	static UFunction* pFnRemoveScoreModifier = NULL;

	if ( ! pFnRemoveScoreModifier )
		pFnRemoveScoreModifier = (UFunction*) UObject::GObjObjects()->Data[ 41509 ];

	APgPlayerCamera_execRemoveScoreModifier_Parms RemoveScoreModifier_Parms;
	RemoveScoreModifier_Parms.pOwner = pOwner;
	memcpy ( &RemoveScoreModifier_Parms.kCameraStyle, &kCameraStyle, 0x8 );

	pFnRemoveScoreModifier->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveScoreModifier, &RemoveScoreModifier_Parms, NULL );

	pFnRemoveScoreModifier->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPlayerCamera::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41499 ];

	APgPlayerCamera_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgPlayerCamera.FriendlyRotator
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FRotator                Rot                            ( CPF_Parm )

struct FString APgPlayerCamera::FriendlyRotator ( struct FRotator Rot )
{
	static UFunction* pFnFriendlyRotator = NULL;

	if ( ! pFnFriendlyRotator )
		pFnFriendlyRotator = (UFunction*) UObject::GObjObjects()->Data[ 41496 ];

	APgPlayerCamera_execFriendlyRotator_Parms FriendlyRotator_Parms;
	memcpy ( &FriendlyRotator_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnFriendlyRotator, &FriendlyRotator_Parms, NULL );

	return FriendlyRotator_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.AngleToDegrees
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Angle                          ( CPF_Parm )

int APgPlayerCamera::AngleToDegrees ( int Angle )
{
	static UFunction* pFnAngleToDegrees = NULL;

	if ( ! pFnAngleToDegrees )
		pFnAngleToDegrees = (UFunction*) UObject::GObjObjects()->Data[ 41493 ];

	APgPlayerCamera_execAngleToDegrees_Parms AngleToDegrees_Parms;
	AngleToDegrees_Parms.Angle = Angle;

	this->ProcessEvent ( pFnAngleToDegrees, &AngleToDegrees_Parms, NULL );

	return AngleToDegrees_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.DisplayCameraDebug
// [0x00420102] 
// Parameters infos:
// class UPgCamera*               CurrentCamera                  ( CPF_Parm )
// class UPgDisplayDebugHelper*   helper                         ( CPF_Parm | CPF_OutParm )

void APgPlayerCamera::DisplayCameraDebug ( class UPgCamera* CurrentCamera, class UPgDisplayDebugHelper** helper )
{
	static UFunction* pFnDisplayCameraDebug = NULL;

	if ( ! pFnDisplayCameraDebug )
		pFnDisplayCameraDebug = (UFunction*) UObject::GObjObjects()->Data[ 41486 ];

	APgPlayerCamera_execDisplayCameraDebug_Parms DisplayCameraDebug_Parms;
	DisplayCameraDebug_Parms.CurrentCamera = CurrentCamera;

	this->ProcessEvent ( pFnDisplayCameraDebug, &DisplayCameraDebug_Parms, NULL );

	if ( helper )
		*helper = DisplayCameraDebug_Parms.helper;
};

// Function GridGame.PgPlayerCamera.DisplayDebug_DrawText
// [0x00422102] 
// Parameters infos:
// struct FString                 T                              ( CPF_Parm | CPF_NeedCtorLink )
// class UCanvas*                 C                              ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPlayerCamera::DisplayDebug_DrawText ( struct FString T, class UCanvas* C, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug_DrawText = NULL;

	if ( ! pFnDisplayDebug_DrawText )
		pFnDisplayDebug_DrawText = (UFunction*) UObject::GObjObjects()->Data[ 41481 ];

	APgPlayerCamera_execDisplayDebug_DrawText_Parms DisplayDebug_DrawText_Parms;
	memcpy ( &DisplayDebug_DrawText_Parms.T, &T, 0xC );
	DisplayDebug_DrawText_Parms.C = C;

	this->ProcessEvent ( pFnDisplayDebug_DrawText, &DisplayDebug_DrawText_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_DrawText_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_DrawText_Parms.out_YPos;
};

// Function GridGame.PgPlayerCamera.GetActiveRootCamera
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgCamera*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCamera* APgPlayerCamera::GetActiveRootCamera ( )
{
	static UFunction* pFnGetActiveRootCamera = NULL;

	if ( ! pFnGetActiveRootCamera )
		pFnGetActiveRootCamera = (UFunction*) UObject::GObjObjects()->Data[ 41479 ];

	APgPlayerCamera_execGetActiveRootCamera_Parms GetActiveRootCamera_Parms;

	pFnGetActiveRootCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActiveRootCamera, &GetActiveRootCamera_Parms, NULL );

	pFnGetActiveRootCamera->FunctionFlags |= 0x400;

	return GetActiveRootCamera_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.GetActiveCameraList
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UPgCameraList*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgCameraList* APgPlayerCamera::eventGetActiveCameraList ( )
{
	static UFunction* pFnGetActiveCameraList = NULL;

	if ( ! pFnGetActiveCameraList )
		pFnGetActiveCameraList = (UFunction*) UObject::GObjObjects()->Data[ 41477 ];

	APgPlayerCamera_eventGetActiveCameraList_Parms GetActiveCameraList_Parms;

	this->ProcessEvent ( pFnGetActiveCameraList, &GetActiveCameraList_Parms, NULL );

	return GetActiveCameraList_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void APgPlayerCamera::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 41475 ];

	APgPlayerCamera_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgPlayerCamera.UpdateViewTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void APgPlayerCamera::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 41472 ];

	APgPlayerCamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	pFnUpdateViewTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	pFnUpdateViewTarget->FunctionFlags |= 0x400;

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function GridGame.PgPlayerCamera._UpdateViewTarget
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void APgPlayerCamera::event_UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFn_UpdateViewTarget = NULL;

	if ( ! pFn_UpdateViewTarget )
		pFn_UpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 41469 ];

	APgPlayerCamera_event_UpdateViewTarget_Parms _UpdateViewTarget_Parms;
	_UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFn_UpdateViewTarget, &_UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &_UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function GridGame.PgPlayerCamera.UpdateCamera
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgPlayerCamera::eventUpdateCamera ( float DeltaTime )
{
	static UFunction* pFnUpdateCamera = NULL;

	if ( ! pFnUpdateCamera )
		pFnUpdateCamera = (UFunction*) UObject::GObjObjects()->Data[ 41467 ];

	APgPlayerCamera_eventUpdateCamera_Parms UpdateCamera_Parms;
	UpdateCamera_Parms.DeltaTime = DeltaTime;

	pFnUpdateCamera->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateCamera, &UpdateCamera_Parms, NULL );

	pFnUpdateCamera->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.InitializeFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void APgPlayerCamera::InitializeFor ( class APlayerController* PC )
{
	static UFunction* pFnInitializeFor = NULL;

	if ( ! pFnInitializeFor )
		pFnInitializeFor = (UFunction*) UObject::GObjObjects()->Data[ 41465 ];

	APgPlayerCamera_execInitializeFor_Parms InitializeFor_Parms;
	InitializeFor_Parms.PC = PC;

	this->ProcessEvent ( pFnInitializeFor, &InitializeFor_Parms, NULL );
};

// Function GridGame.PgPlayerCamera.ShouldDisplayDebug
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerCamera::eventShouldDisplayDebug ( )
{
	static UFunction* pFnShouldDisplayDebug = NULL;

	if ( ! pFnShouldDisplayDebug )
		pFnShouldDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41463 ];

	APgPlayerCamera_eventShouldDisplayDebug_Parms ShouldDisplayDebug_Parms;

	this->ProcessEvent ( pFnShouldDisplayDebug, &ShouldDisplayDebug_Parms, NULL );

	return ShouldDisplayDebug_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.OnTeleportNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerCamera::OnTeleportNative ( )
{
	static UFunction* pFnOnTeleportNative = NULL;

	if ( ! pFnOnTeleportNative )
		pFnOnTeleportNative = (UFunction*) UObject::GObjObjects()->Data[ 41462 ];

	APgPlayerCamera_execOnTeleportNative_Parms OnTeleportNative_Parms;

	pFnOnTeleportNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTeleportNative, &OnTeleportNative_Parms, NULL );

	pFnOnTeleportNative->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.SetViewTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void APgPlayerCamera::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 41459 ];

	APgPlayerCamera_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0xC );

	pFnSetViewTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );

	pFnSetViewTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.ClearScoreModifiers
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgCameraList*           CamList                        ( CPF_Parm )

void APgPlayerCamera::ClearScoreModifiers ( class UPgCameraList* CamList )
{
	static UFunction* pFnClearScoreModifiers = NULL;

	if ( ! pFnClearScoreModifiers )
		pFnClearScoreModifiers = (UFunction*) UObject::GObjObjects()->Data[ 41457 ];

	APgPlayerCamera_execClearScoreModifiers_Parms ClearScoreModifiers_Parms;
	ClearScoreModifiers_Parms.CamList = CamList;

	pFnClearScoreModifiers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearScoreModifiers, &ClearScoreModifiers_Parms, NULL );

	pFnClearScoreModifiers->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.InitializeForNative
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void APgPlayerCamera::InitializeForNative ( class APlayerController* PC )
{
	static UFunction* pFnInitializeForNative = NULL;

	if ( ! pFnInitializeForNative )
		pFnInitializeForNative = (UFunction*) UObject::GObjObjects()->Data[ 41455 ];

	APgPlayerCamera_execInitializeForNative_Parms InitializeForNative_Parms;
	InitializeForNative_Parms.PC = PC;

	pFnInitializeForNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeForNative, &InitializeForNative_Parms, NULL );

	pFnInitializeForNative->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.UnRegisterCameraLocationChangeObserver
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgPlayerCameraLocationChangeObserver* O                              ( CPF_Parm )

void APgPlayerCamera::UnRegisterCameraLocationChangeObserver ( class UPgPlayerCameraLocationChangeObserver* O )
{
	static UFunction* pFnUnRegisterCameraLocationChangeObserver = NULL;

	if ( ! pFnUnRegisterCameraLocationChangeObserver )
		pFnUnRegisterCameraLocationChangeObserver = (UFunction*) UObject::GObjObjects()->Data[ 41453 ];

	APgPlayerCamera_execUnRegisterCameraLocationChangeObserver_Parms UnRegisterCameraLocationChangeObserver_Parms;
	UnRegisterCameraLocationChangeObserver_Parms.O = O;

	pFnUnRegisterCameraLocationChangeObserver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnRegisterCameraLocationChangeObserver, &UnRegisterCameraLocationChangeObserver_Parms, NULL );

	pFnUnRegisterCameraLocationChangeObserver->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.RegisterCameraLocationChangeObserver
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgPlayerCameraLocationChangeObserver* O                              ( CPF_Parm )

void APgPlayerCamera::RegisterCameraLocationChangeObserver ( class UPgPlayerCameraLocationChangeObserver* O )
{
	static UFunction* pFnRegisterCameraLocationChangeObserver = NULL;

	if ( ! pFnRegisterCameraLocationChangeObserver )
		pFnRegisterCameraLocationChangeObserver = (UFunction*) UObject::GObjObjects()->Data[ 41451 ];

	APgPlayerCamera_execRegisterCameraLocationChangeObserver_Parms RegisterCameraLocationChangeObserver_Parms;
	RegisterCameraLocationChangeObserver_Parms.O = O;

	pFnRegisterCameraLocationChangeObserver->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterCameraLocationChangeObserver, &RegisterCameraLocationChangeObserver_Parms, NULL );

	pFnRegisterCameraLocationChangeObserver->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerCamera.GetCameraByStyle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgCameraBase*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Style                          ( CPF_Parm )

class UPgCameraBase* APgPlayerCamera::GetCameraByStyle ( struct FName Style )
{
	static UFunction* pFnGetCameraByStyle = NULL;

	if ( ! pFnGetCameraByStyle )
		pFnGetCameraByStyle = (UFunction*) UObject::GObjObjects()->Data[ 41448 ];

	APgPlayerCamera_execGetCameraByStyle_Parms GetCameraByStyle_Parms;
	memcpy ( &GetCameraByStyle_Parms.Style, &Style, 0x8 );

	pFnGetCameraByStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCameraByStyle, &GetCameraByStyle_Parms, NULL );

	pFnGetCameraByStyle->FunctionFlags |= 0x400;

	return GetCameraByStyle_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.AreControlsCameraRelative
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerCamera::AreControlsCameraRelative ( )
{
	static UFunction* pFnAreControlsCameraRelative = NULL;

	if ( ! pFnAreControlsCameraRelative )
		pFnAreControlsCameraRelative = (UFunction*) UObject::GObjObjects()->Data[ 41446 ];

	APgPlayerCamera_execAreControlsCameraRelative_Parms AreControlsCameraRelative_Parms;

	pFnAreControlsCameraRelative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAreControlsCameraRelative, &AreControlsCameraRelative_Parms, NULL );

	pFnAreControlsCameraRelative->FunctionFlags |= 0x400;

	return AreControlsCameraRelative_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.GetPreviousCameraStyle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgPlayerCamera::GetPreviousCameraStyle ( )
{
	static UFunction* pFnGetPreviousCameraStyle = NULL;

	if ( ! pFnGetPreviousCameraStyle )
		pFnGetPreviousCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 41444 ];

	APgPlayerCamera_execGetPreviousCameraStyle_Parms GetPreviousCameraStyle_Parms;

	pFnGetPreviousCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreviousCameraStyle, &GetPreviousCameraStyle_Parms, NULL );

	pFnGetPreviousCameraStyle->FunctionFlags |= 0x400;

	return GetPreviousCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgPlayerCamera.GetNextCameraStyle
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgPlayerCamera::GetNextCameraStyle ( )
{
	static UFunction* pFnGetNextCameraStyle = NULL;

	if ( ! pFnGetNextCameraStyle )
		pFnGetNextCameraStyle = (UFunction*) UObject::GObjObjects()->Data[ 41442 ];

	APgPlayerCamera_execGetNextCameraStyle_Parms GetNextCameraStyle_Parms;

	pFnGetNextCameraStyle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextCameraStyle, &GetNextCameraStyle_Parms, NULL );

	pFnGetNextCameraStyle->FunctionFlags |= 0x400;

	return GetNextCameraStyle_Parms.ReturnValue;
};

// Function GridGame.PgDamageParam.DoesDoTouchingDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgDamageParam::DoesDoTouchingDamage ( )
{
	static UFunction* pFnDoesDoTouchingDamage = NULL;

	if ( ! pFnDoesDoTouchingDamage )
		pFnDoesDoTouchingDamage = (UFunction*) UObject::GObjObjects()->Data[ 44130 ];

	UPgDamageParam_execDoesDoTouchingDamage_Parms DoesDoTouchingDamage_Parms;

	pFnDoesDoTouchingDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoesDoTouchingDamage, &DoesDoTouchingDamage_Parms, NULL );

	pFnDoesDoTouchingDamage->FunctionFlags |= 0x400;

	return DoesDoTouchingDamage_Parms.ReturnValue;
};

// Function GridGame.PgDamageParam.ApplyTouchingDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             DamageCauser                   ( CPF_Parm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  DamageCausingActor             ( CPF_Parm )

void UPgDamageParam::ApplyTouchingDamage ( class AController* DamageCauser, class AActor* Other, struct FVector HitLocation, struct FVector HitNormal, class AActor* DamageCausingActor )
{
	static UFunction* pFnApplyTouchingDamage = NULL;

	if ( ! pFnApplyTouchingDamage )
		pFnApplyTouchingDamage = (UFunction*) UObject::GObjObjects()->Data[ 44124 ];

	UPgDamageParam_execApplyTouchingDamage_Parms ApplyTouchingDamage_Parms;
	ApplyTouchingDamage_Parms.DamageCauser = DamageCauser;
	ApplyTouchingDamage_Parms.Other = Other;
	memcpy ( &ApplyTouchingDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ApplyTouchingDamage_Parms.HitNormal, &HitNormal, 0xC );
	ApplyTouchingDamage_Parms.DamageCausingActor = DamageCausingActor;

	pFnApplyTouchingDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyTouchingDamage, &ApplyTouchingDamage_Parms, NULL );

	pFnApplyTouchingDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgDamageParam.ScaleDamage
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )

int UPgDamageParam::ScaleDamage ( class AActor* DamageCauser, int Damage )
{
	static UFunction* pFnScaleDamage = NULL;

	if ( ! pFnScaleDamage )
		pFnScaleDamage = (UFunction*) UObject::GObjObjects()->Data[ 42282 ];

	UPgDamageParam_execScaleDamage_Parms ScaleDamage_Parms;
	ScaleDamage_Parms.DamageCauser = DamageCauser;
	ScaleDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnScaleDamage, &ScaleDamage_Parms, NULL );

	return ScaleDamage_Parms.ReturnValue;
};

// Function GridGame.PgDamageParam.PlayCauseDamageEffects
// [0x00020002] 
// Parameters infos:
// class AActor*                  Instigator                     ( CPF_Parm )
// struct FVector                 Location                       ( CPF_Parm )
// struct FVector                 Normal                         ( CPF_Parm )
// class UPhysicalMaterial*       PhysMat                        ( CPF_Parm )

void UPgDamageParam::PlayCauseDamageEffects ( class AActor* Instigator, struct FVector Location, struct FVector Normal, class UPhysicalMaterial* PhysMat )
{
	static UFunction* pFnPlayCauseDamageEffects = NULL;

	if ( ! pFnPlayCauseDamageEffects )
		pFnPlayCauseDamageEffects = (UFunction*) UObject::GObjObjects()->Data[ 44114 ];

	UPgDamageParam_execPlayCauseDamageEffects_Parms PlayCauseDamageEffects_Parms;
	PlayCauseDamageEffects_Parms.Instigator = Instigator;
	memcpy ( &PlayCauseDamageEffects_Parms.Location, &Location, 0xC );
	memcpy ( &PlayCauseDamageEffects_Parms.Normal, &Normal, 0xC );
	PlayCauseDamageEffects_Parms.PhysMat = PhysMat;

	this->ProcessEvent ( pFnPlayCauseDamageEffects, &PlayCauseDamageEffects_Parms, NULL );
};

// Function GridGame.PgDamageParam.ApplyDamageBehaviour
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void UPgDamageParam::ApplyDamageBehaviour ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnApplyDamageBehaviour = NULL;

	if ( ! pFnApplyDamageBehaviour )
		pFnApplyDamageBehaviour = (UFunction*) UObject::GObjObjects()->Data[ 44110 ];

	UPgDamageParam_execApplyDamageBehaviour_Parms ApplyDamageBehaviour_Parms;
	ApplyDamageBehaviour_Parms.damageCaused = damageCaused;
	ApplyDamageBehaviour_Parms.damageVictim = damageVictim;
	ApplyDamageBehaviour_Parms.DamageCauser = DamageCauser;

	pFnApplyDamageBehaviour->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyDamageBehaviour, &ApplyDamageBehaviour_Parms, NULL );

	pFnApplyDamageBehaviour->FunctionFlags |= 0x400;
};

// Function GridGame.PgDecalManager._SpawnDecal
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UDecalComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// class UMaterialInstance*       DecalMaterial                  ( CPF_Parm )
// struct FVector                 DecalLocation                  ( CPF_Parm )
// struct FRotator                DecalOrientation               ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// float                          Thickness                      ( CPF_Parm )
// unsigned long                  bNoClip                        ( CPF_Parm )
// float                          DecalRotation                  ( CPF_OptionalParm | CPF_Parm )
// class UPrimitiveComponent*     HitComponent                   ( CPF_OptionalParm | CPF_Parm | CPF_EditInline )
// unsigned long                  bProjectOnTerrain              ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bProjectOnSkeletalMeshes       ( CPF_OptionalParm | CPF_Parm )
// struct FName                   HitBone                        ( CPF_OptionalParm | CPF_Parm )
// int                            HitNodeIndex                   ( CPF_OptionalParm | CPF_Parm )
// int                            HitLevelIndex                  ( CPF_OptionalParm | CPF_Parm )
// float                          InDecalLifeSpan                ( CPF_OptionalParm | CPF_Parm )

class UDecalComponent* APgDecalManager::event_SpawnDecal ( class UMaterialInstance* DecalMaterial, struct FVector DecalLocation, struct FRotator DecalOrientation, float Width, float Height, float Thickness, unsigned long bNoClip, float DecalRotation, class UPrimitiveComponent* HitComponent, unsigned long bProjectOnTerrain, unsigned long bProjectOnSkeletalMeshes, struct FName HitBone, int HitNodeIndex, int HitLevelIndex, float InDecalLifeSpan )
{
	static UFunction* pFn_SpawnDecal = NULL;

	if ( ! pFn_SpawnDecal )
		pFn_SpawnDecal = (UFunction*) UObject::GObjObjects()->Data[ 44464 ];

	APgDecalManager_event_SpawnDecal_Parms _SpawnDecal_Parms;
	_SpawnDecal_Parms.DecalMaterial = DecalMaterial;
	memcpy ( &_SpawnDecal_Parms.DecalLocation, &DecalLocation, 0xC );
	memcpy ( &_SpawnDecal_Parms.DecalOrientation, &DecalOrientation, 0xC );
	_SpawnDecal_Parms.Width = Width;
	_SpawnDecal_Parms.Height = Height;
	_SpawnDecal_Parms.Thickness = Thickness;
	_SpawnDecal_Parms.bNoClip = bNoClip;
	_SpawnDecal_Parms.DecalRotation = DecalRotation;
	_SpawnDecal_Parms.HitComponent = HitComponent;
	_SpawnDecal_Parms.bProjectOnTerrain = bProjectOnTerrain;
	_SpawnDecal_Parms.bProjectOnSkeletalMeshes = bProjectOnSkeletalMeshes;
	memcpy ( &_SpawnDecal_Parms.HitBone, &HitBone, 0x8 );
	_SpawnDecal_Parms.HitNodeIndex = HitNodeIndex;
	_SpawnDecal_Parms.HitLevelIndex = HitLevelIndex;
	_SpawnDecal_Parms.InDecalLifeSpan = InDecalLifeSpan;

	this->ProcessEvent ( pFn_SpawnDecal, &_SpawnDecal_Parms, NULL );

	return _SpawnDecal_Parms.ReturnValue;
};

// Function GridGame.PgDynamicEmitter.SetColorParameter
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// struct FColor                  Param                          ( CPF_Parm )

void APgDynamicEmitter::SetColorParameter ( struct FName ParameterName, struct FColor Param )
{
	static UFunction* pFnSetColorParameter = NULL;

	if ( ! pFnSetColorParameter )
		pFnSetColorParameter = (UFunction*) UObject::GObjObjects()->Data[ 43447 ];

	APgDynamicEmitter_execSetColorParameter_Parms SetColorParameter_Parms;
	memcpy ( &SetColorParameter_Parms.ParameterName, &ParameterName, 0x8 );
	memcpy ( &SetColorParameter_Parms.Param, &Param, 0x4 );

	pFnSetColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetColorParameter, &SetColorParameter_Parms, NULL );

	pFnSetColorParameter->FunctionFlags |= 0x400;
};

// Function GridGame.PgDynamicEmitter.SetVectorParameter
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// struct FVector                 Param                          ( CPF_Parm )

void APgDynamicEmitter::SetVectorParameter ( struct FName ParameterName, struct FVector Param )
{
	static UFunction* pFnSetVectorParameter = NULL;

	if ( ! pFnSetVectorParameter )
		pFnSetVectorParameter = (UFunction*) UObject::GObjObjects()->Data[ 43444 ];

	APgDynamicEmitter_execSetVectorParameter_Parms SetVectorParameter_Parms;
	memcpy ( &SetVectorParameter_Parms.ParameterName, &ParameterName, 0x8 );
	memcpy ( &SetVectorParameter_Parms.Param, &Param, 0xC );

	pFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVectorParameter, &SetVectorParameter_Parms, NULL );

	pFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function GridGame.PgDynamicEmitter.SetFloatParameter
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FName                   ParameterName                  ( CPF_Parm )
// float                          Param                          ( CPF_Parm )

void APgDynamicEmitter::SetFloatParameter ( struct FName ParameterName, float Param )
{
	static UFunction* pFnSetFloatParameter = NULL;

	if ( ! pFnSetFloatParameter )
		pFnSetFloatParameter = (UFunction*) UObject::GObjObjects()->Data[ 43441 ];

	APgDynamicEmitter_execSetFloatParameter_Parms SetFloatParameter_Parms;
	memcpy ( &SetFloatParameter_Parms.ParameterName, &ParameterName, 0x8 );
	SetFloatParameter_Parms.Param = Param;

	pFnSetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFloatParameter, &SetFloatParameter_Parms, NULL );

	pFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function GridGame.PgEmitterPool._SpawnEmitterMeshAttachment
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class UParticleSystemComponent* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// class UParticleSystem*         EmitterTemplate                ( CPF_Parm )
// class USkeletalMeshComponent*  Mesh                           ( CPF_Parm | CPF_EditInline )
// struct FName                   AttachPointName                ( CPF_Parm )
// unsigned long                  bAttachToSocket                ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 RelativeLoc                    ( CPF_OptionalParm | CPF_Parm )
// struct FRotator                RelativeRot                    ( CPF_OptionalParm | CPF_Parm )

class UParticleSystemComponent* APgEmitterPool::event_SpawnEmitterMeshAttachment ( class UParticleSystem* EmitterTemplate, class USkeletalMeshComponent* Mesh, struct FName AttachPointName, unsigned long bAttachToSocket, struct FVector RelativeLoc, struct FRotator RelativeRot )
{
	static UFunction* pFn_SpawnEmitterMeshAttachment = NULL;

	if ( ! pFn_SpawnEmitterMeshAttachment )
		pFn_SpawnEmitterMeshAttachment = (UFunction*) UObject::GObjObjects()->Data[ 44642 ];

	APgEmitterPool_event_SpawnEmitterMeshAttachment_Parms _SpawnEmitterMeshAttachment_Parms;
	_SpawnEmitterMeshAttachment_Parms.EmitterTemplate = EmitterTemplate;
	_SpawnEmitterMeshAttachment_Parms.Mesh = Mesh;
	memcpy ( &_SpawnEmitterMeshAttachment_Parms.AttachPointName, &AttachPointName, 0x8 );
	_SpawnEmitterMeshAttachment_Parms.bAttachToSocket = bAttachToSocket;
	memcpy ( &_SpawnEmitterMeshAttachment_Parms.RelativeLoc, &RelativeLoc, 0xC );
	memcpy ( &_SpawnEmitterMeshAttachment_Parms.RelativeRot, &RelativeRot, 0xC );

	this->ProcessEvent ( pFn_SpawnEmitterMeshAttachment, &_SpawnEmitterMeshAttachment_Parms, NULL );

	return _SpawnEmitterMeshAttachment_Parms.ReturnValue;
};

// Function GridGame.PgEmitterPool.SpawnEmitter
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class UParticleSystemComponent* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// class UParticleSystem*         EmitterTemplate                ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  AttachToActor                  ( CPF_OptionalParm | CPF_Parm )

class UParticleSystemComponent* APgEmitterPool::SpawnEmitter ( class UParticleSystem* EmitterTemplate, struct FVector SpawnLocation, struct FRotator SpawnRotation, class AActor* AttachToActor )
{
	static UFunction* pFnSpawnEmitter = NULL;

	if ( ! pFnSpawnEmitter )
		pFnSpawnEmitter = (UFunction*) UObject::GObjObjects()->Data[ 44636 ];

	APgEmitterPool_execSpawnEmitter_Parms SpawnEmitter_Parms;
	SpawnEmitter_Parms.EmitterTemplate = EmitterTemplate;
	memcpy ( &SpawnEmitter_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &SpawnEmitter_Parms.SpawnRotation, &SpawnRotation, 0xC );
	SpawnEmitter_Parms.AttachToActor = AttachToActor;

	pFnSpawnEmitter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnEmitter, &SpawnEmitter_Parms, NULL );

	pFnSpawnEmitter->FunctionFlags |= 0x400;

	return SpawnEmitter_Parms.ReturnValue;
};

// Function GridGame.PgEmitterPool.PlacePooledLightWall
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgDynamicSMActor*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgDynamicSMActor*       wallArchetype                  ( CPF_Parm )
// float                          customLifeSpan                 ( CPF_Parm )
// class AController*             lightWallOwner                 ( CPF_Parm )
// int                            teamCollisionChannel           ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_OptionalParm | CPF_Parm )

class APgDynamicSMActor* APgEmitterPool::PlacePooledLightWall ( class APgDynamicSMActor* wallArchetype, float customLifeSpan, class AController* lightWallOwner, int teamCollisionChannel, struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnPlacePooledLightWall = NULL;

	if ( ! pFnPlacePooledLightWall )
		pFnPlacePooledLightWall = (UFunction*) UObject::GObjObjects()->Data[ 44628 ];

	APgEmitterPool_execPlacePooledLightWall_Parms PlacePooledLightWall_Parms;
	PlacePooledLightWall_Parms.wallArchetype = wallArchetype;
	PlacePooledLightWall_Parms.customLifeSpan = customLifeSpan;
	PlacePooledLightWall_Parms.lightWallOwner = lightWallOwner;
	PlacePooledLightWall_Parms.teamCollisionChannel = teamCollisionChannel;
	memcpy ( &PlacePooledLightWall_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &PlacePooledLightWall_Parms.SpawnRotation, &SpawnRotation, 0xC );

	pFnPlacePooledLightWall->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlacePooledLightWall, &PlacePooledLightWall_Parms, NULL );

	pFnPlacePooledLightWall->FunctionFlags |= 0x400;

	return PlacePooledLightWall_Parms.ReturnValue;
};

// Function GridGame.PgEmitterPool.AddLightWallMarker
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgDynamicSMActor*       wallArchetype                  ( CPF_Parm )
// float                          customLifeSpan                 ( CPF_Parm )
// class AActor*                  lightWallOwner                 ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_OptionalParm | CPF_Parm )
// int                            teamCollisionChannel           ( CPF_OptionalParm | CPF_Parm )

void APgEmitterPool::AddLightWallMarker ( class APgDynamicSMActor* wallArchetype, float customLifeSpan, class AActor* lightWallOwner, struct FVector SpawnLocation, struct FRotator SpawnRotation, int teamCollisionChannel )
{
	static UFunction* pFnAddLightWallMarker = NULL;

	if ( ! pFnAddLightWallMarker )
		pFnAddLightWallMarker = (UFunction*) UObject::GObjObjects()->Data[ 44621 ];

	APgEmitterPool_execAddLightWallMarker_Parms AddLightWallMarker_Parms;
	AddLightWallMarker_Parms.wallArchetype = wallArchetype;
	AddLightWallMarker_Parms.customLifeSpan = customLifeSpan;
	AddLightWallMarker_Parms.lightWallOwner = lightWallOwner;
	memcpy ( &AddLightWallMarker_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &AddLightWallMarker_Parms.SpawnRotation, &SpawnRotation, 0xC );
	AddLightWallMarker_Parms.teamCollisionChannel = teamCollisionChannel;

	pFnAddLightWallMarker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddLightWallMarker, &AddLightWallMarker_Parms, NULL );

	pFnAddLightWallMarker->FunctionFlags |= 0x400;
};

// Function GridGame.PgEmitterPool.ReturnDynamicEmitterToPool
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgDynamicEmitter*       Emitter                        ( CPF_Parm )
// float                          customLifeSpan                 ( CPF_Parm )

void APgEmitterPool::ReturnDynamicEmitterToPool ( class APgDynamicEmitter* Emitter, float customLifeSpan )
{
	static UFunction* pFnReturnDynamicEmitterToPool = NULL;

	if ( ! pFnReturnDynamicEmitterToPool )
		pFnReturnDynamicEmitterToPool = (UFunction*) UObject::GObjObjects()->Data[ 44618 ];

	APgEmitterPool_execReturnDynamicEmitterToPool_Parms ReturnDynamicEmitterToPool_Parms;
	ReturnDynamicEmitterToPool_Parms.Emitter = Emitter;
	ReturnDynamicEmitterToPool_Parms.customLifeSpan = customLifeSpan;

	pFnReturnDynamicEmitterToPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReturnDynamicEmitterToPool, &ReturnDynamicEmitterToPool_Parms, NULL );

	pFnReturnDynamicEmitterToPool->FunctionFlags |= 0x400;
};

// Function GridGame.PgEmitterPool.DeactivatePooledDynamicEmitter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            EmitterIndex                   ( CPF_Parm )

void APgEmitterPool::DeactivatePooledDynamicEmitter ( int EmitterIndex )
{
	static UFunction* pFnDeactivatePooledDynamicEmitter = NULL;

	if ( ! pFnDeactivatePooledDynamicEmitter )
		pFnDeactivatePooledDynamicEmitter = (UFunction*) UObject::GObjObjects()->Data[ 44616 ];

	APgEmitterPool_execDeactivatePooledDynamicEmitter_Parms DeactivatePooledDynamicEmitter_Parms;
	DeactivatePooledDynamicEmitter_Parms.EmitterIndex = EmitterIndex;

	pFnDeactivatePooledDynamicEmitter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivatePooledDynamicEmitter, &DeactivatePooledDynamicEmitter_Parms, NULL );

	pFnDeactivatePooledDynamicEmitter->FunctionFlags |= 0x400;
};

// Function GridGame.PgEmitterPool.GetPooledDynamicEmitter
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgDynamicEmitter*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UParticleSystem*         EmitterTemplate                ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_OptionalParm | CPF_Parm )

class APgDynamicEmitter* APgEmitterPool::GetPooledDynamicEmitter ( class UParticleSystem* EmitterTemplate, struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnGetPooledDynamicEmitter = NULL;

	if ( ! pFnGetPooledDynamicEmitter )
		pFnGetPooledDynamicEmitter = (UFunction*) UObject::GObjObjects()->Data[ 44611 ];

	APgEmitterPool_execGetPooledDynamicEmitter_Parms GetPooledDynamicEmitter_Parms;
	GetPooledDynamicEmitter_Parms.EmitterTemplate = EmitterTemplate;
	memcpy ( &GetPooledDynamicEmitter_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &GetPooledDynamicEmitter_Parms.SpawnRotation, &SpawnRotation, 0xC );

	pFnGetPooledDynamicEmitter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPooledDynamicEmitter, &GetPooledDynamicEmitter_Parms, NULL );

	pFnGetPooledDynamicEmitter->FunctionFlags |= 0x400;

	return GetPooledDynamicEmitter_Parms.ReturnValue;
};

// Function GridGame.PgEmitterPool.ResetPools
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgEmitterPool::ResetPools ( )
{
	static UFunction* pFnResetPools = NULL;

	if ( ! pFnResetPools )
		pFnResetPools = (UFunction*) UObject::GObjObjects()->Data[ 44610 ];

	APgEmitterPool_execResetPools_Parms ResetPools_Parms;

	pFnResetPools->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetPools, &ResetPools_Parms, NULL );

	pFnResetPools->FunctionFlags |= 0x400;
};

// Function GridGame.PgPhysMatEffect.GetPhysMatEffectInfo
// [0x00020002] 
// Parameters infos:
// struct FPhysMatEffectInfo      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       hitMaterial                    ( CPF_Parm )

struct FPhysMatEffectInfo UPgPhysMatEffect::GetPhysMatEffectInfo ( class UPhysicalMaterial* hitMaterial )
{
	static UFunction* pFnGetPhysMatEffectInfo = NULL;

	if ( ! pFnGetPhysMatEffectInfo )
		pFnGetPhysMatEffectInfo = (UFunction*) UObject::GObjObjects()->Data[ 49066 ];

	UPgPhysMatEffect_execGetPhysMatEffectInfo_Parms GetPhysMatEffectInfo_Parms;
	GetPhysMatEffectInfo_Parms.hitMaterial = hitMaterial;

	this->ProcessEvent ( pFnGetPhysMatEffectInfo, &GetPhysMatEffectInfo_Parms, NULL );

	return GetPhysMatEffectInfo_Parms.ReturnValue;
};

// Function GridGame.PgPhysMatEffect.PlayImpactEffects
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Instigator                     ( CPF_Parm )
// struct FVector                 Location                       ( CPF_Parm )
// struct FVector                 Normal                         ( CPF_Parm )
// class UPhysicalMaterial*       PhysMat                        ( CPF_Parm )

void UPgPhysMatEffect::PlayImpactEffects ( class AActor* Instigator, struct FVector Location, struct FVector Normal, class UPhysicalMaterial* PhysMat )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 49061 ];

	UPgPhysMatEffect_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	PlayImpactEffects_Parms.Instigator = Instigator;
	memcpy ( &PlayImpactEffects_Parms.Location, &Location, 0xC );
	memcpy ( &PlayImpactEffects_Parms.Normal, &Normal, 0xC );
	PlayImpactEffects_Parms.PhysMat = PhysMat;

	pFnPlayImpactEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );

	pFnPlayImpactEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgSkeletalMeshActor.TakeRadiusDamage
// [0x00024102] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void APgSkeletalMeshActor::TakeRadiusDamage ( class AController* InstigatedBy, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 50120 ];

	APgSkeletalMeshActor_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function GridGame.PgSkeletalMeshActor.OnClothSim
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_ClothSim*      Action                         ( CPF_Parm )

void APgSkeletalMeshActor::OnClothSim ( class UPgSeqAct_ClothSim* Action )
{
	static UFunction* pFnOnClothSim = NULL;

	if ( ! pFnOnClothSim )
		pFnOnClothSim = (UFunction*) UObject::GObjObjects()->Data[ 50117 ];

	APgSkeletalMeshActor_execOnClothSim_Parms OnClothSim_Parms;
	OnClothSim_Parms.Action = Action;

	this->ProcessEvent ( pFnOnClothSim, &OnClothSim_Parms, NULL );
};

// Function GridGame.PgSkeletalMeshActor.GetMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgSkeletalMeshActor::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 50114 ];

	APgSkeletalMeshActor_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgSkeletalMeshActor.InitMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgSkeletalMeshActor::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 50113 ];

	APgSkeletalMeshActor_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugIncStat
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 StatName                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          Delta                          ( CPF_Parm )

void UPgCheatManagerBase::DebugIncStat ( struct FString StatName, float Delta )
{
	static UFunction* pFnDebugIncStat = NULL;

	if ( ! pFnDebugIncStat )
		pFnDebugIncStat = (UFunction*) UObject::GObjObjects()->Data[ 43952 ];

	UPgCheatManagerBase_execDebugIncStat_Parms DebugIncStat_Parms;
	memcpy ( &DebugIncStat_Parms.StatName, &StatName, 0xC );
	DebugIncStat_Parms.Delta = Delta;

	pFnDebugIncStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugIncStat, &DebugIncStat_Parms, NULL );

	pFnDebugIncStat->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugSetStat
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 StatName                       ( CPF_Parm | CPF_NeedCtorLink )
// float                          Value                          ( CPF_Parm )

void UPgCheatManagerBase::DebugSetStat ( struct FString StatName, float Value )
{
	static UFunction* pFnDebugSetStat = NULL;

	if ( ! pFnDebugSetStat )
		pFnDebugSetStat = (UFunction*) UObject::GObjObjects()->Data[ 43949 ];

	UPgCheatManagerBase_execDebugSetStat_Parms DebugSetStat_Parms;
	memcpy ( &DebugSetStat_Parms.StatName, &StatName, 0xC );
	DebugSetStat_Parms.Value = Value;

	pFnDebugSetStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugSetStat, &DebugSetStat_Parms, NULL );

	pFnDebugSetStat->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DoApplyXP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            XPPoints                       ( CPF_Parm )

void UPgCheatManagerBase::DoApplyXP ( int XPPoints )
{
	static UFunction* pFnDoApplyXP = NULL;

	if ( ! pFnDoApplyXP )
		pFnDoApplyXP = (UFunction*) UObject::GObjObjects()->Data[ 43947 ];

	UPgCheatManagerBase_execDoApplyXP_Parms DoApplyXP_Parms;
	DoApplyXP_Parms.XPPoints = XPPoints;

	pFnDoApplyXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoApplyXP, &DoApplyXP_Parms, NULL );

	pFnDoApplyXP->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugEndLogging
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerBase::DebugEndLogging ( )
{
	static UFunction* pFnDebugEndLogging = NULL;

	if ( ! pFnDebugEndLogging )
		pFnDebugEndLogging = (UFunction*) UObject::GObjObjects()->Data[ 43945 ];

	UPgCheatManagerBase_execDebugEndLogging_Parms DebugEndLogging_Parms;

	this->ProcessEvent ( pFnDebugEndLogging, &DebugEndLogging_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DebugStartLogging
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 remoteIP                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// int                            Port                           ( CPF_OptionalParm | CPF_Parm )

void UPgCheatManagerBase::DebugStartLogging ( struct FString remoteIP, int Port )
{
	static UFunction* pFnDebugStartLogging = NULL;

	if ( ! pFnDebugStartLogging )
		pFnDebugStartLogging = (UFunction*) UObject::GObjObjects()->Data[ 43941 ];

	UPgCheatManagerBase_execDebugStartLogging_Parms DebugStartLogging_Parms;
	memcpy ( &DebugStartLogging_Parms.remoteIP, &remoteIP, 0xC );
	DebugStartLogging_Parms.Port = Port;

	this->ProcessEvent ( pFnDebugStartLogging, &DebugStartLogging_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DebugAwardTenKills
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerBase::DebugAwardTenKills ( )
{
	static UFunction* pFnDebugAwardTenKills = NULL;

	if ( ! pFnDebugAwardTenKills )
		pFnDebugAwardTenKills = (UFunction*) UObject::GObjObjects()->Data[ 43939 ];

	UPgCheatManagerBase_execDebugAwardTenKills_Parms DebugAwardTenKills_Parms;

	this->ProcessEvent ( pFnDebugAwardTenKills, &DebugAwardTenKills_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DebugAwardSkillPoints
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            SkillPoints                    ( CPF_Parm )

void UPgCheatManagerBase::DebugAwardSkillPoints ( int SkillPoints )
{
	static UFunction* pFnDebugAwardSkillPoints = NULL;

	if ( ! pFnDebugAwardSkillPoints )
		pFnDebugAwardSkillPoints = (UFunction*) UObject::GObjObjects()->Data[ 43934 ];

	UPgCheatManagerBase_execDebugAwardSkillPoints_Parms DebugAwardSkillPoints_Parms;
	DebugAwardSkillPoints_Parms.SkillPoints = SkillPoints;

	this->ProcessEvent ( pFnDebugAwardSkillPoints, &DebugAwardSkillPoints_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DebugAwardXP
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            XPPoints                       ( CPF_Parm )

void UPgCheatManagerBase::DebugAwardXP ( int XPPoints )
{
	static UFunction* pFnDebugAwardXP = NULL;

	if ( ! pFnDebugAwardXP )
		pFnDebugAwardXP = (UFunction*) UObject::GObjObjects()->Data[ 43932 ];

	UPgCheatManagerBase_execDebugAwardXP_Parms DebugAwardXP_Parms;
	DebugAwardXP_Parms.XPPoints = XPPoints;

	this->ProcessEvent ( pFnDebugAwardXP, &DebugAwardXP_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DebugPurchaseEveything
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Types                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            PlayerLevel                    ( CPF_Parm )

void UPgCheatManagerBase::DebugPurchaseEveything ( struct FString Types, int PlayerLevel )
{
	static UFunction* pFnDebugPurchaseEveything = NULL;

	if ( ! pFnDebugPurchaseEveything )
		pFnDebugPurchaseEveything = (UFunction*) UObject::GObjObjects()->Data[ 43929 ];

	UPgCheatManagerBase_execDebugPurchaseEveything_Parms DebugPurchaseEveything_Parms;
	memcpy ( &DebugPurchaseEveything_Parms.Types, &Types, 0xC );
	DebugPurchaseEveything_Parms.PlayerLevel = PlayerLevel;

	pFnDebugPurchaseEveything->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugPurchaseEveything, &DebugPurchaseEveything_Parms, NULL );

	pFnDebugPurchaseEveything->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugPurchase
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Item                           ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManagerBase::DebugPurchase ( struct FString Item )
{
	static UFunction* pFnDebugPurchase = NULL;

	if ( ! pFnDebugPurchase )
		pFnDebugPurchase = (UFunction*) UObject::GObjObjects()->Data[ 43927 ];

	UPgCheatManagerBase_execDebugPurchase_Parms DebugPurchase_Parms;
	memcpy ( &DebugPurchase_Parms.Item, &Item, 0xC );

	pFnDebugPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugPurchase, &DebugPurchase_Parms, NULL );

	pFnDebugPurchase->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugJumpToLevel
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            Level                          ( CPF_Parm )

void UPgCheatManagerBase::DebugJumpToLevel ( int Level )
{
	static UFunction* pFnDebugJumpToLevel = NULL;

	if ( ! pFnDebugJumpToLevel )
		pFnDebugJumpToLevel = (UFunction*) UObject::GObjObjects()->Data[ 43925 ];

	UPgCheatManagerBase_execDebugJumpToLevel_Parms DebugJumpToLevel_Parms;
	DebugJumpToLevel_Parms.Level = Level;

	pFnDebugJumpToLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugJumpToLevel, &DebugJumpToLevel_Parms, NULL );

	pFnDebugJumpToLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.PlayFmvs
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  Enable                         ( CPF_Parm )

void UPgCheatManagerBase::PlayFmvs ( unsigned long Enable )
{
	static UFunction* pFnPlayFmvs = NULL;

	if ( ! pFnPlayFmvs )
		pFnPlayFmvs = (UFunction*) UObject::GObjObjects()->Data[ 43917 ];

	UPgCheatManagerBase_execPlayFmvs_Parms PlayFmvs_Parms;
	PlayFmvs_Parms.Enable = Enable;

	this->ProcessEvent ( pFnPlayFmvs, &PlayFmvs_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.HealViewedActor
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void UPgCheatManagerBase::HealViewedActor ( int Amount )
{
	static UFunction* pFnHealViewedActor = NULL;

	if ( ! pFnHealViewedActor )
		pFnHealViewedActor = (UFunction*) UObject::GObjObjects()->Data[ 43915 ];

	UPgCheatManagerBase_execHealViewedActor_Parms HealViewedActor_Parms;
	HealViewedActor_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHealViewedActor, &HealViewedActor_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DamageViewedActor
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void UPgCheatManagerBase::DamageViewedActor ( int Amount )
{
	static UFunction* pFnDamageViewedActor = NULL;

	if ( ! pFnDamageViewedActor )
		pFnDamageViewedActor = (UFunction*) UObject::GObjObjects()->Data[ 43913 ];

	UPgCheatManagerBase_execDamageViewedActor_Parms DamageViewedActor_Parms;
	DamageViewedActor_Parms.Amount = Amount;

	this->ProcessEvent ( pFnDamageViewedActor, &DamageViewedActor_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.MPForceVehicles
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  SetVehicling                   ( CPF_Parm )

void UPgCheatManagerBase::MPForceVehicles ( unsigned long SetVehicling )
{
	static UFunction* pFnMPForceVehicles = NULL;

	if ( ! pFnMPForceVehicles )
		pFnMPForceVehicles = (UFunction*) UObject::GObjObjects()->Data[ 43910 ];

	UPgCheatManagerBase_execMPForceVehicles_Parms MPForceVehicles_Parms;
	MPForceVehicles_Parms.SetVehicling = SetVehicling;

	this->ProcessEvent ( pFnMPForceVehicles, &MPForceVehicles_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DrawDebugLightWalls
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgCheatManagerBase::DrawDebugLightWalls ( )
{
	static UFunction* pFnDrawDebugLightWalls = NULL;

	if ( ! pFnDrawDebugLightWalls )
		pFnDrawDebugLightWalls = (UFunction*) UObject::GObjObjects()->Data[ 43909 ];

	UPgCheatManagerBase_execDrawDebugLightWalls_Parms DrawDebugLightWalls_Parms;

	pFnDrawDebugLightWalls->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDrawDebugLightWalls, &DrawDebugLightWalls_Parms, NULL );

	pFnDrawDebugLightWalls->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DumpEmitterPool
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManagerBase::DumpEmitterPool ( )
{
	static UFunction* pFnDumpEmitterPool = NULL;

	if ( ! pFnDumpEmitterPool )
		pFnDumpEmitterPool = (UFunction*) UObject::GObjObjects()->Data[ 43908 ];

	UPgCheatManagerBase_execDumpEmitterPool_Parms DumpEmitterPool_Parms;

	pFnDumpEmitterPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDumpEmitterPool, &DumpEmitterPool_Parms, NULL );

	pFnDumpEmitterPool->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugMobility
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  toggle                         ( CPF_Parm )

void UPgCheatManagerBase::DebugMobility ( unsigned long toggle )
{
	static UFunction* pFnDebugMobility = NULL;

	if ( ! pFnDebugMobility )
		pFnDebugMobility = (UFunction*) UObject::GObjObjects()->Data[ 43906 ];

	UPgCheatManagerBase_execDebugMobility_Parms DebugMobility_Parms;
	DebugMobility_Parms.toggle = toggle;

	pFnDebugMobility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugMobility, &DebugMobility_Parms, NULL );

	pFnDebugMobility->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.DebugSmartObjects
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  toggle                         ( CPF_Parm )

void UPgCheatManagerBase::DebugSmartObjects ( unsigned long toggle )
{
	static UFunction* pFnDebugSmartObjects = NULL;

	if ( ! pFnDebugSmartObjects )
		pFnDebugSmartObjects = (UFunction*) UObject::GObjObjects()->Data[ 43904 ];

	UPgCheatManagerBase_execDebugSmartObjects_Parms DebugSmartObjects_Parms;
	DebugSmartObjects_Parms.toggle = toggle;

	pFnDebugSmartObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugSmartObjects, &DebugSmartObjects_Parms, NULL );

	pFnDebugSmartObjects->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.ClearDebugLines
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerBase::ClearDebugLines ( )
{
	static UFunction* pFnClearDebugLines = NULL;

	if ( ! pFnClearDebugLines )
		pFnClearDebugLines = (UFunction*) UObject::GObjObjects()->Data[ 43903 ];

	UPgCheatManagerBase_execClearDebugLines_Parms ClearDebugLines_Parms;

	this->ProcessEvent ( pFnClearDebugLines, &ClearDebugLines_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DrawDebugKismet
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCheatManagerBase::DrawDebugKismet ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDrawDebugKismet = NULL;

	if ( ! pFnDrawDebugKismet )
		pFnDrawDebugKismet = (UFunction*) UObject::GObjObjects()->Data[ 43891 ];

	UPgCheatManagerBase_execDrawDebugKismet_Parms DrawDebugKismet_Parms;
	DrawDebugKismet_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawDebugKismet, &DrawDebugKismet_Parms, NULL );

	if ( out_YL )
		*out_YL = DrawDebugKismet_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DrawDebugKismet_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerBase.DrawObjectivesDebug3D
// [0x00C20102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCheatManagerBase::DrawObjectivesDebug3D ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDrawObjectivesDebug3D = NULL;

	if ( ! pFnDrawObjectivesDebug3D )
		pFnDrawObjectivesDebug3D = (UFunction*) UObject::GObjObjects()->Data[ 43877 ];

	UPgCheatManagerBase_execDrawObjectivesDebug3D_Parms DrawObjectivesDebug3D_Parms;
	DrawObjectivesDebug3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawObjectivesDebug3D, &DrawObjectivesDebug3D_Parms, NULL );

	if ( out_YL )
		*out_YL = DrawObjectivesDebug3D_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DrawObjectivesDebug3D_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerBase.DrawRallyPointDebug3D
// [0x00C20002] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCheatManagerBase::DrawRallyPointDebug3D ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDrawRallyPointDebug3D = NULL;

	if ( ! pFnDrawRallyPointDebug3D )
		pFnDrawRallyPointDebug3D = (UFunction*) UObject::GObjObjects()->Data[ 43839 ];

	UPgCheatManagerBase_execDrawRallyPointDebug3D_Parms DrawRallyPointDebug3D_Parms;
	DrawRallyPointDebug3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawRallyPointDebug3D, &DrawRallyPointDebug3D_Parms, NULL );

	if ( out_YL )
		*out_YL = DrawRallyPointDebug3D_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DrawRallyPointDebug3D_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerBase.DrawSpawnDebug3D
// [0x00C20002] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCheatManagerBase::DrawSpawnDebug3D ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDrawSpawnDebug3D = NULL;

	if ( ! pFnDrawSpawnDebug3D )
		pFnDrawSpawnDebug3D = (UFunction*) UObject::GObjObjects()->Data[ 43788 ];

	UPgCheatManagerBase_execDrawSpawnDebug3D_Parms DrawSpawnDebug3D_Parms;
	DrawSpawnDebug3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawSpawnDebug3D, &DrawSpawnDebug3D_Parms, NULL );

	if ( out_YL )
		*out_YL = DrawSpawnDebug3D_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DrawSpawnDebug3D_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerBase.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgCheatManagerBase::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 43778 ];

	UPgCheatManagerBase_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerBase.DrawDebugActorInfo3D
// [0x00820002] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCheatManagerBase::DrawDebugActorInfo3D ( class AHUD* HUD )
{
	static UFunction* pFnDrawDebugActorInfo3D = NULL;

	if ( ! pFnDrawDebugActorInfo3D )
		pFnDrawDebugActorInfo3D = (UFunction*) UObject::GObjObjects()->Data[ 43764 ];

	UPgCheatManagerBase_execDrawDebugActorInfo3D_Parms DrawDebugActorInfo3D_Parms;
	DrawDebugActorInfo3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawDebugActorInfo3D, &DrawDebugActorInfo3D_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.DisplayDebug3D
// [0x00020100] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void UPgCheatManagerBase::DisplayDebug3D ( class AHUD* HUD )
{
	static UFunction* pFnDisplayDebug3D = NULL;

	if ( ! pFnDisplayDebug3D )
		pFnDisplayDebug3D = (UFunction*) UObject::GObjObjects()->Data[ 43762 ];

	UPgCheatManagerBase_execDisplayDebug3D_Parms DisplayDebug3D_Parms;
	DisplayDebug3D_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug3D, &DisplayDebug3D_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ShowDebug3d
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   debugClass                     ( CPF_OptionalParm | CPF_Parm )
// struct FName                   PropertyName                   ( CPF_OptionalParm | CPF_Parm )

void UPgCheatManagerBase::ShowDebug3d ( struct FName debugClass, struct FName PropertyName )
{
	static UFunction* pFnShowDebug3d = NULL;

	if ( ! pFnShowDebug3d )
		pFnShowDebug3d = (UFunction*) UObject::GObjObjects()->Data[ 43755 ];

	UPgCheatManagerBase_execShowDebug3d_Parms ShowDebug3d_Parms;
	memcpy ( &ShowDebug3d_Parms.debugClass, &debugClass, 0x8 );
	memcpy ( &ShowDebug3d_Parms.PropertyName, &PropertyName, 0x8 );

	this->ProcessEvent ( pFnShowDebug3d, &ShowDebug3d_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.KillAllPawns
// [0x00020002] 
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )

void UPgCheatManagerBase::KillAllPawns ( class UClass* aClass )
{
	static UFunction* pFnKillAllPawns = NULL;

	if ( ! pFnKillAllPawns )
		pFnKillAllPawns = (UFunction*) UObject::GObjObjects()->Data[ 43748 ];

	UPgCheatManagerBase_execKillAllPawns_Parms KillAllPawns_Parms;
	KillAllPawns_Parms.aClass = aClass;

	this->ProcessEvent ( pFnKillAllPawns, &KillAllPawns_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleForceFeedback
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerBase::ToggleForceFeedback ( )
{
	static UFunction* pFnToggleForceFeedback = NULL;

	if ( ! pFnToggleForceFeedback )
		pFnToggleForceFeedback = (UFunction*) UObject::GObjObjects()->Data[ 43747 ];

	UPgCheatManagerBase_execToggleForceFeedback_Parms ToggleForceFeedback_Parms;

	this->ProcessEvent ( pFnToggleForceFeedback, &ToggleForceFeedback_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.SetDestination
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   destActor                      ( CPF_Parm )

void UPgCheatManagerBase::SetDestination ( struct FName destActor )
{
	static UFunction* pFnSetDestination = NULL;

	if ( ! pFnSetDestination )
		pFnSetDestination = (UFunction*) UObject::GObjObjects()->Data[ 43742 ];

	UPgCheatManagerBase_execSetDestination_Parms SetDestination_Parms;
	memcpy ( &SetDestination_Parms.destActor, &destActor, 0x8 );

	this->ProcessEvent ( pFnSetDestination, &SetDestination_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.Summon
// [0x00820202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 archetypeName                  ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManagerBase::Summon ( struct FString archetypeName )
{
	static UFunction* pFnSummon = NULL;

	if ( ! pFnSummon )
		pFnSummon = (UFunction*) UObject::GObjObjects()->Data[ 43736 ];

	UPgCheatManagerBase_execSummon_Parms Summon_Parms;
	memcpy ( &Summon_Parms.archetypeName, &archetypeName, 0xC );

	this->ProcessEvent ( pFnSummon, &Summon_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.GetActorPropertyValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  propActor                      ( CPF_Parm )
// struct FName                   PropertyName                   ( CPF_Parm )
// struct FString                 PropertyValue                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgCheatManagerBase::GetActorPropertyValue ( class AActor* propActor, struct FName PropertyName, struct FString* PropertyValue )
{
	static UFunction* pFnGetActorPropertyValue = NULL;

	if ( ! pFnGetActorPropertyValue )
		pFnGetActorPropertyValue = (UFunction*) UObject::GObjObjects()->Data[ 43732 ];

	UPgCheatManagerBase_execGetActorPropertyValue_Parms GetActorPropertyValue_Parms;
	GetActorPropertyValue_Parms.propActor = propActor;
	memcpy ( &GetActorPropertyValue_Parms.PropertyName, &PropertyName, 0x8 );

	pFnGetActorPropertyValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActorPropertyValue, &GetActorPropertyValue_Parms, NULL );

	pFnGetActorPropertyValue->FunctionFlags |= 0x400;

	if ( PropertyValue )
		memcpy ( PropertyValue, &GetActorPropertyValue_Parms.PropertyValue, 0xC );
};

// Function GridGame.PgCheatManagerBase.ToggleRootCameraDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 rootCameraListName             ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManagerBase::ToggleRootCameraDebug ( struct FString rootCameraListName )
{
	static UFunction* pFnToggleRootCameraDebug = NULL;

	if ( ! pFnToggleRootCameraDebug )
		pFnToggleRootCameraDebug = (UFunction*) UObject::GObjObjects()->Data[ 43727 ];

	UPgCheatManagerBase_execToggleRootCameraDebug_Parms ToggleRootCameraDebug_Parms;
	memcpy ( &ToggleRootCameraDebug_Parms.rootCameraListName, &rootCameraListName, 0xC );

	this->ProcessEvent ( pFnToggleRootCameraDebug, &ToggleRootCameraDebug_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleCameraDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 fullCameraStyle                ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManagerBase::ToggleCameraDebug ( struct FString fullCameraStyle )
{
	static UFunction* pFnToggleCameraDebug = NULL;

	if ( ! pFnToggleCameraDebug )
		pFnToggleCameraDebug = (UFunction*) UObject::GObjObjects()->Data[ 43722 ];

	UPgCheatManagerBase_execToggleCameraDebug_Parms ToggleCameraDebug_Parms;
	memcpy ( &ToggleCameraDebug_Parms.fullCameraStyle, &fullCameraStyle, 0xC );

	this->ProcessEvent ( pFnToggleCameraDebug, &ToggleCameraDebug_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleCameraListDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 fullCameraStyle                ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManagerBase::ToggleCameraListDebug ( struct FString fullCameraStyle )
{
	static UFunction* pFnToggleCameraListDebug = NULL;

	if ( ! pFnToggleCameraListDebug )
		pFnToggleCameraListDebug = (UFunction*) UObject::GObjObjects()->Data[ 43716 ];

	UPgCheatManagerBase_execToggleCameraListDebug_Parms ToggleCameraListDebug_Parms;
	memcpy ( &ToggleCameraListDebug_Parms.fullCameraStyle, &fullCameraStyle, 0xC );

	this->ProcessEvent ( pFnToggleCameraListDebug, &ToggleCameraListDebug_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleCameraAndDescendants
// [0x00020002] 
// Parameters infos:
// class UPgCameraBase*           Camera                         ( CPF_Parm )

void UPgCheatManagerBase::ToggleCameraAndDescendants ( class UPgCameraBase* Camera )
{
	static UFunction* pFnToggleCameraAndDescendants = NULL;

	if ( ! pFnToggleCameraAndDescendants )
		pFnToggleCameraAndDescendants = (UFunction*) UObject::GObjObjects()->Data[ 43712 ];

	UPgCheatManagerBase_execToggleCameraAndDescendants_Parms ToggleCameraAndDescendants_Parms;
	ToggleCameraAndDescendants_Parms.Camera = Camera;

	this->ProcessEvent ( pFnToggleCameraAndDescendants, &ToggleCameraAndDescendants_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleCameraList
// [0x00020002] 
// Parameters infos:
// class UPgCameraList*           CameraList                     ( CPF_Parm )

void UPgCheatManagerBase::ToggleCameraList ( class UPgCameraList* CameraList )
{
	static UFunction* pFnToggleCameraList = NULL;

	if ( ! pFnToggleCameraList )
		pFnToggleCameraList = (UFunction*) UObject::GObjObjects()->Data[ 43709 ];

	UPgCheatManagerBase_execToggleCameraList_Parms ToggleCameraList_Parms;
	ToggleCameraList_Parms.CameraList = CameraList;

	this->ProcessEvent ( pFnToggleCameraList, &ToggleCameraList_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.GetPgPlayerCamera
// [0x00020002] 
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PlayerController               ( CPF_Parm )

class APgPlayerCamera* UPgCheatManagerBase::GetPgPlayerCamera ( class APlayerController* PlayerController )
{
	static UFunction* pFnGetPgPlayerCamera = NULL;

	if ( ! pFnGetPgPlayerCamera )
		pFnGetPgPlayerCamera = (UFunction*) UObject::GObjObjects()->Data[ 43706 ];

	UPgCheatManagerBase_execGetPgPlayerCamera_Parms GetPgPlayerCamera_Parms;
	GetPgPlayerCamera_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnGetPgPlayerCamera, &GetPgPlayerCamera_Parms, NULL );

	return GetPgPlayerCamera_Parms.ReturnValue;
};

// Function GridGame.PgCheatManagerBase.AIFreezeMovement
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  frozen                         ( CPF_Parm )

void UPgCheatManagerBase::AIFreezeMovement ( unsigned long frozen )
{
	static UFunction* pFnAIFreezeMovement = NULL;

	if ( ! pFnAIFreezeMovement )
		pFnAIFreezeMovement = (UFunction*) UObject::GObjObjects()->Data[ 43703 ];

	UPgCheatManagerBase_execAIFreezeMovement_Parms AIFreezeMovement_Parms;
	AIFreezeMovement_Parms.frozen = frozen;

	this->ProcessEvent ( pFnAIFreezeMovement, &AIFreezeMovement_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.AIForceWeaponsHold
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  forceHold                      ( CPF_Parm )

void UPgCheatManagerBase::AIForceWeaponsHold ( unsigned long forceHold )
{
	static UFunction* pFnAIForceWeaponsHold = NULL;

	if ( ! pFnAIForceWeaponsHold )
		pFnAIForceWeaponsHold = (UFunction*) UObject::GObjObjects()->Data[ 43700 ];

	UPgCheatManagerBase_execAIForceWeaponsHold_Parms AIForceWeaponsHold_Parms;
	AIForceWeaponsHold_Parms.forceHold = forceHold;

	this->ProcessEvent ( pFnAIForceWeaponsHold, &AIForceWeaponsHold_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.SetTickGroupComponent
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  NewTickGroup                   ( CPF_Parm )
// struct FName                   componentName                  ( CPF_OptionalParm | CPF_Parm )

void UPgCheatManagerBase::SetTickGroupComponent ( unsigned char NewTickGroup, struct FName componentName )
{
	static UFunction* pFnSetTickGroupComponent = NULL;

	if ( ! pFnSetTickGroupComponent )
		pFnSetTickGroupComponent = (UFunction*) UObject::GObjObjects()->Data[ 43694 ];

	UPgCheatManagerBase_execSetTickGroupComponent_Parms SetTickGroupComponent_Parms;
	SetTickGroupComponent_Parms.NewTickGroup = NewTickGroup;
	memcpy ( &SetTickGroupComponent_Parms.componentName, &componentName, 0x8 );

	this->ProcessEvent ( pFnSetTickGroupComponent, &SetTickGroupComponent_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.SetTickGroupActor
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  NewTickGroup                   ( CPF_Parm )
// struct FName                   ClassName                      ( CPF_Parm )
// struct FName                   componentName                  ( CPF_OptionalParm | CPF_Parm )

void UPgCheatManagerBase::SetTickGroupActor ( unsigned char NewTickGroup, struct FName ClassName, struct FName componentName )
{
	static UFunction* pFnSetTickGroupActor = NULL;

	if ( ! pFnSetTickGroupActor )
		pFnSetTickGroupActor = (UFunction*) UObject::GObjObjects()->Data[ 43687 ];

	UPgCheatManagerBase_execSetTickGroupActor_Parms SetTickGroupActor_Parms;
	SetTickGroupActor_Parms.NewTickGroup = NewTickGroup;
	memcpy ( &SetTickGroupActor_Parms.ClassName, &ClassName, 0x8 );
	memcpy ( &SetTickGroupActor_Parms.componentName, &componentName, 0x8 );

	this->ProcessEvent ( pFnSetTickGroupActor, &SetTickGroupActor_Parms, NULL );
};

// Function GridGame.PgCheatManagerBase.ToggleGripDESShadows
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManagerBase::ToggleGripDESShadows ( )
{
	static UFunction* pFnToggleGripDESShadows = NULL;

	if ( ! pFnToggleGripDESShadows )
		pFnToggleGripDESShadows = (UFunction*) UObject::GObjObjects()->Data[ 43686 ];

	UPgCheatManagerBase_execToggleGripDESShadows_Parms ToggleGripDESShadows_Parms;

	pFnToggleGripDESShadows->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleGripDESShadows, &ToggleGripDESShadows_Parms, NULL );

	pFnToggleGripDESShadows->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.ToggleGripDES
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManagerBase::ToggleGripDES ( )
{
	static UFunction* pFnToggleGripDES = NULL;

	if ( ! pFnToggleGripDES )
		pFnToggleGripDES = (UFunction*) UObject::GObjObjects()->Data[ 43685 ];

	UPgCheatManagerBase_execToggleGripDES_Parms ToggleGripDES_Parms;

	pFnToggleGripDES->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleGripDES, &ToggleGripDES_Parms, NULL );

	pFnToggleGripDES->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.OnScreenWarnings
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManagerBase::OnScreenWarnings ( )
{
	static UFunction* pFnOnScreenWarnings = NULL;

	if ( ! pFnOnScreenWarnings )
		pFnOnScreenWarnings = (UFunction*) UObject::GObjObjects()->Data[ 43684 ];

	UPgCheatManagerBase_execOnScreenWarnings_Parms OnScreenWarnings_Parms;

	pFnOnScreenWarnings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnScreenWarnings, &OnScreenWarnings_Parms, NULL );

	pFnOnScreenWarnings->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManagerBase.ToggleSloMo
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// float                          GameSpeed                      ( CPF_OptionalParm | CPF_Parm )

void UPgCheatManagerBase::ToggleSloMo ( float GameSpeed )
{
	static UFunction* pFnToggleSloMo = NULL;

	if ( ! pFnToggleSloMo )
		pFnToggleSloMo = (UFunction*) UObject::GObjObjects()->Data[ 43682 ];

	UPgCheatManagerBase_execToggleSloMo_Parms ToggleSloMo_Parms;
	ToggleSloMo_Parms.GameSpeed = GameSpeed;

	this->ProcessEvent ( pFnToggleSloMo, &ToggleSloMo_Parms, NULL );
};

// Function GridGame.PgPlayerController.AltTankControls
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::AltTankControls ( )
{
	static UFunction* pFnAltTankControls = NULL;

	if ( ! pFnAltTankControls )
		pFnAltTankControls = (UFunction*) UObject::GObjObjects()->Data[ 46188 ];

	APgPlayerController_execAltTankControls_Parms AltTankControls_Parms;

	this->ProcessEvent ( pFnAltTankControls, &AltTankControls_Parms, NULL );
};

// Function GridGame.PgPlayerController.ToggleTankControls
// [0x00020002] 
// Parameters infos:

void APgPlayerController::ToggleTankControls ( )
{
	static UFunction* pFnToggleTankControls = NULL;

	if ( ! pFnToggleTankControls )
		pFnToggleTankControls = (UFunction*) UObject::GObjObjects()->Data[ 46183 ];

	APgPlayerController_execToggleTankControls_Parms ToggleTankControls_Parms;

	this->ProcessEvent ( pFnToggleTankControls, &ToggleTankControls_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerToggleTankControls
// [0x002200C2] 
// Parameters infos:

void APgPlayerController::ServerToggleTankControls ( )
{
	static UFunction* pFnServerToggleTankControls = NULL;

	if ( ! pFnServerToggleTankControls )
		pFnServerToggleTankControls = (UFunction*) UObject::GObjObjects()->Data[ 46182 ];

	APgPlayerController_execServerToggleTankControls_Parms ServerToggleTankControls_Parms;

	this->ProcessEvent ( pFnServerToggleTankControls, &ServerToggleTankControls_Parms, NULL );
};

// Function GridGame.PgPlayerController.ListConsoleEvents
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::ListConsoleEvents ( )
{
	static UFunction* pFnListConsoleEvents = NULL;

	if ( ! pFnListConsoleEvents )
		pFnListConsoleEvents = (UFunction*) UObject::GObjObjects()->Data[ 46181 ];

	APgPlayerController_execListConsoleEvents_Parms ListConsoleEvents_Parms;

	this->ProcessEvent ( pFnListConsoleEvents, &ListConsoleEvents_Parms, NULL );
};

// Function GridGame.PgPlayerController._GetStateName
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgPlayerController::event_GetStateName ( )
{
	static UFunction* pFn_GetStateName = NULL;

	if ( ! pFn_GetStateName )
		pFn_GetStateName = (UFunction*) UObject::GObjObjects()->Data[ 45852 ];

	APgPlayerController_event_GetStateName_Parms _GetStateName_Parms;

	this->ProcessEvent ( pFn_GetStateName, &_GetStateName_Parms, NULL );

	return _GetStateName_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.IsOnScreen
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool APgPlayerController::IsOnScreen ( class AActor* Target )
{
	static UFunction* pFnIsOnScreen = NULL;

	if ( ! pFnIsOnScreen )
		pFnIsOnScreen = (UFunction*) UObject::GObjObjects()->Data[ 45849 ];

	APgPlayerController_execIsOnScreen_Parms IsOnScreen_Parms;
	IsOnScreen_Parms.Target = Target;

	pFnIsOnScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsOnScreen, &IsOnScreen_Parms, NULL );

	pFnIsOnScreen->FunctionFlags |= 0x400;

	return IsOnScreen_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 45848 ];

	APgPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function GridGame.PgPlayerController.NotifyAttemptToSwitchPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Power                          ( CPF_Parm )

void APgPlayerController::NotifyAttemptToSwitchPower ( struct FName Power )
{
	static UFunction* pFnNotifyAttemptToSwitchPower = NULL;

	if ( ! pFnNotifyAttemptToSwitchPower )
		pFnNotifyAttemptToSwitchPower = (UFunction*) UObject::GObjObjects()->Data[ 45846 ];

	APgPlayerController_execNotifyAttemptToSwitchPower_Parms NotifyAttemptToSwitchPower_Parms;
	memcpy ( &NotifyAttemptToSwitchPower_Parms.Power, &Power, 0x8 );

	pFnNotifyAttemptToSwitchPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyAttemptToSwitchPower, &NotifyAttemptToSwitchPower_Parms, NULL );

	pFnNotifyAttemptToSwitchPower->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.NotifyAddInventoryPower
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FName                   itemTypeName                   ( CPF_Parm )

void APgPlayerController::eventNotifyAddInventoryPower ( struct FName itemTypeName )
{
	static UFunction* pFnNotifyAddInventoryPower = NULL;

	if ( ! pFnNotifyAddInventoryPower )
		pFnNotifyAddInventoryPower = (UFunction*) UObject::GObjObjects()->Data[ 45844 ];

	APgPlayerController_eventNotifyAddInventoryPower_Parms NotifyAddInventoryPower_Parms;
	memcpy ( &NotifyAddInventoryPower_Parms.itemTypeName, &itemTypeName, 0x8 );

	pFnNotifyAddInventoryPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyAddInventoryPower, &NotifyAddInventoryPower_Parms, NULL );

	pFnNotifyAddInventoryPower->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._NotifyNotEnoughSpaceInInvite
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::event_NotifyNotEnoughSpaceInInvite ( )
{
	static UFunction* pFn_NotifyNotEnoughSpaceInInvite = NULL;

	if ( ! pFn_NotifyNotEnoughSpaceInInvite )
		pFn_NotifyNotEnoughSpaceInInvite = (UFunction*) UObject::GObjObjects()->Data[ 45843 ];

	APgPlayerController_event_NotifyNotEnoughSpaceInInvite_Parms _NotifyNotEnoughSpaceInInvite_Parms;

	this->ProcessEvent ( pFn_NotifyNotEnoughSpaceInInvite, &_NotifyNotEnoughSpaceInInvite_Parms, NULL );
};

// Function GridGame.PgPlayerController.NotifyNotEnoughSpaceInInvite
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::NotifyNotEnoughSpaceInInvite ( )
{
	static UFunction* pFnNotifyNotEnoughSpaceInInvite = NULL;

	if ( ! pFnNotifyNotEnoughSpaceInInvite )
		pFnNotifyNotEnoughSpaceInInvite = (UFunction*) UObject::GObjObjects()->Data[ 45842 ];

	APgPlayerController_execNotifyNotEnoughSpaceInInvite_Parms NotifyNotEnoughSpaceInInvite_Parms;

	pFnNotifyNotEnoughSpaceInInvite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyNotEnoughSpaceInInvite, &NotifyNotEnoughSpaceInInvite_Parms, NULL );

	pFnNotifyNotEnoughSpaceInInvite->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._NotifyNotAllPlayersCanJoinInvite
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::event_NotifyNotAllPlayersCanJoinInvite ( )
{
	static UFunction* pFn_NotifyNotAllPlayersCanJoinInvite = NULL;

	if ( ! pFn_NotifyNotAllPlayersCanJoinInvite )
		pFn_NotifyNotAllPlayersCanJoinInvite = (UFunction*) UObject::GObjObjects()->Data[ 45841 ];

	APgPlayerController_event_NotifyNotAllPlayersCanJoinInvite_Parms _NotifyNotAllPlayersCanJoinInvite_Parms;

	this->ProcessEvent ( pFn_NotifyNotAllPlayersCanJoinInvite, &_NotifyNotAllPlayersCanJoinInvite_Parms, NULL );
};

// Function GridGame.PgPlayerController.NotifyNotAllPlayersCanJoinInvite
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::NotifyNotAllPlayersCanJoinInvite ( )
{
	static UFunction* pFnNotifyNotAllPlayersCanJoinInvite = NULL;

	if ( ! pFnNotifyNotAllPlayersCanJoinInvite )
		pFnNotifyNotAllPlayersCanJoinInvite = (UFunction*) UObject::GObjObjects()->Data[ 45840 ];

	APgPlayerController_execNotifyNotAllPlayersCanJoinInvite_Parms NotifyNotAllPlayersCanJoinInvite_Parms;

	pFnNotifyNotAllPlayersCanJoinInvite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyNotAllPlayersCanJoinInvite, &NotifyNotAllPlayersCanJoinInvite_Parms, NULL );

	pFnNotifyNotAllPlayersCanJoinInvite->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._NotifyInviteFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::event_NotifyInviteFailed ( )
{
	static UFunction* pFn_NotifyInviteFailed = NULL;

	if ( ! pFn_NotifyInviteFailed )
		pFn_NotifyInviteFailed = (UFunction*) UObject::GObjObjects()->Data[ 45839 ];

	APgPlayerController_event_NotifyInviteFailed_Parms _NotifyInviteFailed_Parms;

	this->ProcessEvent ( pFn_NotifyInviteFailed, &_NotifyInviteFailed_Parms, NULL );
};

// Function GridGame.PgPlayerController.NotifyInviteFailed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::NotifyInviteFailed ( )
{
	static UFunction* pFnNotifyInviteFailed = NULL;

	if ( ! pFnNotifyInviteFailed )
		pFnNotifyInviteFailed = (UFunction*) UObject::GObjObjects()->Data[ 45838 ];

	APgPlayerController_execNotifyInviteFailed_Parms NotifyInviteFailed_Parms;

	pFnNotifyInviteFailed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyInviteFailed, &NotifyInviteFailed_Parms, NULL );

	pFnNotifyInviteFailed->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._GetPlayerNickname
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UOnlineSubsystem*        oss                            ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )

struct FString APgPlayerController::event_GetPlayerNickname ( class UOnlineSubsystem* oss, unsigned char LocalUserNum )
{
	static UFunction* pFn_GetPlayerNickname = NULL;

	if ( ! pFn_GetPlayerNickname )
		pFn_GetPlayerNickname = (UFunction*) UObject::GObjObjects()->Data[ 45834 ];

	APgPlayerController_event_GetPlayerNickname_Parms _GetPlayerNickname_Parms;
	_GetPlayerNickname_Parms.oss = oss;
	_GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFn_GetPlayerNickname, &_GetPlayerNickname_Parms, NULL );

	return _GetPlayerNickname_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController._ClearInviteDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::event_ClearInviteDelegates ( )
{
	static UFunction* pFn_ClearInviteDelegates = NULL;

	if ( ! pFn_ClearInviteDelegates )
		pFn_ClearInviteDelegates = (UFunction*) UObject::GObjObjects()->Data[ 45833 ];

	APgPlayerController_event_ClearInviteDelegates_Parms _ClearInviteDelegates_Parms;

	this->ProcessEvent ( pFn_ClearInviteDelegates, &_ClearInviteDelegates_Parms, NULL );
};

// Function GridGame.PgPlayerController.AddDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventAddDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddDestroyOnlineGameCompleteDelegate )
		pFnAddDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 45830 ];

	APgPlayerController_eventAddDestroyOnlineGameCompleteDelegate_Parms AddDestroyOnlineGameCompleteDelegate_Parms;
	AddDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddDestroyOnlineGameCompleteDelegate, &AddDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClearDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventClearDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearDestroyOnlineGameCompleteDelegate )
		pFnClearDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 45827 ];

	APgPlayerController_eventClearDestroyOnlineGameCompleteDelegate_Parms ClearDestroyOnlineGameCompleteDelegate_Parms;
	ClearDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearDestroyOnlineGameCompleteDelegate, &ClearDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnDestroyOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void APgPlayerController::OnDestroyOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

	if ( ! pFnOnDestroyOnlineGameComplete )
		pFnOnDestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 44945 ];

	APgPlayerController_execOnDestroyOnlineGameComplete_Parms OnDestroyOnlineGameComplete_Parms;
	memcpy ( &OnDestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnDestroyOnlineGameComplete, &OnDestroyOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnDestroyLBGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void APgPlayerController::OnDestroyLBGameComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnDestroyLBGameComplete = NULL;

	if ( ! pFnOnDestroyLBGameComplete )
		pFnOnDestroyLBGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 45822 ];

	APgPlayerController_execOnDestroyLBGameComplete_Parms OnDestroyLBGameComplete_Parms;
	memcpy ( &OnDestroyLBGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyLBGameComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnOnDestroyLBGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDestroyLBGameComplete, &OnDestroyLBGameComplete_Parms, NULL );

	pFnOnDestroyLBGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._OnGameInviteAccepted
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FOnlineGameSearchResult InviteResult                   ( CPF_Const | CPF_Parm | CPF_OutParm )

void APgPlayerController::event_OnGameInviteAccepted ( struct FOnlineGameSearchResult* InviteResult )
{
	static UFunction* pFn_OnGameInviteAccepted = NULL;

	if ( ! pFn_OnGameInviteAccepted )
		pFn_OnGameInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 45820 ];

	APgPlayerController_event_OnGameInviteAccepted_Parms _OnGameInviteAccepted_Parms;

	this->ProcessEvent ( pFn_OnGameInviteAccepted, &_OnGameInviteAccepted_Parms, NULL );

	if ( InviteResult )
		memcpy ( InviteResult, &_OnGameInviteAccepted_Parms.InviteResult, 0x8 );
};

// Function GridGame.PgPlayerController.OnGameInviteAccepted
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FOnlineGameSearchResult InviteResult                   ( CPF_Const | CPF_Parm | CPF_OutParm )

void APgPlayerController::OnGameInviteAccepted ( struct FOnlineGameSearchResult* InviteResult )
{
	static UFunction* pFnOnGameInviteAccepted = NULL;

	if ( ! pFnOnGameInviteAccepted )
		pFnOnGameInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 45818 ];

	APgPlayerController_execOnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;

	pFnOnGameInviteAccepted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnGameInviteAccepted, &OnGameInviteAccepted_Parms, NULL );

	pFnOnGameInviteAccepted->FunctionFlags |= 0x400;

	if ( InviteResult )
		memcpy ( InviteResult, &OnGameInviteAccepted_Parms.InviteResult, 0x8 );
};

// Function GridGame.PgPlayerController._OnDestroyForInviteComplete
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void APgPlayerController::event_OnDestroyForInviteComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFn_OnDestroyForInviteComplete = NULL;

	if ( ! pFn_OnDestroyForInviteComplete )
		pFn_OnDestroyForInviteComplete = (UFunction*) UObject::GObjObjects()->Data[ 45815 ];

	APgPlayerController_event_OnDestroyForInviteComplete_Parms _OnDestroyForInviteComplete_Parms;
	memcpy ( &_OnDestroyForInviteComplete_Parms.SessionName, &SessionName, 0x8 );
	_OnDestroyForInviteComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFn_OnDestroyForInviteComplete, &_OnDestroyForInviteComplete_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnDestroyForInviteComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void APgPlayerController::OnDestroyForInviteComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnDestroyForInviteComplete = NULL;

	if ( ! pFnOnDestroyForInviteComplete )
		pFnOnDestroyForInviteComplete = (UFunction*) UObject::GObjObjects()->Data[ 45812 ];

	APgPlayerController_execOnDestroyForInviteComplete_Parms OnDestroyForInviteComplete_Parms;
	memcpy ( &OnDestroyForInviteComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyForInviteComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnOnDestroyForInviteComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDestroyForInviteComplete, &OnDestroyForInviteComplete_Parms, NULL );

	pFnOnDestroyForInviteComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.OnInviteJoinComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void APgPlayerController::OnInviteJoinComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnInviteJoinComplete = NULL;

	if ( ! pFnOnInviteJoinComplete )
		pFnOnInviteJoinComplete = (UFunction*) UObject::GObjObjects()->Data[ 45809 ];

	APgPlayerController_execOnInviteJoinComplete_Parms OnInviteJoinComplete_Parms;
	memcpy ( &OnInviteJoinComplete_Parms.SessionName, &SessionName, 0x8 );
	OnInviteJoinComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnOnInviteJoinComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnInviteJoinComplete, &OnInviteJoinComplete_Parms, NULL );

	pFnOnInviteJoinComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.HitStreakUpdateTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APgPlayerController::HitStreakUpdateTimer ( float DeltaSeconds )
{
	static UFunction* pFnHitStreakUpdateTimer = NULL;

	if ( ! pFnHitStreakUpdateTimer )
		pFnHitStreakUpdateTimer = (UFunction*) UObject::GObjObjects()->Data[ 45807 ];

	APgPlayerController_execHitStreakUpdateTimer_Parms HitStreakUpdateTimer_Parms;
	HitStreakUpdateTimer_Parms.DeltaSeconds = DeltaSeconds;

	pFnHitStreakUpdateTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHitStreakUpdateTimer, &HitStreakUpdateTimer_Parms, NULL );

	pFnHitStreakUpdateTimer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.HitStreakTakeDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::HitStreakTakeDamage ( )
{
	static UFunction* pFnHitStreakTakeDamage = NULL;

	if ( ! pFnHitStreakTakeDamage )
		pFnHitStreakTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 45806 ];

	APgPlayerController_execHitStreakTakeDamage_Parms HitStreakTakeDamage_Parms;

	pFnHitStreakTakeDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHitStreakTakeDamage, &HitStreakTakeDamage_Parms, NULL );

	pFnHitStreakTakeDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.HitStreakCauseDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::HitStreakCauseDamage ( )
{
	static UFunction* pFnHitStreakCauseDamage = NULL;

	if ( ! pFnHitStreakCauseDamage )
		pFnHitStreakCauseDamage = (UFunction*) UObject::GObjObjects()->Data[ 45805 ];

	APgPlayerController_execHitStreakCauseDamage_Parms HitStreakCauseDamage_Parms;

	pFnHitStreakCauseDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHitStreakCauseDamage, &HitStreakCauseDamage_Parms, NULL );

	pFnHitStreakCauseDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetPlayerInput
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  newInputClass                  ( CPF_Parm )

void APgPlayerController::SetPlayerInput ( class UClass* newInputClass )
{
	static UFunction* pFnSetPlayerInput = NULL;

	if ( ! pFnSetPlayerInput )
		pFnSetPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 45803 ];

	APgPlayerController_execSetPlayerInput_Parms SetPlayerInput_Parms;
	SetPlayerInput_Parms.newInputClass = newInputClass;

	pFnSetPlayerInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPlayerInput, &SetPlayerInput_Parms, NULL );

	pFnSetPlayerInput->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.DebugDrawOnlinePlayerNames
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void APgPlayerController::eventDebugDrawOnlinePlayerNames ( class AHUD* HUD )
{
	static UFunction* pFnDebugDrawOnlinePlayerNames = NULL;

	if ( ! pFnDebugDrawOnlinePlayerNames )
		pFnDebugDrawOnlinePlayerNames = (UFunction*) UObject::GObjObjects()->Data[ 45797 ];

	APgPlayerController_eventDebugDrawOnlinePlayerNames_Parms DebugDrawOnlinePlayerNames_Parms;
	DebugDrawOnlinePlayerNames_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDebugDrawOnlinePlayerNames, &DebugDrawOnlinePlayerNames_Parms, NULL );
};

// Function GridGame.PgPlayerController.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgPlayerController::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 45782 ];

	APgPlayerController_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgPlayerController.DisplayDebugSideEffects
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          FontHeight                     ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void APgPlayerController::DisplayDebugSideEffects ( class AHUD* HUD, float* FontHeight, float* YPos )
{
	static UFunction* pFnDisplayDebugSideEffects = NULL;

	if ( ! pFnDisplayDebugSideEffects )
		pFnDisplayDebugSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45778 ];

	APgPlayerController_execDisplayDebugSideEffects_Parms DisplayDebugSideEffects_Parms;
	DisplayDebugSideEffects_Parms.HUD = HUD;

	pFnDisplayDebugSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebugSideEffects, &DisplayDebugSideEffects_Parms, NULL );

	pFnDisplayDebugSideEffects->FunctionFlags |= 0x400;

	if ( FontHeight )
		*FontHeight = DisplayDebugSideEffects_Parms.FontHeight;

	if ( YPos )
		*YPos = DisplayDebugSideEffects_Parms.YPos;
};

// Function GridGame.PgPlayerController.GetAdjustedAimFor
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weapon                         ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator APgPlayerController::GetAdjustedAimFor ( class AWeapon* Weapon, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 45771 ];

	APgPlayerController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.Weapon = Weapon;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.ShowSystemMsgOnControllerChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void APgPlayerController::ShowSystemMsgOnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnShowSystemMsgOnControllerChanged = NULL;

	if ( ! pFnShowSystemMsgOnControllerChanged )
		pFnShowSystemMsgOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 45768 ];

	APgPlayerController_execShowSystemMsgOnControllerChanged_Parms ShowSystemMsgOnControllerChanged_Parms;
	ShowSystemMsgOnControllerChanged_Parms.ControllerId = ControllerId;
	ShowSystemMsgOnControllerChanged_Parms.bIsConnected = bIsConnected;

	pFnShowSystemMsgOnControllerChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowSystemMsgOnControllerChanged, &ShowSystemMsgOnControllerChanged_Parms, NULL );

	pFnShowSystemMsgOnControllerChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.CanUnpauseCheckUIState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::CanUnpauseCheckUIState ( )
{
	static UFunction* pFnCanUnpauseCheckUIState = NULL;

	if ( ! pFnCanUnpauseCheckUIState )
		pFnCanUnpauseCheckUIState = (UFunction*) UObject::GObjObjects()->Data[ 45766 ];

	APgPlayerController_execCanUnpauseCheckUIState_Parms CanUnpauseCheckUIState_Parms;

	pFnCanUnpauseCheckUIState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUnpauseCheckUIState, &CanUnpauseCheckUIState_Parms, NULL );

	pFnCanUnpauseCheckUIState->FunctionFlags |= 0x400;

	return CanUnpauseCheckUIState_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.OnControllerChanged
// [0x00020002] 
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void APgPlayerController::OnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnOnControllerChanged = NULL;

	if ( ! pFnOnControllerChanged )
		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 45756 ];

	APgPlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
};

// Function GridGame.PgPlayerController._OnExternalUIChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bIsOpening                     ( CPF_Parm )

void APgPlayerController::event_OnExternalUIChanged ( unsigned long bIsOpening )
{
	static UFunction* pFn_OnExternalUIChanged = NULL;

	if ( ! pFn_OnExternalUIChanged )
		pFn_OnExternalUIChanged = (UFunction*) UObject::GObjObjects()->Data[ 45754 ];

	APgPlayerController_event_OnExternalUIChanged_Parms _OnExternalUIChanged_Parms;
	_OnExternalUIChanged_Parms.bIsOpening = bIsOpening;

	this->ProcessEvent ( pFn_OnExternalUIChanged, &_OnExternalUIChanged_Parms, NULL );
};

// Function GridGame.PgPlayerController._GetTriggerUseList
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// TArray< class ATrigger* >      triggerUseList                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgPlayerController::event_GetTriggerUseList ( TArray< class ATrigger* >* triggerUseList )
{
	static UFunction* pFn_GetTriggerUseList = NULL;

	if ( ! pFn_GetTriggerUseList )
		pFn_GetTriggerUseList = (UFunction*) UObject::GObjObjects()->Data[ 45751 ];

	APgPlayerController_event_GetTriggerUseList_Parms _GetTriggerUseList_Parms;

	this->ProcessEvent ( pFn_GetTriggerUseList, &_GetTriggerUseList_Parms, NULL );

	if ( triggerUseList )
		memcpy ( triggerUseList, &_GetTriggerUseList_Parms.triggerUseList, 0xC );
};

// Function GridGame.PgPlayerController.RemoveScoreModifier
// [0x010209C2] ( FUNC_Event )
// Parameters infos:
// class UObject*                 pOwner                         ( CPF_Const | CPF_Parm )
// struct FName                   kCameraStyle                   ( CPF_Parm )

void APgPlayerController::eventRemoveScoreModifier ( class UObject* pOwner, struct FName kCameraStyle )
{
	static UFunction* pFnRemoveScoreModifier = NULL;

	if ( ! pFnRemoveScoreModifier )
		pFnRemoveScoreModifier = (UFunction*) UObject::GObjObjects()->Data[ 45747 ];

	APgPlayerController_eventRemoveScoreModifier_Parms RemoveScoreModifier_Parms;
	RemoveScoreModifier_Parms.pOwner = pOwner;
	memcpy ( &RemoveScoreModifier_Parms.kCameraStyle, &kCameraStyle, 0x8 );

	this->ProcessEvent ( pFnRemoveScoreModifier, &RemoveScoreModifier_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetScoreModifier
// [0x010209C2] ( FUNC_Event )
// Parameters infos:
// class UObject*                 pOwner                         ( CPF_Const | CPF_Parm )
// struct FName                   kCameraStyle                   ( CPF_Parm )
// float                          kAmount                        ( CPF_Parm )

void APgPlayerController::eventSetScoreModifier ( class UObject* pOwner, struct FName kCameraStyle, float kAmount )
{
	static UFunction* pFnSetScoreModifier = NULL;

	if ( ! pFnSetScoreModifier )
		pFnSetScoreModifier = (UFunction*) UObject::GObjObjects()->Data[ 45742 ];

	APgPlayerController_eventSetScoreModifier_Parms SetScoreModifier_Parms;
	SetScoreModifier_Parms.pOwner = pOwner;
	memcpy ( &SetScoreModifier_Parms.kCameraStyle, &kCameraStyle, 0x8 );
	SetScoreModifier_Parms.kAmount = kAmount;

	this->ProcessEvent ( pFnSetScoreModifier, &SetScoreModifier_Parms, NULL );
};

// Function GridGame.PgPlayerController.ResetCameraMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventResetCameraMode ( )
{
	static UFunction* pFnResetCameraMode = NULL;

	if ( ! pFnResetCameraMode )
		pFnResetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 45738 ];

	APgPlayerController_eventResetCameraMode_Parms ResetCameraMode_Parms;

	this->ProcessEvent ( pFnResetCameraMode, &ResetCameraMode_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientResetCameraMode
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventClientResetCameraMode ( )
{
	static UFunction* pFnClientResetCameraMode = NULL;

	if ( ! pFnClientResetCameraMode )
		pFnClientResetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 45737 ];

	APgPlayerController_eventClientResetCameraMode_Parms ClientResetCameraMode_Parms;

	this->ProcessEvent ( pFnClientResetCameraMode, &ClientResetCameraMode_Parms, NULL );
};

// Function GridGame.PgPlayerController.SpawnPlayerCamera
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventSpawnPlayerCamera ( )
{
	static UFunction* pFnSpawnPlayerCamera = NULL;

	if ( ! pFnSpawnPlayerCamera )
		pFnSpawnPlayerCamera = (UFunction*) UObject::GObjObjects()->Data[ 45736 ];

	APgPlayerController_eventSpawnPlayerCamera_Parms SpawnPlayerCamera_Parms;

	this->ProcessEvent ( pFnSpawnPlayerCamera, &SpawnPlayerCamera_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetCameraMode
// [0x00020002] 
// Parameters infos:
// struct FName                   NewCamMode                     ( CPF_Parm )

void APgPlayerController::SetCameraMode ( struct FName NewCamMode )
{
	static UFunction* pFnSetCameraMode = NULL;

	if ( ! pFnSetCameraMode )
		pFnSetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 45734 ];

	APgPlayerController_execSetCameraMode_Parms SetCameraMode_Parms;
	memcpy ( &SetCameraMode_Parms.NewCamMode, &NewCamMode, 0x8 );

	this->ProcessEvent ( pFnSetCameraMode, &SetCameraMode_Parms, NULL );
};

// Function GridGame.PgPlayerController.PreviousCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::PreviousCamera ( )
{
	static UFunction* pFnPreviousCamera = NULL;

	if ( ! pFnPreviousCamera )
		pFnPreviousCamera = (UFunction*) UObject::GObjObjects()->Data[ 45732 ];

	APgPlayerController_execPreviousCamera_Parms PreviousCamera_Parms;

	this->ProcessEvent ( pFnPreviousCamera, &PreviousCamera_Parms, NULL );
};

// Function GridGame.PgPlayerController.NextCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::NextCamera ( )
{
	static UFunction* pFnNextCamera = NULL;

	if ( ! pFnNextCamera )
		pFnNextCamera = (UFunction*) UObject::GObjObjects()->Data[ 45730 ];

	APgPlayerController_execNextCamera_Parms NextCamera_Parms;

	this->ProcessEvent ( pFnNextCamera, &NextCamera_Parms, NULL );
};

// Function GridGame.PgPlayerController.StunRevive
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class APgPawn*                 reviveMe                       ( CPF_Parm )

void APgPlayerController::eventStunRevive ( class APgPawn* reviveMe )
{
	static UFunction* pFnStunRevive = NULL;

	if ( ! pFnStunRevive )
		pFnStunRevive = (UFunction*) UObject::GObjObjects()->Data[ 45728 ];

	APgPlayerController_eventStunRevive_Parms StunRevive_Parms;
	StunRevive_Parms.reviveMe = reviveMe;

	pFnStunRevive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStunRevive, &StunRevive_Parms, NULL );

	pFnStunRevive->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.HasPawnToPawnInteractions
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::HasPawnToPawnInteractions ( )
{
	static UFunction* pFnHasPawnToPawnInteractions = NULL;

	if ( ! pFnHasPawnToPawnInteractions )
		pFnHasPawnToPawnInteractions = (UFunction*) UObject::GObjObjects()->Data[ 45726 ];

	APgPlayerController_execHasPawnToPawnInteractions_Parms HasPawnToPawnInteractions_Parms;

	pFnHasPawnToPawnInteractions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasPawnToPawnInteractions, &HasPawnToPawnInteractions_Parms, NULL );

	pFnHasPawnToPawnInteractions->FunctionFlags |= 0x400;

	return HasPawnToPawnInteractions_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.UpdateInteractions
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgPlayerController::UpdateInteractions ( float DeltaTime )
{
	static UFunction* pFnUpdateInteractions = NULL;

	if ( ! pFnUpdateInteractions )
		pFnUpdateInteractions = (UFunction*) UObject::GObjObjects()->Data[ 45724 ];

	APgPlayerController_execUpdateInteractions_Parms UpdateInteractions_Parms;
	UpdateInteractions_Parms.DeltaTime = DeltaTime;

	pFnUpdateInteractions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateInteractions, &UpdateInteractions_Parms, NULL );

	pFnUpdateInteractions->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetShowSubtitles
// [0x00020700] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  bValue                         ( CPF_Parm )

void APgPlayerController::SetShowSubtitles ( unsigned long bValue )
{
	static UFunction* pFnSetShowSubtitles = NULL;

	if ( ! pFnSetShowSubtitles )
		pFnSetShowSubtitles = (UFunction*) UObject::GObjObjects()->Data[ 45722 ];

	APgPlayerController_execSetShowSubtitles_Parms SetShowSubtitles_Parms;
	SetShowSubtitles_Parms.bValue = bValue;

	pFnSetShowSubtitles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetShowSubtitles, &SetShowSubtitles_Parms, NULL );

	pFnSetShowSubtitles->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ToggleHudVisibility
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void APgPlayerController::ToggleHudVisibility ( unsigned long bShow )
{
	static UFunction* pFnToggleHudVisibility = NULL;

	if ( ! pFnToggleHudVisibility )
		pFnToggleHudVisibility = (UFunction*) UObject::GObjObjects()->Data[ 45720 ];

	APgPlayerController_execToggleHudVisibility_Parms ToggleHudVisibility_Parms;
	ToggleHudVisibility_Parms.bShow = bShow;

	pFnToggleHudVisibility->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleHudVisibility, &ToggleHudVisibility_Parms, NULL );

	pFnToggleHudVisibility->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ResetPlayerMovementInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventResetPlayerMovementInput ( )
{
	static UFunction* pFnResetPlayerMovementInput = NULL;

	if ( ! pFnResetPlayerMovementInput )
		pFnResetPlayerMovementInput = (UFunction*) UObject::GObjObjects()->Data[ 45719 ];

	APgPlayerController_eventResetPlayerMovementInput_Parms ResetPlayerMovementInput_Parms;

	this->ProcessEvent ( pFnResetPlayerMovementInput, &ResetPlayerMovementInput_Parms, NULL );
};

// Function GridGame.PgPlayerController._ClientSetCinematicMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bInCinematicMode               ( CPF_Parm )
// unsigned long                  bAffectsMovement               ( CPF_Parm )
// unsigned long                  bAffectsTurning                ( CPF_Parm )
// unsigned long                  bAffectsHUD                    ( CPF_Parm )
// float                          fNearClipPlane                 ( CPF_Parm )

void APgPlayerController::event_ClientSetCinematicMode ( unsigned long bInCinematicMode, unsigned long bAffectsMovement, unsigned long bAffectsTurning, unsigned long bAffectsHUD, float fNearClipPlane )
{
	static UFunction* pFn_ClientSetCinematicMode = NULL;

	if ( ! pFn_ClientSetCinematicMode )
		pFn_ClientSetCinematicMode = (UFunction*) UObject::GObjObjects()->Data[ 45713 ];

	APgPlayerController_event_ClientSetCinematicMode_Parms _ClientSetCinematicMode_Parms;
	_ClientSetCinematicMode_Parms.bInCinematicMode = bInCinematicMode;
	_ClientSetCinematicMode_Parms.bAffectsMovement = bAffectsMovement;
	_ClientSetCinematicMode_Parms.bAffectsTurning = bAffectsTurning;
	_ClientSetCinematicMode_Parms.bAffectsHUD = bAffectsHUD;
	_ClientSetCinematicMode_Parms.fNearClipPlane = fNearClipPlane;

	this->ProcessEvent ( pFn_ClientSetCinematicMode, &_ClientSetCinematicMode_Parms, NULL );
};

// Function GridGame.PgPlayerController.EnableSideEffects
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void APgPlayerController::EnableSideEffects ( unsigned long bEnable )
{
	static UFunction* pFnEnableSideEffects = NULL;

	if ( ! pFnEnableSideEffects )
		pFnEnableSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45711 ];

	APgPlayerController_execEnableSideEffects_Parms EnableSideEffects_Parms;
	EnableSideEffects_Parms.bEnable = bEnable;

	pFnEnableSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableSideEffects, &EnableSideEffects_Parms, NULL );

	pFnEnableSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientSetCinematicMode
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bInCinematicMode               ( CPF_Parm )
// unsigned long                  bAffectsMovement               ( CPF_Parm )
// unsigned long                  bAffectsTurning                ( CPF_Parm )
// unsigned long                  bAffectsHUD                    ( CPF_Parm )
// float                          fNearClipPlane                 ( CPF_Parm )

void APgPlayerController::ClientSetCinematicMode ( unsigned long bInCinematicMode, unsigned long bAffectsMovement, unsigned long bAffectsTurning, unsigned long bAffectsHUD, float fNearClipPlane )
{
	static UFunction* pFnClientSetCinematicMode = NULL;

	if ( ! pFnClientSetCinematicMode )
		pFnClientSetCinematicMode = (UFunction*) UObject::GObjObjects()->Data[ 45704 ];

	APgPlayerController_execClientSetCinematicMode_Parms ClientSetCinematicMode_Parms;
	ClientSetCinematicMode_Parms.bInCinematicMode = bInCinematicMode;
	ClientSetCinematicMode_Parms.bAffectsMovement = bAffectsMovement;
	ClientSetCinematicMode_Parms.bAffectsTurning = bAffectsTurning;
	ClientSetCinematicMode_Parms.bAffectsHUD = bAffectsHUD;
	ClientSetCinematicMode_Parms.fNearClipPlane = fNearClipPlane;

	this->ProcessEvent ( pFnClientSetCinematicMode, &ClientSetCinematicMode_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientShowLoadingScreen
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  show                           ( CPF_Parm )

void APgPlayerController::eventClientShowLoadingScreen ( unsigned long show )
{
	static UFunction* pFnClientShowLoadingScreen = NULL;

	if ( ! pFnClientShowLoadingScreen )
		pFnClientShowLoadingScreen = (UFunction*) UObject::GObjObjects()->Data[ 45702 ];

	APgPlayerController_eventClientShowLoadingScreen_Parms ClientShowLoadingScreen_Parms;
	ClientShowLoadingScreen_Parms.show = show;

	pFnClientShowLoadingScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientShowLoadingScreen, &ClientShowLoadingScreen_Parms, NULL );

	pFnClientShowLoadingScreen->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientClearStack
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            eStackID                       ( CPF_Parm )

void APgPlayerController::eventClientClearStack ( int eStackID )
{
	static UFunction* pFnClientClearStack = NULL;

	if ( ! pFnClientClearStack )
		pFnClientClearStack = (UFunction*) UObject::GObjObjects()->Data[ 45700 ];

	APgPlayerController_eventClientClearStack_Parms ClientClearStack_Parms;
	ClientClearStack_Parms.eStackID = eStackID;

	pFnClientClearStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientClearStack, &ClientClearStack_Parms, NULL );

	pFnClientClearStack->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientOpenMovie
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 MovieInstance                  ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  eStackID                       ( CPF_Parm )
// float                          fDuration                      ( CPF_Parm )

void APgPlayerController::eventClientOpenMovie ( struct FString MovieInstance, unsigned char eStackID, float fDuration )
{
	static UFunction* pFnClientOpenMovie = NULL;

	if ( ! pFnClientOpenMovie )
		pFnClientOpenMovie = (UFunction*) UObject::GObjObjects()->Data[ 45696 ];

	APgPlayerController_eventClientOpenMovie_Parms ClientOpenMovie_Parms;
	memcpy ( &ClientOpenMovie_Parms.MovieInstance, &MovieInstance, 0xC );
	ClientOpenMovie_Parms.eStackID = eStackID;
	ClientOpenMovie_Parms.fDuration = fDuration;

	pFnClientOpenMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientOpenMovie, &ClientOpenMovie_Parms, NULL );

	pFnClientOpenMovie->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientHideHudBar
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void APgPlayerController::eventClientHideHudBar ( int Id )
{
	static UFunction* pFnClientHideHudBar = NULL;

	if ( ! pFnClientHideHudBar )
		pFnClientHideHudBar = (UFunction*) UObject::GObjObjects()->Data[ 45694 ];

	APgPlayerController_eventClientHideHudBar_Parms ClientHideHudBar_Parms;
	ClientHideHudBar_Parms.Id = Id;

	pFnClientHideHudBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientHideHudBar, &ClientHideHudBar_Parms, NULL );

	pFnClientHideHudBar->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientShowHudBar
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// float                          XPos                           ( CPF_Parm )
// float                          YPos                           ( CPF_Parm )
// float                          Scale                          ( CPF_Parm )
// int                            curValue                       ( CPF_Parm )
// int                            MaxValue                       ( CPF_Parm )
// int                            Id                             ( CPF_Parm )

void APgPlayerController::eventClientShowHudBar ( float XPos, float YPos, float Scale, int curValue, int MaxValue, int Id )
{
	static UFunction* pFnClientShowHudBar = NULL;

	if ( ! pFnClientShowHudBar )
		pFnClientShowHudBar = (UFunction*) UObject::GObjObjects()->Data[ 45687 ];

	APgPlayerController_eventClientShowHudBar_Parms ClientShowHudBar_Parms;
	ClientShowHudBar_Parms.XPos = XPos;
	ClientShowHudBar_Parms.YPos = YPos;
	ClientShowHudBar_Parms.Scale = Scale;
	ClientShowHudBar_Parms.curValue = curValue;
	ClientShowHudBar_Parms.MaxValue = MaxValue;
	ClientShowHudBar_Parms.Id = Id;

	pFnClientShowHudBar->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientShowHudBar, &ClientShowHudBar_Parms, NULL );

	pFnClientShowHudBar->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientHideHudText
// [0x01024DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// unsigned long                  locationText                   ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::eventClientHideHudText ( int Id, unsigned long locationText )
{
	static UFunction* pFnClientHideHudText = NULL;

	if ( ! pFnClientHideHudText )
		pFnClientHideHudText = (UFunction*) UObject::GObjObjects()->Data[ 45684 ];

	APgPlayerController_eventClientHideHudText_Parms ClientHideHudText_Parms;
	ClientHideHudText_Parms.Id = Id;
	ClientHideHudText_Parms.locationText = locationText;

	pFnClientHideHudText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientHideHudText, &ClientHideHudText_Parms, NULL );

	pFnClientHideHudText->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientShowHudText
// [0x01024DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 szText                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  ePos                           ( CPF_Parm )
// float                          XPos                           ( CPF_Parm )
// float                          YPos                           ( CPF_Parm )
// int                            Id                             ( CPF_Parm )
// unsigned long                  locationText                   ( CPF_OptionalParm | CPF_Parm )
// float                          fDuration                      ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::eventClientShowHudText ( struct FString szText, unsigned char ePos, float XPos, float YPos, int Id, unsigned long locationText, float fDuration )
{
	static UFunction* pFnClientShowHudText = NULL;

	if ( ! pFnClientShowHudText )
		pFnClientShowHudText = (UFunction*) UObject::GObjObjects()->Data[ 45676 ];

	APgPlayerController_eventClientShowHudText_Parms ClientShowHudText_Parms;
	memcpy ( &ClientShowHudText_Parms.szText, &szText, 0xC );
	ClientShowHudText_Parms.ePos = ePos;
	ClientShowHudText_Parms.XPos = XPos;
	ClientShowHudText_Parms.YPos = YPos;
	ClientShowHudText_Parms.Id = Id;
	ClientShowHudText_Parms.locationText = locationText;
	ClientShowHudText_Parms.fDuration = fDuration;

	pFnClientShowHudText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientShowHudText, &ClientShowHudText_Parms, NULL );

	pFnClientShowHudText->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientEventBoxMessage
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned char                  eType                          ( CPF_Parm )
// int                            idPlayer1                      ( CPF_Parm )
// int                            idPlayer2                      ( CPF_Parm )
// struct FString                 szName                         ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventClientEventBoxMessage ( unsigned char eType, int idPlayer1, int idPlayer2, struct FString szName )
{
	static UFunction* pFnClientEventBoxMessage = NULL;

	if ( ! pFnClientEventBoxMessage )
		pFnClientEventBoxMessage = (UFunction*) UObject::GObjObjects()->Data[ 45671 ];

	APgPlayerController_eventClientEventBoxMessage_Parms ClientEventBoxMessage_Parms;
	ClientEventBoxMessage_Parms.eType = eType;
	ClientEventBoxMessage_Parms.idPlayer1 = idPlayer1;
	ClientEventBoxMessage_Parms.idPlayer2 = idPlayer2;
	memcpy ( &ClientEventBoxMessage_Parms.szName, &szName, 0xC );

	pFnClientEventBoxMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientEventBoxMessage, &ClientEventBoxMessage_Parms, NULL );

	pFnClientEventBoxMessage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.HUDIsOpen
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::eventHUDIsOpen ( )
{
	static UFunction* pFnHUDIsOpen = NULL;

	if ( ! pFnHUDIsOpen )
		pFnHUDIsOpen = (UFunction*) UObject::GObjObjects()->Data[ 45669 ];

	APgPlayerController_eventHUDIsOpen_Parms HUDIsOpen_Parms;

	pFnHUDIsOpen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHUDIsOpen, &HUDIsOpen_Parms, NULL );

	pFnHUDIsOpen->FunctionFlags |= 0x400;

	return HUDIsOpen_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.ClientOpenHud
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  bOpen                          ( CPF_Parm )

void APgPlayerController::eventClientOpenHud ( unsigned long bOpen )
{
	static UFunction* pFnClientOpenHud = NULL;

	if ( ! pFnClientOpenHud )
		pFnClientOpenHud = (UFunction*) UObject::GObjObjects()->Data[ 45667 ];

	APgPlayerController_eventClientOpenHud_Parms ClientOpenHud_Parms;
	ClientOpenHud_Parms.bOpen = bOpen;

	pFnClientOpenHud->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientOpenHud, &ClientOpenHud_Parms, NULL );

	pFnClientOpenHud->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientShowHud
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void APgPlayerController::eventClientShowHud ( unsigned long bShow )
{
	static UFunction* pFnClientShowHud = NULL;

	if ( ! pFnClientShowHud )
		pFnClientShowHud = (UFunction*) UObject::GObjObjects()->Data[ 45665 ];

	APgPlayerController_eventClientShowHud_Parms ClientShowHud_Parms;
	ClientShowHud_Parms.bShow = bShow;

	pFnClientShowHud->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientShowHud, &ClientShowHud_Parms, NULL );

	pFnClientShowHud->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientPostAkEvent
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class UAkEvent*                Evt                            ( CPF_Parm )
// class AActor*                  Actor                          ( CPF_Parm )

void APgPlayerController::eventClientPostAkEvent ( class UAkEvent* Evt, class AActor* Actor )
{
	static UFunction* pFnClientPostAkEvent = NULL;

	if ( ! pFnClientPostAkEvent )
		pFnClientPostAkEvent = (UFunction*) UObject::GObjObjects()->Data[ 45662 ];

	APgPlayerController_eventClientPostAkEvent_Parms ClientPostAkEvent_Parms;
	ClientPostAkEvent_Parms.Evt = Evt;
	ClientPostAkEvent_Parms.Actor = Actor;

	pFnClientPostAkEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientPostAkEvent, &ClientPostAkEvent_Parms, NULL );

	pFnClientPostAkEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminSetSkill
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            Skill                          ( CPF_Parm | CPF_CoerceParm )

void APgPlayerController::AdminSetSkill ( int Skill )
{
	static UFunction* pFnAdminSetSkill = NULL;

	if ( ! pFnAdminSetSkill )
		pFnAdminSetSkill = (UFunction*) UObject::GObjObjects()->Data[ 45660 ];

	APgPlayerController_execAdminSetSkill_Parms AdminSetSkill_Parms;
	AdminSetSkill_Parms.Skill = Skill;

	pFnAdminSetSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminSetSkill, &AdminSetSkill_Parms, NULL );

	pFnAdminSetSkill->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminSetNumBots
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            NumBots                        ( CPF_Parm | CPF_CoerceParm )

void APgPlayerController::AdminSetNumBots ( int NumBots )
{
	static UFunction* pFnAdminSetNumBots = NULL;

	if ( ! pFnAdminSetNumBots )
		pFnAdminSetNumBots = (UFunction*) UObject::GObjObjects()->Data[ 45658 ];

	APgPlayerController_execAdminSetNumBots_Parms AdminSetNumBots_Parms;
	AdminSetNumBots_Parms.NumBots = NumBots;

	pFnAdminSetNumBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminSetNumBots, &AdminSetNumBots_Parms, NULL );

	pFnAdminSetNumBots->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminForceRespawnAt
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 PlayerStartName                ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::AdminForceRespawnAt ( struct FString PlayerStartName )
{
	static UFunction* pFnAdminForceRespawnAt = NULL;

	if ( ! pFnAdminForceRespawnAt )
		pFnAdminForceRespawnAt = (UFunction*) UObject::GObjObjects()->Data[ 45656 ];

	APgPlayerController_execAdminForceRespawnAt_Parms AdminForceRespawnAt_Parms;
	memcpy ( &AdminForceRespawnAt_Parms.PlayerStartName, &PlayerStartName, 0xC );

	pFnAdminForceRespawnAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminForceRespawnAt, &AdminForceRespawnAt_Parms, NULL );

	pFnAdminForceRespawnAt->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminScore
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Event                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Num                            ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void APgPlayerController::AdminScore ( struct FString Event, int Num )
{
	static UFunction* pFnAdminScore = NULL;

	if ( ! pFnAdminScore )
		pFnAdminScore = (UFunction*) UObject::GObjObjects()->Data[ 45653 ];

	APgPlayerController_execAdminScore_Parms AdminScore_Parms;
	memcpy ( &AdminScore_Parms.Event, &Event, 0xC );
	AdminScore_Parms.Num = Num;

	pFnAdminScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminScore, &AdminScore_Parms, NULL );

	pFnAdminScore->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminReset
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::AdminReset ( )
{
	static UFunction* pFnAdminReset = NULL;

	if ( ! pFnAdminReset )
		pFnAdminReset = (UFunction*) UObject::GObjObjects()->Data[ 45652 ];

	APgPlayerController_execAdminReset_Parms AdminReset_Parms;

	pFnAdminReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminReset, &AdminReset_Parms, NULL );

	pFnAdminReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminEnd
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Reason                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::AdminEnd ( struct FString Reason )
{
	static UFunction* pFnAdminEnd = NULL;

	if ( ! pFnAdminEnd )
		pFnAdminEnd = (UFunction*) UObject::GObjObjects()->Data[ 45650 ];

	APgPlayerController_execAdminEnd_Parms AdminEnd_Parms;
	memcpy ( &AdminEnd_Parms.Reason, &Reason, 0xC );

	pFnAdminEnd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminEnd, &AdminEnd_Parms, NULL );

	pFnAdminEnd->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminEndRound
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Reason                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::AdminEndRound ( struct FString Reason )
{
	static UFunction* pFnAdminEndRound = NULL;

	if ( ! pFnAdminEndRound )
		pFnAdminEndRound = (UFunction*) UObject::GObjObjects()->Data[ 45648 ];

	APgPlayerController_execAdminEndRound_Parms AdminEndRound_Parms;
	memcpy ( &AdminEndRound_Parms.Reason, &Reason, 0xC );

	pFnAdminEndRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminEndRound, &AdminEndRound_Parms, NULL );

	pFnAdminEndRound->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminKillAll
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            Num                            ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void APgPlayerController::AdminKillAll ( int Num )
{
	static UFunction* pFnAdminKillAll = NULL;

	if ( ! pFnAdminKillAll )
		pFnAdminKillAll = (UFunction*) UObject::GObjObjects()->Data[ 45646 ];

	APgPlayerController_execAdminKillAll_Parms AdminKillAll_Parms;
	AdminKillAll_Parms.Num = Num;

	pFnAdminKillAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminKillAll, &AdminKillAll_Parms, NULL );

	pFnAdminKillAll->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminKill
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::AdminKill ( struct FString PlayerName )
{
	static UFunction* pFnAdminKill = NULL;

	if ( ! pFnAdminKill )
		pFnAdminKill = (UFunction*) UObject::GObjObjects()->Data[ 45644 ];

	APgPlayerController_execAdminKill_Parms AdminKill_Parms;
	memcpy ( &AdminKill_Parms.PlayerName, &PlayerName, 0xC );

	pFnAdminKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminKill, &AdminKill_Parms, NULL );

	pFnAdminKill->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerSetIsReady
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  Ready                          ( CPF_Parm )

void APgPlayerController::eventServerSetIsReady ( unsigned long Ready )
{
	static UFunction* pFnServerSetIsReady = NULL;

	if ( ! pFnServerSetIsReady )
		pFnServerSetIsReady = (UFunction*) UObject::GObjObjects()->Data[ 45642 ];

	APgPlayerController_eventServerSetIsReady_Parms ServerSetIsReady_Parms;
	ServerSetIsReady_Parms.Ready = Ready;

	pFnServerSetIsReady->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetIsReady, &ServerSetIsReady_Parms, NULL );

	pFnServerSetIsReady->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminSetSkill
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            Skill                          ( CPF_Parm )

void APgPlayerController::eventServerAdminSetSkill ( int Skill )
{
	static UFunction* pFnServerAdminSetSkill = NULL;

	if ( ! pFnServerAdminSetSkill )
		pFnServerAdminSetSkill = (UFunction*) UObject::GObjObjects()->Data[ 45640 ];

	APgPlayerController_eventServerAdminSetSkill_Parms ServerAdminSetSkill_Parms;
	ServerAdminSetSkill_Parms.Skill = Skill;

	pFnServerAdminSetSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminSetSkill, &ServerAdminSetSkill_Parms, NULL );

	pFnServerAdminSetSkill->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminSetNumBots
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            NumBots                        ( CPF_Parm )

void APgPlayerController::eventServerAdminSetNumBots ( int NumBots )
{
	static UFunction* pFnServerAdminSetNumBots = NULL;

	if ( ! pFnServerAdminSetNumBots )
		pFnServerAdminSetNumBots = (UFunction*) UObject::GObjObjects()->Data[ 45638 ];

	APgPlayerController_eventServerAdminSetNumBots_Parms ServerAdminSetNumBots_Parms;
	ServerAdminSetNumBots_Parms.NumBots = NumBots;

	pFnServerAdminSetNumBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminSetNumBots, &ServerAdminSetNumBots_Parms, NULL );

	pFnServerAdminSetNumBots->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerSuicide
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventServerSuicide ( )
{
	static UFunction* pFnServerSuicide = NULL;

	if ( ! pFnServerSuicide )
		pFnServerSuicide = (UFunction*) UObject::GObjObjects()->Data[ 45637 ];

	APgPlayerController_eventServerSuicide_Parms ServerSuicide_Parms;

	pFnServerSuicide->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSuicide, &ServerSuicide_Parms, NULL );

	pFnServerSuicide->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminForceRespawnAt
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 PlayerStartName                ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventServerAdminForceRespawnAt ( struct FString PlayerStartName )
{
	static UFunction* pFnServerAdminForceRespawnAt = NULL;

	if ( ! pFnServerAdminForceRespawnAt )
		pFnServerAdminForceRespawnAt = (UFunction*) UObject::GObjObjects()->Data[ 45635 ];

	APgPlayerController_eventServerAdminForceRespawnAt_Parms ServerAdminForceRespawnAt_Parms;
	memcpy ( &ServerAdminForceRespawnAt_Parms.PlayerStartName, &PlayerStartName, 0xC );

	pFnServerAdminForceRespawnAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminForceRespawnAt, &ServerAdminForceRespawnAt_Parms, NULL );

	pFnServerAdminForceRespawnAt->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminScore
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Event                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            Num                            ( CPF_Parm )

void APgPlayerController::eventServerAdminScore ( struct FString Event, int Num )
{
	static UFunction* pFnServerAdminScore = NULL;

	if ( ! pFnServerAdminScore )
		pFnServerAdminScore = (UFunction*) UObject::GObjObjects()->Data[ 45632 ];

	APgPlayerController_eventServerAdminScore_Parms ServerAdminScore_Parms;
	memcpy ( &ServerAdminScore_Parms.Event, &Event, 0xC );
	ServerAdminScore_Parms.Num = Num;

	pFnServerAdminScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminScore, &ServerAdminScore_Parms, NULL );

	pFnServerAdminScore->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminReset
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventServerAdminReset ( )
{
	static UFunction* pFnServerAdminReset = NULL;

	if ( ! pFnServerAdminReset )
		pFnServerAdminReset = (UFunction*) UObject::GObjObjects()->Data[ 45631 ];

	APgPlayerController_eventServerAdminReset_Parms ServerAdminReset_Parms;

	pFnServerAdminReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminReset, &ServerAdminReset_Parms, NULL );

	pFnServerAdminReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminEndGame
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventServerAdminEndGame ( struct FString Reason )
{
	static UFunction* pFnServerAdminEndGame = NULL;

	if ( ! pFnServerAdminEndGame )
		pFnServerAdminEndGame = (UFunction*) UObject::GObjObjects()->Data[ 45629 ];

	APgPlayerController_eventServerAdminEndGame_Parms ServerAdminEndGame_Parms;
	memcpy ( &ServerAdminEndGame_Parms.Reason, &Reason, 0xC );

	pFnServerAdminEndGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminEndGame, &ServerAdminEndGame_Parms, NULL );

	pFnServerAdminEndGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminEndRound
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventServerAdminEndRound ( struct FString Reason )
{
	static UFunction* pFnServerAdminEndRound = NULL;

	if ( ! pFnServerAdminEndRound )
		pFnServerAdminEndRound = (UFunction*) UObject::GObjObjects()->Data[ 45627 ];

	APgPlayerController_eventServerAdminEndRound_Parms ServerAdminEndRound_Parms;
	memcpy ( &ServerAdminEndRound_Parms.Reason, &Reason, 0xC );

	pFnServerAdminEndRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminEndRound, &ServerAdminEndRound_Parms, NULL );

	pFnServerAdminEndRound->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminKillAll
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void APgPlayerController::eventServerAdminKillAll ( int Num )
{
	static UFunction* pFnServerAdminKillAll = NULL;

	if ( ! pFnServerAdminKillAll )
		pFnServerAdminKillAll = (UFunction*) UObject::GObjObjects()->Data[ 45625 ];

	APgPlayerController_eventServerAdminKillAll_Parms ServerAdminKillAll_Parms;
	ServerAdminKillAll_Parms.Num = Num;

	pFnServerAdminKillAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminKillAll, &ServerAdminKillAll_Parms, NULL );

	pFnServerAdminKillAll->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdminKill
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventServerAdminKill ( struct FString PlayerName )
{
	static UFunction* pFnServerAdminKill = NULL;

	if ( ! pFnServerAdminKill )
		pFnServerAdminKill = (UFunction*) UObject::GObjObjects()->Data[ 45623 ];

	APgPlayerController_eventServerAdminKill_Parms ServerAdminKill_Parms;
	memcpy ( &ServerAdminKill_Parms.PlayerName, &PlayerName, 0xC );

	pFnServerAdminKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminKill, &ServerAdminKill_Parms, NULL );

	pFnServerAdminKill->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminMessage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::AdminMessage ( struct FString msg )
{
	static UFunction* pFnAdminMessage = NULL;

	if ( ! pFnAdminMessage )
		pFnAdminMessage = (UFunction*) UObject::GObjObjects()->Data[ 45621 ];

	APgPlayerController_execAdminMessage_Parms AdminMessage_Parms;
	memcpy ( &AdminMessage_Parms.msg, &msg, 0xC );

	pFnAdminMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminMessage, &AdminMessage_Parms, NULL );

	pFnAdminMessage->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SendClientAdjustment
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventSendClientAdjustment ( )
{
	static UFunction* pFnSendClientAdjustment = NULL;

	if ( ! pFnSendClientAdjustment )
		pFnSendClientAdjustment = (UFunction*) UObject::GObjObjects()->Data[ 45620 ];

	APgPlayerController_eventSendClientAdjustment_Parms SendClientAdjustment_Parms;

	this->ProcessEvent ( pFnSendClientAdjustment, &SendClientAdjustment_Parms, NULL );
};

// Function GridGame.PgPlayerController.AckGoodMove
// [0x00020002] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )

void APgPlayerController::AckGoodMove ( float TimeStamp )
{
	static UFunction* pFnAckGoodMove = NULL;

	if ( ! pFnAckGoodMove )
		pFnAckGoodMove = (UFunction*) UObject::GObjObjects()->Data[ 45618 ];

	APgPlayerController_execAckGoodMove_Parms AckGoodMove_Parms;
	AckGoodMove_Parms.TimeStamp = TimeStamp;

	this->ProcessEvent ( pFnAckGoodMove, &AckGoodMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgServerComboMove
// [0x00A20042] 
// Parameters infos:
// struct FPgSavedMoveComboParams comboMoveParams                ( CPF_Parm )

void APgPlayerController::PgServerComboMove ( struct FPgSavedMoveComboParams comboMoveParams )
{
	static UFunction* pFnPgServerComboMove = NULL;

	if ( ! pFnPgServerComboMove )
		pFnPgServerComboMove = (UFunction*) UObject::GObjObjects()->Data[ 45610 ];

	APgPlayerController_execPgServerComboMove_Parms PgServerComboMove_Parms;
	memcpy ( &PgServerComboMove_Parms.comboMoveParams, &comboMoveParams, 0x2C );

	this->ProcessEvent ( pFnPgServerComboMove, &PgServerComboMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.AttemptMoveFixup
// [0x00820002] 
// Parameters infos:
// struct FPgSavedMoveRepParams   moveRepStruct                  ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void APgPlayerController::AttemptMoveFixup ( struct FPgSavedMoveRepParams moveRepStruct, float DeltaTime )
{
	static UFunction* pFnAttemptMoveFixup = NULL;

	if ( ! pFnAttemptMoveFixup )
		pFnAttemptMoveFixup = (UFunction*) UObject::GObjObjects()->Data[ 45594 ];

	APgPlayerController_execAttemptMoveFixup_Parms AttemptMoveFixup_Parms;
	memcpy ( &AttemptMoveFixup_Parms.moveRepStruct, &moveRepStruct, 0xCC );
	AttemptMoveFixup_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnAttemptMoveFixup, &AttemptMoveFixup_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgServerMove
// [0x00220042] 
// Parameters infos:
// struct FPgSavedMoveRepParams   moveRepStruct                  ( CPF_Parm )

void APgPlayerController::PgServerMove ( struct FPgSavedMoveRepParams moveRepStruct )
{
	static UFunction* pFnPgServerMove = NULL;

	if ( ! pFnPgServerMove )
		pFnPgServerMove = (UFunction*) UObject::GObjObjects()->Data[ 45591 ];

	APgPlayerController_execPgServerMove_Parms PgServerMove_Parms;
	memcpy ( &PgServerMove_Parms.moveRepStruct, &moveRepStruct, 0xCC );

	this->ProcessEvent ( pFnPgServerMove, &PgServerMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgAddNewServerMove
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FVector                 RootMotionDelta                ( CPF_Parm )

void APgPlayerController::PgAddNewServerMove ( float TimeStamp, struct FVector RootMotionDelta )
{
	static UFunction* pFnPgAddNewServerMove = NULL;

	if ( ! pFnPgAddNewServerMove )
		pFnPgAddNewServerMove = (UFunction*) UObject::GObjObjects()->Data[ 45583 ];

	APgPlayerController_execPgAddNewServerMove_Parms PgAddNewServerMove_Parms;
	PgAddNewServerMove_Parms.TimeStamp = TimeStamp;
	memcpy ( &PgAddNewServerMove_Parms.RootMotionDelta, &RootMotionDelta, 0xC );

	this->ProcessEvent ( pFnPgAddNewServerMove, &PgAddNewServerMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgUpdateServerMovesToTimestamp
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )

void APgPlayerController::PgUpdateServerMovesToTimestamp ( float TimeStamp )
{
	static UFunction* pFnPgUpdateServerMovesToTimestamp = NULL;

	if ( ! pFnPgUpdateServerMovesToTimestamp )
		pFnPgUpdateServerMovesToTimestamp = (UFunction*) UObject::GObjObjects()->Data[ 45582 ];

	APgPlayerController_execPgUpdateServerMovesToTimestamp_Parms PgUpdateServerMovesToTimestamp_Parms;
	PgUpdateServerMovesToTimestamp_Parms.TimeStamp = TimeStamp;

	this->ProcessEvent ( pFnPgUpdateServerMovesToTimestamp, &PgUpdateServerMovesToTimestamp_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgServerSendRootMotion
// [0x00220042] 
// Parameters infos:
// float                          OldTimeStamp                   ( CPF_Parm )
// float                          newTimeStamp                   ( CPF_Parm )
// struct FVector                 RootMotionDelta                ( CPF_Parm )

void APgPlayerController::PgServerSendRootMotion ( float OldTimeStamp, float newTimeStamp, struct FVector RootMotionDelta )
{
	static UFunction* pFnPgServerSendRootMotion = NULL;

	if ( ! pFnPgServerSendRootMotion )
		pFnPgServerSendRootMotion = (UFunction*) UObject::GObjObjects()->Data[ 45578 ];

	APgPlayerController_execPgServerSendRootMotion_Parms PgServerSendRootMotion_Parms;
	PgServerSendRootMotion_Parms.OldTimeStamp = OldTimeStamp;
	PgServerSendRootMotion_Parms.newTimeStamp = newTimeStamp;
	memcpy ( &PgServerSendRootMotion_Parms.RootMotionDelta, &RootMotionDelta, 0xC );

	this->ProcessEvent ( pFnPgServerSendRootMotion, &PgServerSendRootMotion_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgServerComboQueueMove
// [0x002200C2] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// class UPgSpecialMoveAsset*     comboMove                      ( CPF_Parm )
// struct FPgSpecialMoveParams    comboParams                    ( CPF_Parm )
// unsigned long                  bIsNewCombo                    ( CPF_Parm )

void APgPlayerController::PgServerComboQueueMove ( float TimeStamp, class UPgSpecialMoveAsset* comboMove, struct FPgSpecialMoveParams comboParams, unsigned long bIsNewCombo )
{
	static UFunction* pFnPgServerComboQueueMove = NULL;

	if ( ! pFnPgServerComboQueueMove )
		pFnPgServerComboQueueMove = (UFunction*) UObject::GObjObjects()->Data[ 45573 ];

	APgPlayerController_execPgServerComboQueueMove_Parms PgServerComboQueueMove_Parms;
	PgServerComboQueueMove_Parms.TimeStamp = TimeStamp;
	PgServerComboQueueMove_Parms.comboMove = comboMove;
	memcpy ( &PgServerComboQueueMove_Parms.comboParams, &comboParams, 0x18 );
	PgServerComboQueueMove_Parms.bIsNewCombo = bIsNewCombo;

	this->ProcessEvent ( pFnPgServerComboQueueMove, &PgServerComboQueueMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgSendServerMove
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// class USavedMove*              NewMove                        ( CPF_Parm )
// unsigned long                  bIgnoreCorrections             ( CPF_Parm )

void APgPlayerController::PgSendServerMove ( class USavedMove* NewMove, unsigned long bIgnoreCorrections )
{
	static UFunction* pFnPgSendServerMove = NULL;

	if ( ! pFnPgSendServerMove )
		pFnPgSendServerMove = (UFunction*) UObject::GObjObjects()->Data[ 45551 ];

	APgPlayerController_execPgSendServerMove_Parms PgSendServerMove_Parms;
	PgSendServerMove_Parms.NewMove = NewMove;
	PgSendServerMove_Parms.bIgnoreCorrections = bIgnoreCorrections;

	this->ProcessEvent ( pFnPgSendServerMove, &PgSendServerMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgCallServerMove
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void APgPlayerController::PgCallServerMove ( )
{
	static UFunction* pFnPgCallServerMove = NULL;

	if ( ! pFnPgCallServerMove )
		pFnPgCallServerMove = (UFunction*) UObject::GObjObjects()->Data[ 45474 ];

	APgPlayerController_execPgCallServerMove_Parms PgCallServerMove_Parms;

	this->ProcessEvent ( pFnPgCallServerMove, &PgCallServerMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgClientShortCorrection
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// float                          AckTimeStamp                   ( CPF_Parm )
// class UPgSavedMove*            CurrentMove                    ( CPF_Parm )
// struct FVector                 LocationAtTimeStamp            ( CPF_Parm )

void APgPlayerController::PgClientShortCorrection ( float AckTimeStamp, class UPgSavedMove* CurrentMove, struct FVector LocationAtTimeStamp )
{
	static UFunction* pFnPgClientShortCorrection = NULL;

	if ( ! pFnPgClientShortCorrection )
		pFnPgClientShortCorrection = (UFunction*) UObject::GObjObjects()->Data[ 45535 ];

	APgPlayerController_execPgClientShortCorrection_Parms PgClientShortCorrection_Parms;
	PgClientShortCorrection_Parms.AckTimeStamp = AckTimeStamp;
	PgClientShortCorrection_Parms.CurrentMove = CurrentMove;
	memcpy ( &PgClientShortCorrection_Parms.LocationAtTimeStamp, &LocationAtTimeStamp, 0xC );

	this->ProcessEvent ( pFnPgClientShortCorrection, &PgClientShortCorrection_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientComboBadQueue
// [0x010201C2] 
// Parameters infos:

void APgPlayerController::ClientComboBadQueue ( )
{
	static UFunction* pFnClientComboBadQueue = NULL;

	if ( ! pFnClientComboBadQueue )
		pFnClientComboBadQueue = (UFunction*) UObject::GObjObjects()->Data[ 45537 ];

	APgPlayerController_execClientComboBadQueue_Parms ClientComboBadQueue_Parms;

	this->ProcessEvent ( pFnClientComboBadQueue, &ClientComboBadQueue_Parms, NULL );
};

// Function GridGame.PgPlayerController.SendComboBadQueue
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APgPlayerController::SendComboBadQueue ( )
{
	static UFunction* pFnSendComboBadQueue = NULL;

	if ( ! pFnSendComboBadQueue )
		pFnSendComboBadQueue = (UFunction*) UObject::GObjObjects()->Data[ 45536 ];

	APgPlayerController_execSendComboBadQueue_Parms SendComboBadQueue_Parms;

	this->ProcessEvent ( pFnSendComboBadQueue, &SendComboBadQueue_Parms, NULL );
};

// Function GridGame.PgPlayerController.LongClientAdjustPosition
// [0x01820142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )
// unsigned char                  newPhysics                     ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// float                          NewVelX                        ( CPF_Parm )
// float                          NewVelY                        ( CPF_Parm )
// float                          NewVelZ                        ( CPF_Parm )
// class AActor*                  NewBase                        ( CPF_Parm )
// float                          NewFloorX                      ( CPF_Parm )
// float                          NewFloorY                      ( CPF_Parm )
// float                          NewFloorZ                      ( CPF_Parm )

void APgPlayerController::LongClientAdjustPosition ( float TimeStamp, struct FName NewState, unsigned char newPhysics, float NewLocX, float NewLocY, float NewLocZ, float NewVelX, float NewVelY, float NewVelZ, class AActor* NewBase, float NewFloorX, float NewFloorY, float NewFloorZ )
{
	static UFunction* pFnLongClientAdjustPosition = NULL;

	if ( ! pFnLongClientAdjustPosition )
		pFnLongClientAdjustPosition = (UFunction*) UObject::GObjObjects()->Data[ 45514 ];

	APgPlayerController_execLongClientAdjustPosition_Parms LongClientAdjustPosition_Parms;
	LongClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy ( &LongClientAdjustPosition_Parms.NewState, &NewState, 0x8 );
	LongClientAdjustPosition_Parms.newPhysics = newPhysics;
	LongClientAdjustPosition_Parms.NewLocX = NewLocX;
	LongClientAdjustPosition_Parms.NewLocY = NewLocY;
	LongClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	LongClientAdjustPosition_Parms.NewVelX = NewVelX;
	LongClientAdjustPosition_Parms.NewVelY = NewVelY;
	LongClientAdjustPosition_Parms.NewVelZ = NewVelZ;
	LongClientAdjustPosition_Parms.NewBase = NewBase;
	LongClientAdjustPosition_Parms.NewFloorX = NewFloorX;
	LongClientAdjustPosition_Parms.NewFloorY = NewFloorY;
	LongClientAdjustPosition_Parms.NewFloorZ = NewFloorZ;

	this->ProcessEvent ( pFnLongClientAdjustPosition, &LongClientAdjustPosition_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgDrawNetCorrection
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )
// unsigned char                  newPhysics                     ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// float                          NewVelX                        ( CPF_Parm )
// float                          NewVelY                        ( CPF_Parm )
// float                          NewVelZ                        ( CPF_Parm )

void APgPlayerController::PgDrawNetCorrection ( float TimeStamp, struct FName NewState, unsigned char newPhysics, float NewLocX, float NewLocY, float NewLocZ, float NewVelX, float NewVelY, float NewVelZ )
{
	static UFunction* pFnPgDrawNetCorrection = NULL;

	if ( ! pFnPgDrawNetCorrection )
		pFnPgDrawNetCorrection = (UFunction*) UObject::GObjObjects()->Data[ 45500 ];

	APgPlayerController_execPgDrawNetCorrection_Parms PgDrawNetCorrection_Parms;
	PgDrawNetCorrection_Parms.TimeStamp = TimeStamp;
	memcpy ( &PgDrawNetCorrection_Parms.NewState, &NewState, 0x8 );
	PgDrawNetCorrection_Parms.newPhysics = newPhysics;
	PgDrawNetCorrection_Parms.NewLocX = NewLocX;
	PgDrawNetCorrection_Parms.NewLocY = NewLocY;
	PgDrawNetCorrection_Parms.NewLocZ = NewLocZ;
	PgDrawNetCorrection_Parms.NewVelX = NewVelX;
	PgDrawNetCorrection_Parms.NewVelY = NewVelY;
	PgDrawNetCorrection_Parms.NewVelZ = NewVelZ;

	this->ProcessEvent ( pFnPgDrawNetCorrection, &PgDrawNetCorrection_Parms, NULL );
};

// Function GridGame.PgPlayerController.ShortClientAdjustPosition
// [0x01020142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )
// unsigned char                  newPhysics                     ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// class AActor*                  NewBase                        ( CPF_Parm )

void APgPlayerController::ShortClientAdjustPosition ( float TimeStamp, struct FName NewState, unsigned char newPhysics, float NewLocX, float NewLocY, float NewLocZ, class AActor* NewBase )
{
	static UFunction* pFnShortClientAdjustPosition = NULL;

	if ( ! pFnShortClientAdjustPosition )
		pFnShortClientAdjustPosition = (UFunction*) UObject::GObjObjects()->Data[ 45492 ];

	APgPlayerController_execShortClientAdjustPosition_Parms ShortClientAdjustPosition_Parms;
	ShortClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy ( &ShortClientAdjustPosition_Parms.NewState, &NewState, 0x8 );
	ShortClientAdjustPosition_Parms.newPhysics = newPhysics;
	ShortClientAdjustPosition_Parms.NewLocX = NewLocX;
	ShortClientAdjustPosition_Parms.NewLocY = NewLocY;
	ShortClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	ShortClientAdjustPosition_Parms.NewBase = NewBase;

	this->ProcessEvent ( pFnShortClientAdjustPosition, &ShortClientAdjustPosition_Parms, NULL );
};

// Function GridGame.PgPlayerController.VeryShortClientAdjustPosition
// [0x01020142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// class AActor*                  NewBase                        ( CPF_Parm )

void APgPlayerController::VeryShortClientAdjustPosition ( float TimeStamp, float NewLocX, float NewLocY, float NewLocZ, class AActor* NewBase )
{
	static UFunction* pFnVeryShortClientAdjustPosition = NULL;

	if ( ! pFnVeryShortClientAdjustPosition )
		pFnVeryShortClientAdjustPosition = (UFunction*) UObject::GObjObjects()->Data[ 45486 ];

	APgPlayerController_execVeryShortClientAdjustPosition_Parms VeryShortClientAdjustPosition_Parms;
	VeryShortClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	VeryShortClientAdjustPosition_Parms.NewLocX = NewLocX;
	VeryShortClientAdjustPosition_Parms.NewLocY = NewLocY;
	VeryShortClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	VeryShortClientAdjustPosition_Parms.NewBase = NewBase;

	this->ProcessEvent ( pFnVeryShortClientAdjustPosition, &VeryShortClientAdjustPosition_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientAdjustPosition
// [0x01020142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )
// unsigned char                  newPhysics                     ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// float                          NewVelX                        ( CPF_Parm )
// float                          NewVelY                        ( CPF_Parm )
// float                          NewVelZ                        ( CPF_Parm )
// class AActor*                  NewBase                        ( CPF_Parm )

void APgPlayerController::ClientAdjustPosition ( float TimeStamp, struct FName NewState, unsigned char newPhysics, float NewLocX, float NewLocY, float NewLocZ, float NewVelX, float NewVelY, float NewVelZ, class AActor* NewBase )
{
	static UFunction* pFnClientAdjustPosition = NULL;

	if ( ! pFnClientAdjustPosition )
		pFnClientAdjustPosition = (UFunction*) UObject::GObjObjects()->Data[ 45475 ];

	APgPlayerController_execClientAdjustPosition_Parms ClientAdjustPosition_Parms;
	ClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy ( &ClientAdjustPosition_Parms.NewState, &NewState, 0x8 );
	ClientAdjustPosition_Parms.newPhysics = newPhysics;
	ClientAdjustPosition_Parms.NewLocX = NewLocX;
	ClientAdjustPosition_Parms.NewLocY = NewLocY;
	ClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	ClientAdjustPosition_Parms.NewVelX = NewVelX;
	ClientAdjustPosition_Parms.NewVelY = NewVelY;
	ClientAdjustPosition_Parms.NewVelZ = NewVelZ;
	ClientAdjustPosition_Parms.NewBase = NewBase;

	this->ProcessEvent ( pFnClientAdjustPosition, &ClientAdjustPosition_Parms, NULL );
};

// Function GridGame.PgPlayerController.ReplicateMove
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 newAccel                       ( CPF_Parm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )
// struct FRotator                DeltaRot                       ( CPF_Parm )

void APgPlayerController::ReplicateMove ( float DeltaTime, struct FVector newAccel, unsigned char DoubleClickMove, struct FRotator DeltaRot )
{
	static UFunction* pFnReplicateMove = NULL;

	if ( ! pFnReplicateMove )
		pFnReplicateMove = (UFunction*) UObject::GObjObjects()->Data[ 45461 ];

	APgPlayerController_execReplicateMove_Parms ReplicateMove_Parms;
	ReplicateMove_Parms.DeltaTime = DeltaTime;
	memcpy ( &ReplicateMove_Parms.newAccel, &newAccel, 0xC );
	ReplicateMove_Parms.DoubleClickMove = DoubleClickMove;
	memcpy ( &ReplicateMove_Parms.DeltaRot, &DeltaRot, 0xC );

	this->ProcessEvent ( pFnReplicateMove, &ReplicateMove_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientUpdatePosition
// [0x00820002] 
// Parameters infos:

void APgPlayerController::ClientUpdatePosition ( )
{
	static UFunction* pFnClientUpdatePosition = NULL;

	if ( ! pFnClientUpdatePosition )
		pFnClientUpdatePosition = (UFunction*) UObject::GObjObjects()->Data[ 45436 ];

	APgPlayerController_execClientUpdatePosition_Parms ClientUpdatePosition_Parms;

	this->ProcessEvent ( pFnClientUpdatePosition, &ClientUpdatePosition_Parms, NULL );
};

// Function GridGame.PgPlayerController.FindSavedMoveByTimeStamp
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UPgSavedMove*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          TimeStamp                      ( CPF_Parm )

class UPgSavedMove* APgPlayerController::FindSavedMoveByTimeStamp ( float TimeStamp )
{
	static UFunction* pFnFindSavedMoveByTimeStamp = NULL;

	if ( ! pFnFindSavedMoveByTimeStamp )
		pFnFindSavedMoveByTimeStamp = (UFunction*) UObject::GObjObjects()->Data[ 45431 ];

	APgPlayerController_execFindSavedMoveByTimeStamp_Parms FindSavedMoveByTimeStamp_Parms;
	FindSavedMoveByTimeStamp_Parms.TimeStamp = TimeStamp;

	this->ProcessEvent ( pFnFindSavedMoveByTimeStamp, &FindSavedMoveByTimeStamp_Parms, NULL );

	return FindSavedMoveByTimeStamp_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.PgMod_ShouldSendNetCorrection
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 LocDiff                        ( CPF_Parm )

bool APgPlayerController::PgMod_ShouldSendNetCorrection ( struct FVector LocDiff )
{
	static UFunction* pFnPgMod_ShouldSendNetCorrection = NULL;

	if ( ! pFnPgMod_ShouldSendNetCorrection )
		pFnPgMod_ShouldSendNetCorrection = (UFunction*) UObject::GObjObjects()->Data[ 45427 ];

	APgPlayerController_execPgMod_ShouldSendNetCorrection_Parms PgMod_ShouldSendNetCorrection_Parms;
	memcpy ( &PgMod_ShouldSendNetCorrection_Parms.LocDiff, &LocDiff, 0xC );

	this->ProcessEvent ( pFnPgMod_ShouldSendNetCorrection, &PgMod_ShouldSendNetCorrection_Parms, NULL );

	return PgMod_ShouldSendNetCorrection_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.PgMod_IsCorrectionWithinTolerance
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  MoveActor                      ( CPF_Parm )
// class USavedMove*              CurrentMove                    ( CPF_Parm )
// struct FVector                 NewLocation                    ( CPF_Parm )
// struct FVector                 NewVelocity                    ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )

bool APgPlayerController::PgMod_IsCorrectionWithinTolerance ( class AActor* MoveActor, class USavedMove* CurrentMove, struct FVector NewLocation, struct FVector NewVelocity, struct FName NewState )
{
	static UFunction* pFnPgMod_IsCorrectionWithinTolerance = NULL;

	if ( ! pFnPgMod_IsCorrectionWithinTolerance )
		pFnPgMod_IsCorrectionWithinTolerance = (UFunction*) UObject::GObjObjects()->Data[ 45418 ];

	APgPlayerController_execPgMod_IsCorrectionWithinTolerance_Parms PgMod_IsCorrectionWithinTolerance_Parms;
	PgMod_IsCorrectionWithinTolerance_Parms.MoveActor = MoveActor;
	PgMod_IsCorrectionWithinTolerance_Parms.CurrentMove = CurrentMove;
	memcpy ( &PgMod_IsCorrectionWithinTolerance_Parms.NewLocation, &NewLocation, 0xC );
	memcpy ( &PgMod_IsCorrectionWithinTolerance_Parms.NewVelocity, &NewVelocity, 0xC );
	memcpy ( &PgMod_IsCorrectionWithinTolerance_Parms.NewState, &NewState, 0x8 );

	this->ProcessEvent ( pFnPgMod_IsCorrectionWithinTolerance, &PgMod_IsCorrectionWithinTolerance_Parms, NULL );

	return PgMod_IsCorrectionWithinTolerance_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.NotifyLanded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

bool APgPlayerController::eventNotifyLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnNotifyLanded = NULL;

	if ( ! pFnNotifyLanded )
		pFnNotifyLanded = (UFunction*) UObject::GObjObjects()->Data[ 45414 ];

	APgPlayerController_eventNotifyLanded_Parms NotifyLanded_Parms;
	memcpy ( &NotifyLanded_Parms.HitNormal, &HitNormal, 0xC );
	NotifyLanded_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnNotifyLanded, &NotifyLanded_Parms, NULL );

	return NotifyLanded_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.PgNetCompressVector
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 vec                            ( CPF_Parm | CPF_OutParm )

void APgPlayerController::PgNetCompressVector ( struct FVector* vec )
{
	static UFunction* pFnPgNetCompressVector = NULL;

	if ( ! pFnPgNetCompressVector )
		pFnPgNetCompressVector = (UFunction*) UObject::GObjObjects()->Data[ 45412 ];

	APgPlayerController_execPgNetCompressVector_Parms PgNetCompressVector_Parms;

	pFnPgNetCompressVector->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgNetCompressVector, &PgNetCompressVector_Parms, NULL );

	pFnPgNetCompressVector->FunctionFlags |= 0x400;

	if ( vec )
		memcpy ( vec, &PgNetCompressVector_Parms.vec, 0xC );
};

// Function GridGame.PgPlayerController.ClientSaveUserData
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventClientSaveUserData ( )
{
	static UFunction* pFnClientSaveUserData = NULL;

	if ( ! pFnClientSaveUserData )
		pFnClientSaveUserData = (UFunction*) UObject::GObjObjects()->Data[ 45411 ];

	APgPlayerController_eventClientSaveUserData_Parms ClientSaveUserData_Parms;

	pFnClientSaveUserData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientSaveUserData, &ClientSaveUserData_Parms, NULL );

	pFnClientSaveUserData->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientFlushOnlineStats
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventClientFlushOnlineStats ( )
{
	static UFunction* pFnClientFlushOnlineStats = NULL;

	if ( ! pFnClientFlushOnlineStats )
		pFnClientFlushOnlineStats = (UFunction*) UObject::GObjObjects()->Data[ 45410 ];

	APgPlayerController_eventClientFlushOnlineStats_Parms ClientFlushOnlineStats_Parms;

	pFnClientFlushOnlineStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientFlushOnlineStats, &ClientFlushOnlineStats_Parms, NULL );

	pFnClientFlushOnlineStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientWriteLeaderboardStats
// [0x010205C0] ( FUNC_Native )
// Parameters infos:
// class UClass*                  OnlineStatsWriteClass          ( CPF_Parm )

void APgPlayerController::ClientWriteLeaderboardStats ( class UClass* OnlineStatsWriteClass )
{
	static UFunction* pFnClientWriteLeaderboardStats = NULL;

	if ( ! pFnClientWriteLeaderboardStats )
		pFnClientWriteLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 45408 ];

	APgPlayerController_execClientWriteLeaderboardStats_Parms ClientWriteLeaderboardStats_Parms;
	ClientWriteLeaderboardStats_Parms.OnlineStatsWriteClass = OnlineStatsWriteClass;

	pFnClientWriteLeaderboardStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientWriteLeaderboardStats, &ClientWriteLeaderboardStats_Parms, NULL );

	pFnClientWriteLeaderboardStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.RespawnTimerCleanup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::RespawnTimerCleanup ( )
{
	static UFunction* pFnRespawnTimerCleanup = NULL;

	if ( ! pFnRespawnTimerCleanup )
		pFnRespawnTimerCleanup = (UFunction*) UObject::GObjObjects()->Data[ 45407 ];

	APgPlayerController_execRespawnTimerCleanup_Parms RespawnTimerCleanup_Parms;

	pFnRespawnTimerCleanup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRespawnTimerCleanup, &RespawnTimerCleanup_Parms, NULL );

	pFnRespawnTimerCleanup->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.OnRespawnDelayTimeout
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::OnRespawnDelayTimeout ( )
{
	static UFunction* pFnOnRespawnDelayTimeout = NULL;

	if ( ! pFnOnRespawnDelayTimeout )
		pFnOnRespawnDelayTimeout = (UFunction*) UObject::GObjObjects()->Data[ 45406 ];

	APgPlayerController_execOnRespawnDelayTimeout_Parms OnRespawnDelayTimeout_Parms;

	pFnOnRespawnDelayTimeout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnRespawnDelayTimeout, &OnRespawnDelayTimeout_Parms, NULL );

	pFnOnRespawnDelayTimeout->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.OnBeginPlayerWaiting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::OnBeginPlayerWaiting ( )
{
	static UFunction* pFnOnBeginPlayerWaiting = NULL;

	if ( ! pFnOnBeginPlayerWaiting )
		pFnOnBeginPlayerWaiting = (UFunction*) UObject::GObjObjects()->Data[ 45405 ];

	APgPlayerController_execOnBeginPlayerWaiting_Parms OnBeginPlayerWaiting_Parms;

	pFnOnBeginPlayerWaiting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnBeginPlayerWaiting, &OnBeginPlayerWaiting_Parms, NULL );

	pFnOnBeginPlayerWaiting->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ClientGotoState
// [0x00044803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   NewState                       ( CPF_Parm )
// struct FName                   NewLabel                       ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::event_ClientGotoState ( struct FName NewState, struct FName NewLabel )
{
	static UFunction* pFn_ClientGotoState = NULL;

	if ( ! pFn_ClientGotoState )
		pFn_ClientGotoState = (UFunction*) UObject::GObjObjects()->Data[ 45402 ];

	APgPlayerController_event_ClientGotoState_Parms _ClientGotoState_Parms;
	memcpy ( &_ClientGotoState_Parms.NewState, &NewState, 0x8 );
	memcpy ( &_ClientGotoState_Parms.NewLabel, &NewLabel, 0x8 );

	this->ProcessEvent ( pFn_ClientGotoState, &_ClientGotoState_Parms, NULL );
};

// Function GridGame.PgPlayerController._PreClientTravel
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 PendingURL                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  TravelType                     ( CPF_Parm )
// unsigned long                  bIsSeamlessTravel              ( CPF_Parm )

void APgPlayerController::event_PreClientTravel ( struct FString PendingURL, unsigned char TravelType, unsigned long bIsSeamlessTravel )
{
	static UFunction* pFn_PreClientTravel = NULL;

	if ( ! pFn_PreClientTravel )
		pFn_PreClientTravel = (UFunction*) UObject::GObjObjects()->Data[ 45398 ];

	APgPlayerController_event_PreClientTravel_Parms _PreClientTravel_Parms;
	memcpy ( &_PreClientTravel_Parms.PendingURL, &PendingURL, 0xC );
	_PreClientTravel_Parms.TravelType = TravelType;
	_PreClientTravel_Parms.bIsSeamlessTravel = bIsSeamlessTravel;

	this->ProcessEvent ( pFn_PreClientTravel, &_PreClientTravel_Parms, NULL );
};

// Function GridGame.PgPlayerController.PreClientTravel
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 PendingURL                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  TravelType                     ( CPF_Parm )
// unsigned long                  bIsSeamlessTravel              ( CPF_Parm )

void APgPlayerController::eventPreClientTravel ( struct FString PendingURL, unsigned char TravelType, unsigned long bIsSeamlessTravel )
{
	static UFunction* pFnPreClientTravel = NULL;

	if ( ! pFnPreClientTravel )
		pFnPreClientTravel = (UFunction*) UObject::GObjObjects()->Data[ 45394 ];

	APgPlayerController_eventPreClientTravel_Parms PreClientTravel_Parms;
	memcpy ( &PreClientTravel_Parms.PendingURL, &PendingURL, 0xC );
	PreClientTravel_Parms.TravelType = TravelType;
	PreClientTravel_Parms.bIsSeamlessTravel = bIsSeamlessTravel;

	pFnPreClientTravel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreClientTravel, &PreClientTravel_Parms, NULL );

	pFnPreClientTravel->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.OnPlayerReceived
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::OnPlayerReceived ( )
{
	static UFunction* pFnOnPlayerReceived = NULL;

	if ( ! pFnOnPlayerReceived )
		pFnOnPlayerReceived = (UFunction*) UObject::GObjObjects()->Data[ 45393 ];

	APgPlayerController_execOnPlayerReceived_Parms OnPlayerReceived_Parms;

	pFnOnPlayerReceived->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPlayerReceived, &OnPlayerReceived_Parms, NULL );

	pFnOnPlayerReceived->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventReceivedPlayer ( )
{
	static UFunction* pFnReceivedPlayer = NULL;

	if ( ! pFnReceivedPlayer )
		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 45392 ];

	APgPlayerController_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerDrawNetCorrections
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bDrawThem                      ( CPF_Parm )

void APgPlayerController::ServerDrawNetCorrections ( unsigned long bDrawThem )
{
	static UFunction* pFnServerDrawNetCorrections = NULL;

	if ( ! pFnServerDrawNetCorrections )
		pFnServerDrawNetCorrections = (UFunction*) UObject::GObjObjects()->Data[ 45390 ];

	APgPlayerController_execServerDrawNetCorrections_Parms ServerDrawNetCorrections_Parms;
	ServerDrawNetCorrections_Parms.bDrawThem = bDrawThem;

	this->ProcessEvent ( pFnServerDrawNetCorrections, &ServerDrawNetCorrections_Parms, NULL );
};

// Function GridGame.PgPlayerController.DrawNetCorrections
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::DrawNetCorrections ( )
{
	static UFunction* pFnDrawNetCorrections = NULL;

	if ( ! pFnDrawNetCorrections )
		pFnDrawNetCorrections = (UFunction*) UObject::GObjObjects()->Data[ 45389 ];

	APgPlayerController_execDrawNetCorrections_Parms DrawNetCorrections_Parms;

	this->ProcessEvent ( pFnDrawNetCorrections, &DrawNetCorrections_Parms, NULL );
};

// Function GridGame.PgPlayerController.RegisterCustomPlayerDataStores
// [0x00080102] 
// Parameters infos:

void APgPlayerController::RegisterCustomPlayerDataStores ( )
{
	static UFunction* pFnRegisterCustomPlayerDataStores = NULL;

	if ( ! pFnRegisterCustomPlayerDataStores )
		pFnRegisterCustomPlayerDataStores = (UFunction*) UObject::GObjObjects()->Data[ 45387 ];

	APgPlayerController_execRegisterCustomPlayerDataStores_Parms RegisterCustomPlayerDataStores_Parms;

	this->ProcessEvent ( pFnRegisterCustomPlayerDataStores, &RegisterCustomPlayerDataStores_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientUnlockAchievement
// [0x010205C0] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Achievement                    ( CPF_Parm )

void APgPlayerController::ClientUnlockAchievement ( unsigned char Achievement )
{
	static UFunction* pFnClientUnlockAchievement = NULL;

	if ( ! pFnClientUnlockAchievement )
		pFnClientUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 45385 ];

	APgPlayerController_execClientUnlockAchievement_Parms ClientUnlockAchievement_Parms;
	ClientUnlockAchievement_Parms.Achievement = Achievement;

	pFnClientUnlockAchievement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientUnlockAchievement, &ClientUnlockAchievement_Parms, NULL );

	pFnClientUnlockAchievement->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.UpdatePlayerTickStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APgPlayerController::UpdatePlayerTickStats ( float DeltaSeconds )
{
	static UFunction* pFnUpdatePlayerTickStats = NULL;

	if ( ! pFnUpdatePlayerTickStats )
		pFnUpdatePlayerTickStats = (UFunction*) UObject::GObjObjects()->Data[ 45383 ];

	APgPlayerController_execUpdatePlayerTickStats_Parms UpdatePlayerTickStats_Parms;
	UpdatePlayerTickStats_Parms.DeltaSeconds = DeltaSeconds;

	pFnUpdatePlayerTickStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlayerTickStats, &UpdatePlayerTickStats_Parms, NULL );

	pFnUpdatePlayerTickStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientSetStatInt
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            StatIndex                      ( CPF_Parm )
// int                            StatValue                      ( CPF_Parm )

void APgPlayerController::eventClientSetStatInt ( int StatIndex, int StatValue )
{
	static UFunction* pFnClientSetStatInt = NULL;

	if ( ! pFnClientSetStatInt )
		pFnClientSetStatInt = (UFunction*) UObject::GObjObjects()->Data[ 45380 ];

	APgPlayerController_eventClientSetStatInt_Parms ClientSetStatInt_Parms;
	ClientSetStatInt_Parms.StatIndex = StatIndex;
	ClientSetStatInt_Parms.StatValue = StatValue;

	pFnClientSetStatInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientSetStatInt, &ClientSetStatInt_Parms, NULL );

	pFnClientSetStatInt->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientUpdatePlayerKillsStats
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventClientUpdatePlayerKillsStats ( )
{
	static UFunction* pFnClientUpdatePlayerKillsStats = NULL;

	if ( ! pFnClientUpdatePlayerKillsStats )
		pFnClientUpdatePlayerKillsStats = (UFunction*) UObject::GObjObjects()->Data[ 45379 ];

	APgPlayerController_eventClientUpdatePlayerKillsStats_Parms ClientUpdatePlayerKillsStats_Parms;

	pFnClientUpdatePlayerKillsStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientUpdatePlayerKillsStats, &ClientUpdatePlayerKillsStats_Parms, NULL );

	pFnClientUpdatePlayerKillsStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientUpdatePlayerKilledStats
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventClientUpdatePlayerKilledStats ( )
{
	static UFunction* pFnClientUpdatePlayerKilledStats = NULL;

	if ( ! pFnClientUpdatePlayerKilledStats )
		pFnClientUpdatePlayerKilledStats = (UFunction*) UObject::GObjObjects()->Data[ 45378 ];

	APgPlayerController_eventClientUpdatePlayerKilledStats_Parms ClientUpdatePlayerKilledStats_Parms;

	pFnClientUpdatePlayerKilledStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientUpdatePlayerKilledStats, &ClientUpdatePlayerKilledStats_Parms, NULL );

	pFnClientUpdatePlayerKilledStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientIncStatInt
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            StatIndex                      ( CPF_Parm )

void APgPlayerController::eventClientIncStatInt ( int StatIndex )
{
	static UFunction* pFnClientIncStatInt = NULL;

	if ( ! pFnClientIncStatInt )
		pFnClientIncStatInt = (UFunction*) UObject::GObjObjects()->Data[ 45376 ];

	APgPlayerController_eventClientIncStatInt_Parms ClientIncStatInt_Parms;
	ClientIncStatInt_Parms.StatIndex = StatIndex;

	pFnClientIncStatInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientIncStatInt, &ClientIncStatInt_Parms, NULL );

	pFnClientIncStatInt->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientStartOnlineGame
// [0x010201C2] 
// Parameters infos:

void APgPlayerController::ClientStartOnlineGame ( )
{
	static UFunction* pFnClientStartOnlineGame = NULL;

	if ( ! pFnClientStartOnlineGame )
		pFnClientStartOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 45374 ];

	APgPlayerController_execClientStartOnlineGame_Parms ClientStartOnlineGame_Parms;

	this->ProcessEvent ( pFnClientStartOnlineGame, &ClientStartOnlineGame_Parms, NULL );
};

// Function GridGame.PgPlayerController.PgPlayerController_OnStartOnlineGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void APgPlayerController::PgPlayerController_OnStartOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgPlayerController_OnStartOnlineGameComplete = NULL;

	if ( ! pFnPgPlayerController_OnStartOnlineGameComplete )
		pFnPgPlayerController_OnStartOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 45371 ];

	APgPlayerController_execPgPlayerController_OnStartOnlineGameComplete_Parms PgPlayerController_OnStartOnlineGameComplete_Parms;
	memcpy ( &PgPlayerController_OnStartOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgPlayerController_OnStartOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnPgPlayerController_OnStartOnlineGameComplete, &PgPlayerController_OnStartOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgPlayerController.Respawn
// [0x00080802] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventRespawn ( )
{
	static UFunction* pFnRespawn = NULL;

	if ( ! pFnRespawn )
		pFnRespawn = (UFunction*) UObject::GObjObjects()->Data[ 45370 ];

	APgPlayerController_eventRespawn_Parms Respawn_Parms;

	this->ProcessEvent ( pFnRespawn, &Respawn_Parms, NULL );
};

// Function GridGame.PgPlayerController._GameplayUnmutePlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::event_GameplayUnmutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFn_GameplayUnmutePlayer = NULL;

	if ( ! pFn_GameplayUnmutePlayer )
		pFn_GameplayUnmutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45368 ];

	APgPlayerController_event_GameplayUnmutePlayer_Parms _GameplayUnmutePlayer_Parms;
	memcpy ( &_GameplayUnmutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	this->ProcessEvent ( pFn_GameplayUnmutePlayer, &_GameplayUnmutePlayer_Parms, NULL );
};

// Function GridGame.PgPlayerController._GameplayMutePlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::event_GameplayMutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFn_GameplayMutePlayer = NULL;

	if ( ! pFn_GameplayMutePlayer )
		pFn_GameplayMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45366 ];

	APgPlayerController_event_GameplayMutePlayer_Parms _GameplayMutePlayer_Parms;
	memcpy ( &_GameplayMutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	this->ProcessEvent ( pFn_GameplayMutePlayer, &_GameplayMutePlayer_Parms, NULL );
};

// Function GridGame.PgPlayerController.StopTeamOnlySpeak
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::StopTeamOnlySpeak ( )
{
	static UFunction* pFnStopTeamOnlySpeak = NULL;

	if ( ! pFnStopTeamOnlySpeak )
		pFnStopTeamOnlySpeak = (UFunction*) UObject::GObjObjects()->Data[ 45365 ];

	APgPlayerController_execStopTeamOnlySpeak_Parms StopTeamOnlySpeak_Parms;

	pFnStopTeamOnlySpeak->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopTeamOnlySpeak, &StopTeamOnlySpeak_Parms, NULL );

	pFnStopTeamOnlySpeak->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.StartTeamOnlySpeak
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::StartTeamOnlySpeak ( )
{
	static UFunction* pFnStartTeamOnlySpeak = NULL;

	if ( ! pFnStartTeamOnlySpeak )
		pFnStartTeamOnlySpeak = (UFunction*) UObject::GObjObjects()->Data[ 45364 ];

	APgPlayerController_execStartTeamOnlySpeak_Parms StartTeamOnlySpeak_Parms;

	pFnStartTeamOnlySpeak->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartTeamOnlySpeak, &StartTeamOnlySpeak_Parms, NULL );

	pFnStartTeamOnlySpeak->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.StartRespawnDelayTimer
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::StartRespawnDelayTimer ( float Time )
{
	static UFunction* pFnStartRespawnDelayTimer = NULL;

	if ( ! pFnStartRespawnDelayTimer )
		pFnStartRespawnDelayTimer = (UFunction*) UObject::GObjObjects()->Data[ 45362 ];

	APgPlayerController_execStartRespawnDelayTimer_Parms StartRespawnDelayTimer_Parms;
	StartRespawnDelayTimer_Parms.Time = Time;

	pFnStartRespawnDelayTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartRespawnDelayTimer, &StartRespawnDelayTimer_Parms, NULL );

	pFnStartRespawnDelayTimer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AddRespawnTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          Amount                         ( CPF_Parm )

void APgPlayerController::AddRespawnTime ( float Amount )
{
	static UFunction* pFnAddRespawnTime = NULL;

	if ( ! pFnAddRespawnTime )
		pFnAddRespawnTime = (UFunction*) UObject::GObjObjects()->Data[ 45360 ];

	APgPlayerController_execAddRespawnTime_Parms AddRespawnTime_Parms;
	AddRespawnTime_Parms.Amount = Amount;

	pFnAddRespawnTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddRespawnTime, &AddRespawnTime_Parms, NULL );

	pFnAddRespawnTime->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.OnStartDelayTimeOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::OnStartDelayTimeOut ( )
{
	static UFunction* pFnOnStartDelayTimeOut = NULL;

	if ( ! pFnOnStartDelayTimeOut )
		pFnOnStartDelayTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 45359 ];

	APgPlayerController_execOnStartDelayTimeOut_Parms OnStartDelayTimeOut_Parms;

	pFnOnStartDelayTimeOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStartDelayTimeOut, &OnStartDelayTimeOut_Parms, NULL );

	pFnOnStartDelayTimeOut->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.DelayedStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::DelayedStart ( )
{
	static UFunction* pFnDelayedStart = NULL;

	if ( ! pFnDelayedStart )
		pFnDelayedStart = (UFunction*) UObject::GObjObjects()->Data[ 45358 ];

	APgPlayerController_execDelayedStart_Parms DelayedStart_Parms;

	pFnDelayedStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDelayedStart, &DelayedStart_Parms, NULL );

	pFnDelayedStart->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._CanRestartPlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::event_CanRestartPlayer ( )
{
	static UFunction* pFn_CanRestartPlayer = NULL;

	if ( ! pFn_CanRestartPlayer )
		pFn_CanRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 45356 ];

	APgPlayerController_event_CanRestartPlayer_Parms _CanRestartPlayer_Parms;

	this->ProcessEvent ( pFn_CanRestartPlayer, &_CanRestartPlayer_Parms, NULL );

	return _CanRestartPlayer_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.CanRestartPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::CanRestartPlayer ( )
{
	static UFunction* pFnCanRestartPlayer = NULL;

	if ( ! pFnCanRestartPlayer )
		pFnCanRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 45354 ];

	APgPlayerController_execCanRestartPlayer_Parms CanRestartPlayer_Parms;

	pFnCanRestartPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanRestartPlayer, &CanRestartPlayer_Parms, NULL );

	pFnCanRestartPlayer->FunctionFlags |= 0x400;

	return CanRestartPlayer_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController._SetOnlineStatus
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// int                            StatusId                       ( CPF_Parm )
// TArray< struct FLocalizedStringSetting > LocalizedStringSettings        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FSettingsProperty > Properties                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgPlayerController::event_SetOnlineStatus ( int StatusId, TArray< struct FLocalizedStringSetting >* LocalizedStringSettings, TArray< struct FSettingsProperty >* Properties )
{
	static UFunction* pFn_SetOnlineStatus = NULL;

	if ( ! pFn_SetOnlineStatus )
		pFn_SetOnlineStatus = (UFunction*) UObject::GObjObjects()->Data[ 45347 ];

	APgPlayerController_event_SetOnlineStatus_Parms _SetOnlineStatus_Parms;
	_SetOnlineStatus_Parms.StatusId = StatusId;

	this->ProcessEvent ( pFn_SetOnlineStatus, &_SetOnlineStatus_Parms, NULL );

	if ( LocalizedStringSettings )
		memcpy ( LocalizedStringSettings, &_SetOnlineStatus_Parms.LocalizedStringSettings, 0xC );

	if ( Properties )
		memcpy ( Properties, &_SetOnlineStatus_Parms.Properties, 0xC );
};

// Function GridGame.PgPlayerController._ClientSetOnlineStatus
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerController::event_ClientSetOnlineStatus ( )
{
	static UFunction* pFn_ClientSetOnlineStatus = NULL;

	if ( ! pFn_ClientSetOnlineStatus )
		pFn_ClientSetOnlineStatus = (UFunction*) UObject::GObjObjects()->Data[ 45346 ];

	APgPlayerController_event_ClientSetOnlineStatus_Parms _ClientSetOnlineStatus_Parms;

	this->ProcessEvent ( pFn_ClientSetOnlineStatus, &_ClientSetOnlineStatus_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientSetOnlineStatus
// [0x010205C0] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::ClientSetOnlineStatus ( )
{
	static UFunction* pFnClientSetOnlineStatus = NULL;

	if ( ! pFnClientSetOnlineStatus )
		pFnClientSetOnlineStatus = (UFunction*) UObject::GObjObjects()->Data[ 45345 ];

	APgPlayerController_execClientSetOnlineStatus_Parms ClientSetOnlineStatus_Parms;

	pFnClientSetOnlineStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientSetOnlineStatus, &ClientSetOnlineStatus_Parms, NULL );

	pFnClientSetOnlineStatus->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.FailChangeTeam
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventFailChangeTeam ( )
{
	static UFunction* pFnFailChangeTeam = NULL;

	if ( ! pFnFailChangeTeam )
		pFnFailChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 45344 ];

	APgPlayerController_eventFailChangeTeam_Parms FailChangeTeam_Parms;

	pFnFailChangeTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFailChangeTeam, &FailChangeTeam_Parms, NULL );

	pFnFailChangeTeam->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ServerChangeTeam
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void APgPlayerController::event_ServerChangeTeam ( int N )
{
	static UFunction* pFn_ServerChangeTeam = NULL;

	if ( ! pFn_ServerChangeTeam )
		pFn_ServerChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 45342 ];

	APgPlayerController_event_ServerChangeTeam_Parms _ServerChangeTeam_Parms;
	_ServerChangeTeam_Parms.N = N;

	this->ProcessEvent ( pFn_ServerChangeTeam, &_ServerChangeTeam_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerChangeTeam
// [0x002204C0] ( FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void APgPlayerController::ServerChangeTeam ( int N )
{
	static UFunction* pFnServerChangeTeam = NULL;

	if ( ! pFnServerChangeTeam )
		pFnServerChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 45340 ];

	APgPlayerController_execServerChangeTeam_Parms ServerChangeTeam_Parms;
	ServerChangeTeam_Parms.N = N;

	pFnServerChangeTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerChangeTeam, &ServerChangeTeam_Parms, NULL );

	pFnServerChangeTeam->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.UpdateVoicePermission
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::UpdateVoicePermission ( )
{
	static UFunction* pFnUpdateVoicePermission = NULL;

	if ( ! pFnUpdateVoicePermission )
		pFnUpdateVoicePermission = (UFunction*) UObject::GObjObjects()->Data[ 45339 ];

	APgPlayerController_execUpdateVoicePermission_Parms UpdateVoicePermission_Parms;

	pFnUpdateVoicePermission->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVoicePermission, &UpdateVoicePermission_Parms, NULL );

	pFnUpdateVoicePermission->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.IsMuted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            NetId                          ( CPF_Parm )

bool APgPlayerController::IsMuted ( struct FUniqueNetId NetId )
{
	static UFunction* pFnIsMuted = NULL;

	if ( ! pFnIsMuted )
		pFnIsMuted = (UFunction*) UObject::GObjObjects()->Data[ 45336 ];

	APgPlayerController_execIsMuted_Parms IsMuted_Parms;
	memcpy ( &IsMuted_Parms.NetId, &NetId, 0x2C );

	pFnIsMuted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMuted, &IsMuted_Parms, NULL );

	pFnIsMuted->FunctionFlags |= 0x400;

	return IsMuted_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.IsRemotelyMuted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            NetId                          ( CPF_Parm )

bool APgPlayerController::IsRemotelyMuted ( struct FUniqueNetId NetId )
{
	static UFunction* pFnIsRemotelyMuted = NULL;

	if ( ! pFnIsRemotelyMuted )
		pFnIsRemotelyMuted = (UFunction*) UObject::GObjObjects()->Data[ 45333 ];

	APgPlayerController_execIsRemotelyMuted_Parms IsRemotelyMuted_Parms;
	memcpy ( &IsRemotelyMuted_Parms.NetId, &NetId, 0x2C );

	pFnIsRemotelyMuted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRemotelyMuted, &IsRemotelyMuted_Parms, NULL );

	pFnIsRemotelyMuted->FunctionFlags |= 0x400;

	return IsRemotelyMuted_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.IsLocallyMuted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            NetId                          ( CPF_Parm )

bool APgPlayerController::IsLocallyMuted ( struct FUniqueNetId NetId )
{
	static UFunction* pFnIsLocallyMuted = NULL;

	if ( ! pFnIsLocallyMuted )
		pFnIsLocallyMuted = (UFunction*) UObject::GObjObjects()->Data[ 45330 ];

	APgPlayerController_execIsLocallyMuted_Parms IsLocallyMuted_Parms;
	memcpy ( &IsLocallyMuted_Parms.NetId, &NetId, 0x2C );

	pFnIsLocallyMuted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLocallyMuted, &IsLocallyMuted_Parms, NULL );

	pFnIsLocallyMuted->FunctionFlags |= 0x400;

	return IsLocallyMuted_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.UnmutePlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            NetId                          ( CPF_Parm )

void APgPlayerController::UnmutePlayer ( struct FUniqueNetId NetId )
{
	static UFunction* pFnUnmutePlayer = NULL;

	if ( ! pFnUnmutePlayer )
		pFnUnmutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45328 ];

	APgPlayerController_execUnmutePlayer_Parms UnmutePlayer_Parms;
	memcpy ( &UnmutePlayer_Parms.NetId, &NetId, 0x2C );

	pFnUnmutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnmutePlayer, &UnmutePlayer_Parms, NULL );

	pFnUnmutePlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.MutePlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            NetId                          ( CPF_Parm )

void APgPlayerController::MutePlayer ( struct FUniqueNetId NetId )
{
	static UFunction* pFnMutePlayer = NULL;

	if ( ! pFnMutePlayer )
		pFnMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45326 ];

	APgPlayerController_execMutePlayer_Parms MutePlayer_Parms;
	memcpy ( &MutePlayer_Parms.NetId, &NetId, 0x2C );

	pFnMutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMutePlayer, &MutePlayer_Parms, NULL );

	pFnMutePlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ClientWasKicked
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// unsigned long                  bBanned                        ( CPF_Parm )

void APgPlayerController::event_ClientWasKicked ( unsigned long bBanned )
{
	static UFunction* pFn_ClientWasKicked = NULL;

	if ( ! pFn_ClientWasKicked )
		pFn_ClientWasKicked = (UFunction*) UObject::GObjObjects()->Data[ 45324 ];

	APgPlayerController_event_ClientWasKicked_Parms _ClientWasKicked_Parms;
	_ClientWasKicked_Parms.bBanned = bBanned;

	this->ProcessEvent ( pFn_ClientWasKicked, &_ClientWasKicked_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientWasKicked
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  bBanned                        ( CPF_Parm )

void APgPlayerController::eventClientWasKicked ( unsigned long bBanned )
{
	static UFunction* pFnClientWasKicked = NULL;

	if ( ! pFnClientWasKicked )
		pFnClientWasKicked = (UFunction*) UObject::GObjObjects()->Data[ 45322 ];

	APgPlayerController_eventClientWasKicked_Parms ClientWasKicked_Parms;
	ClientWasKicked_Parms.bBanned = bBanned;

	pFnClientWasKicked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientWasKicked, &ClientWasKicked_Parms, NULL );

	pFnClientWasKicked->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ClientUnmutePlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::event_ClientUnmutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFn_ClientUnmutePlayer = NULL;

	if ( ! pFn_ClientUnmutePlayer )
		pFn_ClientUnmutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45320 ];

	APgPlayerController_event_ClientUnmutePlayer_Parms _ClientUnmutePlayer_Parms;
	memcpy ( &_ClientUnmutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	this->ProcessEvent ( pFn_ClientUnmutePlayer, &_ClientUnmutePlayer_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientUnmutePlayer
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::eventClientUnmutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFnClientUnmutePlayer = NULL;

	if ( ! pFnClientUnmutePlayer )
		pFnClientUnmutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45318 ];

	APgPlayerController_eventClientUnmutePlayer_Parms ClientUnmutePlayer_Parms;
	memcpy ( &ClientUnmutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	pFnClientUnmutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientUnmutePlayer, &ClientUnmutePlayer_Parms, NULL );

	pFnClientUnmutePlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ClientMutePlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::event_ClientMutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFn_ClientMutePlayer = NULL;

	if ( ! pFn_ClientMutePlayer )
		pFn_ClientMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45316 ];

	APgPlayerController_event_ClientMutePlayer_Parms _ClientMutePlayer_Parms;
	memcpy ( &_ClientMutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	this->ProcessEvent ( pFn_ClientMutePlayer, &_ClientMutePlayer_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientMutePlayer
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Parm )

void APgPlayerController::eventClientMutePlayer ( struct FUniqueNetId PlayerNetId )
{
	static UFunction* pFnClientMutePlayer = NULL;

	if ( ! pFnClientMutePlayer )
		pFnClientMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 45314 ];

	APgPlayerController_eventClientMutePlayer_Parms ClientMutePlayer_Parms;
	memcpy ( &ClientMutePlayer_Parms.PlayerNetId, &PlayerNetId, 0x2C );

	pFnClientMutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientMutePlayer, &ClientMutePlayer_Parms, NULL );

	pFnClientMutePlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.GetOnlineState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char APgPlayerController::GetOnlineState ( )
{
	static UFunction* pFnGetOnlineState = NULL;

	if ( ! pFnGetOnlineState )
		pFnGetOnlineState = (UFunction*) UObject::GObjObjects()->Data[ 45312 ];

	APgPlayerController_execGetOnlineState_Parms GetOnlineState_Parms;

	pFnGetOnlineState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOnlineState, &GetOnlineState_Parms, NULL );

	pFnGetOnlineState->FunctionFlags |= 0x400;

	return GetOnlineState_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.SetOnlineState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void APgPlayerController::SetOnlineState ( unsigned char NewState )
{
	static UFunction* pFnSetOnlineState = NULL;

	if ( ! pFnSetOnlineState )
		pFnSetOnlineState = (UFunction*) UObject::GObjObjects()->Data[ 45310 ];

	APgPlayerController_execSetOnlineState_Parms SetOnlineState_Parms;
	SetOnlineState_Parms.NewState = NewState;

	pFnSetOnlineState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOnlineState, &SetOnlineState_Parms, NULL );

	pFnSetOnlineState->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerSetOnlineState
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void APgPlayerController::eventServerSetOnlineState ( unsigned char NewState )
{
	static UFunction* pFnServerSetOnlineState = NULL;

	if ( ! pFnServerSetOnlineState )
		pFnServerSetOnlineState = (UFunction*) UObject::GObjObjects()->Data[ 45308 ];

	APgPlayerController_eventServerSetOnlineState_Parms ServerSetOnlineState_Parms;
	ServerSetOnlineState_Parms.NewState = NewState;

	pFnServerSetOnlineState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetOnlineState, &ServerSetOnlineState_Parms, NULL );

	pFnServerSetOnlineState->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.CanCommunicate
// [0x00040501] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::CanCommunicate ( )
{
	static UFunction* pFnCanCommunicate = NULL;

	if ( ! pFnCanCommunicate )
		pFnCanCommunicate = (UFunction*) UObject::GObjObjects()->Data[ 45306 ];

	APgPlayerController_execCanCommunicate_Parms CanCommunicate_Parms;

	pFnCanCommunicate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanCommunicate, &CanCommunicate_Parms, NULL );

	pFnCanCommunicate->FunctionFlags |= 0x400;

	return CanCommunicate_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController._GameHasEnded
// [0x00044803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AActor*                  EndGameFocus                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsWinner                      ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::event_GameHasEnded ( class AActor* EndGameFocus, unsigned long bIsWinner )
{
	static UFunction* pFn_GameHasEnded = NULL;

	if ( ! pFn_GameHasEnded )
		pFn_GameHasEnded = (UFunction*) UObject::GObjObjects()->Data[ 45303 ];

	APgPlayerController_event_GameHasEnded_Parms _GameHasEnded_Parms;
	_GameHasEnded_Parms.EndGameFocus = EndGameFocus;
	_GameHasEnded_Parms.bIsWinner = bIsWinner;

	this->ProcessEvent ( pFn_GameHasEnded, &_GameHasEnded_Parms, NULL );
};

// Function GridGame.PgPlayerController.GameHasEnded
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  EndGameFocus                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsWinner                      ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::GameHasEnded ( class AActor* EndGameFocus, unsigned long bIsWinner )
{
	static UFunction* pFnGameHasEnded = NULL;

	if ( ! pFnGameHasEnded )
		pFnGameHasEnded = (UFunction*) UObject::GObjObjects()->Data[ 45300 ];

	APgPlayerController_execGameHasEnded_Parms GameHasEnded_Parms;
	GameHasEnded_Parms.EndGameFocus = EndGameFocus;
	GameHasEnded_Parms.bIsWinner = bIsWinner;

	pFnGameHasEnded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGameHasEnded, &GameHasEnded_Parms, NULL );

	pFnGameHasEnded->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._Reset
// [0x00080803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerController::event_Reset ( )
{
	static UFunction* pFn_Reset = NULL;

	if ( ! pFn_Reset )
		pFn_Reset = (UFunction*) UObject::GObjObjects()->Data[ 45299 ];

	APgPlayerController_event_Reset_Parms _Reset_Parms;

	this->ProcessEvent ( pFn_Reset, &_Reset_Parms, NULL );
};

// Function GridGame.PgPlayerController.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 45298 ];

	APgPlayerController_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ShowPreGameTips
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// float                          fDuration                      ( CPF_Parm )

void APgPlayerController::eventShowPreGameTips ( float fDuration )
{
	static UFunction* pFnShowPreGameTips = NULL;

	if ( ! pFnShowPreGameTips )
		pFnShowPreGameTips = (UFunction*) UObject::GObjObjects()->Data[ 45296 ];

	APgPlayerController_eventShowPreGameTips_Parms ShowPreGameTips_Parms;
	ShowPreGameTips_Parms.fDuration = fDuration;

	pFnShowPreGameTips->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowPreGameTips, &ShowPreGameTips_Parms, NULL );

	pFnShowPreGameTips->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.energy
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::energy ( )
{
	static UFunction* pFnenergy = NULL;

	if ( ! pFnenergy )
		pFnenergy = (UFunction*) UObject::GObjObjects()->Data[ 45295 ];

	APgPlayerController_execenergy_Parms energy_Parms;

	pFnenergy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnenergy, &energy_Parms, NULL );

	pFnenergy->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerEnergy
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventServerEnergy ( )
{
	static UFunction* pFnServerEnergy = NULL;

	if ( ! pFnServerEnergy )
		pFnServerEnergy = (UFunction*) UObject::GObjObjects()->Data[ 45294 ];

	APgPlayerController_eventServerEnergy_Parms ServerEnergy_Parms;

	pFnServerEnergy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerEnergy, &ServerEnergy_Parms, NULL );

	pFnServerEnergy->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.GiveEnergy
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::GiveEnergy ( )
{
	static UFunction* pFnGiveEnergy = NULL;

	if ( ! pFnGiveEnergy )
		pFnGiveEnergy = (UFunction*) UObject::GObjObjects()->Data[ 45293 ];

	APgPlayerController_execGiveEnergy_Parms GiveEnergy_Parms;

	pFnGiveEnergy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGiveEnergy, &GiveEnergy_Parms, NULL );

	pFnGiveEnergy->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerGiveEnergy
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventServerGiveEnergy ( )
{
	static UFunction* pFnServerGiveEnergy = NULL;

	if ( ! pFnServerGiveEnergy )
		pFnServerGiveEnergy = (UFunction*) UObject::GObjObjects()->Data[ 45292 ];

	APgPlayerController_eventServerGiveEnergy_Parms ServerGiveEnergy_Parms;

	pFnServerGiveEnergy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerGiveEnergy, &ServerGiveEnergy_Parms, NULL );

	pFnServerGiveEnergy->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdjustRotationToFaceTarget
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                ViewRotation                   ( CPF_Parm | CPF_OutParm )

void APgPlayerController::AdjustRotationToFaceTarget ( float DeltaTime, struct FRotator* ViewRotation )
{
	static UFunction* pFnAdjustRotationToFaceTarget = NULL;

	if ( ! pFnAdjustRotationToFaceTarget )
		pFnAdjustRotationToFaceTarget = (UFunction*) UObject::GObjObjects()->Data[ 45265 ];

	APgPlayerController_execAdjustRotationToFaceTarget_Parms AdjustRotationToFaceTarget_Parms;
	AdjustRotationToFaceTarget_Parms.DeltaTime = DeltaTime;

	pFnAdjustRotationToFaceTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustRotationToFaceTarget, &AdjustRotationToFaceTarget_Parms, NULL );

	pFnAdjustRotationToFaceTarget->FunctionFlags |= 0x400;

	if ( ViewRotation )
		memcpy ( ViewRotation, &AdjustRotationToFaceTarget_Parms.ViewRotation, 0xC );
};

// Function GridGame.PgPlayerController.ServerSetTargetedSmartObject
// [0x00220C40] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class APgSmartObject*          targetedSmartObject            ( CPF_Parm )

void APgPlayerController::eventServerSetTargetedSmartObject ( class APgSmartObject* targetedSmartObject )
{
	static UFunction* pFnServerSetTargetedSmartObject = NULL;

	if ( ! pFnServerSetTargetedSmartObject )
		pFnServerSetTargetedSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 45288 ];

	APgPlayerController_eventServerSetTargetedSmartObject_Parms ServerSetTargetedSmartObject_Parms;
	ServerSetTargetedSmartObject_Parms.targetedSmartObject = targetedSmartObject;

	pFnServerSetTargetedSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetTargetedSmartObject, &ServerSetTargetedSmartObject_Parms, NULL );

	pFnServerSetTargetedSmartObject->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetTargetedSmartObject
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgSmartObject*          targetedSmartObject            ( CPF_Parm )

void APgPlayerController::SetTargetedSmartObject ( class APgSmartObject* targetedSmartObject )
{
	static UFunction* pFnSetTargetedSmartObject = NULL;

	if ( ! pFnSetTargetedSmartObject )
		pFnSetTargetedSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 45286 ];

	APgPlayerController_execSetTargetedSmartObject_Parms SetTargetedSmartObject_Parms;
	SetTargetedSmartObject_Parms.targetedSmartObject = targetedSmartObject;

	pFnSetTargetedSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetedSmartObject, &SetTargetedSmartObject_Parms, NULL );

	pFnSetTargetedSmartObject->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerSetTarget
// [0x00220C40] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void APgPlayerController::eventServerSetTarget ( class AActor* Target )
{
	static UFunction* pFnServerSetTarget = NULL;

	if ( ! pFnServerSetTarget )
		pFnServerSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 45284 ];

	APgPlayerController_eventServerSetTarget_Parms ServerSetTarget_Parms;
	ServerSetTarget_Parms.Target = Target;

	pFnServerSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetTarget, &ServerSetTarget_Parms, NULL );

	pFnServerSetTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetTarget
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void APgPlayerController::SetTarget ( class AActor* Target )
{
	static UFunction* pFnSetTarget = NULL;

	if ( ! pFnSetTarget )
		pFnSetTarget = (UFunction*) UObject::GObjObjects()->Data[ 45282 ];

	APgPlayerController_execSetTarget_Parms SetTarget_Parms;
	SetTarget_Parms.Target = Target;

	pFnSetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTarget, &SetTarget_Parms, NULL );

	pFnSetTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClearAllTargets
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::ClearAllTargets ( )
{
	static UFunction* pFnClearAllTargets = NULL;

	if ( ! pFnClearAllTargets )
		pFnClearAllTargets = (UFunction*) UObject::GObjObjects()->Data[ 45281 ];

	APgPlayerController_execClearAllTargets_Parms ClearAllTargets_Parms;

	pFnClearAllTargets->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearAllTargets, &ClearAllTargets_Parms, NULL );

	pFnClearAllTargets->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.GetTarget
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  TargetClass                    ( CPF_OptionalParm | CPF_Parm )

class AActor* APgPlayerController::GetTarget ( class UClass* TargetClass )
{
	static UFunction* pFnGetTarget = NULL;

	if ( ! pFnGetTarget )
		pFnGetTarget = (UFunction*) UObject::GObjObjects()->Data[ 45278 ];

	APgPlayerController_execGetTarget_Parms GetTarget_Parms;
	GetTarget_Parms.TargetClass = TargetClass;

	pFnGetTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTarget, &GetTarget_Parms, NULL );

	pFnGetTarget->FunctionFlags |= 0x400;

	return GetTarget_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.StopJumping
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::StopJumping ( )
{
	static UFunction* pFnStopJumping = NULL;

	if ( ! pFnStopJumping )
		pFnStopJumping = (UFunction*) UObject::GObjObjects()->Data[ 45277 ];

	APgPlayerController_execStopJumping_Parms StopJumping_Parms;

	this->ProcessEvent ( pFnStopJumping, &StopJumping_Parms, NULL );
};

// Function GridGame.PgPlayerController.KeepJumping
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::KeepJumping ( )
{
	static UFunction* pFnKeepJumping = NULL;

	if ( ! pFnKeepJumping )
		pFnKeepJumping = (UFunction*) UObject::GObjObjects()->Data[ 45276 ];

	APgPlayerController_execKeepJumping_Parms KeepJumping_Parms;

	this->ProcessEvent ( pFnKeepJumping, &KeepJumping_Parms, NULL );
};

// Function GridGame.PgPlayerController.StopSpamming
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::StopSpamming ( )
{
	static UFunction* pFnStopSpamming = NULL;

	if ( ! pFnStopSpamming )
		pFnStopSpamming = (UFunction*) UObject::GObjObjects()->Data[ 45275 ];

	APgPlayerController_execStopSpamming_Parms StopSpamming_Parms;

	this->ProcessEvent ( pFnStopSpamming, &StopSpamming_Parms, NULL );
};

// Function GridGame.PgPlayerController.KeepSpamming
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::KeepSpamming ( )
{
	static UFunction* pFnKeepSpamming = NULL;

	if ( ! pFnKeepSpamming )
		pFnKeepSpamming = (UFunction*) UObject::GObjObjects()->Data[ 45274 ];

	APgPlayerController_execKeepSpamming_Parms KeepSpamming_Parms;

	this->ProcessEvent ( pFnKeepSpamming, &KeepSpamming_Parms, NULL );
};

// Function GridGame.PgPlayerController._IgnoreLookInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewLookInput                  ( CPF_Parm )

void APgPlayerController::event_IgnoreLookInput ( unsigned long bNewLookInput )
{
	static UFunction* pFn_IgnoreLookInput = NULL;

	if ( ! pFn_IgnoreLookInput )
		pFn_IgnoreLookInput = (UFunction*) UObject::GObjObjects()->Data[ 45272 ];

	APgPlayerController_event_IgnoreLookInput_Parms _IgnoreLookInput_Parms;
	_IgnoreLookInput_Parms.bNewLookInput = bNewLookInput;

	this->ProcessEvent ( pFn_IgnoreLookInput, &_IgnoreLookInput_Parms, NULL );
};

// Function GridGame.PgPlayerController._IgnoreMoveInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewMoveInput                  ( CPF_Parm )

void APgPlayerController::event_IgnoreMoveInput ( unsigned long bNewMoveInput )
{
	static UFunction* pFn_IgnoreMoveInput = NULL;

	if ( ! pFn_IgnoreMoveInput )
		pFn_IgnoreMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 45270 ];

	APgPlayerController_event_IgnoreMoveInput_Parms _IgnoreMoveInput_Parms;
	_IgnoreMoveInput_Parms.bNewMoveInput = bNewMoveInput;

	this->ProcessEvent ( pFn_IgnoreMoveInput, &_IgnoreMoveInput_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerAcknowledgePossession
// [0x002200C2] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void APgPlayerController::ServerAcknowledgePossession ( class APawn* P )
{
	static UFunction* pFnServerAcknowledgePossession = NULL;

	if ( ! pFnServerAcknowledgePossession )
		pFnServerAcknowledgePossession = (UFunction*) UObject::GObjObjects()->Data[ 45268 ];

	APgPlayerController_execServerAcknowledgePossession_Parms ServerAcknowledgePossession_Parms;
	ServerAcknowledgePossession_Parms.P = P;

	this->ProcessEvent ( pFnServerAcknowledgePossession, &ServerAcknowledgePossession_Parms, NULL );
};

// Function GridGame.PgPlayerController.AcknowledgePossession
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void APgPlayerController::AcknowledgePossession ( class APawn* P )
{
	static UFunction* pFnAcknowledgePossession = NULL;

	if ( ! pFnAcknowledgePossession )
		pFnAcknowledgePossession = (UFunction*) UObject::GObjObjects()->Data[ 45266 ];

	APgPlayerController_execAcknowledgePossession_Parms AcknowledgePossession_Parms;
	AcknowledgePossession_Parms.P = P;

	this->ProcessEvent ( pFnAcknowledgePossession, &AcknowledgePossession_Parms, NULL );
};

// Function GridGame.PgPlayerController.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgPlayerController::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 45253 ];

	APgPlayerController_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function GridGame.PgPlayerController.PlayerCanSee
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Point                          ( CPF_Parm )

bool APgPlayerController::PlayerCanSee ( struct FVector Point )
{
	static UFunction* pFnPlayerCanSee = NULL;

	if ( ! pFnPlayerCanSee )
		pFnPlayerCanSee = (UFunction*) UObject::GObjObjects()->Data[ 45250 ];

	APgPlayerController_execPlayerCanSee_Parms PlayerCanSee_Parms;
	memcpy ( &PlayerCanSee_Parms.Point, &Point, 0xC );

	pFnPlayerCanSee->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerCanSee, &PlayerCanSee_Parms, NULL );

	pFnPlayerCanSee->FunctionFlags |= 0x400;

	return PlayerCanSee_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.PlayerTick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgPlayerController::eventPlayerTick ( float DeltaTime )
{
	static UFunction* pFnPlayerTick = NULL;

	if ( ! pFnPlayerTick )
		pFnPlayerTick = (UFunction*) UObject::GObjObjects()->Data[ 45248 ];

	APgPlayerController_eventPlayerTick_Parms PlayerTick_Parms;
	PlayerTick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerTick, &PlayerTick_Parms, NULL );
};

// Function GridGame.PgPlayerController.HandleWalking
// [0x00020002] 
// Parameters infos:

void APgPlayerController::HandleWalking ( )
{
	static UFunction* pFnHandleWalking = NULL;

	if ( ! pFnHandleWalking )
		pFnHandleWalking = (UFunction*) UObject::GObjObjects()->Data[ 45247 ];

	APgPlayerController_execHandleWalking_Parms HandleWalking_Parms;

	this->ProcessEvent ( pFnHandleWalking, &HandleWalking_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientRestart
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )

void APgPlayerController::ClientRestart ( class APawn* NewPawn )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 45245 ];

	APgPlayerController_execClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetUseTiltForwardAndBack
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void APgPlayerController::SetUseTiltForwardAndBack ( unsigned long bActive )
{
	static UFunction* pFnSetUseTiltForwardAndBack = NULL;

	if ( ! pFnSetUseTiltForwardAndBack )
		pFnSetUseTiltForwardAndBack = (UFunction*) UObject::GObjObjects()->Data[ 45243 ];

	APgPlayerController_execSetUseTiltForwardAndBack_Parms SetUseTiltForwardAndBack_Parms;
	SetUseTiltForwardAndBack_Parms.bActive = bActive;

	pFnSetUseTiltForwardAndBack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetUseTiltForwardAndBack, &SetUseTiltForwardAndBack_Parms, NULL );

	pFnSetUseTiltForwardAndBack->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetOnlyUseControllerTiltInput
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void APgPlayerController::SetOnlyUseControllerTiltInput ( unsigned long bActive )
{
	static UFunction* pFnSetOnlyUseControllerTiltInput = NULL;

	if ( ! pFnSetOnlyUseControllerTiltInput )
		pFnSetOnlyUseControllerTiltInput = (UFunction*) UObject::GObjObjects()->Data[ 45241 ];

	APgPlayerController_execSetOnlyUseControllerTiltInput_Parms SetOnlyUseControllerTiltInput_Parms;
	SetOnlyUseControllerTiltInput_Parms.bActive = bActive;

	pFnSetOnlyUseControllerTiltInput->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOnlyUseControllerTiltInput, &SetOnlyUseControllerTiltInput_Parms, NULL );

	pFnSetOnlyUseControllerTiltInput->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetControllerTiltActive
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void APgPlayerController::SetControllerTiltActive ( unsigned long bActive )
{
	static UFunction* pFnSetControllerTiltActive = NULL;

	if ( ! pFnSetControllerTiltActive )
		pFnSetControllerTiltActive = (UFunction*) UObject::GObjObjects()->Data[ 45239 ];

	APgPlayerController_execSetControllerTiltActive_Parms SetControllerTiltActive_Parms;
	SetControllerTiltActive_Parms.bActive = bActive;

	pFnSetControllerTiltActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetControllerTiltActive, &SetControllerTiltActive_Parms, NULL );

	pFnSetControllerTiltActive->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetControllerTiltDesiredIfAvailable
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void APgPlayerController::SetControllerTiltDesiredIfAvailable ( unsigned long bActive )
{
	static UFunction* pFnSetControllerTiltDesiredIfAvailable = NULL;

	if ( ! pFnSetControllerTiltDesiredIfAvailable )
		pFnSetControllerTiltDesiredIfAvailable = (UFunction*) UObject::GObjObjects()->Data[ 45237 ];

	APgPlayerController_execSetControllerTiltDesiredIfAvailable_Parms SetControllerTiltDesiredIfAvailable_Parms;
	SetControllerTiltDesiredIfAvailable_Parms.bActive = bActive;

	pFnSetControllerTiltDesiredIfAvailable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetControllerTiltDesiredIfAvailable, &SetControllerTiltDesiredIfAvailable_Parms, NULL );

	pFnSetControllerTiltDesiredIfAvailable->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.IsControllerTiltActive
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::IsControllerTiltActive ( )
{
	static UFunction* pFnIsControllerTiltActive = NULL;

	if ( ! pFnIsControllerTiltActive )
		pFnIsControllerTiltActive = (UFunction*) UObject::GObjObjects()->Data[ 45235 ];

	APgPlayerController_execIsControllerTiltActive_Parms IsControllerTiltActive_Parms;

	pFnIsControllerTiltActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsControllerTiltActive, &IsControllerTiltActive_Parms, NULL );

	pFnIsControllerTiltActive->FunctionFlags |= 0x400;

	return IsControllerTiltActive_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.TriggerInputSmartObjects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  pressed                        ( CPF_Parm )
// struct FName                   Button                         ( CPF_Parm )

bool APgPlayerController::TriggerInputSmartObjects ( unsigned long pressed, struct FName Button )
{
	static UFunction* pFnTriggerInputSmartObjects = NULL;

	if ( ! pFnTriggerInputSmartObjects )
		pFnTriggerInputSmartObjects = (UFunction*) UObject::GObjObjects()->Data[ 45231 ];

	APgPlayerController_execTriggerInputSmartObjects_Parms TriggerInputSmartObjects_Parms;
	TriggerInputSmartObjects_Parms.pressed = pressed;
	memcpy ( &TriggerInputSmartObjects_Parms.Button, &Button, 0x8 );

	pFnTriggerInputSmartObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerInputSmartObjects, &TriggerInputSmartObjects_Parms, NULL );

	pFnTriggerInputSmartObjects->FunctionFlags |= 0x400;

	return TriggerInputSmartObjects_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.TriggerInputPlugIns
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  pressed                        ( CPF_Parm )
// struct FName                   Button                         ( CPF_Parm )

bool APgPlayerController::TriggerInputPlugIns ( unsigned long pressed, struct FName Button )
{
	static UFunction* pFnTriggerInputPlugIns = NULL;

	if ( ! pFnTriggerInputPlugIns )
		pFnTriggerInputPlugIns = (UFunction*) UObject::GObjObjects()->Data[ 45227 ];

	APgPlayerController_execTriggerInputPlugIns_Parms TriggerInputPlugIns_Parms;
	TriggerInputPlugIns_Parms.pressed = pressed;
	memcpy ( &TriggerInputPlugIns_Parms.Button, &Button, 0x8 );

	pFnTriggerInputPlugIns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerInputPlugIns, &TriggerInputPlugIns_Parms, NULL );

	pFnTriggerInputPlugIns->FunctionFlags |= 0x400;

	return TriggerInputPlugIns_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.TriggerKismetInputEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  pressed                        ( CPF_Parm )
// struct FName                   Button                         ( CPF_Parm )

bool APgPlayerController::TriggerKismetInputEvents ( unsigned long pressed, struct FName Button )
{
	static UFunction* pFnTriggerKismetInputEvents = NULL;

	if ( ! pFnTriggerKismetInputEvents )
		pFnTriggerKismetInputEvents = (UFunction*) UObject::GObjObjects()->Data[ 45223 ];

	APgPlayerController_execTriggerKismetInputEvents_Parms TriggerKismetInputEvents_Parms;
	TriggerKismetInputEvents_Parms.pressed = pressed;
	memcpy ( &TriggerKismetInputEvents_Parms.Button, &Button, 0x8 );

	pFnTriggerKismetInputEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerKismetInputEvents, &TriggerKismetInputEvents_Parms, NULL );

	pFnTriggerKismetInputEvents->FunctionFlags |= 0x400;

	return TriggerKismetInputEvents_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.CheckMoveController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::CheckMoveController ( )
{
	static UFunction* pFnCheckMoveController = NULL;

	if ( ! pFnCheckMoveController )
		pFnCheckMoveController = (UFunction*) UObject::GObjObjects()->Data[ 45222 ];

	APgPlayerController_execCheckMoveController_Parms CheckMoveController_Parms;

	pFnCheckMoveController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckMoveController, &CheckMoveController_Parms, NULL );

	pFnCheckMoveController->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._UnPossess
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerController::event_UnPossess ( )
{
	static UFunction* pFn_UnPossess = NULL;

	if ( ! pFn_UnPossess )
		pFn_UnPossess = (UFunction*) UObject::GObjObjects()->Data[ 45221 ];

	APgPlayerController_event_UnPossess_Parms _UnPossess_Parms;

	this->ProcessEvent ( pFn_UnPossess, &_UnPossess_Parms, NULL );
};

// Function GridGame.PgPlayerController.UnPossess
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::UnPossess ( )
{
	static UFunction* pFnUnPossess = NULL;

	if ( ! pFnUnPossess )
		pFnUnPossess = (UFunction*) UObject::GObjObjects()->Data[ 45220 ];

	APgPlayerController_execUnPossess_Parms UnPossess_Parms;

	pFnUnPossess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnPossess, &UnPossess_Parms, NULL );

	pFnUnPossess->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void APgPlayerController::eventPossess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 45217 ];

	APgPlayerController_eventPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function GridGame.PgPlayerController.PostPossess
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::PostPossess ( )
{
	static UFunction* pFnPostPossess = NULL;

	if ( ! pFnPostPossess )
		pFnPostPossess = (UFunction*) UObject::GObjObjects()->Data[ 45216 ];

	APgPlayerController_execPostPossess_Parms PostPossess_Parms;

	pFnPostPossess->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostPossess, &PostPossess_Parms, NULL );

	pFnPostPossess->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.StopAllSideEffects
// [0x010205C0] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::StopAllSideEffects ( )
{
	static UFunction* pFnStopAllSideEffects = NULL;

	if ( ! pFnStopAllSideEffects )
		pFnStopAllSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45215 ];

	APgPlayerController_execStopAllSideEffects_Parms StopAllSideEffects_Parms;

	pFnStopAllSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopAllSideEffects, &StopAllSideEffects_Parms, NULL );

	pFnStopAllSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.StopEffect
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgSideEffect*           Effect                         ( CPF_Parm )

void APgPlayerController::StopEffect ( class UPgSideEffect* Effect )
{
	static UFunction* pFnStopEffect = NULL;

	if ( ! pFnStopEffect )
		pFnStopEffect = (UFunction*) UObject::GObjObjects()->Data[ 45213 ];

	APgPlayerController_execStopEffect_Parms StopEffect_Parms;
	StopEffect_Parms.Effect = Effect;

	pFnStopEffect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopEffect, &StopEffect_Parms, NULL );

	pFnStopEffect->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.UpdateQueuedSideEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APgPlayerController::UpdateQueuedSideEffects ( float DeltaSeconds )
{
	static UFunction* pFnUpdateQueuedSideEffects = NULL;

	if ( ! pFnUpdateQueuedSideEffects )
		pFnUpdateQueuedSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45211 ];

	APgPlayerController_execUpdateQueuedSideEffects_Parms UpdateQueuedSideEffects_Parms;
	UpdateQueuedSideEffects_Parms.DeltaSeconds = DeltaSeconds;

	pFnUpdateQueuedSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateQueuedSideEffects, &UpdateQueuedSideEffects_Parms, NULL );

	pFnUpdateQueuedSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.UnQueueSideEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgSideEffectContainer*  EffectContainer                ( CPF_Const | CPF_Parm )

void APgPlayerController::UnQueueSideEffects ( class UPgSideEffectContainer* EffectContainer )
{
	static UFunction* pFnUnQueueSideEffects = NULL;

	if ( ! pFnUnQueueSideEffects )
		pFnUnQueueSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45209 ];

	APgPlayerController_execUnQueueSideEffects_Parms UnQueueSideEffects_Parms;
	UnQueueSideEffects_Parms.EffectContainer = EffectContainer;

	pFnUnQueueSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnQueueSideEffects, &UnQueueSideEffects_Parms, NULL );

	pFnUnQueueSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.QueueSideEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgSideEffectContainer*  EffectContainer                ( CPF_Const | CPF_Parm )
// class AActor*                  Epicenter                      ( CPF_Const | CPF_Parm )

void APgPlayerController::QueueSideEffects ( class UPgSideEffectContainer* EffectContainer, class AActor* Epicenter )
{
	static UFunction* pFnQueueSideEffects = NULL;

	if ( ! pFnQueueSideEffects )
		pFnQueueSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 45206 ];

	APgPlayerController_execQueueSideEffects_Parms QueueSideEffects_Parms;
	QueueSideEffects_Parms.EffectContainer = EffectContainer;
	QueueSideEffects_Parms.Epicenter = Epicenter;

	pFnQueueSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueueSideEffects, &QueueSideEffects_Parms, NULL );

	pFnQueueSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.DebugCamToFixedCamEnd
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::DebugCamToFixedCamEnd ( )
{
	static UFunction* pFnDebugCamToFixedCamEnd = NULL;

	if ( ! pFnDebugCamToFixedCamEnd )
		pFnDebugCamToFixedCamEnd = (UFunction*) UObject::GObjObjects()->Data[ 45205 ];

	APgPlayerController_execDebugCamToFixedCamEnd_Parms DebugCamToFixedCamEnd_Parms;

	this->ProcessEvent ( pFnDebugCamToFixedCamEnd, &DebugCamToFixedCamEnd_Parms, NULL );
};

// Function GridGame.PgPlayerController.DebugCamToFixedCamStart
// [0x00020002] 
// Parameters infos:
// class APgDebugCameraController* PC                             ( CPF_Parm )

void APgPlayerController::DebugCamToFixedCamStart ( class APgDebugCameraController* PC )
{
	static UFunction* pFnDebugCamToFixedCamStart = NULL;

	if ( ! pFnDebugCamToFixedCamStart )
		pFnDebugCamToFixedCamStart = (UFunction*) UObject::GObjObjects()->Data[ 45203 ];

	APgPlayerController_execDebugCamToFixedCamStart_Parms DebugCamToFixedCamStart_Parms;
	DebugCamToFixedCamStart_Parms.PC = PC;

	this->ProcessEvent ( pFnDebugCamToFixedCamStart, &DebugCamToFixedCamStart_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetDifficultyLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Level                          ( CPF_Parm )

void APgPlayerController::SetDifficultyLevel ( unsigned char Level )
{
	static UFunction* pFnSetDifficultyLevel = NULL;

	if ( ! pFnSetDifficultyLevel )
		pFnSetDifficultyLevel = (UFunction*) UObject::GObjObjects()->Data[ 45201 ];

	APgPlayerController_execSetDifficultyLevel_Parms SetDifficultyLevel_Parms;
	SetDifficultyLevel_Parms.Level = Level;

	pFnSetDifficultyLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDifficultyLevel, &SetDifficultyLevel_Parms, NULL );

	pFnSetDifficultyLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.GetDifficultyLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char APgPlayerController::GetDifficultyLevel ( )
{
	static UFunction* pFnGetDifficultyLevel = NULL;

	if ( ! pFnGetDifficultyLevel )
		pFnGetDifficultyLevel = (UFunction*) UObject::GObjObjects()->Data[ 45199 ];

	APgPlayerController_execGetDifficultyLevel_Parms GetDifficultyLevel_Parms;

	pFnGetDifficultyLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDifficultyLevel, &GetDifficultyLevel_Parms, NULL );

	pFnGetDifficultyLevel->FunctionFlags |= 0x400;

	return GetDifficultyLevel_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.CanPerformMagDisc
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::CanPerformMagDisc ( )
{
	static UFunction* pFnCanPerformMagDisc = NULL;

	if ( ! pFnCanPerformMagDisc )
		pFnCanPerformMagDisc = (UFunction*) UObject::GObjObjects()->Data[ 45197 ];

	APgPlayerController_execCanPerformMagDisc_Parms CanPerformMagDisc_Parms;

	pFnCanPerformMagDisc->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPerformMagDisc, &CanPerformMagDisc_Parms, NULL );

	pFnCanPerformMagDisc->FunctionFlags |= 0x400;

	return CanPerformMagDisc_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.GetTargetedSmartObj
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgSmartObject*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgSmartObject* APgPlayerController::GetTargetedSmartObj ( )
{
	static UFunction* pFnGetTargetedSmartObj = NULL;

	if ( ! pFnGetTargetedSmartObj )
		pFnGetTargetedSmartObj = (UFunction*) UObject::GObjObjects()->Data[ 45195 ];

	APgPlayerController_execGetTargetedSmartObj_Parms GetTargetedSmartObj_Parms;

	pFnGetTargetedSmartObj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetedSmartObj, &GetTargetedSmartObj_Parms, NULL );

	pFnGetTargetedSmartObj->FunctionFlags |= 0x400;

	return GetTargetedSmartObj_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.UseTargetedSmartObj
// [0x00020700] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::UseTargetedSmartObj ( )
{
	static UFunction* pFnUseTargetedSmartObj = NULL;

	if ( ! pFnUseTargetedSmartObj )
		pFnUseTargetedSmartObj = (UFunction*) UObject::GObjObjects()->Data[ 45194 ];

	APgPlayerController_execUseTargetedSmartObj_Parms UseTargetedSmartObj_Parms;

	pFnUseTargetedSmartObj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseTargetedSmartObj, &UseTargetedSmartObj_Parms, NULL );

	pFnUseTargetedSmartObj->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.CanUseTargetedSmartObj
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::CanUseTargetedSmartObj ( )
{
	static UFunction* pFnCanUseTargetedSmartObj = NULL;

	if ( ! pFnCanUseTargetedSmartObj )
		pFnCanUseTargetedSmartObj = (UFunction*) UObject::GObjObjects()->Data[ 45192 ];

	APgPlayerController_execCanUseTargetedSmartObj_Parms CanUseTargetedSmartObj_Parms;

	pFnCanUseTargetedSmartObj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseTargetedSmartObj, &CanUseTargetedSmartObj_Parms, NULL );

	pFnCanUseTargetedSmartObj->FunctionFlags |= 0x400;

	return CanUseTargetedSmartObj_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.DifficultyLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Level                          ( CPF_Parm )

void APgPlayerController::DifficultyLevel ( int Level )
{
	static UFunction* pFnDifficultyLevel = NULL;

	if ( ! pFnDifficultyLevel )
		pFnDifficultyLevel = (UFunction*) UObject::GObjObjects()->Data[ 45190 ];

	APgPlayerController_execDifficultyLevel_Parms DifficultyLevel_Parms;
	DifficultyLevel_Parms.Level = Level;

	this->ProcessEvent ( pFnDifficultyLevel, &DifficultyLevel_Parms, NULL );
};

// Function GridGame.PgPlayerController.RequestShowMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Open                           ( CPF_Parm )

void APgPlayerController::RequestShowMenu ( unsigned long Open )
{
	static UFunction* pFnRequestShowMenu = NULL;

	if ( ! pFnRequestShowMenu )
		pFnRequestShowMenu = (UFunction*) UObject::GObjObjects()->Data[ 45188 ];

	APgPlayerController_execRequestShowMenu_Parms RequestShowMenu_Parms;
	RequestShowMenu_Parms.Open = Open;

	pFnRequestShowMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestShowMenu, &RequestShowMenu_Parms, NULL );

	pFnRequestShowMenu->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ShowMenu
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::ShowMenu ( )
{
	static UFunction* pFnShowMenu = NULL;

	if ( ! pFnShowMenu )
		pFnShowMenu = (UFunction*) UObject::GObjObjects()->Data[ 45187 ];

	APgPlayerController_execShowMenu_Parms ShowMenu_Parms;

	pFnShowMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowMenu, &ShowMenu_Parms, NULL );

	pFnShowMenu->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.KismetEvent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  pressed                        ( CPF_Parm )
// struct FName                   Button                         ( CPF_Parm )

void APgPlayerController::KismetEvent ( unsigned long pressed, struct FName Button )
{
	static UFunction* pFnKismetEvent = NULL;

	if ( ! pFnKismetEvent )
		pFnKismetEvent = (UFunction*) UObject::GObjObjects()->Data[ 45184 ];

	APgPlayerController_execKismetEvent_Parms KismetEvent_Parms;
	KismetEvent_Parms.pressed = pressed;
	memcpy ( &KismetEvent_Parms.Button, &Button, 0x8 );

	this->ProcessEvent ( pFnKismetEvent, &KismetEvent_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerAdminRestartAll
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgPlayerController::eventServerAdminRestartAll ( )
{
	static UFunction* pFnServerAdminRestartAll = NULL;

	if ( ! pFnServerAdminRestartAll )
		pFnServerAdminRestartAll = (UFunction*) UObject::GObjObjects()->Data[ 45183 ];

	APgPlayerController_eventServerAdminRestartAll_Parms ServerAdminRestartAll_Parms;

	pFnServerAdminRestartAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdminRestartAll, &ServerAdminRestartAll_Parms, NULL );

	pFnServerAdminRestartAll->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.AdminRestartAll
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APgPlayerController::AdminRestartAll ( )
{
	static UFunction* pFnAdminRestartAll = NULL;

	if ( ! pFnAdminRestartAll )
		pFnAdminRestartAll = (UFunction*) UObject::GObjObjects()->Data[ 45182 ];

	APgPlayerController_execAdminRestartAll_Parms AdminRestartAll_Parms;

	pFnAdminRestartAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdminRestartAll, &AdminRestartAll_Parms, NULL );

	pFnAdminRestartAll->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.RestartLastCheckpoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  full                           ( CPF_Parm )

bool APgPlayerController::RestartLastCheckpoint ( unsigned long full )
{
	static UFunction* pFnRestartLastCheckpoint = NULL;

	if ( ! pFnRestartLastCheckpoint )
		pFnRestartLastCheckpoint = (UFunction*) UObject::GObjObjects()->Data[ 45179 ];

	APgPlayerController_execRestartLastCheckpoint_Parms RestartLastCheckpoint_Parms;
	RestartLastCheckpoint_Parms.full = full;

	pFnRestartLastCheckpoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestartLastCheckpoint, &RestartLastCheckpoint_Parms, NULL );

	pFnRestartLastCheckpoint->FunctionFlags |= 0x400;

	return RestartLastCheckpoint_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.PerformDodge
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::PerformDodge ( )
{
	static UFunction* pFnPerformDodge = NULL;

	if ( ! pFnPerformDodge )
		pFnPerformDodge = (UFunction*) UObject::GObjObjects()->Data[ 45178 ];

	APgPlayerController_execPerformDodge_Parms PerformDodge_Parms;

	this->ProcessEvent ( pFnPerformDodge, &PerformDodge_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetTargetScan
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  targetScan                     ( CPF_Parm )
// float                          targetScanAngle                ( CPF_OptionalParm | CPF_Parm )

void APgPlayerController::SetTargetScan ( unsigned char targetScan, float targetScanAngle )
{
	static UFunction* pFnSetTargetScan = NULL;

	if ( ! pFnSetTargetScan )
		pFnSetTargetScan = (UFunction*) UObject::GObjObjects()->Data[ 45175 ];

	APgPlayerController_execSetTargetScan_Parms SetTargetScan_Parms;
	SetTargetScan_Parms.targetScan = targetScan;
	SetTargetScan_Parms.targetScanAngle = targetScanAngle;

	this->ProcessEvent ( pFnSetTargetScan, &SetTargetScan_Parms, NULL );
};

// Function GridGame.PgPlayerController.SwitchTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::SwitchTarget ( )
{
	static UFunction* pFnSwitchTarget = NULL;

	if ( ! pFnSwitchTarget )
		pFnSwitchTarget = (UFunction*) UObject::GObjObjects()->Data[ 45174 ];

	APgPlayerController_execSwitchTarget_Parms SwitchTarget_Parms;

	this->ProcessEvent ( pFnSwitchTarget, &SwitchTarget_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetVehicleInputs
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          Throttle                       ( CPF_Parm )
// float                          Steering                       ( CPF_Parm )

void APgPlayerController::SetVehicleInputs ( float Throttle, float Steering )
{
	static UFunction* pFnSetVehicleInputs = NULL;

	if ( ! pFnSetVehicleInputs )
		pFnSetVehicleInputs = (UFunction*) UObject::GObjObjects()->Data[ 45169 ];

	APgPlayerController_execSetVehicleInputs_Parms SetVehicleInputs_Parms;
	SetVehicleInputs_Parms.Throttle = Throttle;
	SetVehicleInputs_Parms.Steering = Steering;

	this->ProcessEvent ( pFnSetVehicleInputs, &SetVehicleInputs_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetVehicling
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  vehicling                      ( CPF_Parm )

void APgPlayerController::SetVehicling ( unsigned long vehicling )
{
	static UFunction* pFnSetVehicling = NULL;

	if ( ! pFnSetVehicling )
		pFnSetVehicling = (UFunction*) UObject::GObjObjects()->Data[ 45167 ];

	APgPlayerController_execSetVehicling_Parms SetVehicling_Parms;
	SetVehicling_Parms.vehicling = vehicling;

	this->ProcessEvent ( pFnSetVehicling, &SetVehicling_Parms, NULL );
};

// Function GridGame.PgPlayerController.ServerSetVehiclingState
// [0x002200C2] 
// Parameters infos:

void APgPlayerController::ServerSetVehiclingState ( )
{
	static UFunction* pFnServerSetVehiclingState = NULL;

	if ( ! pFnServerSetVehiclingState )
		pFnServerSetVehiclingState = (UFunction*) UObject::GObjObjects()->Data[ 45166 ];

	APgPlayerController_execServerSetVehiclingState_Parms ServerSetVehiclingState_Parms;

	this->ProcessEvent ( pFnServerSetVehiclingState, &ServerSetVehiclingState_Parms, NULL );
};

// Function GridGame.PgPlayerController.IsTargetLocked
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::IsTargetLocked ( )
{
	static UFunction* pFnIsTargetLocked = NULL;

	if ( ! pFnIsTargetLocked )
		pFnIsTargetLocked = (UFunction*) UObject::GObjObjects()->Data[ 45164 ];

	APgPlayerController_execIsTargetLocked_Parms IsTargetLocked_Parms;

	pFnIsTargetLocked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTargetLocked, &IsTargetLocked_Parms, NULL );

	pFnIsTargetLocked->FunctionFlags |= 0x400;

	return IsTargetLocked_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.SetLockTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  lockTarget                     ( CPF_Parm )

void APgPlayerController::SetLockTarget ( unsigned long lockTarget )
{
	static UFunction* pFnSetLockTarget = NULL;

	if ( ! pFnSetLockTarget )
		pFnSetLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 45162 ];

	APgPlayerController_execSetLockTarget_Parms SetLockTarget_Parms;
	SetLockTarget_Parms.lockTarget = lockTarget;

	this->ProcessEvent ( pFnSetLockTarget, &SetLockTarget_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientSetupWeapon
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventClientSetupWeapon ( )
{
	static UFunction* pFnClientSetupWeapon = NULL;

	if ( ! pFnClientSetupWeapon )
		pFnClientSetupWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45161 ];

	APgPlayerController_eventClientSetupWeapon_Parms ClientSetupWeapon_Parms;

	this->ProcessEvent ( pFnClientSetupWeapon, &ClientSetupWeapon_Parms, NULL );
};

// Function GridGame.PgPlayerController.switchTo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   WeaponName                     ( CPF_Parm )

void APgPlayerController::switchTo ( struct FName WeaponName )
{
	static UFunction* pFnswitchTo = NULL;

	if ( ! pFnswitchTo )
		pFnswitchTo = (UFunction*) UObject::GObjObjects()->Data[ 45157 ];

	APgPlayerController_execswitchTo_Parms switchTo_Parms;
	memcpy ( &switchTo_Parms.WeaponName, &WeaponName, 0x8 );

	this->ProcessEvent ( pFnswitchTo, &switchTo_Parms, NULL );
};

// Function GridGame.PgPlayerController.SwitchToPower
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   powerName                      ( CPF_Parm )

void APgPlayerController::SwitchToPower ( struct FName powerName )
{
	static UFunction* pFnSwitchToPower = NULL;

	if ( ! pFnSwitchToPower )
		pFnSwitchToPower = (UFunction*) UObject::GObjObjects()->Data[ 45151 ];

	APgPlayerController_execSwitchToPower_Parms SwitchToPower_Parms;
	memcpy ( &SwitchToPower_Parms.powerName, &powerName, 0x8 );

	this->ProcessEvent ( pFnSwitchToPower, &SwitchToPower_Parms, NULL );
};

// Function GridGame.PgPlayerController.ForceWallJump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::ForceWallJump ( )
{
	static UFunction* pFnForceWallJump = NULL;

	if ( ! pFnForceWallJump )
		pFnForceWallJump = (UFunction*) UObject::GObjObjects()->Data[ 45150 ];

	APgPlayerController_execForceWallJump_Parms ForceWallJump_Parms;

	this->ProcessEvent ( pFnForceWallJump, &ForceWallJump_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnCheckCondition
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class UPgSeqAct_CheckCondition* inAction                       ( CPF_Parm )

void APgPlayerController::OnCheckCondition ( class UPgSeqAct_CheckCondition* inAction )
{
	static UFunction* pFnOnCheckCondition = NULL;

	if ( ! pFnOnCheckCondition )
		pFnOnCheckCondition = (UFunction*) UObject::GObjObjects()->Data[ 45148 ];

	APgPlayerController_execOnCheckCondition_Parms OnCheckCondition_Parms;
	OnCheckCondition_Parms.inAction = inAction;

	pFnOnCheckCondition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCheckCondition, &OnCheckCondition_Parms, NULL );

	pFnOnCheckCondition->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController._ReplicatedEvent
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgPlayerController::event_ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFn_ReplicatedEvent = NULL;

	if ( ! pFn_ReplicatedEvent )
		pFn_ReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 45146 ];

	APgPlayerController_event_ReplicatedEvent_Parms _ReplicatedEvent_Parms;
	memcpy ( &_ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFn_ReplicatedEvent, &_ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgPlayerController.ReplicatedEvent
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgPlayerController::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 45144 ];

	APgPlayerController_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	pFnReplicatedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );

	pFnReplicatedEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerAdjustSkillPoints
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            Delta                          ( CPF_Parm )

void APgPlayerController::eventServerAdjustSkillPoints ( int Delta )
{
	static UFunction* pFnServerAdjustSkillPoints = NULL;

	if ( ! pFnServerAdjustSkillPoints )
		pFnServerAdjustSkillPoints = (UFunction*) UObject::GObjObjects()->Data[ 45142 ];

	APgPlayerController_eventServerAdjustSkillPoints_Parms ServerAdjustSkillPoints_Parms;
	ServerAdjustSkillPoints_Parms.Delta = Delta;

	pFnServerAdjustSkillPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerAdjustSkillPoints, &ServerAdjustSkillPoints_Parms, NULL );

	pFnServerAdjustSkillPoints->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerUpdateLoadout
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 loadoutString                  ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::eventServerUpdateLoadout ( struct FString loadoutString )
{
	static UFunction* pFnServerUpdateLoadout = NULL;

	if ( ! pFnServerUpdateLoadout )
		pFnServerUpdateLoadout = (UFunction*) UObject::GObjObjects()->Data[ 45140 ];

	APgPlayerController_eventServerUpdateLoadout_Parms ServerUpdateLoadout_Parms;
	memcpy ( &ServerUpdateLoadout_Parms.loadoutString, &loadoutString, 0xC );

	pFnServerUpdateLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerUpdateLoadout, &ServerUpdateLoadout_Parms, NULL );

	pFnServerUpdateLoadout->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientUpdateLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::ClientUpdateLoadout ( )
{
	static UFunction* pFnClientUpdateLoadout = NULL;

	if ( ! pFnClientUpdateLoadout )
		pFnClientUpdateLoadout = (UFunction*) UObject::GObjObjects()->Data[ 45139 ];

	APgPlayerController_execClientUpdateLoadout_Parms ClientUpdateLoadout_Parms;

	pFnClientUpdateLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientUpdateLoadout, &ClientUpdateLoadout_Parms, NULL );

	pFnClientUpdateLoadout->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ClientPlayerLevelChanged
// [0x01020DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            oldLevel                       ( CPF_Parm )
// int                            newLevel                       ( CPF_Parm )

void APgPlayerController::eventClientPlayerLevelChanged ( int oldLevel, int newLevel )
{
	static UFunction* pFnClientPlayerLevelChanged = NULL;

	if ( ! pFnClientPlayerLevelChanged )
		pFnClientPlayerLevelChanged = (UFunction*) UObject::GObjObjects()->Data[ 45136 ];

	APgPlayerController_eventClientPlayerLevelChanged_Parms ClientPlayerLevelChanged_Parms;
	ClientPlayerLevelChanged_Parms.oldLevel = oldLevel;
	ClientPlayerLevelChanged_Parms.newLevel = newLevel;

	pFnClientPlayerLevelChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientPlayerLevelChanged, &ClientPlayerLevelChanged_Parms, NULL );

	pFnClientPlayerLevelChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ServerSetVehicleIndex
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            I                              ( CPF_Parm )

void APgPlayerController::eventServerSetVehicleIndex ( int I )
{
	static UFunction* pFnServerSetVehicleIndex = NULL;

	if ( ! pFnServerSetVehicleIndex )
		pFnServerSetVehicleIndex = (UFunction*) UObject::GObjObjects()->Data[ 45134 ];

	APgPlayerController_eventServerSetVehicleIndex_Parms ServerSetVehicleIndex_Parms;
	ServerSetVehicleIndex_Parms.I = I;

	pFnServerSetVehicleIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSetVehicleIndex, &ServerSetVehicleIndex_Parms, NULL );

	pFnServerSetVehicleIndex->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.ChangeTeamSP
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TeamNum                        ( CPF_Parm )

void APgPlayerController::ChangeTeamSP ( int TeamNum )
{
	static UFunction* pFnChangeTeamSP = NULL;

	if ( ! pFnChangeTeamSP )
		pFnChangeTeamSP = (UFunction*) UObject::GObjObjects()->Data[ 45132 ];

	APgPlayerController_execChangeTeamSP_Parms ChangeTeamSP_Parms;
	ChangeTeamSP_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnChangeTeamSP, &ChangeTeamSP_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientForceVehicles
// [0x010201C2] 
// Parameters infos:
// unsigned long                  SetVehicling                   ( CPF_Parm )

void APgPlayerController::ClientForceVehicles ( unsigned long SetVehicling )
{
	static UFunction* pFnClientForceVehicles = NULL;

	if ( ! pFnClientForceVehicles )
		pFnClientForceVehicles = (UFunction*) UObject::GObjObjects()->Data[ 45130 ];

	APgPlayerController_execClientForceVehicles_Parms ClientForceVehicles_Parms;
	ClientForceVehicles_Parms.SetVehicling = SetVehicling;

	this->ProcessEvent ( pFnClientForceVehicles, &ClientForceVehicles_Parms, NULL );
};

// Function GridGame.PgPlayerController.ForceSetVehicling
// [0x00020102] 
// Parameters infos:
// unsigned long                  SetVehicling                   ( CPF_Parm )

void APgPlayerController::ForceSetVehicling ( unsigned long SetVehicling )
{
	static UFunction* pFnForceSetVehicling = NULL;

	if ( ! pFnForceSetVehicling )
		pFnForceSetVehicling = (UFunction*) UObject::GObjObjects()->Data[ 45127 ];

	APgPlayerController_execForceSetVehicling_Parms ForceSetVehicling_Parms;
	ForceSetVehicling_Parms.SetVehicling = SetVehicling;

	this->ProcessEvent ( pFnForceSetVehicling, &ForceSetVehicling_Parms, NULL );
};

// Function GridGame.PgPlayerController.RetroTurn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  Direction                      ( CPF_Parm )

void APgPlayerController::RetroTurn ( unsigned char Direction )
{
	static UFunction* pFnRetroTurn = NULL;

	if ( ! pFnRetroTurn )
		pFnRetroTurn = (UFunction*) UObject::GObjObjects()->Data[ 45124 ];

	APgPlayerController_execRetroTurn_Parms RetroTurn_Parms;
	RetroTurn_Parms.Direction = Direction;

	this->ProcessEvent ( pFnRetroTurn, &RetroTurn_Parms, NULL );
};

// Function GridGame.PgPlayerController.PlayerGTFO
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::PlayerGTFO ( )
{
	static UFunction* pFnPlayerGTFO = NULL;

	if ( ! pFnPlayerGTFO )
		pFnPlayerGTFO = (UFunction*) UObject::GObjObjects()->Data[ 45118 ];

	APgPlayerController_execPlayerGTFO_Parms PlayerGTFO_Parms;

	this->ProcessEvent ( pFnPlayerGTFO, &PlayerGTFO_Parms, NULL );

	return PlayerGTFO_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.ServerGTFO
// [0x002208C2] ( FUNC_Event )
// Parameters infos:

void APgPlayerController::eventServerGTFO ( )
{
	static UFunction* pFnServerGTFO = NULL;

	if ( ! pFnServerGTFO )
		pFnServerGTFO = (UFunction*) UObject::GObjObjects()->Data[ 45117 ];

	APgPlayerController_eventServerGTFO_Parms ServerGTFO_Parms;

	this->ProcessEvent ( pFnServerGTFO, &ServerGTFO_Parms, NULL );
};

// Function GridGame.PgPlayerController.GTFO
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::GTFO ( )
{
	static UFunction* pFnGTFO = NULL;

	if ( ! pFnGTFO )
		pFnGTFO = (UFunction*) UObject::GObjObjects()->Data[ 45116 ];

	APgPlayerController_execGTFO_Parms GTFO_Parms;

	this->ProcessEvent ( pFnGTFO, &GTFO_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetVehicleArchetype
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Archetype                      ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerController::SetVehicleArchetype ( struct FString Archetype )
{
	static UFunction* pFnSetVehicleArchetype = NULL;

	if ( ! pFnSetVehicleArchetype )
		pFnSetVehicleArchetype = (UFunction*) UObject::GObjObjects()->Data[ 45111 ];

	APgPlayerController_execSetVehicleArchetype_Parms SetVehicleArchetype_Parms;
	memcpy ( &SetVehicleArchetype_Parms.Archetype, &Archetype, 0xC );

	this->ProcessEvent ( pFnSetVehicleArchetype, &SetVehicleArchetype_Parms, NULL );
};

// Function GridGame.PgPlayerController.SetVehicleIndex
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void APgPlayerController::SetVehicleIndex ( int I )
{
	static UFunction* pFnSetVehicleIndex = NULL;

	if ( ! pFnSetVehicleIndex )
		pFnSetVehicleIndex = (UFunction*) UObject::GObjObjects()->Data[ 45107 ];

	APgPlayerController_execSetVehicleIndex_Parms SetVehicleIndex_Parms;
	SetVehicleIndex_Parms.I = I;

	this->ProcessEvent ( pFnSetVehicleIndex, &SetVehicleIndex_Parms, NULL );
};

// Function GridGame.PgPlayerController.DoProgressionTest
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Test                           ( CPF_Parm )

void APgPlayerController::DoProgressionTest ( int Test )
{
	static UFunction* pFnDoProgressionTest = NULL;

	if ( ! pFnDoProgressionTest )
		pFnDoProgressionTest = (UFunction*) UObject::GObjObjects()->Data[ 45105 ];

	APgPlayerController_execDoProgressionTest_Parms DoProgressionTest_Parms;
	DoProgressionTest_Parms.Test = Test;

	this->ProcessEvent ( pFnDoProgressionTest, &DoProgressionTest_Parms, NULL );
};

// Function GridGame.PgPlayerController.PrintStats
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgPlayerController::PrintStats ( )
{
	static UFunction* pFnPrintStats = NULL;

	if ( ! pFnPrintStats )
		pFnPrintStats = (UFunction*) UObject::GObjObjects()->Data[ 45104 ];

	APgPlayerController_execPrintStats_Parms PrintStats_Parms;

	this->ProcessEvent ( pFnPrintStats, &PrintStats_Parms, NULL );
};

// Function GridGame.PgPlayerController.UpdateVehicling
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerController::UpdateVehicling ( )
{
	static UFunction* pFnUpdateVehicling = NULL;

	if ( ! pFnUpdateVehicling )
		pFnUpdateVehicling = (UFunction*) UObject::GObjObjects()->Data[ 45103 ];

	APgPlayerController_execUpdateVehicling_Parms UpdateVehicling_Parms;

	pFnUpdateVehicling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateVehicling, &UpdateVehicling_Parms, NULL );

	pFnUpdateVehicling->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerController.SetCameraTargetTimer
// [0x00020002] 
// Parameters infos:

void APgPlayerController::SetCameraTargetTimer ( )
{
	static UFunction* pFnSetCameraTargetTimer = NULL;

	if ( ! pFnSetCameraTargetTimer )
		pFnSetCameraTargetTimer = (UFunction*) UObject::GObjObjects()->Data[ 45102 ];

	APgPlayerController_execSetCameraTargetTimer_Parms SetCameraTargetTimer_Parms;

	this->ProcessEvent ( pFnSetCameraTargetTimer, &SetCameraTargetTimer_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientSetCameraTargetTimer
// [0x00020002] 
// Parameters infos:

void APgPlayerController::ClientSetCameraTargetTimer ( )
{
	static UFunction* pFnClientSetCameraTargetTimer = NULL;

	if ( ! pFnClientSetCameraTargetTimer )
		pFnClientSetCameraTargetTimer = (UFunction*) UObject::GObjObjects()->Data[ 45101 ];

	APgPlayerController_execClientSetCameraTargetTimer_Parms ClientSetCameraTargetTimer_Parms;

	this->ProcessEvent ( pFnClientSetCameraTargetTimer, &ClientSetCameraTargetTimer_Parms, NULL );
};

// Function GridGame.PgPlayerController.ClientCreateCameraTargetTimer
// [0x00020002] 
// Parameters infos:
// class AActor*                  CameraTarget                   ( CPF_Parm )
// float                          Delay                          ( CPF_Parm )
// struct FViewTargetTransitionParams transParam                     ( CPF_Parm )

void APgPlayerController::ClientCreateCameraTargetTimer ( class AActor* CameraTarget, float Delay, struct FViewTargetTransitionParams transParam )
{
	static UFunction* pFnClientCreateCameraTargetTimer = NULL;

	if ( ! pFnClientCreateCameraTargetTimer )
		pFnClientCreateCameraTargetTimer = (UFunction*) UObject::GObjObjects()->Data[ 45097 ];

	APgPlayerController_execClientCreateCameraTargetTimer_Parms ClientCreateCameraTargetTimer_Parms;
	ClientCreateCameraTargetTimer_Parms.CameraTarget = CameraTarget;
	ClientCreateCameraTargetTimer_Parms.Delay = Delay;
	memcpy ( &ClientCreateCameraTargetTimer_Parms.transParam, &transParam, 0xC );

	this->ProcessEvent ( pFnClientCreateCameraTargetTimer, &ClientCreateCameraTargetTimer_Parms, NULL );
};

// Function GridGame.PgPlayerController.CreateCameraTargetTimer
// [0x00020002] 
// Parameters infos:
// class AActor*                  CameraTarget                   ( CPF_Parm )
// float                          Delay                          ( CPF_Parm )
// struct FViewTargetTransitionParams transParam                     ( CPF_Parm )

void APgPlayerController::CreateCameraTargetTimer ( class AActor* CameraTarget, float Delay, struct FViewTargetTransitionParams transParam )
{
	static UFunction* pFnCreateCameraTargetTimer = NULL;

	if ( ! pFnCreateCameraTargetTimer )
		pFnCreateCameraTargetTimer = (UFunction*) UObject::GObjObjects()->Data[ 45093 ];

	APgPlayerController_execCreateCameraTargetTimer_Parms CreateCameraTargetTimer_Parms;
	CreateCameraTargetTimer_Parms.CameraTarget = CameraTarget;
	CreateCameraTargetTimer_Parms.Delay = Delay;
	memcpy ( &CreateCameraTargetTimer_Parms.transParam, &transParam, 0xC );

	this->ProcessEvent ( pFnCreateCameraTargetTimer, &CreateCameraTargetTimer_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnClientSetCameraTarget
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_ClientSetCameraTarget* inAction                       ( CPF_Parm )

void APgPlayerController::OnClientSetCameraTarget ( class UPgSeqAct_ClientSetCameraTarget* inAction )
{
	static UFunction* pFnOnClientSetCameraTarget = NULL;

	if ( ! pFnOnClientSetCameraTarget )
		pFnOnClientSetCameraTarget = (UFunction*) UObject::GObjObjects()->Data[ 45088 ];

	APgPlayerController_execOnClientSetCameraTarget_Parms OnClientSetCameraTarget_Parms;
	OnClientSetCameraTarget_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnClientSetCameraTarget, &OnClientSetCameraTarget_Parms, NULL );
};

// Function GridGame.PgPlayerController.OnSetCameraSystem
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_SetCameraSystem* Action                         ( CPF_Parm )

void APgPlayerController::OnSetCameraSystem ( class UPgSeqAct_SetCameraSystem* Action )
{
	static UFunction* pFnOnSetCameraSystem = NULL;

	if ( ! pFnOnSetCameraSystem )
		pFnOnSetCameraSystem = (UFunction*) UObject::GObjObjects()->Data[ 45082 ];

	APgPlayerController_execOnSetCameraSystem_Parms OnSetCameraSystem_Parms;
	OnSetCameraSystem_Parms.Action = Action;

	this->ProcessEvent ( pFnOnSetCameraSystem, &OnSetCameraSystem_Parms, NULL );
};

// Function GridGame.PgPlayerController.GetPgPlayerCamera
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerCamera* APgPlayerController::GetPgPlayerCamera ( )
{
	static UFunction* pFnGetPgPlayerCamera = NULL;

	if ( ! pFnGetPgPlayerCamera )
		pFnGetPgPlayerCamera = (UFunction*) UObject::GObjObjects()->Data[ 42439 ];

	APgPlayerController_execGetPgPlayerCamera_Parms GetPgPlayerCamera_Parms;

	this->ProcessEvent ( pFnGetPgPlayerCamera, &GetPgPlayerCamera_Parms, NULL );

	return GetPgPlayerCamera_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.TryGetLocalPlayerCameraFromDebugCamera
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgDebugCameraController* DCC                            ( CPF_Parm )

class APgPlayerCamera* APgPlayerController::eventTryGetLocalPlayerCameraFromDebugCamera ( class APgDebugCameraController* DCC )
{
	static UFunction* pFnTryGetLocalPlayerCameraFromDebugCamera = NULL;

	if ( ! pFnTryGetLocalPlayerCameraFromDebugCamera )
		pFnTryGetLocalPlayerCameraFromDebugCamera = (UFunction*) UObject::GObjObjects()->Data[ 45078 ];

	APgPlayerController_eventTryGetLocalPlayerCameraFromDebugCamera_Parms TryGetLocalPlayerCameraFromDebugCamera_Parms;
	TryGetLocalPlayerCameraFromDebugCamera_Parms.DCC = DCC;

	this->ProcessEvent ( pFnTryGetLocalPlayerCameraFromDebugCamera, &TryGetLocalPlayerCameraFromDebugCamera_Parms, NULL );

	return TryGetLocalPlayerCameraFromDebugCamera_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.AmInDebugFixedCam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerController::AmInDebugFixedCam ( )
{
	static UFunction* pFnAmInDebugFixedCam = NULL;

	if ( ! pFnAmInDebugFixedCam )
		pFnAmInDebugFixedCam = (UFunction*) UObject::GObjObjects()->Data[ 43960 ];

	APgPlayerController_execAmInDebugFixedCam_Parms AmInDebugFixedCam_Parms;

	this->ProcessEvent ( pFnAmInDebugFixedCam, &AmInDebugFixedCam_Parms, NULL );

	return AmInDebugFixedCam_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.TryGetLocalPlayerControllerFromDebugCamera
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APgPlayerController*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PlayerController               ( CPF_Parm )

class APgPlayerController* APgPlayerController::eventTryGetLocalPlayerControllerFromDebugCamera ( class APlayerController* PlayerController )
{
	static UFunction* pFnTryGetLocalPlayerControllerFromDebugCamera = NULL;

	if ( ! pFnTryGetLocalPlayerControllerFromDebugCamera )
		pFnTryGetLocalPlayerControllerFromDebugCamera = (UFunction*) UObject::GObjObjects()->Data[ 45074 ];

	APgPlayerController_eventTryGetLocalPlayerControllerFromDebugCamera_Parms TryGetLocalPlayerControllerFromDebugCamera_Parms;
	TryGetLocalPlayerControllerFromDebugCamera_Parms.PlayerController = PlayerController;

	this->ProcessEvent ( pFnTryGetLocalPlayerControllerFromDebugCamera, &TryGetLocalPlayerControllerFromDebugCamera_Parms, NULL );

	return TryGetLocalPlayerControllerFromDebugCamera_Parms.ReturnValue;
};

// Function GridGame.PgPlayerController.GetLocalPlayerController
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerController* APgPlayerController::GetLocalPlayerController ( )
{
	static UFunction* pFnGetLocalPlayerController = NULL;

	if ( ! pFnGetLocalPlayerController )
		pFnGetLocalPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 45072 ];

	APgPlayerController_execGetLocalPlayerController_Parms GetLocalPlayerController_Parms;

	pFnGetLocalPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalPlayerController, &GetLocalPlayerController_Parms, NULL );

	pFnGetLocalPlayerController->FunctionFlags |= 0x400;

	return GetLocalPlayerController_Parms.ReturnValue;
};

// Function GridGame.PgCheatManager.ServerOneShotKill
// [0x002200C2] 
// Parameters infos:

void UPgCheatManager::ServerOneShotKill ( )
{
	static UFunction* pFnServerOneShotKill = NULL;

	if ( ! pFnServerOneShotKill )
		pFnServerOneShotKill = (UFunction*) UObject::GObjObjects()->Data[ 43966 ];

	UPgCheatManager_execServerOneShotKill_Parms ServerOneShotKill_Parms;

	this->ProcessEvent ( pFnServerOneShotKill, &ServerOneShotKill_Parms, NULL );
};

// Function GridGame.PgCheatManager.OneShotKill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManager::OneShotKill ( )
{
	static UFunction* pFnOneShotKill = NULL;

	if ( ! pFnOneShotKill )
		pFnOneShotKill = (UFunction*) UObject::GObjObjects()->Data[ 43965 ];

	UPgCheatManager_execOneShotKill_Parms OneShotKill_Parms;

	this->ProcessEvent ( pFnOneShotKill, &OneShotKill_Parms, NULL );
};

// Function GridGame.PgCheatManager.ToggleDebugFixedCam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManager::ToggleDebugFixedCam ( )
{
	static UFunction* pFnToggleDebugFixedCam = NULL;

	if ( ! pFnToggleDebugFixedCam )
		pFnToggleDebugFixedCam = (UFunction*) UObject::GObjObjects()->Data[ 43962 ];

	UPgCheatManager_execToggleDebugFixedCam_Parms ToggleDebugFixedCam_Parms;

	this->ProcessEvent ( pFnToggleDebugFixedCam, &ToggleDebugFixedCam_Parms, NULL );
};

// Function GridGame.PgCheatManager.ToggleDebugCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManager::ToggleDebugCamera ( )
{
	static UFunction* pFnToggleDebugCamera = NULL;

	if ( ! pFnToggleDebugCamera )
		pFnToggleDebugCamera = (UFunction*) UObject::GObjObjects()->Data[ 43959 ];

	UPgCheatManager_execToggleDebugCamera_Parms ToggleDebugCamera_Parms;

	this->ProcessEvent ( pFnToggleDebugCamera, &ToggleDebugCamera_Parms, NULL );
};

// Function GridGame.PgCheatManager.WarpToCheckpoint
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 checkpointName                 ( CPF_Parm | CPF_NeedCtorLink )

void UPgCheatManager::WarpToCheckpoint ( struct FString checkpointName )
{
	static UFunction* pFnWarpToCheckpoint = NULL;

	if ( ! pFnWarpToCheckpoint )
		pFnWarpToCheckpoint = (UFunction*) UObject::GObjObjects()->Data[ 43957 ];

	UPgCheatManager_execWarpToCheckpoint_Parms WarpToCheckpoint_Parms;
	memcpy ( &WarpToCheckpoint_Parms.checkpointName, &checkpointName, 0xC );

	pFnWarpToCheckpoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWarpToCheckpoint, &WarpToCheckpoint_Parms, NULL );

	pFnWarpToCheckpoint->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManager.ToggleCameraCollisionSpew
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManager::ToggleCameraCollisionSpew ( )
{
	static UFunction* pFnToggleCameraCollisionSpew = NULL;

	if ( ! pFnToggleCameraCollisionSpew )
		pFnToggleCameraCollisionSpew = (UFunction*) UObject::GObjObjects()->Data[ 43956 ];

	UPgCheatManager_execToggleCameraCollisionSpew_Parms ToggleCameraCollisionSpew_Parms;

	pFnToggleCameraCollisionSpew->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleCameraCollisionSpew, &ToggleCameraCollisionSpew_Parms, NULL );

	pFnToggleCameraCollisionSpew->FunctionFlags |= 0x400;
};

// Function GridGame.PgCheatManager.ToggleSideEffects
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgCheatManager::ToggleSideEffects ( )
{
	static UFunction* pFnToggleSideEffects = NULL;

	if ( ! pFnToggleSideEffects )
		pFnToggleSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 43955 ];

	UPgCheatManager_execToggleSideEffects_Parms ToggleSideEffects_Parms;

	pFnToggleSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleSideEffects, &ToggleSideEffects_Parms, NULL );

	pFnToggleSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerInput.InvertMouse
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgPlayerInput::InvertMouse ( )
{
	static UFunction* pFnInvertMouse = NULL;

	if ( ! pFnInvertMouse )
		pFnInvertMouse = (UFunction*) UObject::GObjObjects()->Data[ 49158 ];

	UPgPlayerInput_execInvertMouse_Parms InvertMouse_Parms;

	pFnInvertMouse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInvertMouse, &InvertMouse_Parms, NULL );

	pFnInvertMouse->FunctionFlags |= 0x400;

	return InvertMouse_Parms.ReturnValue;
};

// Function GridGame.PgPlayerInput.GetNamedBind
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FName                   Key                            ( CPF_Parm )
// struct FString                 BindName                       ( CPF_Parm | CPF_NeedCtorLink )

struct FString UPgPlayerInput::GetNamedBind ( struct FName Key, struct FString BindName )
{
	static UFunction* pFnGetNamedBind = NULL;

	if ( ! pFnGetNamedBind )
		pFnGetNamedBind = (UFunction*) UObject::GObjObjects()->Data[ 49154 ];

	UPgPlayerInput_execGetNamedBind_Parms GetNamedBind_Parms;
	memcpy ( &GetNamedBind_Parms.Key, &Key, 0x8 );
	memcpy ( &GetNamedBind_Parms.BindName, &BindName, 0xC );

	pFnGetNamedBind->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNamedBind, &GetNamedBind_Parms, NULL );

	pFnGetNamedBind->FunctionFlags |= 0x400;

	return GetNamedBind_Parms.ReturnValue;
};

// Function GridGame.PgPlayerInput.GetBind
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FName                   Key                            ( CPF_Parm )

struct FString UPgPlayerInput::GetBind ( struct FName Key )
{
	static UFunction* pFnGetBind = NULL;

	if ( ! pFnGetBind )
		pFnGetBind = (UFunction*) UObject::GObjObjects()->Data[ 49151 ];

	UPgPlayerInput_execGetBind_Parms GetBind_Parms;
	memcpy ( &GetBind_Parms.Key, &Key, 0x8 );

	pFnGetBind->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBind, &GetBind_Parms, NULL );

	pFnGetBind->FunctionFlags |= 0x400;

	return GetBind_Parms.ReturnValue;
};

// Function GridGame.PgPlayerInput.ApplySquareDeadZone
// [0x00420002] 
// Parameters infos:
// float                          deadZone                       ( CPF_Parm )
// float                          X                              ( CPF_Parm | CPF_OutParm )
// float                          Y                              ( CPF_Parm | CPF_OutParm )

void UPgPlayerInput::ApplySquareDeadZone ( float deadZone, float* X, float* Y )
{
	static UFunction* pFnApplySquareDeadZone = NULL;

	if ( ! pFnApplySquareDeadZone )
		pFnApplySquareDeadZone = (UFunction*) UObject::GObjObjects()->Data[ 49147 ];

	UPgPlayerInput_execApplySquareDeadZone_Parms ApplySquareDeadZone_Parms;
	ApplySquareDeadZone_Parms.deadZone = deadZone;

	this->ProcessEvent ( pFnApplySquareDeadZone, &ApplySquareDeadZone_Parms, NULL );

	if ( X )
		*X = ApplySquareDeadZone_Parms.X;

	if ( Y )
		*Y = ApplySquareDeadZone_Parms.Y;
};

// Function GridGame.PgPlayerInput.ApplyCircularDeadZone
// [0x00C20002] 
// Parameters infos:
// float                          deadZone                       ( CPF_Parm )
// float                          X                              ( CPF_Parm | CPF_OutParm )
// float                          Y                              ( CPF_Parm | CPF_OutParm )

void UPgPlayerInput::ApplyCircularDeadZone ( float deadZone, float* X, float* Y )
{
	static UFunction* pFnApplyCircularDeadZone = NULL;

	if ( ! pFnApplyCircularDeadZone )
		pFnApplyCircularDeadZone = (UFunction*) UObject::GObjObjects()->Data[ 49139 ];

	UPgPlayerInput_execApplyCircularDeadZone_Parms ApplyCircularDeadZone_Parms;
	ApplyCircularDeadZone_Parms.deadZone = deadZone;

	this->ProcessEvent ( pFnApplyCircularDeadZone, &ApplyCircularDeadZone_Parms, NULL );

	if ( X )
		*X = ApplyCircularDeadZone_Parms.X;

	if ( Y )
		*Y = ApplyCircularDeadZone_Parms.Y;
};

// Function GridGame.PgPlayerInput.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgPlayerInput::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 49135 ];

	UPgPlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function GridGame.PgPlayerInput.ShowGameStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::ShowGameStats ( unsigned long bPressed )
{
	static UFunction* pFnShowGameStats = NULL;

	if ( ! pFnShowGameStats )
		pFnShowGameStats = (UFunction*) UObject::GObjObjects()->Data[ 49133 ];

	UPgPlayerInput_execShowGameStats_Parms ShowGameStats_Parms;
	ShowGameStats_Parms.bPressed = bPressed;

	pFnShowGameStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowGameStats, &ShowGameStats_Parms, NULL );

	pFnShowGameStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerInput.StartSwitchTargetRight
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartSwitchTargetRight ( unsigned long bPressed )
{
	static UFunction* pFnStartSwitchTargetRight = NULL;

	if ( ! pFnStartSwitchTargetRight )
		pFnStartSwitchTargetRight = (UFunction*) UObject::GObjObjects()->Data[ 49131 ];

	UPgPlayerInput_execStartSwitchTargetRight_Parms StartSwitchTargetRight_Parms;
	StartSwitchTargetRight_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartSwitchTargetRight, &StartSwitchTargetRight_Parms, NULL );
};

// Function GridGame.PgPlayerInput.StartSwitchTargetLeft
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartSwitchTargetLeft ( unsigned long bPressed )
{
	static UFunction* pFnStartSwitchTargetLeft = NULL;

	if ( ! pFnStartSwitchTargetLeft )
		pFnStartSwitchTargetLeft = (UFunction*) UObject::GObjObjects()->Data[ 49129 ];

	UPgPlayerInput_execStartSwitchTargetLeft_Parms StartSwitchTargetLeft_Parms;
	StartSwitchTargetLeft_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartSwitchTargetLeft, &StartSwitchTargetLeft_Parms, NULL );
};

// Function GridGame.PgPlayerInput.StartSwitchTarget
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartSwitchTarget ( unsigned long bPressed )
{
	static UFunction* pFnStartSwitchTarget = NULL;

	if ( ! pFnStartSwitchTarget )
		pFnStartSwitchTarget = (UFunction*) UObject::GObjObjects()->Data[ 49127 ];

	UPgPlayerInput_execStartSwitchTarget_Parms StartSwitchTarget_Parms;
	StartSwitchTarget_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartSwitchTarget, &StartSwitchTarget_Parms, NULL );
};

// Function GridGame.PgPlayerInput.ToggleLockTarget
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::ToggleLockTarget ( unsigned long bPressed )
{
	static UFunction* pFnToggleLockTarget = NULL;

	if ( ! pFnToggleLockTarget )
		pFnToggleLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 49125 ];

	UPgPlayerInput_execToggleLockTarget_Parms ToggleLockTarget_Parms;
	ToggleLockTarget_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnToggleLockTarget, &ToggleLockTarget_Parms, NULL );
};

// Function GridGame.PgPlayerInput.lockTarget
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::lockTarget ( unsigned long bPressed )
{
	static UFunction* pFnlockTarget = NULL;

	if ( ! pFnlockTarget )
		pFnlockTarget = (UFunction*) UObject::GObjObjects()->Data[ 49123 ];

	UPgPlayerInput_execlockTarget_Parms lockTarget_Parms;
	lockTarget_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnlockTarget, &lockTarget_Parms, NULL );
};

// Function GridGame.PgPlayerInput.bLock
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::bLock ( unsigned long bPressed )
{
	static UFunction* pFnbLock = NULL;

	if ( ! pFnbLock )
		pFnbLock = (UFunction*) UObject::GObjObjects()->Data[ 49121 ];

	UPgPlayerInput_execbLock_Parms bLock_Parms;
	bLock_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnbLock, &bLock_Parms, NULL );
};

// Function GridGame.PgPlayerInput.Sprint
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::Sprint ( unsigned long bPressed )
{
	static UFunction* pFnSprint = NULL;

	if ( ! pFnSprint )
		pFnSprint = (UFunction*) UObject::GObjObjects()->Data[ 49119 ];

	UPgPlayerInput_execSprint_Parms Sprint_Parms;
	Sprint_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnSprint, &Sprint_Parms, NULL );
};

// Function GridGame.PgPlayerInput.StartVehicle
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartVehicle ( unsigned long bPressed )
{
	static UFunction* pFnStartVehicle = NULL;

	if ( ! pFnStartVehicle )
		pFnStartVehicle = (UFunction*) UObject::GObjObjects()->Data[ 49117 ];

	UPgPlayerInput_execStartVehicle_Parms StartVehicle_Parms;
	StartVehicle_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartVehicle, &StartVehicle_Parms, NULL );
};

// Function GridGame.PgPlayerInput.StartUse
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartUse ( unsigned long bPressed )
{
	static UFunction* pFnStartUse = NULL;

	if ( ! pFnStartUse )
		pFnStartUse = (UFunction*) UObject::GObjObjects()->Data[ 49115 ];

	UPgPlayerInput_execStartUse_Parms StartUse_Parms;
	StartUse_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartUse, &StartUse_Parms, NULL );
};

// Function GridGame.PgPlayerInput.Power
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::Power ( unsigned long bPressed )
{
	static UFunction* pFnPower = NULL;

	if ( ! pFnPower )
		pFnPower = (UFunction*) UObject::GObjObjects()->Data[ 49113 ];

	UPgPlayerInput_execPower_Parms Power_Parms;
	Power_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnPower, &Power_Parms, NULL );
};

// Function GridGame.PgPlayerInput.Disc
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::Disc ( unsigned long bPressed )
{
	static UFunction* pFnDisc = NULL;

	if ( ! pFnDisc )
		pFnDisc = (UFunction*) UObject::GObjObjects()->Data[ 49111 ];

	UPgPlayerInput_execDisc_Parms Disc_Parms;
	Disc_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnDisc, &Disc_Parms, NULL );
};

// Function GridGame.PgPlayerInput.Melee
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::Melee ( unsigned long bPressed )
{
	static UFunction* pFnMelee = NULL;

	if ( ! pFnMelee )
		pFnMelee = (UFunction*) UObject::GObjObjects()->Data[ 49108 ];

	UPgPlayerInput_execMelee_Parms Melee_Parms;
	Melee_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnMelee, &Melee_Parms, NULL );
};

// Function GridGame.PgPlayerInput.MagDisc
// [0x00020100] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::MagDisc ( unsigned long bPressed )
{
	static UFunction* pFnMagDisc = NULL;

	if ( ! pFnMagDisc )
		pFnMagDisc = (UFunction*) UObject::GObjObjects()->Data[ 49106 ];

	UPgPlayerInput_execMagDisc_Parms MagDisc_Parms;
	MagDisc_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnMagDisc, &MagDisc_Parms, NULL );
};

// Function GridGame.PgPlayerInput.StartJump
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::StartJump ( unsigned long bPressed )
{
	static UFunction* pFnStartJump = NULL;

	if ( ! pFnStartJump )
		pFnStartJump = (UFunction*) UObject::GObjObjects()->Data[ 49104 ];

	UPgPlayerInput_execStartJump_Parms StartJump_Parms;
	StartJump_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnStartJump, &StartJump_Parms, NULL );
};

// Function GridGame.PgPlayerInput.ButtonRelease
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   ButtonName                     ( CPF_Parm )

void UPgPlayerInput::ButtonRelease ( struct FName ButtonName )
{
	static UFunction* pFnButtonRelease = NULL;

	if ( ! pFnButtonRelease )
		pFnButtonRelease = (UFunction*) UObject::GObjObjects()->Data[ 49099 ];

	UPgPlayerInput_execButtonRelease_Parms ButtonRelease_Parms;
	memcpy ( &ButtonRelease_Parms.ButtonName, &ButtonName, 0x8 );

	this->ProcessEvent ( pFnButtonRelease, &ButtonRelease_Parms, NULL );
};

// Function GridGame.PgPlayerInput.ButtonPress
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   ButtonName                     ( CPF_Parm )

void UPgPlayerInput::ButtonPress ( struct FName ButtonName )
{
	static UFunction* pFnButtonPress = NULL;

	if ( ! pFnButtonPress )
		pFnButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 49092 ];

	UPgPlayerInput_execButtonPress_Parms ButtonPress_Parms;
	memcpy ( &ButtonPress_Parms.ButtonName, &ButtonName, 0x8 );

	this->ProcessEvent ( pFnButtonPress, &ButtonPress_Parms, NULL );
};

// Function GridGame.PgPlayerInput.HandleButtonInput
// [0x00120000] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInput::HandleButtonInput ( unsigned long bPressed )
{
	static UFunction* pFnHandleButtonInput = NULL;

	if ( ! pFnHandleButtonInput )
		pFnHandleButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 49080 ];

	UPgPlayerInput_execHandleButtonInput_Parms HandleButtonInput_Parms;
	HandleButtonInput_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnHandleButtonInput, &HandleButtonInput_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.PlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgPlayerInputVehicle::eventPlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 49175 ];

	UPgPlayerInputVehicle_eventPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.ExitVehicle
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInputVehicle::ExitVehicle ( unsigned long bPressed )
{
	static UFunction* pFnExitVehicle = NULL;

	if ( ! pFnExitVehicle )
		pFnExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 49173 ];

	UPgPlayerInputVehicle_execExitVehicle_Parms ExitVehicle_Parms;
	ExitVehicle_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnExitVehicle, &ExitVehicle_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.TurnL90
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInputVehicle::TurnL90 ( unsigned long bPressed )
{
	static UFunction* pFnTurnL90 = NULL;

	if ( ! pFnTurnL90 )
		pFnTurnL90 = (UFunction*) UObject::GObjObjects()->Data[ 49170 ];

	UPgPlayerInputVehicle_execTurnL90_Parms TurnL90_Parms;
	TurnL90_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnTurnL90, &TurnL90_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.TurnR90
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInputVehicle::TurnR90 ( unsigned long bPressed )
{
	static UFunction* pFnTurnR90 = NULL;

	if ( ! pFnTurnR90 )
		pFnTurnR90 = (UFunction*) UObject::GObjObjects()->Data[ 49167 ];

	UPgPlayerInputVehicle_execTurnR90_Parms TurnR90_Parms;
	TurnR90_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnTurnR90, &TurnR90_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.Boost
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPressed                       ( CPF_Parm )

void UPgPlayerInputVehicle::Boost ( unsigned long bPressed )
{
	static UFunction* pFnBoost = NULL;

	if ( ! pFnBoost )
		pFnBoost = (UFunction*) UObject::GObjObjects()->Data[ 49164 ];

	UPgPlayerInputVehicle_execBoost_Parms Boost_Parms;
	Boost_Parms.bPressed = bPressed;

	this->ProcessEvent ( pFnBoost, &Boost_Parms, NULL );
};

// Function GridGame.PgPlayerInputVehicle.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgPlayerInputVehicle::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 49162 ];

	UPgPlayerInputVehicle_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function GridGame.PgEnergyInterface.EnergyFlow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inEnergy                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int UPgEnergyInterface::EnergyFlow ( int inEnergy, unsigned long overCharge )
{
	static UFunction* pFnEnergyFlow = NULL;

	if ( ! pFnEnergyFlow )
		pFnEnergyFlow = (UFunction*) UObject::GObjObjects()->Data[ 44658 ];

	UPgEnergyInterface_execEnergyFlow_Parms EnergyFlow_Parms;
	EnergyFlow_Parms.inEnergy = inEnergy;
	EnergyFlow_Parms.overCharge = overCharge;

	pFnEnergyFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnergyFlow, &EnergyFlow_Parms, NULL );

	pFnEnergyFlow->FunctionFlags |= 0x400;

	return EnergyFlow_Parms.ReturnValue;
};

// Function GridGame.PgEnergyInterface.HealthFlow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inHealth                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int UPgEnergyInterface::HealthFlow ( int inHealth, unsigned long overCharge )
{
	static UFunction* pFnHealthFlow = NULL;

	if ( ! pFnHealthFlow )
		pFnHealthFlow = (UFunction*) UObject::GObjObjects()->Data[ 44654 ];

	UPgEnergyInterface_execHealthFlow_Parms HealthFlow_Parms;
	HealthFlow_Parms.inHealth = inHealth;
	HealthFlow_Parms.overCharge = overCharge;

	pFnHealthFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHealthFlow, &HealthFlow_Parms, NULL );

	pFnHealthFlow->FunctionFlags |= 0x400;

	return HealthFlow_Parms.ReturnValue;
};

// Function GridGame.PgSpecialMoveVolume.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool APgSpecialMoveVolume::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 50233 ];

	APgSpecialMoveVolume_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnManager.BroadCastPedestrianKilledEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   KilledPawn                     ( CPF_Parm )

void APgPedestrianSpawnManager::BroadCastPedestrianKilledEvent ( class APawn* KilledPawn )
{
	static UFunction* pFnBroadCastPedestrianKilledEvent = NULL;

	if ( ! pFnBroadCastPedestrianKilledEvent )
		pFnBroadCastPedestrianKilledEvent = (UFunction*) UObject::GObjObjects()->Data[ 49017 ];

	APgPedestrianSpawnManager_execBroadCastPedestrianKilledEvent_Parms BroadCastPedestrianKilledEvent_Parms;
	BroadCastPedestrianKilledEvent_Parms.KilledPawn = KilledPawn;

	pFnBroadCastPedestrianKilledEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBroadCastPedestrianKilledEvent, &BroadCastPedestrianKilledEvent_Parms, NULL );

	pFnBroadCastPedestrianKilledEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPedestrianSpawnManager.GetSpawnDelay
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgPedestrianSpawnManager::GetSpawnDelay ( )
{
	static UFunction* pFnGetSpawnDelay = NULL;

	if ( ! pFnGetSpawnDelay )
		pFnGetSpawnDelay = (UFunction*) UObject::GObjObjects()->Data[ 43830 ];

	APgPedestrianSpawnManager_execGetSpawnDelay_Parms GetSpawnDelay_Parms;

	pFnGetSpawnDelay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpawnDelay, &GetSpawnDelay_Parms, NULL );

	pFnGetSpawnDelay->FunctionFlags |= 0x400;

	return GetSpawnDelay_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnManager.GetTimeLastSpawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgPedestrianSpawnManager::GetTimeLastSpawn ( )
{
	static UFunction* pFnGetTimeLastSpawn = NULL;

	if ( ! pFnGetTimeLastSpawn )
		pFnGetTimeLastSpawn = (UFunction*) UObject::GObjObjects()->Data[ 43828 ];

	APgPedestrianSpawnManager_execGetTimeLastSpawn_Parms GetTimeLastSpawn_Parms;

	pFnGetTimeLastSpawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimeLastSpawn, &GetTimeLastSpawn_Parms, NULL );

	pFnGetTimeLastSpawn->FunctionFlags |= 0x400;

	return GetTimeLastSpawn_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnManager.GetMaxPawns
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgPedestrianSpawnManager::GetMaxPawns ( )
{
	static UFunction* pFnGetMaxPawns = NULL;

	if ( ! pFnGetMaxPawns )
		pFnGetMaxPawns = (UFunction*) UObject::GObjObjects()->Data[ 43826 ];

	APgPedestrianSpawnManager_execGetMaxPawns_Parms GetMaxPawns_Parms;

	pFnGetMaxPawns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxPawns, &GetMaxPawns_Parms, NULL );

	pFnGetMaxPawns->FunctionFlags |= 0x400;

	return GetMaxPawns_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnManager.GetNumPawns
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgPedestrianSpawnManager::GetNumPawns ( )
{
	static UFunction* pFnGetNumPawns = NULL;

	if ( ! pFnGetNumPawns )
		pFnGetNumPawns = (UFunction*) UObject::GObjObjects()->Data[ 43824 ];

	APgPedestrianSpawnManager_execGetNumPawns_Parms GetNumPawns_Parms;

	pFnGetNumPawns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumPawns, &GetNumPawns_Parms, NULL );

	pFnGetNumPawns->FunctionFlags |= 0x400;

	return GetNumPawns_Parms.ReturnValue;
};

// Function GridGame.PgPedestrianSpawnManager.SetNumPawns
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            numPawns                       ( CPF_Parm )

void APgPedestrianSpawnManager::SetNumPawns ( int numPawns )
{
	static UFunction* pFnSetNumPawns = NULL;

	if ( ! pFnSetNumPawns )
		pFnSetNumPawns = (UFunction*) UObject::GObjObjects()->Data[ 49015 ];

	APgPedestrianSpawnManager_execSetNumPawns_Parms SetNumPawns_Parms;
	SetNumPawns_Parms.numPawns = numPawns;

	pFnSetNumPawns->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNumPawns, &SetNumPawns_Parms, NULL );

	pFnSetNumPawns->FunctionFlags |= 0x400;
};

// Function GridGame.PgSpecialMoveAsset.GetAction
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgSpecialMoveAsset::GetAction ( )
{
	static UFunction* pFnGetAction = NULL;

	if ( ! pFnGetAction )
		pFnGetAction = (UFunction*) UObject::GObjObjects()->Data[ 49952 ];

	UPgSpecialMoveAsset_execGetAction_Parms GetAction_Parms;

	pFnGetAction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAction, &GetAction_Parms, NULL );

	pFnGetAction->FunctionFlags |= 0x400;

	return GetAction_Parms.ReturnValue;
};

// Function GridGame.PgSpecialMoveAsset.CanExecuteOn
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

bool UPgSpecialMoveAsset::CanExecuteOn ( class APgPawn* Pawn )
{
	static UFunction* pFnCanExecuteOn = NULL;

	if ( ! pFnCanExecuteOn )
		pFnCanExecuteOn = (UFunction*) UObject::GObjObjects()->Data[ 49949 ];

	UPgSpecialMoveAsset_execCanExecuteOn_Parms CanExecuteOn_Parms;
	CanExecuteOn_Parms.Pawn = Pawn;

	pFnCanExecuteOn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanExecuteOn, &CanExecuteOn_Parms, NULL );

	pFnCanExecuteOn->FunctionFlags |= 0x400;

	return CanExecuteOn_Parms.ReturnValue;
};

// Function GridGame.PgGameplayEventsWriter.LogEnergyActorUse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            EventID                        ( CPF_Parm )
// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Team                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Usage                          ( CPF_Parm | CPF_NeedCtorLink )
// class AController*             Player                         ( CPF_Parm )

void UPgGameplayEventsWriter::LogEnergyActorUse ( int EventID, struct FString Type, struct FString Team, struct FString Usage, class AController* Player )
{
	static UFunction* pFnLogEnergyActorUse = NULL;

	if ( ! pFnLogEnergyActorUse )
		pFnLogEnergyActorUse = (UFunction*) UObject::GObjObjects()->Data[ 46680 ];

	UPgGameplayEventsWriter_execLogEnergyActorUse_Parms LogEnergyActorUse_Parms;
	LogEnergyActorUse_Parms.EventID = EventID;
	memcpy ( &LogEnergyActorUse_Parms.Type, &Type, 0xC );
	memcpy ( &LogEnergyActorUse_Parms.Team, &Team, 0xC );
	memcpy ( &LogEnergyActorUse_Parms.Usage, &Usage, 0xC );
	LogEnergyActorUse_Parms.Player = Player;

	pFnLogEnergyActorUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogEnergyActorUse, &LogEnergyActorUse_Parms, NULL );

	pFnLogEnergyActorUse->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameplayEventsWriter.Poll
// [0x00020002] 
// Parameters infos:

void UPgGameplayEventsWriter::Poll ( )
{
	static UFunction* pFnPoll = NULL;

	if ( ! pFnPoll )
		pFnPoll = (UFunction*) UObject::GObjObjects()->Data[ 46679 ];

	UPgGameplayEventsWriter_execPoll_Parms Poll_Parms;

	this->ProcessEvent ( pFnPoll, &Poll_Parms, NULL );
};

// Function GridGame.PgGameplayEventsWriter.SetConnection
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 remoteIP                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            remotePort                     ( CPF_Parm )

void UPgGameplayEventsWriter::SetConnection ( struct FString remoteIP, int remotePort )
{
	static UFunction* pFnSetConnection = NULL;

	if ( ! pFnSetConnection )
		pFnSetConnection = (UFunction*) UObject::GObjObjects()->Data[ 46676 ];

	UPgGameplayEventsWriter_execSetConnection_Parms SetConnection_Parms;
	memcpy ( &SetConnection_Parms.remoteIP, &remoteIP, 0xC );
	SetConnection_Parms.remotePort = remotePort;

	pFnSetConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetConnection, &SetConnection_Parms, NULL );

	pFnSetConnection->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameplayEventsWriter.OpenStatsFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Filename                       ( CPF_Parm | CPF_NeedCtorLink )

bool UPgGameplayEventsWriter::OpenStatsFile ( struct FString Filename )
{
	static UFunction* pFnOpenStatsFile = NULL;

	if ( ! pFnOpenStatsFile )
		pFnOpenStatsFile = (UFunction*) UObject::GObjObjects()->Data[ 46673 ];

	UPgGameplayEventsWriter_execOpenStatsFile_Parms OpenStatsFile_Parms;
	memcpy ( &OpenStatsFile_Parms.Filename, &Filename, 0xC );

	pFnOpenStatsFile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenStatsFile, &OpenStatsFile_Parms, NULL );

	pFnOpenStatsFile->FunctionFlags |= 0x400;

	return OpenStatsFile_Parms.ReturnValue;
};

// Function GridGame.PgGameplayEventsWriter.LogAllPlayerPositionsEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            EventID                        ( CPF_Parm )

void UPgGameplayEventsWriter::LogAllPlayerPositionsEvent ( int EventID )
{
	static UFunction* pFnLogAllPlayerPositionsEvent = NULL;

	if ( ! pFnLogAllPlayerPositionsEvent )
		pFnLogAllPlayerPositionsEvent = (UFunction*) UObject::GObjObjects()->Data[ 46671 ];

	UPgGameplayEventsWriter_execLogAllPlayerPositionsEvent_Parms LogAllPlayerPositionsEvent_Parms;
	LogAllPlayerPositionsEvent_Parms.EventID = EventID;

	pFnLogAllPlayerPositionsEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogAllPlayerPositionsEvent, &LogAllPlayerPositionsEvent_Parms, NULL );

	pFnLogAllPlayerPositionsEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgStat.Changed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStat::Changed ( )
{
	static UFunction* pFnChanged = NULL;

	if ( ! pFnChanged )
		pFnChanged = (UFunction*) UObject::GObjObjects()->Data[ 50031 ];

	UPgStat_execChanged_Parms Changed_Parms;

	pFnChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChanged, &Changed_Parms, NULL );

	pFnChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgStat.IsDifferent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          NewValue                       ( CPF_Parm )

bool UPgStat::IsDifferent ( float NewValue )
{
	static UFunction* pFnIsDifferent = NULL;

	if ( ! pFnIsDifferent )
		pFnIsDifferent = (UFunction*) UObject::GObjObjects()->Data[ 50028 ];

	UPgStat_execIsDifferent_Parms IsDifferent_Parms;
	IsDifferent_Parms.NewValue = NewValue;

	pFnIsDifferent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDifferent, &IsDifferent_Parms, NULL );

	pFnIsDifferent->FunctionFlags |= 0x400;

	return IsDifferent_Parms.ReturnValue;
};

// Function GridGame.PgStat.GetStatFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgStat::GetStatFloat ( )
{
	static UFunction* pFnGetStatFloat = NULL;

	if ( ! pFnGetStatFloat )
		pFnGetStatFloat = (UFunction*) UObject::GObjObjects()->Data[ 50026 ];

	UPgStat_execGetStatFloat_Parms GetStatFloat_Parms;

	pFnGetStatFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatFloat, &GetStatFloat_Parms, NULL );

	pFnGetStatFloat->FunctionFlags |= 0x400;

	return GetStatFloat_Parms.ReturnValue;
};

// Function GridGame.PgStat.GetStatBool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgStat::GetStatBool ( )
{
	static UFunction* pFnGetStatBool = NULL;

	if ( ! pFnGetStatBool )
		pFnGetStatBool = (UFunction*) UObject::GObjObjects()->Data[ 50024 ];

	UPgStat_execGetStatBool_Parms GetStatBool_Parms;

	pFnGetStatBool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatBool, &GetStatBool_Parms, NULL );

	pFnGetStatBool->FunctionFlags |= 0x400;

	return GetStatBool_Parms.ReturnValue;
};

// Function GridGame.PgStat.GetStatInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgStat::GetStatInt ( )
{
	static UFunction* pFnGetStatInt = NULL;

	if ( ! pFnGetStatInt )
		pFnGetStatInt = (UFunction*) UObject::GObjObjects()->Data[ 50022 ];

	UPgStat_execGetStatInt_Parms GetStatInt_Parms;

	pFnGetStatInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatInt, &GetStatInt_Parms, NULL );

	pFnGetStatInt->FunctionFlags |= 0x400;

	return GetStatInt_Parms.ReturnValue;
};

// Function GridGame.PgStat.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStat::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 50021 ];

	UPgStat_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgStat.SetStatFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  statOp                         ( CPF_Parm )
// float                          StatValue                      ( CPF_Parm )

void UPgStat::SetStatFloat ( unsigned char statOp, float StatValue )
{
	static UFunction* pFnSetStatFloat = NULL;

	if ( ! pFnSetStatFloat )
		pFnSetStatFloat = (UFunction*) UObject::GObjObjects()->Data[ 50018 ];

	UPgStat_execSetStatFloat_Parms SetStatFloat_Parms;
	SetStatFloat_Parms.statOp = statOp;
	SetStatFloat_Parms.StatValue = StatValue;

	pFnSetStatFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetStatFloat, &SetStatFloat_Parms, NULL );

	pFnSetStatFloat->FunctionFlags |= 0x400;
};

// Function GridGame.PgStat.SetStatBool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  statOp                         ( CPF_Parm )
// unsigned long                  StatValue                      ( CPF_Parm )

void UPgStat::SetStatBool ( unsigned char statOp, unsigned long StatValue )
{
	static UFunction* pFnSetStatBool = NULL;

	if ( ! pFnSetStatBool )
		pFnSetStatBool = (UFunction*) UObject::GObjObjects()->Data[ 50015 ];

	UPgStat_execSetStatBool_Parms SetStatBool_Parms;
	SetStatBool_Parms.statOp = statOp;
	SetStatBool_Parms.StatValue = StatValue;

	pFnSetStatBool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetStatBool, &SetStatBool_Parms, NULL );

	pFnSetStatBool->FunctionFlags |= 0x400;
};

// Function GridGame.PgStat.SetStatInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  statOp                         ( CPF_Parm )
// int                            StatValue                      ( CPF_Parm )

void UPgStat::SetStatInt ( unsigned char statOp, int StatValue )
{
	static UFunction* pFnSetStatInt = NULL;

	if ( ! pFnSetStatInt )
		pFnSetStatInt = (UFunction*) UObject::GObjObjects()->Data[ 50012 ];

	UPgStat_execSetStatInt_Parms SetStatInt_Parms;
	SetStatInt_Parms.statOp = statOp;
	SetStatInt_Parms.StatValue = StatValue;

	pFnSetStatInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetStatInt, &SetStatInt_Parms, NULL );

	pFnSetStatInt->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 44505 ];

	UPgStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 44502 ];

	UPgStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 44497 ];

	UPgStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgDistanceTravelledStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgDistanceTravelledStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 44517 ];

	UPgDistanceTravelledStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgDistanceTravelledStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgDistanceTravelledStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 44514 ];

	UPgDistanceTravelledStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgDistanceTravelledStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgDistanceTravelledStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 44509 ];

	UPgDistanceTravelledStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgDrivingDistanceStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgDrivingDistanceStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 44535 ];

	UPgDrivingDistanceStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgDrivingDistanceStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgDrivingDistanceStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 44530 ];

	UPgDrivingDistanceStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgWalkingDistanceStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgWalkingDistanceStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 51264 ];

	UPgWalkingDistanceStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgWalkingDistanceStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgWalkingDistanceStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 51259 ];

	UPgWalkingDistanceStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgHighestFallStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgHighestFallStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 46972 ];

	UPgHighestFallStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgHighestFallStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgHighestFallStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 46969 ];

	UPgHighestFallStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgHighestFallStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgHighestFallStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 46964 ];

	UPgHighestFallStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgLongestKillStreakStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgLongestKillStreakStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 47263 ];

	UPgLongestKillStreakStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgLongestKillStreakStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgLongestKillStreakStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 47260 ];

	UPgLongestKillStreakStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgLongestKillStreakStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgLongestKillStreakStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 47255 ];

	UPgLongestKillStreakStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgTestStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgTestStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 50495 ];

	UPgTestStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgTestStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgTestStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 50490 ];

	UPgTestStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgTimeAliveStatHandler.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgTimeAliveStatHandler::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 50507 ];

	UPgTimeAliveStatHandler_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgTimeAliveStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgTimeAliveStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 50504 ];

	UPgTimeAliveStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgTimeAliveStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgTimeAliveStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 50499 ];

	UPgTimeAliveStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgTutorialCounterStatHandler.GetSupportedMessages
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< struct FName > UPgTutorialCounterStatHandler::GetSupportedMessages ( )
{
	static UFunction* pFnGetSupportedMessages = NULL;

	if ( ! pFnGetSupportedMessages )
		pFnGetSupportedMessages = (UFunction*) UObject::GObjObjects()->Data[ 50521 ];

	UPgTutorialCounterStatHandler_execGetSupportedMessages_Parms GetSupportedMessages_Parms;

	pFnGetSupportedMessages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSupportedMessages, &GetSupportedMessages_Parms, NULL );

	pFnGetSupportedMessages->FunctionFlags |= 0x400;

	return GetSupportedMessages_Parms.ReturnValue;
};

// Function GridGame.PgTutorialCounterStatHandler.StatMsg
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   msg                            ( CPF_Parm )
// class UPgStat*                 StatData                       ( CPF_Parm )
// class APgPlayerController*     Controller                     ( CPF_OptionalParm | CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgTutorialCounterStatHandler::StatMsg ( struct FName msg, class UPgStat* StatData, class APgPlayerController* Controller, float Payload )
{
	static UFunction* pFnStatMsg = NULL;

	if ( ! pFnStatMsg )
		pFnStatMsg = (UFunction*) UObject::GObjObjects()->Data[ 50516 ];

	UPgTutorialCounterStatHandler_execStatMsg_Parms StatMsg_Parms;
	memcpy ( &StatMsg_Parms.msg, &msg, 0x8 );
	StatMsg_Parms.StatData = StatData;
	StatMsg_Parms.Controller = Controller;
	StatMsg_Parms.Payload = Payload;

	pFnStatMsg->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMsg, &StatMsg_Parms, NULL );

	pFnStatMsg->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatMonitor.Load
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 loadString                     ( CPF_Parm | CPF_NeedCtorLink )

void UPgStatMonitor::Load ( struct FString loadString )
{
	static UFunction* pFnLoad = NULL;

	if ( ! pFnLoad )
		pFnLoad = (UFunction*) UObject::GObjObjects()->Data[ 43980 ];

	UPgStatMonitor_execLoad_Parms Load_Parms;
	memcpy ( &Load_Parms.loadString, &loadString, 0xC );

	pFnLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad, &Load_Parms, NULL );

	pFnLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatMonitor.Save
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 saveString                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgStatMonitor::Save ( struct FString* saveString )
{
	static UFunction* pFnSave = NULL;

	if ( ! pFnSave )
		pFnSave = (UFunction*) UObject::GObjObjects()->Data[ 43978 ];

	UPgStatMonitor_execSave_Parms Save_Parms;

	pFnSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSave, &Save_Parms, NULL );

	pFnSave->FunctionFlags |= 0x400;

	if ( saveString )
		memcpy ( saveString, &Save_Parms.saveString, 0xC );
};

// Function GridGame.PgStatMonitor.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatMonitor::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 43977 ];

	UPgStatMonitor_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatMonitor.Changed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgStatMonitor::Changed ( class UPgStat* Stat )
{
	static UFunction* pFnChanged = NULL;

	if ( ! pFnChanged )
		pFnChanged = (UFunction*) UObject::GObjObjects()->Data[ 43975 ];

	UPgStatMonitor_execChanged_Parms Changed_Parms;
	Changed_Parms.Stat = Stat;

	pFnChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChanged, &Changed_Parms, NULL );

	pFnChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatKismetMonitor.Changed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgStatKismetMonitor::Changed ( class UPgStat* Stat )
{
	static UFunction* pFnChanged = NULL;

	if ( ! pFnChanged )
		pFnChanged = (UFunction*) UObject::GObjObjects()->Data[ 50240 ];

	UPgStatKismetMonitor_execChanged_Parms Changed_Parms;
	Changed_Parms.Stat = Stat;

	pFnChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChanged, &Changed_Parms, NULL );

	pFnChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatThresholdMonitor.Load
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 loadString                     ( CPF_Parm | CPF_NeedCtorLink )

void UPgStatThresholdMonitor::Load ( struct FString loadString )
{
	static UFunction* pFnLoad = NULL;

	if ( ! pFnLoad )
		pFnLoad = (UFunction*) UObject::GObjObjects()->Data[ 44005 ];

	UPgStatThresholdMonitor_execLoad_Parms Load_Parms;
	memcpy ( &Load_Parms.loadString, &loadString, 0xC );

	pFnLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad, &Load_Parms, NULL );

	pFnLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatThresholdMonitor.Save
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 saveString                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgStatThresholdMonitor::Save ( struct FString* saveString )
{
	static UFunction* pFnSave = NULL;

	if ( ! pFnSave )
		pFnSave = (UFunction*) UObject::GObjObjects()->Data[ 44003 ];

	UPgStatThresholdMonitor_execSave_Parms Save_Parms;

	pFnSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSave, &Save_Parms, NULL );

	pFnSave->FunctionFlags |= 0x400;

	if ( saveString )
		memcpy ( saveString, &Save_Parms.saveString, 0xC );
};

// Function GridGame.PgStatThresholdMonitor.ConditionSatisfied
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgStatsTracker*         tracker                        ( CPF_Parm )

bool UPgStatThresholdMonitor::ConditionSatisfied ( class UPgStatsTracker* tracker )
{
	static UFunction* pFnConditionSatisfied = NULL;

	if ( ! pFnConditionSatisfied )
		pFnConditionSatisfied = (UFunction*) UObject::GObjObjects()->Data[ 44000 ];

	UPgStatThresholdMonitor_execConditionSatisfied_Parms ConditionSatisfied_Parms;
	ConditionSatisfied_Parms.tracker = tracker;

	pFnConditionSatisfied->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConditionSatisfied, &ConditionSatisfied_Parms, NULL );

	pFnConditionSatisfied->FunctionFlags |= 0x400;

	return ConditionSatisfied_Parms.ReturnValue;
};

// Function GridGame.PgStatThresholdMonitor.NotifyHud
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatThresholdMonitor::NotifyHud ( )
{
	static UFunction* pFnNotifyHud = NULL;

	if ( ! pFnNotifyHud )
		pFnNotifyHud = (UFunction*) UObject::GObjObjects()->Data[ 43999 ];

	UPgStatThresholdMonitor_execNotifyHud_Parms NotifyHud_Parms;

	pFnNotifyHud->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyHud, &NotifyHud_Parms, NULL );

	pFnNotifyHud->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatThresholdMonitor.Triggered
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgStatThresholdMonitor::Triggered ( class UPgStat* Stat )
{
	static UFunction* pFnTriggered = NULL;

	if ( ! pFnTriggered )
		pFnTriggered = (UFunction*) UObject::GObjObjects()->Data[ 43997 ];

	UPgStatThresholdMonitor_execTriggered_Parms Triggered_Parms;
	Triggered_Parms.Stat = Stat;

	pFnTriggered->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggered, &Triggered_Parms, NULL );

	pFnTriggered->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatThresholdMonitor.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatThresholdMonitor::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 43996 ];

	UPgStatThresholdMonitor_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatThresholdMonitor.Changed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgStatThresholdMonitor::Changed ( class UPgStat* Stat )
{
	static UFunction* pFnChanged = NULL;

	if ( ! pFnChanged )
		pFnChanged = (UFunction*) UObject::GObjObjects()->Data[ 43994 ];

	UPgStatThresholdMonitor_execChanged_Parms Changed_Parms;
	Changed_Parms.Stat = Stat;

	pFnChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChanged, &Changed_Parms, NULL );

	pFnChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgCollectableStatMonitor.Changed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgCollectableStatMonitor::Changed ( class UPgStat* Stat )
{
	static UFunction* pFnChanged = NULL;

	if ( ! pFnChanged )
		pFnChanged = (UFunction*) UObject::GObjObjects()->Data[ 44007 ];

	UPgCollectableStatMonitor_execChanged_Parms Changed_Parms;
	Changed_Parms.Stat = Stat;

	pFnChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChanged, &Changed_Parms, NULL );

	pFnChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatsTracker.DisplayDebug
// [0x00420002] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgStatsTracker::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 45950 ];

	UPgStatsTracker_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgStatsTracker.StatChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 Stat                           ( CPF_Parm )

void UPgStatsTracker::StatChanged ( class UPgStat* Stat )
{
	static UFunction* pFnStatChanged = NULL;

	if ( ! pFnStatChanged )
		pFnStatChanged = (UFunction*) UObject::GObjObjects()->Data[ 45948 ];

	UPgStatsTracker_execStatChanged_Parms StatChanged_Parms;
	StatChanged_Parms.Stat = Stat;

	pFnStatChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatChanged, &StatChanged_Parms, NULL );

	pFnStatChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatsTracker.PrintStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatsTracker::PrintStats ( )
{
	static UFunction* pFnPrintStats = NULL;

	if ( ! pFnPrintStats )
		pFnPrintStats = (UFunction*) UObject::GObjObjects()->Data[ 45947 ];

	UPgStatsTracker_execPrintStats_Parms PrintStats_Parms;

	pFnPrintStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPrintStats, &PrintStats_Parms, NULL );

	pFnPrintStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatsTracker.GetKillStatIndices
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   DamageCause                    ( CPF_Parm )
// struct FName                   PawnType                       ( CPF_Parm )
// unsigned long                  PlayerKilled                   ( CPF_Parm )
// TArray< int >                  Stats                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgStatsTracker::GetKillStatIndices ( struct FName DamageCause, struct FName PawnType, unsigned long PlayerKilled, TArray< int >* Stats )
{
	static UFunction* pFnGetKillStatIndices = NULL;

	if ( ! pFnGetKillStatIndices )
		pFnGetKillStatIndices = (UFunction*) UObject::GObjObjects()->Data[ 45941 ];

	UPgStatsTracker_execGetKillStatIndices_Parms GetKillStatIndices_Parms;
	memcpy ( &GetKillStatIndices_Parms.DamageCause, &DamageCause, 0x8 );
	memcpy ( &GetKillStatIndices_Parms.PawnType, &PawnType, 0x8 );
	GetKillStatIndices_Parms.PlayerKilled = PlayerKilled;

	pFnGetKillStatIndices->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKillStatIndices, &GetKillStatIndices_Parms, NULL );

	pFnGetKillStatIndices->FunctionFlags |= 0x400;

	if ( Stats )
		memcpy ( Stats, &GetKillStatIndices_Parms.Stats, 0xC );
};

// Function GridGame.PgStatsTracker.GetKillStat
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   DamageCause                    ( CPF_Parm )
// struct FName                   PawnType                       ( CPF_Parm )
// unsigned long                  PlayerKilled                   ( CPF_Parm )
// TArray< class UPgStat* >       Stats                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgStatsTracker::GetKillStat ( struct FName DamageCause, struct FName PawnType, unsigned long PlayerKilled, TArray< class UPgStat* >* Stats )
{
	static UFunction* pFnGetKillStat = NULL;

	if ( ! pFnGetKillStat )
		pFnGetKillStat = (UFunction*) UObject::GObjObjects()->Data[ 45935 ];

	UPgStatsTracker_execGetKillStat_Parms GetKillStat_Parms;
	memcpy ( &GetKillStat_Parms.DamageCause, &DamageCause, 0x8 );
	memcpy ( &GetKillStat_Parms.PawnType, &PawnType, 0x8 );
	GetKillStat_Parms.PlayerKilled = PlayerKilled;

	pFnGetKillStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetKillStat, &GetKillStat_Parms, NULL );

	pFnGetKillStat->FunctionFlags |= 0x400;

	if ( Stats )
		memcpy ( Stats, &GetKillStat_Parms.Stats, 0xC );
};

// Function GridGame.PgStatsTracker.GetStatByIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class UPgStat* UPgStatsTracker::GetStatByIndex ( int Index )
{
	static UFunction* pFnGetStatByIndex = NULL;

	if ( ! pFnGetStatByIndex )
		pFnGetStatByIndex = (UFunction*) UObject::GObjObjects()->Data[ 45932 ];

	UPgStatsTracker_execGetStatByIndex_Parms GetStatByIndex_Parms;
	GetStatByIndex_Parms.Index = Index;

	pFnGetStatByIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatByIndex, &GetStatByIndex_Parms, NULL );

	pFnGetStatByIndex->FunctionFlags |= 0x400;

	return GetStatByIndex_Parms.ReturnValue;
};

// Function GridGame.PgStatsTracker.GetStatIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   StatName                       ( CPF_Parm )

int UPgStatsTracker::GetStatIndex ( struct FName StatName )
{
	static UFunction* pFnGetStatIndex = NULL;

	if ( ! pFnGetStatIndex )
		pFnGetStatIndex = (UFunction*) UObject::GObjObjects()->Data[ 45929 ];

	UPgStatsTracker_execGetStatIndex_Parms GetStatIndex_Parms;
	memcpy ( &GetStatIndex_Parms.StatName, &StatName, 0x8 );

	pFnGetStatIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatIndex, &GetStatIndex_Parms, NULL );

	pFnGetStatIndex->FunctionFlags |= 0x400;

	return GetStatIndex_Parms.ReturnValue;
};

// Function GridGame.PgStatsTracker.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgStatsTracker::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 45928 ];

	UPgStatsTracker_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatsTracker.StatMessage
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   StatName                       ( CPF_Parm )
// struct FName                   StatMsg                        ( CPF_Parm )
// float                          Payload                        ( CPF_OptionalParm | CPF_Parm )

void UPgStatsTracker::StatMessage ( struct FName StatName, struct FName StatMsg, float Payload )
{
	static UFunction* pFnStatMessage = NULL;

	if ( ! pFnStatMessage )
		pFnStatMessage = (UFunction*) UObject::GObjObjects()->Data[ 45924 ];

	UPgStatsTracker_execStatMessage_Parms StatMessage_Parms;
	memcpy ( &StatMessage_Parms.StatName, &StatName, 0x8 );
	memcpy ( &StatMessage_Parms.StatMsg, &StatMsg, 0x8 );
	StatMessage_Parms.Payload = Payload;

	pFnStatMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStatMessage, &StatMessage_Parms, NULL );

	pFnStatMessage->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatsTracker.GetStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgStat*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   StatName                       ( CPF_Parm )

class UPgStat* UPgStatsTracker::GetStat ( struct FName StatName )
{
	static UFunction* pFnGetStat = NULL;

	if ( ! pFnGetStat )
		pFnGetStat = (UFunction*) UObject::GObjObjects()->Data[ 45921 ];

	UPgStatsTracker_execGetStat_Parms GetStat_Parms;
	memcpy ( &GetStat_Parms.StatName, &StatName, 0x8 );

	pFnGetStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStat, &GetStat_Parms, NULL );

	pFnGetStat->FunctionFlags |= 0x400;

	return GetStat_Parms.ReturnValue;
};

// Function GridGame.PgAirVehicle.GetDefaultCameraMode
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       RequestedBy                    ( CPF_Parm )

struct FName APgAirVehicle::GetDefaultCameraMode ( class APlayerController* RequestedBy )
{
	static UFunction* pFnGetDefaultCameraMode = NULL;

	if ( ! pFnGetDefaultCameraMode )
		pFnGetDefaultCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 41581 ];

	APgAirVehicle_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms, NULL );

	return GetDefaultCameraMode_Parms.ReturnValue;
};

// Function GridGame.PgAirVehicle.SetCameraArchetype
// [0x010201C2] 
// Parameters infos:
// class APgPlayerCamera*         newArchetype                   ( CPF_Parm )

void APgAirVehicle::SetCameraArchetype ( class APgPlayerCamera* newArchetype )
{
	static UFunction* pFnSetCameraArchetype = NULL;

	if ( ! pFnSetCameraArchetype )
		pFnSetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 41579 ];

	APgAirVehicle_execSetCameraArchetype_Parms SetCameraArchetype_Parms;
	SetCameraArchetype_Parms.newArchetype = newArchetype;

	this->ProcessEvent ( pFnSetCameraArchetype, &SetCameraArchetype_Parms, NULL );
};

// Function GridGame.PgAirVehicle.OnTeleport
// [0x00020102] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void APgAirVehicle::OnTeleport ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleport = NULL;

	if ( ! pFnOnTeleport )
		pFnOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 41577 ];

	APgAirVehicle_execOnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleport, &OnTeleport_Parms, NULL );
};

// Function GridGame.PgAirVehicle.GetCameraArchetype
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerCamera* APgAirVehicle::GetCameraArchetype ( )
{
	static UFunction* pFnGetCameraArchetype = NULL;

	if ( ! pFnGetCameraArchetype )
		pFnGetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 41575 ];

	APgAirVehicle_execGetCameraArchetype_Parms GetCameraArchetype_Parms;

	this->ProcessEvent ( pFnGetCameraArchetype, &GetCameraArchetype_Parms, NULL );

	return GetCameraArchetype_Parms.ReturnValue;
};

// Function GridGame.PgHoverVehicle.GetDefaultCameraMode
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       RequestedBy                    ( CPF_Parm )

struct FName APgHoverVehicle::GetDefaultCameraMode ( class APlayerController* RequestedBy )
{
	static UFunction* pFnGetDefaultCameraMode = NULL;

	if ( ! pFnGetDefaultCameraMode )
		pFnGetDefaultCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 46974 ];

	APgHoverVehicle_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms, NULL );

	return GetDefaultCameraMode_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.DriverGTFO
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgVehicle::eventDriverGTFO ( )
{
	static UFunction* pFnDriverGTFO = NULL;

	if ( ! pFnDriverGTFO )
		pFnDriverGTFO = (UFunction*) UObject::GObjObjects()->Data[ 45122 ];

	APgVehicle_eventDriverGTFO_Parms DriverGTFO_Parms;

	this->ProcessEvent ( pFnDriverGTFO, &DriverGTFO_Parms, NULL );

	return DriverGTFO_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator APgVehicle::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 51090 ];

	APgVehicle_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.GetWeaponAimDirection
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FRotator APgVehicle::eventGetWeaponAimDirection ( int SeatIndex )
{
	static UFunction* pFnGetWeaponAimDirection = NULL;

	if ( ! pFnGetWeaponAimDirection )
		pFnGetWeaponAimDirection = (UFunction*) UObject::GObjObjects()->Data[ 51086 ];

	APgVehicle_eventGetWeaponAimDirection_Parms GetWeaponAimDirection_Parms;
	GetWeaponAimDirection_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetWeaponAimDirection, &GetWeaponAimDirection_Parms, NULL );

	return GetWeaponAimDirection_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.GetProjectileExtent
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector APgVehicle::eventGetProjectileExtent ( int SeatIndex )
{
	static UFunction* pFnGetProjectileExtent = NULL;

	if ( ! pFnGetProjectileExtent )
		pFnGetProjectileExtent = (UFunction*) UObject::GObjObjects()->Data[ 51080 ];

	APgVehicle_eventGetProjectileExtent_Parms GetProjectileExtent_Parms;
	GetProjectileExtent_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetProjectileExtent, &GetProjectileExtent_Parms, NULL );

	return GetProjectileExtent_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.ResetStrafeDamping
// [0x00020102] 
// Parameters infos:

void APgVehicle::ResetStrafeDamping ( )
{
	static UFunction* pFnResetStrafeDamping = NULL;

	if ( ! pFnResetStrafeDamping )
		pFnResetStrafeDamping = (UFunction*) UObject::GObjObjects()->Data[ 51079 ];

	APgVehicle_execResetStrafeDamping_Parms ResetStrafeDamping_Parms;

	this->ProcessEvent ( pFnResetStrafeDamping, &ResetStrafeDamping_Parms, NULL );
};

// Function GridGame.PgVehicle.OnAnimEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void APgVehicle::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 51075 ];

	APgVehicle_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function GridGame.PgVehicle.PlayVehicleAnimation
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void APgVehicle::PlayVehicleAnimation ( struct FName EventTag )
{
	static UFunction* pFnPlayVehicleAnimation = NULL;

	if ( ! pFnPlayVehicleAnimation )
		pFnPlayVehicleAnimation = (UFunction*) UObject::GObjObjects()->Data[ 51073 ];

	APgVehicle_execPlayVehicleAnimation_Parms PlayVehicleAnimation_Parms;
	memcpy ( &PlayVehicleAnimation_Parms.EventTag, &EventTag, 0x8 );

	pFnPlayVehicleAnimation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayVehicleAnimation, &PlayVehicleAnimation_Parms, NULL );

	pFnPlayVehicleAnimation->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.OnGiveInventoryArch
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_GiveInventoryArch* inAction                       ( CPF_Parm )

void APgVehicle::OnGiveInventoryArch ( class UPgSeqAct_GiveInventoryArch* inAction )
{
	static UFunction* pFnOnGiveInventoryArch = NULL;

	if ( ! pFnOnGiveInventoryArch )
		pFnOnGiveInventoryArch = (UFunction*) UObject::GObjObjects()->Data[ 51070 ];

	APgVehicle_execOnGiveInventoryArch_Parms OnGiveInventoryArch_Parms;
	OnGiveInventoryArch_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnGiveInventoryArch, &OnGiveInventoryArch_Parms, NULL );
};

// Function GridGame.PgVehicle.OnRemoveInventoryArch
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_RemoveInventoryArch* inAction                       ( CPF_Parm )

void APgVehicle::OnRemoveInventoryArch ( class UPgSeqAct_RemoveInventoryArch* inAction )
{
	static UFunction* pFnOnRemoveInventoryArch = NULL;

	if ( ! pFnOnRemoveInventoryArch )
		pFnOnRemoveInventoryArch = (UFunction*) UObject::GObjObjects()->Data[ 51067 ];

	APgVehicle_execOnRemoveInventoryArch_Parms OnRemoveInventoryArch_Parms;
	OnRemoveInventoryArch_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnRemoveInventoryArch, &OnRemoveInventoryArch_Parms, NULL );
};

// Function GridGame.PgVehicle.OnTeleport
// [0x00020102] 
// Parameters infos:
// class USeqAct_Teleport*        Action                         ( CPF_Parm )

void APgVehicle::OnTeleport ( class USeqAct_Teleport* Action )
{
	static UFunction* pFnOnTeleport = NULL;

	if ( ! pFnOnTeleport )
		pFnOnTeleport = (UFunction*) UObject::GObjObjects()->Data[ 51065 ];

	APgVehicle_execOnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;

	this->ProcessEvent ( pFnOnTeleport, &OnTeleport_Parms, NULL );
};

// Function GridGame.PgVehicle.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void APgVehicle::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 51061 ];

	APgVehicle_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function GridGame.PgVehicle.FaceRotation
// [0x00820102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void APgVehicle::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 51055 ];

	APgVehicle_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function GridGame.PgVehicle.KnockdownDriver
// [0x00820002] 
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 Impulse                        ( CPF_Parm )
// struct FName                   bone                           ( CPF_Parm )

void APgVehicle::KnockdownDriver ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, float Momentum, struct FVector Impulse, struct FName bone )
{
	static UFunction* pFnKnockdownDriver = NULL;

	if ( ! pFnKnockdownDriver )
		pFnKnockdownDriver = (UFunction*) UObject::GObjObjects()->Data[ 51046 ];

	APgVehicle_execKnockdownDriver_Parms KnockdownDriver_Parms;
	KnockdownDriver_Parms.Damage = Damage;
	KnockdownDriver_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &KnockdownDriver_Parms.HitLocation, &HitLocation, 0xC );
	KnockdownDriver_Parms.Momentum = Momentum;
	memcpy ( &KnockdownDriver_Parms.Impulse, &Impulse, 0xC );
	memcpy ( &KnockdownDriver_Parms.bone, &bone, 0x8 );

	this->ProcessEvent ( pFnKnockdownDriver, &KnockdownDriver_Parms, NULL );
};

// Function GridGame.PgVehicle.DoJump
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool APgVehicle::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 51043 ];

	APgVehicle_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.ServerSeatWeaponRotation
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// struct FRotator                NewRotation                    ( CPF_Parm )

void APgVehicle::eventServerSeatWeaponRotation ( int SeatIndex, struct FRotator NewRotation )
{
	static UFunction* pFnServerSeatWeaponRotation = NULL;

	if ( ! pFnServerSeatWeaponRotation )
		pFnServerSeatWeaponRotation = (UFunction*) UObject::GObjObjects()->Data[ 51040 ];

	APgVehicle_eventServerSeatWeaponRotation_Parms ServerSeatWeaponRotation_Parms;
	ServerSeatWeaponRotation_Parms.SeatIndex = SeatIndex;
	memcpy ( &ServerSeatWeaponRotation_Parms.NewRotation, &NewRotation, 0xC );

	pFnServerSeatWeaponRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerSeatWeaponRotation, &ServerSeatWeaponRotation_Parms, NULL );

	pFnServerSeatWeaponRotation->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.VehicleWeaponFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void APgVehicle::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 51034 ];

	APgVehicle_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function GridGame.PgVehicle.VehicleWeaponStoppedFiring
// [0x00020100] 
// Parameters infos:
// unsigned long                  bViaReplication                ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void APgVehicle::VehicleWeaponStoppedFiring ( unsigned long bViaReplication, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponStoppedFiring = NULL;

	if ( ! pFnVehicleWeaponStoppedFiring )
		pFnVehicleWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 51031 ];

	APgVehicle_execVehicleWeaponStoppedFiring_Parms VehicleWeaponStoppedFiring_Parms;
	VehicleWeaponStoppedFiring_Parms.bViaReplication = bViaReplication;
	VehicleWeaponStoppedFiring_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponStoppedFiring, &VehicleWeaponStoppedFiring_Parms, NULL );
};

// Function GridGame.PgVehicle.WeaponStoppedFiring
// [0x00020100] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void APgVehicle::WeaponStoppedFiring ( class AWeapon* InWeapon, unsigned long bViaReplication )
{
	static UFunction* pFnWeaponStoppedFiring = NULL;

	if ( ! pFnWeaponStoppedFiring )
		pFnWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 51028 ];

	APgVehicle_execWeaponStoppedFiring_Parms WeaponStoppedFiring_Parms;
	WeaponStoppedFiring_Parms.InWeapon = InWeapon;
	WeaponStoppedFiring_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnWeaponStoppedFiring, &WeaponStoppedFiring_Parms, NULL );
};

// Function GridGame.PgVehicle.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool APgVehicle::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 51025 ];

	APgVehicle_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.InitializeSeats
// [0x00020002] 
// Parameters infos:

void APgVehicle::InitializeSeats ( )
{
	static UFunction* pFnInitializeSeats = NULL;

	if ( ! pFnInitializeSeats )
		pFnInitializeSeats = (UFunction*) UObject::GObjObjects()->Data[ 51022 ];

	APgVehicle_execInitializeSeats_Parms InitializeSeats_Parms;

	this->ProcessEvent ( pFnInitializeSeats, &InitializeSeats_Parms, NULL );
};

// Function GridGame.PgVehicle.ServerRetroTurn
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned char                  Direction                      ( CPF_Parm )

void APgVehicle::eventServerRetroTurn ( unsigned char Direction )
{
	static UFunction* pFnServerRetroTurn = NULL;

	if ( ! pFnServerRetroTurn )
		pFnServerRetroTurn = (UFunction*) UObject::GObjObjects()->Data[ 51020 ];

	APgVehicle_eventServerRetroTurn_Parms ServerRetroTurn_Parms;
	ServerRetroTurn_Parms.Direction = Direction;

	pFnServerRetroTurn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerRetroTurn, &ServerRetroTurn_Parms, NULL );

	pFnServerRetroTurn->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.RetroTurn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Direction                      ( CPF_Parm )

void APgVehicle::RetroTurn ( unsigned char Direction )
{
	static UFunction* pFnRetroTurn = NULL;

	if ( ! pFnRetroTurn )
		pFnRetroTurn = (UFunction*) UObject::GObjObjects()->Data[ 51018 ];

	APgVehicle_execRetroTurn_Parms RetroTurn_Parms;
	RetroTurn_Parms.Direction = Direction;

	pFnRetroTurn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRetroTurn, &RetroTurn_Parms, NULL );

	pFnRetroTurn->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.ServerBoost
// [0x00220CC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgVehicle::eventServerBoost ( )
{
	static UFunction* pFnServerBoost = NULL;

	if ( ! pFnServerBoost )
		pFnServerBoost = (UFunction*) UObject::GObjObjects()->Data[ 51017 ];

	APgVehicle_eventServerBoost_Parms ServerBoost_Parms;

	pFnServerBoost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerBoost, &ServerBoost_Parms, NULL );

	pFnServerBoost->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.IsInvisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgVehicle::IsInvisible ( )
{
	static UFunction* pFnIsInvisible = NULL;

	if ( ! pFnIsInvisible )
		pFnIsInvisible = (UFunction*) UObject::GObjObjects()->Data[ 51015 ];

	APgVehicle_execIsInvisible_Parms IsInvisible_Parms;

	pFnIsInvisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInvisible, &IsInvisible_Parms, NULL );

	pFnIsInvisible->FunctionFlags |= 0x400;

	return IsInvisible_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void APgVehicle::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 51012 ];

	APgVehicle_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function GridGame.PgVehicle.HitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void APgVehicle::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 51008 ];

	APgVehicle_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function GridGame.PgVehicle.GetExitRotation
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

struct FRotator APgVehicle::GetExitRotation ( class AController* C )
{
	static UFunction* pFnGetExitRotation = NULL;

	if ( ! pFnGetExitRotation )
		pFnGetExitRotation = (UFunction*) UObject::GObjObjects()->Data[ 51004 ];

	APgVehicle_execGetExitRotation_Parms GetExitRotation_Parms;
	GetExitRotation_Parms.C = C;

	this->ProcessEvent ( pFnGetExitRotation, &GetExitRotation_Parms, NULL );

	return GetExitRotation_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.HandleDeadVehicleDriver
// [0x00020002] 
// Parameters infos:

void APgVehicle::HandleDeadVehicleDriver ( )
{
	static UFunction* pFnHandleDeadVehicleDriver = NULL;

	if ( ! pFnHandleDeadVehicleDriver )
		pFnHandleDeadVehicleDriver = (UFunction*) UObject::GObjObjects()->Data[ 51003 ];

	APgVehicle_execHandleDeadVehicleDriver_Parms HandleDeadVehicleDriver_Parms;

	this->ProcessEvent ( pFnHandleDeadVehicleDriver, &HandleDeadVehicleDriver_Parms, NULL );
};

// Function GridGame.PgVehicle.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool APgVehicle::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 42991 ];

	APgVehicle_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.DriverLeft
// [0x00020002] 
// Parameters infos:

void APgVehicle::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 50998 ];

	APgVehicle_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function GridGame.PgVehicle.SitDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void APgVehicle::SitDriver ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 50995 ];

	APgVehicle_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.P = P;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function GridGame.PgVehicle.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool APgVehicle::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 50992 ];

	APgVehicle_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.CanEnterVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool APgVehicle::CanEnterVehicle ( class APawn* P )
{
	static UFunction* pFnCanEnterVehicle = NULL;

	if ( ! pFnCanEnterVehicle )
		pFnCanEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 50988 ];

	APgVehicle_execCanEnterVehicle_Parms CanEnterVehicle_Parms;
	CanEnterVehicle_Parms.P = P;

	this->ProcessEvent ( pFnCanEnterVehicle, &CanEnterVehicle_Parms, NULL );

	return CanEnterVehicle_Parms.ReturnValue;
};

// Function GridGame.PgVehicle._TryToDrive
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool APgVehicle::event_TryToDrive ( class APawn* P )
{
	static UFunction* pFn_TryToDrive = NULL;

	if ( ! pFn_TryToDrive )
		pFn_TryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 50985 ];

	APgVehicle_event_TryToDrive_Parms _TryToDrive_Parms;
	_TryToDrive_Parms.P = P;

	this->ProcessEvent ( pFn_TryToDrive, &_TryToDrive_Parms, NULL );

	return _TryToDrive_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.WouldVehiclePenetrateWorld
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm | CPF_OutParm )

bool APgVehicle::WouldVehiclePenetrateWorld ( class APawn* P, struct FVector* SpawnLocation )
{
	static UFunction* pFnWouldVehiclePenetrateWorld = NULL;

	if ( ! pFnWouldVehiclePenetrateWorld )
		pFnWouldVehiclePenetrateWorld = (UFunction*) UObject::GObjObjects()->Data[ 50981 ];

	APgVehicle_execWouldVehiclePenetrateWorld_Parms WouldVehiclePenetrateWorld_Parms;
	WouldVehiclePenetrateWorld_Parms.P = P;

	pFnWouldVehiclePenetrateWorld->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWouldVehiclePenetrateWorld, &WouldVehiclePenetrateWorld_Parms, NULL );

	pFnWouldVehiclePenetrateWorld->FunctionFlags |= 0x400;

	if ( SpawnLocation )
		memcpy ( SpawnLocation, &WouldVehiclePenetrateWorld_Parms.SpawnLocation, 0xC );

	return WouldVehiclePenetrateWorld_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          Forward                        ( CPF_Parm )
// float                          Strafe                         ( CPF_Parm )
// float                          Up                             ( CPF_Parm )

void APgVehicle::SetInputs ( float Forward, float Strafe, float Up )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 50975 ];

	APgVehicle_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.Forward = Forward;
	SetInputs_Parms.Strafe = Strafe;
	SetInputs_Parms.Up = Up;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function GridGame.PgVehicle.RemapAxisByPlatform
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Value                          ( CPF_Parm )

float APgVehicle::RemapAxisByPlatform ( float Value )
{
	static UFunction* pFnRemapAxisByPlatform = NULL;

	if ( ! pFnRemapAxisByPlatform )
		pFnRemapAxisByPlatform = (UFunction*) UObject::GObjObjects()->Data[ 50972 ];

	APgVehicle_execRemapAxisByPlatform_Parms RemapAxisByPlatform_Parms;
	RemapAxisByPlatform_Parms.Value = Value;

	pFnRemapAxisByPlatform->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemapAxisByPlatform, &RemapAxisByPlatform_Parms, NULL );

	pFnRemapAxisByPlatform->FunctionFlags |= 0x400;

	return RemapAxisByPlatform_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.AdjustDamage
// [0x00424002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// int                            inDamage                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void APgVehicle::AdjustDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, int* inDamage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustDamage = NULL;

	if ( ! pFnAdjustDamage )
		pFnAdjustDamage = (UFunction*) UObject::GObjObjects()->Data[ 50964 ];

	APgVehicle_execAdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy ( &AdjustDamage_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnAdjustDamage, &AdjustDamage_Parms, NULL );

	if ( inDamage )
		*inDamage = AdjustDamage_Parms.inDamage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustDamage_Parms.Momentum, 0xC );
};

// Function GridGame.PgVehicle.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void APgVehicle::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 50963 ];

	APgVehicle_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function GridGame.PgVehicle.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool APgVehicle::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 50958 ];

	APgVehicle_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.StopCollisions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgVehicle::StopCollisions ( )
{
	static UFunction* pFnStopCollisions = NULL;

	if ( ! pFnStopCollisions )
		pFnStopCollisions = (UFunction*) UObject::GObjObjects()->Data[ 50957 ];

	APgVehicle_execStopCollisions_Parms StopCollisions_Parms;

	pFnStopCollisions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopCollisions, &StopCollisions_Parms, NULL );

	pFnStopCollisions->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.FireDeathSideEffects
// [0x010205C0] ( FUNC_Native )
// Parameters infos:

void APgVehicle::FireDeathSideEffects ( )
{
	static UFunction* pFnFireDeathSideEffects = NULL;

	if ( ! pFnFireDeathSideEffects )
		pFnFireDeathSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 50956 ];

	APgVehicle_execFireDeathSideEffects_Parms FireDeathSideEffects_Parms;

	pFnFireDeathSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireDeathSideEffects, &FireDeathSideEffects_Parms, NULL );

	pFnFireDeathSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.GetCollisionDamageModifier
// [0x00C20002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FRigidBodyContactInfo > ContactInfos                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

float APgVehicle::GetCollisionDamageModifier ( TArray< struct FRigidBodyContactInfo >* ContactInfos )
{
	static UFunction* pFnGetCollisionDamageModifier = NULL;

	if ( ! pFnGetCollisionDamageModifier )
		pFnGetCollisionDamageModifier = (UFunction*) UObject::GObjObjects()->Data[ 50948 ];

	APgVehicle_execGetCollisionDamageModifier_Parms GetCollisionDamageModifier_Parms;

	this->ProcessEvent ( pFnGetCollisionDamageModifier, &GetCollisionDamageModifier_Parms, NULL );

	if ( ContactInfos )
		memcpy ( ContactInfos, &GetCollisionDamageModifier_Parms.ContactInfos, 0xC );

	return GetCollisionDamageModifier_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.GetCollisionDamageInstigator
// [0x00020002] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AController* APgVehicle::GetCollisionDamageInstigator ( )
{
	static UFunction* pFnGetCollisionDamageInstigator = NULL;

	if ( ! pFnGetCollisionDamageInstigator )
		pFnGetCollisionDamageInstigator = (UFunction*) UObject::GObjObjects()->Data[ 50946 ];

	APgVehicle_execGetCollisionDamageInstigator_Parms GetCollisionDamageInstigator_Parms;

	this->ProcessEvent ( pFnGetCollisionDamageInstigator, &GetCollisionDamageInstigator_Parms, NULL );

	return GetCollisionDamageInstigator_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    Collision                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgVehicle::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* Collision )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 50932 ];

	APgVehicle_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( Collision )
		memcpy ( Collision, &RigidBodyCollision_Parms.Collision, 0x24 );
};

// Function GridGame.PgVehicle.Deflect
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FCollisionImpactData    Collision                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgVehicle::Deflect ( struct FCollisionImpactData* Collision )
{
	static UFunction* pFnDeflect = NULL;

	if ( ! pFnDeflect )
		pFnDeflect = (UFunction*) UObject::GObjObjects()->Data[ 50930 ];

	APgVehicle_execDeflect_Parms Deflect_Parms;

	pFnDeflect->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeflect, &Deflect_Parms, NULL );

	pFnDeflect->FunctionFlags |= 0x400;

	if ( Collision )
		memcpy ( Collision, &Deflect_Parms.Collision, 0x24 );
};

// Function GridGame.PgVehicle.EnergyFlow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inEnergy                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int APgVehicle::EnergyFlow ( int inEnergy, unsigned long overCharge )
{
	static UFunction* pFnEnergyFlow = NULL;

	if ( ! pFnEnergyFlow )
		pFnEnergyFlow = (UFunction*) UObject::GObjObjects()->Data[ 50926 ];

	APgVehicle_execEnergyFlow_Parms EnergyFlow_Parms;
	EnergyFlow_Parms.inEnergy = inEnergy;
	EnergyFlow_Parms.overCharge = overCharge;

	pFnEnergyFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnergyFlow, &EnergyFlow_Parms, NULL );

	pFnEnergyFlow->FunctionFlags |= 0x400;

	return EnergyFlow_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.HealthFlow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            inHealth                       ( CPF_Parm )
// unsigned long                  overCharge                     ( CPF_Parm )

int APgVehicle::HealthFlow ( int inHealth, unsigned long overCharge )
{
	static UFunction* pFnHealthFlow = NULL;

	if ( ! pFnHealthFlow )
		pFnHealthFlow = (UFunction*) UObject::GObjObjects()->Data[ 50922 ];

	APgVehicle_execHealthFlow_Parms HealthFlow_Parms;
	HealthFlow_Parms.inHealth = inHealth;
	HealthFlow_Parms.overCharge = overCharge;

	pFnHealthFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHealthFlow, &HealthFlow_Parms, NULL );

	pFnHealthFlow->FunctionFlags |= 0x400;

	return HealthFlow_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgVehicle::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 50908 ];

	APgVehicle_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function GridGame.PgVehicle.FireDamageSideEffects
// [0x010205C0] ( FUNC_Native )
// Parameters infos:

void APgVehicle::FireDamageSideEffects ( )
{
	static UFunction* pFnFireDamageSideEffects = NULL;

	if ( ! pFnFireDamageSideEffects )
		pFnFireDamageSideEffects = (UFunction*) UObject::GObjObjects()->Data[ 50907 ];

	APgVehicle_execFireDamageSideEffects_Parms FireDamageSideEffects_Parms;

	pFnFireDamageSideEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireDamageSideEffects, &FireDamageSideEffects_Parms, NULL );

	pFnFireDamageSideEffects->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.GetDamageCauserDamageScaling
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InstigatedBy                   ( CPF_Parm )

float APgVehicle::GetDamageCauserDamageScaling ( class AController* InstigatedBy )
{
	static UFunction* pFnGetDamageCauserDamageScaling = NULL;

	if ( ! pFnGetDamageCauserDamageScaling )
		pFnGetDamageCauserDamageScaling = (UFunction*) UObject::GObjObjects()->Data[ 50904 ];

	APgVehicle_execGetDamageCauserDamageScaling_Parms GetDamageCauserDamageScaling_Parms;
	GetDamageCauserDamageScaling_Parms.InstigatedBy = InstigatedBy;

	pFnGetDamageCauserDamageScaling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDamageCauserDamageScaling, &GetDamageCauserDamageScaling_Parms, NULL );

	pFnGetDamageCauserDamageScaling->FunctionFlags |= 0x400;

	return GetDamageCauserDamageScaling_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.PlayerChangedTeam
// [0x00020002] 
// Parameters infos:

void APgVehicle::PlayerChangedTeam ( )
{
	static UFunction* pFnPlayerChangedTeam = NULL;

	if ( ! pFnPlayerChangedTeam )
		pFnPlayerChangedTeam = (UFunction*) UObject::GObjObjects()->Data[ 50903 ];

	APgVehicle_execPlayerChangedTeam_Parms PlayerChangedTeam_Parms;

	this->ProcessEvent ( pFnPlayerChangedTeam, &PlayerChangedTeam_Parms, NULL );
};

// Function GridGame.PgVehicle._Suicide
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgVehicle::event_Suicide ( )
{
	static UFunction* pFn_Suicide = NULL;

	if ( ! pFn_Suicide )
		pFn_Suicide = (UFunction*) UObject::GObjObjects()->Data[ 50902 ];

	APgVehicle_event_Suicide_Parms _Suicide_Parms;

	this->ProcessEvent ( pFn_Suicide, &_Suicide_Parms, NULL );
};

// Function GridGame.PgVehicle.Suicide
// [0x00020002] 
// Parameters infos:

void APgVehicle::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 50901 ];

	APgVehicle_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function GridGame.PgVehicle.CheckReset
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APgVehicle::eventCheckReset ( )
{
	static UFunction* pFnCheckReset = NULL;

	if ( ! pFnCheckReset )
		pFnCheckReset = (UFunction*) UObject::GObjObjects()->Data[ 50900 ];

	APgVehicle_eventCheckReset_Parms CheckReset_Parms;

	this->ProcessEvent ( pFnCheckReset, &CheckReset_Parms, NULL );
};

// Function GridGame.PgVehicle.ContinueOnFoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgVehicle::eventContinueOnFoot ( )
{
	static UFunction* pFnContinueOnFoot = NULL;

	if ( ! pFnContinueOnFoot )
		pFnContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 50898 ];

	APgVehicle_eventContinueOnFoot_Parms ContinueOnFoot_Parms;

	this->ProcessEvent ( pFnContinueOnFoot, &ContinueOnFoot_Parms, NULL );

	return ContinueOnFoot_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.RanInto
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgVehicle::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 50892 ];

	APgVehicle_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function GridGame.PgVehicle.PancakeOther
// [0x00020000] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void APgVehicle::PancakeOther ( class APawn* Other )
{
	static UFunction* pFnPancakeOther = NULL;

	if ( ! pFnPancakeOther )
		pFnPancakeOther = (UFunction*) UObject::GObjObjects()->Data[ 50890 ];

	APgVehicle_execPancakeOther_Parms PancakeOther_Parms;
	PancakeOther_Parms.Other = Other;

	this->ProcessEvent ( pFnPancakeOther, &PancakeOther_Parms, NULL );
};

// Function GridGame.PgVehicle.DisplayGraphDebug
// [0x00824102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm )
// struct FScriptDelegate         GraphFunc                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 GraphName                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// struct FString                 AxisXName                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// struct FString                 AxisYName                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// float                          AxisXMax                       ( CPF_Parm )
// float                          AxisYMax                       ( CPF_Parm )
// struct FVector                 Offset                         ( CPF_Parm )
// float                          GraphScale                     ( CPF_OptionalParm | CPF_Parm )

void APgVehicle::DisplayGraphDebug ( class AHUD* HUD, float YL, struct FScriptDelegate GraphFunc, struct FString GraphName, struct FString AxisXName, struct FString AxisYName, float AxisXMax, float AxisYMax, struct FVector Offset, float GraphScale )
{
	static UFunction* pFnDisplayGraphDebug = NULL;

	if ( ! pFnDisplayGraphDebug )
		pFnDisplayGraphDebug = (UFunction*) UObject::GObjObjects()->Data[ 50869 ];

	APgVehicle_execDisplayGraphDebug_Parms DisplayGraphDebug_Parms;
	DisplayGraphDebug_Parms.HUD = HUD;
	DisplayGraphDebug_Parms.YL = YL;
	memcpy ( &DisplayGraphDebug_Parms.GraphFunc, &GraphFunc, 0xC );
	memcpy ( &DisplayGraphDebug_Parms.GraphName, &GraphName, 0xC );
	memcpy ( &DisplayGraphDebug_Parms.AxisXName, &AxisXName, 0xC );
	memcpy ( &DisplayGraphDebug_Parms.AxisYName, &AxisYName, 0xC );
	DisplayGraphDebug_Parms.AxisXMax = AxisXMax;
	DisplayGraphDebug_Parms.AxisYMax = AxisYMax;
	memcpy ( &DisplayGraphDebug_Parms.Offset, &Offset, 0xC );
	DisplayGraphDebug_Parms.GraphScale = GraphScale;

	this->ProcessEvent ( pFnDisplayGraphDebug, &DisplayGraphDebug_Parms, NULL );
};

// Function GridGame.PgVehicle.GraphFunction
// [0x00120000] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          InVal                          ( CPF_Parm )

float APgVehicle::GraphFunction ( float InVal )
{
	static UFunction* pFnGraphFunction = NULL;

	if ( ! pFnGraphFunction )
		pFnGraphFunction = (UFunction*) UObject::GObjObjects()->Data[ 50660 ];

	APgVehicle_execGraphFunction_Parms GraphFunction_Parms;
	GraphFunction_Parms.InVal = InVal;

	this->ProcessEvent ( pFnGraphFunction, &GraphFunction_Parms, NULL );

	return GraphFunction_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.DisplayWheelsDebug
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm )

void APgVehicle::DisplayWheelsDebug ( class AHUD* HUD, float YL )
{
	static UFunction* pFnDisplayWheelsDebug = NULL;

	if ( ! pFnDisplayWheelsDebug )
		pFnDisplayWheelsDebug = (UFunction*) UObject::GObjObjects()->Data[ 50845 ];

	APgVehicle_execDisplayWheelsDebug_Parms DisplayWheelsDebug_Parms;
	DisplayWheelsDebug_Parms.HUD = HUD;
	DisplayWheelsDebug_Parms.YL = YL;

	this->ProcessEvent ( pFnDisplayWheelsDebug, &DisplayWheelsDebug_Parms, NULL );
};

// Function GridGame.PgVehicle.DisplayControlsDebug
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void APgVehicle::DisplayControlsDebug ( class AHUD* HUD )
{
	static UFunction* pFnDisplayControlsDebug = NULL;

	if ( ! pFnDisplayControlsDebug )
		pFnDisplayControlsDebug = (UFunction*) UObject::GObjObjects()->Data[ 50843 ];

	APgVehicle_execDisplayControlsDebug_Parms DisplayControlsDebug_Parms;
	DisplayControlsDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayControlsDebug, &DisplayControlsDebug_Parms, NULL );
};

// Function GridGame.PgVehicle.DisplayDebug
// [0x00C20102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgVehicle::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 50834 ];

	APgVehicle_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgVehicle.DisplayDebugLine
// [0x00020102] 
// Parameters infos:
// struct FVector                 vec                            ( CPF_Parm )
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )

void APgVehicle::DisplayDebugLine ( struct FVector vec, int R, int G, int B )
{
	static UFunction* pFnDisplayDebugLine = NULL;

	if ( ! pFnDisplayDebugLine )
		pFnDisplayDebugLine = (UFunction*) UObject::GObjObjects()->Data[ 50828 ];

	APgVehicle_execDisplayDebugLine_Parms DisplayDebugLine_Parms;
	memcpy ( &DisplayDebugLine_Parms.vec, &vec, 0xC );
	DisplayDebugLine_Parms.R = R;
	DisplayDebugLine_Parms.G = G;
	DisplayDebugLine_Parms.B = B;

	this->ProcessEvent ( pFnDisplayDebugLine, &DisplayDebugLine_Parms, NULL );
};

// Function GridGame.PgVehicle.DebugDrawOnlinePlayerName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void APgVehicle::DebugDrawOnlinePlayerName ( class AHUD* HUD )
{
	static UFunction* pFnDebugDrawOnlinePlayerName = NULL;

	if ( ! pFnDebugDrawOnlinePlayerName )
		pFnDebugDrawOnlinePlayerName = (UFunction*) UObject::GObjObjects()->Data[ 45802 ];

	APgVehicle_execDebugDrawOnlinePlayerName_Parms DebugDrawOnlinePlayerName_Parms;
	DebugDrawOnlinePlayerName_Parms.HUD = HUD;

	pFnDebugDrawOnlinePlayerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDrawOnlinePlayerName, &DebugDrawOnlinePlayerName_Parms, NULL );

	pFnDebugDrawOnlinePlayerName->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.GetSVehicleDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgVehicle::GetSVehicleDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetSVehicleDebug = NULL;

	if ( ! pFnGetSVehicleDebug )
		pFnGetSVehicleDebug = (UFunction*) UObject::GObjObjects()->Data[ 50823 ];

	APgVehicle_execGetSVehicleDebug_Parms GetSVehicleDebug_Parms;

	this->ProcessEvent ( pFnGetSVehicleDebug, &GetSVehicleDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetSVehicleDebug_Parms.DebugInfo, 0xC );
};

// Function GridGame.PgVehicle.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgVehicle::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 50821 ];

	APgVehicle_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgVehicle.SetMoveControllerLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Level                          ( CPF_Parm )

void APgVehicle::SetMoveControllerLevel ( unsigned long Level )
{
	static UFunction* pFnSetMoveControllerLevel = NULL;

	if ( ! pFnSetMoveControllerLevel )
		pFnSetMoveControllerLevel = (UFunction*) UObject::GObjObjects()->Data[ 50819 ];

	APgVehicle_execSetMoveControllerLevel_Parms SetMoveControllerLevel_Parms;
	SetMoveControllerLevel_Parms.Level = Level;

	pFnSetMoveControllerLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMoveControllerLevel, &SetMoveControllerLevel_Parms, NULL );

	pFnSetMoveControllerLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.DeInitTeamCollisionChannels
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgVehicle::DeInitTeamCollisionChannels ( )
{
	static UFunction* pFnDeInitTeamCollisionChannels = NULL;

	if ( ! pFnDeInitTeamCollisionChannels )
		pFnDeInitTeamCollisionChannels = (UFunction*) UObject::GObjObjects()->Data[ 50818 ];

	APgVehicle_execDeInitTeamCollisionChannels_Parms DeInitTeamCollisionChannels_Parms;

	pFnDeInitTeamCollisionChannels->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeInitTeamCollisionChannels, &DeInitTeamCollisionChannels_Parms, NULL );

	pFnDeInitTeamCollisionChannels->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.InitTeamCollisionChannels
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgVehicle::InitTeamCollisionChannels ( )
{
	static UFunction* pFnInitTeamCollisionChannels = NULL;

	if ( ! pFnInitTeamCollisionChannels )
		pFnInitTeamCollisionChannels = (UFunction*) UObject::GObjObjects()->Data[ 50817 ];

	APgVehicle_execInitTeamCollisionChannels_Parms InitTeamCollisionChannels_Parms;

	pFnInitTeamCollisionChannels->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitTeamCollisionChannels, &InitTeamCollisionChannels_Parms, NULL );

	pFnInitTeamCollisionChannels->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.AnyWheelSquealing
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgVehicle::AnyWheelSquealing ( )
{
	static UFunction* pFnAnyWheelSquealing = NULL;

	if ( ! pFnAnyWheelSquealing )
		pFnAnyWheelSquealing = (UFunction*) UObject::GObjObjects()->Data[ 50815 ];

	APgVehicle_execAnyWheelSquealing_Parms AnyWheelSquealing_Parms;

	pFnAnyWheelSquealing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAnyWheelSquealing, &AnyWheelSquealing_Parms, NULL );

	pFnAnyWheelSquealing->FunctionFlags |= 0x400;

	return AnyWheelSquealing_Parms.ReturnValue;
};

// Function GridGame.PgVehicle._ZeroMovementVariables
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgVehicle::event_ZeroMovementVariables ( )
{
	static UFunction* pFn_ZeroMovementVariables = NULL;

	if ( ! pFn_ZeroMovementVariables )
		pFn_ZeroMovementVariables = (UFunction*) UObject::GObjObjects()->Data[ 50814 ];

	APgVehicle_event_ZeroMovementVariables_Parms _ZeroMovementVariables_Parms;

	this->ProcessEvent ( pFn_ZeroMovementVariables, &_ZeroMovementVariables_Parms, NULL );
};

// Function GridGame.PgVehicle.ZeroMovementVariables
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgVehicle::eventZeroMovementVariables ( )
{
	static UFunction* pFnZeroMovementVariables = NULL;

	if ( ! pFnZeroMovementVariables )
		pFnZeroMovementVariables = (UFunction*) UObject::GObjObjects()->Data[ 50813 ];

	APgVehicle_eventZeroMovementVariables_Parms ZeroMovementVariables_Parms;

	pFnZeroMovementVariables->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnZeroMovementVariables, &ZeroMovementVariables_Parms, NULL );

	pFnZeroMovementVariables->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.TorqueVSpeedEval
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Speed                          ( CPF_Parm )

float APgVehicle::TorqueVSpeedEval ( float Speed )
{
	static UFunction* pFnTorqueVSpeedEval = NULL;

	if ( ! pFnTorqueVSpeedEval )
		pFnTorqueVSpeedEval = (UFunction*) UObject::GObjObjects()->Data[ 50810 ];

	APgVehicle_execTorqueVSpeedEval_Parms TorqueVSpeedEval_Parms;
	TorqueVSpeedEval_Parms.Speed = Speed;

	pFnTorqueVSpeedEval->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTorqueVSpeedEval, &TorqueVSpeedEval_Parms, NULL );

	pFnTorqueVSpeedEval->FunctionFlags |= 0x400;

	return TorqueVSpeedEval_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.EngineRPMEval
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Speed                          ( CPF_Parm )

float APgVehicle::EngineRPMEval ( float Speed )
{
	static UFunction* pFnEngineRPMEval = NULL;

	if ( ! pFnEngineRPMEval )
		pFnEngineRPMEval = (UFunction*) UObject::GObjObjects()->Data[ 50807 ];

	APgVehicle_execEngineRPMEval_Parms EngineRPMEval_Parms;
	EngineRPMEval_Parms.Speed = Speed;

	pFnEngineRPMEval->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEngineRPMEval, &EngineRPMEval_Parms, NULL );

	pFnEngineRPMEval->FunctionFlags |= 0x400;

	return EngineRPMEval_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.MaxSteerAngleEval
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Angle                          ( CPF_Parm )

float APgVehicle::MaxSteerAngleEval ( float Angle )
{
	static UFunction* pFnMaxSteerAngleEval = NULL;

	if ( ! pFnMaxSteerAngleEval )
		pFnMaxSteerAngleEval = (UFunction*) UObject::GObjObjects()->Data[ 50804 ];

	APgVehicle_execMaxSteerAngleEval_Parms MaxSteerAngleEval_Parms;
	MaxSteerAngleEval_Parms.Angle = Angle;

	pFnMaxSteerAngleEval->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMaxSteerAngleEval, &MaxSteerAngleEval_Parms, NULL );

	pFnMaxSteerAngleEval->FunctionFlags |= 0x400;

	return MaxSteerAngleEval_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.ThrottleVSpeedEval
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Speed                          ( CPF_Parm )

float APgVehicle::ThrottleVSpeedEval ( float Speed )
{
	static UFunction* pFnThrottleVSpeedEval = NULL;

	if ( ! pFnThrottleVSpeedEval )
		pFnThrottleVSpeedEval = (UFunction*) UObject::GObjObjects()->Data[ 50801 ];

	APgVehicle_execThrottleVSpeedEval_Parms ThrottleVSpeedEval_Parms;
	ThrottleVSpeedEval_Parms.Speed = Speed;

	pFnThrottleVSpeedEval->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnThrottleVSpeedEval, &ThrottleVSpeedEval_Parms, NULL );

	pFnThrottleVSpeedEval->FunctionFlags |= 0x400;

	return ThrottleVSpeedEval_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgVehicle::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 50797 ];

	APgVehicle_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgVehicle::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 50795 ];

	APgVehicle_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.GetMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgVehicle::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 50792 ];

	APgVehicle_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.InitMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgVehicle::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 50791 ];

	APgVehicle_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.TimeInitPlugins
// [0x00020102] 
// Parameters infos:

void APgVehicle::TimeInitPlugins ( )
{
	static UFunction* pFnTimeInitPlugins = NULL;

	if ( ! pFnTimeInitPlugins )
		pFnTimeInitPlugins = (UFunction*) UObject::GObjObjects()->Data[ 50790 ];

	APgVehicle_execTimeInitPlugins_Parms TimeInitPlugins_Parms;

	this->ProcessEvent ( pFnTimeInitPlugins, &TimeInitPlugins_Parms, NULL );
};

// Function GridGame.PgVehicle.DeInitPlugins
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgVehicle::DeInitPlugins ( )
{
	static UFunction* pFnDeInitPlugins = NULL;

	if ( ! pFnDeInitPlugins )
		pFnDeInitPlugins = (UFunction*) UObject::GObjObjects()->Data[ 50789 ];

	APgVehicle_execDeInitPlugins_Parms DeInitPlugins_Parms;

	pFnDeInitPlugins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeInitPlugins, &DeInitPlugins_Parms, NULL );

	pFnDeInitPlugins->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.InitPlugins
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgVehicle::InitPlugins ( )
{
	static UFunction* pFnInitPlugins = NULL;

	if ( ! pFnInitPlugins )
		pFnInitPlugins = (UFunction*) UObject::GObjObjects()->Data[ 50788 ];

	APgVehicle_execInitPlugins_Parms InitPlugins_Parms;

	pFnInitPlugins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPlugins, &InitPlugins_Parms, NULL );

	pFnInitPlugins->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.SetCameraArchetype
// [0x010201C2] 
// Parameters infos:
// class APgPlayerCamera*         newArchetype                   ( CPF_Parm )

void APgVehicle::SetCameraArchetype ( class APgPlayerCamera* newArchetype )
{
	static UFunction* pFnSetCameraArchetype = NULL;

	if ( ! pFnSetCameraArchetype )
		pFnSetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 50786 ];

	APgVehicle_execSetCameraArchetype_Parms SetCameraArchetype_Parms;
	SetCameraArchetype_Parms.newArchetype = newArchetype;

	this->ProcessEvent ( pFnSetCameraArchetype, &SetCameraArchetype_Parms, NULL );
};

// Function GridGame.PgVehicle.GetCameraArchetype
// [0x00020102] 
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerCamera* APgVehicle::GetCameraArchetype ( )
{
	static UFunction* pFnGetCameraArchetype = NULL;

	if ( ! pFnGetCameraArchetype )
		pFnGetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 50784 ];

	APgVehicle_execGetCameraArchetype_Parms GetCameraArchetype_Parms;

	this->ProcessEvent ( pFnGetCameraArchetype, &GetCameraArchetype_Parms, NULL );

	return GetCameraArchetype_Parms.ReturnValue;
};

// Function GridGame.PgVehicle.PostEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )

void APgVehicle::PostEvent ( struct FName EventName, struct FName listName )
{
	static UFunction* pFnPostEvent = NULL;

	if ( ! pFnPostEvent )
		pFnPostEvent = (UFunction*) UObject::GObjObjects()->Data[ 50781 ];

	APgVehicle_execPostEvent_Parms PostEvent_Parms;
	memcpy ( &PostEvent_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEvent_Parms.listName, &listName, 0x8 );

	pFnPostEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEvent, &PostEvent_Parms, NULL );

	pFnPostEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.AdjustSpeedOnDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )

void APgVehicle::AdjustSpeedOnDamage ( int Damage )
{
	static UFunction* pFnAdjustSpeedOnDamage = NULL;

	if ( ! pFnAdjustSpeedOnDamage )
		pFnAdjustSpeedOnDamage = (UFunction*) UObject::GObjObjects()->Data[ 50779 ];

	APgVehicle_execAdjustSpeedOnDamage_Parms AdjustSpeedOnDamage_Parms;
	AdjustSpeedOnDamage_Parms.Damage = Damage;

	pFnAdjustSpeedOnDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustSpeedOnDamage, &AdjustSpeedOnDamage_Parms, NULL );

	pFnAdjustSpeedOnDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicle.UnPossessed
// [0x00020002] 
// Parameters infos:

void APgVehicle::UnPossessed ( )
{
	static UFunction* pFnUnPossessed = NULL;

	if ( ! pFnUnPossessed )
		pFnUnPossessed = (UFunction*) UObject::GObjObjects()->Data[ 50778 ];

	APgVehicle_execUnPossessed_Parms UnPossessed_Parms;

	this->ProcessEvent ( pFnUnPossessed, &UnPossessed_Parms, NULL );
};

// Function GridGame.PgVehicle.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void APgVehicle::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 50775 ];

	APgVehicle_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.Reset
// [0x00020002] 
// Parameters infos:

void UPgVehicleBoost::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 51149 ];

	UPgVehicleBoost_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.DriverLeft
// [0x00020002] 
// Parameters infos:

void UPgVehicleBoost::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 51148 ];

	UPgVehicleBoost_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.DriverEnter
// [0x00020000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UPgVehicleBoost::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 51146 ];

	UPgVehicleBoost_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          Forward                        ( CPF_Parm )
// float                          Strafe                         ( CPF_Parm )
// float                          Up                             ( CPF_Parm )

void UPgVehicleBoost::SetInputs ( float Forward, float Strafe, float Up )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 51142 ];

	UPgVehicleBoost_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.Forward = Forward;
	SetInputs_Parms.Strafe = Strafe;
	SetInputs_Parms.Up = Up;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.DeactivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void UPgVehicleBoost::eventDeactivateRocketBoosters ( )
{
	static UFunction* pFnDeactivateRocketBoosters = NULL;

	if ( ! pFnDeactivateRocketBoosters )
		pFnDeactivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 51140 ];

	UPgVehicleBoost_eventDeactivateRocketBoosters_Parms DeactivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnDeactivateRocketBoosters, &DeactivateRocketBoosters_Parms, NULL );
};

// Function GridGame.PgVehicleBoost.ActivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void UPgVehicleBoost::eventActivateRocketBoosters ( )
{
	static UFunction* pFnActivateRocketBoosters = NULL;

	if ( ! pFnActivateRocketBoosters )
		pFnActivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 51139 ];

	UPgVehicleBoost_eventActivateRocketBoosters_Parms ActivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnActivateRocketBoosters, &ActivateRocketBoosters_Parms, NULL );
};

// Function GridGame.PgVehicleBoostEnter.DriverEnter
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UPgVehicleBoostEnter::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 51151 ];

	UPgVehicleBoostEnter_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );
};

// Function GridGame.PgVehicleRetroTurn.TurnVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Direction                      ( CPF_Parm )

void UPgVehicleRetroTurn::TurnVehicle ( unsigned char Direction )
{
	static UFunction* pFnTurnVehicle = NULL;

	if ( ! pFnTurnVehicle )
		pFnTurnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 51160 ];

	UPgVehicleRetroTurn_execTurnVehicle_Parms TurnVehicle_Parms;
	TurnVehicle_Parms.Direction = Direction;

	pFnTurnVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTurnVehicle, &TurnVehicle_Parms, NULL );

	pFnTurnVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgVehicleSetInputs.DisplayDebug
// [0x00420100] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgVehicleSetInputs::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 51166 ];

	UPgVehicleSetInputs_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgVehicleSetInputs.SetInputs
// [0x00020100] 
// Parameters infos:
// float                          Forward                        ( CPF_Parm )
// float                          Strafe                         ( CPF_Parm )
// float                          Up                             ( CPF_Parm )

void UPgVehicleSetInputs::SetInputs ( float Forward, float Strafe, float Up )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 51162 ];

	UPgVehicleSetInputs_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.Forward = Forward;
	SetInputs_Parms.Strafe = Strafe;
	SetInputs_Parms.Up = Up;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function GridGame.PgVehicleSetInputsTank.SetInputs
// [0x00820102] 
// Parameters infos:
// float                          Forward                        ( CPF_Parm )
// float                          Strafe                         ( CPF_Parm )
// float                          Up                             ( CPF_Parm )

void UPgVehicleSetInputsTank::SetInputs ( float Forward, float Strafe, float Up )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 51192 ];

	UPgVehicleSetInputsTank_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.Forward = Forward;
	SetInputs_Parms.Strafe = Strafe;
	SetInputs_Parms.Up = Up;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function GridGame.PgVehicleSetInputsTank.DisplayDebug
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgVehicleSetInputsTank::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 51188 ];

	UPgVehicleSetInputsTank_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgVehicleSetInputsTank.GetReverseThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgVehicleSetInputsTank::GetReverseThreshold ( )
{
	static UFunction* pFnGetReverseThreshold = NULL;

	if ( ! pFnGetReverseThreshold )
		pFnGetReverseThreshold = (UFunction*) UObject::GObjObjects()->Data[ 51186 ];

	UPgVehicleSetInputsTank_execGetReverseThreshold_Parms GetReverseThreshold_Parms;

	pFnGetReverseThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReverseThreshold, &GetReverseThreshold_Parms, NULL );

	pFnGetReverseThreshold->FunctionFlags |= 0x400;

	return GetReverseThreshold_Parms.ReturnValue;
};

// Function GridGame.PgVehicleSetInputsTank.GetForwardBiasThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgVehicleSetInputsTank::GetForwardBiasThreshold ( )
{
	static UFunction* pFnGetForwardBiasThreshold = NULL;

	if ( ! pFnGetForwardBiasThreshold )
		pFnGetForwardBiasThreshold = (UFunction*) UObject::GObjObjects()->Data[ 51184 ];

	UPgVehicleSetInputsTank_execGetForwardBiasThreshold_Parms GetForwardBiasThreshold_Parms;

	pFnGetForwardBiasThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetForwardBiasThreshold, &GetForwardBiasThreshold_Parms, NULL );

	pFnGetForwardBiasThreshold->FunctionFlags |= 0x400;

	return GetForwardBiasThreshold_Parms.ReturnValue;
};

// Function GridGame.PgVehicleSetInputsTank.GetTurnInPlaceThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgVehicleSetInputsTank::GetTurnInPlaceThreshold ( )
{
	static UFunction* pFnGetTurnInPlaceThreshold = NULL;

	if ( ! pFnGetTurnInPlaceThreshold )
		pFnGetTurnInPlaceThreshold = (UFunction*) UObject::GObjObjects()->Data[ 51182 ];

	UPgVehicleSetInputsTank_execGetTurnInPlaceThreshold_Parms GetTurnInPlaceThreshold_Parms;

	pFnGetTurnInPlaceThreshold->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTurnInPlaceThreshold, &GetTurnInPlaceThreshold_Parms, NULL );

	pFnGetTurnInPlaceThreshold->FunctionFlags |= 0x400;

	return GetTurnInPlaceThreshold_Parms.ReturnValue;
};

// Function GridGame.PgVehicleSetInputsTank.GetSteerDeadzone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgVehicleSetInputsTank::GetSteerDeadzone ( )
{
	static UFunction* pFnGetSteerDeadzone = NULL;

	if ( ! pFnGetSteerDeadzone )
		pFnGetSteerDeadzone = (UFunction*) UObject::GObjObjects()->Data[ 51180 ];

	UPgVehicleSetInputsTank_execGetSteerDeadzone_Parms GetSteerDeadzone_Parms;

	pFnGetSteerDeadzone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteerDeadzone, &GetSteerDeadzone_Parms, NULL );

	pFnGetSteerDeadzone->FunctionFlags |= 0x400;

	return GetSteerDeadzone_Parms.ReturnValue;
};

// Function GridGame.PgVehicleSetInputsTank.SteerVehicle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void UPgVehicleSetInputsTank::SteerVehicle ( struct FVector Direction )
{
	static UFunction* pFnSteerVehicle = NULL;

	if ( ! pFnSteerVehicle )
		pFnSteerVehicle = (UFunction*) UObject::GObjObjects()->Data[ 51178 ];

	UPgVehicleSetInputsTank_execSteerVehicle_Parms SteerVehicle_Parms;
	memcpy ( &SteerVehicle_Parms.Direction, &Direction, 0xC );

	pFnSteerVehicle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSteerVehicle, &SteerVehicle_Parms, NULL );

	pFnSteerVehicle->FunctionFlags |= 0x400;
};

// Function GridGame.PgExplosionActor.SpawnExplosionParticleSystem
// [0x00820102] 
// Parameters infos:
// class UParticleSystem*         Template                       ( CPF_Parm )

void APgExplosionActor::SpawnExplosionParticleSystem ( class UParticleSystem* Template )
{
	static UFunction* pFnSpawnExplosionParticleSystem = NULL;

	if ( ! pFnSpawnExplosionParticleSystem )
		pFnSpawnExplosionParticleSystem = (UFunction*) UObject::GObjObjects()->Data[ 44690 ];

	APgExplosionActor_execSpawnExplosionParticleSystem_Parms SpawnExplosionParticleSystem_Parms;
	SpawnExplosionParticleSystem_Parms.Template = Template;

	this->ProcessEvent ( pFnSpawnExplosionParticleSystem, &SpawnExplosionParticleSystem_Parms, NULL );
};

// Function GridGame.PgExplosionActor.Explode
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class UGameExplosion*          NewExplosionTemplate           ( CPF_Parm )
// struct FVector                 Direction                      ( CPF_OptionalParm | CPF_Parm )

void APgExplosionActor::eventExplode ( class UGameExplosion* NewExplosionTemplate, struct FVector Direction )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 44686 ];

	APgExplosionActor_eventExplode_Parms Explode_Parms;
	Explode_Parms.NewExplosionTemplate = NewExplosionTemplate;
	memcpy ( &Explode_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function GridGame.PgExplosionActor.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgExplosionActor::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 44682 ];

	APgExplosionActor_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgExplosionActor.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgExplosionActor::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 44680 ];

	APgExplosionActor_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgInventory.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool APgInventory::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 47079 ];

	APgInventory_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function GridGame.PgInventory.ClientGivenTo
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_Parm )

void APgInventory::ClientGivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientGivenTo = NULL;

	if ( ! pFnClientGivenTo )
		pFnClientGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 47076 ];

	APgInventory_execClientGivenTo_Parms ClientGivenTo_Parms;
	ClientGivenTo_Parms.NewOwner = NewOwner;
	ClientGivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientGivenTo, &ClientGivenTo_Parms, NULL );
};

// Function GridGame.PgInventory.GivenTo
// [0x00024002] 
// Parameters infos:
// class APawn*                   thisPawn                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void APgInventory::GivenTo ( class APawn* thisPawn, unsigned long bDoNotActivate )
{
	static UFunction* pFnGivenTo = NULL;

	if ( ! pFnGivenTo )
		pFnGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 47072 ];

	APgInventory_execGivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.thisPawn = thisPawn;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnGivenTo, &GivenTo_Parms, NULL );
};

// Function GridGame.PgInventory.DropFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void APgInventory::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 47069 ];

	APgInventory_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	pFnDropFrom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );

	pFnDropFrom->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventory.GetLocalString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )

struct FString APgInventory::GetLocalString ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01 )
{
	static UFunction* pFnGetLocalString = NULL;

	if ( ! pFnGetLocalString )
		pFnGetLocalString = (UFunction*) UObject::GObjObjects()->Data[ 47064 ];

	APgInventory_execGetLocalString_Parms GetLocalString_Parms;
	GetLocalString_Parms.Switch = Switch;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	GetLocalString_Parms.RelatedPRI01 = RelatedPRI01;

	this->ProcessEvent ( pFnGetLocalString, &GetLocalString_Parms, NULL );

	return GetLocalString_Parms.ReturnValue;
};

// Function GridGame.PgInventory.DetachPlugin
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventory::DetachPlugin ( )
{
	static UFunction* pFnDetachPlugin = NULL;

	if ( ! pFnDetachPlugin )
		pFnDetachPlugin = (UFunction*) UObject::GObjObjects()->Data[ 47063 ];

	APgInventory_execDetachPlugin_Parms DetachPlugin_Parms;

	pFnDetachPlugin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDetachPlugin, &DetachPlugin_Parms, NULL );

	pFnDetachPlugin->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventory.AttachPlugin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   Pawn                           ( CPF_Parm )

void APgInventory::AttachPlugin ( class APawn* Pawn )
{
	static UFunction* pFnAttachPlugin = NULL;

	if ( ! pFnAttachPlugin )
		pFnAttachPlugin = (UFunction*) UObject::GObjObjects()->Data[ 47061 ];

	APgInventory_execAttachPlugin_Parms AttachPlugin_Parms;
	AttachPlugin_Parms.Pawn = Pawn;

	pFnAttachPlugin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachPlugin, &AttachPlugin_Parms, NULL );

	pFnAttachPlugin->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPower.GetEnergyMax
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgInventoryPower::GetEnergyMax ( )
{
	static UFunction* pFnGetEnergyMax = NULL;

	if ( ! pFnGetEnergyMax )
		pFnGetEnergyMax = (UFunction*) UObject::GObjObjects()->Data[ 47249 ];

	APgInventoryPower_execGetEnergyMax_Parms GetEnergyMax_Parms;

	pFnGetEnergyMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEnergyMax, &GetEnergyMax_Parms, NULL );

	pFnGetEnergyMax->FunctionFlags |= 0x400;

	return GetEnergyMax_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.BehaviorMatch
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgPowerBehavior*        Behavior                       ( CPF_Parm )
// TArray< class UClass* >        behaviorClass                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool APgInventoryPower::BehaviorMatch ( class UPgPowerBehavior* Behavior, TArray< class UClass* >* behaviorClass )
{
	static UFunction* pFnBehaviorMatch = NULL;

	if ( ! pFnBehaviorMatch )
		pFnBehaviorMatch = (UFunction*) UObject::GObjObjects()->Data[ 47244 ];

	APgInventoryPower_execBehaviorMatch_Parms BehaviorMatch_Parms;
	BehaviorMatch_Parms.Behavior = Behavior;

	pFnBehaviorMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBehaviorMatch, &BehaviorMatch_Parms, NULL );

	pFnBehaviorMatch->FunctionFlags |= 0x400;

	if ( behaviorClass )
		memcpy ( behaviorClass, &BehaviorMatch_Parms.behaviorClass, 0xC );

	return BehaviorMatch_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.GetEnergyCost
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class APawn*                   powerUser                      ( CPF_Parm )
// class APgPawn*                 powerDeduct                    ( CPF_Parm )
// TArray< int >                  energyCosts                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgInventoryPower::GetEnergyCost ( class APawn* powerUser, class APgPawn* powerDeduct, TArray< int >* energyCosts )
{
	static UFunction* pFnGetEnergyCost = NULL;

	if ( ! pFnGetEnergyCost )
		pFnGetEnergyCost = (UFunction*) UObject::GObjObjects()->Data[ 47239 ];

	APgInventoryPower_execGetEnergyCost_Parms GetEnergyCost_Parms;
	GetEnergyCost_Parms.powerUser = powerUser;
	GetEnergyCost_Parms.powerDeduct = powerDeduct;

	pFnGetEnergyCost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEnergyCost, &GetEnergyCost_Parms, NULL );

	pFnGetEnergyCost->FunctionFlags |= 0x400;

	if ( energyCosts )
		memcpy ( energyCosts, &GetEnergyCost_Parms.energyCosts, 0xC );
};

// Function GridGame.PgInventoryPower.GetTotalEnergyLevels
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   powerUser                      ( CPF_Parm )
// class APgPawn*                 powerDeduct                    ( CPF_Parm )

int APgInventoryPower::GetTotalEnergyLevels ( class APawn* powerUser, class APgPawn* powerDeduct )
{
	static UFunction* pFnGetTotalEnergyLevels = NULL;

	if ( ! pFnGetTotalEnergyLevels )
		pFnGetTotalEnergyLevels = (UFunction*) UObject::GObjObjects()->Data[ 47235 ];

	APgInventoryPower_execGetTotalEnergyLevels_Parms GetTotalEnergyLevels_Parms;
	GetTotalEnergyLevels_Parms.powerUser = powerUser;
	GetTotalEnergyLevels_Parms.powerDeduct = powerDeduct;

	pFnGetTotalEnergyLevels->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTotalEnergyLevels, &GetTotalEnergyLevels_Parms, NULL );

	pFnGetTotalEnergyLevels->FunctionFlags |= 0x400;

	return GetTotalEnergyLevels_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.GetPowerProj
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class APgProjectile*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   powerUser                      ( CPF_Parm )
// class APgPawn*                 powerDeduct                    ( CPF_Parm )
// TArray< class UClass* >        behaviorClass                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APgProjectile* APgInventoryPower::GetPowerProj ( class APawn* powerUser, class APgPawn* powerDeduct, TArray< class UClass* >* behaviorClass )
{
	static UFunction* pFnGetPowerProj = NULL;

	if ( ! pFnGetPowerProj )
		pFnGetPowerProj = (UFunction*) UObject::GObjObjects()->Data[ 47229 ];

	APgInventoryPower_execGetPowerProj_Parms GetPowerProj_Parms;
	GetPowerProj_Parms.powerUser = powerUser;
	GetPowerProj_Parms.powerDeduct = powerDeduct;

	pFnGetPowerProj->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerProj, &GetPowerProj_Parms, NULL );

	pFnGetPowerProj->FunctionFlags |= 0x400;

	if ( behaviorClass )
		memcpy ( behaviorClass, &GetPowerProj_Parms.behaviorClass, 0xC );

	return GetPowerProj_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.IsValidPawn
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Const | CPF_Parm )
// int                            grpIndex                       ( CPF_Parm )

bool APgInventoryPower::IsValidPawn ( class APawn* Pawn, int grpIndex )
{
	static UFunction* pFnIsValidPawn = NULL;

	if ( ! pFnIsValidPawn )
		pFnIsValidPawn = (UFunction*) UObject::GObjObjects()->Data[ 47225 ];

	APgInventoryPower_execIsValidPawn_Parms IsValidPawn_Parms;
	IsValidPawn_Parms.Pawn = Pawn;
	IsValidPawn_Parms.grpIndex = grpIndex;

	pFnIsValidPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidPawn, &IsValidPawn_Parms, NULL );

	pFnIsValidPawn->FunctionFlags |= 0x400;

	return IsValidPawn_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.GetBestPowerLevel
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

int APgInventoryPower::GetBestPowerLevel ( class APgPawn* Pawn )
{
	static UFunction* pFnGetBestPowerLevel = NULL;

	if ( ! pFnGetBestPowerLevel )
		pFnGetBestPowerLevel = (UFunction*) UObject::GObjObjects()->Data[ 47222 ];

	APgInventoryPower_execGetBestPowerLevel_Parms GetBestPowerLevel_Parms;
	GetBestPowerLevel_Parms.Pawn = Pawn;

	pFnGetBestPowerLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBestPowerLevel, &GetBestPowerLevel_Parms, NULL );

	pFnGetBestPowerLevel->FunctionFlags |= 0x400;

	return GetBestPowerLevel_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.CanUsePowerLevel
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 Pawn                           ( CPF_Parm )
// int                            Level                          ( CPF_Parm )

bool APgInventoryPower::CanUsePowerLevel ( class APgPawn* Pawn, int Level )
{
	static UFunction* pFnCanUsePowerLevel = NULL;

	if ( ! pFnCanUsePowerLevel )
		pFnCanUsePowerLevel = (UFunction*) UObject::GObjObjects()->Data[ 47218 ];

	APgInventoryPower_execCanUsePowerLevel_Parms CanUsePowerLevel_Parms;
	CanUsePowerLevel_Parms.Pawn = Pawn;
	CanUsePowerLevel_Parms.Level = Level;

	pFnCanUsePowerLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUsePowerLevel, &CanUsePowerLevel_Parms, NULL );

	pFnCanUsePowerLevel->FunctionFlags |= 0x400;

	return CanUsePowerLevel_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.CanUsePower
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 Pawn                           ( CPF_Const | CPF_Parm )

bool APgInventoryPower::CanUsePower ( class APgPawn* Pawn )
{
	static UFunction* pFnCanUsePower = NULL;

	if ( ! pFnCanUsePower )
		pFnCanUsePower = (UFunction*) UObject::GObjObjects()->Data[ 47215 ];

	APgInventoryPower_execCanUsePower_Parms CanUsePower_Parms;
	CanUsePower_Parms.Pawn = Pawn;

	pFnCanUsePower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUsePower, &CanUsePower_Parms, NULL );

	pFnCanUsePower->FunctionFlags |= 0x400;

	return CanUsePower_Parms.ReturnValue;
};

// Function GridGame.PgInventoryPower.UseBestPower
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class APgProjectile*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   powerUser                      ( CPF_Parm )
// class APgPawn*                 powerDeduct                    ( CPF_Parm )
// TArray< class UClass* >        behaviorClass                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APgProjectile* APgInventoryPower::UseBestPower ( class APawn* powerUser, class APgPawn* powerDeduct, TArray< class UClass* >* behaviorClass )
{
	static UFunction* pFnUseBestPower = NULL;

	if ( ! pFnUseBestPower )
		pFnUseBestPower = (UFunction*) UObject::GObjObjects()->Data[ 47209 ];

	APgInventoryPower_execUseBestPower_Parms UseBestPower_Parms;
	UseBestPower_Parms.powerUser = powerUser;
	UseBestPower_Parms.powerDeduct = powerDeduct;

	pFnUseBestPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseBestPower, &UseBestPower_Parms, NULL );

	pFnUseBestPower->FunctionFlags |= 0x400;

	if ( behaviorClass )
		memcpy ( behaviorClass, &UseBestPower_Parms.behaviorClass, 0xC );

	return UseBestPower_Parms.ReturnValue;
};

// Function GridGame.PgInventoryManager.RestoreSelectedPower
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 powerArchetype                 ( CPF_Parm | CPF_NeedCtorLink )

void APgInventoryManager::RestoreSelectedPower ( struct FString powerArchetype )
{
	static UFunction* pFnRestoreSelectedPower = NULL;

	if ( ! pFnRestoreSelectedPower )
		pFnRestoreSelectedPower = (UFunction*) UObject::GObjObjects()->Data[ 47122 ];

	APgInventoryManager_execRestoreSelectedPower_Parms RestoreSelectedPower_Parms;
	memcpy ( &RestoreSelectedPower_Parms.powerArchetype, &powerArchetype, 0xC );

	pFnRestoreSelectedPower->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreSelectedPower, &RestoreSelectedPower_Parms, NULL );

	pFnRestoreSelectedPower->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryManager.DestroyInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryManager::DestroyInventory ( )
{
	static UFunction* pFnDestroyInventory = NULL;

	if ( ! pFnDestroyInventory )
		pFnDestroyInventory = (UFunction*) UObject::GObjObjects()->Data[ 47121 ];

	APgInventoryManager_execDestroyInventory_Parms DestroyInventory_Parms;

	pFnDestroyInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDestroyInventory, &DestroyInventory_Parms, NULL );

	pFnDestroyInventory->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryManager.DropSingleInventory
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AInventory*              Inv                            ( CPF_Parm )
// class APgInventoryPickup*      droppedArchetype               ( CPF_Parm )
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void APgInventoryManager::eventDropSingleInventory ( class AInventory* Inv, class APgInventoryPickup* droppedArchetype, struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropSingleInventory = NULL;

	if ( ! pFnDropSingleInventory )
		pFnDropSingleInventory = (UFunction*) UObject::GObjObjects()->Data[ 47111 ];

	APgInventoryManager_eventDropSingleInventory_Parms DropSingleInventory_Parms;
	DropSingleInventory_Parms.Inv = Inv;
	DropSingleInventory_Parms.droppedArchetype = droppedArchetype;
	memcpy ( &DropSingleInventory_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropSingleInventory_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropSingleInventory, &DropSingleInventory_Parms, NULL );
};

// Function GridGame.PgInventoryManager.CleanupInventory
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AInventory*              Inv                            ( CPF_Parm )

void APgInventoryManager::eventCleanupInventory ( class AInventory* Inv )
{
	static UFunction* pFnCleanupInventory = NULL;

	if ( ! pFnCleanupInventory )
		pFnCleanupInventory = (UFunction*) UObject::GObjObjects()->Data[ 47109 ];

	APgInventoryManager_eventCleanupInventory_Parms CleanupInventory_Parms;
	CleanupInventory_Parms.Inv = Inv;

	this->ProcessEvent ( pFnCleanupInventory, &CleanupInventory_Parms, NULL );
};

// Function GridGame.PgInventoryManager.RemoveFromInventory
// [0x00020102] 
// Parameters infos:
// class AInventory*              ItemToRemove                   ( CPF_Parm )

void APgInventoryManager::RemoveFromInventory ( class AInventory* ItemToRemove )
{
	static UFunction* pFnRemoveFromInventory = NULL;

	if ( ! pFnRemoveFromInventory )
		pFnRemoveFromInventory = (UFunction*) UObject::GObjObjects()->Data[ 47106 ];

	APgInventoryManager_execRemoveFromInventory_Parms RemoveFromInventory_Parms;
	RemoveFromInventory_Parms.ItemToRemove = ItemToRemove;

	this->ProcessEvent ( pFnRemoveFromInventory, &RemoveFromInventory_Parms, NULL );
};

// Function GridGame.PgInventoryManager.ChangedWeapon
// [0x00020102] 
// Parameters infos:

void APgInventoryManager::ChangedWeapon ( )
{
	static UFunction* pFnChangedWeapon = NULL;

	if ( ! pFnChangedWeapon )
		pFnChangedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 47105 ];

	APgInventoryManager_execChangedWeapon_Parms ChangedWeapon_Parms;

	this->ProcessEvent ( pFnChangedWeapon, &ChangedWeapon_Parms, NULL );
};

// Function GridGame.PgInventoryManager.WeaponEquipped
// [0x00020102] 
// Parameters infos:

void APgInventoryManager::WeaponEquipped ( )
{
	static UFunction* pFnWeaponEquipped = NULL;

	if ( ! pFnWeaponEquipped )
		pFnWeaponEquipped = (UFunction*) UObject::GObjObjects()->Data[ 47104 ];

	APgInventoryManager_execWeaponEquipped_Parms WeaponEquipped_Parms;

	this->ProcessEvent ( pFnWeaponEquipped, &WeaponEquipped_Parms, NULL );
};

// Function GridGame.PgInventoryManager.PuttingWeaponDown
// [0x00020102] 
// Parameters infos:

void APgInventoryManager::PuttingWeaponDown ( )
{
	static UFunction* pFnPuttingWeaponDown = NULL;

	if ( ! pFnPuttingWeaponDown )
		pFnPuttingWeaponDown = (UFunction*) UObject::GObjObjects()->Data[ 47103 ];

	APgInventoryManager_execPuttingWeaponDown_Parms PuttingWeaponDown_Parms;

	this->ProcessEvent ( pFnPuttingWeaponDown, &PuttingWeaponDown_Parms, NULL );
};

// Function GridGame.PgInventoryManager.ReplicateWeapon
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 CurrentWeapon                  ( CPF_Parm )

void APgInventoryManager::ReplicateWeapon ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnReplicateWeapon = NULL;

	if ( ! pFnReplicateWeapon )
		pFnReplicateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 47099 ];

	APgInventoryManager_execReplicateWeapon_Parms ReplicateWeapon_Parms;
	ReplicateWeapon_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnReplicateWeapon, &ReplicateWeapon_Parms, NULL );
};

// Function GridGame.PgInventoryManager.QuickSwitch
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   weaponTypeName                 ( CPF_Parm )

bool APgInventoryManager::QuickSwitch ( struct FName weaponTypeName )
{
	static UFunction* pFnQuickSwitch = NULL;

	if ( ! pFnQuickSwitch )
		pFnQuickSwitch = (UFunction*) UObject::GObjObjects()->Data[ 45159 ];

	APgInventoryManager_execQuickSwitch_Parms QuickSwitch_Parms;
	memcpy ( &QuickSwitch_Parms.weaponTypeName, &weaponTypeName, 0x8 );

	this->ProcessEvent ( pFnQuickSwitch, &QuickSwitch_Parms, NULL );

	return QuickSwitch_Parms.ReturnValue;
};

// Function GridGame.PgInventoryManager.QuickSwitchPower
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   powerName                      ( CPF_Parm )

bool APgInventoryManager::QuickSwitchPower ( struct FName powerName )
{
	static UFunction* pFnQuickSwitchPower = NULL;

	if ( ! pFnQuickSwitchPower )
		pFnQuickSwitchPower = (UFunction*) UObject::GObjObjects()->Data[ 45155 ];

	APgInventoryManager_execQuickSwitchPower_Parms QuickSwitchPower_Parms;
	memcpy ( &QuickSwitchPower_Parms.powerName, &powerName, 0x8 );

	this->ProcessEvent ( pFnQuickSwitchPower, &QuickSwitchPower_Parms, NULL );

	return QuickSwitchPower_Parms.ReturnValue;
};

// Function GridGame.PgInventoryManager.FindInventoryByName
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AInventory*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   typeName                       ( CPF_Parm )

class AInventory* APgInventoryManager::eventFindInventoryByName ( struct FName typeName )
{
	static UFunction* pFnFindInventoryByName = NULL;

	if ( ! pFnFindInventoryByName )
		pFnFindInventoryByName = (UFunction*) UObject::GObjObjects()->Data[ 42347 ];

	APgInventoryManager_eventFindInventoryByName_Parms FindInventoryByName_Parms;
	memcpy ( &FindInventoryByName_Parms.typeName, &typeName, 0x8 );

	this->ProcessEvent ( pFnFindInventoryByName, &FindInventoryByName_Parms, NULL );

	return FindInventoryByName_Parms.ReturnValue;
};

// Function GridGame.PgInventoryManager.ClientWeaponSet
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 NewWeapon                      ( CPF_Parm )
// unsigned long                  bOptionalSet                   ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void APgInventoryManager::ClientWeaponSet ( class AWeapon* NewWeapon, unsigned long bOptionalSet, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientWeaponSet = NULL;

	if ( ! pFnClientWeaponSet )
		pFnClientWeaponSet = (UFunction*) UObject::GObjObjects()->Data[ 47089 ];

	APgInventoryManager_execClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.NewWeapon = NewWeapon;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL );
};

// Function GridGame.PgInventoryManager.ServerSetPower
// [0x002208C2] ( FUNC_Event )
// Parameters infos:
// class APgInventoryPower*       desiredPower                   ( CPF_Parm )

void APgInventoryManager::eventServerSetPower ( class APgInventoryPower* desiredPower )
{
	static UFunction* pFnServerSetPower = NULL;

	if ( ! pFnServerSetPower )
		pFnServerSetPower = (UFunction*) UObject::GObjObjects()->Data[ 47085 ];

	APgInventoryManager_eventServerSetPower_Parms ServerSetPower_Parms;
	ServerSetPower_Parms.desiredPower = desiredPower;

	this->ProcessEvent ( pFnServerSetPower, &ServerSetPower_Parms, NULL );
};

// Function GridGame.PgInventoryManager.SetDefaultInvPower
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgInventoryManager::eventSetDefaultInvPower ( )
{
	static UFunction* pFnSetDefaultInvPower = NULL;

	if ( ! pFnSetDefaultInvPower )
		pFnSetDefaultInvPower = (UFunction*) UObject::GObjObjects()->Data[ 47083 ];

	APgInventoryManager_eventSetDefaultInvPower_Parms SetDefaultInvPower_Parms;

	this->ProcessEvent ( pFnSetDefaultInvPower, &SetDefaultInvPower_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.PickedUpBy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void APgInventoryPickup::PickedUpBy ( class APawn* P )
{
	static UFunction* pFnPickedUpBy = NULL;

	if ( ! pFnPickedUpBy )
		pFnPickedUpBy = (UFunction*) UObject::GObjObjects()->Data[ 47182 ];

	APgInventoryPickup_execPickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;

	this->ProcessEvent ( pFnPickedUpBy, &PickedUpBy_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.Respawn
// [0x00020002] 
// Parameters infos:

void APgInventoryPickup::Respawn ( )
{
	static UFunction* pFnRespawn = NULL;

	if ( ! pFnRespawn )
		pFnRespawn = (UFunction*) UObject::GObjObjects()->Data[ 47181 ];

	APgInventoryPickup_execRespawn_Parms Respawn_Parms;

	this->ProcessEvent ( pFnRespawn, &Respawn_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void APgInventoryPickup::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 47177 ];

	APgInventoryPickup_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.Landed
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void APgInventoryPickup::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 47174 ];

	APgInventoryPickup_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.GiveTo
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void APgInventoryPickup::GiveTo ( class APawn* P )
{
	static UFunction* pFnGiveTo = NULL;

	if ( ! pFnGiveTo )
		pFnGiveTo = (UFunction*) UObject::GObjObjects()->Data[ 47169 ];

	APgInventoryPickup_execGiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.P = P;

	this->ProcessEvent ( pFnGiveTo, &GiveTo_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgInventoryPickup::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 47167 ];

	APgInventoryPickup_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgInventoryPickup::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 47165 ];

	APgInventoryPickup_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgInventoryPickup.CheckBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::CheckBase ( )
{
	static UFunction* pFnCheckBase = NULL;

	if ( ! pFnCheckBase )
		pFnCheckBase = (UFunction*) UObject::GObjObjects()->Data[ 47164 ];

	APgInventoryPickup_execCheckBase_Parms CheckBase_Parms;

	pFnCheckBase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckBase, &CheckBase_Parms, NULL );

	pFnCheckBase->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.PostEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )

void APgInventoryPickup::PostEvent ( struct FName EventName, struct FName listName )
{
	static UFunction* pFnPostEvent = NULL;

	if ( ! pFnPostEvent )
		pFnPostEvent = (UFunction*) UObject::GObjObjects()->Data[ 47161 ];

	APgInventoryPickup_execPostEvent_Parms PostEvent_Parms;
	memcpy ( &PostEvent_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEvent_Parms.listName, &listName, 0x8 );

	pFnPostEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEvent, &PostEvent_Parms, NULL );

	pFnPostEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.UpdatePlugins
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::UpdatePlugins ( )
{
	static UFunction* pFnUpdatePlugins = NULL;

	if ( ! pFnUpdatePlugins )
		pFnUpdatePlugins = (UFunction*) UObject::GObjObjects()->Data[ 47160 ];

	APgInventoryPickup_execUpdatePlugins_Parms UpdatePlugins_Parms;

	pFnUpdatePlugins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlugins, &UpdatePlugins_Parms, NULL );

	pFnUpdatePlugins->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.StartFlyingTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   flyToPawn                      ( CPF_Parm )

void APgInventoryPickup::StartFlyingTo ( class APawn* flyToPawn )
{
	static UFunction* pFnStartFlyingTo = NULL;

	if ( ! pFnStartFlyingTo )
		pFnStartFlyingTo = (UFunction*) UObject::GObjObjects()->Data[ 47158 ];

	APgInventoryPickup_execStartFlyingTo_Parms StartFlyingTo_Parms;
	StartFlyingTo_Parms.flyToPawn = flyToPawn;

	pFnStartFlyingTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartFlyingTo, &StartFlyingTo_Parms, NULL );

	pFnStartFlyingTo->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.TriggerEventPickupStatusChange
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  theInstigator                  ( CPF_Parm )
// class APgInventoryPickup*      thePickup                      ( CPF_Parm )
// class UObject*                 Archetype                      ( CPF_Parm )
// TArray< int >                  ActivateIndices                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgInventoryPickup::TriggerEventPickupStatusChange ( class AActor* theInstigator, class APgInventoryPickup* thePickup, class UObject* Archetype, TArray< int >* ActivateIndices )
{
	static UFunction* pFnTriggerEventPickupStatusChange = NULL;

	if ( ! pFnTriggerEventPickupStatusChange )
		pFnTriggerEventPickupStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 47152 ];

	APgInventoryPickup_execTriggerEventPickupStatusChange_Parms TriggerEventPickupStatusChange_Parms;
	TriggerEventPickupStatusChange_Parms.theInstigator = theInstigator;
	TriggerEventPickupStatusChange_Parms.thePickup = thePickup;
	TriggerEventPickupStatusChange_Parms.Archetype = Archetype;

	pFnTriggerEventPickupStatusChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerEventPickupStatusChange, &TriggerEventPickupStatusChange_Parms, NULL );

	pFnTriggerEventPickupStatusChange->FunctionFlags |= 0x400;

	if ( ActivateIndices )
		memcpy ( ActivateIndices, &TriggerEventPickupStatusChange_Parms.ActivateIndices, 0xC );
};

// Function GridGame.PgInventoryPickup.UnHidePickup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::UnHidePickup ( )
{
	static UFunction* pFnUnHidePickup = NULL;

	if ( ! pFnUnHidePickup )
		pFnUnHidePickup = (UFunction*) UObject::GObjObjects()->Data[ 47151 ];

	APgInventoryPickup_execUnHidePickup_Parms UnHidePickup_Parms;

	pFnUnHidePickup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnHidePickup, &UnHidePickup_Parms, NULL );

	pFnUnHidePickup->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.HidePickup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::HidePickup ( )
{
	static UFunction* pFnHidePickup = NULL;

	if ( ! pFnHidePickup )
		pFnHidePickup = (UFunction*) UObject::GObjObjects()->Data[ 47150 ];

	APgInventoryPickup_execHidePickup_Parms HidePickup_Parms;

	pFnHidePickup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHidePickup, &HidePickup_Parms, NULL );

	pFnHidePickup->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.DeInitPlugins
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::DeInitPlugins ( )
{
	static UFunction* pFnDeInitPlugins = NULL;

	if ( ! pFnDeInitPlugins )
		pFnDeInitPlugins = (UFunction*) UObject::GObjObjects()->Data[ 47149 ];

	APgInventoryPickup_execDeInitPlugins_Parms DeInitPlugins_Parms;

	pFnDeInitPlugins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeInitPlugins, &DeInitPlugins_Parms, NULL );

	pFnDeInitPlugins->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.InitPlugins
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInventoryPickup::InitPlugins ( )
{
	static UFunction* pFnInitPlugins = NULL;

	if ( ! pFnInitPlugins )
		pFnInitPlugins = (UFunction*) UObject::GObjObjects()->Data[ 47148 ];

	APgInventoryPickup_execInitPlugins_Parms InitPlugins_Parms;

	pFnInitPlugins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitPlugins, &InitPlugins_Parms, NULL );

	pFnInitPlugins->FunctionFlags |= 0x400;
};

// Function GridGame.PgInventoryPickup.IsValidTouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool APgInventoryPickup::IsValidTouch ( class APawn* Other )
{
	static UFunction* pFnIsValidTouch = NULL;

	if ( ! pFnIsValidTouch )
		pFnIsValidTouch = (UFunction*) UObject::GObjObjects()->Data[ 47145 ];

	APgInventoryPickup_execIsValidTouch_Parms IsValidTouch_Parms;
	IsValidTouch_Parms.Other = Other;

	pFnIsValidTouch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidTouch, &IsValidTouch_Parms, NULL );

	pFnIsValidTouch->FunctionFlags |= 0x400;

	return IsValidTouch_Parms.ReturnValue;
};

// Function GridGame.PgPowerBehavior.PerformPowerBehavior
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   performer                      ( CPF_Parm )

class AActor* UPgPowerBehavior::PerformPowerBehavior ( class APawn* performer )
{
	static UFunction* pFnPerformPowerBehavior = NULL;

	if ( ! pFnPerformPowerBehavior )
		pFnPerformPowerBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49348 ];

	UPgPowerBehavior_execPerformPowerBehavior_Parms PerformPowerBehavior_Parms;
	PerformPowerBehavior_Parms.performer = performer;

	pFnPerformPowerBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformPowerBehavior, &PerformPowerBehavior_Parms, NULL );

	pFnPerformPowerBehavior->FunctionFlags |= 0x400;

	return PerformPowerBehavior_Parms.ReturnValue;
};

// Function GridGame.PgPowerBehaviorBoost.PerformPowerBehavior
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   performer                      ( CPF_Parm )

class AActor* UPgPowerBehaviorBoost::PerformPowerBehavior ( class APawn* performer )
{
	static UFunction* pFnPerformPowerBehavior = NULL;

	if ( ! pFnPerformPowerBehavior )
		pFnPerformPowerBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49352 ];

	UPgPowerBehaviorBoost_execPerformPowerBehavior_Parms PerformPowerBehavior_Parms;
	PerformPowerBehavior_Parms.performer = performer;

	pFnPerformPowerBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformPowerBehavior, &PerformPowerBehavior_Parms, NULL );

	pFnPerformPowerBehavior->FunctionFlags |= 0x400;

	return PerformPowerBehavior_Parms.ReturnValue;
};

// Function GridGame.PgPowerBehaviorDamageScaling.PerformPowerBehavior
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   performer                      ( CPF_Parm )

class AActor* UPgPowerBehaviorDamageScaling::PerformPowerBehavior ( class APawn* performer )
{
	static UFunction* pFnPerformPowerBehavior = NULL;

	if ( ! pFnPerformPowerBehavior )
		pFnPerformPowerBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49357 ];

	UPgPowerBehaviorDamageScaling_execPerformPowerBehavior_Parms PerformPowerBehavior_Parms;
	PerformPowerBehavior_Parms.performer = performer;

	pFnPerformPowerBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformPowerBehavior, &PerformPowerBehavior_Parms, NULL );

	pFnPerformPowerBehavior->FunctionFlags |= 0x400;

	return PerformPowerBehavior_Parms.ReturnValue;
};

// Function GridGame.PgPowerBehaviorProjectile.PerformPowerBehavior
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   performer                      ( CPF_Parm )

class AActor* UPgPowerBehaviorProjectile::PerformPowerBehavior ( class APawn* performer )
{
	static UFunction* pFnPerformPowerBehavior = NULL;

	if ( ! pFnPerformPowerBehavior )
		pFnPerformPowerBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49361 ];

	UPgPowerBehaviorProjectile_execPerformPowerBehavior_Parms PerformPowerBehavior_Parms;
	PerformPowerBehavior_Parms.performer = performer;

	pFnPerformPowerBehavior->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformPowerBehavior, &PerformPowerBehavior_Parms, NULL );

	pFnPerformPowerBehavior->FunctionFlags |= 0x400;

	return PerformPowerBehavior_Parms.ReturnValue;
};

// Function GridGame.PgProjectile.Landed
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void APgProjectile::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 49539 ];

	APgProjectile_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function GridGame.PgProjectile.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void APgProjectile::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 49534 ];

	APgProjectile_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function GridGame.PgProjectile.UnTouch
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgProjectile::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 49532 ];

	APgProjectile_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function GridGame.PgProjectile.ProcessTouch
// [0x00820102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgProjectile::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 49512 ];

	APgProjectile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function GridGame.PgProjectile.ProcessStick
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           traceInfo                      ( CPF_Parm )

void APgProjectile::ProcessStick ( class AActor* Other, struct FVector HitLocation, struct FTraceHitInfo traceInfo )
{
	static UFunction* pFnProcessStick = NULL;

	if ( ! pFnProcessStick )
		pFnProcessStick = (UFunction*) UObject::GObjObjects()->Data[ 49507 ];

	APgProjectile_execProcessStick_Parms ProcessStick_Parms;
	ProcessStick_Parms.Other = Other;
	memcpy ( &ProcessStick_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessStick_Parms.traceInfo, &traceInfo, 0x1C );

	this->ProcessEvent ( pFnProcessStick, &ProcessStick_Parms, NULL );
};

// Function GridGame.PgProjectile.GetImpactTraceHitInfo
// [0x00C20102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// class AActor*                  otherHitActor                  ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )
// class AActor*                  outHitActor                    ( CPF_Parm | CPF_OutParm )

void APgProjectile::GetImpactTraceHitInfo ( struct FVector HitLocation, class AActor* otherHitActor, struct FTraceHitInfo* HitInfo, class AActor** outHitActor )
{
	static UFunction* pFnGetImpactTraceHitInfo = NULL;

	if ( ! pFnGetImpactTraceHitInfo )
		pFnGetImpactTraceHitInfo = (UFunction*) UObject::GObjObjects()->Data[ 49498 ];

	APgProjectile_execGetImpactTraceHitInfo_Parms GetImpactTraceHitInfo_Parms;
	memcpy ( &GetImpactTraceHitInfo_Parms.HitLocation, &HitLocation, 0xC );
	GetImpactTraceHitInfo_Parms.otherHitActor = otherHitActor;

	this->ProcessEvent ( pFnGetImpactTraceHitInfo, &GetImpactTraceHitInfo_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &GetImpactTraceHitInfo_Parms.HitInfo, 0x1C );

	if ( outHitActor )
		*outHitActor = GetImpactTraceHitInfo_Parms.outHitActor;
};

// Function GridGame.PgProjectile.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgProjectile::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 49494 ];

	APgProjectile_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function GridGame.PgProjectile.TriggerExplosion
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )
// class UPhysicalMaterial*       hitMaterial                    ( CPF_Parm )

void APgProjectile::TriggerExplosion ( struct FVector HitLocation, struct FVector HitNormal, class AActor* HitActor, class UPhysicalMaterial* hitMaterial )
{
	static UFunction* pFnTriggerExplosion = NULL;

	if ( ! pFnTriggerExplosion )
		pFnTriggerExplosion = (UFunction*) UObject::GObjObjects()->Data[ 49484 ];

	APgProjectile_execTriggerExplosion_Parms TriggerExplosion_Parms;
	memcpy ( &TriggerExplosion_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TriggerExplosion_Parms.HitNormal, &HitNormal, 0xC );
	TriggerExplosion_Parms.HitActor = HitActor;
	TriggerExplosion_Parms.hitMaterial = hitMaterial;

	this->ProcessEvent ( pFnTriggerExplosion, &TriggerExplosion_Parms, NULL );
};

// Function GridGame.PgProjectile.DeferredDestroy
// [0x00080902] ( FUNC_Event )
// Parameters infos:
// float                          DelaySec                       ( CPF_Parm )

void APgProjectile::eventDeferredDestroy ( float DelaySec )
{
	static UFunction* pFnDeferredDestroy = NULL;

	if ( ! pFnDeferredDestroy )
		pFnDeferredDestroy = (UFunction*) UObject::GObjObjects()->Data[ 49478 ];

	APgProjectile_eventDeferredDestroy_Parms DeferredDestroy_Parms;
	DeferredDestroy_Parms.DelaySec = DelaySec;

	this->ProcessEvent ( pFnDeferredDestroy, &DeferredDestroy_Parms, NULL );
};

// Function GridGame.PgProjectile.CanUpdateExplosionTimer
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgProjectile::CanUpdateExplosionTimer ( )
{
	static UFunction* pFnCanUpdateExplosionTimer = NULL;

	if ( ! pFnCanUpdateExplosionTimer )
		pFnCanUpdateExplosionTimer = (UFunction*) UObject::GObjObjects()->Data[ 49476 ];

	APgProjectile_execCanUpdateExplosionTimer_Parms CanUpdateExplosionTimer_Parms;

	this->ProcessEvent ( pFnCanUpdateExplosionTimer, &CanUpdateExplosionTimer_Parms, NULL );

	return CanUpdateExplosionTimer_Parms.ReturnValue;
};

// Function GridGame.PgProjectile.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void APgProjectile::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 49467 ];

	APgProjectile_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function GridGame.PgProjectile.ReorientToSurface
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgProjectile::ReorientToSurface ( )
{
	static UFunction* pFnReorientToSurface = NULL;

	if ( ! pFnReorientToSurface )
		pFnReorientToSurface = (UFunction*) UObject::GObjObjects()->Data[ 49466 ];

	APgProjectile_execReorientToSurface_Parms ReorientToSurface_Parms;

	pFnReorientToSurface->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReorientToSurface, &ReorientToSurface_Parms, NULL );

	pFnReorientToSurface->FunctionFlags |= 0x400;
};

// Function GridGame.PgProjectile.HasImpactBehavior
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  impactBehavior                 ( CPF_Parm )

bool APgProjectile::eventHasImpactBehavior ( unsigned char impactBehavior )
{
	static UFunction* pFnHasImpactBehavior = NULL;

	if ( ! pFnHasImpactBehavior )
		pFnHasImpactBehavior = (UFunction*) UObject::GObjObjects()->Data[ 49461 ];

	APgProjectile_eventHasImpactBehavior_Parms HasImpactBehavior_Parms;
	HasImpactBehavior_Parms.impactBehavior = impactBehavior;

	this->ProcessEvent ( pFnHasImpactBehavior, &HasImpactBehavior_Parms, NULL );

	return HasImpactBehavior_Parms.ReturnValue;
};

// Function GridGame.PgProjectile.InitFromNative
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void APgProjectile::eventInitFromNative ( struct FVector Direction )
{
	static UFunction* pFnInitFromNative = NULL;

	if ( ! pFnInitFromNative )
		pFnInitFromNative = (UFunction*) UObject::GObjObjects()->Data[ 49459 ];

	APgProjectile_eventInitFromNative_Parms InitFromNative_Parms;
	memcpy ( &InitFromNative_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInitFromNative, &InitFromNative_Parms, NULL );
};

// Function GridGame.PgProjectile.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgProjectile::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49455 ];

	APgProjectile_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgProjectile.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgProjectile::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49453 ];

	APgProjectile_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function GridGame.PgProjectile.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgProjectile::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 49449 ];

	APgProjectile_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgProjectile.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgProjectile::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 49447 ];

	APgProjectile_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgProjectile.PostEventHit
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_OptionalParm | CPF_Parm )

void APgProjectile::PostEventHit ( struct FName EventName, struct FName listName, struct FVector HitNormal )
{
	static UFunction* pFnPostEventHit = NULL;

	if ( ! pFnPostEventHit )
		pFnPostEventHit = (UFunction*) UObject::GObjObjects()->Data[ 49443 ];

	APgProjectile_execPostEventHit_Parms PostEventHit_Parms;
	memcpy ( &PostEventHit_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEventHit_Parms.listName, &listName, 0x8 );
	memcpy ( &PostEventHit_Parms.HitNormal, &HitNormal, 0xC );

	pFnPostEventHit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEventHit, &PostEventHit_Parms, NULL );

	pFnPostEventHit->FunctionFlags |= 0x400;
};

// Function GridGame.PgProjectile.PostEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )
// struct FName                   listName                       ( CPF_OptionalParm | CPF_Parm )

void APgProjectile::PostEvent ( struct FName EventName, struct FName listName )
{
	static UFunction* pFnPostEvent = NULL;

	if ( ! pFnPostEvent )
		pFnPostEvent = (UFunction*) UObject::GObjObjects()->Data[ 49440 ];

	APgProjectile_execPostEvent_Parms PostEvent_Parms;
	memcpy ( &PostEvent_Parms.EventName, &EventName, 0x8 );
	memcpy ( &PostEvent_Parms.listName, &listName, 0x8 );

	pFnPostEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostEvent, &PostEvent_Parms, NULL );

	pFnPostEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgProjectile.GetMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgProjectile::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 49437 ];

	APgProjectile_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgProjectile.InitMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgProjectile::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 49436 ];

	APgProjectile_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgWeapon.GetMuzzleLoc
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector APgWeapon::eventGetMuzzleLoc ( )
{
	static UFunction* pFnGetMuzzleLoc = NULL;

	if ( ! pFnGetMuzzleLoc )
		pFnGetMuzzleLoc = (UFunction*) UObject::GObjObjects()->Data[ 51362 ];

	APgWeapon_eventGetMuzzleLoc_Parms GetMuzzleLoc_Parms;

	this->ProcessEvent ( pFnGetMuzzleLoc, &GetMuzzleLoc_Parms, NULL );

	return GetMuzzleLoc_Parms.ReturnValue;
};

// Function GridGame.PgWeapon.GetSocketOrBoneLocationRotation
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   boneOrSocketName               ( CPF_Const | CPF_Parm )
// struct FVector                 BoneLocation                   ( CPF_Parm | CPF_OutParm )
// struct FRotator                BoneRotation                   ( CPF_Parm | CPF_OutParm )

bool APgWeapon::GetSocketOrBoneLocationRotation ( struct FName boneOrSocketName, struct FVector* BoneLocation, struct FRotator* BoneRotation )
{
	static UFunction* pFnGetSocketOrBoneLocationRotation = NULL;

	if ( ! pFnGetSocketOrBoneLocationRotation )
		pFnGetSocketOrBoneLocationRotation = (UFunction*) UObject::GObjObjects()->Data[ 51357 ];

	APgWeapon_execGetSocketOrBoneLocationRotation_Parms GetSocketOrBoneLocationRotation_Parms;
	memcpy ( &GetSocketOrBoneLocationRotation_Parms.boneOrSocketName, &boneOrSocketName, 0x8 );

	this->ProcessEvent ( pFnGetSocketOrBoneLocationRotation, &GetSocketOrBoneLocationRotation_Parms, NULL );

	if ( BoneLocation )
		memcpy ( BoneLocation, &GetSocketOrBoneLocationRotation_Parms.BoneLocation, 0xC );

	if ( BoneRotation )
		memcpy ( BoneRotation, &GetSocketOrBoneLocationRotation_Parms.BoneRotation, 0xC );

	return GetSocketOrBoneLocationRotation_Parms.ReturnValue;
};

// Function GridGame.PgWeapon.TimeWeaponEquipping
// [0x00020102] 
// Parameters infos:

void APgWeapon::TimeWeaponEquipping ( )
{
	static UFunction* pFnTimeWeaponEquipping = NULL;

	if ( ! pFnTimeWeaponEquipping )
		pFnTimeWeaponEquipping = (UFunction*) UObject::GObjObjects()->Data[ 51355 ];

	APgWeapon_execTimeWeaponEquipping_Parms TimeWeaponEquipping_Parms;

	this->ProcessEvent ( pFnTimeWeaponEquipping, &TimeWeaponEquipping_Parms, NULL );
};

// Function GridGame.PgWeapon.TimeWeaponPutDown
// [0x00020102] 
// Parameters infos:

void APgWeapon::TimeWeaponPutDown ( )
{
	static UFunction* pFnTimeWeaponPutDown = NULL;

	if ( ! pFnTimeWeaponPutDown )
		pFnTimeWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 51354 ];

	APgWeapon_execTimeWeaponPutDown_Parms TimeWeaponPutDown_Parms;

	this->ProcessEvent ( pFnTimeWeaponPutDown, &TimeWeaponPutDown_Parms, NULL );
};

// Function GridGame.PgWeapon.DetachWeapon
// [0x00020102] 
// Parameters infos:

void APgWeapon::DetachWeapon ( )
{
	static UFunction* pFnDetachWeapon = NULL;

	if ( ! pFnDetachWeapon )
		pFnDetachWeapon = (UFunction*) UObject::GObjObjects()->Data[ 51352 ];

	APgWeapon_execDetachWeapon_Parms DetachWeapon_Parms;

	this->ProcessEvent ( pFnDetachWeapon, &DetachWeapon_Parms, NULL );
};

// Function GridGame.PgWeapon.AttachWeaponTo
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void APgWeapon::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 51349 ];

	APgWeapon_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	pFnAttachWeaponTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );

	pFnAttachWeaponTo->FunctionFlags |= 0x400;
};

// Function GridGame.PgWeapon.DropFrom
// [0x00020000] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void APgWeapon::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 51346 ];

	APgWeapon_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );
};

// Function GridGame.PgWeapon.ClientGivenTo
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_Parm )

void APgWeapon::ClientGivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientGivenTo = NULL;

	if ( ! pFnClientGivenTo )
		pFnClientGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 51343 ];

	APgWeapon_execClientGivenTo_Parms ClientGivenTo_Parms;
	ClientGivenTo_Parms.NewOwner = NewOwner;
	ClientGivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientGivenTo, &ClientGivenTo_Parms, NULL );
};

// Function GridGame.PgWeapon.GivenTo
// [0x00024002] 
// Parameters infos:
// class APawn*                   thisPawn                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void APgWeapon::GivenTo ( class APawn* thisPawn, unsigned long bDoNotActivate )
{
	static UFunction* pFnGivenTo = NULL;

	if ( ! pFnGivenTo )
		pFnGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 51340 ];

	APgWeapon_execGivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.thisPawn = thisPawn;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnGivenTo, &GivenTo_Parms, NULL );
};

// Function GridGame.PgWeapon.GetMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgWeapon::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 51337 ];

	APgWeapon_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgWeapon.InitMaterialInstanceList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgWeapon::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 51336 ];

	APgWeapon_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgWeaponCombo.ComboMoveEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgWeaponCombo::eventComboMoveEnd ( )
{
	static UFunction* pFnComboMoveEnd = NULL;

	if ( ! pFnComboMoveEnd )
		pFnComboMoveEnd = (UFunction*) UObject::GObjObjects()->Data[ 51400 ];

	APgWeaponCombo_eventComboMoveEnd_Parms ComboMoveEnd_Parms;

	this->ProcessEvent ( pFnComboMoveEnd, &ComboMoveEnd_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.ComboMoveStarted
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgWeaponCombo::eventComboMoveStarted ( )
{
	static UFunction* pFnComboMoveStarted = NULL;

	if ( ! pFnComboMoveStarted )
		pFnComboMoveStarted = (UFunction*) UObject::GObjObjects()->Data[ 51399 ];

	APgWeaponCombo_eventComboMoveStarted_Parms ComboMoveStarted_Parms;

	this->ProcessEvent ( pFnComboMoveStarted, &ComboMoveStarted_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.HolderDied
// [0x00020000] 
// Parameters infos:

void APgWeaponCombo::HolderDied ( )
{
	static UFunction* pFnHolderDied = NULL;

	if ( ! pFnHolderDied )
		pFnHolderDied = (UFunction*) UObject::GObjObjects()->Data[ 51398 ];

	APgWeaponCombo_execHolderDied_Parms HolderDied_Parms;

	this->ProcessEvent ( pFnHolderDied, &HolderDied_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.ServerStopFire
// [0x002200C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgWeaponCombo::ServerStopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnServerStopFire = NULL;

	if ( ! pFnServerStopFire )
		pFnServerStopFire = (UFunction*) UObject::GObjObjects()->Data[ 51396 ];

	APgWeaponCombo_execServerStopFire_Parms ServerStopFire_Parms;
	ServerStopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnServerStopFire, &ServerStopFire_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.ServerStartFire
// [0x002200C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgWeaponCombo::ServerStartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnServerStartFire = NULL;

	if ( ! pFnServerStartFire )
		pFnServerStartFire = (UFunction*) UObject::GObjObjects()->Data[ 51394 ];

	APgWeaponCombo_execServerStartFire_Parms ServerStartFire_Parms;
	ServerStartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnServerStartFire, &ServerStartFire_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgWeaponCombo::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 51392 ];

	APgWeaponCombo_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgWeaponCombo::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 51390 ];

	APgWeaponCombo_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.CustomFire
// [0x00020102] 
// Parameters infos:

void APgWeaponCombo::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51389 ];

	APgWeaponCombo_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.StopFireEffects
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgWeaponCombo::StopFireEffects ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFireEffects = NULL;

	if ( ! pFnStopFireEffects )
		pFnStopFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 51387 ];

	APgWeaponCombo_execStopFireEffects_Parms StopFireEffects_Parms;
	StopFireEffects_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFireEffects, &StopFireEffects_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.PlayFireEffects
// [0x00024100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void APgWeaponCombo::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 51384 ];

	APgWeaponCombo_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function GridGame.PgWeaponCombo.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool APgWeaponCombo::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 51380 ];

	APgWeaponCombo_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function GridGame.PgWeaponCombo.GetFireModeSpecialMove
// [0x00020102] 
// Parameters infos:
// class UPgSpecialMoveAsset*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

class UPgSpecialMoveAsset* APgWeaponCombo::GetFireModeSpecialMove ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireModeSpecialMove = NULL;

	if ( ! pFnGetFireModeSpecialMove )
		pFnGetFireModeSpecialMove = (UFunction*) UObject::GObjObjects()->Data[ 51376 ];

	APgWeaponCombo_execGetFireModeSpecialMove_Parms GetFireModeSpecialMove_Parms;
	GetFireModeSpecialMove_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireModeSpecialMove, &GetFireModeSpecialMove_Parms, NULL );

	return GetFireModeSpecialMove_Parms.ReturnValue;
};

// Function GridGame.PgWeaponCombo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void APgWeaponCombo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51375 ];

	APgWeaponCombo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgWeaponFireType.CustomFire
// [0x00020100] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )

void UPgWeaponFireType::CustomFire ( class AWeapon* Weapon )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51265 ];

	UPgWeaponFireType_execCustomFire_Parms CustomFire_Parms;
	CustomFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgWeapFireTypeMelee.CustomFire
// [0x00820102] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )

void UPgWeapFireTypeMelee::CustomFire ( class AWeapon* Weapon )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51278 ];

	UPgWeapFireTypeMelee_execCustomFire_Parms CustomFire_Parms;
	CustomFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgWeapFireTypeProjectile.SpawnProjectile
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weapon                         ( CPF_Parm )
// struct FVector                 RealStartLocation              ( CPF_Parm )

class AProjectile* UPgWeapFireTypeProjectile::SpawnProjectile ( class AWeapon* Weapon, struct FVector RealStartLocation )
{
	static UFunction* pFnSpawnProjectile = NULL;

	if ( ! pFnSpawnProjectile )
		pFnSpawnProjectile = (UFunction*) UObject::GObjObjects()->Data[ 51304 ];

	UPgWeapFireTypeProjectile_execSpawnProjectile_Parms SpawnProjectile_Parms;
	SpawnProjectile_Parms.Weapon = Weapon;
	memcpy ( &SpawnProjectile_Parms.RealStartLocation, &RealStartLocation, 0xC );

	this->ProcessEvent ( pFnSpawnProjectile, &SpawnProjectile_Parms, NULL );

	return SpawnProjectile_Parms.ReturnValue;
};

// Function GridGame.PgWeapFireTypeProjectile.CustomFire
// [0x00820102] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )

void UPgWeapFireTypeProjectile::CustomFire ( class AWeapon* Weapon )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51295 ];

	UPgWeapFireTypeProjectile_execCustomFire_Parms CustomFire_Parms;
	CustomFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgWeapFireTypeProjectile.GetProjectileToFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weapon                         ( CPF_Parm )

class AProjectile* UPgWeapFireTypeProjectile::GetProjectileToFire ( class AWeapon* Weapon )
{
	static UFunction* pFnGetProjectileToFire = NULL;

	if ( ! pFnGetProjectileToFire )
		pFnGetProjectileToFire = (UFunction*) UObject::GObjObjects()->Data[ 51291 ];

	UPgWeapFireTypeProjectile_execGetProjectileToFire_Parms GetProjectileToFire_Parms;
	GetProjectileToFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnGetProjectileToFire, &GetProjectileToFire_Parms, NULL );

	return GetProjectileToFire_Parms.ReturnValue;
};

// Function GridGame.PgWeapFireTypeProjectile.ComputeProjectileSpawnLocationRotation
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class APawn*                   Instigator                     ( CPF_Parm )
// class AProjectile*             projArchetype                  ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm | CPF_OutParm )
// struct FRotator                SpawnRotation                  ( CPF_Parm | CPF_OutParm )

void UPgWeapFireTypeProjectile::ComputeProjectileSpawnLocationRotation ( class APawn* Instigator, class AProjectile* projArchetype, struct FVector* SpawnLocation, struct FRotator* SpawnRotation )
{
	static UFunction* pFnComputeProjectileSpawnLocationRotation = NULL;

	if ( ! pFnComputeProjectileSpawnLocationRotation )
		pFnComputeProjectileSpawnLocationRotation = (UFunction*) UObject::GObjObjects()->Data[ 51286 ];

	UPgWeapFireTypeProjectile_execComputeProjectileSpawnLocationRotation_Parms ComputeProjectileSpawnLocationRotation_Parms;
	ComputeProjectileSpawnLocationRotation_Parms.Instigator = Instigator;
	ComputeProjectileSpawnLocationRotation_Parms.projArchetype = projArchetype;

	pFnComputeProjectileSpawnLocationRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComputeProjectileSpawnLocationRotation, &ComputeProjectileSpawnLocationRotation_Parms, NULL );

	pFnComputeProjectileSpawnLocationRotation->FunctionFlags |= 0x400;

	if ( SpawnLocation )
		memcpy ( SpawnLocation, &ComputeProjectileSpawnLocationRotation_Parms.SpawnLocation, 0xC );

	if ( SpawnRotation )
		memcpy ( SpawnRotation, &ComputeProjectileSpawnLocationRotation_Parms.SpawnRotation, 0xC );
};

// Function GridGame.PgWeapFireTypePower.SpawnProjectile
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weapon                         ( CPF_Parm )
// struct FVector                 RealStartLocation              ( CPF_Parm )

class AProjectile* UPgWeapFireTypePower::SpawnProjectile ( class AWeapon* Weapon, struct FVector RealStartLocation )
{
	static UFunction* pFnSpawnProjectile = NULL;

	if ( ! pFnSpawnProjectile )
		pFnSpawnProjectile = (UFunction*) UObject::GObjObjects()->Data[ 51317 ];

	UPgWeapFireTypePower_execSpawnProjectile_Parms SpawnProjectile_Parms;
	SpawnProjectile_Parms.Weapon = Weapon;
	memcpy ( &SpawnProjectile_Parms.RealStartLocation, &RealStartLocation, 0xC );

	this->ProcessEvent ( pFnSpawnProjectile, &SpawnProjectile_Parms, NULL );

	return SpawnProjectile_Parms.ReturnValue;
};

// Function GridGame.PgWeapFireTypePower.GetProjectileToFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Weapon                         ( CPF_Parm )

class AProjectile* UPgWeapFireTypePower::GetProjectileToFire ( class AWeapon* Weapon )
{
	static UFunction* pFnGetProjectileToFire = NULL;

	if ( ! pFnGetProjectileToFire )
		pFnGetProjectileToFire = (UFunction*) UObject::GObjObjects()->Data[ 51311 ];

	UPgWeapFireTypePower_execGetProjectileToFire_Parms GetProjectileToFire_Parms;
	GetProjectileToFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnGetProjectileToFire, &GetProjectileToFire_Parms, NULL );

	return GetProjectileToFire_Parms.ReturnValue;
};

// Function GridGame.PgWeapFireTypeVehicleDriver.CustomFire
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )

void UPgWeapFireTypeVehicleDriver::CustomFire ( class AWeapon* Weapon )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51324 ];

	UPgWeapFireTypeVehicleDriver_execCustomFire_Parms CustomFire_Parms;
	CustomFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgOnline.DisplayDebug
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          FontHeight                     ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void UPgOnline::DisplayDebug ( class AHUD* HUD, float* FontHeight, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 46994 ];

	UPgOnline_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( FontHeight )
		*FontHeight = DisplayDebug_Parms.FontHeight;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function GridGame.PgOnline.GetLeaderboard
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlineLeaderboard*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnlineLeaderboard* UPgOnline::GetLeaderboard ( )
{
	static UFunction* pFnGetLeaderboard = NULL;

	if ( ! pFnGetLeaderboard )
		pFnGetLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 47421 ];

	UPgOnline_execGetLeaderboard_Parms GetLeaderboard_Parms;

	pFnGetLeaderboard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLeaderboard, &GetLeaderboard_Parms, NULL );

	pFnGetLeaderboard->FunctionFlags |= 0x400;

	return GetLeaderboard_Parms.ReturnValue;
};

// Function GridGame.PgOnline.GetLoginManager
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlineLoginManager*   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnlineLoginManager* UPgOnline::GetLoginManager ( )
{
	static UFunction* pFnGetLoginManager = NULL;

	if ( ! pFnGetLoginManager )
		pFnGetLoginManager = (UFunction*) UObject::GObjObjects()->Data[ 47419 ];

	UPgOnline_execGetLoginManager_Parms GetLoginManager_Parms;

	pFnGetLoginManager->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoginManager, &GetLoginManager_Parms, NULL );

	pFnGetLoginManager->FunctionFlags |= 0x400;

	return GetLoginManager_Parms.ReturnValue;
};

// Function GridGame.PgOnline.GetGameManager
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlineGameManager*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnlineGameManager* UPgOnline::GetGameManager ( )
{
	static UFunction* pFnGetGameManager = NULL;

	if ( ! pFnGetGameManager )
		pFnGetGameManager = (UFunction*) UObject::GObjObjects()->Data[ 45762 ];

	UPgOnline_execGetGameManager_Parms GetGameManager_Parms;

	pFnGetGameManager->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameManager, &GetGameManager_Parms, NULL );

	pFnGetGameManager->FunctionFlags |= 0x400;

	return GetGameManager_Parms.ReturnValue;
};

// Function GridGame.PgOnline.GetSessionManager
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlineSessionManager* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnlineSessionManager* UPgOnline::GetSessionManager ( )
{
	static UFunction* pFnGetSessionManager = NULL;

	if ( ! pFnGetSessionManager )
		pFnGetSessionManager = (UFunction*) UObject::GObjObjects()->Data[ 47417 ];

	UPgOnline_execGetSessionManager_Parms GetSessionManager_Parms;

	pFnGetSessionManager->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSessionManager, &GetSessionManager_Parms, NULL );

	pFnGetSessionManager->FunctionFlags |= 0x400;

	return GetSessionManager_Parms.ReturnValue;
};

// Function GridGame.PgOnline.GetPlayerList
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlinePlayerList*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnlinePlayerList* UPgOnline::GetPlayerList ( )
{
	static UFunction* pFnGetPlayerList = NULL;

	if ( ! pFnGetPlayerList )
		pFnGetPlayerList = (UFunction*) UObject::GObjObjects()->Data[ 47415 ];

	UPgOnline_execGetPlayerList_Parms GetPlayerList_Parms;

	pFnGetPlayerList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerList, &GetPlayerList_Parms, NULL );

	pFnGetPlayerList->FunctionFlags |= 0x400;

	return GetPlayerList_Parms.ReturnValue;
};

// Function GridGame.PgOnline.IsStandAlone
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnline::IsStandAlone ( )
{
	static UFunction* pFnIsStandAlone = NULL;

	if ( ! pFnIsStandAlone )
		pFnIsStandAlone = (UFunction*) UObject::GObjObjects()->Data[ 47413 ];

	UPgOnline_execIsStandAlone_Parms IsStandAlone_Parms;

	pFnIsStandAlone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsStandAlone, &IsStandAlone_Parms, NULL );

	pFnIsStandAlone->FunctionFlags |= 0x400;

	return IsStandAlone_Parms.ReturnValue;
};

// Function GridGame.PgOnline.IsClient
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnline::IsClient ( )
{
	static UFunction* pFnIsClient = NULL;

	if ( ! pFnIsClient )
		pFnIsClient = (UFunction*) UObject::GObjObjects()->Data[ 47411 ];

	UPgOnline_execIsClient_Parms IsClient_Parms;

	pFnIsClient->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClient, &IsClient_Parms, NULL );

	pFnIsClient->FunctionFlags |= 0x400;

	return IsClient_Parms.ReturnValue;
};

// Function GridGame.PgOnline.IsHost
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnline::IsHost ( )
{
	static UFunction* pFnIsHost = NULL;

	if ( ! pFnIsHost )
		pFnIsHost = (UFunction*) UObject::GObjObjects()->Data[ 47409 ];

	UPgOnline_execIsHost_Parms IsHost_Parms;

	pFnIsHost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsHost, &IsHost_Parms, NULL );

	pFnIsHost->FunctionFlags |= 0x400;

	return IsHost_Parms.ReturnValue;
};

// Function GridGame.PgOnline.IsMultiplayer
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnline::IsMultiplayer ( )
{
	static UFunction* pFnIsMultiplayer = NULL;

	if ( ! pFnIsMultiplayer )
		pFnIsMultiplayer = (UFunction*) UObject::GObjObjects()->Data[ 47407 ];

	UPgOnline_execIsMultiplayer_Parms IsMultiplayer_Parms;

	pFnIsMultiplayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMultiplayer, &IsMultiplayer_Parms, NULL );

	pFnIsMultiplayer->FunctionFlags |= 0x400;

	return IsMultiplayer_Parms.ReturnValue;
};

// Function GridGame.PgOnline.GetInstance
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgOnline*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgOnline* UPgOnline::GetInstance ( )
{
	static UFunction* pFnGetInstance = NULL;

	if ( ! pFnGetInstance )
		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 45760 ];

	UPgOnline_execGetInstance_Parms GetInstance_Parms;

	pFnGetInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );

	pFnGetInstance->FunctionFlags |= 0x400;

	return GetInstance_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.DisplayDebug
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          FontHeight                     ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void UPgOnlineGameManager::DisplayDebug ( class AHUD* HUD, float* FontHeight, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 47700 ];

	UPgOnlineGameManager_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( FontHeight )
		*FontHeight = DisplayDebug_Parms.FontHeight;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function GridGame.PgOnlineGameManager._GetPlayerNickname
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UOnlineSubsystem*        oss                            ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )

struct FString UPgOnlineGameManager::event_GetPlayerNickname ( class UOnlineSubsystem* oss, unsigned char LocalUserNum )
{
	static UFunction* pFn_GetPlayerNickname = NULL;

	if ( ! pFn_GetPlayerNickname )
		pFn_GetPlayerNickname = (UFunction*) UObject::GObjObjects()->Data[ 47696 ];

	UPgOnlineGameManager_event_GetPlayerNickname_Parms _GetPlayerNickname_Parms;
	_GetPlayerNickname_Parms.oss = oss;
	_GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFn_GetPlayerNickname, &_GetPlayerNickname_Parms, NULL );

	return _GetPlayerNickname_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.lobbyStartCountdown
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::lobbyStartCountdown ( )
{
	static UFunction* pFnlobbyStartCountdown = NULL;

	if ( ! pFnlobbyStartCountdown )
		pFnlobbyStartCountdown = (UFunction*) UObject::GObjObjects()->Data[ 47695 ];

	UPgOnlineGameManager_execlobbyStartCountdown_Parms lobbyStartCountdown_Parms;

	pFnlobbyStartCountdown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnlobbyStartCountdown, &lobbyStartCountdown_Parms, NULL );

	pFnlobbyStartCountdown->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.lobbyLeaveSession
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// unsigned long                  shouldSave                     ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineGameManager::lobbyLeaveSession ( unsigned long shouldSave )
{
	static UFunction* pFnlobbyLeaveSession = NULL;

	if ( ! pFnlobbyLeaveSession )
		pFnlobbyLeaveSession = (UFunction*) UObject::GObjObjects()->Data[ 47693 ];

	UPgOnlineGameManager_execlobbyLeaveSession_Parms lobbyLeaveSession_Parms;
	lobbyLeaveSession_Parms.shouldSave = shouldSave;

	pFnlobbyLeaveSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnlobbyLeaveSession, &lobbyLeaveSession_Parms, NULL );

	pFnlobbyLeaveSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.lobbyStartReady
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::lobbyStartReady ( )
{
	static UFunction* pFnlobbyStartReady = NULL;

	if ( ! pFnlobbyStartReady )
		pFnlobbyStartReady = (UFunction*) UObject::GObjObjects()->Data[ 47692 ];

	UPgOnlineGameManager_execlobbyStartReady_Parms lobbyStartReady_Parms;

	pFnlobbyStartReady->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnlobbyStartReady, &lobbyStartReady_Parms, NULL );

	pFnlobbyStartReady->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.DebugGoto
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineGameManager::DebugGoto ( struct FString URL )
{
	static UFunction* pFnDebugGoto = NULL;

	if ( ! pFnDebugGoto )
		pFnDebugGoto = (UFunction*) UObject::GObjObjects()->Data[ 47690 ];

	UPgOnlineGameManager_execDebugGoto_Parms DebugGoto_Parms;
	memcpy ( &DebugGoto_Parms.URL, &URL, 0xC );

	pFnDebugGoto->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugGoto, &DebugGoto_Parms, NULL );

	pFnDebugGoto->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.DebugReset
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::DebugReset ( )
{
	static UFunction* pFnDebugReset = NULL;

	if ( ! pFnDebugReset )
		pFnDebugReset = (UFunction*) UObject::GObjObjects()->Data[ 47689 ];

	UPgOnlineGameManager_execDebugReset_Parms DebugReset_Parms;

	pFnDebugReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugReset, &DebugReset_Parms, NULL );

	pFnDebugReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetCurrentGameTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetCurrentGameTime ( )
{
	static UFunction* pFnGetCurrentGameTime = NULL;

	if ( ! pFnGetCurrentGameTime )
		pFnGetCurrentGameTime = (UFunction*) UObject::GObjObjects()->Data[ 47687 ];

	UPgOnlineGameManager_execGetCurrentGameTime_Parms GetCurrentGameTime_Parms;

	pFnGetCurrentGameTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentGameTime, &GetCurrentGameTime_Parms, NULL );

	pFnGetCurrentGameTime->FunctionFlags |= 0x400;

	return GetCurrentGameTime_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetGameTimeLimit
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetGameTimeLimit ( )
{
	static UFunction* pFnGetGameTimeLimit = NULL;

	if ( ! pFnGetGameTimeLimit )
		pFnGetGameTimeLimit = (UFunction*) UObject::GObjObjects()->Data[ 47685 ];

	UPgOnlineGameManager_execGetGameTimeLimit_Parms GetGameTimeLimit_Parms;

	pFnGetGameTimeLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameTimeLimit, &GetGameTimeLimit_Parms, NULL );

	pFnGetGameTimeLimit->FunctionFlags |= 0x400;

	return GetGameTimeLimit_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetGameTimeLimit
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            TimeLimit                      ( CPF_Parm )

void UPgOnlineGameManager::SetGameTimeLimit ( int TimeLimit )
{
	static UFunction* pFnSetGameTimeLimit = NULL;

	if ( ! pFnSetGameTimeLimit )
		pFnSetGameTimeLimit = (UFunction*) UObject::GObjObjects()->Data[ 47683 ];

	UPgOnlineGameManager_execSetGameTimeLimit_Parms SetGameTimeLimit_Parms;
	SetGameTimeLimit_Parms.TimeLimit = TimeLimit;

	pFnSetGameTimeLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGameTimeLimit, &SetGameTimeLimit_Parms, NULL );

	pFnSetGameTimeLimit->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.IsInPreGameLobby
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineGameManager::IsInPreGameLobby ( )
{
	static UFunction* pFnIsInPreGameLobby = NULL;

	if ( ! pFnIsInPreGameLobby )
		pFnIsInPreGameLobby = (UFunction*) UObject::GObjObjects()->Data[ 47681 ];

	UPgOnlineGameManager_execIsInPreGameLobby_Parms IsInPreGameLobby_Parms;

	pFnIsInPreGameLobby->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInPreGameLobby, &IsInPreGameLobby_Parms, NULL );

	pFnIsInPreGameLobby->FunctionFlags |= 0x400;

	return IsInPreGameLobby_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetCompletionMapIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetCompletionMapIndex ( )
{
	static UFunction* pFnGetCompletionMapIndex = NULL;

	if ( ! pFnGetCompletionMapIndex )
		pFnGetCompletionMapIndex = (UFunction*) UObject::GObjObjects()->Data[ 47679 ];

	UPgOnlineGameManager_execGetCompletionMapIndex_Parms GetCompletionMapIndex_Parms;

	pFnGetCompletionMapIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCompletionMapIndex, &GetCompletionMapIndex_Parms, NULL );

	pFnGetCompletionMapIndex->FunctionFlags |= 0x400;

	return GetCompletionMapIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetCompletionMap
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineGameManager::SetCompletionMap ( struct FString MapName )
{
	static UFunction* pFnSetCompletionMap = NULL;

	if ( ! pFnSetCompletionMap )
		pFnSetCompletionMap = (UFunction*) UObject::GObjObjects()->Data[ 47677 ];

	UPgOnlineGameManager_execSetCompletionMap_Parms SetCompletionMap_Parms;
	memcpy ( &SetCompletionMap_Parms.MapName, &MapName, 0xC );

	pFnSetCompletionMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCompletionMap, &SetCompletionMap_Parms, NULL );

	pFnSetCompletionMap->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetCurrentMapIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetCurrentMapIndex ( )
{
	static UFunction* pFnGetCurrentMapIndex = NULL;

	if ( ! pFnGetCurrentMapIndex )
		pFnGetCurrentMapIndex = (UFunction*) UObject::GObjObjects()->Data[ 47675 ];

	UPgOnlineGameManager_execGetCurrentMapIndex_Parms GetCurrentMapIndex_Parms;

	pFnGetCurrentMapIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentMapIndex, &GetCurrentMapIndex_Parms, NULL );

	pFnGetCurrentMapIndex->FunctionFlags |= 0x400;

	return GetCurrentMapIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetNextMapIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetNextMapIndex ( )
{
	static UFunction* pFnGetNextMapIndex = NULL;

	if ( ! pFnGetNextMapIndex )
		pFnGetNextMapIndex = (UFunction*) UObject::GObjObjects()->Data[ 47673 ];

	UPgOnlineGameManager_execGetNextMapIndex_Parms GetNextMapIndex_Parms;

	pFnGetNextMapIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextMapIndex, &GetNextMapIndex_Parms, NULL );

	pFnGetNextMapIndex->FunctionFlags |= 0x400;

	return GetNextMapIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetNextMap
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgOnlineGameManager::GetNextMap ( )
{
	static UFunction* pFnGetNextMap = NULL;

	if ( ! pFnGetNextMap )
		pFnGetNextMap = (UFunction*) UObject::GObjObjects()->Data[ 47671 ];

	UPgOnlineGameManager_execGetNextMap_Parms GetNextMap_Parms;

	pFnGetNextMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextMap, &GetNextMap_Parms, NULL );

	pFnGetNextMap->FunctionFlags |= 0x400;

	return GetNextMap_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetNextMap
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            mapIndex                       ( CPF_Parm )

void UPgOnlineGameManager::SetNextMap ( int mapIndex )
{
	static UFunction* pFnSetNextMap = NULL;

	if ( ! pFnSetNextMap )
		pFnSetNextMap = (UFunction*) UObject::GObjObjects()->Data[ 47669 ];

	UPgOnlineGameManager_execSetNextMap_Parms SetNextMap_Parms;
	SetNextMap_Parms.mapIndex = mapIndex;

	pFnSetNextMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNextMap, &SetNextMap_Parms, NULL );

	pFnSetNextMap->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GotoMap
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineGameManager::GotoMap ( struct FString URL )
{
	static UFunction* pFnGotoMap = NULL;

	if ( ! pFnGotoMap )
		pFnGotoMap = (UFunction*) UObject::GObjObjects()->Data[ 47667 ];

	UPgOnlineGameManager_execGotoMap_Parms GotoMap_Parms;
	memcpy ( &GotoMap_Parms.URL, &URL, 0xC );

	pFnGotoMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGotoMap, &GotoMap_Parms, NULL );

	pFnGotoMap->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.IsSeamless
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineGameManager::IsSeamless ( )
{
	static UFunction* pFnIsSeamless = NULL;

	if ( ! pFnIsSeamless )
		pFnIsSeamless = (UFunction*) UObject::GObjObjects()->Data[ 47665 ];

	UPgOnlineGameManager_execIsSeamless_Parms IsSeamless_Parms;

	pFnIsSeamless->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSeamless, &IsSeamless_Parms, NULL );

	pFnIsSeamless->FunctionFlags |= 0x400;

	return IsSeamless_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetSeamless
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  Seamless                       ( CPF_Parm )

void UPgOnlineGameManager::SetSeamless ( unsigned long Seamless )
{
	static UFunction* pFnSetSeamless = NULL;

	if ( ! pFnSetSeamless )
		pFnSetSeamless = (UFunction*) UObject::GObjObjects()->Data[ 47663 ];

	UPgOnlineGameManager_execSetSeamless_Parms SetSeamless_Parms;
	SetSeamless_Parms.Seamless = Seamless;

	pFnSetSeamless->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSeamless, &SetSeamless_Parms, NULL );

	pFnSetSeamless->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.ShowQosWarning
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::ShowQosWarning ( )
{
	static UFunction* pFnShowQosWarning = NULL;

	if ( ! pFnShowQosWarning )
		pFnShowQosWarning = (UFunction*) UObject::GObjObjects()->Data[ 47662 ];

	UPgOnlineGameManager_execShowQosWarning_Parms ShowQosWarning_Parms;

	pFnShowQosWarning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowQosWarning, &ShowQosWarning_Parms, NULL );

	pFnShowQosWarning->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.EnableQosWarning
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  Enabled                        ( CPF_Parm )

void UPgOnlineGameManager::EnableQosWarning ( unsigned long Enabled )
{
	static UFunction* pFnEnableQosWarning = NULL;

	if ( ! pFnEnableQosWarning )
		pFnEnableQosWarning = (UFunction*) UObject::GObjObjects()->Data[ 47660 ];

	UPgOnlineGameManager_execEnableQosWarning_Parms EnableQosWarning_Parms;
	EnableQosWarning_Parms.Enabled = Enabled;

	pFnEnableQosWarning->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableQosWarning, &EnableQosWarning_Parms, NULL );

	pFnEnableQosWarning->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetRecommendedNumPlayers
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  GameModeIndex                  ( CPF_Parm )

int UPgOnlineGameManager::GetRecommendedNumPlayers ( unsigned char GameModeIndex )
{
	static UFunction* pFnGetRecommendedNumPlayers = NULL;

	if ( ! pFnGetRecommendedNumPlayers )
		pFnGetRecommendedNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47657 ];

	UPgOnlineGameManager_execGetRecommendedNumPlayers_Parms GetRecommendedNumPlayers_Parms;
	GetRecommendedNumPlayers_Parms.GameModeIndex = GameModeIndex;

	pFnGetRecommendedNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRecommendedNumPlayers, &GetRecommendedNumPlayers_Parms, NULL );

	pFnGetRecommendedNumPlayers->FunctionFlags |= 0x400;

	return GetRecommendedNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetMaxNumPlayersForNextGame
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameManager::GetMaxNumPlayersForNextGame ( )
{
	static UFunction* pFnGetMaxNumPlayersForNextGame = NULL;

	if ( ! pFnGetMaxNumPlayersForNextGame )
		pFnGetMaxNumPlayersForNextGame = (UFunction*) UObject::GObjObjects()->Data[ 47655 ];

	UPgOnlineGameManager_execGetMaxNumPlayersForNextGame_Parms GetMaxNumPlayersForNextGame_Parms;

	pFnGetMaxNumPlayersForNextGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxNumPlayersForNextGame, &GetMaxNumPlayersForNextGame_Parms, NULL );

	pFnGetMaxNumPlayersForNextGame->FunctionFlags |= 0x400;

	return GetMaxNumPlayersForNextGame_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetMaxPlayers
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Max                            ( CPF_Parm )

void UPgOnlineGameManager::SetMaxPlayers ( int Max )
{
	static UFunction* pFnSetMaxPlayers = NULL;

	if ( ! pFnSetMaxPlayers )
		pFnSetMaxPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47653 ];

	UPgOnlineGameManager_execSetMaxPlayers_Parms SetMaxPlayers_Parms;
	SetMaxPlayers_Parms.Max = Max;

	pFnSetMaxPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMaxPlayers, &SetMaxPlayers_Parms, NULL );

	pFnSetMaxPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.IsPublic
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineGameManager::IsPublic ( )
{
	static UFunction* pFnIsPublic = NULL;

	if ( ! pFnIsPublic )
		pFnIsPublic = (UFunction*) UObject::GObjObjects()->Data[ 47651 ];

	UPgOnlineGameManager_execIsPublic_Parms IsPublic_Parms;

	pFnIsPublic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPublic, &IsPublic_Parms, NULL );

	pFnIsPublic->FunctionFlags |= 0x400;

	return IsPublic_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetPublic
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  Public                         ( CPF_Parm )

void UPgOnlineGameManager::SetPublic ( unsigned long Public )
{
	static UFunction* pFnSetPublic = NULL;

	if ( ! pFnSetPublic )
		pFnSetPublic = (UFunction*) UObject::GObjObjects()->Data[ 47649 ];

	UPgOnlineGameManager_execSetPublic_Parms SetPublic_Parms;
	SetPublic_Parms.Public = Public;

	pFnSetPublic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPublic, &SetPublic_Parms, NULL );

	pFnSetPublic->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.UpdateGRI
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::UpdateGRI ( )
{
	static UFunction* pFnUpdateGRI = NULL;

	if ( ! pFnUpdateGRI )
		pFnUpdateGRI = (UFunction*) UObject::GObjObjects()->Data[ 47648 ];

	UPgOnlineGameManager_execUpdateGRI_Parms UpdateGRI_Parms;

	pFnUpdateGRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateGRI, &UpdateGRI_Parms, NULL );

	pFnUpdateGRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetOptionValue
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   OptionName                     ( CPF_Parm )
// float                          Value                          ( CPF_Parm | CPF_OutParm )

bool UPgOnlineGameManager::GetOptionValue ( struct FName OptionName, float* Value )
{
	static UFunction* pFnGetOptionValue = NULL;

	if ( ! pFnGetOptionValue )
		pFnGetOptionValue = (UFunction*) UObject::GObjObjects()->Data[ 47644 ];

	UPgOnlineGameManager_execGetOptionValue_Parms GetOptionValue_Parms;
	memcpy ( &GetOptionValue_Parms.OptionName, &OptionName, 0x8 );

	pFnGetOptionValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOptionValue, &GetOptionValue_Parms, NULL );

	pFnGetOptionValue->FunctionFlags |= 0x400;

	if ( Value )
		*Value = GetOptionValue_Parms.Value;

	return GetOptionValue_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetOptionAt
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FName                   OptionName                     ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void UPgOnlineGameManager::SetOptionAt ( int Index, struct FName OptionName, float Value )
{
	static UFunction* pFnSetOptionAt = NULL;

	if ( ! pFnSetOptionAt )
		pFnSetOptionAt = (UFunction*) UObject::GObjObjects()->Data[ 47640 ];

	UPgOnlineGameManager_execSetOptionAt_Parms SetOptionAt_Parms;
	SetOptionAt_Parms.Index = Index;
	memcpy ( &SetOptionAt_Parms.OptionName, &OptionName, 0x8 );
	SetOptionAt_Parms.Value = Value;

	pFnSetOptionAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOptionAt, &SetOptionAt_Parms, NULL );

	pFnSetOptionAt->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.SetOption
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   OptionName                     ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

bool UPgOnlineGameManager::SetOption ( struct FName OptionName, float Value )
{
	static UFunction* pFnSetOption = NULL;

	if ( ! pFnSetOption )
		pFnSetOption = (UFunction*) UObject::GObjObjects()->Data[ 47636 ];

	UPgOnlineGameManager_execSetOption_Parms SetOption_Parms;
	memcpy ( &SetOption_Parms.OptionName, &OptionName, 0x8 );
	SetOption_Parms.Value = Value;

	pFnSetOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOption, &SetOption_Parms, NULL );

	pFnSetOption->FunctionFlags |= 0x400;

	return SetOption_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetStaticRuleSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgRuleSet*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  GameModeIndex                  ( CPF_Parm )

class UPgRuleSet* UPgOnlineGameManager::GetStaticRuleSet ( unsigned char GameModeIndex )
{
	static UFunction* pFnGetStaticRuleSet = NULL;

	if ( ! pFnGetStaticRuleSet )
		pFnGetStaticRuleSet = (UFunction*) UObject::GObjObjects()->Data[ 47633 ];

	UPgOnlineGameManager_execGetStaticRuleSet_Parms GetStaticRuleSet_Parms;
	GetStaticRuleSet_Parms.GameModeIndex = GameModeIndex;

	pFnGetStaticRuleSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStaticRuleSet, &GetStaticRuleSet_Parms, NULL );

	pFnGetStaticRuleSet->FunctionFlags |= 0x400;

	return GetStaticRuleSet_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetRuleSetFilename
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  GameModeIndex                  ( CPF_Parm )

struct FString UPgOnlineGameManager::GetRuleSetFilename ( unsigned char GameModeIndex )
{
	static UFunction* pFnGetRuleSetFilename = NULL;

	if ( ! pFnGetRuleSetFilename )
		pFnGetRuleSetFilename = (UFunction*) UObject::GObjObjects()->Data[ 47630 ];

	UPgOnlineGameManager_execGetRuleSetFilename_Parms GetRuleSetFilename_Parms;
	GetRuleSetFilename_Parms.GameModeIndex = GameModeIndex;

	pFnGetRuleSetFilename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRuleSetFilename, &GetRuleSetFilename_Parms, NULL );

	pFnGetRuleSetFilename->FunctionFlags |= 0x400;

	return GetRuleSetFilename_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetRuleSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgRuleSet*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgRuleSet* UPgOnlineGameManager::GetRuleSet ( )
{
	static UFunction* pFnGetRuleSet = NULL;

	if ( ! pFnGetRuleSet )
		pFnGetRuleSet = (UFunction*) UObject::GObjObjects()->Data[ 47628 ];

	UPgOnlineGameManager_execGetRuleSet_Parms GetRuleSet_Parms;

	pFnGetRuleSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRuleSet, &GetRuleSet_Parms, NULL );

	pFnGetRuleSet->FunctionFlags |= 0x400;

	return GetRuleSet_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.InitRuleSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  GameModeIndex                  ( CPF_Parm )

void UPgOnlineGameManager::InitRuleSet ( unsigned char GameModeIndex )
{
	static UFunction* pFnInitRuleSet = NULL;

	if ( ! pFnInitRuleSet )
		pFnInitRuleSet = (UFunction*) UObject::GObjObjects()->Data[ 47626 ];

	UPgOnlineGameManager_execInitRuleSet_Parms InitRuleSet_Parms;
	InitRuleSet_Parms.GameModeIndex = GameModeIndex;

	pFnInitRuleSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRuleSet, &InitRuleSet_Parms, NULL );

	pFnInitRuleSet->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetNextGameMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineGameManager::GetNextGameMode ( )
{
	static UFunction* pFnGetNextGameMode = NULL;

	if ( ! pFnGetNextGameMode )
		pFnGetNextGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47624 ];

	UPgOnlineGameManager_execGetNextGameMode_Parms GetNextGameMode_Parms;

	pFnGetNextGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextGameMode, &GetNextGameMode_Parms, NULL );

	pFnGetNextGameMode->FunctionFlags |= 0x400;

	return GetNextGameMode_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.GetCurrentGameMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineGameManager::GetCurrentGameMode ( )
{
	static UFunction* pFnGetCurrentGameMode = NULL;

	if ( ! pFnGetCurrentGameMode )
		pFnGetCurrentGameMode = (UFunction*) UObject::GObjObjects()->Data[ 45764 ];

	UPgOnlineGameManager_execGetCurrentGameMode_Parms GetCurrentGameMode_Parms;

	pFnGetCurrentGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentGameMode, &GetCurrentGameMode_Parms, NULL );

	pFnGetCurrentGameMode->FunctionFlags |= 0x400;

	return GetCurrentGameMode_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.SetNextGameMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  GameModeIndex                  ( CPF_Parm )

void UPgOnlineGameManager::SetNextGameMode ( unsigned char GameModeIndex )
{
	static UFunction* pFnSetNextGameMode = NULL;

	if ( ! pFnSetNextGameMode )
		pFnSetNextGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47622 ];

	UPgOnlineGameManager_execSetNextGameMode_Parms SetNextGameMode_Parms;
	SetNextGameMode_Parms.GameModeIndex = GameModeIndex;

	pFnSetNextGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNextGameMode, &SetNextGameMode_Parms, NULL );

	pFnSetNextGameMode->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GetGameSettingsURL
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  GameModeIndex                  ( CPF_OptionalParm | CPF_Parm )

struct FString UPgOnlineGameManager::GetGameSettingsURL ( unsigned char GameModeIndex )
{
	static UFunction* pFnGetGameSettingsURL = NULL;

	if ( ! pFnGetGameSettingsURL )
		pFnGetGameSettingsURL = (UFunction*) UObject::GObjObjects()->Data[ 47619 ];

	UPgOnlineGameManager_execGetGameSettingsURL_Parms GetGameSettingsURL_Parms;
	GetGameSettingsURL_Parms.GameModeIndex = GameModeIndex;

	pFnGetGameSettingsURL->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameSettingsURL, &GetGameSettingsURL_Parms, NULL );

	pFnGetGameSettingsURL->FunctionFlags |= 0x400;

	return GetGameSettingsURL_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameManager.RestartLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::RestartLevel ( )
{
	static UFunction* pFnRestartLevel = NULL;

	if ( ! pFnRestartLevel )
		pFnRestartLevel = (UFunction*) UObject::GObjObjects()->Data[ 47618 ];

	UPgOnlineGameManager_execRestartLevel_Parms RestartLevel_Parms;

	pFnRestartLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestartLevel, &RestartLevel_Parms, NULL );

	pFnRestartLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.GameCompleted
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::GameCompleted ( )
{
	static UFunction* pFnGameCompleted = NULL;

	if ( ! pFnGameCompleted )
		pFnGameCompleted = (UFunction*) UObject::GObjObjects()->Data[ 47617 ];

	UPgOnlineGameManager_execGameCompleted_Parms GameCompleted_Parms;

	pFnGameCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGameCompleted, &GameCompleted_Parms, NULL );

	pFnGameCompleted->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.LaunchGame
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bForceHardLoad                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIgnoreChapterPoints           ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineGameManager::LaunchGame ( unsigned long bForceHardLoad, unsigned long bIgnoreChapterPoints )
{
	static UFunction* pFnLaunchGame = NULL;

	if ( ! pFnLaunchGame )
		pFnLaunchGame = (UFunction*) UObject::GObjObjects()->Data[ 47614 ];

	UPgOnlineGameManager_execLaunchGame_Parms LaunchGame_Parms;
	LaunchGame_Parms.bForceHardLoad = bForceHardLoad;
	LaunchGame_Parms.bIgnoreChapterPoints = bIgnoreChapterPoints;

	pFnLaunchGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLaunchGame, &LaunchGame_Parms, NULL );

	pFnLaunchGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameManager.InitGRI
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineGameManager::InitGRI ( )
{
	static UFunction* pFnInitGRI = NULL;

	if ( ! pFnInitGRI )
		pFnInitGRI = (UFunction*) UObject::GObjObjects()->Data[ 47613 ];

	UPgOnlineGameManager_execInitGRI_Parms InitGRI_Parms;

	pFnInitGRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGRI, &InitGRI_Parms, NULL );

	pFnInitGRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.DebugLog
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UOnlineStatsRead*        Read                           ( CPF_Parm )

void UPgOnlineLeaderboard::DebugLog ( class UOnlineStatsRead* Read )
{
	static UFunction* pFnDebugLog = NULL;

	if ( ! pFnDebugLog )
		pFnDebugLog = (UFunction*) UObject::GObjObjects()->Data[ 48052 ];

	UPgOnlineLeaderboard_execDebugLog_Parms DebugLog_Parms;
	DebugLog_Parms.Read = Read;

	pFnDebugLog->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugLog, &DebugLog_Parms, NULL );

	pFnDebugLog->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.AddDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventAddDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddDestroyOnlineGameCompleteDelegate )
		pFnAddDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48049 ];

	UPgOnlineLeaderboard_eventAddDestroyOnlineGameCompleteDelegate_Parms AddDestroyOnlineGameCompleteDelegate_Parms;
	AddDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddDestroyOnlineGameCompleteDelegate, &AddDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.ClearDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventClearDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearDestroyOnlineGameCompleteDelegate )
		pFnClearDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48046 ];

	UPgOnlineLeaderboard_eventClearDestroyOnlineGameCompleteDelegate_Parms ClearDestroyOnlineGameCompleteDelegate_Parms;
	ClearDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearDestroyOnlineGameCompleteDelegate, &ClearDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.OnDestroyOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnDestroyOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

	if ( ! pFnOnDestroyOnlineGameComplete )
		pFnOnDestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47915 ];

	UPgOnlineLeaderboard_execOnDestroyOnlineGameComplete_Parms OnDestroyOnlineGameComplete_Parms;
	memcpy ( &OnDestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnDestroyOnlineGameComplete, &OnDestroyOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.AddStartOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventAddStartOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddStartOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddStartOnlineGameCompleteDelegate )
		pFnAddStartOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48041 ];

	UPgOnlineLeaderboard_eventAddStartOnlineGameCompleteDelegate_Parms AddStartOnlineGameCompleteDelegate_Parms;
	AddStartOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddStartOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddStartOnlineGameCompleteDelegate, &AddStartOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.ClearStartOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventClearStartOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearStartOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearStartOnlineGameCompleteDelegate )
		pFnClearStartOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48038 ];

	UPgOnlineLeaderboard_eventClearStartOnlineGameCompleteDelegate_Parms ClearStartOnlineGameCompleteDelegate_Parms;
	ClearStartOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearStartOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearStartOnlineGameCompleteDelegate, &ClearStartOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.OnStartOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnStartOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnStartOnlineGameComplete = NULL;

	if ( ! pFnOnStartOnlineGameComplete )
		pFnOnStartOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47917 ];

	UPgOnlineLeaderboard_execOnStartOnlineGameComplete_Parms OnStartOnlineGameComplete_Parms;
	memcpy ( &OnStartOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnStartOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnStartOnlineGameComplete, &OnStartOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.AddCreateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventAddCreateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddCreateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddCreateOnlineGameCompleteDelegate )
		pFnAddCreateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48033 ];

	UPgOnlineLeaderboard_eventAddCreateOnlineGameCompleteDelegate_Parms AddCreateOnlineGameCompleteDelegate_Parms;
	AddCreateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddCreateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddCreateOnlineGameCompleteDelegate, &AddCreateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.ClearCreateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventClearCreateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearCreateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearCreateOnlineGameCompleteDelegate )
		pFnClearCreateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48030 ];

	UPgOnlineLeaderboard_eventClearCreateOnlineGameCompleteDelegate_Parms ClearCreateOnlineGameCompleteDelegate_Parms;
	ClearCreateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearCreateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearCreateOnlineGameCompleteDelegate, &ClearCreateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.OnCreateOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnCreateOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnCreateOnlineGameComplete = NULL;

	if ( ! pFnOnCreateOnlineGameComplete )
		pFnOnCreateOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47919 ];

	UPgOnlineLeaderboard_execOnCreateOnlineGameComplete_Parms OnCreateOnlineGameComplete_Parms;
	memcpy ( &OnCreateOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnCreateOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnCreateOnlineGameComplete, &OnCreateOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.ClearReadFriendsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventClearReadFriendsCompleteDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearReadFriendsCompleteDelegate = NULL;

	if ( ! pFnClearReadFriendsCompleteDelegate )
		pFnClearReadFriendsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48024 ];

	UPgOnlineLeaderboard_eventClearReadFriendsCompleteDelegate_Parms ClearReadFriendsCompleteDelegate_Parms;
	ClearReadFriendsCompleteDelegate_Parms.os = os;
	ClearReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &ClearReadFriendsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearReadFriendsCompleteDelegate, &ClearReadFriendsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.AddReadFriendsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventAddReadFriendsCompleteDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddReadFriendsCompleteDelegate = NULL;

	if ( ! pFnAddReadFriendsCompleteDelegate )
		pFnAddReadFriendsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48020 ];

	UPgOnlineLeaderboard_eventAddReadFriendsCompleteDelegate_Parms AddReadFriendsCompleteDelegate_Parms;
	AddReadFriendsCompleteDelegate_Parms.os = os;
	AddReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &AddReadFriendsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddReadFriendsCompleteDelegate, &AddReadFriendsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.ClearReadOnlineStatsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventClearReadOnlineStatsCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearReadOnlineStatsCompleteDelegate = NULL;

	if ( ! pFnClearReadOnlineStatsCompleteDelegate )
		pFnClearReadOnlineStatsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48017 ];

	UPgOnlineLeaderboard_eventClearReadOnlineStatsCompleteDelegate_Parms ClearReadOnlineStatsCompleteDelegate_Parms;
	ClearReadOnlineStatsCompleteDelegate_Parms.os = os;
	memcpy ( &ClearReadOnlineStatsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearReadOnlineStatsCompleteDelegate, &ClearReadOnlineStatsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.AddReadOnlineStatsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::eventAddReadOnlineStatsCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddReadOnlineStatsCompleteDelegate = NULL;

	if ( ! pFnAddReadOnlineStatsCompleteDelegate )
		pFnAddReadOnlineStatsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48014 ];

	UPgOnlineLeaderboard_eventAddReadOnlineStatsCompleteDelegate_Parms AddReadOnlineStatsCompleteDelegate_Parms;
	AddReadOnlineStatsCompleteDelegate_Parms.os = os;
	memcpy ( &AddReadOnlineStatsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddReadOnlineStatsCompleteDelegate, &AddReadOnlineStatsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboard.DoLeaderboardFriendRead
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// int                            LocalUserIndex                 ( CPF_Parm )

bool UPgOnlineLeaderboard::eventDoLeaderboardFriendRead ( class UOnlineSubsystem* os, int LocalUserIndex )
{
	static UFunction* pFnDoLeaderboardFriendRead = NULL;

	if ( ! pFnDoLeaderboardFriendRead )
		pFnDoLeaderboardFriendRead = (UFunction*) UObject::GObjObjects()->Data[ 48010 ];

	UPgOnlineLeaderboard_eventDoLeaderboardFriendRead_Parms DoLeaderboardFriendRead_Parms;
	DoLeaderboardFriendRead_Parms.os = os;
	DoLeaderboardFriendRead_Parms.LocalUserIndex = LocalUserIndex;

	this->ProcessEvent ( pFnDoLeaderboardFriendRead, &DoLeaderboardFriendRead_Parms, NULL );

	return DoLeaderboardFriendRead_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.OnReadFriendsComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UPgOnlineLeaderboard::OnReadFriendsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnReadFriendsComplete = NULL;

	if ( ! pFnOnReadFriendsComplete )
		pFnOnReadFriendsComplete = (UFunction*) UObject::GObjObjects()->Data[ 48008 ];

	UPgOnlineLeaderboard_execOnReadFriendsComplete_Parms OnReadFriendsComplete_Parms;
	OnReadFriendsComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnOnReadFriendsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnReadFriendsComplete, &OnReadFriendsComplete_Parms, NULL );

	pFnOnReadFriendsComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnUpdateLocalLbStatsComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnUpdateLocalLbStatsComplete ( unsigned long successful )
{
	static UFunction* pFnOnUpdateLocalLbStatsComplete = NULL;

	if ( ! pFnOnUpdateLocalLbStatsComplete )
		pFnOnUpdateLocalLbStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 48006 ];

	UPgOnlineLeaderboard_execOnUpdateLocalLbStatsComplete_Parms OnUpdateLocalLbStatsComplete_Parms;
	OnUpdateLocalLbStatsComplete_Parms.successful = successful;

	pFnOnUpdateLocalLbStatsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnUpdateLocalLbStatsComplete, &OnUpdateLocalLbStatsComplete_Parms, NULL );

	pFnOnUpdateLocalLbStatsComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnReadLeaderboardComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnReadLeaderboardComplete ( unsigned long successful )
{
	static UFunction* pFnOnReadLeaderboardComplete = NULL;

	if ( ! pFnOnReadLeaderboardComplete )
		pFnOnReadLeaderboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 48004 ];

	UPgOnlineLeaderboard_execOnReadLeaderboardComplete_Parms OnReadLeaderboardComplete_Parms;
	OnReadLeaderboardComplete_Parms.successful = successful;

	pFnOnReadLeaderboardComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnReadLeaderboardComplete, &OnReadLeaderboardComplete_Parms, NULL );

	pFnOnReadLeaderboardComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnReadFriendLeaderboardComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnReadFriendLeaderboardComplete ( unsigned long successful )
{
	static UFunction* pFnOnReadFriendLeaderboardComplete = NULL;

	if ( ! pFnOnReadFriendLeaderboardComplete )
		pFnOnReadFriendLeaderboardComplete = (UFunction*) UObject::GObjObjects()->Data[ 48002 ];

	UPgOnlineLeaderboard_execOnReadFriendLeaderboardComplete_Parms OnReadFriendLeaderboardComplete_Parms;
	OnReadFriendLeaderboardComplete_Parms.successful = successful;

	pFnOnReadFriendLeaderboardComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnReadFriendLeaderboardComplete, &OnReadFriendLeaderboardComplete_Parms, NULL );

	pFnOnReadFriendLeaderboardComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.UpdateLocalLbRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineLeaderboard::UpdateLocalLbRating ( int LeaderboardId )
{
	static UFunction* pFnUpdateLocalLbRating = NULL;

	if ( ! pFnUpdateLocalLbRating )
		pFnUpdateLocalLbRating = (UFunction*) UObject::GObjObjects()->Data[ 48000 ];

	UPgOnlineLeaderboard_execUpdateLocalLbRating_Parms UpdateLocalLbRating_Parms;
	UpdateLocalLbRating_Parms.LeaderboardId = LeaderboardId;

	pFnUpdateLocalLbRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLocalLbRating, &UpdateLocalLbRating_Parms, NULL );

	pFnUpdateLocalLbRating->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.GetReaderId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ReaderName                     ( CPF_Parm | CPF_NeedCtorLink )

int UPgOnlineLeaderboard::GetReaderId ( struct FString ReaderName )
{
	static UFunction* pFnGetReaderId = NULL;

	if ( ! pFnGetReaderId )
		pFnGetReaderId = (UFunction*) UObject::GObjObjects()->Data[ 47997 ];

	UPgOnlineLeaderboard_execGetReaderId_Parms GetReaderId_Parms;
	memcpy ( &GetReaderId_Parms.ReaderName, &ReaderName, 0xC );

	pFnGetReaderId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReaderId, &GetReaderId_Parms, NULL );

	pFnGetReaderId->FunctionFlags |= 0x400;

	return GetReaderId_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.GetWriterClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )

class UClass* UPgOnlineLeaderboard::GetWriterClass ( int Id )
{
	static UFunction* pFnGetWriterClass = NULL;

	if ( ! pFnGetWriterClass )
		pFnGetWriterClass = (UFunction*) UObject::GObjObjects()->Data[ 47994 ];

	UPgOnlineLeaderboard_execGetWriterClass_Parms GetWriterClass_Parms;
	GetWriterClass_Parms.Id = Id;

	pFnGetWriterClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWriterClass, &GetWriterClass_Parms, NULL );

	pFnGetWriterClass->FunctionFlags |= 0x400;

	return GetWriterClass_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.GetReaderClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )

class UClass* UPgOnlineLeaderboard::GetReaderClass ( int Id )
{
	static UFunction* pFnGetReaderClass = NULL;

	if ( ! pFnGetReaderClass )
		pFnGetReaderClass = (UFunction*) UObject::GObjObjects()->Data[ 47991 ];

	UPgOnlineLeaderboard_execGetReaderClass_Parms GetReaderClass_Parms;
	GetReaderClass_Parms.Id = Id;

	pFnGetReaderClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReaderClass, &GetReaderClass_Parms, NULL );

	pFnGetReaderClass->FunctionFlags |= 0x400;

	return GetReaderClass_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.FlushLeaderboardStats
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineLeaderboard::FlushLeaderboardStats ( int LeaderboardId )
{
	static UFunction* pFnFlushLeaderboardStats = NULL;

	if ( ! pFnFlushLeaderboardStats )
		pFnFlushLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 47989 ];

	UPgOnlineLeaderboard_execFlushLeaderboardStats_Parms FlushLeaderboardStats_Parms;
	FlushLeaderboardStats_Parms.LeaderboardId = LeaderboardId;

	pFnFlushLeaderboardStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushLeaderboardStats, &FlushLeaderboardStats_Parms, NULL );

	pFnFlushLeaderboardStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.EndLeaderBoardSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboard::EndLeaderBoardSession ( )
{
	static UFunction* pFnEndLeaderBoardSession = NULL;

	if ( ! pFnEndLeaderBoardSession )
		pFnEndLeaderBoardSession = (UFunction*) UObject::GObjObjects()->Data[ 47988 ];

	UPgOnlineLeaderboard_execEndLeaderBoardSession_Parms EndLeaderBoardSession_Parms;

	pFnEndLeaderBoardSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndLeaderBoardSession, &EndLeaderBoardSession_Parms, NULL );

	pFnEndLeaderBoardSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.StartLeaderBoardSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboard::StartLeaderBoardSession ( )
{
	static UFunction* pFnStartLeaderBoardSession = NULL;

	if ( ! pFnStartLeaderBoardSession )
		pFnStartLeaderBoardSession = (UFunction*) UObject::GObjObjects()->Data[ 47987 ];

	UPgOnlineLeaderboard_execStartLeaderBoardSession_Parms StartLeaderBoardSession_Parms;

	pFnStartLeaderBoardSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartLeaderBoardSession, &StartLeaderBoardSession_Parms, NULL );

	pFnStartLeaderBoardSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnDestroyLBGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnDestroyLBGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnDestroyLBGameComplete = NULL;

	if ( ! pFnOnDestroyLBGameComplete )
		pFnOnDestroyLBGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47984 ];

	UPgOnlineLeaderboard_execOnDestroyLBGameComplete_Parms OnDestroyLBGameComplete_Parms;
	memcpy ( &OnDestroyLBGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyLBGameComplete_Parms.successful = successful;

	pFnOnDestroyLBGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDestroyLBGameComplete, &OnDestroyLBGameComplete_Parms, NULL );

	pFnOnDestroyLBGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnStartLBGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnStartLBGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnStartLBGameComplete = NULL;

	if ( ! pFnOnStartLBGameComplete )
		pFnOnStartLBGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47981 ];

	UPgOnlineLeaderboard_execOnStartLBGameComplete_Parms OnStartLBGameComplete_Parms;
	memcpy ( &OnStartLBGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnStartLBGameComplete_Parms.successful = successful;

	pFnOnStartLBGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStartLBGameComplete, &OnStartLBGameComplete_Parms, NULL );

	pFnOnStartLBGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.OnCreateLBGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineLeaderboard::OnCreateLBGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnCreateLBGameComplete = NULL;

	if ( ! pFnOnCreateLBGameComplete )
		pFnOnCreateLBGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 47978 ];

	UPgOnlineLeaderboard_execOnCreateLBGameComplete_Parms OnCreateLBGameComplete_Parms;
	memcpy ( &OnCreateLBGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnCreateLBGameComplete_Parms.successful = successful;

	pFnOnCreateLBGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCreateLBGameComplete, &OnCreateLBGameComplete_Parms, NULL );

	pFnOnCreateLBGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.UpdateLBviaLocalData
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineLeaderboard::UpdateLBviaLocalData ( int LeaderboardId )
{
	static UFunction* pFnUpdateLBviaLocalData = NULL;

	if ( ! pFnUpdateLBviaLocalData )
		pFnUpdateLBviaLocalData = (UFunction*) UObject::GObjObjects()->Data[ 47976 ];

	UPgOnlineLeaderboard_execUpdateLBviaLocalData_Parms UpdateLBviaLocalData_Parms;
	UpdateLBviaLocalData_Parms.LeaderboardId = LeaderboardId;

	pFnUpdateLBviaLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLBviaLocalData, &UpdateLBviaLocalData_Parms, NULL );

	pFnUpdateLBviaLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.ClearLocalStats
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboard::ClearLocalStats ( )
{
	static UFunction* pFnClearLocalStats = NULL;

	if ( ! pFnClearLocalStats )
		pFnClearLocalStats = (UFunction*) UObject::GObjObjects()->Data[ 47975 ];

	UPgOnlineLeaderboard_execClearLocalStats_Parms ClearLocalStats_Parms;

	pFnClearLocalStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearLocalStats, &ClearLocalStats_Parms, NULL );

	pFnClearLocalStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.LbReadNearMe
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 LeaderboardName                ( CPF_Parm | CPF_NeedCtorLink )
// int                            Num                            ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void UPgOnlineLeaderboard::LbReadNearMe ( struct FString LeaderboardName, int Num )
{
	static UFunction* pFnLbReadNearMe = NULL;

	if ( ! pFnLbReadNearMe )
		pFnLbReadNearMe = (UFunction*) UObject::GObjObjects()->Data[ 47972 ];

	UPgOnlineLeaderboard_execLbReadNearMe_Parms LbReadNearMe_Parms;
	memcpy ( &LbReadNearMe_Parms.LeaderboardName, &LeaderboardName, 0xC );
	LbReadNearMe_Parms.Num = Num;

	pFnLbReadNearMe->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLbReadNearMe, &LbReadNearMe_Parms, NULL );

	pFnLbReadNearMe->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.LbReadRange
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 LeaderboardName                ( CPF_Parm | CPF_NeedCtorLink )
// int                            Start                          ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )
// int                            Num                            ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void UPgOnlineLeaderboard::LbReadRange ( struct FString LeaderboardName, int Start, int Num )
{
	static UFunction* pFnLbReadRange = NULL;

	if ( ! pFnLbReadRange )
		pFnLbReadRange = (UFunction*) UObject::GObjObjects()->Data[ 47968 ];

	UPgOnlineLeaderboard_execLbReadRange_Parms LbReadRange_Parms;
	memcpy ( &LbReadRange_Parms.LeaderboardName, &LeaderboardName, 0xC );
	LbReadRange_Parms.Start = Start;
	LbReadRange_Parms.Num = Num;

	pFnLbReadRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLbReadRange, &LbReadRange_Parms, NULL );

	pFnLbReadRange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.LbReadFriends
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 LeaderboardName                ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::LbReadFriends ( struct FString LeaderboardName )
{
	static UFunction* pFnLbReadFriends = NULL;

	if ( ! pFnLbReadFriends )
		pFnLbReadFriends = (UFunction*) UObject::GObjObjects()->Data[ 47966 ];

	UPgOnlineLeaderboard_execLbReadFriends_Parms LbReadFriends_Parms;
	memcpy ( &LbReadFriends_Parms.LeaderboardName, &LeaderboardName, 0xC );

	pFnLbReadFriends->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLbReadFriends, &LbReadFriends_Parms, NULL );

	pFnLbReadFriends->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.LbRead
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 LeaderboardName                ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::LbRead ( struct FString LeaderboardName )
{
	static UFunction* pFnLbRead = NULL;

	if ( ! pFnLbRead )
		pFnLbRead = (UFunction*) UObject::GObjObjects()->Data[ 47964 ];

	UPgOnlineLeaderboard_execLbRead_Parms LbRead_Parms;
	memcpy ( &LbRead_Parms.LeaderboardName, &LeaderboardName, 0xC );

	pFnLbRead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLbRead, &LbRead_Parms, NULL );

	pFnLbRead->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.UpdateXPLeaderboard
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

bool UPgOnlineLeaderboard::UpdateXPLeaderboard ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateXPLeaderboard = NULL;

	if ( ! pFnUpdateXPLeaderboard )
		pFnUpdateXPLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 47961 ];

	UPgOnlineLeaderboard_execUpdateXPLeaderboard_Parms UpdateXPLeaderboard_Parms;
	UpdateXPLeaderboard_Parms.PRI = PRI;

	pFnUpdateXPLeaderboard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateXPLeaderboard, &UpdateXPLeaderboard_Parms, NULL );

	pFnUpdateXPLeaderboard->FunctionFlags |= 0x400;

	return UpdateXPLeaderboard_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.UpdateLocalPlayerStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FLeaderboardStatData    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LeaderboardId                  ( CPF_Parm )
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

struct FLeaderboardStatData UPgOnlineLeaderboard::UpdateLocalPlayerStats ( int LeaderboardId, class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateLocalPlayerStats = NULL;

	if ( ! pFnUpdateLocalPlayerStats )
		pFnUpdateLocalPlayerStats = (UFunction*) UObject::GObjObjects()->Data[ 47957 ];

	UPgOnlineLeaderboard_execUpdateLocalPlayerStats_Parms UpdateLocalPlayerStats_Parms;
	UpdateLocalPlayerStats_Parms.LeaderboardId = LeaderboardId;
	UpdateLocalPlayerStats_Parms.PRI = PRI;

	pFnUpdateLocalPlayerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLocalPlayerStats, &UpdateLocalPlayerStats_Parms, NULL );

	pFnUpdateLocalPlayerStats->FunctionFlags |= 0x400;

	return UpdateLocalPlayerStats_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.UpdateLocalLeaderboardStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineLeaderboard::UpdateLocalLeaderboardStats ( int LeaderboardId )
{
	static UFunction* pFnUpdateLocalLeaderboardStats = NULL;

	if ( ! pFnUpdateLocalLeaderboardStats )
		pFnUpdateLocalLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 47955 ];

	UPgOnlineLeaderboard_execUpdateLocalLeaderboardStats_Parms UpdateLocalLeaderboardStats_Parms;
	UpdateLocalLeaderboardStats_Parms.LeaderboardId = LeaderboardId;

	pFnUpdateLocalLeaderboardStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLocalLeaderboardStats, &UpdateLocalLeaderboardStats_Parms, NULL );

	pFnUpdateLocalLeaderboardStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.FixupLeaderboardStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboard::FixupLeaderboardStats ( )
{
	static UFunction* pFnFixupLeaderboardStats = NULL;

	if ( ! pFnFixupLeaderboardStats )
		pFnFixupLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 47954 ];

	UPgOnlineLeaderboard_execFixupLeaderboardStats_Parms FixupLeaderboardStats_Parms;

	pFnFixupLeaderboardStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFixupLeaderboardStats, &FixupLeaderboardStats_Parms, NULL );

	pFnFixupLeaderboardStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.UpdateAllLocalLeaderboardStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboard::UpdateAllLocalLeaderboardStats ( )
{
	static UFunction* pFnUpdateAllLocalLeaderboardStats = NULL;

	if ( ! pFnUpdateAllLocalLeaderboardStats )
		pFnUpdateAllLocalLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 47953 ];

	UPgOnlineLeaderboard_execUpdateAllLocalLeaderboardStats_Parms UpdateAllLocalLeaderboardStats_Parms;

	pFnUpdateAllLocalLeaderboardStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateAllLocalLeaderboardStats, &UpdateAllLocalLeaderboardStats_Parms, NULL );

	pFnUpdateAllLocalLeaderboardStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.FinishRead
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineLeaderboard::FinishRead ( int LeaderboardId )
{
	static UFunction* pFnFinishRead = NULL;

	if ( ! pFnFinishRead )
		pFnFinishRead = (UFunction*) UObject::GObjObjects()->Data[ 47951 ];

	UPgOnlineLeaderboard_execFinishRead_Parms FinishRead_Parms;
	FinishRead_Parms.LeaderboardId = LeaderboardId;

	pFnFinishRead->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFinishRead, &FinishRead_Parms, NULL );

	pFnFinishRead->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.GetLeaderBoardReadData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UOnlineStatsRead*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LeaderboardId                  ( CPF_Parm )

class UOnlineStatsRead* UPgOnlineLeaderboard::GetLeaderBoardReadData ( int LeaderboardId )
{
	static UFunction* pFnGetLeaderBoardReadData = NULL;

	if ( ! pFnGetLeaderBoardReadData )
		pFnGetLeaderBoardReadData = (UFunction*) UObject::GObjObjects()->Data[ 47948 ];

	UPgOnlineLeaderboard_execGetLeaderBoardReadData_Parms GetLeaderBoardReadData_Parms;
	GetLeaderBoardReadData_Parms.LeaderboardId = LeaderboardId;

	pFnGetLeaderBoardReadData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLeaderBoardReadData, &GetLeaderBoardReadData_Parms, NULL );

	pFnGetLeaderBoardReadData->FunctionFlags |= 0x400;

	return GetLeaderBoardReadData_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLeaderboard.ReadNearPlayer
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )
// int                            Num                            ( CPF_Parm )
// int                            LocalUserIndex                 ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void UPgOnlineLeaderboard::ReadNearPlayer ( int LeaderboardId, int Num, int LocalUserIndex )
{
	static UFunction* pFnReadNearPlayer = NULL;

	if ( ! pFnReadNearPlayer )
		pFnReadNearPlayer = (UFunction*) UObject::GObjObjects()->Data[ 47944 ];

	UPgOnlineLeaderboard_execReadNearPlayer_Parms ReadNearPlayer_Parms;
	ReadNearPlayer_Parms.LeaderboardId = LeaderboardId;
	ReadNearPlayer_Parms.Num = Num;
	ReadNearPlayer_Parms.LocalUserIndex = LocalUserIndex;

	pFnReadNearPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadNearPlayer, &ReadNearPlayer_Parms, NULL );

	pFnReadNearPlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.ReadRange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )
// int                            Start                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

void UPgOnlineLeaderboard::ReadRange ( int LeaderboardId, int Start, int Num )
{
	static UFunction* pFnReadRange = NULL;

	if ( ! pFnReadRange )
		pFnReadRange = (UFunction*) UObject::GObjObjects()->Data[ 47940 ];

	UPgOnlineLeaderboard_execReadRange_Parms ReadRange_Parms;
	ReadRange_Parms.LeaderboardId = LeaderboardId;
	ReadRange_Parms.Start = Start;
	ReadRange_Parms.Num = Num;

	pFnReadRange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadRange, &ReadRange_Parms, NULL );

	pFnReadRange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.ReadFriends
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )
// int                            LocalUserIndex                 ( CPF_OptionalParm | CPF_Parm | CPF_CoerceParm )

void UPgOnlineLeaderboard::ReadFriends ( int LeaderboardId, int LocalUserIndex )
{
	static UFunction* pFnReadFriends = NULL;

	if ( ! pFnReadFriends )
		pFnReadFriends = (UFunction*) UObject::GObjObjects()->Data[ 47937 ];

	UPgOnlineLeaderboard_execReadFriends_Parms ReadFriends_Parms;
	ReadFriends_Parms.LeaderboardId = LeaderboardId;
	ReadFriends_Parms.LocalUserIndex = LocalUserIndex;

	pFnReadFriends->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadFriends, &ReadFriends_Parms, NULL );

	pFnReadFriends->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboard.ReadPlayersEx
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )
// TArray< struct FUniqueNetId >  playerIds                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgOnlineLeaderboard::ReadPlayersEx ( int LeaderboardId, TArray< struct FUniqueNetId >* playerIds )
{
	static UFunction* pFnReadPlayersEx = NULL;

	if ( ! pFnReadPlayersEx )
		pFnReadPlayersEx = (UFunction*) UObject::GObjObjects()->Data[ 47933 ];

	UPgOnlineLeaderboard_execReadPlayersEx_Parms ReadPlayersEx_Parms;
	ReadPlayersEx_Parms.LeaderboardId = LeaderboardId;

	pFnReadPlayersEx->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadPlayersEx, &ReadPlayersEx_Parms, NULL );

	pFnReadPlayersEx->FunctionFlags |= 0x400;

	if ( playerIds )
		memcpy ( playerIds, &ReadPlayersEx_Parms.playerIds, 0xC );
};

// Function GridGame.PgOnlineLeaderboard.ReadPlayers
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )
// unsigned long                  onlyLocalPlayer                ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineLeaderboard::ReadPlayers ( int LeaderboardId, unsigned long onlyLocalPlayer )
{
	static UFunction* pFnReadPlayers = NULL;

	if ( ! pFnReadPlayers )
		pFnReadPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47930 ];

	UPgOnlineLeaderboard_execReadPlayers_Parms ReadPlayers_Parms;
	ReadPlayers_Parms.LeaderboardId = LeaderboardId;
	ReadPlayers_Parms.onlyLocalPlayer = onlyLocalPlayer;

	pFnReadPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadPlayers, &ReadPlayers_Parms, NULL );

	pFnReadPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlinePlayerList.DisplayDebug
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          FontHeight                     ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void UPgOnlinePlayerList::DisplayDebug ( class AHUD* HUD, float* FontHeight, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 48607 ];

	UPgOnlinePlayerList_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( FontHeight )
		*FontHeight = DisplayDebug_Parms.FontHeight;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function GridGame.PgOnlinePlayerList.DebugListPlayers
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlinePlayerList::DebugListPlayers ( )
{
	static UFunction* pFnDebugListPlayers = NULL;

	if ( ! pFnDebugListPlayers )
		pFnDebugListPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48606 ];

	UPgOnlinePlayerList_execDebugListPlayers_Parms DebugListPlayers_Parms;

	pFnDebugListPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugListPlayers, &DebugListPlayers_Parms, NULL );

	pFnDebugListPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlinePlayerList.NotifyPlayerUpdated
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void UPgOnlinePlayerList::NotifyPlayerUpdated ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnNotifyPlayerUpdated = NULL;

	if ( ! pFnNotifyPlayerUpdated )
		pFnNotifyPlayerUpdated = (UFunction*) UObject::GObjObjects()->Data[ 48604 ];

	UPgOnlinePlayerList_execNotifyPlayerUpdated_Parms NotifyPlayerUpdated_Parms;
	NotifyPlayerUpdated_Parms.PRI = PRI;

	pFnNotifyPlayerUpdated->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyPlayerUpdated, &NotifyPlayerUpdated_Parms, NULL );

	pFnNotifyPlayerUpdated->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlinePlayerList.SetOnPlayerUpdatedDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FScriptDelegate         UpdatedDelegate                ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlinePlayerList::SetOnPlayerUpdatedDelegate ( struct FScriptDelegate UpdatedDelegate )
{
	static UFunction* pFnSetOnPlayerUpdatedDelegate = NULL;

	if ( ! pFnSetOnPlayerUpdatedDelegate )
		pFnSetOnPlayerUpdatedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48602 ];

	UPgOnlinePlayerList_execSetOnPlayerUpdatedDelegate_Parms SetOnPlayerUpdatedDelegate_Parms;
	memcpy ( &SetOnPlayerUpdatedDelegate_Parms.UpdatedDelegate, &UpdatedDelegate, 0xC );

	pFnSetOnPlayerUpdatedDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOnPlayerUpdatedDelegate, &SetOnPlayerUpdatedDelegate_Parms, NULL );

	pFnSetOnPlayerUpdatedDelegate->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlinePlayerList.OnPlayerUpdated
// [0x00120000] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void UPgOnlinePlayerList::OnPlayerUpdated ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnOnPlayerUpdated = NULL;

	if ( ! pFnOnPlayerUpdated )
		pFnOnPlayerUpdated = (UFunction*) UObject::GObjObjects()->Data[ 48599 ];

	UPgOnlinePlayerList_execOnPlayerUpdated_Parms OnPlayerUpdated_Parms;
	OnPlayerUpdated_Parms.PRI = PRI;

	this->ProcessEvent ( pFnOnPlayerUpdated, &OnPlayerUpdated_Parms, NULL );
};

// Function GridGame.PgOnlinePlayerList.IsEveryoneReady
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlinePlayerList::IsEveryoneReady ( )
{
	static UFunction* pFnIsEveryoneReady = NULL;

	if ( ! pFnIsEveryoneReady )
		pFnIsEveryoneReady = (UFunction*) UObject::GObjObjects()->Data[ 48597 ];

	UPgOnlinePlayerList_execIsEveryoneReady_Parms IsEveryoneReady_Parms;

	pFnIsEveryoneReady->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEveryoneReady, &IsEveryoneReady_Parms, NULL );

	pFnIsEveryoneReady->FunctionFlags |= 0x400;

	return IsEveryoneReady_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetAvgPlayerSkill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlinePlayerList::GetAvgPlayerSkill ( )
{
	static UFunction* pFnGetAvgPlayerSkill = NULL;

	if ( ! pFnGetAvgPlayerSkill )
		pFnGetAvgPlayerSkill = (UFunction*) UObject::GObjObjects()->Data[ 48595 ];

	UPgOnlinePlayerList_execGetAvgPlayerSkill_Parms GetAvgPlayerSkill_Parms;

	pFnGetAvgPlayerSkill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvgPlayerSkill, &GetAvgPlayerSkill_Parms, NULL );

	pFnGetAvgPlayerSkill->FunctionFlags |= 0x400;

	return GetAvgPlayerSkill_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.SetClientsToState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eState                         ( CPF_Parm )

void UPgOnlinePlayerList::SetClientsToState ( unsigned char eState )
{
	static UFunction* pFnSetClientsToState = NULL;

	if ( ! pFnSetClientsToState )
		pFnSetClientsToState = (UFunction*) UObject::GObjObjects()->Data[ 48593 ];

	UPgOnlinePlayerList_execSetClientsToState_Parms SetClientsToState_Parms;
	SetClientsToState_Parms.eState = eState;

	pFnSetClientsToState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetClientsToState, &SetClientsToState_Parms, NULL );

	pFnSetClientsToState->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlinePlayerList.KickPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            UniqueId                       ( CPF_Parm )

bool UPgOnlinePlayerList::KickPlayer ( struct FUniqueNetId UniqueId )
{
	static UFunction* pFnKickPlayer = NULL;

	if ( ! pFnKickPlayer )
		pFnKickPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48590 ];

	UPgOnlinePlayerList_execKickPlayer_Parms KickPlayer_Parms;
	memcpy ( &KickPlayer_Parms.UniqueId, &UniqueId, 0x2C );

	pFnKickPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKickPlayer, &KickPlayer_Parms, NULL );

	pFnKickPlayer->FunctionFlags |= 0x400;

	return KickPlayer_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.IsLocalPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

bool UPgOnlinePlayerList::IsLocalPlayer ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnIsLocalPlayer = NULL;

	if ( ! pFnIsLocalPlayer )
		pFnIsLocalPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48587 ];

	UPgOnlinePlayerList_execIsLocalPlayer_Parms IsLocalPlayer_Parms;
	IsLocalPlayer_Parms.PRI = PRI;

	pFnIsLocalPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLocalPlayer, &IsLocalPlayer_Parms, NULL );

	pFnIsLocalPlayer->FunctionFlags |= 0x400;

	return IsLocalPlayer_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.HasPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

bool UPgOnlinePlayerList::HasPlayer ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnHasPlayer = NULL;

	if ( ! pFnHasPlayer )
		pFnHasPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48584 ];

	UPgOnlinePlayerList_execHasPlayer_Parms HasPlayer_Parms;
	HasPlayer_Parms.PRI = PRI;

	pFnHasPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasPlayer, &HasPlayer_Parms, NULL );

	pFnHasPlayer->FunctionFlags |= 0x400;

	return HasPlayer_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetHost
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetHost ( )
{
	static UFunction* pFnGetHost = NULL;

	if ( ! pFnGetHost )
		pFnGetHost = (UFunction*) UObject::GObjObjects()->Data[ 48582 ];

	UPgOnlinePlayerList_execGetHost_Parms GetHost_Parms;

	pFnGetHost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHost, &GetHost_Parms, NULL );

	pFnGetHost->FunctionFlags |= 0x400;

	return GetHost_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetLocalPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetLocalPlayer ( )
{
	static UFunction* pFnGetLocalPlayer = NULL;

	if ( ! pFnGetLocalPlayer )
		pFnGetLocalPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48580 ];

	UPgOnlinePlayerList_execGetLocalPlayer_Parms GetLocalPlayer_Parms;

	pFnGetLocalPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalPlayer, &GetLocalPlayer_Parms, NULL );

	pFnGetLocalPlayer->FunctionFlags |= 0x400;

	return GetLocalPlayer_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetExPlayerByID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerID                       ( CPF_Parm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetExPlayerByID ( int PlayerID )
{
	static UFunction* pFnGetExPlayerByID = NULL;

	if ( ! pFnGetExPlayerByID )
		pFnGetExPlayerByID = (UFunction*) UObject::GObjObjects()->Data[ 48577 ];

	UPgOnlinePlayerList_execGetExPlayerByID_Parms GetExPlayerByID_Parms;
	GetExPlayerByID_Parms.PlayerID = PlayerID;

	pFnGetExPlayerByID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetExPlayerByID, &GetExPlayerByID_Parms, NULL );

	pFnGetExPlayerByID->FunctionFlags |= 0x400;

	return GetExPlayerByID_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetPlayerByID
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerID                       ( CPF_Parm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetPlayerByID ( int PlayerID )
{
	static UFunction* pFnGetPlayerByID = NULL;

	if ( ! pFnGetPlayerByID )
		pFnGetPlayerByID = (UFunction*) UObject::GObjObjects()->Data[ 48574 ];

	UPgOnlinePlayerList_execGetPlayerByID_Parms GetPlayerByID_Parms;
	GetPlayerByID_Parms.PlayerID = PlayerID;

	pFnGetPlayerByID->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerByID, &GetPlayerByID_Parms, NULL );

	pFnGetPlayerByID->FunctionFlags |= 0x400;

	return GetPlayerByID_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            UniqueId                       ( CPF_Parm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetPlayer ( struct FUniqueNetId UniqueId )
{
	static UFunction* pFnGetPlayer = NULL;

	if ( ! pFnGetPlayer )
		pFnGetPlayer = (UFunction*) UObject::GObjObjects()->Data[ 48571 ];

	UPgOnlinePlayerList_execGetPlayer_Parms GetPlayer_Parms;
	memcpy ( &GetPlayer_Parms.UniqueId, &UniqueId, 0x2C );

	pFnGetPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayer, &GetPlayer_Parms, NULL );

	pFnGetPlayer->FunctionFlags |= 0x400;

	return GetPlayer_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetAIPlayers
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class APgPlayerReplicationInfo* > Bots                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgOnlinePlayerList::GetAIPlayers ( TArray< class APgPlayerReplicationInfo* >* Bots )
{
	static UFunction* pFnGetAIPlayers = NULL;

	if ( ! pFnGetAIPlayers )
		pFnGetAIPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48568 ];

	UPgOnlinePlayerList_execGetAIPlayers_Parms GetAIPlayers_Parms;

	pFnGetAIPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAIPlayers, &GetAIPlayers_Parms, NULL );

	pFnGetAIPlayers->FunctionFlags |= 0x400;

	if ( Bots )
		memcpy ( Bots, &GetAIPlayers_Parms.Bots, 0xC );
};

// Function GridGame.PgOnlinePlayerList.GetHumanPlayers
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class APgPlayerReplicationInfo* > Humans                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgOnlinePlayerList::GetHumanPlayers ( TArray< class APgPlayerReplicationInfo* >* Humans )
{
	static UFunction* pFnGetHumanPlayers = NULL;

	if ( ! pFnGetHumanPlayers )
		pFnGetHumanPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48565 ];

	UPgOnlinePlayerList_execGetHumanPlayers_Parms GetHumanPlayers_Parms;

	pFnGetHumanPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHumanPlayers, &GetHumanPlayers_Parms, NULL );

	pFnGetHumanPlayers->FunctionFlags |= 0x400;

	if ( Humans )
		memcpy ( Humans, &GetHumanPlayers_Parms.Humans, 0xC );
};

// Function GridGame.PgOnlinePlayerList.GetPlayerAt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class APgPlayerReplicationInfo* UPgOnlinePlayerList::GetPlayerAt ( int Index )
{
	static UFunction* pFnGetPlayerAt = NULL;

	if ( ! pFnGetPlayerAt )
		pFnGetPlayerAt = (UFunction*) UObject::GObjObjects()->Data[ 48562 ];

	UPgOnlinePlayerList_execGetPlayerAt_Parms GetPlayerAt_Parms;
	GetPlayerAt_Parms.Index = Index;

	pFnGetPlayerAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerAt, &GetPlayerAt_Parms, NULL );

	pFnGetPlayerAt->FunctionFlags |= 0x400;

	return GetPlayerAt_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetNumAIPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlinePlayerList::GetNumAIPlayers ( )
{
	static UFunction* pFnGetNumAIPlayers = NULL;

	if ( ! pFnGetNumAIPlayers )
		pFnGetNumAIPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48560 ];

	UPgOnlinePlayerList_execGetNumAIPlayers_Parms GetNumAIPlayers_Parms;

	pFnGetNumAIPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumAIPlayers, &GetNumAIPlayers_Parms, NULL );

	pFnGetNumAIPlayers->FunctionFlags |= 0x400;

	return GetNumAIPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetNumHumanPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlinePlayerList::GetNumHumanPlayers ( )
{
	static UFunction* pFnGetNumHumanPlayers = NULL;

	if ( ! pFnGetNumHumanPlayers )
		pFnGetNumHumanPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48558 ];

	UPgOnlinePlayerList_execGetNumHumanPlayers_Parms GetNumHumanPlayers_Parms;

	pFnGetNumHumanPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumHumanPlayers, &GetNumHumanPlayers_Parms, NULL );

	pFnGetNumHumanPlayers->FunctionFlags |= 0x400;

	return GetNumHumanPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlinePlayerList.GetNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlinePlayerList::GetNumPlayers ( )
{
	static UFunction* pFnGetNumPlayers = NULL;

	if ( ! pFnGetNumPlayers )
		pFnGetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48556 ];

	UPgOnlinePlayerList_execGetNumPlayers_Parms GetNumPlayers_Parms;

	pFnGetNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumPlayers, &GetNumPlayers_Parms, NULL );

	pFnGetNumPlayers->FunctionFlags |= 0x400;

	return GetNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.AddEndOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddEndOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddEndOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddEndOnlineGameCompleteDelegate )
		pFnAddEndOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48943 ];

	UPgOnlineSessionManager_eventAddEndOnlineGameCompleteDelegate_Parms AddEndOnlineGameCompleteDelegate_Parms;
	AddEndOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddEndOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddEndOnlineGameCompleteDelegate, &AddEndOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearEndOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearEndOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearEndOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearEndOnlineGameCompleteDelegate )
		pFnClearEndOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48940 ];

	UPgOnlineSessionManager_eventClearEndOnlineGameCompleteDelegate_Parms ClearEndOnlineGameCompleteDelegate_Parms;
	ClearEndOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearEndOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearEndOnlineGameCompleteDelegate, &ClearEndOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnEndOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnEndOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnEndOnlineGameComplete = NULL;

	if ( ! pFnOnEndOnlineGameComplete )
		pFnOnEndOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48664 ];

	UPgOnlineSessionManager_execOnEndOnlineGameComplete_Parms OnEndOnlineGameComplete_Parms;
	memcpy ( &OnEndOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnEndOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnEndOnlineGameComplete, &OnEndOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddStartOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddStartOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddStartOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddStartOnlineGameCompleteDelegate )
		pFnAddStartOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48935 ];

	UPgOnlineSessionManager_eventAddStartOnlineGameCompleteDelegate_Parms AddStartOnlineGameCompleteDelegate_Parms;
	AddStartOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddStartOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddStartOnlineGameCompleteDelegate, &AddStartOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearStartOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearStartOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearStartOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearStartOnlineGameCompleteDelegate )
		pFnClearStartOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48932 ];

	UPgOnlineSessionManager_eventClearStartOnlineGameCompleteDelegate_Parms ClearStartOnlineGameCompleteDelegate_Parms;
	ClearStartOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearStartOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearStartOnlineGameCompleteDelegate, &ClearStartOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnStartOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnStartOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnStartOnlineGameComplete = NULL;

	if ( ! pFnOnStartOnlineGameComplete )
		pFnOnStartOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48666 ];

	UPgOnlineSessionManager_execOnStartOnlineGameComplete_Parms OnStartOnlineGameComplete_Parms;
	memcpy ( &OnStartOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnStartOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnStartOnlineGameComplete, &OnStartOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddGameInviteAcceptedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddGameInviteAcceptedDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddGameInviteAcceptedDelegate = NULL;

	if ( ! pFnAddGameInviteAcceptedDelegate )
		pFnAddGameInviteAcceptedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48926 ];

	UPgOnlineSessionManager_eventAddGameInviteAcceptedDelegate_Parms AddGameInviteAcceptedDelegate_Parms;
	AddGameInviteAcceptedDelegate_Parms.os = os;
	AddGameInviteAcceptedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &AddGameInviteAcceptedDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddGameInviteAcceptedDelegate, &AddGameInviteAcceptedDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearGameInviteAcceptedDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearGameInviteAcceptedDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearGameInviteAcceptedDelegate = NULL;

	if ( ! pFnClearGameInviteAcceptedDelegate )
		pFnClearGameInviteAcceptedDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48922 ];

	UPgOnlineSessionManager_eventClearGameInviteAcceptedDelegate_Parms ClearGameInviteAcceptedDelegate_Parms;
	ClearGameInviteAcceptedDelegate_Parms.os = os;
	ClearGameInviteAcceptedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &ClearGameInviteAcceptedDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearGameInviteAcceptedDelegate, &ClearGameInviteAcceptedDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnGameInviteAccepted
// [0x00120000] 
// Parameters infos:
// class UOnlineGameSettings*     Settings                       ( CPF_Parm )

void UPgOnlineSessionManager::OnGameInviteAccepted ( class UOnlineGameSettings* Settings )
{
	static UFunction* pFnOnGameInviteAccepted = NULL;

	if ( ! pFnOnGameInviteAccepted )
		pFnOnGameInviteAccepted = (UFunction*) UObject::GObjObjects()->Data[ 48668 ];

	UPgOnlineSessionManager_execOnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;
	OnGameInviteAccepted_Parms.Settings = Settings;

	this->ProcessEvent ( pFnOnGameInviteAccepted, &OnGameInviteAccepted_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddJoinOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddJoinOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddJoinOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddJoinOnlineGameCompleteDelegate )
		pFnAddJoinOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48918 ];

	UPgOnlineSessionManager_eventAddJoinOnlineGameCompleteDelegate_Parms AddJoinOnlineGameCompleteDelegate_Parms;
	AddJoinOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddJoinOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddJoinOnlineGameCompleteDelegate, &AddJoinOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearJoinOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearJoinOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearJoinOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearJoinOnlineGameCompleteDelegate )
		pFnClearJoinOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48915 ];

	UPgOnlineSessionManager_eventClearJoinOnlineGameCompleteDelegate_Parms ClearJoinOnlineGameCompleteDelegate_Parms;
	ClearJoinOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearJoinOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearJoinOnlineGameCompleteDelegate, &ClearJoinOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnJoinOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnJoinOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnJoinOnlineGameComplete = NULL;

	if ( ! pFnOnJoinOnlineGameComplete )
		pFnOnJoinOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48670 ];

	UPgOnlineSessionManager_execOnJoinOnlineGameComplete_Parms OnJoinOnlineGameComplete_Parms;
	memcpy ( &OnJoinOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnJoinOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnJoinOnlineGameComplete, &OnJoinOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddCancelFindOnlineGamesCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddCancelFindOnlineGamesCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddCancelFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnAddCancelFindOnlineGamesCompleteDelegate )
		pFnAddCancelFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48910 ];

	UPgOnlineSessionManager_eventAddCancelFindOnlineGamesCompleteDelegate_Parms AddCancelFindOnlineGamesCompleteDelegate_Parms;
	AddCancelFindOnlineGamesCompleteDelegate_Parms.os = os;
	memcpy ( &AddCancelFindOnlineGamesCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddCancelFindOnlineGamesCompleteDelegate, &AddCancelFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearCancelFindOnlineGamesCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearCancelFindOnlineGamesCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearCancelFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnClearCancelFindOnlineGamesCompleteDelegate )
		pFnClearCancelFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48907 ];

	UPgOnlineSessionManager_eventClearCancelFindOnlineGamesCompleteDelegate_Parms ClearCancelFindOnlineGamesCompleteDelegate_Parms;
	ClearCancelFindOnlineGamesCompleteDelegate_Parms.os = os;
	memcpy ( &ClearCancelFindOnlineGamesCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearCancelFindOnlineGamesCompleteDelegate, &ClearCancelFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnCancelFindOnlineGamesComplete
// [0x00120000] 
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnCancelFindOnlineGamesComplete ( unsigned long successful )
{
	static UFunction* pFnOnCancelFindOnlineGamesComplete = NULL;

	if ( ! pFnOnCancelFindOnlineGamesComplete )
		pFnOnCancelFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 48672 ];

	UPgOnlineSessionManager_execOnCancelFindOnlineGamesComplete_Parms OnCancelFindOnlineGamesComplete_Parms;
	OnCancelFindOnlineGamesComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnCancelFindOnlineGamesComplete, &OnCancelFindOnlineGamesComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddFindOnlineGamesCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddFindOnlineGamesCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnAddFindOnlineGamesCompleteDelegate )
		pFnAddFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48903 ];

	UPgOnlineSessionManager_eventAddFindOnlineGamesCompleteDelegate_Parms AddFindOnlineGamesCompleteDelegate_Parms;
	AddFindOnlineGamesCompleteDelegate_Parms.os = os;
	memcpy ( &AddFindOnlineGamesCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddFindOnlineGamesCompleteDelegate, &AddFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearFindOnlineGamesCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearFindOnlineGamesCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnClearFindOnlineGamesCompleteDelegate )
		pFnClearFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48900 ];

	UPgOnlineSessionManager_eventClearFindOnlineGamesCompleteDelegate_Parms ClearFindOnlineGamesCompleteDelegate_Parms;
	ClearFindOnlineGamesCompleteDelegate_Parms.os = os;
	memcpy ( &ClearFindOnlineGamesCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearFindOnlineGamesCompleteDelegate, &ClearFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnFindOnlineGamesComplete
// [0x00120000] 
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnFindOnlineGamesComplete ( unsigned long successful )
{
	static UFunction* pFnOnFindOnlineGamesComplete = NULL;

	if ( ! pFnOnFindOnlineGamesComplete )
		pFnOnFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 48674 ];

	UPgOnlineSessionManager_execOnFindOnlineGamesComplete_Parms OnFindOnlineGamesComplete_Parms;
	OnFindOnlineGamesComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnFindOnlineGamesComplete, &OnFindOnlineGamesComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddDestroyOnlineGameCompleteDelegate )
		pFnAddDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48896 ];

	UPgOnlineSessionManager_eventAddDestroyOnlineGameCompleteDelegate_Parms AddDestroyOnlineGameCompleteDelegate_Parms;
	AddDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddDestroyOnlineGameCompleteDelegate, &AddDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearDestroyOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearDestroyOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearDestroyOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearDestroyOnlineGameCompleteDelegate )
		pFnClearDestroyOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48893 ];

	UPgOnlineSessionManager_eventClearDestroyOnlineGameCompleteDelegate_Parms ClearDestroyOnlineGameCompleteDelegate_Parms;
	ClearDestroyOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearDestroyOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearDestroyOnlineGameCompleteDelegate, &ClearDestroyOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnDestroyOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnDestroyOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

	if ( ! pFnOnDestroyOnlineGameComplete )
		pFnOnDestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48676 ];

	UPgOnlineSessionManager_execOnDestroyOnlineGameComplete_Parms OnDestroyOnlineGameComplete_Parms;
	memcpy ( &OnDestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnDestroyOnlineGameComplete, &OnDestroyOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddUpdateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddUpdateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddUpdateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddUpdateOnlineGameCompleteDelegate )
		pFnAddUpdateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48888 ];

	UPgOnlineSessionManager_eventAddUpdateOnlineGameCompleteDelegate_Parms AddUpdateOnlineGameCompleteDelegate_Parms;
	AddUpdateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddUpdateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddUpdateOnlineGameCompleteDelegate, &AddUpdateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearUpdateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearUpdateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearUpdateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearUpdateOnlineGameCompleteDelegate )
		pFnClearUpdateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48885 ];

	UPgOnlineSessionManager_eventClearUpdateOnlineGameCompleteDelegate_Parms ClearUpdateOnlineGameCompleteDelegate_Parms;
	ClearUpdateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearUpdateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearUpdateOnlineGameCompleteDelegate, &ClearUpdateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnUpdateOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnUpdateOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnUpdateOnlineGameComplete = NULL;

	if ( ! pFnOnUpdateOnlineGameComplete )
		pFnOnUpdateOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48678 ];

	UPgOnlineSessionManager_execOnUpdateOnlineGameComplete_Parms OnUpdateOnlineGameComplete_Parms;
	memcpy ( &OnUpdateOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnUpdateOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnUpdateOnlineGameComplete, &OnUpdateOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddCreateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddCreateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddCreateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnAddCreateOnlineGameCompleteDelegate )
		pFnAddCreateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48880 ];

	UPgOnlineSessionManager_eventAddCreateOnlineGameCompleteDelegate_Parms AddCreateOnlineGameCompleteDelegate_Parms;
	AddCreateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &AddCreateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddCreateOnlineGameCompleteDelegate, &AddCreateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearCreateOnlineGameCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearCreateOnlineGameCompleteDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearCreateOnlineGameCompleteDelegate = NULL;

	if ( ! pFnClearCreateOnlineGameCompleteDelegate )
		pFnClearCreateOnlineGameCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48877 ];

	UPgOnlineSessionManager_eventClearCreateOnlineGameCompleteDelegate_Parms ClearCreateOnlineGameCompleteDelegate_Parms;
	ClearCreateOnlineGameCompleteDelegate_Parms.os = os;
	memcpy ( &ClearCreateOnlineGameCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearCreateOnlineGameCompleteDelegate, &ClearCreateOnlineGameCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnCreateOnlineGameComplete
// [0x00120000] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnCreateOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnCreateOnlineGameComplete = NULL;

	if ( ! pFnOnCreateOnlineGameComplete )
		pFnOnCreateOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48680 ];

	UPgOnlineSessionManager_execOnCreateOnlineGameComplete_Parms OnCreateOnlineGameComplete_Parms;
	memcpy ( &OnCreateOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnCreateOnlineGameComplete_Parms.successful = successful;

	this->ProcessEvent ( pFnOnCreateOnlineGameComplete, &OnCreateOnlineGameComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.ClearReadFriendsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearReadFriendsCompleteDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearReadFriendsCompleteDelegate = NULL;

	if ( ! pFnClearReadFriendsCompleteDelegate )
		pFnClearReadFriendsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48871 ];

	UPgOnlineSessionManager_eventClearReadFriendsCompleteDelegate_Parms ClearReadFriendsCompleteDelegate_Parms;
	ClearReadFriendsCompleteDelegate_Parms.os = os;
	ClearReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &ClearReadFriendsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearReadFriendsCompleteDelegate, &ClearReadFriendsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddReadFriendsCompleteDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddReadFriendsCompleteDelegate ( class UOnlineSubsystem* os, unsigned char LocalUserNum, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddReadFriendsCompleteDelegate = NULL;

	if ( ! pFnAddReadFriendsCompleteDelegate )
		pFnAddReadFriendsCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48867 ];

	UPgOnlineSessionManager_eventAddReadFriendsCompleteDelegate_Parms AddReadFriendsCompleteDelegate_Parms;
	AddReadFriendsCompleteDelegate_Parms.os = os;
	AddReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &AddReadFriendsCompleteDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddReadFriendsCompleteDelegate, &AddReadFriendsCompleteDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.DoFriendRead
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// int                            LocalUserIndex                 ( CPF_Parm )

bool UPgOnlineSessionManager::eventDoFriendRead ( class UOnlineSubsystem* os, int LocalUserIndex )
{
	static UFunction* pFnDoFriendRead = NULL;

	if ( ! pFnDoFriendRead )
		pFnDoFriendRead = (UFunction*) UObject::GObjObjects()->Data[ 48863 ];

	UPgOnlineSessionManager_eventDoFriendRead_Parms DoFriendRead_Parms;
	DoFriendRead_Parms.os = os;
	DoFriendRead_Parms.LocalUserIndex = LocalUserIndex;

	this->ProcessEvent ( pFnDoFriendRead, &DoFriendRead_Parms, NULL );

	return DoFriendRead_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.ClearServiceQosDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         ServiceQosDelegate             ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventClearServiceQosDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate ServiceQosDelegate )
{
	static UFunction* pFnClearServiceQosDelegate = NULL;

	if ( ! pFnClearServiceQosDelegate )
		pFnClearServiceQosDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48860 ];

	UPgOnlineSessionManager_eventClearServiceQosDelegate_Parms ClearServiceQosDelegate_Parms;
	ClearServiceQosDelegate_Parms.os = os;
	memcpy ( &ClearServiceQosDelegate_Parms.ServiceQosDelegate, &ServiceQosDelegate, 0xC );

	this->ProcessEvent ( pFnClearServiceQosDelegate, &ClearServiceQosDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddServiceQosDelegate
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         ServiceQosDelegate             ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::eventAddServiceQosDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate ServiceQosDelegate )
{
	static UFunction* pFnAddServiceQosDelegate = NULL;

	if ( ! pFnAddServiceQosDelegate )
		pFnAddServiceQosDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48857 ];

	UPgOnlineSessionManager_eventAddServiceQosDelegate_Parms AddServiceQosDelegate_Parms;
	AddServiceQosDelegate_Parms.os = os;
	memcpy ( &AddServiceQosDelegate_Parms.ServiceQosDelegate, &ServiceQosDelegate, 0xC );

	this->ProcessEvent ( pFnAddServiceQosDelegate, &AddServiceQosDelegate_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.OnServiceQosCheckComplete
// [0x00120000] 
// Parameters infos:

void UPgOnlineSessionManager::OnServiceQosCheckComplete ( )
{
	static UFunction* pFnOnServiceQosCheckComplete = NULL;

	if ( ! pFnOnServiceQosCheckComplete )
		pFnOnServiceQosCheckComplete = (UFunction*) UObject::GObjObjects()->Data[ 48682 ];

	UPgOnlineSessionManager_execOnServiceQosCheckComplete_Parms OnServiceQosCheckComplete_Parms;

	this->ProcessEvent ( pFnOnServiceQosCheckComplete, &OnServiceQosCheckComplete_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager._GetPlayerNickname
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UOnlineSubsystem*        oss                            ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )

struct FString UPgOnlineSessionManager::event_GetPlayerNickname ( class UOnlineSubsystem* oss, unsigned char LocalUserNum )
{
	static UFunction* pFn_GetPlayerNickname = NULL;

	if ( ! pFn_GetPlayerNickname )
		pFn_GetPlayerNickname = (UFunction*) UObject::GObjObjects()->Data[ 48853 ];

	UPgOnlineSessionManager_event_GetPlayerNickname_Parms _GetPlayerNickname_Parms;
	_GetPlayerNickname_Parms.oss = oss;
	_GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFn_GetPlayerNickname, &_GetPlayerNickname_Parms, NULL );

	return _GetPlayerNickname_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.EndQuickmatch
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::EndQuickmatch ( )
{
	static UFunction* pFnEndQuickmatch = NULL;

	if ( ! pFnEndQuickmatch )
		pFnEndQuickmatch = (UFunction*) UObject::GObjObjects()->Data[ 48852 ];

	UPgOnlineSessionManager_execEndQuickmatch_Parms EndQuickmatch_Parms;

	pFnEndQuickmatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndQuickmatch, &EndQuickmatch_Parms, NULL );

	pFnEndQuickmatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.AutoHostCompleted
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::AutoHostCompleted ( unsigned long successful )
{
	static UFunction* pFnAutoHostCompleted = NULL;

	if ( ! pFnAutoHostCompleted )
		pFnAutoHostCompleted = (UFunction*) UObject::GObjObjects()->Data[ 48850 ];

	UPgOnlineSessionManager_execAutoHostCompleted_Parms AutoHostCompleted_Parms;
	AutoHostCompleted_Parms.successful = successful;

	pFnAutoHostCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoHostCompleted, &AutoHostCompleted_Parms, NULL );

	pFnAutoHostCompleted->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.AutoJoinCompleted
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::AutoJoinCompleted ( unsigned long successful )
{
	static UFunction* pFnAutoJoinCompleted = NULL;

	if ( ! pFnAutoJoinCompleted )
		pFnAutoJoinCompleted = (UFunction*) UObject::GObjObjects()->Data[ 48848 ];

	UPgOnlineSessionManager_execAutoJoinCompleted_Parms AutoJoinCompleted_Parms;
	AutoJoinCompleted_Parms.successful = successful;

	pFnAutoJoinCompleted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoJoinCompleted, &AutoJoinCompleted_Parms, NULL );

	pFnAutoJoinCompleted->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.GetAutoJoinSessionIndex
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgOnlineGameSearch*     Search                         ( CPF_Parm )

int UPgOnlineSessionManager::GetAutoJoinSessionIndex ( class UPgOnlineGameSearch* Search )
{
	static UFunction* pFnGetAutoJoinSessionIndex = NULL;

	if ( ! pFnGetAutoJoinSessionIndex )
		pFnGetAutoJoinSessionIndex = (UFunction*) UObject::GObjObjects()->Data[ 48845 ];

	UPgOnlineSessionManager_execGetAutoJoinSessionIndex_Parms GetAutoJoinSessionIndex_Parms;
	GetAutoJoinSessionIndex_Parms.Search = Search;

	pFnGetAutoJoinSessionIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAutoJoinSessionIndex, &GetAutoJoinSessionIndex_Parms, NULL );

	pFnGetAutoJoinSessionIndex->FunctionFlags |= 0x400;

	return GetAutoJoinSessionIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.GetNumValidSearchResults
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPgOnlineGameSearch*     Search                         ( CPF_Parm )

int UPgOnlineSessionManager::GetNumValidSearchResults ( class UPgOnlineGameSearch* Search )
{
	static UFunction* pFnGetNumValidSearchResults = NULL;

	if ( ! pFnGetNumValidSearchResults )
		pFnGetNumValidSearchResults = (UFunction*) UObject::GObjObjects()->Data[ 48842 ];

	UPgOnlineSessionManager_execGetNumValidSearchResults_Parms GetNumValidSearchResults_Parms;
	GetNumValidSearchResults_Parms.Search = Search;

	pFnGetNumValidSearchResults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumValidSearchResults, &GetNumValidSearchResults_Parms, NULL );

	pFnGetNumValidSearchResults->FunctionFlags |= 0x400;

	return GetNumValidSearchResults_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.IsValidSearchResult
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FOnlineGameSearchResult SearchResult                   ( CPF_Parm | CPF_OutParm )

bool UPgOnlineSessionManager::IsValidSearchResult ( struct FOnlineGameSearchResult* SearchResult )
{
	static UFunction* pFnIsValidSearchResult = NULL;

	if ( ! pFnIsValidSearchResult )
		pFnIsValidSearchResult = (UFunction*) UObject::GObjObjects()->Data[ 48839 ];

	UPgOnlineSessionManager_execIsValidSearchResult_Parms IsValidSearchResult_Parms;

	pFnIsValidSearchResult->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidSearchResult, &IsValidSearchResult_Parms, NULL );

	pFnIsValidSearchResult->FunctionFlags |= 0x400;

	if ( SearchResult )
		memcpy ( SearchResult, &IsValidSearchResult_Parms.SearchResult, 0x8 );

	return IsValidSearchResult_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.GetNextMatchSkillRatings
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            MinSkill                       ( CPF_Parm | CPF_OutParm )
// int                            MaxSkill                       ( CPF_Parm | CPF_OutParm )

void UPgOnlineSessionManager::GetNextMatchSkillRatings ( int* MinSkill, int* MaxSkill )
{
	static UFunction* pFnGetNextMatchSkillRatings = NULL;

	if ( ! pFnGetNextMatchSkillRatings )
		pFnGetNextMatchSkillRatings = (UFunction*) UObject::GObjObjects()->Data[ 48836 ];

	UPgOnlineSessionManager_execGetNextMatchSkillRatings_Parms GetNextMatchSkillRatings_Parms;

	pFnGetNextMatchSkillRatings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextMatchSkillRatings, &GetNextMatchSkillRatings_Parms, NULL );

	pFnGetNextMatchSkillRatings->FunctionFlags |= 0x400;

	if ( MinSkill )
		*MinSkill = GetNextMatchSkillRatings_Parms.MinSkill;

	if ( MaxSkill )
		*MaxSkill = GetNextMatchSkillRatings_Parms.MaxSkill;
};

// Function GridGame.PgOnlineSessionManager.ShouldRetrySkillMatching
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::ShouldRetrySkillMatching ( )
{
	static UFunction* pFnShouldRetrySkillMatching = NULL;

	if ( ! pFnShouldRetrySkillMatching )
		pFnShouldRetrySkillMatching = (UFunction*) UObject::GObjObjects()->Data[ 48834 ];

	UPgOnlineSessionManager_execShouldRetrySkillMatching_Parms ShouldRetrySkillMatching_Parms;

	pFnShouldRetrySkillMatching->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldRetrySkillMatching, &ShouldRetrySkillMatching_Parms, NULL );

	pFnShouldRetrySkillMatching->FunctionFlags |= 0x400;

	return ShouldRetrySkillMatching_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.ResetSkillMatchingAttempts
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::ResetSkillMatchingAttempts ( )
{
	static UFunction* pFnResetSkillMatchingAttempts = NULL;

	if ( ! pFnResetSkillMatchingAttempts )
		pFnResetSkillMatchingAttempts = (UFunction*) UObject::GObjObjects()->Data[ 48833 ];

	UPgOnlineSessionManager_execResetSkillMatchingAttempts_Parms ResetSkillMatchingAttempts_Parms;

	pFnResetSkillMatchingAttempts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetSkillMatchingAttempts, &ResetSkillMatchingAttempts_Parms, NULL );

	pFnResetSkillMatchingAttempts->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.OnDestroyLeaderBoardGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnDestroyLeaderBoardGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnDestroyLeaderBoardGameComplete = NULL;

	if ( ! pFnOnDestroyLeaderBoardGameComplete )
		pFnOnDestroyLeaderBoardGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48830 ];

	UPgOnlineSessionManager_execOnDestroyLeaderBoardGameComplete_Parms OnDestroyLeaderBoardGameComplete_Parms;
	memcpy ( &OnDestroyLeaderBoardGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyLeaderBoardGameComplete_Parms.successful = successful;

	pFnOnDestroyLeaderBoardGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDestroyLeaderBoardGameComplete, &OnDestroyLeaderBoardGameComplete_Parms, NULL );

	pFnOnDestroyLeaderBoardGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.OnEndLeaderBoardGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnEndLeaderBoardGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnEndLeaderBoardGameComplete = NULL;

	if ( ! pFnOnEndLeaderBoardGameComplete )
		pFnOnEndLeaderBoardGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48827 ];

	UPgOnlineSessionManager_execOnEndLeaderBoardGameComplete_Parms OnEndLeaderBoardGameComplete_Parms;
	memcpy ( &OnEndLeaderBoardGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnEndLeaderBoardGameComplete_Parms.successful = successful;

	pFnOnEndLeaderBoardGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnEndLeaderBoardGameComplete, &OnEndLeaderBoardGameComplete_Parms, NULL );

	pFnOnEndLeaderBoardGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.OnCreateLBGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::OnCreateLBGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnOnCreateLBGameComplete = NULL;

	if ( ! pFnOnCreateLBGameComplete )
		pFnOnCreateLBGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48824 ];

	UPgOnlineSessionManager_execOnCreateLBGameComplete_Parms OnCreateLBGameComplete_Parms;
	memcpy ( &OnCreateLBGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnCreateLBGameComplete_Parms.successful = successful;

	pFnOnCreateLBGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCreateLBGameComplete, &OnCreateLBGameComplete_Parms, NULL );

	pFnOnCreateLBGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.EndLeaderBoardSession
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )

void UPgOnlineSessionManager::EndLeaderBoardSession ( struct FName SessionName )
{
	static UFunction* pFnEndLeaderBoardSession = NULL;

	if ( ! pFnEndLeaderBoardSession )
		pFnEndLeaderBoardSession = (UFunction*) UObject::GObjObjects()->Data[ 48822 ];

	UPgOnlineSessionManager_execEndLeaderBoardSession_Parms EndLeaderBoardSession_Parms;
	memcpy ( &EndLeaderBoardSession_Parms.SessionName, &SessionName, 0x8 );

	pFnEndLeaderBoardSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndLeaderBoardSession, &EndLeaderBoardSession_Parms, NULL );

	pFnEndLeaderBoardSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartLeaderBoardSession
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )

void UPgOnlineSessionManager::StartLeaderBoardSession ( struct FName SessionName )
{
	static UFunction* pFnStartLeaderBoardSession = NULL;

	if ( ! pFnStartLeaderBoardSession )
		pFnStartLeaderBoardSession = (UFunction*) UObject::GObjObjects()->Data[ 48820 ];

	UPgOnlineSessionManager_execStartLeaderBoardSession_Parms StartLeaderBoardSession_Parms;
	memcpy ( &StartLeaderBoardSession_Parms.SessionName, &SessionName, 0x8 );

	pFnStartLeaderBoardSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartLeaderBoardSession, &StartLeaderBoardSession_Parms, NULL );

	pFnStartLeaderBoardSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.Debug_OnStartLeaderBoardGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::Debug_OnStartLeaderBoardGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnDebug_OnStartLeaderBoardGameComplete = NULL;

	if ( ! pFnDebug_OnStartLeaderBoardGameComplete )
		pFnDebug_OnStartLeaderBoardGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48817 ];

	UPgOnlineSessionManager_execDebug_OnStartLeaderBoardGameComplete_Parms Debug_OnStartLeaderBoardGameComplete_Parms;
	memcpy ( &Debug_OnStartLeaderBoardGameComplete_Parms.SessionName, &SessionName, 0x8 );
	Debug_OnStartLeaderBoardGameComplete_Parms.successful = successful;

	pFnDebug_OnStartLeaderBoardGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebug_OnStartLeaderBoardGameComplete, &Debug_OnStartLeaderBoardGameComplete_Parms, NULL );

	pFnDebug_OnStartLeaderBoardGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.Debug_OnCreateLeaderBoardGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::Debug_OnCreateLeaderBoardGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnDebug_OnCreateLeaderBoardGameComplete = NULL;

	if ( ! pFnDebug_OnCreateLeaderBoardGameComplete )
		pFnDebug_OnCreateLeaderBoardGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48814 ];

	UPgOnlineSessionManager_execDebug_OnCreateLeaderBoardGameComplete_Parms Debug_OnCreateLeaderBoardGameComplete_Parms;
	memcpy ( &Debug_OnCreateLeaderBoardGameComplete_Parms.SessionName, &SessionName, 0x8 );
	Debug_OnCreateLeaderBoardGameComplete_Parms.successful = successful;

	pFnDebug_OnCreateLeaderBoardGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebug_OnCreateLeaderBoardGameComplete, &Debug_OnCreateLeaderBoardGameComplete_Parms, NULL );

	pFnDebug_OnCreateLeaderBoardGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugUpdateLeaderBoard
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_Parm )

void UPgOnlineSessionManager::DebugUpdateLeaderBoard ( int LeaderboardId )
{
	static UFunction* pFnDebugUpdateLeaderBoard = NULL;

	if ( ! pFnDebugUpdateLeaderBoard )
		pFnDebugUpdateLeaderBoard = (UFunction*) UObject::GObjObjects()->Data[ 48812 ];

	UPgOnlineSessionManager_execDebugUpdateLeaderBoard_Parms DebugUpdateLeaderBoard_Parms;
	DebugUpdateLeaderBoard_Parms.LeaderboardId = LeaderboardId;

	pFnDebugUpdateLeaderBoard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugUpdateLeaderBoard, &DebugUpdateLeaderBoard_Parms, NULL );

	pFnDebugUpdateLeaderBoard->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugCreateLeaderBoardSession
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            LeaderboardId                  ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineSessionManager::DebugCreateLeaderBoardSession ( int LeaderboardId )
{
	static UFunction* pFnDebugCreateLeaderBoardSession = NULL;

	if ( ! pFnDebugCreateLeaderBoardSession )
		pFnDebugCreateLeaderBoardSession = (UFunction*) UObject::GObjObjects()->Data[ 48810 ];

	UPgOnlineSessionManager_execDebugCreateLeaderBoardSession_Parms DebugCreateLeaderBoardSession_Parms;
	DebugCreateLeaderBoardSession_Parms.LeaderboardId = LeaderboardId;

	pFnDebugCreateLeaderBoardSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugCreateLeaderBoardSession, &DebugCreateLeaderBoardSession_Parms, NULL );

	pFnDebugCreateLeaderBoardSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.ToggleNATFilter
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::ToggleNATFilter ( )
{
	static UFunction* pFnToggleNATFilter = NULL;

	if ( ! pFnToggleNATFilter )
		pFnToggleNATFilter = (UFunction*) UObject::GObjObjects()->Data[ 48809 ];

	UPgOnlineSessionManager_execToggleNATFilter_Parms ToggleNATFilter_Parms;

	pFnToggleNATFilter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleNATFilter, &ToggleNATFilter_Parms, NULL );

	pFnToggleNATFilter->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StopAutoMatch
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::StopAutoMatch ( )
{
	static UFunction* pFnStopAutoMatch = NULL;

	if ( ! pFnStopAutoMatch )
		pFnStopAutoMatch = (UFunction*) UObject::GObjObjects()->Data[ 48808 ];

	UPgOnlineSessionManager_execStopAutoMatch_Parms StopAutoMatch_Parms;

	pFnStopAutoMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopAutoMatch, &StopAutoMatch_Parms, NULL );

	pFnStopAutoMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartAutoMatch
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Mode                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  autoQuit                       ( CPF_Parm )
// int                            matchTime                      ( CPF_Parm )

void UPgOnlineSessionManager::StartAutoMatch ( struct FString Mode, struct FString Map, unsigned long autoQuit, int matchTime )
{
	static UFunction* pFnStartAutoMatch = NULL;

	if ( ! pFnStartAutoMatch )
		pFnStartAutoMatch = (UFunction*) UObject::GObjObjects()->Data[ 48803 ];

	UPgOnlineSessionManager_execStartAutoMatch_Parms StartAutoMatch_Parms;
	memcpy ( &StartAutoMatch_Parms.Mode, &Mode, 0xC );
	memcpy ( &StartAutoMatch_Parms.Map, &Map, 0xC );
	StartAutoMatch_Parms.autoQuit = autoQuit;
	StartAutoMatch_Parms.matchTime = matchTime;

	pFnStartAutoMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartAutoMatch, &StartAutoMatch_Parms, NULL );

	pFnStartAutoMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.MP_JoinGame
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            nSession                       ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineSessionManager::MP_JoinGame ( int nSession )
{
	static UFunction* pFnMP_JoinGame = NULL;

	if ( ! pFnMP_JoinGame )
		pFnMP_JoinGame = (UFunction*) UObject::GObjObjects()->Data[ 48801 ];

	UPgOnlineSessionManager_execMP_JoinGame_Parms MP_JoinGame_Parms;
	MP_JoinGame_Parms.nSession = nSession;

	pFnMP_JoinGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMP_JoinGame, &MP_JoinGame_Parms, NULL );

	pFnMP_JoinGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.MP_StartGame
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Mode                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::MP_StartGame ( struct FString Mode, struct FString Map )
{
	static UFunction* pFnMP_StartGame = NULL;

	if ( ! pFnMP_StartGame )
		pFnMP_StartGame = (UFunction*) UObject::GObjObjects()->Data[ 48798 ];

	UPgOnlineSessionManager_execMP_StartGame_Parms MP_StartGame_Parms;
	memcpy ( &MP_StartGame_Parms.Mode, &Mode, 0xC );
	memcpy ( &MP_StartGame_Parms.Map, &Map, 0xC );

	pFnMP_StartGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMP_StartGame, &MP_StartGame_Parms, NULL );

	pFnMP_StartGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.ClearAutoLoginDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        oss                            ( CPF_Parm )

void UPgOnlineSessionManager::eventClearAutoLoginDelegates ( class UOnlineSubsystem* oss )
{
	static UFunction* pFnClearAutoLoginDelegates = NULL;

	if ( ! pFnClearAutoLoginDelegates )
		pFnClearAutoLoginDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48796 ];

	UPgOnlineSessionManager_eventClearAutoLoginDelegates_Parms ClearAutoLoginDelegates_Parms;
	ClearAutoLoginDelegates_Parms.oss = oss;

	this->ProcessEvent ( pFnClearAutoLoginDelegates, &ClearAutoLoginDelegates_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AddAutoLoginDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        oss                            ( CPF_Parm )

void UPgOnlineSessionManager::eventAddAutoLoginDelegates ( class UOnlineSubsystem* oss )
{
	static UFunction* pFnAddAutoLoginDelegates = NULL;

	if ( ! pFnAddAutoLoginDelegates )
		pFnAddAutoLoginDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48794 ];

	UPgOnlineSessionManager_eventAddAutoLoginDelegates_Parms AddAutoLoginDelegates_Parms;
	AddAutoLoginDelegates_Parms.oss = oss;

	this->ProcessEvent ( pFnAddAutoLoginDelegates, &AddAutoLoginDelegates_Parms, NULL );
};

// Function GridGame.PgOnlineSessionManager.AutoSignInDelegate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineSessionManager::AutoSignInDelegate ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnAutoSignInDelegate = NULL;

	if ( ! pFnAutoSignInDelegate )
		pFnAutoSignInDelegate = (UFunction*) UObject::GObjObjects()->Data[ 48791 ];

	UPgOnlineSessionManager_execAutoSignInDelegate_Parms AutoSignInDelegate_Parms;
	AutoSignInDelegate_Parms.netStatus = netStatus;
	memcpy ( &AutoSignInDelegate_Parms.NewId, &NewId, 0x2C );

	pFnAutoSignInDelegate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAutoSignInDelegate, &AutoSignInDelegate_Parms, NULL );

	pFnAutoSignInDelegate->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.ShowFriendGames
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::ShowFriendGames ( )
{
	static UFunction* pFnShowFriendGames = NULL;

	if ( ! pFnShowFriendGames )
		pFnShowFriendGames = (UFunction*) UObject::GObjObjects()->Data[ 48790 ];

	UPgOnlineSessionManager_execShowFriendGames_Parms ShowFriendGames_Parms;

	pFnShowFriendGames->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowFriendGames, &ShowFriendGames_Parms, NULL );

	pFnShowFriendGames->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugCreateParty
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::DebugCreateParty ( )
{
	static UFunction* pFnDebugCreateParty = NULL;

	if ( ! pFnDebugCreateParty )
		pFnDebugCreateParty = (UFunction*) UObject::GObjObjects()->Data[ 48789 ];

	UPgOnlineSessionManager_execDebugCreateParty_Parms DebugCreateParty_Parms;

	pFnDebugCreateParty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugCreateParty, &DebugCreateParty_Parms, NULL );

	pFnDebugCreateParty->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartQuickMatch
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::StartQuickMatch ( )
{
	static UFunction* pFnStartQuickMatch = NULL;

	if ( ! pFnStartQuickMatch )
		pFnStartQuickMatch = (UFunction*) UObject::GObjObjects()->Data[ 48788 ];

	UPgOnlineSessionManager_execStartQuickMatch_Parms StartQuickMatch_Parms;

	pFnStartQuickMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartQuickMatch, &StartQuickMatch_Parms, NULL );

	pFnStartQuickMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartStoryMode
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::StartStoryMode ( )
{
	static UFunction* pFnStartStoryMode = NULL;

	if ( ! pFnStartStoryMode )
		pFnStartStoryMode = (UFunction*) UObject::GObjObjects()->Data[ 48787 ];

	UPgOnlineSessionManager_execStartStoryMode_Parms StartStoryMode_Parms;

	pFnStartStoryMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartStoryMode, &StartStoryMode_Parms, NULL );

	pFnStartStoryMode->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartMPMode
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::StartMPMode ( )
{
	static UFunction* pFnStartMPMode = NULL;

	if ( ! pFnStartMPMode )
		pFnStartMPMode = (UFunction*) UObject::GObjObjects()->Data[ 48786 ];

	UPgOnlineSessionManager_execStartMPMode_Parms StartMPMode_Parms;

	pFnStartMPMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartMPMode, &StartMPMode_Parms, NULL );

	pFnStartMPMode->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugLeaveAllSessions
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::DebugLeaveAllSessions ( )
{
	static UFunction* pFnDebugLeaveAllSessions = NULL;

	if ( ! pFnDebugLeaveAllSessions )
		pFnDebugLeaveAllSessions = (UFunction*) UObject::GObjObjects()->Data[ 48785 ];

	UPgOnlineSessionManager_execDebugLeaveAllSessions_Parms DebugLeaveAllSessions_Parms;

	pFnDebugLeaveAllSessions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugLeaveAllSessions, &DebugLeaveAllSessions_Parms, NULL );

	pFnDebugLeaveAllSessions->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugStartMap
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Mode                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  ignoreChapterPoints            ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineSessionManager::DebugStartMap ( struct FString Mode, struct FString Map, unsigned long ignoreChapterPoints )
{
	static UFunction* pFnDebugStartMap = NULL;

	if ( ! pFnDebugStartMap )
		pFnDebugStartMap = (UFunction*) UObject::GObjObjects()->Data[ 48781 ];

	UPgOnlineSessionManager_execDebugStartMap_Parms DebugStartMap_Parms;
	memcpy ( &DebugStartMap_Parms.Mode, &Mode, 0xC );
	memcpy ( &DebugStartMap_Parms.Map, &Map, 0xC );
	DebugStartMap_Parms.ignoreChapterPoints = ignoreChapterPoints;

	pFnDebugStartMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugStartMap, &DebugStartMap_Parms, NULL );

	pFnDebugStartMap->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugAccessGameGrid
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            modeIndex                      ( CPF_Parm | CPF_CoerceParm )
// int                            mapIndex                       ( CPF_Parm | CPF_CoerceParm )
// struct FString                 CompletionMap                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::DebugAccessGameGrid ( int modeIndex, int mapIndex, struct FString CompletionMap )
{
	static UFunction* pFnDebugAccessGameGrid = NULL;

	if ( ! pFnDebugAccessGameGrid )
		pFnDebugAccessGameGrid = (UFunction*) UObject::GObjObjects()->Data[ 48777 ];

	UPgOnlineSessionManager_execDebugAccessGameGrid_Parms DebugAccessGameGrid_Parms;
	DebugAccessGameGrid_Parms.modeIndex = modeIndex;
	DebugAccessGameGrid_Parms.mapIndex = mapIndex;
	memcpy ( &DebugAccessGameGrid_Parms.CompletionMap, &CompletionMap, 0xC );

	pFnDebugAccessGameGrid->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugAccessGameGrid, &DebugAccessGameGrid_Parms, NULL );

	pFnDebugAccessGameGrid->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugDestroy
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::DebugDestroy ( )
{
	static UFunction* pFnDebugDestroy = NULL;

	if ( ! pFnDebugDestroy )
		pFnDebugDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48776 ];

	UPgOnlineSessionManager_execDebugDestroy_Parms DebugDestroy_Parms;

	pFnDebugDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugDestroy, &DebugDestroy_Parms, NULL );

	pFnDebugDestroy->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugLeave
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::DebugLeave ( )
{
	static UFunction* pFnDebugLeave = NULL;

	if ( ! pFnDebugLeave )
		pFnDebugLeave = (UFunction*) UObject::GObjObjects()->Data[ 48775 ];

	UPgOnlineSessionManager_execDebugLeave_Parms DebugLeave_Parms;

	pFnDebugLeave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugLeave, &DebugLeave_Parms, NULL );

	pFnDebugLeave->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugJoin
// [0x00024600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Address                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::DebugJoin ( struct FString Address )
{
	static UFunction* pFnDebugJoin = NULL;

	if ( ! pFnDebugJoin )
		pFnDebugJoin = (UFunction*) UObject::GObjObjects()->Data[ 48773 ];

	UPgOnlineSessionManager_execDebugJoin_Parms DebugJoin_Parms;
	memcpy ( &DebugJoin_Parms.Address, &Address, 0xC );

	pFnDebugJoin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugJoin, &DebugJoin_Parms, NULL );

	pFnDebugJoin->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.DebugCreate
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::DebugCreate ( struct FString Map )
{
	static UFunction* pFnDebugCreate = NULL;

	if ( ! pFnDebugCreate )
		pFnDebugCreate = (UFunction*) UObject::GObjObjects()->Data[ 48771 ];

	UPgOnlineSessionManager_execDebugCreate_Parms DebugCreate_Parms;
	memcpy ( &DebugCreate_Parms.Map, &Map, 0xC );

	pFnDebugCreate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugCreate, &DebugCreate_Parms, NULL );

	pFnDebugCreate->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.ShowInvites
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::ShowInvites ( )
{
	static UFunction* pFnShowInvites = NULL;

	if ( ! pFnShowInvites )
		pFnShowInvites = (UFunction*) UObject::GObjObjects()->Data[ 48770 ];

	UPgOnlineSessionManager_execShowInvites_Parms ShowInvites_Parms;

	pFnShowInvites->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowInvites, &ShowInvites_Parms, NULL );

	pFnShowInvites->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.LeaveMP
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::LeaveMP ( )
{
	static UFunction* pFnLeaveMP = NULL;

	if ( ! pFnLeaveMP )
		pFnLeaveMP = (UFunction*) UObject::GObjObjects()->Data[ 48769 ];

	UPgOnlineSessionManager_execLeaveMP_Parms LeaveMP_Parms;

	pFnLeaveMP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveMP, &LeaveMP_Parms, NULL );

	pFnLeaveMP->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.IsBannedBy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            NetId                          ( CPF_Parm )

bool UPgOnlineSessionManager::IsBannedBy ( struct FUniqueNetId NetId )
{
	static UFunction* pFnIsBannedBy = NULL;

	if ( ! pFnIsBannedBy )
		pFnIsBannedBy = (UFunction*) UObject::GObjObjects()->Data[ 48766 ];

	UPgOnlineSessionManager_execIsBannedBy_Parms IsBannedBy_Parms;
	memcpy ( &IsBannedBy_Parms.NetId, &NetId, 0x2C );

	pFnIsBannedBy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBannedBy, &IsBannedBy_Parms, NULL );

	pFnIsBannedBy->FunctionFlags |= 0x400;

	return IsBannedBy_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.AddBannedBy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            NetId                          ( CPF_Parm )

void UPgOnlineSessionManager::AddBannedBy ( struct FUniqueNetId NetId )
{
	static UFunction* pFnAddBannedBy = NULL;

	if ( ! pFnAddBannedBy )
		pFnAddBannedBy = (UFunction*) UObject::GObjObjects()->Data[ 48764 ];

	UPgOnlineSessionManager_execAddBannedBy_Parms AddBannedBy_Parms;
	memcpy ( &AddBannedBy_Parms.NetId, &NetId, 0x2C );

	pFnAddBannedBy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBannedBy, &AddBannedBy_Parms, NULL );

	pFnAddBannedBy->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.BannedBySession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::BannedBySession ( )
{
	static UFunction* pFnBannedBySession = NULL;

	if ( ! pFnBannedBySession )
		pFnBannedBySession = (UFunction*) UObject::GObjObjects()->Data[ 48763 ];

	UPgOnlineSessionManager_execBannedBySession_Parms BannedBySession_Parms;

	pFnBannedBySession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBannedBySession, &BannedBySession_Parms, NULL );

	pFnBannedBySession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.IsBanned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            NetId                          ( CPF_Parm )

bool UPgOnlineSessionManager::IsBanned ( struct FUniqueNetId NetId )
{
	static UFunction* pFnIsBanned = NULL;

	if ( ! pFnIsBanned )
		pFnIsBanned = (UFunction*) UObject::GObjObjects()->Data[ 48760 ];

	UPgOnlineSessionManager_execIsBanned_Parms IsBanned_Parms;
	memcpy ( &IsBanned_Parms.NetId, &NetId, 0x2C );

	pFnIsBanned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBanned, &IsBanned_Parms, NULL );

	pFnIsBanned->FunctionFlags |= 0x400;

	return IsBanned_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.AddBannedId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            NetId                          ( CPF_Parm )

void UPgOnlineSessionManager::AddBannedId ( struct FUniqueNetId NetId )
{
	static UFunction* pFnAddBannedId = NULL;

	if ( ! pFnAddBannedId )
		pFnAddBannedId = (UFunction*) UObject::GObjObjects()->Data[ 48758 ];

	UPgOnlineSessionManager_execAddBannedId_Parms AddBannedId_Parms;
	memcpy ( &AddBannedId_Parms.NetId, &NetId, 0x2C );

	pFnAddBannedId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBannedId, &AddBannedId_Parms, NULL );

	pFnAddBannedId->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 48757 ];

	UPgOnlineSessionManager_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CancelQuickmatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::CancelQuickmatch ( )
{
	static UFunction* pFnCancelQuickmatch = NULL;

	if ( ! pFnCancelQuickmatch )
		pFnCancelQuickmatch = (UFunction*) UObject::GObjObjects()->Data[ 48756 ];

	UPgOnlineSessionManager_execCancelQuickmatch_Parms CancelQuickmatch_Parms;

	pFnCancelQuickmatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelQuickmatch, &CancelQuickmatch_Parms, NULL );

	pFnCancelQuickmatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnDestroyOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnDestroyOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete )
		pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48753 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnDestroyOnlineGameComplete_Parms PgOnlineSessionManager_OnDestroyOnlineGameComplete_Parms;
	memcpy ( &PgOnlineSessionManager_OnDestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgOnlineSessionManager_OnDestroyOnlineGameComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete, &PgOnlineSessionManager_OnDestroyOnlineGameComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnDestroyOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnEndOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnEndOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnEndOnlineGameComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnEndOnlineGameComplete )
		pFnPgOnlineSessionManager_OnEndOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48750 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnEndOnlineGameComplete_Parms PgOnlineSessionManager_OnEndOnlineGameComplete_Parms;
	memcpy ( &PgOnlineSessionManager_OnEndOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgOnlineSessionManager_OnEndOnlineGameComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnEndOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnEndOnlineGameComplete, &PgOnlineSessionManager_OnEndOnlineGameComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnEndOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.LeaveGameSession
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  shouldSave                     ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineSessionManager::LeaveGameSession ( unsigned long shouldSave )
{
	static UFunction* pFnLeaveGameSession = NULL;

	if ( ! pFnLeaveGameSession )
		pFnLeaveGameSession = (UFunction*) UObject::GObjObjects()->Data[ 48748 ];

	UPgOnlineSessionManager_execLeaveGameSession_Parms LeaveGameSession_Parms;
	LeaveGameSession_Parms.shouldSave = shouldSave;

	pFnLeaveGameSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeaveGameSession, &LeaveGameSession_Parms, NULL );

	pFnLeaveGameSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnJoinOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnJoinOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnJoinOnlineGameComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnJoinOnlineGameComplete )
		pFnPgOnlineSessionManager_OnJoinOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48745 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnJoinOnlineGameComplete_Parms PgOnlineSessionManager_OnJoinOnlineGameComplete_Parms;
	memcpy ( &PgOnlineSessionManager_OnJoinOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgOnlineSessionManager_OnJoinOnlineGameComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnJoinOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnJoinOnlineGameComplete, &PgOnlineSessionManager_OnJoinOnlineGameComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnJoinOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.JoinSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            serverSearchResultsIndex       ( CPF_Parm )

void UPgOnlineSessionManager::JoinSession ( int serverSearchResultsIndex )
{
	static UFunction* pFnJoinSession = NULL;

	if ( ! pFnJoinSession )
		pFnJoinSession = (UFunction*) UObject::GObjObjects()->Data[ 48743 ];

	UPgOnlineSessionManager_execJoinSession_Parms JoinSession_Parms;
	JoinSession_Parms.serverSearchResultsIndex = serverSearchResultsIndex;

	pFnJoinSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnJoinSession, &JoinSession_Parms, NULL );

	pFnJoinSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnCancelFindOnlineGamesComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnCancelFindOnlineGamesComplete ( unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete )
		pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 48741 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnCancelFindOnlineGamesComplete_Parms PgOnlineSessionManager_OnCancelFindOnlineGamesComplete_Parms;
	PgOnlineSessionManager_OnCancelFindOnlineGamesComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete, &PgOnlineSessionManager_OnCancelFindOnlineGamesComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnCancelFindOnlineGamesComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CancelFindSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::CancelFindSession ( )
{
	static UFunction* pFnCancelFindSession = NULL;

	if ( ! pFnCancelFindSession )
		pFnCancelFindSession = (UFunction*) UObject::GObjObjects()->Data[ 48740 ];

	UPgOnlineSessionManager_execCancelFindSession_Parms CancelFindSession_Parms;

	pFnCancelFindSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCancelFindSession, &CancelFindSession_Parms, NULL );

	pFnCancelFindSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnReadFriendsComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnReadFriendsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnPgOnlineSessionManager_OnReadFriendsComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnReadFriendsComplete )
		pFnPgOnlineSessionManager_OnReadFriendsComplete = (UFunction*) UObject::GObjObjects()->Data[ 48738 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnReadFriendsComplete_Parms PgOnlineSessionManager_OnReadFriendsComplete_Parms;
	PgOnlineSessionManager_OnReadFriendsComplete_Parms.bWasSuccessful = bWasSuccessful;

	pFnPgOnlineSessionManager_OnReadFriendsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnReadFriendsComplete, &PgOnlineSessionManager_OnReadFriendsComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnReadFriendsComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnFindFriendGamesComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnFindFriendGamesComplete ( unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnFindFriendGamesComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnFindFriendGamesComplete )
		pFnPgOnlineSessionManager_OnFindFriendGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 48736 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnFindFriendGamesComplete_Parms PgOnlineSessionManager_OnFindFriendGamesComplete_Parms;
	PgOnlineSessionManager_OnFindFriendGamesComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnFindFriendGamesComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnFindFriendGamesComplete, &PgOnlineSessionManager_OnFindFriendGamesComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnFindFriendGamesComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.FindFriendSessions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::FindFriendSessions ( )
{
	static UFunction* pFnFindFriendSessions = NULL;

	if ( ! pFnFindFriendSessions )
		pFnFindFriendSessions = (UFunction*) UObject::GObjObjects()->Data[ 48735 ];

	UPgOnlineSessionManager_execFindFriendSessions_Parms FindFriendSessions_Parms;

	pFnFindFriendSessions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindFriendSessions, &FindFriendSessions_Parms, NULL );

	pFnFindFriendSessions->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnFindOnlineGamesComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnFindOnlineGamesComplete ( unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnFindOnlineGamesComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnFindOnlineGamesComplete )
		pFnPgOnlineSessionManager_OnFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 48733 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnFindOnlineGamesComplete_Parms PgOnlineSessionManager_OnFindOnlineGamesComplete_Parms;
	PgOnlineSessionManager_OnFindOnlineGamesComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnFindOnlineGamesComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnFindOnlineGamesComplete, &PgOnlineSessionManager_OnFindOnlineGamesComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnFindOnlineGamesComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.RetryFindSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::RetryFindSession ( )
{
	static UFunction* pFnRetryFindSession = NULL;

	if ( ! pFnRetryFindSession )
		pFnRetryFindSession = (UFunction*) UObject::GObjObjects()->Data[ 48732 ];

	UPgOnlineSessionManager_execRetryFindSession_Parms RetryFindSession_Parms;

	pFnRetryFindSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRetryFindSession, &RetryFindSession_Parms, NULL );

	pFnRetryFindSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.FindSession
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  gameMode                       ( CPF_Parm )
// int                            minPlayers                     ( CPF_Parm )
// int                            MaxPlayers                     ( CPF_Parm )
// int                            DLCFlags                       ( CPF_Parm )
// unsigned long                  AutoJoin                       ( CPF_OptionalParm | CPF_Parm )

void UPgOnlineSessionManager::FindSession ( unsigned char gameMode, int minPlayers, int MaxPlayers, int DLCFlags, unsigned long AutoJoin )
{
	static UFunction* pFnFindSession = NULL;

	if ( ! pFnFindSession )
		pFnFindSession = (UFunction*) UObject::GObjObjects()->Data[ 48726 ];

	UPgOnlineSessionManager_execFindSession_Parms FindSession_Parms;
	FindSession_Parms.gameMode = gameMode;
	FindSession_Parms.minPlayers = minPlayers;
	FindSession_Parms.MaxPlayers = MaxPlayers;
	FindSession_Parms.DLCFlags = DLCFlags;
	FindSession_Parms.AutoJoin = AutoJoin;

	pFnFindSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindSession, &FindSession_Parms, NULL );

	pFnFindSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.UpdateClientSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::UpdateClientSession ( )
{
	static UFunction* pFnUpdateClientSession = NULL;

	if ( ! pFnUpdateClientSession )
		pFnUpdateClientSession = (UFunction*) UObject::GObjObjects()->Data[ 48725 ];

	UPgOnlineSessionManager_execUpdateClientSession_Parms UpdateClientSession_Parms;

	pFnUpdateClientSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateClientSession, &UpdateClientSession_Parms, NULL );

	pFnUpdateClientSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.UpdateSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::UpdateSession ( )
{
	static UFunction* pFnUpdateSession = NULL;

	if ( ! pFnUpdateSession )
		pFnUpdateSession = (UFunction*) UObject::GObjObjects()->Data[ 48724 ];

	UPgOnlineSessionManager_execUpdateSession_Parms UpdateSession_Parms;

	pFnUpdateSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateSession, &UpdateSession_Parms, NULL );

	pFnUpdateSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnCreateOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgOnlineSessionManager::PgOnlineSessionManager_OnCreateOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgOnlineSessionManager_OnCreateOnlineGameComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnCreateOnlineGameComplete )
		pFnPgOnlineSessionManager_OnCreateOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 48721 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnCreateOnlineGameComplete_Parms PgOnlineSessionManager_OnCreateOnlineGameComplete_Parms;
	memcpy ( &PgOnlineSessionManager_OnCreateOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgOnlineSessionManager_OnCreateOnlineGameComplete_Parms.successful = successful;

	pFnPgOnlineSessionManager_OnCreateOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnCreateOnlineGameComplete, &PgOnlineSessionManager_OnCreateOnlineGameComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnCreateOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CreateSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  gameMode                       ( CPF_Parm )
// int                            Map                            ( CPF_Parm )
// unsigned long                  isRanked                       ( CPF_Parm )
// unsigned long                  IsPublic                       ( CPF_Parm )
// int                            numPlayerSlots                 ( CPF_Parm )

void UPgOnlineSessionManager::CreateSession ( unsigned char gameMode, int Map, unsigned long isRanked, unsigned long IsPublic, int numPlayerSlots )
{
	static UFunction* pFnCreateSession = NULL;

	if ( ! pFnCreateSession )
		pFnCreateSession = (UFunction*) UObject::GObjObjects()->Data[ 48715 ];

	UPgOnlineSessionManager_execCreateSession_Parms CreateSession_Parms;
	CreateSession_Parms.gameMode = gameMode;
	CreateSession_Parms.Map = Map;
	CreateSession_Parms.isRanked = isRanked;
	CreateSession_Parms.IsPublic = IsPublic;
	CreateSession_Parms.numPlayerSlots = numPlayerSlots;

	pFnCreateSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateSession, &CreateSession_Parms, NULL );

	pFnCreateSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.PgOnlineSessionManager_OnQosCheckComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::PgOnlineSessionManager_OnQosCheckComplete ( )
{
	static UFunction* pFnPgOnlineSessionManager_OnQosCheckComplete = NULL;

	if ( ! pFnPgOnlineSessionManager_OnQosCheckComplete )
		pFnPgOnlineSessionManager_OnQosCheckComplete = (UFunction*) UObject::GObjObjects()->Data[ 48714 ];

	UPgOnlineSessionManager_execPgOnlineSessionManager_OnQosCheckComplete_Parms PgOnlineSessionManager_OnQosCheckComplete_Parms;

	pFnPgOnlineSessionManager_OnQosCheckComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgOnlineSessionManager_OnQosCheckComplete, &PgOnlineSessionManager_OnQosCheckComplete_Parms, NULL );

	pFnPgOnlineSessionManager_OnQosCheckComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.StartSeamlessMP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  modeIndex                      ( CPF_Parm )
// int                            mapIndex                       ( CPF_Parm )
// struct FString                 CompletionMap                  ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineSessionManager::StartSeamlessMP ( unsigned char modeIndex, int mapIndex, struct FString CompletionMap )
{
	static UFunction* pFnStartSeamlessMP = NULL;

	if ( ! pFnStartSeamlessMP )
		pFnStartSeamlessMP = (UFunction*) UObject::GObjObjects()->Data[ 48710 ];

	UPgOnlineSessionManager_execStartSeamlessMP_Parms StartSeamlessMP_Parms;
	StartSeamlessMP_Parms.modeIndex = modeIndex;
	StartSeamlessMP_Parms.mapIndex = mapIndex;
	memcpy ( &StartSeamlessMP_Parms.CompletionMap, &CompletionMap, 0xC );

	pFnStartSeamlessMP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartSeamlessMP, &StartSeamlessMP_Parms, NULL );

	pFnStartSeamlessMP->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CreateSeamlessGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::CreateSeamlessGame ( )
{
	static UFunction* pFnCreateSeamlessGame = NULL;

	if ( ! pFnCreateSeamlessGame )
		pFnCreateSeamlessGame = (UFunction*) UObject::GObjObjects()->Data[ 48709 ];

	UPgOnlineSessionManager_execCreateSeamlessGame_Parms CreateSeamlessGame_Parms;

	pFnCreateSeamlessGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateSeamlessGame, &CreateSeamlessGame_Parms, NULL );

	pFnCreateSeamlessGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CreateLobby
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineSessionManager::CreateLobby ( )
{
	static UFunction* pFnCreateLobby = NULL;

	if ( ! pFnCreateLobby )
		pFnCreateLobby = (UFunction*) UObject::GObjObjects()->Data[ 48708 ];

	UPgOnlineSessionManager_execCreateLobby_Parms CreateLobby_Parms;

	pFnCreateLobby->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateLobby, &CreateLobby_Parms, NULL );

	pFnCreateLobby->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineSessionManager.CanPlayOnlineSeamless
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::CanPlayOnlineSeamless ( )
{
	static UFunction* pFnCanPlayOnlineSeamless = NULL;

	if ( ! pFnCanPlayOnlineSeamless )
		pFnCanPlayOnlineSeamless = (UFunction*) UObject::GObjObjects()->Data[ 48706 ];

	UPgOnlineSessionManager_execCanPlayOnlineSeamless_Parms CanPlayOnlineSeamless_Parms;

	pFnCanPlayOnlineSeamless->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPlayOnlineSeamless, &CanPlayOnlineSeamless_Parms, NULL );

	pFnCanPlayOnlineSeamless->FunctionFlags |= 0x400;

	return CanPlayOnlineSeamless_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.IsAutoHosting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::IsAutoHosting ( )
{
	static UFunction* pFnIsAutoHosting = NULL;

	if ( ! pFnIsAutoHosting )
		pFnIsAutoHosting = (UFunction*) UObject::GObjObjects()->Data[ 48704 ];

	UPgOnlineSessionManager_execIsAutoHosting_Parms IsAutoHosting_Parms;

	pFnIsAutoHosting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAutoHosting, &IsAutoHosting_Parms, NULL );

	pFnIsAutoHosting->FunctionFlags |= 0x400;

	return IsAutoHosting_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.IsAutoJoining
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::IsAutoJoining ( )
{
	static UFunction* pFnIsAutoJoining = NULL;

	if ( ! pFnIsAutoJoining )
		pFnIsAutoJoining = (UFunction*) UObject::GObjObjects()->Data[ 48702 ];

	UPgOnlineSessionManager_execIsAutoJoining_Parms IsAutoJoining_Parms;

	pFnIsAutoJoining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAutoJoining, &IsAutoJoining_Parms, NULL );

	pFnIsAutoJoining->FunctionFlags |= 0x400;

	return IsAutoJoining_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.IsQuickmatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::IsQuickmatch ( )
{
	static UFunction* pFnIsQuickmatch = NULL;

	if ( ! pFnIsQuickmatch )
		pFnIsQuickmatch = (UFunction*) UObject::GObjObjects()->Data[ 48700 ];

	UPgOnlineSessionManager_execIsQuickmatch_Parms IsQuickmatch_Parms;

	pFnIsQuickmatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsQuickmatch, &IsQuickmatch_Parms, NULL );

	pFnIsQuickmatch->FunctionFlags |= 0x400;

	return IsQuickmatch_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.IsStrictNAT
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineSessionManager::IsStrictNAT ( )
{
	static UFunction* pFnIsStrictNAT = NULL;

	if ( ! pFnIsStrictNAT )
		pFnIsStrictNAT = (UFunction*) UObject::GObjObjects()->Data[ 48698 ];

	UPgOnlineSessionManager_execIsStrictNAT_Parms IsStrictNAT_Parms;

	pFnIsStrictNAT->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsStrictNAT, &IsStrictNAT_Parms, NULL );

	pFnIsStrictNAT->FunctionFlags |= 0x400;

	return IsStrictNAT_Parms.ReturnValue;
};

// Function GridGame.PgOnlineSessionManager.GetNewPlayerState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineSessionManager::GetNewPlayerState ( )
{
	static UFunction* pFnGetNewPlayerState = NULL;

	if ( ! pFnGetNewPlayerState )
		pFnGetNewPlayerState = (UFunction*) UObject::GObjObjects()->Data[ 48696 ];

	UPgOnlineSessionManager_execGetNewPlayerState_Parms GetNewPlayerState_Parms;

	pFnGetNewPlayerState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNewPlayerState, &GetNewPlayerState_Parms, NULL );

	pFnGetNewPlayerState->FunctionFlags |= 0x400;

	return GetNewPlayerState_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.GetDLCFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSearch::GetDLCFlags ( )
{
	static UFunction* pFnGetDLCFlags = NULL;

	if ( ! pFnGetDLCFlags )
		pFnGetDLCFlags = (UFunction*) UObject::GObjObjects()->Data[ 47784 ];

	UPgOnlineGameSearch_execGetDLCFlags_Parms GetDLCFlags_Parms;

	pFnGetDLCFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDLCFlags, &GetDLCFlags_Parms, NULL );

	pFnGetDLCFlags->FunctionFlags |= 0x400;

	return GetDLCFlags_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetDLCFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            DLCFlags                       ( CPF_Parm )

void UPgOnlineGameSearch::SetDLCFlags ( int DLCFlags )
{
	static UFunction* pFnSetDLCFlags = NULL;

	if ( ! pFnSetDLCFlags )
		pFnSetDLCFlags = (UFunction*) UObject::GObjObjects()->Data[ 47782 ];

	UPgOnlineGameSearch_execSetDLCFlags_Parms SetDLCFlags_Parms;
	SetDLCFlags_Parms.DLCFlags = DLCFlags;

	pFnSetDLCFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDLCFlags, &SetDLCFlags_Parms, NULL );

	pFnSetDLCFlags->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSearch.GetMaxSkillRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSearch::GetMaxSkillRating ( )
{
	static UFunction* pFnGetMaxSkillRating = NULL;

	if ( ! pFnGetMaxSkillRating )
		pFnGetMaxSkillRating = (UFunction*) UObject::GObjObjects()->Data[ 47780 ];

	UPgOnlineGameSearch_execGetMaxSkillRating_Parms GetMaxSkillRating_Parms;

	pFnGetMaxSkillRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxSkillRating, &GetMaxSkillRating_Parms, NULL );

	pFnGetMaxSkillRating->FunctionFlags |= 0x400;

	return GetMaxSkillRating_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetMaxSkillRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            maxRating                      ( CPF_Parm )

void UPgOnlineGameSearch::SetMaxSkillRating ( int maxRating )
{
	static UFunction* pFnSetMaxSkillRating = NULL;

	if ( ! pFnSetMaxSkillRating )
		pFnSetMaxSkillRating = (UFunction*) UObject::GObjObjects()->Data[ 47778 ];

	UPgOnlineGameSearch_execSetMaxSkillRating_Parms SetMaxSkillRating_Parms;
	SetMaxSkillRating_Parms.maxRating = maxRating;

	pFnSetMaxSkillRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMaxSkillRating, &SetMaxSkillRating_Parms, NULL );

	pFnSetMaxSkillRating->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSearch.GetMinSkillRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSearch::GetMinSkillRating ( )
{
	static UFunction* pFnGetMinSkillRating = NULL;

	if ( ! pFnGetMinSkillRating )
		pFnGetMinSkillRating = (UFunction*) UObject::GObjObjects()->Data[ 47776 ];

	UPgOnlineGameSearch_execGetMinSkillRating_Parms GetMinSkillRating_Parms;

	pFnGetMinSkillRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinSkillRating, &GetMinSkillRating_Parms, NULL );

	pFnGetMinSkillRating->FunctionFlags |= 0x400;

	return GetMinSkillRating_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetMinSkillRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            minRating                      ( CPF_Parm )

void UPgOnlineGameSearch::SetMinSkillRating ( int minRating )
{
	static UFunction* pFnSetMinSkillRating = NULL;

	if ( ! pFnSetMinSkillRating )
		pFnSetMinSkillRating = (UFunction*) UObject::GObjObjects()->Data[ 47774 ];

	UPgOnlineGameSearch_execSetMinSkillRating_Parms SetMinSkillRating_Parms;
	SetMinSkillRating_Parms.minRating = minRating;

	pFnSetMinSkillRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMinSkillRating, &SetMinSkillRating_Parms, NULL );

	pFnSetMinSkillRating->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSearch.GetMaxNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSearch::GetMaxNumPlayers ( )
{
	static UFunction* pFnGetMaxNumPlayers = NULL;

	if ( ! pFnGetMaxNumPlayers )
		pFnGetMaxNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47772 ];

	UPgOnlineGameSearch_execGetMaxNumPlayers_Parms GetMaxNumPlayers_Parms;

	pFnGetMaxNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxNumPlayers, &GetMaxNumPlayers_Parms, NULL );

	pFnGetMaxNumPlayers->FunctionFlags |= 0x400;

	return GetMaxNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetMaxNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UPgOnlineGameSearch::SetMaxNumPlayers ( int N )
{
	static UFunction* pFnSetMaxNumPlayers = NULL;

	if ( ! pFnSetMaxNumPlayers )
		pFnSetMaxNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47770 ];

	UPgOnlineGameSearch_execSetMaxNumPlayers_Parms SetMaxNumPlayers_Parms;
	SetMaxNumPlayers_Parms.N = N;

	pFnSetMaxNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMaxNumPlayers, &SetMaxNumPlayers_Parms, NULL );

	pFnSetMaxNumPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSearch.GetMinNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSearch::GetMinNumPlayers ( )
{
	static UFunction* pFnGetMinNumPlayers = NULL;

	if ( ! pFnGetMinNumPlayers )
		pFnGetMinNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47768 ];

	UPgOnlineGameSearch_execGetMinNumPlayers_Parms GetMinNumPlayers_Parms;

	pFnGetMinNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinNumPlayers, &GetMinNumPlayers_Parms, NULL );

	pFnGetMinNumPlayers->FunctionFlags |= 0x400;

	return GetMinNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetMinNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UPgOnlineGameSearch::SetMinNumPlayers ( int N )
{
	static UFunction* pFnSetMinNumPlayers = NULL;

	if ( ! pFnSetMinNumPlayers )
		pFnSetMinNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47766 ];

	UPgOnlineGameSearch_execSetMinNumPlayers_Parms SetMinNumPlayers_Parms;
	SetMinNumPlayers_Parms.N = N;

	pFnSetMinNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMinNumPlayers, &SetMinNumPlayers_Parms, NULL );

	pFnSetMinNumPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSearch.GetGameMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineGameSearch::GetGameMode ( )
{
	static UFunction* pFnGetGameMode = NULL;

	if ( ! pFnGetGameMode )
		pFnGetGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47764 ];

	UPgOnlineGameSearch_execGetGameMode_Parms GetGameMode_Parms;

	pFnGetGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameMode, &GetGameMode_Parms, NULL );

	pFnGetGameMode->FunctionFlags |= 0x400;

	return GetGameMode_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSearch.SetGameMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  gameMode                       ( CPF_Parm )

void UPgOnlineGameSearch::SetGameMode ( unsigned char gameMode )
{
	static UFunction* pFnSetGameMode = NULL;

	if ( ! pFnSetGameMode )
		pFnSetGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47762 ];

	UPgOnlineGameSearch_execSetGameMode_Parms SetGameMode_Parms;
	SetGameMode_Parms.gameMode = gameMode;

	pFnSetGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGameMode, &SetGameMode_Parms, NULL );

	pFnSetGameMode->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetOnlineGameState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineGameSettings::GetOnlineGameState ( )
{
	static UFunction* pFnGetOnlineGameState = NULL;

	if ( ! pFnGetOnlineGameState )
		pFnGetOnlineGameState = (UFunction*) UObject::GObjObjects()->Data[ 47891 ];

	UPgOnlineGameSettings_execGetOnlineGameState_Parms GetOnlineGameState_Parms;

	pFnGetOnlineGameState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOnlineGameState, &GetOnlineGameState_Parms, NULL );

	pFnGetOnlineGameState->FunctionFlags |= 0x400;

	return GetOnlineGameState_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetOnlineGameState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  S                              ( CPF_Parm )

void UPgOnlineGameSettings::SetOnlineGameState ( unsigned char S )
{
	static UFunction* pFnSetOnlineGameState = NULL;

	if ( ! pFnSetOnlineGameState )
		pFnSetOnlineGameState = (UFunction*) UObject::GObjObjects()->Data[ 47889 ];

	UPgOnlineGameSettings_execSetOnlineGameState_Parms SetOnlineGameState_Parms;
	SetOnlineGameState_Parms.S = S;

	pFnSetOnlineGameState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOnlineGameState, &SetOnlineGameState_Parms, NULL );

	pFnSetOnlineGameState->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetAvgPlayerRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetAvgPlayerRating ( )
{
	static UFunction* pFnGetAvgPlayerRating = NULL;

	if ( ! pFnGetAvgPlayerRating )
		pFnGetAvgPlayerRating = (UFunction*) UObject::GObjObjects()->Data[ 47887 ];

	UPgOnlineGameSettings_execGetAvgPlayerRating_Parms GetAvgPlayerRating_Parms;

	pFnGetAvgPlayerRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAvgPlayerRating, &GetAvgPlayerRating_Parms, NULL );

	pFnGetAvgPlayerRating->FunctionFlags |= 0x400;

	return GetAvgPlayerRating_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetAvgPlayerRating
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            avgRating                      ( CPF_Parm )

void UPgOnlineGameSettings::SetAvgPlayerRating ( int avgRating )
{
	static UFunction* pFnSetAvgPlayerRating = NULL;

	if ( ! pFnSetAvgPlayerRating )
		pFnSetAvgPlayerRating = (UFunction*) UObject::GObjObjects()->Data[ 47885 ];

	UPgOnlineGameSettings_execSetAvgPlayerRating_Parms SetAvgPlayerRating_Parms;
	SetAvgPlayerRating_Parms.avgRating = avgRating;

	pFnSetAvgPlayerRating->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetAvgPlayerRating, &SetAvgPlayerRating_Parms, NULL );

	pFnSetAvgPlayerRating->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetTimeCurrent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetTimeCurrent ( )
{
	static UFunction* pFnGetTimeCurrent = NULL;

	if ( ! pFnGetTimeCurrent )
		pFnGetTimeCurrent = (UFunction*) UObject::GObjObjects()->Data[ 47883 ];

	UPgOnlineGameSettings_execGetTimeCurrent_Parms GetTimeCurrent_Parms;

	pFnGetTimeCurrent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimeCurrent, &GetTimeCurrent_Parms, NULL );

	pFnGetTimeCurrent->FunctionFlags |= 0x400;

	return GetTimeCurrent_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetTimeCurrent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Time                           ( CPF_Parm )

void UPgOnlineGameSettings::SetTimeCurrent ( int Time )
{
	static UFunction* pFnSetTimeCurrent = NULL;

	if ( ! pFnSetTimeCurrent )
		pFnSetTimeCurrent = (UFunction*) UObject::GObjObjects()->Data[ 47881 ];

	UPgOnlineGameSettings_execSetTimeCurrent_Parms SetTimeCurrent_Parms;
	SetTimeCurrent_Parms.Time = Time;

	pFnSetTimeCurrent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTimeCurrent, &SetTimeCurrent_Parms, NULL );

	pFnSetTimeCurrent->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetTimeLimit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetTimeLimit ( )
{
	static UFunction* pFnGetTimeLimit = NULL;

	if ( ! pFnGetTimeLimit )
		pFnGetTimeLimit = (UFunction*) UObject::GObjObjects()->Data[ 47879 ];

	UPgOnlineGameSettings_execGetTimeLimit_Parms GetTimeLimit_Parms;

	pFnGetTimeLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTimeLimit, &GetTimeLimit_Parms, NULL );

	pFnGetTimeLimit->FunctionFlags |= 0x400;

	return GetTimeLimit_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetTimeLimit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Time                           ( CPF_Parm )

void UPgOnlineGameSettings::SetTimeLimit ( int Time )
{
	static UFunction* pFnSetTimeLimit = NULL;

	if ( ! pFnSetTimeLimit )
		pFnSetTimeLimit = (UFunction*) UObject::GObjObjects()->Data[ 47877 ];

	UPgOnlineGameSettings_execSetTimeLimit_Parms SetTimeLimit_Parms;
	SetTimeLimit_Parms.Time = Time;

	pFnSetTimeLimit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTimeLimit, &SetTimeLimit_Parms, NULL );

	pFnSetTimeLimit->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetDLCFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetDLCFlags ( )
{
	static UFunction* pFnGetDLCFlags = NULL;

	if ( ! pFnGetDLCFlags )
		pFnGetDLCFlags = (UFunction*) UObject::GObjObjects()->Data[ 47875 ];

	UPgOnlineGameSettings_execGetDLCFlags_Parms GetDLCFlags_Parms;

	pFnGetDLCFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDLCFlags, &GetDLCFlags_Parms, NULL );

	pFnGetDLCFlags->FunctionFlags |= 0x400;

	return GetDLCFlags_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetDLCFlags
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            DLCFlags                       ( CPF_Parm )

void UPgOnlineGameSettings::SetDLCFlags ( int DLCFlags )
{
	static UFunction* pFnSetDLCFlags = NULL;

	if ( ! pFnSetDLCFlags )
		pFnSetDLCFlags = (UFunction*) UObject::GObjObjects()->Data[ 47873 ];

	UPgOnlineGameSettings_execSetDLCFlags_Parms SetDLCFlags_Parms;
	SetDLCFlags_Parms.DLCFlags = DLCFlags;

	pFnSetDLCFlags->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDLCFlags, &SetDLCFlags_Parms, NULL );

	pFnSetDLCFlags->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetMap ( )
{
	static UFunction* pFnGetMap = NULL;

	if ( ! pFnGetMap )
		pFnGetMap = (UFunction*) UObject::GObjObjects()->Data[ 47871 ];

	UPgOnlineGameSettings_execGetMap_Parms GetMap_Parms;

	pFnGetMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMap, &GetMap_Parms, NULL );

	pFnGetMap->FunctionFlags |= 0x400;

	return GetMap_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Map                            ( CPF_Parm )

void UPgOnlineGameSettings::SetMap ( int Map )
{
	static UFunction* pFnSetMap = NULL;

	if ( ! pFnSetMap )
		pFnSetMap = (UFunction*) UObject::GObjObjects()->Data[ 47869 ];

	UPgOnlineGameSettings_execSetMap_Parms SetMap_Parms;
	SetMap_Parms.Map = Map;

	pFnSetMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMap, &SetMap_Parms, NULL );

	pFnSetMap->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetGameMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgOnlineGameSettings::GetGameMode ( )
{
	static UFunction* pFnGetGameMode = NULL;

	if ( ! pFnGetGameMode )
		pFnGetGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47867 ];

	UPgOnlineGameSettings_execGetGameMode_Parms GetGameMode_Parms;

	pFnGetGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameMode, &GetGameMode_Parms, NULL );

	pFnGetGameMode->FunctionFlags |= 0x400;

	return GetGameMode_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetGameMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  gameMode                       ( CPF_Parm )

void UPgOnlineGameSettings::SetGameMode ( unsigned char gameMode )
{
	static UFunction* pFnSetGameMode = NULL;

	if ( ! pFnSetGameMode )
		pFnSetGameMode = (UFunction*) UObject::GObjObjects()->Data[ 47865 ];

	UPgOnlineGameSettings_execSetGameMode_Parms SetGameMode_Parms;
	SetGameMode_Parms.gameMode = gameMode;

	pFnSetGameMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGameMode, &SetGameMode_Parms, NULL );

	pFnSetGameMode->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetNumPlayerSlots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetNumPlayerSlots ( )
{
	static UFunction* pFnGetNumPlayerSlots = NULL;

	if ( ! pFnGetNumPlayerSlots )
		pFnGetNumPlayerSlots = (UFunction*) UObject::GObjObjects()->Data[ 47863 ];

	UPgOnlineGameSettings_execGetNumPlayerSlots_Parms GetNumPlayerSlots_Parms;

	pFnGetNumPlayerSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumPlayerSlots, &GetNumPlayerSlots_Parms, NULL );

	pFnGetNumPlayerSlots->FunctionFlags |= 0x400;

	return GetNumPlayerSlots_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetNumPlayerSlots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UPgOnlineGameSettings::SetNumPlayerSlots ( int N )
{
	static UFunction* pFnSetNumPlayerSlots = NULL;

	if ( ! pFnSetNumPlayerSlots )
		pFnSetNumPlayerSlots = (UFunction*) UObject::GObjObjects()->Data[ 47861 ];

	UPgOnlineGameSettings_execSetNumPlayerSlots_Parms SetNumPlayerSlots_Parms;
	SetNumPlayerSlots_Parms.N = N;

	pFnSetNumPlayerSlots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNumPlayerSlots, &SetNumPlayerSlots_Parms, NULL );

	pFnSetNumPlayerSlots->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineGameSettings::GetNumPlayers ( )
{
	static UFunction* pFnGetNumPlayers = NULL;

	if ( ! pFnGetNumPlayers )
		pFnGetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47859 ];

	UPgOnlineGameSettings_execGetNumPlayers_Parms GetNumPlayers_Parms;

	pFnGetNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumPlayers, &GetNumPlayers_Parms, NULL );

	pFnGetNumPlayers->FunctionFlags |= 0x400;

	return GetNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            N                              ( CPF_Parm )

void UPgOnlineGameSettings::SetNumPlayers ( int N )
{
	static UFunction* pFnSetNumPlayers = NULL;

	if ( ! pFnSetNumPlayers )
		pFnSetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 47857 ];

	UPgOnlineGameSettings_execSetNumPlayers_Parms SetNumPlayers_Parms;
	SetNumPlayers_Parms.N = N;

	pFnSetNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNumPlayers, &SetNumPlayers_Parms, NULL );

	pFnSetNumPlayers->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetIsPublic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineGameSettings::GetIsPublic ( )
{
	static UFunction* pFnGetIsPublic = NULL;

	if ( ! pFnGetIsPublic )
		pFnGetIsPublic = (UFunction*) UObject::GObjObjects()->Data[ 47855 ];

	UPgOnlineGameSettings_execGetIsPublic_Parms GetIsPublic_Parms;

	pFnGetIsPublic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsPublic, &GetIsPublic_Parms, NULL );

	pFnGetIsPublic->FunctionFlags |= 0x400;

	return GetIsPublic_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetIsPublic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UPgOnlineGameSettings::SetIsPublic ( unsigned long B )
{
	static UFunction* pFnSetIsPublic = NULL;

	if ( ! pFnSetIsPublic )
		pFnSetIsPublic = (UFunction*) UObject::GObjObjects()->Data[ 47853 ];

	UPgOnlineGameSettings_execSetIsPublic_Parms SetIsPublic_Parms;
	SetIsPublic_Parms.B = B;

	pFnSetIsPublic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIsPublic, &SetIsPublic_Parms, NULL );

	pFnSetIsPublic->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetIsRanked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOnlineGameSettings::GetIsRanked ( )
{
	static UFunction* pFnGetIsRanked = NULL;

	if ( ! pFnGetIsRanked )
		pFnGetIsRanked = (UFunction*) UObject::GObjObjects()->Data[ 47851 ];

	UPgOnlineGameSettings_execGetIsRanked_Parms GetIsRanked_Parms;

	pFnGetIsRanked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsRanked, &GetIsRanked_Parms, NULL );

	pFnGetIsRanked->FunctionFlags |= 0x400;

	return GetIsRanked_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetIsRanked
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UPgOnlineGameSettings::SetIsRanked ( unsigned long B )
{
	static UFunction* pFnSetIsRanked = NULL;

	if ( ! pFnSetIsRanked )
		pFnSetIsRanked = (UFunction*) UObject::GObjObjects()->Data[ 47849 ];

	UPgOnlineGameSettings_execSetIsRanked_Parms SetIsRanked_Parms;
	SetIsRanked_Parms.B = B;

	pFnSetIsRanked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIsRanked, &SetIsRanked_Parms, NULL );

	pFnSetIsRanked->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.GetHostName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgOnlineGameSettings::GetHostName ( )
{
	static UFunction* pFnGetHostName = NULL;

	if ( ! pFnGetHostName )
		pFnGetHostName = (UFunction*) UObject::GObjObjects()->Data[ 47847 ];

	UPgOnlineGameSettings_execGetHostName_Parms GetHostName_Parms;

	pFnGetHostName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetHostName, &GetHostName_Parms, NULL );

	pFnGetHostName->FunctionFlags |= 0x400;

	return GetHostName_Parms.ReturnValue;
};

// Function GridGame.PgOnlineGameSettings.SetHostName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

void UPgOnlineGameSettings::SetHostName ( struct FString S )
{
	static UFunction* pFnSetHostName = NULL;

	if ( ! pFnSetHostName )
		pFnSetHostName = (UFunction*) UObject::GObjObjects()->Data[ 47845 ];

	UPgOnlineGameSettings_execSetHostName_Parms SetHostName_Parms;
	memcpy ( &SetHostName_Parms.S, &S, 0xC );

	pFnSetHostName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHostName, &SetHostName_Parms, NULL );

	pFnSetHostName->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineGameSettings.Copy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgOnlineGameSettings*   GameSettings                   ( CPF_Parm )

void UPgOnlineGameSettings::Copy ( class UPgOnlineGameSettings* GameSettings )
{
	static UFunction* pFnCopy = NULL;

	if ( ! pFnCopy )
		pFnCopy = (UFunction*) UObject::GObjObjects()->Data[ 47843 ];

	UPgOnlineGameSettings_execCopy_Parms Copy_Parms;
	Copy_Parms.GameSettings = GameSettings;

	pFnCopy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopy, &Copy_Parms, NULL );

	pFnCopy->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.GoOnline
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::GoOnline ( )
{
	static UFunction* pFnGoOnline = NULL;

	if ( ! pFnGoOnline )
		pFnGoOnline = (UFunction*) UObject::GObjObjects()->Data[ 48554 ];

	UPgOnlineLoginManager_execGoOnline_Parms GoOnline_Parms;

	pFnGoOnline->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGoOnline, &GoOnline_Parms, NULL );

	pFnGoOnline->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.SetLocalPlayerControllerId
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            NewControllerId                ( CPF_Parm )

void UPgOnlineLoginManager::eventSetLocalPlayerControllerId ( int NewControllerId )
{
	static UFunction* pFnSetLocalPlayerControllerId = NULL;

	if ( ! pFnSetLocalPlayerControllerId )
		pFnSetLocalPlayerControllerId = (UFunction*) UObject::GObjObjects()->Data[ 48550 ];

	UPgOnlineLoginManager_eventSetLocalPlayerControllerId_Parms SetLocalPlayerControllerId_Parms;
	SetLocalPlayerControllerId_Parms.NewControllerId = NewControllerId;

	this->ProcessEvent ( pFnSetLocalPlayerControllerId, &SetLocalPlayerControllerId_Parms, NULL );
};

// Function GridGame.PgOnlineLoginManager._ShowContentMarketplaceUI
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UOnlineSubsystem*        oss                            ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// int                            CategoryMask                   ( CPF_Parm )
// int                            OfferId                        ( CPF_Parm )

bool UPgOnlineLoginManager::event_ShowContentMarketplaceUI ( class UOnlineSubsystem* oss, unsigned char LocalUserNum, int CategoryMask, int OfferId )
{
	static UFunction* pFn_ShowContentMarketplaceUI = NULL;

	if ( ! pFn_ShowContentMarketplaceUI )
		pFn_ShowContentMarketplaceUI = (UFunction*) UObject::GObjObjects()->Data[ 48544 ];

	UPgOnlineLoginManager_event_ShowContentMarketplaceUI_Parms _ShowContentMarketplaceUI_Parms;
	_ShowContentMarketplaceUI_Parms.oss = oss;
	_ShowContentMarketplaceUI_Parms.LocalUserNum = LocalUserNum;
	_ShowContentMarketplaceUI_Parms.CategoryMask = CategoryMask;
	_ShowContentMarketplaceUI_Parms.OfferId = OfferId;

	this->ProcessEvent ( pFn_ShowContentMarketplaceUI, &_ShowContentMarketplaceUI_Parms, NULL );

	return _ShowContentMarketplaceUI_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.ShowContentMarketplaceUI
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// int                            CategoryMask                   ( CPF_OptionalParm | CPF_Parm )
// int                            OfferId                        ( CPF_OptionalParm | CPF_Parm )

bool UPgOnlineLoginManager::ShowContentMarketplaceUI ( unsigned char LocalUserNum, int CategoryMask, int OfferId )
{
	static UFunction* pFnShowContentMarketplaceUI = NULL;

	if ( ! pFnShowContentMarketplaceUI )
		pFnShowContentMarketplaceUI = (UFunction*) UObject::GObjObjects()->Data[ 48539 ];

	UPgOnlineLoginManager_execShowContentMarketplaceUI_Parms ShowContentMarketplaceUI_Parms;
	ShowContentMarketplaceUI_Parms.LocalUserNum = LocalUserNum;
	ShowContentMarketplaceUI_Parms.CategoryMask = CategoryMask;
	ShowContentMarketplaceUI_Parms.OfferId = OfferId;

	pFnShowContentMarketplaceUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowContentMarketplaceUI, &ShowContentMarketplaceUI_Parms, NULL );

	pFnShowContentMarketplaceUI->FunctionFlags |= 0x400;

	return ShowContentMarketplaceUI_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.GetMainControllerId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineLoginManager::GetMainControllerId ( )
{
	static UFunction* pFnGetMainControllerId = NULL;

	if ( ! pFnGetMainControllerId )
		pFnGetMainControllerId = (UFunction*) UObject::GObjObjects()->Data[ 48537 ];

	UPgOnlineLoginManager_execGetMainControllerId_Parms GetMainControllerId_Parms;

	pFnGetMainControllerId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMainControllerId, &GetMainControllerId_Parms, NULL );

	pFnGetMainControllerId->FunctionFlags |= 0x400;

	return GetMainControllerId_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.SetMainControllerId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            loginControllerId              ( CPF_Parm )

void UPgOnlineLoginManager::SetMainControllerId ( int loginControllerId )
{
	static UFunction* pFnSetMainControllerId = NULL;

	if ( ! pFnSetMainControllerId )
		pFnSetMainControllerId = (UFunction*) UObject::GObjObjects()->Data[ 48535 ];

	UPgOnlineLoginManager_execSetMainControllerId_Parms SetMainControllerId_Parms;
	SetMainControllerId_Parms.loginControllerId = loginControllerId;

	pFnSetMainControllerId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMainControllerId, &SetMainControllerId_Parms, NULL );

	pFnSetMainControllerId->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.HanldeLoginStatusChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ControllerId                   ( CPF_Parm )

void UPgOnlineLoginManager::HanldeLoginStatusChange ( unsigned char ControllerId )
{
	static UFunction* pFnHanldeLoginStatusChange = NULL;

	if ( ! pFnHanldeLoginStatusChange )
		pFnHanldeLoginStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 48533 ];

	UPgOnlineLoginManager_execHanldeLoginStatusChange_Parms HanldeLoginStatusChange_Parms;
	HanldeLoginStatusChange_Parms.ControllerId = ControllerId;

	pFnHanldeLoginStatusChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHanldeLoginStatusChange, &HanldeLoginStatusChange_Parms, NULL );

	pFnHanldeLoginStatusChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.LoginAttempt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  loginControllerId              ( CPF_Parm )
// unsigned char                  minReqLoginStatus              ( CPF_Parm )

void UPgOnlineLoginManager::LoginAttempt ( unsigned char loginControllerId, unsigned char minReqLoginStatus )
{
	static UFunction* pFnLoginAttempt = NULL;

	if ( ! pFnLoginAttempt )
		pFnLoginAttempt = (UFunction*) UObject::GObjObjects()->Data[ 48530 ];

	UPgOnlineLoginManager_execLoginAttempt_Parms LoginAttempt_Parms;
	LoginAttempt_Parms.loginControllerId = loginControllerId;
	LoginAttempt_Parms.minReqLoginStatus = minReqLoginStatus;

	pFnLoginAttempt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoginAttempt, &LoginAttempt_Parms, NULL );

	pFnLoginAttempt->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager._GetPlayerNickname
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UOnlineSubsystem*        oss                            ( CPF_Parm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )

struct FString UPgOnlineLoginManager::event_GetPlayerNickname ( class UOnlineSubsystem* oss, unsigned char LocalUserNum )
{
	static UFunction* pFn_GetPlayerNickname = NULL;

	if ( ! pFn_GetPlayerNickname )
		pFn_GetPlayerNickname = (UFunction*) UObject::GObjObjects()->Data[ 48526 ];

	UPgOnlineLoginManager_event_GetPlayerNickname_Parms _GetPlayerNickname_Parms;
	_GetPlayerNickname_Parms.oss = oss;
	_GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFn_GetPlayerNickname, &_GetPlayerNickname_Parms, NULL );

	return _GetPlayerNickname_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.GetPlayerNickname
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  LocalUserNum                   ( CPF_Parm )

struct FString UPgOnlineLoginManager::GetPlayerNickname ( unsigned char LocalUserNum )
{
	static UFunction* pFnGetPlayerNickname = NULL;

	if ( ! pFnGetPlayerNickname )
		pFnGetPlayerNickname = (UFunction*) UObject::GObjObjects()->Data[ 48523 ];

	UPgOnlineLoginManager_execGetPlayerNickname_Parms GetPlayerNickname_Parms;
	GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;

	pFnGetPlayerNickname->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerNickname, &GetPlayerNickname_Parms, NULL );

	pFnGetPlayerNickname->FunctionFlags |= 0x400;

	return GetPlayerNickname_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.GetLoginStatus
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// unsigned long                  useCache                       ( CPF_OptionalParm | CPF_Parm )

unsigned char UPgOnlineLoginManager::GetLoginStatus ( unsigned char LocalUserNum, unsigned long useCache )
{
	static UFunction* pFnGetLoginStatus = NULL;

	if ( ! pFnGetLoginStatus )
		pFnGetLoginStatus = (UFunction*) UObject::GObjObjects()->Data[ 48519 ];

	UPgOnlineLoginManager_execGetLoginStatus_Parms GetLoginStatus_Parms;
	GetLoginStatus_Parms.LocalUserNum = LocalUserNum;
	GetLoginStatus_Parms.useCache = useCache;

	pFnGetLoginStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoginStatus, &GetLoginStatus_Parms, NULL );

	pFnGetLoginStatus->FunctionFlags |= 0x400;

	return GetLoginStatus_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.GetLocalPlayerAt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ULocalPlayer*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class ULocalPlayer* UPgOnlineLoginManager::GetLocalPlayerAt ( int Index )
{
	static UFunction* pFnGetLocalPlayerAt = NULL;

	if ( ! pFnGetLocalPlayerAt )
		pFnGetLocalPlayerAt = (UFunction*) UObject::GObjObjects()->Data[ 48516 ];

	UPgOnlineLoginManager_execGetLocalPlayerAt_Parms GetLocalPlayerAt_Parms;
	GetLocalPlayerAt_Parms.Index = Index;

	pFnGetLocalPlayerAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLocalPlayerAt, &GetLocalPlayerAt_Parms, NULL );

	pFnGetLocalPlayerAt->FunctionFlags |= 0x400;

	return GetLocalPlayerAt_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.GetNumLocalPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineLoginManager::GetNumLocalPlayers ( )
{
	static UFunction* pFnGetNumLocalPlayers = NULL;

	if ( ! pFnGetNumLocalPlayers )
		pFnGetNumLocalPlayers = (UFunction*) UObject::GObjObjects()->Data[ 48514 ];

	UPgOnlineLoginManager_execGetNumLocalPlayers_Parms GetNumLocalPlayers_Parms;

	pFnGetNumLocalPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumLocalPlayers, &GetNumLocalPlayers_Parms, NULL );

	pFnGetNumLocalPlayers->FunctionFlags |= 0x400;

	return GetNumLocalPlayers_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.OnLoginAttemptComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  loginAttemptResult             ( CPF_Parm )
// unsigned char                  ControllerId                   ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginAttemptComplete ( unsigned char loginAttemptResult, unsigned char ControllerId )
{
	static UFunction* pFnOnLoginAttemptComplete = NULL;

	if ( ! pFnOnLoginAttemptComplete )
		pFnOnLoginAttemptComplete = (UFunction*) UObject::GObjObjects()->Data[ 48511 ];

	UPgOnlineLoginManager_execOnLoginAttemptComplete_Parms OnLoginAttemptComplete_Parms;
	OnLoginAttemptComplete_Parms.loginAttemptResult = loginAttemptResult;
	OnLoginAttemptComplete_Parms.ControllerId = ControllerId;

	pFnOnLoginAttemptComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginAttemptComplete, &OnLoginAttemptComplete_Parms, NULL );

	pFnOnLoginAttemptComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.Cleanup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 48510 ];

	UPgOnlineLoginManager_execCleanup_Parms Cleanup_Parms;

	pFnCleanup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );

	pFnCleanup->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.Init
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 48509 ];

	UPgOnlineLoginManager_execInit_Parms Init_Parms;

	pFnInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	pFnInit->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.ClearPlayerInterfaceLoginDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        oss                            ( CPF_Parm )

void UPgOnlineLoginManager::eventClearPlayerInterfaceLoginDelegates ( class UOnlineSubsystem* oss )
{
	static UFunction* pFnClearPlayerInterfaceLoginDelegates = NULL;

	if ( ! pFnClearPlayerInterfaceLoginDelegates )
		pFnClearPlayerInterfaceLoginDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48507 ];

	UPgOnlineLoginManager_eventClearPlayerInterfaceLoginDelegates_Parms ClearPlayerInterfaceLoginDelegates_Parms;
	ClearPlayerInterfaceLoginDelegates_Parms.oss = oss;

	this->ProcessEvent ( pFnClearPlayerInterfaceLoginDelegates, &ClearPlayerInterfaceLoginDelegates_Parms, NULL );
};

// Function GridGame.PgOnlineLoginManager.AddPlayerInterfaceLoginDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        oss                            ( CPF_Parm )

void UPgOnlineLoginManager::eventAddPlayerInterfaceLoginDelegates ( class UOnlineSubsystem* oss )
{
	static UFunction* pFnAddPlayerInterfaceLoginDelegates = NULL;

	if ( ! pFnAddPlayerInterfaceLoginDelegates )
		pFnAddPlayerInterfaceLoginDelegates = (UFunction*) UObject::GObjObjects()->Data[ 48505 ];

	UPgOnlineLoginManager_eventAddPlayerInterfaceLoginDelegates_Parms AddPlayerInterfaceLoginDelegates_Parms;
	AddPlayerInterfaceLoginDelegates_Parms.oss = oss;

	this->ProcessEvent ( pFnAddPlayerInterfaceLoginDelegates, &AddPlayerInterfaceLoginDelegates_Parms, NULL );
};

// Function GridGame.PgOnlineLoginManager.ProfileLoaded
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ControllerId                   ( CPF_Parm )

void UPgOnlineLoginManager::ProfileLoaded ( unsigned char ControllerId )
{
	static UFunction* pFnProfileLoaded = NULL;

	if ( ! pFnProfileLoaded )
		pFnProfileLoaded = (UFunction*) UObject::GObjObjects()->Data[ 48503 ];

	UPgOnlineLoginManager_execProfileLoaded_Parms ProfileLoaded_Parms;
	ProfileLoaded_Parms.ControllerId = ControllerId;

	pFnProfileLoaded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProfileLoaded, &ProfileLoaded_Parms, NULL );

	pFnProfileLoaded->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.NeedProfileReload
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ControllerId                   ( CPF_Parm )

bool UPgOnlineLoginManager::NeedProfileReload ( unsigned char ControllerId )
{
	static UFunction* pFnNeedProfileReload = NULL;

	if ( ! pFnNeedProfileReload )
		pFnNeedProfileReload = (UFunction*) UObject::GObjObjects()->Data[ 48500 ];

	UPgOnlineLoginManager_execNeedProfileReload_Parms NeedProfileReload_Parms;
	NeedProfileReload_Parms.ControllerId = ControllerId;

	pFnNeedProfileReload->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNeedProfileReload, &NeedProfileReload_Parms, NULL );

	pFnNeedProfileReload->FunctionFlags |= 0x400;

	return NeedProfileReload_Parms.ReturnValue;
};

// Function GridGame.PgOnlineLoginManager.NotifyStorageDeviceChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::NotifyStorageDeviceChanged ( )
{
	static UFunction* pFnNotifyStorageDeviceChanged = NULL;

	if ( ! pFnNotifyStorageDeviceChanged )
		pFnNotifyStorageDeviceChanged = (UFunction*) UObject::GObjObjects()->Data[ 48499 ];

	UPgOnlineLoginManager_execNotifyStorageDeviceChanged_Parms NotifyStorageDeviceChanged_Parms;

	pFnNotifyStorageDeviceChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyStorageDeviceChanged, &NotifyStorageDeviceChanged_Parms, NULL );

	pFnNotifyStorageDeviceChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnPartyChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::OnPartyChange ( )
{
	static UFunction* pFnOnPartyChange = NULL;

	if ( ! pFnOnPartyChange )
		pFnOnPartyChange = (UFunction*) UObject::GObjObjects()->Data[ 48498 ];

	UPgOnlineLoginManager_execOnPartyChange_Parms OnPartyChange_Parms;

	pFnOnPartyChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnPartyChange, &OnPartyChange_Parms, NULL );

	pFnOnPartyChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginCancelled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLoginManager::OnLoginCancelled ( )
{
	static UFunction* pFnOnLoginCancelled = NULL;

	if ( ! pFnOnLoginCancelled )
		pFnOnLoginCancelled = (UFunction*) UObject::GObjObjects()->Data[ 48497 ];

	UPgOnlineLoginManager_execOnLoginCancelled_Parms OnLoginCancelled_Parms;

	pFnOnLoginCancelled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginCancelled, &OnLoginCancelled_Parms, NULL );

	pFnOnLoginCancelled->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP6
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP6 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP6 = NULL;

	if ( ! pFnOnLoginStatusChangeP6 )
		pFnOnLoginStatusChangeP6 = (UFunction*) UObject::GObjObjects()->Data[ 48494 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP6_Parms OnLoginStatusChangeP6_Parms;
	OnLoginStatusChangeP6_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP6_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP6->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP6, &OnLoginStatusChangeP6_Parms, NULL );

	pFnOnLoginStatusChangeP6->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP5
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP5 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP5 = NULL;

	if ( ! pFnOnLoginStatusChangeP5 )
		pFnOnLoginStatusChangeP5 = (UFunction*) UObject::GObjObjects()->Data[ 48491 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP5_Parms OnLoginStatusChangeP5_Parms;
	OnLoginStatusChangeP5_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP5_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP5->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP5, &OnLoginStatusChangeP5_Parms, NULL );

	pFnOnLoginStatusChangeP5->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP4
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP4 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP4 = NULL;

	if ( ! pFnOnLoginStatusChangeP4 )
		pFnOnLoginStatusChangeP4 = (UFunction*) UObject::GObjObjects()->Data[ 48488 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP4_Parms OnLoginStatusChangeP4_Parms;
	OnLoginStatusChangeP4_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP4_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP4->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP4, &OnLoginStatusChangeP4_Parms, NULL );

	pFnOnLoginStatusChangeP4->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP3
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP3 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP3 = NULL;

	if ( ! pFnOnLoginStatusChangeP3 )
		pFnOnLoginStatusChangeP3 = (UFunction*) UObject::GObjObjects()->Data[ 48485 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP3_Parms OnLoginStatusChangeP3_Parms;
	OnLoginStatusChangeP3_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP3_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP3->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP3, &OnLoginStatusChangeP3_Parms, NULL );

	pFnOnLoginStatusChangeP3->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP2
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP2 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP2 = NULL;

	if ( ! pFnOnLoginStatusChangeP2 )
		pFnOnLoginStatusChangeP2 = (UFunction*) UObject::GObjObjects()->Data[ 48482 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP2_Parms OnLoginStatusChangeP2_Parms;
	OnLoginStatusChangeP2_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP2_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP2->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP2, &OnLoginStatusChangeP2_Parms, NULL );

	pFnOnLoginStatusChangeP2->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP1
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP1 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP1 = NULL;

	if ( ! pFnOnLoginStatusChangeP1 )
		pFnOnLoginStatusChangeP1 = (UFunction*) UObject::GObjObjects()->Data[ 48479 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP1_Parms OnLoginStatusChangeP1_Parms;
	OnLoginStatusChangeP1_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP1_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP1->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP1, &OnLoginStatusChangeP1_Parms, NULL );

	pFnOnLoginStatusChangeP1->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginStatusChangeP0
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  netStatus                      ( CPF_Parm )
// struct FUniqueNetId            NewId                          ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginStatusChangeP0 ( unsigned char netStatus, struct FUniqueNetId NewId )
{
	static UFunction* pFnOnLoginStatusChangeP0 = NULL;

	if ( ! pFnOnLoginStatusChangeP0 )
		pFnOnLoginStatusChangeP0 = (UFunction*) UObject::GObjObjects()->Data[ 48476 ];

	UPgOnlineLoginManager_execOnLoginStatusChangeP0_Parms OnLoginStatusChangeP0_Parms;
	OnLoginStatusChangeP0_Parms.netStatus = netStatus;
	memcpy ( &OnLoginStatusChangeP0_Parms.NewId, &NewId, 0x2C );

	pFnOnLoginStatusChangeP0->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginStatusChangeP0, &OnLoginStatusChangeP0_Parms, NULL );

	pFnOnLoginStatusChangeP0->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLoginChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )

void UPgOnlineLoginManager::OnLoginChange ( unsigned char LocalUserNum )
{
	static UFunction* pFnOnLoginChange = NULL;

	if ( ! pFnOnLoginChange )
		pFnOnLoginChange = (UFunction*) UObject::GObjObjects()->Data[ 48474 ];

	UPgOnlineLoginManager_execOnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;

	pFnOnLoginChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLoginChange, &OnLoginChange_Parms, NULL );

	pFnOnLoginChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnConnectionStatusChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ConnectionStatus               ( CPF_Parm )

void UPgOnlineLoginManager::OnConnectionStatusChange ( unsigned char ConnectionStatus )
{
	static UFunction* pFnOnConnectionStatusChange = NULL;

	if ( ! pFnOnConnectionStatusChange )
		pFnOnConnectionStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 48472 ];

	UPgOnlineLoginManager_execOnConnectionStatusChange_Parms OnConnectionStatusChange_Parms;
	OnConnectionStatusChange_Parms.ConnectionStatus = ConnectionStatus;

	pFnOnConnectionStatusChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnConnectionStatusChange, &OnConnectionStatusChange_Parms, NULL );

	pFnOnConnectionStatusChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnLinkStatusChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bIsConnected                   ( CPF_Parm )

void UPgOnlineLoginManager::OnLinkStatusChanged ( unsigned long bIsConnected )
{
	static UFunction* pFnOnLinkStatusChanged = NULL;

	if ( ! pFnOnLinkStatusChanged )
		pFnOnLinkStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 48470 ];

	UPgOnlineLoginManager_execOnLinkStatusChanged_Parms OnLinkStatusChanged_Parms;
	OnLinkStatusChanged_Parms.bIsConnected = bIsConnected;

	pFnOnLinkStatusChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnLinkStatusChanged, &OnLinkStatusChanged_Parms, NULL );

	pFnOnLinkStatusChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLoginManager.OnExternalUIChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bIsOpening                     ( CPF_Parm )

void UPgOnlineLoginManager::OnExternalUIChanged ( unsigned long bIsOpening )
{
	static UFunction* pFnOnExternalUIChanged = NULL;

	if ( ! pFnOnExternalUIChanged )
		pFnOnExternalUIChanged = (UFunction*) UObject::GObjObjects()->Data[ 48468 ];

	UPgOnlineLoginManager_execOnExternalUIChanged_Parms OnExternalUIChanged_Parms;
	OnExternalUIChanged_Parms.bIsOpening = bIsOpening;

	pFnOnExternalUIChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnExternalUIChanged, &OnExternalUIChanged_Parms, NULL );

	pFnOnExternalUIChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite.SetQWordStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            StatId                         ( CPF_Parm )
// struct FQWord                  Value                          ( CPF_Parm )

void UPgOnlineLeaderboardWrite::SetQWordStat ( int StatId, struct FQWord Value )
{
	static UFunction* pFnSetQWordStat = NULL;

	if ( ! pFnSetQWordStat )
		pFnSetQWordStat = (UFunction*) UObject::GObjObjects()->Data[ 48105 ];

	UPgOnlineLeaderboardWrite_execSetQWordStat_Parms SetQWordStat_Parms;
	SetQWordStat_Parms.StatId = StatId;
	memcpy ( &SetQWordStat_Parms.Value, &Value, 0x8 );

	pFnSetQWordStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetQWordStat, &SetQWordStat_Parms, NULL );

	pFnSetQWordStat->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48104 ];

	UPgOnlineLeaderboardWrite_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite.UpdateFromPRI
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite::eventUpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48102 ];

	UPgOnlineLeaderboardWrite_eventUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );
};

// Function GridGame.PgOnlineLeaderboardWrite_ELO.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_ELO::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48158 ];

	UPgOnlineLeaderboardWrite_ELO_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_ELO.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_ELO::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48156 ];

	UPgOnlineLeaderboardWrite_ELO_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_EXP.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_EXP::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48209 ];

	UPgOnlineLeaderboardWrite_EXP_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_EXP.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_EXP::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48207 ];

	UPgOnlineLeaderboardWrite_EXP_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeBR.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_GameModeBR::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48260 ];

	UPgOnlineLeaderboardWrite_GameModeBR_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeBR.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_GameModeBR::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48258 ];

	UPgOnlineLeaderboardWrite_GameModeBR_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeDM.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_GameModeDM::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48311 ];

	UPgOnlineLeaderboardWrite_GameModeDM_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeDM.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_GameModeDM::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48309 ];

	UPgOnlineLeaderboardWrite_GameModeDM_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModePM.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_GameModePM::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48362 ];

	UPgOnlineLeaderboardWrite_GameModePM_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModePM.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_GameModePM::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48360 ];

	UPgOnlineLeaderboardWrite_GameModePM_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeTDM.UpdateFromLocalData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgOnlineLeaderboardWrite_GameModeTDM::UpdateFromLocalData ( )
{
	static UFunction* pFnUpdateFromLocalData = NULL;

	if ( ! pFnUpdateFromLocalData )
		pFnUpdateFromLocalData = (UFunction*) UObject::GObjObjects()->Data[ 48413 ];

	UPgOnlineLeaderboardWrite_GameModeTDM_execUpdateFromLocalData_Parms UpdateFromLocalData_Parms;

	pFnUpdateFromLocalData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromLocalData, &UpdateFromLocalData_Parms, NULL );

	pFnUpdateFromLocalData->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineLeaderboardWrite_GameModeTDM.UpdateFromPRI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UPgOnlineLeaderboardWrite_GameModeTDM::UpdateFromPRI ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateFromPRI = NULL;

	if ( ! pFnUpdateFromPRI )
		pFnUpdateFromPRI = (UFunction*) UObject::GObjObjects()->Data[ 48411 ];

	UPgOnlineLeaderboardWrite_GameModeTDM_execUpdateFromPRI_Parms UpdateFromPRI_Parms;
	UpdateFromPRI_Parms.PRI = PRI;

	pFnUpdateFromPRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateFromPRI, &UpdateFromPRI_Parms, NULL );

	pFnUpdateFromPRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgOnlineEnumerations.GetModeUIProfile
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  modeIndex                      ( CPF_Parm )
// struct FString                 ProfileName                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgOnlineEnumerations::GetModeUIProfile ( unsigned char modeIndex, struct FString* ProfileName )
{
	static UFunction* pFnGetModeUIProfile = NULL;

	if ( ! pFnGetModeUIProfile )
		pFnGetModeUIProfile = (UFunction*) UObject::GObjObjects()->Data[ 44828 ];

	UPgOnlineEnumerations_execGetModeUIProfile_Parms GetModeUIProfile_Parms;
	GetModeUIProfile_Parms.modeIndex = modeIndex;

	pFnGetModeUIProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModeUIProfile, &GetModeUIProfile_Parms, NULL );

	pFnGetModeUIProfile->FunctionFlags |= 0x400;

	if ( ProfileName )
		memcpy ( ProfileName, &GetModeUIProfile_Parms.ProfileName, 0xC );

	return GetModeUIProfile_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetModeRuleset
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  modeIndex                      ( CPF_Parm )
// struct FName                   rulesetName                    ( CPF_Parm | CPF_OutParm )

bool UPgOnlineEnumerations::GetModeRuleset ( unsigned char modeIndex, struct FName* rulesetName )
{
	static UFunction* pFnGetModeRuleset = NULL;

	if ( ! pFnGetModeRuleset )
		pFnGetModeRuleset = (UFunction*) UObject::GObjObjects()->Data[ 44824 ];

	UPgOnlineEnumerations_execGetModeRuleset_Parms GetModeRuleset_Parms;
	GetModeRuleset_Parms.modeIndex = modeIndex;

	pFnGetModeRuleset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModeRuleset, &GetModeRuleset_Parms, NULL );

	pFnGetModeRuleset->FunctionFlags |= 0x400;

	if ( rulesetName )
		memcpy ( rulesetName, &GetModeRuleset_Parms.rulesetName, 0x8 );

	return GetModeRuleset_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetModeTitle
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  modeIndex                      ( CPF_Parm )
// struct FString                 modeTitle                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgOnlineEnumerations::GetModeTitle ( unsigned char modeIndex, struct FString* modeTitle )
{
	static UFunction* pFnGetModeTitle = NULL;

	if ( ! pFnGetModeTitle )
		pFnGetModeTitle = (UFunction*) UObject::GObjObjects()->Data[ 44820 ];

	UPgOnlineEnumerations_execGetModeTitle_Parms GetModeTitle_Parms;
	GetModeTitle_Parms.modeIndex = modeIndex;

	pFnGetModeTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModeTitle, &GetModeTitle_Parms, NULL );

	pFnGetModeTitle->FunctionFlags |= 0x400;

	if ( modeTitle )
		memcpy ( modeTitle, &GetModeTitle_Parms.modeTitle, 0xC );

	return GetModeTitle_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetModeName
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  modeIndex                      ( CPF_Parm )
// struct FName                   modeName                       ( CPF_Parm | CPF_OutParm )

bool UPgOnlineEnumerations::GetModeName ( unsigned char modeIndex, struct FName* modeName )
{
	static UFunction* pFnGetModeName = NULL;

	if ( ! pFnGetModeName )
		pFnGetModeName = (UFunction*) UObject::GObjObjects()->Data[ 44816 ];

	UPgOnlineEnumerations_execGetModeName_Parms GetModeName_Parms;
	GetModeName_Parms.modeIndex = modeIndex;

	pFnGetModeName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModeName, &GetModeName_Parms, NULL );

	pFnGetModeName->FunctionFlags |= 0x400;

	if ( modeName )
		memcpy ( modeName, &GetModeName_Parms.modeName, 0x8 );

	return GetModeName_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetModeIndex
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   modeName                       ( CPF_Parm )

int UPgOnlineEnumerations::GetModeIndex ( struct FName modeName )
{
	static UFunction* pFnGetModeIndex = NULL;

	if ( ! pFnGetModeIndex )
		pFnGetModeIndex = (UFunction*) UObject::GObjObjects()->Data[ 44813 ];

	UPgOnlineEnumerations_execGetModeIndex_Parms GetModeIndex_Parms;
	memcpy ( &GetModeIndex_Parms.modeName, &modeName, 0x8 );

	pFnGetModeIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetModeIndex, &GetModeIndex_Parms, NULL );

	pFnGetModeIndex->FunctionFlags |= 0x400;

	return GetModeIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetNumModes
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineEnumerations::GetNumModes ( )
{
	static UFunction* pFnGetNumModes = NULL;

	if ( ! pFnGetNumModes )
		pFnGetNumModes = (UFunction*) UObject::GObjObjects()->Data[ 44811 ];

	UPgOnlineEnumerations_execGetNumModes_Parms GetNumModes_Parms;

	pFnGetNumModes->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumModes, &GetNumModes_Parms, NULL );

	pFnGetNumModes->FunctionFlags |= 0x400;

	return GetNumModes_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetMapForMode
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            mapIndex                       ( CPF_Parm )
// unsigned char                  modeIndex                      ( CPF_Parm )

int UPgOnlineEnumerations::GetMapForMode ( int mapIndex, unsigned char modeIndex )
{
	static UFunction* pFnGetMapForMode = NULL;

	if ( ! pFnGetMapForMode )
		pFnGetMapForMode = (UFunction*) UObject::GObjObjects()->Data[ 44807 ];

	UPgOnlineEnumerations_execGetMapForMode_Parms GetMapForMode_Parms;
	GetMapForMode_Parms.mapIndex = mapIndex;
	GetMapForMode_Parms.modeIndex = modeIndex;

	pFnGetMapForMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapForMode, &GetMapForMode_Parms, NULL );

	pFnGetMapForMode->FunctionFlags |= 0x400;

	return GetMapForMode_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.IsModeSupportedByMap
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            mapIndex                       ( CPF_Parm )
// unsigned char                  modeIndex                      ( CPF_Parm )

bool UPgOnlineEnumerations::IsModeSupportedByMap ( int mapIndex, unsigned char modeIndex )
{
	static UFunction* pFnIsModeSupportedByMap = NULL;

	if ( ! pFnIsModeSupportedByMap )
		pFnIsModeSupportedByMap = (UFunction*) UObject::GObjObjects()->Data[ 44803 ];

	UPgOnlineEnumerations_execIsModeSupportedByMap_Parms IsModeSupportedByMap_Parms;
	IsModeSupportedByMap_Parms.mapIndex = mapIndex;
	IsModeSupportedByMap_Parms.modeIndex = modeIndex;

	pFnIsModeSupportedByMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsModeSupportedByMap, &IsModeSupportedByMap_Parms, NULL );

	pFnIsModeSupportedByMap->FunctionFlags |= 0x400;

	return IsModeSupportedByMap_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetMapName
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            mapIndex                       ( CPF_Parm )
// struct FName                   MapName                        ( CPF_Parm | CPF_OutParm )

bool UPgOnlineEnumerations::GetMapName ( int mapIndex, struct FName* MapName )
{
	static UFunction* pFnGetMapName = NULL;

	if ( ! pFnGetMapName )
		pFnGetMapName = (UFunction*) UObject::GObjObjects()->Data[ 44799 ];

	UPgOnlineEnumerations_execGetMapName_Parms GetMapName_Parms;
	GetMapName_Parms.mapIndex = mapIndex;

	pFnGetMapName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapName, &GetMapName_Parms, NULL );

	pFnGetMapName->FunctionFlags |= 0x400;

	if ( MapName )
		memcpy ( MapName, &GetMapName_Parms.MapName, 0x8 );

	return GetMapName_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetMapTitle
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            mapIndex                       ( CPF_Parm )
// struct FString                 mapTitle                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgOnlineEnumerations::GetMapTitle ( int mapIndex, struct FString* mapTitle )
{
	static UFunction* pFnGetMapTitle = NULL;

	if ( ! pFnGetMapTitle )
		pFnGetMapTitle = (UFunction*) UObject::GObjObjects()->Data[ 44795 ];

	UPgOnlineEnumerations_execGetMapTitle_Parms GetMapTitle_Parms;
	GetMapTitle_Parms.mapIndex = mapIndex;

	pFnGetMapTitle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapTitle, &GetMapTitle_Parms, NULL );

	pFnGetMapTitle->FunctionFlags |= 0x400;

	if ( mapTitle )
		memcpy ( mapTitle, &GetMapTitle_Parms.mapTitle, 0xC );

	return GetMapTitle_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetMapFilename
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            mapIndex                       ( CPF_Parm )
// struct FString                 Filename                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgOnlineEnumerations::GetMapFilename ( int mapIndex, struct FString* Filename )
{
	static UFunction* pFnGetMapFilename = NULL;

	if ( ! pFnGetMapFilename )
		pFnGetMapFilename = (UFunction*) UObject::GObjObjects()->Data[ 44791 ];

	UPgOnlineEnumerations_execGetMapFilename_Parms GetMapFilename_Parms;
	GetMapFilename_Parms.mapIndex = mapIndex;

	pFnGetMapFilename->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapFilename, &GetMapFilename_Parms, NULL );

	pFnGetMapFilename->FunctionFlags |= 0x400;

	if ( Filename )
		memcpy ( Filename, &GetMapFilename_Parms.Filename, 0xC );

	return GetMapFilename_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.MapFilenametoIndex
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Filename                       ( CPF_Parm | CPF_NeedCtorLink )

int UPgOnlineEnumerations::MapFilenametoIndex ( struct FString Filename )
{
	static UFunction* pFnMapFilenametoIndex = NULL;

	if ( ! pFnMapFilenametoIndex )
		pFnMapFilenametoIndex = (UFunction*) UObject::GObjObjects()->Data[ 44788 ];

	UPgOnlineEnumerations_execMapFilenametoIndex_Parms MapFilenametoIndex_Parms;
	memcpy ( &MapFilenametoIndex_Parms.Filename, &Filename, 0xC );

	pFnMapFilenametoIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMapFilenametoIndex, &MapFilenametoIndex_Parms, NULL );

	pFnMapFilenametoIndex->FunctionFlags |= 0x400;

	return MapFilenametoIndex_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetNumMaps
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineEnumerations::GetNumMaps ( )
{
	static UFunction* pFnGetNumMaps = NULL;

	if ( ! pFnGetNumMaps )
		pFnGetNumMaps = (UFunction*) UObject::GObjObjects()->Data[ 44786 ];

	UPgOnlineEnumerations_execGetNumMaps_Parms GetNumMaps_Parms;

	pFnGetNumMaps->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumMaps, &GetNumMaps_Parms, NULL );

	pFnGetNumMaps->FunctionFlags |= 0x400;

	return GetNumMaps_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetUIProfileIndexByName
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ProfileName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            ProfileIndex                   ( CPF_Parm | CPF_OutParm )

bool UPgOnlineEnumerations::GetUIProfileIndexByName ( struct FString ProfileName, int* ProfileIndex )
{
	static UFunction* pFnGetUIProfileIndexByName = NULL;

	if ( ! pFnGetUIProfileIndexByName )
		pFnGetUIProfileIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 44782 ];

	UPgOnlineEnumerations_execGetUIProfileIndexByName_Parms GetUIProfileIndexByName_Parms;
	memcpy ( &GetUIProfileIndexByName_Parms.ProfileName, &ProfileName, 0xC );

	pFnGetUIProfileIndexByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUIProfileIndexByName, &GetUIProfileIndexByName_Parms, NULL );

	pFnGetUIProfileIndexByName->FunctionFlags |= 0x400;

	if ( ProfileIndex )
		*ProfileIndex = GetUIProfileIndexByName_Parms.ProfileIndex;

	return GetUIProfileIndexByName_Parms.ReturnValue;
};

// Function GridGame.PgOnlineEnumerations.GetNumUIProfiles
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgOnlineEnumerations::GetNumUIProfiles ( )
{
	static UFunction* pFnGetNumUIProfiles = NULL;

	if ( ! pFnGetNumUIProfiles )
		pFnGetNumUIProfiles = (UFunction*) UObject::GObjObjects()->Data[ 44780 ];

	UPgOnlineEnumerations_execGetNumUIProfiles_Parms GetNumUIProfiles_Parms;

	pFnGetNumUIProfiles->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumUIProfiles, &GetNumUIProfiles_Parms, NULL );

	pFnGetNumUIProfiles->FunctionFlags |= 0x400;

	return GetNumUIProfiles_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.SetGameSpeedNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          T                              ( CPF_Parm )

void APgGameInfo::SetGameSpeedNative ( float T )
{
	static UFunction* pFnSetGameSpeedNative = NULL;

	if ( ! pFnSetGameSpeedNative )
		pFnSetGameSpeedNative = (UFunction*) UObject::GObjObjects()->Data[ 46592 ];

	APgGameInfo_execSetGameSpeedNative_Parms SetGameSpeedNative_Parms;
	SetGameSpeedNative_Parms.T = T;

	pFnSetGameSpeedNative->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetGameSpeedNative, &SetGameSpeedNative_Parms, NULL );

	pFnSetGameSpeedNative->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.SpawnPlayerController
// [0x00020002] 
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )

class APlayerController* APgGameInfo::SpawnPlayerController ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnSpawnPlayerController = NULL;

	if ( ! pFnSpawnPlayerController )
		pFnSpawnPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 46588 ];

	APgGameInfo_execSpawnPlayerController_Parms SpawnPlayerController_Parms;
	memcpy ( &SpawnPlayerController_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &SpawnPlayerController_Parms.SpawnRotation, &SpawnRotation, 0xC );

	this->ProcessEvent ( pFnSpawnPlayerController, &SpawnPlayerController_Parms, NULL );

	return SpawnPlayerController_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.SetDebugPlayerStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerStart*            Start                          ( CPF_Parm )

void APgGameInfo::SetDebugPlayerStart ( class APlayerStart* Start )
{
	static UFunction* pFnSetDebugPlayerStart = NULL;

	if ( ! pFnSetDebugPlayerStart )
		pFnSetDebugPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46586 ];

	APgGameInfo_execSetDebugPlayerStart_Parms SetDebugPlayerStart_Parms;
	SetDebugPlayerStart_Parms.Start = Start;

	pFnSetDebugPlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDebugPlayerStart, &SetDebugPlayerStart_Parms, NULL );

	pFnSetDebugPlayerStart->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.LogSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::LogSettings ( )
{
	static UFunction* pFnLogSettings = NULL;

	if ( ! pFnLogSettings )
		pFnLogSettings = (UFunction*) UObject::GObjObjects()->Data[ 46585 ];

	APgGameInfo_execLogSettings_Parms LogSettings_Parms;

	pFnLogSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogSettings, &LogSettings_Parms, NULL );

	pFnLogSettings->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._ChangeName
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned long                  bNameChange                    ( CPF_Parm )

void APgGameInfo::event_ChangeName ( class AController* C, struct FString S, unsigned long bNameChange )
{
	static UFunction* pFn_ChangeName = NULL;

	if ( ! pFn_ChangeName )
		pFn_ChangeName = (UFunction*) UObject::GObjObjects()->Data[ 46581 ];

	APgGameInfo_event_ChangeName_Parms _ChangeName_Parms;
	_ChangeName_Parms.C = C;
	memcpy ( &_ChangeName_Parms.S, &S, 0xC );
	_ChangeName_Parms.bNameChange = bNameChange;

	this->ProcessEvent ( pFn_ChangeName, &_ChangeName_Parms, NULL );
};

// Function GridGame.PgGameInfo._CheckForSentinelRun
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameInfo::event_CheckForSentinelRun ( )
{
	static UFunction* pFn_CheckForSentinelRun = NULL;

	if ( ! pFn_CheckForSentinelRun )
		pFn_CheckForSentinelRun = (UFunction*) UObject::GObjObjects()->Data[ 46579 ];

	APgGameInfo_event_CheckForSentinelRun_Parms _CheckForSentinelRun_Parms;

	this->ProcessEvent ( pFn_CheckForSentinelRun, &_CheckForSentinelRun_Parms, NULL );

	return _CheckForSentinelRun_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.RemovePlayerFromCollisionTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PlayerRepInfo                  ( CPF_Parm )

void APgGameInfo::RemovePlayerFromCollisionTeams ( class APgPlayerReplicationInfo* PlayerRepInfo )
{
	static UFunction* pFnRemovePlayerFromCollisionTeams = NULL;

	if ( ! pFnRemovePlayerFromCollisionTeams )
		pFnRemovePlayerFromCollisionTeams = (UFunction*) UObject::GObjObjects()->Data[ 46577 ];

	APgGameInfo_execRemovePlayerFromCollisionTeams_Parms RemovePlayerFromCollisionTeams_Parms;
	RemovePlayerFromCollisionTeams_Parms.PlayerRepInfo = PlayerRepInfo;

	pFnRemovePlayerFromCollisionTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemovePlayerFromCollisionTeams, &RemovePlayerFromCollisionTeams_Parms, NULL );

	pFnRemovePlayerFromCollisionTeams->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.AddPlayerToCollisionTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PlayerRepInfo                  ( CPF_Parm )

void APgGameInfo::AddPlayerToCollisionTeams ( class APgPlayerReplicationInfo* PlayerRepInfo )
{
	static UFunction* pFnAddPlayerToCollisionTeams = NULL;

	if ( ! pFnAddPlayerToCollisionTeams )
		pFnAddPlayerToCollisionTeams = (UFunction*) UObject::GObjObjects()->Data[ 46575 ];

	APgGameInfo_execAddPlayerToCollisionTeams_Parms AddPlayerToCollisionTeams_Parms;
	AddPlayerToCollisionTeams_Parms.PlayerRepInfo = PlayerRepInfo;

	pFnAddPlayerToCollisionTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddPlayerToCollisionTeams, &AddPlayerToCollisionTeams_Parms, NULL );

	pFnAddPlayerToCollisionTeams->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.UpdateResetRelatedStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )

void APgGameInfo::UpdateResetRelatedStats ( class AController* Player )
{
	static UFunction* pFnUpdateResetRelatedStats = NULL;

	if ( ! pFnUpdateResetRelatedStats )
		pFnUpdateResetRelatedStats = (UFunction*) UObject::GObjObjects()->Data[ 46573 ];

	APgGameInfo_execUpdateResetRelatedStats_Parms UpdateResetRelatedStats_Parms;
	UpdateResetRelatedStats_Parms.Player = Player;

	pFnUpdateResetRelatedStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateResetRelatedStats, &UpdateResetRelatedStats_Parms, NULL );

	pFnUpdateResetRelatedStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.UpdateDeathRelatedStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void APgGameInfo::UpdateDeathRelatedStats ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnUpdateDeathRelatedStats = NULL;

	if ( ! pFnUpdateDeathRelatedStats )
		pFnUpdateDeathRelatedStats = (UFunction*) UObject::GObjObjects()->Data[ 46568 ];

	APgGameInfo_execUpdateDeathRelatedStats_Parms UpdateDeathRelatedStats_Parms;
	UpdateDeathRelatedStats_Parms.Killer = Killer;
	UpdateDeathRelatedStats_Parms.KilledPlayer = KilledPlayer;
	UpdateDeathRelatedStats_Parms.KilledPawn = KilledPawn;
	UpdateDeathRelatedStats_Parms.DamageType = DamageType;

	pFnUpdateDeathRelatedStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDeathRelatedStats, &UpdateDeathRelatedStats_Parms, NULL );

	pFnUpdateDeathRelatedStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.AwardXPForKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )

void APgGameInfo::AwardXPForKill ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn )
{
	static UFunction* pFnAwardXPForKill = NULL;

	if ( ! pFnAwardXPForKill )
		pFnAwardXPForKill = (UFunction*) UObject::GObjObjects()->Data[ 46564 ];

	APgGameInfo_execAwardXPForKill_Parms AwardXPForKill_Parms;
	AwardXPForKill_Parms.Killer = Killer;
	AwardXPForKill_Parms.KilledPlayer = KilledPlayer;
	AwardXPForKill_Parms.KilledPawn = KilledPawn;

	pFnAwardXPForKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardXPForKill, &AwardXPForKill_Parms, NULL );

	pFnAwardXPForKill->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._HandleSeamlessTravelPlayer
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void APgGameInfo::event_HandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFn_HandleSeamlessTravelPlayer = NULL;

	if ( ! pFn_HandleSeamlessTravelPlayer )
		pFn_HandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46562 ];

	APgGameInfo_event_HandleSeamlessTravelPlayer_Parms _HandleSeamlessTravelPlayer_Parms;

	this->ProcessEvent ( pFn_HandleSeamlessTravelPlayer, &_HandleSeamlessTravelPlayer_Parms, NULL );

	if ( C )
		*C = _HandleSeamlessTravelPlayer_Parms.C;
};

// Function GridGame.PgGameInfo.HandleSeamlessTravelPlayer
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void APgGameInfo::eventHandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

	if ( ! pFnHandleSeamlessTravelPlayer )
		pFnHandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46560 ];

	APgGameInfo_eventHandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;

	pFnHandleSeamlessTravelPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleSeamlessTravelPlayer, &HandleSeamlessTravelPlayer_Parms, NULL );

	pFnHandleSeamlessTravelPlayer->FunctionFlags |= 0x400;

	if ( C )
		*C = HandleSeamlessTravelPlayer_Parms.C;
};

// Function GridGame.PgGameInfo.AllowCheats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       P                              ( CPF_Parm )

bool APgGameInfo::AllowCheats ( class APlayerController* P )
{
	static UFunction* pFnAllowCheats = NULL;

	if ( ! pFnAllowCheats )
		pFnAllowCheats = (UFunction*) UObject::GObjObjects()->Data[ 46557 ];

	APgGameInfo_execAllowCheats_Parms AllowCheats_Parms;
	AllowCheats_Parms.P = P;

	pFnAllowCheats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowCheats, &AllowCheats_Parms, NULL );

	pFnAllowCheats->FunctionFlags |= 0x400;

	return AllowCheats_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetObjective
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgObjective*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ObjName                        ( CPF_Parm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

class APgObjective* APgGameInfo::GetObjective ( struct FName ObjName, unsigned char TeamIndex )
{
	static UFunction* pFnGetObjective = NULL;

	if ( ! pFnGetObjective )
		pFnGetObjective = (UFunction*) UObject::GObjObjects()->Data[ 46553 ];

	APgGameInfo_execGetObjective_Parms GetObjective_Parms;
	memcpy ( &GetObjective_Parms.ObjName, &ObjName, 0x8 );
	GetObjective_Parms.TeamIndex = TeamIndex;

	pFnGetObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObjective, &GetObjective_Parms, NULL );

	pFnGetObjective->FunctionFlags |= 0x400;

	return GetObjective_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.IsObjectiveInList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgObjective*            Obj                            ( CPF_Parm )

bool APgGameInfo::IsObjectiveInList ( class APgObjective* Obj )
{
	static UFunction* pFnIsObjectiveInList = NULL;

	if ( ! pFnIsObjectiveInList )
		pFnIsObjectiveInList = (UFunction*) UObject::GObjObjects()->Data[ 46550 ];

	APgGameInfo_execIsObjectiveInList_Parms IsObjectiveInList_Parms;
	IsObjectiveInList_Parms.Obj = Obj;

	pFnIsObjectiveInList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsObjectiveInList, &IsObjectiveInList_Parms, NULL );

	pFnIsObjectiveInList->FunctionFlags |= 0x400;

	return IsObjectiveInList_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.RemoveObjective
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgObjective*            Obj                            ( CPF_Parm )

void APgGameInfo::RemoveObjective ( class APgObjective* Obj )
{
	static UFunction* pFnRemoveObjective = NULL;

	if ( ! pFnRemoveObjective )
		pFnRemoveObjective = (UFunction*) UObject::GObjObjects()->Data[ 46548 ];

	APgGameInfo_execRemoveObjective_Parms RemoveObjective_Parms;
	RemoveObjective_Parms.Obj = Obj;

	pFnRemoveObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveObjective, &RemoveObjective_Parms, NULL );

	pFnRemoveObjective->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.AddObjective
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgObjective*            Obj                            ( CPF_Parm )

void APgGameInfo::AddObjective ( class APgObjective* Obj )
{
	static UFunction* pFnAddObjective = NULL;

	if ( ! pFnAddObjective )
		pFnAddObjective = (UFunction*) UObject::GObjObjects()->Data[ 46546 ];

	APgGameInfo_execAddObjective_Parms AddObjective_Parms;
	AddObjective_Parms.Obj = Obj;

	pFnAddObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddObjective, &AddObjective_Parms, NULL );

	pFnAddObjective->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.GetPreferredEnemyTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

unsigned char APgGameInfo::GetPreferredEnemyTeam ( unsigned char TeamIndex )
{
	static UFunction* pFnGetPreferredEnemyTeam = NULL;

	if ( ! pFnGetPreferredEnemyTeam )
		pFnGetPreferredEnemyTeam = (UFunction*) UObject::GObjObjects()->Data[ 46543 ];

	APgGameInfo_execGetPreferredEnemyTeam_Parms GetPreferredEnemyTeam_Parms;
	GetPreferredEnemyTeam_Parms.TeamIndex = TeamIndex;

	pFnGetPreferredEnemyTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreferredEnemyTeam, &GetPreferredEnemyTeam_Parms, NULL );

	pFnGetPreferredEnemyTeam->FunctionFlags |= 0x400;

	return GetPreferredEnemyTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.ChangeTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )
// int                            NewTeam                        ( CPF_Parm )
// unsigned long                  CreateNewTeam                  ( CPF_Parm )

bool APgGameInfo::ChangeTeam ( class AController* C, int NewTeam, unsigned long CreateNewTeam )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 46538 ];

	APgGameInfo_execChangeTeam_Parms ChangeTeam_Parms;
	ChangeTeam_Parms.C = C;
	ChangeTeam_Parms.NewTeam = NewTeam;
	ChangeTeam_Parms.CreateNewTeam = CreateNewTeam;

	pFnChangeTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );

	pFnChangeTeam->FunctionFlags |= 0x400;

	return ChangeTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.PickTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Current                        ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char APgGameInfo::PickTeam ( unsigned char Current, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 46534 ];

	APgGameInfo_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Current = Current;
	PickTeam_Parms.C = C;

	pFnPickTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	pFnPickTeam->FunctionFlags |= 0x400;

	return PickTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.CreateTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::CreateTeams ( )
{
	static UFunction* pFnCreateTeams = NULL;

	if ( ! pFnCreateTeams )
		pFnCreateTeams = (UFunction*) UObject::GObjObjects()->Data[ 46533 ];

	APgGameInfo_execCreateTeams_Parms CreateTeams_Parms;

	pFnCreateTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateTeams, &CreateTeams_Parms, NULL );

	pFnCreateTeams->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._GetNumPlayers
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgGameInfo::event_GetNumPlayers ( )
{
	static UFunction* pFn_GetNumPlayers = NULL;

	if ( ! pFn_GetNumPlayers )
		pFn_GetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 46531 ];

	APgGameInfo_event_GetNumPlayers_Parms _GetNumPlayers_Parms;

	this->ProcessEvent ( pFn_GetNumPlayers, &_GetNumPlayers_Parms, NULL );

	return _GetNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.AtCapacity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSpectator                     ( CPF_Parm )

bool APgGameInfo::AtCapacity ( unsigned long bSpectator )
{
	static UFunction* pFnAtCapacity = NULL;

	if ( ! pFnAtCapacity )
		pFnAtCapacity = (UFunction*) UObject::GObjObjects()->Data[ 46528 ];

	APgGameInfo_execAtCapacity_Parms AtCapacity_Parms;
	AtCapacity_Parms.bSpectator = bSpectator;

	pFnAtCapacity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAtCapacity, &AtCapacity_Parms, NULL );

	pFnAtCapacity->FunctionFlags |= 0x400;

	return AtCapacity_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetFirstAliveAndWellPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   excludingPawn                  ( CPF_Parm )

class APawn* APgGameInfo::GetFirstAliveAndWellPlayer ( class APawn* excludingPawn )
{
	static UFunction* pFnGetFirstAliveAndWellPlayer = NULL;

	if ( ! pFnGetFirstAliveAndWellPlayer )
		pFnGetFirstAliveAndWellPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46525 ];

	APgGameInfo_execGetFirstAliveAndWellPlayer_Parms GetFirstAliveAndWellPlayer_Parms;
	GetFirstAliveAndWellPlayer_Parms.excludingPawn = excludingPawn;

	pFnGetFirstAliveAndWellPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFirstAliveAndWellPlayer, &GetFirstAliveAndWellPlayer_Parms, NULL );

	pFnGetFirstAliveAndWellPlayer->FunctionFlags |= 0x400;

	return GetFirstAliveAndWellPlayer_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.NumAliveAndWellPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgGameInfo::NumAliveAndWellPlayers ( )
{
	static UFunction* pFnNumAliveAndWellPlayers = NULL;

	if ( ! pFnNumAliveAndWellPlayers )
		pFnNumAliveAndWellPlayers = (UFunction*) UObject::GObjObjects()->Data[ 46523 ];

	APgGameInfo_execNumAliveAndWellPlayers_Parms NumAliveAndWellPlayers_Parms;

	pFnNumAliveAndWellPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNumAliveAndWellPlayers, &NumAliveAndWellPlayers_Parms, NULL );

	pFnNumAliveAndWellPlayers->FunctionFlags |= 0x400;

	return NumAliveAndWellPlayers_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._Killed
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void APgGameInfo::event_Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFn_Killed = NULL;

	if ( ! pFn_Killed )
		pFn_Killed = (UFunction*) UObject::GObjObjects()->Data[ 46518 ];

	APgGameInfo_event_Killed_Parms _Killed_Parms;
	_Killed_Parms.Killer = Killer;
	_Killed_Parms.KilledPlayer = KilledPlayer;
	_Killed_Parms.KilledPawn = KilledPawn;
	_Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFn_Killed, &_Killed_Parms, NULL );
};

// Function GridGame.PgGameInfo.Killed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void APgGameInfo::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 46513 ];

	APgGameInfo_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	pFnKilled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );

	pFnKilled->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._ReduceDamage
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void APgGameInfo::event_ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFn_ReduceDamage = NULL;

	if ( ! pFn_ReduceDamage )
		pFn_ReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 46505 ];

	APgGameInfo_event_ReduceDamage_Parms _ReduceDamage_Parms;
	_ReduceDamage_Parms.injured = injured;
	_ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &_ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	_ReduceDamage_Parms.DamageType = DamageType;
	_ReduceDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFn_ReduceDamage, &_ReduceDamage_Parms, NULL );

	if ( Damage )
		*Damage = _ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &_ReduceDamage_Parms.Momentum, 0xC );
};

// Function GridGame.PgGameInfo.ReduceDamage
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void APgGameInfo::ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnReduceDamage = NULL;

	if ( ! pFnReduceDamage )
		pFnReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 46497 ];

	APgGameInfo_execReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	ReduceDamage_Parms.DamageType = DamageType;
	ReduceDamage_Parms.DamageCauser = DamageCauser;

	pFnReduceDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReduceDamage, &ReduceDamage_Parms, NULL );

	pFnReduceDamage->FunctionFlags |= 0x400;

	if ( Damage )
		*Damage = ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &ReduceDamage_Parms.Momentum, 0xC );
};

// Function GridGame.PgGameInfo.ScaleDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerController*     damageTaker                    ( CPF_Parm )
// class APgPlayerController*     InstigatedBy                   ( CPF_Parm )

float APgGameInfo::ScaleDamage ( class APgPlayerController* damageTaker, class APgPlayerController* InstigatedBy )
{
	static UFunction* pFnScaleDamage = NULL;

	if ( ! pFnScaleDamage )
		pFnScaleDamage = (UFunction*) UObject::GObjObjects()->Data[ 42280 ];

	APgGameInfo_execScaleDamage_Parms ScaleDamage_Parms;
	ScaleDamage_Parms.damageTaker = damageTaker;
	ScaleDamage_Parms.InstigatedBy = InstigatedBy;

	pFnScaleDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScaleDamage, &ScaleDamage_Parms, NULL );

	pFnScaleDamage->FunctionFlags |= 0x400;

	return ScaleDamage_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._KickBan
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::event_KickBan ( struct FString S )
{
	static UFunction* pFn_KickBan = NULL;

	if ( ! pFn_KickBan )
		pFn_KickBan = (UFunction*) UObject::GObjObjects()->Data[ 46493 ];

	APgGameInfo_event_KickBan_Parms _KickBan_Parms;
	memcpy ( &_KickBan_Parms.S, &S, 0xC );

	this->ProcessEvent ( pFn_KickBan, &_KickBan_Parms, NULL );
};

// Function GridGame.PgGameInfo.KickBan
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::KickBan ( struct FString S )
{
	static UFunction* pFnKickBan = NULL;

	if ( ! pFnKickBan )
		pFnKickBan = (UFunction*) UObject::GObjObjects()->Data[ 46491 ];

	APgGameInfo_execKickBan_Parms KickBan_Parms;
	memcpy ( &KickBan_Parms.S, &S, 0xC );

	pFnKickBan->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKickBan, &KickBan_Parms, NULL );

	pFnKickBan->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._Kick
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::event_Kick ( struct FString S )
{
	static UFunction* pFn_Kick = NULL;

	if ( ! pFn_Kick )
		pFn_Kick = (UFunction*) UObject::GObjObjects()->Data[ 46489 ];

	APgGameInfo_event_Kick_Parms _Kick_Parms;
	memcpy ( &_Kick_Parms.S, &S, 0xC );

	this->ProcessEvent ( pFn_Kick, &_Kick_Parms, NULL );
};

// Function GridGame.PgGameInfo.ScoreKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Victim                         ( CPF_Parm )

void APgGameInfo::ScoreKill ( class AController* Killer, class AController* Victim )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 46486 ];

	APgGameInfo_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Victim = Victim;

	pFnScoreKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );

	pFnScoreKill->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ScoreObjective
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void APgGameInfo::ScoreObjective ( class APlayerReplicationInfo* Scorer, int Score )
{
	static UFunction* pFnScoreObjective = NULL;

	if ( ! pFnScoreObjective )
		pFnScoreObjective = (UFunction*) UObject::GObjObjects()->Data[ 46483 ];

	APgGameInfo_execScoreObjective_Parms ScoreObjective_Parms;
	ScoreObjective_Parms.Scorer = Scorer;
	ScoreObjective_Parms.Score = Score;

	pFnScoreObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreObjective, &ScoreObjective_Parms, NULL );

	pFnScoreObjective->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.CheckScore
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool APgGameInfo::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 46480 ];

	APgGameInfo_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	pFnCheckScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	pFnCheckScore->FunctionFlags |= 0x400;

	return CheckScore_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.UnregisterTeamBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTeamBase*             TeamBase                       ( CPF_Parm )

void APgGameInfo::UnregisterTeamBase ( class APgTeamBase* TeamBase )
{
	static UFunction* pFnUnregisterTeamBase = NULL;

	if ( ! pFnUnregisterTeamBase )
		pFnUnregisterTeamBase = (UFunction*) UObject::GObjObjects()->Data[ 46478 ];

	APgGameInfo_execUnregisterTeamBase_Parms UnregisterTeamBase_Parms;
	UnregisterTeamBase_Parms.TeamBase = TeamBase;

	pFnUnregisterTeamBase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnregisterTeamBase, &UnregisterTeamBase_Parms, NULL );

	pFnUnregisterTeamBase->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.RegisterTeamBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTeamBase*             TeamBase                       ( CPF_Parm )

void APgGameInfo::RegisterTeamBase ( class APgTeamBase* TeamBase )
{
	static UFunction* pFnRegisterTeamBase = NULL;

	if ( ! pFnRegisterTeamBase )
		pFnRegisterTeamBase = (UFunction*) UObject::GObjObjects()->Data[ 46476 ];

	APgGameInfo_execRegisterTeamBase_Parms RegisterTeamBase_Parms;
	RegisterTeamBase_Parms.TeamBase = TeamBase;

	pFnRegisterTeamBase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterTeamBase, &RegisterTeamBase_Parms, NULL );

	pFnRegisterTeamBase->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.GetGameMgr
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AInfo*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  requestMgr                     ( CPF_Parm )

class AInfo* APgGameInfo::GetGameMgr ( class UClass* requestMgr )
{
	static UFunction* pFnGetGameMgr = NULL;

	if ( ! pFnGetGameMgr )
		pFnGetGameMgr = (UFunction*) UObject::GObjObjects()->Data[ 43753 ];

	APgGameInfo_execGetGameMgr_Parms GetGameMgr_Parms;
	GetGameMgr_Parms.requestMgr = requestMgr;

	pFnGetGameMgr->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameMgr, &GetGameMgr_Parms, NULL );

	pFnGetGameMgr->FunctionFlags |= 0x400;

	return GetGameMgr_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetDefaultPlayerArchetype
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class AActor* APgGameInfo::GetDefaultPlayerArchetype ( class AController* C )
{
	static UFunction* pFnGetDefaultPlayerArchetype = NULL;

	if ( ! pFnGetDefaultPlayerArchetype )
		pFnGetDefaultPlayerArchetype = (UFunction*) UObject::GObjObjects()->Data[ 46472 ];

	APgGameInfo_execGetDefaultPlayerArchetype_Parms GetDefaultPlayerArchetype_Parms;
	GetDefaultPlayerArchetype_Parms.C = C;

	pFnGetDefaultPlayerArchetype->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultPlayerArchetype, &GetDefaultPlayerArchetype_Parms, NULL );

	pFnGetDefaultPlayerArchetype->FunctionFlags |= 0x400;

	return GetDefaultPlayerArchetype_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._GetDefaultPlayerClass
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class UClass* APgGameInfo::event_GetDefaultPlayerClass ( class AController* C )
{
	static UFunction* pFn_GetDefaultPlayerClass = NULL;

	if ( ! pFn_GetDefaultPlayerClass )
		pFn_GetDefaultPlayerClass = (UFunction*) UObject::GObjObjects()->Data[ 46469 ];

	APgGameInfo_event_GetDefaultPlayerClass_Parms _GetDefaultPlayerClass_Parms;
	_GetDefaultPlayerClass_Parms.C = C;

	this->ProcessEvent ( pFn_GetDefaultPlayerClass, &_GetDefaultPlayerClass_Parms, NULL );

	return _GetDefaultPlayerClass_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetDefaultPlayerClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class UClass* APgGameInfo::GetDefaultPlayerClass ( class AController* C )
{
	static UFunction* pFnGetDefaultPlayerClass = NULL;

	if ( ! pFnGetDefaultPlayerClass )
		pFnGetDefaultPlayerClass = (UFunction*) UObject::GObjObjects()->Data[ 46466 ];

	APgGameInfo_execGetDefaultPlayerClass_Parms GetDefaultPlayerClass_Parms;
	GetDefaultPlayerClass_Parms.C = C;

	pFnGetDefaultPlayerClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultPlayerClass, &GetDefaultPlayerClass_Parms, NULL );

	pFnGetDefaultPlayerClass->FunctionFlags |= 0x400;

	return GetDefaultPlayerClass_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.LoadArchetypePackages
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APgGameInfo::LoadArchetypePackages ( )
{
	static UFunction* pFnLoadArchetypePackages = NULL;

	if ( ! pFnLoadArchetypePackages )
		pFnLoadArchetypePackages = (UFunction*) UObject::GObjObjects()->Data[ 45115 ];

	APgGameInfo_execLoadArchetypePackages_Parms LoadArchetypePackages_Parms;

	pFnLoadArchetypePackages->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadArchetypePackages, &LoadArchetypePackages_Parms, NULL );

	pFnLoadArchetypePackages->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.SpawnDefaultVehicleFor
// [0x00020C01] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:
// class APgVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewPlayer                      ( CPF_Parm )
// class ANavigationPoint*        StartSpot                      ( CPF_Parm )

class APgVehicle* APgGameInfo::eventSpawnDefaultVehicleFor ( class AController* NewPlayer, class ANavigationPoint* StartSpot )
{
	static UFunction* pFnSpawnDefaultVehicleFor = NULL;

	if ( ! pFnSpawnDefaultVehicleFor )
		pFnSpawnDefaultVehicleFor = (UFunction*) UObject::GObjObjects()->Data[ 46462 ];

	APgGameInfo_eventSpawnDefaultVehicleFor_Parms SpawnDefaultVehicleFor_Parms;
	SpawnDefaultVehicleFor_Parms.NewPlayer = NewPlayer;
	SpawnDefaultVehicleFor_Parms.StartSpot = StartSpot;

	pFnSpawnDefaultVehicleFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnDefaultVehicleFor, &SpawnDefaultVehicleFor_Parms, NULL );

	pFnSpawnDefaultVehicleFor->FunctionFlags |= 0x400;

	return SpawnDefaultVehicleFor_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._SpawnDefaultPawnFor
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewPlayer                      ( CPF_Parm )
// class ANavigationPoint*        StartSpot                      ( CPF_Parm )

class APawn* APgGameInfo::event_SpawnDefaultPawnFor ( class AController* NewPlayer, class ANavigationPoint* StartSpot )
{
	static UFunction* pFn_SpawnDefaultPawnFor = NULL;

	if ( ! pFn_SpawnDefaultPawnFor )
		pFn_SpawnDefaultPawnFor = (UFunction*) UObject::GObjObjects()->Data[ 46458 ];

	APgGameInfo_event_SpawnDefaultPawnFor_Parms _SpawnDefaultPawnFor_Parms;
	_SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
	_SpawnDefaultPawnFor_Parms.StartSpot = StartSpot;

	this->ProcessEvent ( pFn_SpawnDefaultPawnFor, &_SpawnDefaultPawnFor_Parms, NULL );

	return _SpawnDefaultPawnFor_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.SpawnDefaultPawnFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewPlayer                      ( CPF_Parm )
// class ANavigationPoint*        StartSpot                      ( CPF_Parm )

class APawn* APgGameInfo::SpawnDefaultPawnFor ( class AController* NewPlayer, class ANavigationPoint* StartSpot )
{
	static UFunction* pFnSpawnDefaultPawnFor = NULL;

	if ( ! pFnSpawnDefaultPawnFor )
		pFnSpawnDefaultPawnFor = (UFunction*) UObject::GObjObjects()->Data[ 46454 ];

	APgGameInfo_execSpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;
	SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
	SpawnDefaultPawnFor_Parms.StartSpot = StartSpot;

	pFnSpawnDefaultPawnFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Parms, NULL );

	pFnSpawnDefaultPawnFor->FunctionFlags |= 0x400;

	return SpawnDefaultPawnFor_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.DisableReferencingScrubbers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )

void APgGameInfo::DisableReferencingScrubbers ( class AController* Player )
{
	static UFunction* pFnDisableReferencingScrubbers = NULL;

	if ( ! pFnDisableReferencingScrubbers )
		pFnDisableReferencingScrubbers = (UFunction*) UObject::GObjObjects()->Data[ 46452 ];

	APgGameInfo_execDisableReferencingScrubbers_Parms DisableReferencingScrubbers_Parms;
	DisableReferencingScrubbers_Parms.Player = Player;

	pFnDisableReferencingScrubbers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisableReferencingScrubbers, &DisableReferencingScrubbers_Parms, NULL );

	pFnDisableReferencingScrubbers->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ResetLastPlayerStarts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::ResetLastPlayerStarts ( )
{
	static UFunction* pFnResetLastPlayerStarts = NULL;

	if ( ! pFnResetLastPlayerStarts )
		pFnResetLastPlayerStarts = (UFunction*) UObject::GObjObjects()->Data[ 46451 ];

	APgGameInfo_execResetLastPlayerStarts_Parms ResetLastPlayerStarts_Parms;

	pFnResetLastPlayerStarts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetLastPlayerStarts, &ResetLastPlayerStarts_Parms, NULL );

	pFnResetLastPlayerStarts->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.AddLastPlayerStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )
// class ANavigationPoint*        Start                          ( CPF_Parm )

void APgGameInfo::AddLastPlayerStart ( class AController* Player, class ANavigationPoint* Start )
{
	static UFunction* pFnAddLastPlayerStart = NULL;

	if ( ! pFnAddLastPlayerStart )
		pFnAddLastPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46448 ];

	APgGameInfo_execAddLastPlayerStart_Parms AddLastPlayerStart_Parms;
	AddLastPlayerStart_Parms.Player = Player;
	AddLastPlayerStart_Parms.Start = Start;

	pFnAddLastPlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddLastPlayerStart, &AddLastPlayerStart_Parms, NULL );

	pFnAddLastPlayerStart->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.FindLastPlayerStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )

class ANavigationPoint* APgGameInfo::FindLastPlayerStart ( class AController* Player )
{
	static UFunction* pFnFindLastPlayerStart = NULL;

	if ( ! pFnFindLastPlayerStart )
		pFnFindLastPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46445 ];

	APgGameInfo_execFindLastPlayerStart_Parms FindLastPlayerStart_Parms;
	FindLastPlayerStart_Parms.Player = Player;

	pFnFindLastPlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindLastPlayerStart, &FindLastPlayerStart_Parms, NULL );

	pFnFindLastPlayerStart->FunctionFlags |= 0x400;

	return FindLastPlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._RatePlayerStart
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            Start                          ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float APgGameInfo::event_RatePlayerStart ( class APlayerStart* Start, unsigned char Team, class AController* Player )
{
	static UFunction* pFn_RatePlayerStart = NULL;

	if ( ! pFn_RatePlayerStart )
		pFn_RatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46440 ];

	APgGameInfo_event_RatePlayerStart_Parms _RatePlayerStart_Parms;
	_RatePlayerStart_Parms.Start = Start;
	_RatePlayerStart_Parms.Team = Team;
	_RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFn_RatePlayerStart, &_RatePlayerStart_Parms, NULL );

	return _RatePlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.RatePlayerStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            Start                          ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float APgGameInfo::RatePlayerStart ( class APlayerStart* Start, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46435 ];

	APgGameInfo_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.Start = Start;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	pFnRatePlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	pFnRatePlayerStart->FunctionFlags |= 0x400;

	return RatePlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._FindPlayerStart
// [0x00044803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )
// struct FString                 IncomingName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class ANavigationPoint* APgGameInfo::event_FindPlayerStart ( class AController* Player, unsigned char InTeam, struct FString IncomingName )
{
	static UFunction* pFn_FindPlayerStart = NULL;

	if ( ! pFn_FindPlayerStart )
		pFn_FindPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46430 ];

	APgGameInfo_event_FindPlayerStart_Parms _FindPlayerStart_Parms;
	_FindPlayerStart_Parms.Player = Player;
	_FindPlayerStart_Parms.InTeam = InTeam;
	memcpy ( &_FindPlayerStart_Parms.IncomingName, &IncomingName, 0xC );

	this->ProcessEvent ( pFn_FindPlayerStart, &_FindPlayerStart_Parms, NULL );

	return _FindPlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.FindPlayerStart
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )
// struct FString                 IncomingName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class ANavigationPoint* APgGameInfo::FindPlayerStart ( class AController* Player, unsigned char InTeam, struct FString IncomingName )
{
	static UFunction* pFnFindPlayerStart = NULL;

	if ( ! pFnFindPlayerStart )
		pFnFindPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46425 ];

	APgGameInfo_execFindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy ( &FindPlayerStart_Parms.IncomingName, &IncomingName, 0xC );

	pFnFindPlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindPlayerStart, &FindPlayerStart_Parms, NULL );

	pFnFindPlayerStart->FunctionFlags |= 0x400;

	return FindPlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.ShowLoadingScreen
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  show                           ( CPF_Parm )

void APgGameInfo::eventShowLoadingScreen ( unsigned long show )
{
	static UFunction* pFnShowLoadingScreen = NULL;

	if ( ! pFnShowLoadingScreen )
		pFnShowLoadingScreen = (UFunction*) UObject::GObjObjects()->Data[ 46423 ];

	APgGameInfo_eventShowLoadingScreen_Parms ShowLoadingScreen_Parms;
	ShowLoadingScreen_Parms.show = show;

	pFnShowLoadingScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowLoadingScreen, &ShowLoadingScreen_Parms, NULL );

	pFnShowLoadingScreen->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ClearScreenStack
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// int                            eStack                         ( CPF_Parm )

void APgGameInfo::eventClearScreenStack ( int eStack )
{
	static UFunction* pFnClearScreenStack = NULL;

	if ( ! pFnClearScreenStack )
		pFnClearScreenStack = (UFunction*) UObject::GObjObjects()->Data[ 46421 ];

	APgGameInfo_eventClearScreenStack_Parms ClearScreenStack_Parms;
	ClearScreenStack_Parms.eStack = eStack;

	pFnClearScreenStack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearScreenStack, &ClearScreenStack_Parms, NULL );

	pFnClearScreenStack->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ActivateGFxScreen
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 szInstanceName                 ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  eStack                         ( CPF_Parm )
// float                          fDuration                      ( CPF_Parm )
// struct FString                 szHostInstance                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::eventActivateGFxScreen ( struct FString szInstanceName, unsigned char eStack, float fDuration, struct FString szHostInstance )
{
	static UFunction* pFnActivateGFxScreen = NULL;

	if ( ! pFnActivateGFxScreen )
		pFnActivateGFxScreen = (UFunction*) UObject::GObjObjects()->Data[ 46416 ];

	APgGameInfo_eventActivateGFxScreen_Parms ActivateGFxScreen_Parms;
	memcpy ( &ActivateGFxScreen_Parms.szInstanceName, &szInstanceName, 0xC );
	ActivateGFxScreen_Parms.eStack = eStack;
	ActivateGFxScreen_Parms.fDuration = fDuration;
	memcpy ( &ActivateGFxScreen_Parms.szHostInstance, &szHostInstance, 0xC );

	pFnActivateGFxScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivateGFxScreen, &ActivateGFxScreen_Parms, NULL );

	pFnActivateGFxScreen->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.SendEventBoxMessage
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned char                  eType                          ( CPF_Parm )
// int                            idPlayer1                      ( CPF_OptionalParm | CPF_Parm )
// int                            idPlayer2                      ( CPF_OptionalParm | CPF_Parm )
// struct FString                 szName                         ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::eventSendEventBoxMessage ( unsigned char eType, int idPlayer1, int idPlayer2, struct FString szName )
{
	static UFunction* pFnSendEventBoxMessage = NULL;

	if ( ! pFnSendEventBoxMessage )
		pFnSendEventBoxMessage = (UFunction*) UObject::GObjObjects()->Data[ 46411 ];

	APgGameInfo_eventSendEventBoxMessage_Parms SendEventBoxMessage_Parms;
	SendEventBoxMessage_Parms.eType = eType;
	SendEventBoxMessage_Parms.idPlayer1 = idPlayer1;
	SendEventBoxMessage_Parms.idPlayer2 = idPlayer2;
	memcpy ( &SendEventBoxMessage_Parms.szName, &szName, 0xC );

	pFnSendEventBoxMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendEventBoxMessage, &SendEventBoxMessage_Parms, NULL );

	pFnSendEventBoxMessage->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.OpenPgHud
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  bOpen                          ( CPF_Parm )

void APgGameInfo::eventOpenPgHud ( unsigned long bOpen )
{
	static UFunction* pFnOpenPgHud = NULL;

	if ( ! pFnOpenPgHud )
		pFnOpenPgHud = (UFunction*) UObject::GObjObjects()->Data[ 46409 ];

	APgGameInfo_eventOpenPgHud_Parms OpenPgHud_Parms;
	OpenPgHud_Parms.bOpen = bOpen;

	pFnOpenPgHud->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenPgHud, &OpenPgHud_Parms, NULL );

	pFnOpenPgHud->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ShowPgHud
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void APgGameInfo::eventShowPgHud ( unsigned long bShow )
{
	static UFunction* pFnShowPgHud = NULL;

	if ( ! pFnShowPgHud )
		pFnShowPgHud = (UFunction*) UObject::GObjObjects()->Data[ 46407 ];

	APgGameInfo_eventShowPgHud_Parms ShowPgHud_Parms;
	ShowPgHud_Parms.bShow = bShow;

	pFnShowPgHud->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowPgHud, &ShowPgHud_Parms, NULL );

	pFnShowPgHud->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._NotifyArbitratedMatchEnd
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_NotifyArbitratedMatchEnd ( )
{
	static UFunction* pFn_NotifyArbitratedMatchEnd = NULL;

	if ( ! pFn_NotifyArbitratedMatchEnd )
		pFn_NotifyArbitratedMatchEnd = (UFunction*) UObject::GObjObjects()->Data[ 46406 ];

	APgGameInfo_event_NotifyArbitratedMatchEnd_Parms _NotifyArbitratedMatchEnd_Parms;

	this->ProcessEvent ( pFn_NotifyArbitratedMatchEnd, &_NotifyArbitratedMatchEnd_Parms, NULL );
};

// Function GridGame.PgGameInfo._EndOnlineGame
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_EndOnlineGame ( )
{
	static UFunction* pFn_EndOnlineGame = NULL;

	if ( ! pFn_EndOnlineGame )
		pFn_EndOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 46405 ];

	APgGameInfo_event_EndOnlineGame_Parms _EndOnlineGame_Parms;

	this->ProcessEvent ( pFn_EndOnlineGame, &_EndOnlineGame_Parms, NULL );
};

// Function GridGame.PgGameInfo._WriteOnlinePlayerScores
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_WriteOnlinePlayerScores ( )
{
	static UFunction* pFn_WriteOnlinePlayerScores = NULL;

	if ( ! pFn_WriteOnlinePlayerScores )
		pFn_WriteOnlinePlayerScores = (UFunction*) UObject::GObjObjects()->Data[ 46404 ];

	APgGameInfo_event_WriteOnlinePlayerScores_Parms _WriteOnlinePlayerScores_Parms;

	this->ProcessEvent ( pFn_WriteOnlinePlayerScores, &_WriteOnlinePlayerScores_Parms, NULL );
};

// Function GridGame.PgGameInfo._WriteOnlineStats
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_WriteOnlineStats ( )
{
	static UFunction* pFn_WriteOnlineStats = NULL;

	if ( ! pFn_WriteOnlineStats )
		pFn_WriteOnlineStats = (UFunction*) UObject::GObjObjects()->Data[ 46403 ];

	APgGameInfo_event_WriteOnlineStats_Parms _WriteOnlineStats_Parms;

	this->ProcessEvent ( pFn_WriteOnlineStats, &_WriteOnlineStats_Parms, NULL );
};

// Function GridGame.PgGameInfo.UpdatePlayerHitStreak
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APgGameInfo::UpdatePlayerHitStreak ( float DeltaSeconds )
{
	static UFunction* pFnUpdatePlayerHitStreak = NULL;

	if ( ! pFnUpdatePlayerHitStreak )
		pFnUpdatePlayerHitStreak = (UFunction*) UObject::GObjObjects()->Data[ 46401 ];

	APgGameInfo_execUpdatePlayerHitStreak_Parms UpdatePlayerHitStreak_Parms;
	UpdatePlayerHitStreak_Parms.DeltaSeconds = DeltaSeconds;

	pFnUpdatePlayerHitStreak->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlayerHitStreak, &UpdatePlayerHitStreak_Parms, NULL );

	pFnUpdatePlayerHitStreak->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.UpdatePostMatchPlayerStats
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgGameInfo::eventUpdatePostMatchPlayerStats ( )
{
	static UFunction* pFnUpdatePostMatchPlayerStats = NULL;

	if ( ! pFnUpdatePostMatchPlayerStats )
		pFnUpdatePostMatchPlayerStats = (UFunction*) UObject::GObjObjects()->Data[ 46400 ];

	APgGameInfo_eventUpdatePostMatchPlayerStats_Parms UpdatePostMatchPlayerStats_Parms;

	pFnUpdatePostMatchPlayerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePostMatchPlayerStats, &UpdatePostMatchPlayerStats_Parms, NULL );

	pFnUpdatePostMatchPlayerStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.SaveUserData
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgGameInfo::eventSaveUserData ( )
{
	static UFunction* pFnSaveUserData = NULL;

	if ( ! pFnSaveUserData )
		pFnSaveUserData = (UFunction*) UObject::GObjObjects()->Data[ 46399 ];

	APgGameInfo_eventSaveUserData_Parms SaveUserData_Parms;

	pFnSaveUserData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveUserData, &SaveUserData_Parms, NULL );

	pFnSaveUserData->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.FlushOnlineStats
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgGameInfo::eventFlushOnlineStats ( )
{
	static UFunction* pFnFlushOnlineStats = NULL;

	if ( ! pFnFlushOnlineStats )
		pFnFlushOnlineStats = (UFunction*) UObject::GObjObjects()->Data[ 46398 ];

	APgGameInfo_eventFlushOnlineStats_Parms FlushOnlineStats_Parms;

	pFnFlushOnlineStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushOnlineStats, &FlushOnlineStats_Parms, NULL );

	pFnFlushOnlineStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.PerformEndGameHandling
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::PerformEndGameHandling ( )
{
	static UFunction* pFnPerformEndGameHandling = NULL;

	if ( ! pFnPerformEndGameHandling )
		pFnPerformEndGameHandling = (UFunction*) UObject::GObjObjects()->Data[ 46397 ];

	APgGameInfo_execPerformEndGameHandling_Parms PerformEndGameHandling_Parms;

	pFnPerformEndGameHandling->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPerformEndGameHandling, &PerformEndGameHandling_Parms, NULL );

	pFnPerformEndGameHandling->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ClearCheckpointURL
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::ClearCheckpointURL ( )
{
	static UFunction* pFnClearCheckpointURL = NULL;

	if ( ! pFnClearCheckpointURL )
		pFnClearCheckpointURL = (UFunction*) UObject::GObjObjects()->Data[ 46396 ];

	APgGameInfo_execClearCheckpointURL_Parms ClearCheckpointURL_Parms;

	pFnClearCheckpointURL->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearCheckpointURL, &ClearCheckpointURL_Parms, NULL );

	pFnClearCheckpointURL->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.BeginLobbyCountdown
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::BeginLobbyCountdown ( )
{
	static UFunction* pFnBeginLobbyCountdown = NULL;

	if ( ! pFnBeginLobbyCountdown )
		pFnBeginLobbyCountdown = (UFunction*) UObject::GObjObjects()->Data[ 46395 ];

	APgGameInfo_execBeginLobbyCountdown_Parms BeginLobbyCountdown_Parms;

	pFnBeginLobbyCountdown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBeginLobbyCountdown, &BeginLobbyCountdown_Parms, NULL );

	pFnBeginLobbyCountdown->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.StartHumans
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::StartHumans ( )
{
	static UFunction* pFnStartHumans = NULL;

	if ( ! pFnStartHumans )
		pFnStartHumans = (UFunction*) UObject::GObjObjects()->Data[ 46394 ];

	APgGameInfo_execStartHumans_Parms StartHumans_Parms;

	pFnStartHumans->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartHumans, &StartHumans_Parms, NULL );

	pFnStartHumans->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.EnableSaveLoad
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void APgGameInfo::EnableSaveLoad ( unsigned long bEnable )
{
	static UFunction* pFnEnableSaveLoad = NULL;

	if ( ! pFnEnableSaveLoad )
		pFnEnableSaveLoad = (UFunction*) UObject::GObjObjects()->Data[ 46392 ];

	APgGameInfo_execEnableSaveLoad_Parms EnableSaveLoad_Parms;
	EnableSaveLoad_Parms.bEnable = bEnable;

	pFnEnableSaveLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableSaveLoad, &EnableSaveLoad_Parms, NULL );

	pFnEnableSaveLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.StreamLevelWait
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::StreamLevelWait ( )
{
	static UFunction* pFnStreamLevelWait = NULL;

	if ( ! pFnStreamLevelWait )
		pFnStreamLevelWait = (UFunction*) UObject::GObjObjects()->Data[ 46391 ];

	APgGameInfo_execStreamLevelWait_Parms StreamLevelWait_Parms;

	pFnStreamLevelWait->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStreamLevelWait, &StreamLevelWait_Parms, NULL );

	pFnStreamLevelWait->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.LoadPlayerData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )

void APgGameInfo::LoadPlayerData ( class AController* Player )
{
	static UFunction* pFnLoadPlayerData = NULL;

	if ( ! pFnLoadPlayerData )
		pFnLoadPlayerData = (UFunction*) UObject::GObjObjects()->Data[ 46389 ];

	APgGameInfo_execLoadPlayerData_Parms LoadPlayerData_Parms;
	LoadPlayerData_Parms.Player = Player;

	pFnLoadPlayerData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPlayerData, &LoadPlayerData_Parms, NULL );

	pFnLoadPlayerData->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.UsesCheckpoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameInfo::UsesCheckpoints ( )
{
	static UFunction* pFnUsesCheckpoints = NULL;

	if ( ! pFnUsesCheckpoints )
		pFnUsesCheckpoints = (UFunction*) UObject::GObjObjects()->Data[ 46387 ];

	APgGameInfo_execUsesCheckpoints_Parms UsesCheckpoints_Parms;

	pFnUsesCheckpoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUsesCheckpoints, &UsesCheckpoints_Parms, NULL );

	pFnUsesCheckpoints->FunctionFlags |= 0x400;

	return UsesCheckpoints_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.FindCoopPlayerStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )

class ANavigationPoint* APgGameInfo::FindCoopPlayerStart ( class AController* Player )
{
	static UFunction* pFnFindCoopPlayerStart = NULL;

	if ( ! pFnFindCoopPlayerStart )
		pFnFindCoopPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 46384 ];

	APgGameInfo_execFindCoopPlayerStart_Parms FindCoopPlayerStart_Parms;
	FindCoopPlayerStart_Parms.Player = Player;

	pFnFindCoopPlayerStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindCoopPlayerStart, &FindCoopPlayerStart_Parms, NULL );

	pFnFindCoopPlayerStart->FunctionFlags |= 0x400;

	return FindCoopPlayerStart_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._RestartPlayer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )

void APgGameInfo::event_RestartPlayer ( class AController* Player )
{
	static UFunction* pFn_RestartPlayer = NULL;

	if ( ! pFn_RestartPlayer )
		pFn_RestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46382 ];

	APgGameInfo_event_RestartPlayer_Parms _RestartPlayer_Parms;
	_RestartPlayer_Parms.Player = Player;

	this->ProcessEvent ( pFn_RestartPlayer, &_RestartPlayer_Parms, NULL );
};

// Function GridGame.PgGameInfo.RestartPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Player                         ( CPF_Parm )

void APgGameInfo::RestartPlayer ( class AController* Player )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46380 ];

	APgGameInfo_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.Player = Player;

	pFnRestartPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );

	pFnRestartPlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._ResetLevel
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_ResetLevel ( )
{
	static UFunction* pFn_ResetLevel = NULL;

	if ( ! pFn_ResetLevel )
		pFn_ResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 46379 ];

	APgGameInfo_event_ResetLevel_Parms _ResetLevel_Parms;

	this->ProcessEvent ( pFn_ResetLevel, &_ResetLevel_Parms, NULL );
};

// Function GridGame.PgGameInfo.ResetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 46378 ];

	APgGameInfo_execResetLevel_Parms ResetLevel_Parms;

	pFnResetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );

	pFnResetLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._GameEnding
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_GameEnding ( )
{
	static UFunction* pFn_GameEnding = NULL;

	if ( ! pFn_GameEnding )
		pFn_GameEnding = (UFunction*) UObject::GObjObjects()->Data[ 46377 ];

	APgGameInfo_event_GameEnding_Parms _GameEnding_Parms;

	this->ProcessEvent ( pFn_GameEnding, &_GameEnding_Parms, NULL );
};

// Function GridGame.PgGameInfo.GameEnding
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgGameInfo::eventGameEnding ( )
{
	static UFunction* pFnGameEnding = NULL;

	if ( ! pFnGameEnding )
		pFnGameEnding = (UFunction*) UObject::GObjObjects()->Data[ 46376 ];

	APgGameInfo_eventGameEnding_Parms GameEnding_Parms;

	pFnGameEnding->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGameEnding, &GameEnding_Parms, NULL );

	pFnGameEnding->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._EndGame
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::event_EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFn_EndGame = NULL;

	if ( ! pFn_EndGame )
		pFn_EndGame = (UFunction*) UObject::GObjObjects()->Data[ 46373 ];

	APgGameInfo_event_EndGame_Parms _EndGame_Parms;
	_EndGame_Parms.Winner = Winner;
	memcpy ( &_EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFn_EndGame, &_EndGame_Parms, NULL );
};

// Function GridGame.PgGameInfo.EndGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 46370 ];

	APgGameInfo_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	pFnEndGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );

	pFnEndGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._StartMatch
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_StartMatch ( )
{
	static UFunction* pFn_StartMatch = NULL;

	if ( ! pFn_StartMatch )
		pFn_StartMatch = (UFunction*) UObject::GObjObjects()->Data[ 46369 ];

	APgGameInfo_event_StartMatch_Parms _StartMatch_Parms;

	this->ProcessEvent ( pFn_StartMatch, &_StartMatch_Parms, NULL );
};

// Function GridGame.PgGameInfo.StartMatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::StartMatch ( )
{
	static UFunction* pFnStartMatch = NULL;

	if ( ! pFnStartMatch )
		pFnStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 46368 ];

	APgGameInfo_execStartMatch_Parms StartMatch_Parms;

	pFnStartMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartMatch, &StartMatch_Parms, NULL );

	pFnStartMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.PreExit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgGameInfo::eventPreExit ( )
{
	static UFunction* pFnPreExit = NULL;

	if ( ! pFnPreExit )
		pFnPreExit = (UFunction*) UObject::GObjObjects()->Data[ 46367 ];

	APgGameInfo_eventPreExit_Parms PreExit_Parms;

	this->ProcessEvent ( pFnPreExit, &PreExit_Parms, NULL );
};

// Function GridGame.PgGameInfo.EndLogging
// [0x00020002] 
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgGameInfo::EndLogging ( struct FString Reason )
{
	static UFunction* pFnEndLogging = NULL;

	if ( ! pFnEndLogging )
		pFnEndLogging = (UFunction*) UObject::GObjObjects()->Data[ 46365 ];

	APgGameInfo_execEndLogging_Parms EndLogging_Parms;
	memcpy ( &EndLogging_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndLogging, &EndLogging_Parms, NULL );
};

// Function GridGame.PgGameInfo.StartLogging
// [0x00024002] 
// Parameters infos:
// struct FString                 remoteIP                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// int                            Port                           ( CPF_OptionalParm | CPF_Parm )

void APgGameInfo::StartLogging ( struct FString remoteIP, int Port )
{
	static UFunction* pFnStartLogging = NULL;

	if ( ! pFnStartLogging )
		pFnStartLogging = (UFunction*) UObject::GObjObjects()->Data[ 46362 ];

	APgGameInfo_execStartLogging_Parms StartLogging_Parms;
	memcpy ( &StartLogging_Parms.remoteIP, &remoteIP, 0xC );
	StartLogging_Parms.Port = Port;

	this->ProcessEvent ( pFnStartLogging, &StartLogging_Parms, NULL );
};

// Function GridGame.PgGameInfo.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void APgGameInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 46361 ];

	APgGameInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgGameInfo.ForceGameplayEventsLogging
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Force                          ( CPF_Parm )

void APgGameInfo::ForceGameplayEventsLogging ( unsigned long Force )
{
	static UFunction* pFnForceGameplayEventsLogging = NULL;

	if ( ! pFnForceGameplayEventsLogging )
		pFnForceGameplayEventsLogging = (UFunction*) UObject::GObjObjects()->Data[ 46359 ];

	APgGameInfo_execForceGameplayEventsLogging_Parms ForceGameplayEventsLogging_Parms;
	ForceGameplayEventsLogging_Parms.Force = Force;

	pFnForceGameplayEventsLogging->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceGameplayEventsLogging, &ForceGameplayEventsLogging_Parms, NULL );

	pFnForceGameplayEventsLogging->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo.ShouldLogGameplayEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameInfo::ShouldLogGameplayEvents ( )
{
	static UFunction* pFnShouldLogGameplayEvents = NULL;

	if ( ! pFnShouldLogGameplayEvents )
		pFnShouldLogGameplayEvents = (UFunction*) UObject::GObjObjects()->Data[ 46357 ];

	APgGameInfo_execShouldLogGameplayEvents_Parms ShouldLogGameplayEvents_Parms;

	pFnShouldLogGameplayEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldLogGameplayEvents, &ShouldLogGameplayEvents_Parms, NULL );

	pFnShouldLogGameplayEvents->FunctionFlags |= 0x400;

	return ShouldLogGameplayEvents_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetDefaultOnlinePlayerState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char APgGameInfo::GetDefaultOnlinePlayerState ( )
{
	static UFunction* pFnGetDefaultOnlinePlayerState = NULL;

	if ( ! pFnGetDefaultOnlinePlayerState )
		pFnGetDefaultOnlinePlayerState = (UFunction*) UObject::GObjObjects()->Data[ 46355 ];

	APgGameInfo_execGetDefaultOnlinePlayerState_Parms GetDefaultOnlinePlayerState_Parms;

	pFnGetDefaultOnlinePlayerState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultOnlinePlayerState, &GetDefaultOnlinePlayerState_Parms, NULL );

	pFnGetDefaultOnlinePlayerState->FunctionFlags |= 0x400;

	return GetDefaultOnlinePlayerState_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.PostCommitMapChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APgGameInfo::eventPostCommitMapChange ( )
{
	static UFunction* pFnPostCommitMapChange = NULL;

	if ( ! pFnPostCommitMapChange )
		pFnPostCommitMapChange = (UFunction*) UObject::GObjObjects()->Data[ 46353 ];

	APgGameInfo_eventPostCommitMapChange_Parms PostCommitMapChange_Parms;

	this->ProcessEvent ( pFnPostCommitMapChange, &PostCommitMapChange_Parms, NULL );
};

// Function GridGame.PgGameInfo.PostLogout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void APgGameInfo::PostLogout ( class AController* C )
{
	static UFunction* pFnPostLogout = NULL;

	if ( ! pFnPostLogout )
		pFnPostLogout = (UFunction*) UObject::GObjObjects()->Data[ 46351 ];

	APgGameInfo_execPostLogout_Parms PostLogout_Parms;
	PostLogout_Parms.C = C;

	pFnPostLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostLogout, &PostLogout_Parms, NULL );

	pFnPostLogout->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._Logout
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void APgGameInfo::event_Logout ( class AController* Exiting )
{
	static UFunction* pFn_Logout = NULL;

	if ( ! pFn_Logout )
		pFn_Logout = (UFunction*) UObject::GObjObjects()->Data[ 46349 ];

	APgGameInfo_event_Logout_Parms _Logout_Parms;
	_Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFn_Logout, &_Logout_Parms, NULL );
};

// Function GridGame.PgGameInfo.Logout
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void APgGameInfo::eventLogout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 46347 ];

	APgGameInfo_eventLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	pFnLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );

	pFnLogout->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._PostLogin
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void APgGameInfo::event_PostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFn_PostLogin = NULL;

	if ( ! pFn_PostLogin )
		pFn_PostLogin = (UFunction*) UObject::GObjObjects()->Data[ 46345 ];

	APgGameInfo_event_PostLogin_Parms _PostLogin_Parms;
	_PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFn_PostLogin, &_PostLogin_Parms, NULL );
};

// Function GridGame.PgGameInfo.PostLogin
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void APgGameInfo::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 46343 ];

	APgGameInfo_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	pFnPostLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );

	pFnPostLogin->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._Login
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APlayerController* APgGameInfo::event_Login ( struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString* ErrorMessage )
{
	static UFunction* pFn_Login = NULL;

	if ( ! pFn_Login )
		pFn_Login = (UFunction*) UObject::GObjObjects()->Data[ 46337 ];

	APgGameInfo_event_Login_Parms _Login_Parms;
	memcpy ( &_Login_Parms.Portal, &Portal, 0xC );
	memcpy ( &_Login_Parms.Options, &Options, 0xC );
	memcpy ( &_Login_Parms.UniqueId, &UniqueId, 0x2C );

	this->ProcessEvent ( pFn_Login, &_Login_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &_Login_Parms.ErrorMessage, 0xC );

	return _Login_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.Login
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APlayerController* APgGameInfo::eventLogin ( struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString* ErrorMessage )
{
	static UFunction* pFnLogin = NULL;

	if ( ! pFnLogin )
		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 46331 ];

	APgGameInfo_eventLogin_Parms Login_Parms;
	memcpy ( &Login_Parms.Portal, &Portal, 0xC );
	memcpy ( &Login_Parms.Options, &Options, 0xC );
	memcpy ( &Login_Parms.UniqueId, &UniqueId, 0x2C );

	pFnLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );

	pFnLogin->FunctionFlags |= 0x400;

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &Login_Parms.ErrorMessage, 0xC );

	return Login_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo._PreLogin
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgGameInfo::event_PreLogin ( struct FString Options, struct FString Address, struct FString* ErrorMessage )
{
	static UFunction* pFn_PreLogin = NULL;

	if ( ! pFn_PreLogin )
		pFn_PreLogin = (UFunction*) UObject::GObjObjects()->Data[ 46327 ];

	APgGameInfo_event_PreLogin_Parms _PreLogin_Parms;
	memcpy ( &_PreLogin_Parms.Options, &Options, 0xC );
	memcpy ( &_PreLogin_Parms.Address, &Address, 0xC );

	this->ProcessEvent ( pFn_PreLogin, &_PreLogin_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &_PreLogin_Parms.ErrorMessage, 0xC );
};

// Function GridGame.PgGameInfo.PreLogin
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Address                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgGameInfo::eventPreLogin ( struct FString Options, struct FString Address, struct FString* ErrorMessage )
{
	static UFunction* pFnPreLogin = NULL;

	if ( ! pFnPreLogin )
		pFnPreLogin = (UFunction*) UObject::GObjObjects()->Data[ 46323 ];

	APgGameInfo_eventPreLogin_Parms PreLogin_Parms;
	memcpy ( &PreLogin_Parms.Options, &Options, 0xC );
	memcpy ( &PreLogin_Parms.Address, &Address, 0xC );

	pFnPreLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPreLogin, &PreLogin_Parms, NULL );

	pFnPreLogin->FunctionFlags |= 0x400;

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &PreLogin_Parms.ErrorMessage, 0xC );
};

// Function GridGame.PgGameInfo._InitGameReplicationInfo
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameInfo::event_InitGameReplicationInfo ( )
{
	static UFunction* pFn_InitGameReplicationInfo = NULL;

	if ( ! pFn_InitGameReplicationInfo )
		pFn_InitGameReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 46322 ];

	APgGameInfo_event_InitGameReplicationInfo_Parms _InitGameReplicationInfo_Parms;

	this->ProcessEvent ( pFn_InitGameReplicationInfo, &_InitGameReplicationInfo_Parms, NULL );
};

// Function GridGame.PgGameInfo.InitGameReplicationInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameInfo::InitGameReplicationInfo ( )
{
	static UFunction* pFnInitGameReplicationInfo = NULL;

	if ( ! pFnInitGameReplicationInfo )
		pFnInitGameReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 46321 ];

	APgGameInfo_execInitGameReplicationInfo_Parms InitGameReplicationInfo_Parms;

	pFnInitGameReplicationInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGameReplicationInfo, &InitGameReplicationInfo_Parms, NULL );

	pFnInitGameReplicationInfo->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameInfo._InitGame
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgGameInfo::event_InitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFn_InitGame = NULL;

	if ( ! pFn_InitGame )
		pFn_InitGame = (UFunction*) UObject::GObjObjects()->Data[ 46318 ];

	APgGameInfo_event_InitGame_Parms _InitGame_Parms;
	memcpy ( &_InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFn_InitGame, &_InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &_InitGame_Parms.ErrorMessage, 0xC );
};

// Function GridGame.PgGameInfo.InitGame
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgGameInfo::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 46315 ];

	APgGameInfo_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	pFnInitGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	pFnInitGame->FunctionFlags |= 0x400;

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function GridGame.PgGameInfo.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* APgGameInfo::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
{
	static UFunction* pFnSetGameType = NULL;

	if ( ! pFnSetGameType )
		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 46310 ];

	APgGameInfo_eventSetGameType_Parms SetGameType_Parms;
	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );

	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );

	return SetGameType_Parms.ReturnValue;
};

// Function GridGame.PgGameInfo.GetGameInfo
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class APgGameInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgGameInfo* APgGameInfo::GetGameInfo ( )
{
	static UFunction* pFnGetGameInfo = NULL;

	if ( ! pFnGetGameInfo )
		pFnGetGameInfo = (UFunction*) UObject::GObjObjects()->Data[ 45888 ];

	APgGameInfo_execGetGameInfo_Parms GetGameInfo_Parms;

	pFnGetGameInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGameInfo, &GetGameInfo_Parms, NULL );

	pFnGetGameInfo->FunctionFlags |= 0x400;

	return GetGameInfo_Parms.ReturnValue;
};

// Function GridGame.PgMPLobbyGameInfo.AllowPausing
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool APgMPLobbyGameInfo::AllowPausing ( class APlayerController* PC )
{
	static UFunction* pFnAllowPausing = NULL;

	if ( ! pFnAllowPausing )
		pFnAllowPausing = (UFunction*) UObject::GObjObjects()->Data[ 47391 ];

	APgMPLobbyGameInfo_execAllowPausing_Parms AllowPausing_Parms;
	AllowPausing_Parms.PC = PC;

	this->ProcessEvent ( pFnAllowPausing, &AllowPausing_Parms, NULL );

	return AllowPausing_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.LogSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::LogSettings ( )
{
	static UFunction* pFnLogSettings = NULL;

	if ( ! pFnLogSettings )
		pFnLogSettings = (UFunction*) UObject::GObjObjects()->Data[ 47384 ];

	APgMPGameInfo_execLogSettings_Parms LogSettings_Parms;

	pFnLogSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogSettings, &LogSettings_Parms, NULL );

	pFnLogSettings->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.OnEndGameDelayTimeOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::OnEndGameDelayTimeOut ( )
{
	static UFunction* pFnOnEndGameDelayTimeOut = NULL;

	if ( ! pFnOnEndGameDelayTimeOut )
		pFnOnEndGameDelayTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 47383 ];

	APgMPGameInfo_execOnEndGameDelayTimeOut_Parms OnEndGameDelayTimeOut_Parms;

	pFnOnEndGameDelayTimeOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnEndGameDelayTimeOut, &OnEndGameDelayTimeOut_Parms, NULL );

	pFnOnEndGameDelayTimeOut->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.OnStartGameDelayTimeOut
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::OnStartGameDelayTimeOut ( )
{
	static UFunction* pFnOnStartGameDelayTimeOut = NULL;

	if ( ! pFnOnStartGameDelayTimeOut )
		pFnOnStartGameDelayTimeOut = (UFunction*) UObject::GObjObjects()->Data[ 47382 ];

	APgMPGameInfo_execOnStartGameDelayTimeOut_Parms OnStartGameDelayTimeOut_Parms;

	pFnOnStartGameDelayTimeOut->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStartGameDelayTimeOut, &OnStartGameDelayTimeOut_Parms, NULL );

	pFnOnStartGameDelayTimeOut->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo._Timer
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgMPGameInfo::event_Timer ( )
{
	static UFunction* pFn_Timer = NULL;

	if ( ! pFn_Timer )
		pFn_Timer = (UFunction*) UObject::GObjObjects()->Data[ 47381 ];

	APgMPGameInfo_event_Timer_Parms _Timer_Parms;

	this->ProcessEvent ( pFn_Timer, &_Timer_Parms, NULL );
};

// Function GridGame.PgMPGameInfo.Timer
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgMPGameInfo::eventTimer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 47380 ];

	APgMPGameInfo_eventTimer_Parms Timer_Parms;

	pFnTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );

	pFnTimer->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.AllowPausing
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_OptionalParm | CPF_Parm )

bool APgMPGameInfo::AllowPausing ( class APlayerController* PC )
{
	static UFunction* pFnAllowPausing = NULL;

	if ( ! pFnAllowPausing )
		pFnAllowPausing = (UFunction*) UObject::GObjObjects()->Data[ 47377 ];

	APgMPGameInfo_execAllowPausing_Parms AllowPausing_Parms;
	AllowPausing_Parms.PC = PC;

	pFnAllowPausing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllowPausing, &AllowPausing_Parms, NULL );

	pFnAllowPausing->FunctionFlags |= 0x400;

	return AllowPausing_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.SwitchSides
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::SwitchSides ( )
{
	static UFunction* pFnSwitchSides = NULL;

	if ( ! pFnSwitchSides )
		pFnSwitchSides = (UFunction*) UObject::GObjObjects()->Data[ 47376 ];

	APgMPGameInfo_execSwitchSides_Parms SwitchSides_Parms;

	pFnSwitchSides->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwitchSides, &SwitchSides_Parms, NULL );

	pFnSwitchSides->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ResetStats
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Reason                         ( CPF_Parm )

void APgMPGameInfo::ResetStats ( unsigned char Reason )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = (UFunction*) UObject::GObjObjects()->Data[ 47374 ];

	APgMPGameInfo_execResetStats_Parms ResetStats_Parms;
	ResetStats_Parms.Reason = Reason;

	pFnResetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );

	pFnResetStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.InitNextRound
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::InitNextRound ( )
{
	static UFunction* pFnInitNextRound = NULL;

	if ( ! pFnInitNextRound )
		pFnInitNextRound = (UFunction*) UObject::GObjObjects()->Data[ 47373 ];

	APgMPGameInfo_execInitNextRound_Parms InitNextRound_Parms;

	pFnInitNextRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitNextRound, &InitNextRound_Parms, NULL );

	pFnInitNextRound->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.InitRounds
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::InitRounds ( )
{
	static UFunction* pFnInitRounds = NULL;

	if ( ! pFnInitRounds )
		pFnInitRounds = (UFunction*) UObject::GObjObjects()->Data[ 47372 ];

	APgMPGameInfo_execInitRounds_Parms InitRounds_Parms;

	pFnInitRounds->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitRounds, &InitRounds_Parms, NULL );

	pFnInitRounds->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.CanStartMatch
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgMPGameInfo::CanStartMatch ( )
{
	static UFunction* pFnCanStartMatch = NULL;

	if ( ! pFnCanStartMatch )
		pFnCanStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 47370 ];

	APgMPGameInfo_execCanStartMatch_Parms CanStartMatch_Parms;

	pFnCanStartMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanStartMatch, &CanStartMatch_Parms, NULL );

	pFnCanStartMatch->FunctionFlags |= 0x400;

	return CanStartMatch_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.GetRandomBotName
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned long                  Reset                          ( CPF_OptionalParm | CPF_Parm )

struct FString APgMPGameInfo::GetRandomBotName ( unsigned long Reset )
{
	static UFunction* pFnGetRandomBotName = NULL;

	if ( ! pFnGetRandomBotName )
		pFnGetRandomBotName = (UFunction*) UObject::GObjObjects()->Data[ 47367 ];

	APgMPGameInfo_execGetRandomBotName_Parms GetRandomBotName_Parms;
	GetRandomBotName_Parms.Reset = Reset;

	pFnGetRandomBotName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRandomBotName, &GetRandomBotName_Parms, NULL );

	pFnGetRandomBotName->FunctionFlags |= 0x400;

	return GetRandomBotName_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.RemoveBot
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::RemoveBot ( )
{
	static UFunction* pFnRemoveBot = NULL;

	if ( ! pFnRemoveBot )
		pFnRemoveBot = (UFunction*) UObject::GObjObjects()->Data[ 47366 ];

	APgMPGameInfo_execRemoveBot_Parms RemoveBot_Parms;

	pFnRemoveBot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveBot, &RemoveBot_Parms, NULL );

	pFnRemoveBot->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.RemoveBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void APgMPGameInfo::RemoveBots ( int Num )
{
	static UFunction* pFnRemoveBots = NULL;

	if ( ! pFnRemoveBots )
		pFnRemoveBots = (UFunction*) UObject::GObjObjects()->Data[ 47364 ];

	APgMPGameInfo_execRemoveBots_Parms RemoveBots_Parms;
	RemoveBots_Parms.Num = Num;

	pFnRemoveBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveBots, &RemoveBots_Parms, NULL );

	pFnRemoveBots->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.NumExcessBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgMPGameInfo::NumExcessBots ( )
{
	static UFunction* pFnNumExcessBots = NULL;

	if ( ! pFnNumExcessBots )
		pFnNumExcessBots = (UFunction*) UObject::GObjObjects()->Data[ 47362 ];

	APgMPGameInfo_execNumExcessBots_Parms NumExcessBots_Parms;

	pFnNumExcessBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNumExcessBots, &NumExcessBots_Parms, NULL );

	pFnNumExcessBots->FunctionFlags |= 0x400;

	return NumExcessBots_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.TooManyBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgMPGameInfo::TooManyBots ( )
{
	static UFunction* pFnTooManyBots = NULL;

	if ( ! pFnTooManyBots )
		pFnTooManyBots = (UFunction*) UObject::GObjObjects()->Data[ 47360 ];

	APgMPGameInfo_execTooManyBots_Parms TooManyBots_Parms;

	pFnTooManyBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTooManyBots, &TooManyBots_Parms, NULL );

	pFnTooManyBots->FunctionFlags |= 0x400;

	return TooManyBots_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.SpawnBot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  BotArchetype                   ( CPF_Parm )

void APgMPGameInfo::SpawnBot ( class AActor* BotArchetype )
{
	static UFunction* pFnSpawnBot = NULL;

	if ( ! pFnSpawnBot )
		pFnSpawnBot = (UFunction*) UObject::GObjObjects()->Data[ 47358 ];

	APgMPGameInfo_execSpawnBot_Parms SpawnBot_Parms;
	SpawnBot_Parms.BotArchetype = BotArchetype;

	pFnSpawnBot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnBot, &SpawnBot_Parms, NULL );

	pFnSpawnBot->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.AddBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void APgMPGameInfo::AddBots ( int Num )
{
	static UFunction* pFnAddBots = NULL;

	if ( ! pFnAddBots )
		pFnAddBots = (UFunction*) UObject::GObjObjects()->Data[ 47356 ];

	APgMPGameInfo_execAddBots_Parms AddBots_Parms;
	AddBots_Parms.Num = Num;

	pFnAddBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddBots, &AddBots_Parms, NULL );

	pFnAddBots->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.FillBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::FillBots ( )
{
	static UFunction* pFnFillBots = NULL;

	if ( ! pFnFillBots )
		pFnFillBots = (UFunction*) UObject::GObjObjects()->Data[ 47355 ];

	APgMPGameInfo_execFillBots_Parms FillBots_Parms;

	pFnFillBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillBots, &FillBots_Parms, NULL );

	pFnFillBots->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.UpdateBotCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::UpdateBotCount ( )
{
	static UFunction* pFnUpdateBotCount = NULL;

	if ( ! pFnUpdateBotCount )
		pFnUpdateBotCount = (UFunction*) UObject::GObjObjects()->Data[ 47354 ];

	APgMPGameInfo_execUpdateBotCount_Parms UpdateBotCount_Parms;

	pFnUpdateBotCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateBotCount, &UpdateBotCount_Parms, NULL );

	pFnUpdateBotCount->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.UpdateTeamSpeakers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::UpdateTeamSpeakers ( )
{
	static UFunction* pFnUpdateTeamSpeakers = NULL;

	if ( ! pFnUpdateTeamSpeakers )
		pFnUpdateTeamSpeakers = (UFunction*) UObject::GObjObjects()->Data[ 47353 ];

	APgMPGameInfo_execUpdateTeamSpeakers_Parms UpdateTeamSpeakers_Parms;

	pFnUpdateTeamSpeakers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTeamSpeakers, &UpdateTeamSpeakers_Parms, NULL );

	pFnUpdateTeamSpeakers->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.GetPreferredEnemyTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

unsigned char APgMPGameInfo::GetPreferredEnemyTeam ( unsigned char TeamIndex )
{
	static UFunction* pFnGetPreferredEnemyTeam = NULL;

	if ( ! pFnGetPreferredEnemyTeam )
		pFnGetPreferredEnemyTeam = (UFunction*) UObject::GObjObjects()->Data[ 47350 ];

	APgMPGameInfo_execGetPreferredEnemyTeam_Parms GetPreferredEnemyTeam_Parms;
	GetPreferredEnemyTeam_Parms.TeamIndex = TeamIndex;

	pFnGetPreferredEnemyTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreferredEnemyTeam, &GetPreferredEnemyTeam_Parms, NULL );

	pFnGetPreferredEnemyTeam->FunctionFlags |= 0x400;

	return GetPreferredEnemyTeam_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.InitDefendingTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::InitDefendingTeam ( )
{
	static UFunction* pFnInitDefendingTeam = NULL;

	if ( ! pFnInitDefendingTeam )
		pFnInitDefendingTeam = (UFunction*) UObject::GObjObjects()->Data[ 47349 ];

	APgMPGameInfo_execInitDefendingTeam_Parms InitDefendingTeam_Parms;

	pFnInitDefendingTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitDefendingTeam, &InitDefendingTeam_Parms, NULL );

	pFnInitDefendingTeam->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.PickTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Current                        ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char APgMPGameInfo::PickTeam ( unsigned char Current, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 47345 ];

	APgMPGameInfo_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Current = Current;
	PickTeam_Parms.C = C;

	pFnPickTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	pFnPickTeam->FunctionFlags |= 0x400;

	return PickTeam_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.FreeColorIndexFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void APgMPGameInfo::FreeColorIndexFrom ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnFreeColorIndexFrom = NULL;

	if ( ! pFnFreeColorIndexFrom )
		pFnFreeColorIndexFrom = (UFunction*) UObject::GObjObjects()->Data[ 47343 ];

	APgMPGameInfo_execFreeColorIndexFrom_Parms FreeColorIndexFrom_Parms;
	FreeColorIndexFrom_Parms.PRI = PRI;

	pFnFreeColorIndexFrom->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFreeColorIndexFrom, &FreeColorIndexFrom_Parms, NULL );

	pFnFreeColorIndexFrom->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.AssignColorIndexTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void APgMPGameInfo::AssignColorIndexTo ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnAssignColorIndexTo = NULL;

	if ( ! pFnAssignColorIndexTo )
		pFnAssignColorIndexTo = (UFunction*) UObject::GObjObjects()->Data[ 47341 ];

	APgMPGameInfo_execAssignColorIndexTo_Parms AssignColorIndexTo_Parms;
	AssignColorIndexTo_Parms.PRI = PRI;

	pFnAssignColorIndexTo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAssignColorIndexTo, &AssignColorIndexTo_Parms, NULL );

	pFnAssignColorIndexTo->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.UpdateEndGameStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::UpdateEndGameStats ( )
{
	static UFunction* pFnUpdateEndGameStats = NULL;

	if ( ! pFnUpdateEndGameStats )
		pFnUpdateEndGameStats = (UFunction*) UObject::GObjObjects()->Data[ 47340 ];

	APgMPGameInfo_execUpdateEndGameStats_Parms UpdateEndGameStats_Parms;

	pFnUpdateEndGameStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateEndGameStats, &UpdateEndGameStats_Parms, NULL );

	pFnUpdateEndGameStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.AwardXPForEndGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::AwardXPForEndGame ( )
{
	static UFunction* pFnAwardXPForEndGame = NULL;

	if ( ! pFnAwardXPForEndGame )
		pFnAwardXPForEndGame = (UFunction*) UObject::GObjObjects()->Data[ 47339 ];

	APgMPGameInfo_execAwardXPForEndGame_Parms AwardXPForEndGame_Parms;

	pFnAwardXPForEndGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardXPForEndGame, &AwardXPForEndGame_Parms, NULL );

	pFnAwardXPForEndGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.OnFireDelayedKismetEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::OnFireDelayedKismetEvent ( )
{
	static UFunction* pFnOnFireDelayedKismetEvent = NULL;

	if ( ! pFnOnFireDelayedKismetEvent )
		pFnOnFireDelayedKismetEvent = (UFunction*) UObject::GObjObjects()->Data[ 47338 ];

	APgMPGameInfo_execOnFireDelayedKismetEvent_Parms OnFireDelayedKismetEvent_Parms;

	pFnOnFireDelayedKismetEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnFireDelayedKismetEvent, &OnFireDelayedKismetEvent_Parms, NULL );

	pFnOnFireDelayedKismetEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.FireKismetEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  eEvent                         ( CPF_Parm )
// float                          Delay                          ( CPF_OptionalParm | CPF_Parm )

void APgMPGameInfo::FireKismetEvent ( unsigned char eEvent, float Delay )
{
	static UFunction* pFnFireKismetEvent = NULL;

	if ( ! pFnFireKismetEvent )
		pFnFireKismetEvent = (UFunction*) UObject::GObjObjects()->Data[ 47335 ];

	APgMPGameInfo_execFireKismetEvent_Parms FireKismetEvent_Parms;
	FireKismetEvent_Parms.eEvent = eEvent;
	FireKismetEvent_Parms.Delay = Delay;

	pFnFireKismetEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireKismetEvent, &FireKismetEvent_Parms, NULL );

	pFnFireKismetEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.PickWinner
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::PickWinner ( )
{
	static UFunction* pFnPickWinner = NULL;

	if ( ! pFnPickWinner )
		pFnPickWinner = (UFunction*) UObject::GObjObjects()->Data[ 47334 ];

	APgMPGameInfo_execPickWinner_Parms PickWinner_Parms;

	pFnPickWinner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPickWinner, &PickWinner_Parms, NULL );

	pFnPickWinner->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.Killed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void APgMPGameInfo::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 47329 ];

	APgMPGameInfo_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	pFnKilled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );

	pFnKilled->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ScoreTimeup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::ScoreTimeup ( )
{
	static UFunction* pFnScoreTimeup = NULL;

	if ( ! pFnScoreTimeup )
		pFnScoreTimeup = (UFunction*) UObject::GObjObjects()->Data[ 47328 ];

	APgMPGameInfo_execScoreTimeup_Parms ScoreTimeup_Parms;

	pFnScoreTimeup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreTimeup, &ScoreTimeup_Parms, NULL );

	pFnScoreTimeup->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ScoreDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Victim                         ( CPF_Parm )

void APgMPGameInfo::ScoreDeath ( class AController* Victim )
{
	static UFunction* pFnScoreDeath = NULL;

	if ( ! pFnScoreDeath )
		pFnScoreDeath = (UFunction*) UObject::GObjObjects()->Data[ 47326 ];

	APgMPGameInfo_execScoreDeath_Parms ScoreDeath_Parms;
	ScoreDeath_Parms.Victim = Victim;

	pFnScoreDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreDeath, &ScoreDeath_Parms, NULL );

	pFnScoreDeath->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ScoreKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Victim                         ( CPF_Parm )

void APgMPGameInfo::ScoreKill ( class AController* Killer, class AController* Victim )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 47323 ];

	APgMPGameInfo_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Victim = Victim;

	pFnScoreKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );

	pFnScoreKill->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ScoreObjective
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )
// int                            Amount                         ( CPF_Parm )

void APgMPGameInfo::ScoreObjective ( class APlayerReplicationInfo* Scorer, int Amount )
{
	static UFunction* pFnScoreObjective = NULL;

	if ( ! pFnScoreObjective )
		pFnScoreObjective = (UFunction*) UObject::GObjObjects()->Data[ 47320 ];

	APgMPGameInfo_execScoreObjective_Parms ScoreObjective_Parms;
	ScoreObjective_Parms.Scorer = Scorer;
	ScoreObjective_Parms.Amount = Amount;

	pFnScoreObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScoreObjective, &ScoreObjective_Parms, NULL );

	pFnScoreObjective->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.Score
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Event                          ( CPF_Parm )
// class AActor*                  Scorer                         ( CPF_Parm )

void APgMPGameInfo::Score ( struct FName Event, class AActor* Scorer )
{
	static UFunction* pFnScore = NULL;

	if ( ! pFnScore )
		pFnScore = (UFunction*) UObject::GObjObjects()->Data[ 47317 ];

	APgMPGameInfo_execScore_Parms Score_Parms;
	memcpy ( &Score_Parms.Event, &Event, 0x8 );
	Score_Parms.Scorer = Scorer;

	pFnScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScore, &Score_Parms, NULL );

	pFnScore->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.CheckTimeup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgMPGameInfo::CheckTimeup ( )
{
	static UFunction* pFnCheckTimeup = NULL;

	if ( ! pFnCheckTimeup )
		pFnCheckTimeup = (UFunction*) UObject::GObjObjects()->Data[ 47315 ];

	APgMPGameInfo_execCheckTimeup_Parms CheckTimeup_Parms;

	pFnCheckTimeup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckTimeup, &CheckTimeup_Parms, NULL );

	pFnCheckTimeup->FunctionFlags |= 0x400;

	return CheckTimeup_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.CheckLivesRemaining
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgMPGameInfo::CheckLivesRemaining ( )
{
	static UFunction* pFnCheckLivesRemaining = NULL;

	if ( ! pFnCheckLivesRemaining )
		pFnCheckLivesRemaining = (UFunction*) UObject::GObjObjects()->Data[ 47313 ];

	APgMPGameInfo_execCheckLivesRemaining_Parms CheckLivesRemaining_Parms;

	pFnCheckLivesRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckLivesRemaining, &CheckLivesRemaining_Parms, NULL );

	pFnCheckLivesRemaining->FunctionFlags |= 0x400;

	return CheckLivesRemaining_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.CheckScore
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool APgMPGameInfo::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 47310 ];

	APgMPGameInfo_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	pFnCheckScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	pFnCheckScore->FunctionFlags |= 0x400;

	return CheckScore_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.PlayerCanRestartGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       Player                         ( CPF_Parm )

bool APgMPGameInfo::PlayerCanRestartGame ( class APlayerController* Player )
{
	static UFunction* pFnPlayerCanRestartGame = NULL;

	if ( ! pFnPlayerCanRestartGame )
		pFnPlayerCanRestartGame = (UFunction*) UObject::GObjObjects()->Data[ 47307 ];

	APgMPGameInfo_execPlayerCanRestartGame_Parms PlayerCanRestartGame_Parms;
	PlayerCanRestartGame_Parms.Player = Player;

	pFnPlayerCanRestartGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerCanRestartGame, &PlayerCanRestartGame_Parms, NULL );

	pFnPlayerCanRestartGame->FunctionFlags |= 0x400;

	return PlayerCanRestartGame_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo.EndGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgMPGameInfo::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 47304 ];

	APgMPGameInfo_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	pFnEndGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );

	pFnEndGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.EndRound
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void APgMPGameInfo::EndRound ( struct FString Reason )
{
	static UFunction* pFnEndRound = NULL;

	if ( ! pFnEndRound )
		pFnEndRound = (UFunction*) UObject::GObjObjects()->Data[ 47302 ];

	APgMPGameInfo_execEndRound_Parms EndRound_Parms;
	memcpy ( &EndRound_Parms.Reason, &Reason, 0xC );

	pFnEndRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndRound, &EndRound_Parms, NULL );

	pFnEndRound->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.ResetLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 47301 ];

	APgMPGameInfo_execResetLevel_Parms ResetLevel_Parms;

	pFnResetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );

	pFnResetLevel->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.DelayedStartMatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::DelayedStartMatch ( )
{
	static UFunction* pFnDelayedStartMatch = NULL;

	if ( ! pFnDelayedStartMatch )
		pFnDelayedStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 47300 ];

	APgMPGameInfo_execDelayedStartMatch_Parms DelayedStartMatch_Parms;

	pFnDelayedStartMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDelayedStartMatch, &DelayedStartMatch_Parms, NULL );

	pFnDelayedStartMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.StartMatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgMPGameInfo::StartMatch ( )
{
	static UFunction* pFnStartMatch = NULL;

	if ( ! pFnStartMatch )
		pFnStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 47299 ];

	APgMPGameInfo_execStartMatch_Parms StartMatch_Parms;

	pFnStartMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartMatch, &StartMatch_Parms, NULL );

	pFnStartMatch->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.HandleSeamlessTravelPlayer
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void APgMPGameInfo::eventHandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

	if ( ! pFnHandleSeamlessTravelPlayer )
		pFnHandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 47297 ];

	APgMPGameInfo_eventHandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;

	pFnHandleSeamlessTravelPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleSeamlessTravelPlayer, &HandleSeamlessTravelPlayer_Parms, NULL );

	pFnHandleSeamlessTravelPlayer->FunctionFlags |= 0x400;

	if ( C )
		*C = HandleSeamlessTravelPlayer_Parms.C;
};

// Function GridGame.PgMPGameInfo.GetDefaultPlayerArchetype
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class AActor* APgMPGameInfo::GetDefaultPlayerArchetype ( class AController* C )
{
	static UFunction* pFnGetDefaultPlayerArchetype = NULL;

	if ( ! pFnGetDefaultPlayerArchetype )
		pFnGetDefaultPlayerArchetype = (UFunction*) UObject::GObjObjects()->Data[ 47294 ];

	APgMPGameInfo_execGetDefaultPlayerArchetype_Parms GetDefaultPlayerArchetype_Parms;
	GetDefaultPlayerArchetype_Parms.C = C;

	pFnGetDefaultPlayerArchetype->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefaultPlayerArchetype, &GetDefaultPlayerArchetype_Parms, NULL );

	pFnGetDefaultPlayerArchetype->FunctionFlags |= 0x400;

	return GetDefaultPlayerArchetype_Parms.ReturnValue;
};

// Function GridGame.PgMPGameInfo._PostSeamlessTravel
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgMPGameInfo::event_PostSeamlessTravel ( )
{
	static UFunction* pFn_PostSeamlessTravel = NULL;

	if ( ! pFn_PostSeamlessTravel )
		pFn_PostSeamlessTravel = (UFunction*) UObject::GObjObjects()->Data[ 47293 ];

	APgMPGameInfo_event_PostSeamlessTravel_Parms _PostSeamlessTravel_Parms;

	this->ProcessEvent ( pFn_PostSeamlessTravel, &_PostSeamlessTravel_Parms, NULL );
};

// Function GridGame.PgMPGameInfo.PostSeamlessTravel
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgMPGameInfo::eventPostSeamlessTravel ( )
{
	static UFunction* pFnPostSeamlessTravel = NULL;

	if ( ! pFnPostSeamlessTravel )
		pFnPostSeamlessTravel = (UFunction*) UObject::GObjObjects()->Data[ 47292 ];

	APgMPGameInfo_eventPostSeamlessTravel_Parms PostSeamlessTravel_Parms;

	pFnPostSeamlessTravel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostSeamlessTravel, &PostSeamlessTravel_Parms, NULL );

	pFnPostSeamlessTravel->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.PostLogout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void APgMPGameInfo::PostLogout ( class AController* C )
{
	static UFunction* pFnPostLogout = NULL;

	if ( ! pFnPostLogout )
		pFnPostLogout = (UFunction*) UObject::GObjObjects()->Data[ 47290 ];

	APgMPGameInfo_execPostLogout_Parms PostLogout_Parms;
	PostLogout_Parms.C = C;

	pFnPostLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostLogout, &PostLogout_Parms, NULL );

	pFnPostLogout->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.Logout
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void APgMPGameInfo::eventLogout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 47288 ];

	APgMPGameInfo_eventLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	pFnLogout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );

	pFnLogout->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.PostLogin
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void APgMPGameInfo::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 47286 ];

	APgMPGameInfo_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	pFnPostLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );

	pFnPostLogin->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPGameInfo.InitGame
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgMPGameInfo::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 47283 ];

	APgMPGameInfo_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	pFnInitGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	pFnInitGame->FunctionFlags |= 0x400;

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function GridGame.PgGameReplicationInfo.OnTalkingStateChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* PRI                            ( CPF_Parm )

void APgGameReplicationInfo::OnTalkingStateChanged ( class APgPlayerReplicationInfo* PRI )
{
	static UFunction* pFnOnTalkingStateChanged = NULL;

	if ( ! pFnOnTalkingStateChanged )
		pFnOnTalkingStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 46809 ];

	APgGameReplicationInfo_execOnTalkingStateChanged_Parms OnTalkingStateChanged_Parms;
	OnTalkingStateChanged_Parms.PRI = PRI;

	pFnOnTalkingStateChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnTalkingStateChanged, &OnTalkingStateChanged_Parms, NULL );

	pFnOnTalkingStateChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo.InitVoiceTokens
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameReplicationInfo::InitVoiceTokens ( )
{
	static UFunction* pFnInitVoiceTokens = NULL;

	if ( ! pFnInitVoiceTokens )
		pFnInitVoiceTokens = (UFunction*) UObject::GObjObjects()->Data[ 46808 ];

	APgGameReplicationInfo_execInitVoiceTokens_Parms InitVoiceTokens_Parms;

	pFnInitVoiceTokens->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitVoiceTokens, &InitVoiceTokens_Parms, NULL );

	pFnInitVoiceTokens->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo.IsLastRound
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameReplicationInfo::IsLastRound ( )
{
	static UFunction* pFnIsLastRound = NULL;

	if ( ! pFnIsLastRound )
		pFnIsLastRound = (UFunction*) UObject::GObjObjects()->Data[ 46806 ];

	APgGameReplicationInfo_execIsLastRound_Parms IsLastRound_Parms;

	pFnIsLastRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLastRound, &IsLastRound_Parms, NULL );

	pFnIsLastRound->FunctionFlags |= 0x400;

	return IsLastRound_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.IsRoundBasedGame
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameReplicationInfo::IsRoundBasedGame ( )
{
	static UFunction* pFnIsRoundBasedGame = NULL;

	if ( ! pFnIsRoundBasedGame )
		pFnIsRoundBasedGame = (UFunction*) UObject::GObjObjects()->Data[ 46804 ];

	APgGameReplicationInfo_execIsRoundBasedGame_Parms IsRoundBasedGame_Parms;

	pFnIsRoundBasedGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRoundBasedGame, &IsRoundBasedGame_Parms, NULL );

	pFnIsRoundBasedGame->FunctionFlags |= 0x400;

	return IsRoundBasedGame_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetDefendingTeam
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgTeamInfo* APgGameReplicationInfo::GetDefendingTeam ( )
{
	static UFunction* pFnGetDefendingTeam = NULL;

	if ( ! pFnGetDefendingTeam )
		pFnGetDefendingTeam = (UFunction*) UObject::GObjObjects()->Data[ 46802 ];

	APgGameReplicationInfo_execGetDefendingTeam_Parms GetDefendingTeam_Parms;

	pFnGetDefendingTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDefendingTeam, &GetDefendingTeam_Parms, NULL );

	pFnGetDefendingTeam->FunctionFlags |= 0x400;

	return GetDefendingTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetRandomTeam
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgTeamInfo* APgGameReplicationInfo::GetRandomTeam ( )
{
	static UFunction* pFnGetRandomTeam = NULL;

	if ( ! pFnGetRandomTeam )
		pFnGetRandomTeam = (UFunction*) UObject::GObjObjects()->Data[ 46800 ];

	APgGameReplicationInfo_execGetRandomTeam_Parms GetRandomTeam_Parms;

	pFnGetRandomTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRandomTeam, &GetRandomTeam_Parms, NULL );

	pFnGetRandomTeam->FunctionFlags |= 0x400;

	return GetRandomTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetLeastHumanTeam
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  AllowTies                      ( CPF_OptionalParm | CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetLeastHumanTeam ( unsigned long AllowTies )
{
	static UFunction* pFnGetLeastHumanTeam = NULL;

	if ( ! pFnGetLeastHumanTeam )
		pFnGetLeastHumanTeam = (UFunction*) UObject::GObjObjects()->Data[ 46797 ];

	APgGameReplicationInfo_execGetLeastHumanTeam_Parms GetLeastHumanTeam_Parms;
	GetLeastHumanTeam_Parms.AllowTies = AllowTies;

	pFnGetLeastHumanTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLeastHumanTeam, &GetLeastHumanTeam_Parms, NULL );

	pFnGetLeastHumanTeam->FunctionFlags |= 0x400;

	return GetLeastHumanTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetMostHumanTeam
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  AllowTies                      ( CPF_OptionalParm | CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetMostHumanTeam ( unsigned long AllowTies )
{
	static UFunction* pFnGetMostHumanTeam = NULL;

	if ( ! pFnGetMostHumanTeam )
		pFnGetMostHumanTeam = (UFunction*) UObject::GObjObjects()->Data[ 46794 ];

	APgGameReplicationInfo_execGetMostHumanTeam_Parms GetMostHumanTeam_Parms;
	GetMostHumanTeam_Parms.AllowTies = AllowTies;

	pFnGetMostHumanTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMostHumanTeam, &GetMostHumanTeam_Parms, NULL );

	pFnGetMostHumanTeam->FunctionFlags |= 0x400;

	return GetMostHumanTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetSmallestTeam
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  AllowTies                      ( CPF_OptionalParm | CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetSmallestTeam ( unsigned long AllowTies )
{
	static UFunction* pFnGetSmallestTeam = NULL;

	if ( ! pFnGetSmallestTeam )
		pFnGetSmallestTeam = (UFunction*) UObject::GObjObjects()->Data[ 46791 ];

	APgGameReplicationInfo_execGetSmallestTeam_Parms GetSmallestTeam_Parms;
	GetSmallestTeam_Parms.AllowTies = AllowTies;

	pFnGetSmallestTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSmallestTeam, &GetSmallestTeam_Parms, NULL );

	pFnGetSmallestTeam->FunctionFlags |= 0x400;

	return GetSmallestTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetBiggestTeam
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  AllowTies                      ( CPF_OptionalParm | CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetBiggestTeam ( unsigned long AllowTies )
{
	static UFunction* pFnGetBiggestTeam = NULL;

	if ( ! pFnGetBiggestTeam )
		pFnGetBiggestTeam = (UFunction*) UObject::GObjObjects()->Data[ 46788 ];

	APgGameReplicationInfo_execGetBiggestTeam_Parms GetBiggestTeam_Parms;
	GetBiggestTeam_Parms.AllowTies = AllowTies;

	pFnGetBiggestTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBiggestTeam, &GetBiggestTeam_Parms, NULL );

	pFnGetBiggestTeam->FunctionFlags |= 0x400;

	return GetBiggestTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetTeamByName
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   TeamName                       ( CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetTeamByName ( struct FName TeamName )
{
	static UFunction* pFnGetTeamByName = NULL;

	if ( ! pFnGetTeamByName )
		pFnGetTeamByName = (UFunction*) UObject::GObjObjects()->Data[ 46785 ];

	APgGameReplicationInfo_execGetTeamByName_Parms GetTeamByName_Parms;
	memcpy ( &GetTeamByName_Parms.TeamName, &TeamName, 0x8 );

	pFnGetTeamByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamByName, &GetTeamByName_Parms, NULL );

	pFnGetTeamByName->FunctionFlags |= 0x400;

	return GetTeamByName_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetTeam
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamID                         ( CPF_Parm )

class APgTeamInfo* APgGameReplicationInfo::GetTeam ( unsigned char TeamID )
{
	static UFunction* pFnGetTeam = NULL;

	if ( ! pFnGetTeam )
		pFnGetTeam = (UFunction*) UObject::GObjObjects()->Data[ 46782 ];

	APgGameReplicationInfo_execGetTeam_Parms GetTeam_Parms;
	GetTeam_Parms.TeamID = TeamID;

	pFnGetTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeam, &GetTeam_Parms, NULL );

	pFnGetTeam->FunctionFlags |= 0x400;

	return GetTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.OnSameTeam
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

bool APgGameReplicationInfo::OnSameTeam ( class AActor* A, class AActor* B )
{
	static UFunction* pFnOnSameTeam = NULL;

	if ( ! pFnOnSameTeam )
		pFnOnSameTeam = (UFunction*) UObject::GObjObjects()->Data[ 46778 ];

	APgGameReplicationInfo_execOnSameTeam_Parms OnSameTeam_Parms;
	OnSameTeam_Parms.A = A;
	OnSameTeam_Parms.B = B;

	pFnOnSameTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnSameTeam, &OnSameTeam_Parms, NULL );

	pFnOnSameTeam->FunctionFlags |= 0x400;

	return OnSameTeam_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.IsTeamGame
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameReplicationInfo::IsTeamGame ( )
{
	static UFunction* pFnIsTeamGame = NULL;

	if ( ! pFnIsTeamGame )
		pFnIsTeamGame = (UFunction*) UObject::GObjObjects()->Data[ 46776 ];

	APgGameReplicationInfo_execIsTeamGame_Parms IsTeamGame_Parms;

	pFnIsTeamGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTeamGame, &IsTeamGame_Parms, NULL );

	pFnIsTeamGame->FunctionFlags |= 0x400;

	return IsTeamGame_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetNumTeams
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgGameReplicationInfo::GetNumTeams ( )
{
	static UFunction* pFnGetNumTeams = NULL;

	if ( ! pFnGetNumTeams )
		pFnGetNumTeams = (UFunction*) UObject::GObjObjects()->Data[ 46774 ];

	APgGameReplicationInfo_execGetNumTeams_Parms GetNumTeams_Parms;

	pFnGetNumTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumTeams, &GetNumTeams_Parms, NULL );

	pFnGetNumTeams->FunctionFlags |= 0x400;

	return GetNumTeams_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GetWinningPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerReplicationInfo* APgGameReplicationInfo::GetWinningPlayer ( )
{
	static UFunction* pFnGetWinningPlayer = NULL;

	if ( ! pFnGetWinningPlayer )
		pFnGetWinningPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46772 ];

	APgGameReplicationInfo_execGetWinningPlayer_Parms GetWinningPlayer_Parms;

	pFnGetWinningPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWinningPlayer, &GetWinningPlayer_Parms, NULL );

	pFnGetWinningPlayer->FunctionFlags |= 0x400;

	return GetWinningPlayer_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo.GameInProgress
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgGameReplicationInfo::GameInProgress ( )
{
	static UFunction* pFnGameInProgress = NULL;

	if ( ! pFnGameInProgress )
		pFnGameInProgress = (UFunction*) UObject::GObjObjects()->Data[ 41323 ];

	APgGameReplicationInfo_execGameInProgress_Parms GameInProgress_Parms;

	pFnGameInProgress->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGameInProgress, &GameInProgress_Parms, NULL );

	pFnGameInProgress->FunctionFlags |= 0x400;

	return GameInProgress_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo._EndGame
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameReplicationInfo::event_EndGame ( )
{
	static UFunction* pFn_EndGame = NULL;

	if ( ! pFn_EndGame )
		pFn_EndGame = (UFunction*) UObject::GObjObjects()->Data[ 46771 ];

	APgGameReplicationInfo_event_EndGame_Parms _EndGame_Parms;

	this->ProcessEvent ( pFn_EndGame, &_EndGame_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo.EndGame
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgGameReplicationInfo::EndGame ( )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 46770 ];

	APgGameReplicationInfo_execEndGame_Parms EndGame_Parms;

	pFnEndGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );

	pFnEndGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo._SortPRIArray
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameReplicationInfo::event_SortPRIArray ( )
{
	static UFunction* pFn_SortPRIArray = NULL;

	if ( ! pFn_SortPRIArray )
		pFn_SortPRIArray = (UFunction*) UObject::GObjObjects()->Data[ 46769 ];

	APgGameReplicationInfo_event_SortPRIArray_Parms _SortPRIArray_Parms;

	this->ProcessEvent ( pFn_SortPRIArray, &_SortPRIArray_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo.SortPRIArray
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgGameReplicationInfo::SortPRIArray ( )
{
	static UFunction* pFnSortPRIArray = NULL;

	if ( ! pFnSortPRIArray )
		pFnSortPRIArray = (UFunction*) UObject::GObjObjects()->Data[ 46768 ];

	APgGameReplicationInfo_execSortPRIArray_Parms SortPRIArray_Parms;

	pFnSortPRIArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSortPRIArray, &SortPRIArray_Parms, NULL );

	pFnSortPRIArray->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo._RemovePRI
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void APgGameReplicationInfo::event_RemovePRI ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFn_RemovePRI = NULL;

	if ( ! pFn_RemovePRI )
		pFn_RemovePRI = (UFunction*) UObject::GObjObjects()->Data[ 46766 ];

	APgGameReplicationInfo_event_RemovePRI_Parms _RemovePRI_Parms;
	_RemovePRI_Parms.PRI = PRI;

	this->ProcessEvent ( pFn_RemovePRI, &_RemovePRI_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo.RemovePRI
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void APgGameReplicationInfo::RemovePRI ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnRemovePRI = NULL;

	if ( ! pFnRemovePRI )
		pFnRemovePRI = (UFunction*) UObject::GObjObjects()->Data[ 46764 ];

	APgGameReplicationInfo_execRemovePRI_Parms RemovePRI_Parms;
	RemovePRI_Parms.PRI = PRI;

	pFnRemovePRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemovePRI, &RemovePRI_Parms, NULL );

	pFnRemovePRI->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo.Timer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APgGameReplicationInfo::eventTimer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 46763 ];

	APgGameReplicationInfo_eventTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo._SetTeam
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// class ATeamInfo*               TI                             ( CPF_Parm )

void APgGameReplicationInfo::event_SetTeam ( int Index, class ATeamInfo* TI )
{
	static UFunction* pFn_SetTeam = NULL;

	if ( ! pFn_SetTeam )
		pFn_SetTeam = (UFunction*) UObject::GObjObjects()->Data[ 46760 ];

	APgGameReplicationInfo_event_SetTeam_Parms _SetTeam_Parms;
	_SetTeam_Parms.Index = Index;
	_SetTeam_Parms.TI = TI;

	this->ProcessEvent ( pFn_SetTeam, &_SetTeam_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo._Reset
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgGameReplicationInfo::event_Reset ( )
{
	static UFunction* pFn_Reset = NULL;

	if ( ! pFn_Reset )
		pFn_Reset = (UFunction*) UObject::GObjObjects()->Data[ 46759 ];

	APgGameReplicationInfo_event_Reset_Parms _Reset_Parms;

	this->ProcessEvent ( pFn_Reset, &_Reset_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgGameReplicationInfo::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 46758 ];

	APgGameReplicationInfo_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameReplicationInfo.GetGRI
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class APgGameReplicationInfo*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgGameReplicationInfo* APgGameReplicationInfo::GetGRI ( )
{
	static UFunction* pFnGetGRI = NULL;

	if ( ! pFnGetGRI )
		pFnGetGRI = (UFunction*) UObject::GObjObjects()->Data[ 46756 ];

	APgGameReplicationInfo_execGetGRI_Parms GetGRI_Parms;

	pFnGetGRI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetGRI, &GetGRI_Parms, NULL );

	pFnGetGRI->FunctionFlags |= 0x400;

	return GetGRI_Parms.ReturnValue;
};

// Function GridGame.PgGameReplicationInfo._ReplicatedEvent
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgGameReplicationInfo::event_ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFn_ReplicatedEvent = NULL;

	if ( ! pFn_ReplicatedEvent )
		pFn_ReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 46754 ];

	APgGameReplicationInfo_event_ReplicatedEvent_Parms _ReplicatedEvent_Parms;
	memcpy ( &_ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFn_ReplicatedEvent, &_ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgGameReplicationInfo.ReplicatedEvent
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgGameReplicationInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 46752 ];

	APgGameReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	pFnReplicatedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );

	pFnReplicatedEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.OnStateChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )
// unsigned char                  OldState                       ( CPF_Parm )

void APgPlayerReplicationInfo::OnStateChanged ( unsigned char NewState, unsigned char OldState )
{
	static UFunction* pFnOnStateChanged = NULL;

	if ( ! pFnOnStateChanged )
		pFnOnStateChanged = (UFunction*) UObject::GObjObjects()->Data[ 49316 ];

	APgPlayerReplicationInfo_execOnStateChanged_Parms OnStateChanged_Parms;
	OnStateChanged_Parms.NewState = NewState;
	OnStateChanged_Parms.OldState = OldState;

	pFnOnStateChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStateChanged, &OnStateChanged_Parms, NULL );

	pFnOnStateChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._IsInvalidName
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerReplicationInfo::event_IsInvalidName ( )
{
	static UFunction* pFn_IsInvalidName = NULL;

	if ( ! pFn_IsInvalidName )
		pFn_IsInvalidName = (UFunction*) UObject::GObjObjects()->Data[ 49314 ];

	APgPlayerReplicationInfo_event_IsInvalidName_Parms _IsInvalidName_Parms;

	this->ProcessEvent ( pFn_IsInvalidName, &_IsInvalidName_Parms, NULL );

	return _IsInvalidName_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.UpdateHitStreak
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::UpdateHitStreak ( )
{
	static UFunction* pFnUpdateHitStreak = NULL;

	if ( ! pFnUpdateHitStreak )
		pFnUpdateHitStreak = (UFunction*) UObject::GObjObjects()->Data[ 49313 ];

	APgPlayerReplicationInfo_execUpdateHitStreak_Parms UpdateHitStreak_Parms;

	pFnUpdateHitStreak->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateHitStreak, &UpdateHitStreak_Parms, NULL );

	pFnUpdateHitStreak->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.AwardSkillPoints
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            nPoints                        ( CPF_Parm )

void APgPlayerReplicationInfo::AwardSkillPoints ( int nPoints )
{
	static UFunction* pFnAwardSkillPoints = NULL;

	if ( ! pFnAwardSkillPoints )
		pFnAwardSkillPoints = (UFunction*) UObject::GObjObjects()->Data[ 49311 ];

	APgPlayerReplicationInfo_execAwardSkillPoints_Parms AwardSkillPoints_Parms;
	AwardSkillPoints_Parms.nPoints = nPoints;

	pFnAwardSkillPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardSkillPoints, &AwardSkillPoints_Parms, NULL );

	pFnAwardSkillPoints->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.AwardXP
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            nPoints                        ( CPF_Parm )
// int                            nBonus                         ( CPF_OptionalParm | CPF_Parm )

void APgPlayerReplicationInfo::AwardXP ( int nPoints, int nBonus )
{
	static UFunction* pFnAwardXP = NULL;

	if ( ! pFnAwardXP )
		pFnAwardXP = (UFunction*) UObject::GObjObjects()->Data[ 49308 ];

	APgPlayerReplicationInfo_execAwardXP_Parms AwardXP_Parms;
	AwardXP_Parms.nPoints = nPoints;
	AwardXP_Parms.nBonus = nBonus;

	pFnAwardXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardXP, &AwardXP_Parms, NULL );

	pFnAwardXP->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._Reset
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerReplicationInfo::event_Reset ( )
{
	static UFunction* pFn_Reset = NULL;

	if ( ! pFn_Reset )
		pFn_Reset = (UFunction*) UObject::GObjObjects()->Data[ 49307 ];

	APgPlayerReplicationInfo_event_Reset_Parms _Reset_Parms;

	this->ProcessEvent ( pFn_Reset, &_Reset_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.Reset
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 49306 ];

	APgPlayerReplicationInfo_execReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.ResetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Reason                         ( CPF_Parm )

void APgPlayerReplicationInfo::ResetStats ( unsigned char Reason )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = (UFunction*) UObject::GObjObjects()->Data[ 49304 ];

	APgPlayerReplicationInfo_execResetStats_Parms ResetStats_Parms;
	ResetStats_Parms.Reason = Reason;

	pFnResetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );

	pFnResetStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.GetStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

float APgPlayerReplicationInfo::GetStatValue ( struct FName Stat )
{
	static UFunction* pFnGetStatValue = NULL;

	if ( ! pFnGetStatValue )
		pFnGetStatValue = (UFunction*) UObject::GObjObjects()->Data[ 49301 ];

	APgPlayerReplicationInfo_execGetStatValue_Parms GetStatValue_Parms;
	memcpy ( &GetStatValue_Parms.Stat, &Stat, 0x8 );

	pFnGetStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatValue, &GetStatValue_Parms, NULL );

	pFnGetStatValue->FunctionFlags |= 0x400;

	return GetStatValue_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.WriteStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Stat                           ( CPF_Parm )
// unsigned char                  Op                             ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void APgPlayerReplicationInfo::WriteStatValue ( struct FName Stat, unsigned char Op, float Value )
{
	static UFunction* pFnWriteStatValue = NULL;

	if ( ! pFnWriteStatValue )
		pFnWriteStatValue = (UFunction*) UObject::GObjObjects()->Data[ 49297 ];

	APgPlayerReplicationInfo_execWriteStatValue_Parms WriteStatValue_Parms;
	memcpy ( &WriteStatValue_Parms.Stat, &Stat, 0x8 );
	WriteStatValue_Parms.Op = Op;
	WriteStatValue_Parms.Value = Value;

	pFnWriteStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteStatValue, &WriteStatValue_Parms, NULL );

	pFnWriteStatValue->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.HasStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

bool APgPlayerReplicationInfo::HasStat ( struct FName Stat )
{
	static UFunction* pFnHasStat = NULL;

	if ( ! pFnHasStat )
		pFnHasStat = (UFunction*) UObject::GObjObjects()->Data[ 49294 ];

	APgPlayerReplicationInfo_execHasStat_Parms HasStat_Parms;
	memcpy ( &HasStat_Parms.Stat, &Stat, 0x8 );

	pFnHasStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasStat, &HasStat_Parms, NULL );

	pFnHasStat->FunctionFlags |= 0x400;

	return HasStat_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.InitStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::InitStats ( )
{
	static UFunction* pFnInitStats = NULL;

	if ( ! pFnInitStats )
		pFnInitStats = (UFunction*) UObject::GObjObjects()->Data[ 49293 ];

	APgPlayerReplicationInfo_execInitStats_Parms InitStats_Parms;

	pFnInitStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitStats, &InitStats_Parms, NULL );

	pFnInitStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.ClearPlayerSpeakingDelegate
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerReplicationInfo::eventClearPlayerSpeakingDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnClearPlayerSpeakingDelegate = NULL;

	if ( ! pFnClearPlayerSpeakingDelegate )
		pFnClearPlayerSpeakingDelegate = (UFunction*) UObject::GObjObjects()->Data[ 49290 ];

	APgPlayerReplicationInfo_eventClearPlayerSpeakingDelegate_Parms ClearPlayerSpeakingDelegate_Parms;
	ClearPlayerSpeakingDelegate_Parms.os = os;
	memcpy ( &ClearPlayerSpeakingDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnClearPlayerSpeakingDelegate, &ClearPlayerSpeakingDelegate_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.AddPlayerSpeakingDelegate
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UOnlineSubsystem*        os                             ( CPF_Parm )
// struct FScriptDelegate         dgt                            ( CPF_Parm | CPF_NeedCtorLink )

void APgPlayerReplicationInfo::eventAddPlayerSpeakingDelegate ( class UOnlineSubsystem* os, struct FScriptDelegate dgt )
{
	static UFunction* pFnAddPlayerSpeakingDelegate = NULL;

	if ( ! pFnAddPlayerSpeakingDelegate )
		pFnAddPlayerSpeakingDelegate = (UFunction*) UObject::GObjObjects()->Data[ 49287 ];

	APgPlayerReplicationInfo_eventAddPlayerSpeakingDelegate_Parms AddPlayerSpeakingDelegate_Parms;
	AddPlayerSpeakingDelegate_Parms.os = os;
	memcpy ( &AddPlayerSpeakingDelegate_Parms.dgt, &dgt, 0xC );

	this->ProcessEvent ( pFnAddPlayerSpeakingDelegate, &AddPlayerSpeakingDelegate_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.OnPlayerSpeaking
// [0x00120000] 
// Parameters infos:
// struct FUniqueNetId            Id                             ( CPF_Parm )
// unsigned long                  bIsTalking                     ( CPF_Parm )

void APgPlayerReplicationInfo::OnPlayerSpeaking ( struct FUniqueNetId Id, unsigned long bIsTalking )
{
	static UFunction* pFnOnPlayerSpeaking = NULL;

	if ( ! pFnOnPlayerSpeaking )
		pFnOnPlayerSpeaking = (UFunction*) UObject::GObjObjects()->Data[ 49226 ];

	APgPlayerReplicationInfo_execOnPlayerSpeaking_Parms OnPlayerSpeaking_Parms;
	memcpy ( &OnPlayerSpeaking_Parms.Id, &Id, 0x2C );
	OnPlayerSpeaking_Parms.bIsTalking = bIsTalking;

	this->ProcessEvent ( pFnOnPlayerSpeaking, &OnPlayerSpeaking_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.PgPlayerReplicationInfo_OnPlayerSpeaking
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            Id                             ( CPF_Parm )
// unsigned long                  bIsTalking                     ( CPF_Parm )

void APgPlayerReplicationInfo::PgPlayerReplicationInfo_OnPlayerSpeaking ( struct FUniqueNetId Id, unsigned long bIsTalking )
{
	static UFunction* pFnPgPlayerReplicationInfo_OnPlayerSpeaking = NULL;

	if ( ! pFnPgPlayerReplicationInfo_OnPlayerSpeaking )
		pFnPgPlayerReplicationInfo_OnPlayerSpeaking = (UFunction*) UObject::GObjObjects()->Data[ 49282 ];

	APgPlayerReplicationInfo_execPgPlayerReplicationInfo_OnPlayerSpeaking_Parms PgPlayerReplicationInfo_OnPlayerSpeaking_Parms;
	memcpy ( &PgPlayerReplicationInfo_OnPlayerSpeaking_Parms.Id, &Id, 0x2C );
	PgPlayerReplicationInfo_OnPlayerSpeaking_Parms.bIsTalking = bIsTalking;

	pFnPgPlayerReplicationInfo_OnPlayerSpeaking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgPlayerReplicationInfo_OnPlayerSpeaking, &PgPlayerReplicationInfo_OnPlayerSpeaking_Parms, NULL );

	pFnPgPlayerReplicationInfo_OnPlayerSpeaking->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.UnregisterPlayerTalker
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::UnregisterPlayerTalker ( )
{
	static UFunction* pFnUnregisterPlayerTalker = NULL;

	if ( ! pFnUnregisterPlayerTalker )
		pFnUnregisterPlayerTalker = (UFunction*) UObject::GObjObjects()->Data[ 49281 ];

	APgPlayerReplicationInfo_execUnregisterPlayerTalker_Parms UnregisterPlayerTalker_Parms;

	pFnUnregisterPlayerTalker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnregisterPlayerTalker, &UnregisterPlayerTalker_Parms, NULL );

	pFnUnregisterPlayerTalker->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.RegisterPlayerTalker
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::RegisterPlayerTalker ( )
{
	static UFunction* pFnRegisterPlayerTalker = NULL;

	if ( ! pFnRegisterPlayerTalker )
		pFnRegisterPlayerTalker = (UFunction*) UObject::GObjObjects()->Data[ 49280 ];

	APgPlayerReplicationInfo_execRegisterPlayerTalker_Parms RegisterPlayerTalker_Parms;

	pFnRegisterPlayerTalker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterPlayerTalker, &RegisterPlayerTalker_Parms, NULL );

	pFnRegisterPlayerTalker->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo.IsMuted
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerReplicationInfo::IsMuted ( )
{
	static UFunction* pFnIsMuted = NULL;

	if ( ! pFnIsMuted )
		pFnIsMuted = (UFunction*) UObject::GObjObjects()->Data[ 49278 ];

	APgPlayerReplicationInfo_execIsMuted_Parms IsMuted_Parms;

	pFnIsMuted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsMuted, &IsMuted_Parms, NULL );

	pFnIsMuted->FunctionFlags |= 0x400;

	return IsMuted_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.IsSpeaking
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerReplicationInfo::IsSpeaking ( )
{
	static UFunction* pFnIsSpeaking = NULL;

	if ( ! pFnIsSpeaking )
		pFnIsSpeaking = (UFunction*) UObject::GObjObjects()->Data[ 49276 ];

	APgPlayerReplicationInfo_execIsSpeaking_Parms IsSpeaking_Parms;

	pFnIsSpeaking->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsSpeaking, &IsSpeaking_Parms, NULL );

	pFnIsSpeaking->FunctionFlags |= 0x400;

	return IsSpeaking_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.GetPlayerColorName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgPlayerReplicationInfo::GetPlayerColorName ( )
{
	static UFunction* pFnGetPlayerColorName = NULL;

	if ( ! pFnGetPlayerColorName )
		pFnGetPlayerColorName = (UFunction*) UObject::GObjObjects()->Data[ 49274 ];

	APgPlayerReplicationInfo_execGetPlayerColorName_Parms GetPlayerColorName_Parms;

	pFnGetPlayerColorName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerColorName, &GetPlayerColorName_Parms, NULL );

	pFnGetPlayerColorName->FunctionFlags |= 0x400;

	return GetPlayerColorName_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.GetPlayerColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FLinearColor            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FLinearColor APgPlayerReplicationInfo::GetPlayerColor ( )
{
	static UFunction* pFnGetPlayerColor = NULL;

	if ( ! pFnGetPlayerColor )
		pFnGetPlayerColor = (UFunction*) UObject::GObjObjects()->Data[ 41908 ];

	APgPlayerReplicationInfo_execGetPlayerColor_Parms GetPlayerColor_Parms;

	pFnGetPlayerColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerColor, &GetPlayerColor_Parms, NULL );

	pFnGetPlayerColor->FunctionFlags |= 0x400;

	return GetPlayerColor_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo.GetPlayerName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString APgPlayerReplicationInfo::GetPlayerName ( )
{
	static UFunction* pFnGetPlayerName = NULL;

	if ( ! pFnGetPlayerName )
		pFnGetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 49272 ];

	APgPlayerReplicationInfo_execGetPlayerName_Parms GetPlayerName_Parms;

	pFnGetPlayerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerName, &GetPlayerName_Parms, NULL );

	pFnGetPlayerName->FunctionFlags |= 0x400;

	return GetPlayerName_Parms.ReturnValue;
};

// Function GridGame.PgPlayerReplicationInfo._UnregisterPlayerFromSession
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerReplicationInfo::event_UnregisterPlayerFromSession ( )
{
	static UFunction* pFn_UnregisterPlayerFromSession = NULL;

	if ( ! pFn_UnregisterPlayerFromSession )
		pFn_UnregisterPlayerFromSession = (UFunction*) UObject::GObjObjects()->Data[ 49271 ];

	APgPlayerReplicationInfo_event_UnregisterPlayerFromSession_Parms _UnregisterPlayerFromSession_Parms;

	this->ProcessEvent ( pFn_UnregisterPlayerFromSession, &_UnregisterPlayerFromSession_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.UnregisterPlayerFromSession
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::UnregisterPlayerFromSession ( )
{
	static UFunction* pFnUnregisterPlayerFromSession = NULL;

	if ( ! pFnUnregisterPlayerFromSession )
		pFnUnregisterPlayerFromSession = (UFunction*) UObject::GObjObjects()->Data[ 49270 ];

	APgPlayerReplicationInfo_execUnregisterPlayerFromSession_Parms UnregisterPlayerFromSession_Parms;

	pFnUnregisterPlayerFromSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnregisterPlayerFromSession, &UnregisterPlayerFromSession_Parms, NULL );

	pFnUnregisterPlayerFromSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._RegisterPlayerWithSession
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APgPlayerReplicationInfo::event_RegisterPlayerWithSession ( )
{
	static UFunction* pFn_RegisterPlayerWithSession = NULL;

	if ( ! pFn_RegisterPlayerWithSession )
		pFn_RegisterPlayerWithSession = (UFunction*) UObject::GObjObjects()->Data[ 49269 ];

	APgPlayerReplicationInfo_event_RegisterPlayerWithSession_Parms _RegisterPlayerWithSession_Parms;

	this->ProcessEvent ( pFn_RegisterPlayerWithSession, &_RegisterPlayerWithSession_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.RegisterPlayerWithSession
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APgPlayerReplicationInfo::RegisterPlayerWithSession ( )
{
	static UFunction* pFnRegisterPlayerWithSession = NULL;

	if ( ! pFnRegisterPlayerWithSession )
		pFnRegisterPlayerWithSession = (UFunction*) UObject::GObjObjects()->Data[ 49268 ];

	APgPlayerReplicationInfo_execRegisterPlayerWithSession_Parms RegisterPlayerWithSession_Parms;

	pFnRegisterPlayerWithSession->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterPlayerWithSession, &RegisterPlayerWithSession_Parms, NULL );

	pFnRegisterPlayerWithSession->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._SetUniqueId
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FUniqueNetId            PlayerUniqueId                 ( CPF_Parm )

void APgPlayerReplicationInfo::event_SetUniqueId ( struct FUniqueNetId PlayerUniqueId )
{
	static UFunction* pFn_SetUniqueId = NULL;

	if ( ! pFn_SetUniqueId )
		pFn_SetUniqueId = (UFunction*) UObject::GObjObjects()->Data[ 49266 ];

	APgPlayerReplicationInfo_event_SetUniqueId_Parms _SetUniqueId_Parms;
	memcpy ( &_SetUniqueId_Parms.PlayerUniqueId, &PlayerUniqueId, 0x2C );

	this->ProcessEvent ( pFn_SetUniqueId, &_SetUniqueId_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.SetUniqueId
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// struct FUniqueNetId            PlayerUniqueId                 ( CPF_Parm )

void APgPlayerReplicationInfo::SetUniqueId ( struct FUniqueNetId PlayerUniqueId )
{
	static UFunction* pFnSetUniqueId = NULL;

	if ( ! pFnSetUniqueId )
		pFnSetUniqueId = (UFunction*) UObject::GObjObjects()->Data[ 49264 ];

	APgPlayerReplicationInfo_execSetUniqueId_Parms SetUniqueId_Parms;
	memcpy ( &SetUniqueId_Parms.PlayerUniqueId, &PlayerUniqueId, 0x2C );

	pFnSetUniqueId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetUniqueId, &SetUniqueId_Parms, NULL );

	pFnSetUniqueId->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._OverrideWith
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void APgPlayerReplicationInfo::event_OverrideWith ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFn_OverrideWith = NULL;

	if ( ! pFn_OverrideWith )
		pFn_OverrideWith = (UFunction*) UObject::GObjObjects()->Data[ 49262 ];

	APgPlayerReplicationInfo_event_OverrideWith_Parms _OverrideWith_Parms;
	_OverrideWith_Parms.PRI = PRI;

	this->ProcessEvent ( pFn_OverrideWith, &_OverrideWith_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.OverrideWith
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void APgPlayerReplicationInfo::OverrideWith ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnOverrideWith = NULL;

	if ( ! pFnOverrideWith )
		pFnOverrideWith = (UFunction*) UObject::GObjObjects()->Data[ 49260 ];

	APgPlayerReplicationInfo_execOverrideWith_Parms OverrideWith_Parms;
	OverrideWith_Parms.PRI = PRI;

	pFnOverrideWith->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOverrideWith, &OverrideWith_Parms, NULL );

	pFnOverrideWith->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._CopyProperties
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class APlayerReplicationInfo*  Dest                           ( CPF_Parm )

void APgPlayerReplicationInfo::event_CopyProperties ( class APlayerReplicationInfo* Dest )
{
	static UFunction* pFn_CopyProperties = NULL;

	if ( ! pFn_CopyProperties )
		pFn_CopyProperties = (UFunction*) UObject::GObjObjects()->Data[ 49258 ];

	APgPlayerReplicationInfo_event_CopyProperties_Parms _CopyProperties_Parms;
	_CopyProperties_Parms.Dest = Dest;

	this->ProcessEvent ( pFn_CopyProperties, &_CopyProperties_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.CopyProperties
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APlayerReplicationInfo*  Dest                           ( CPF_Parm )

void APgPlayerReplicationInfo::CopyProperties ( class APlayerReplicationInfo* Dest )
{
	static UFunction* pFnCopyProperties = NULL;

	if ( ! pFnCopyProperties )
		pFnCopyProperties = (UFunction*) UObject::GObjObjects()->Data[ 49256 ];

	APgPlayerReplicationInfo_execCopyProperties_Parms CopyProperties_Parms;
	CopyProperties_Parms.Dest = Dest;

	pFnCopyProperties->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopyProperties, &CopyProperties_Parms, NULL );

	pFnCopyProperties->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._ClientInitialize
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void APgPlayerReplicationInfo::event_ClientInitialize ( class AController* C )
{
	static UFunction* pFn_ClientInitialize = NULL;

	if ( ! pFn_ClientInitialize )
		pFn_ClientInitialize = (UFunction*) UObject::GObjObjects()->Data[ 49254 ];

	APgPlayerReplicationInfo_event_ClientInitialize_Parms _ClientInitialize_Parms;
	_ClientInitialize_Parms.C = C;

	this->ProcessEvent ( pFn_ClientInitialize, &_ClientInitialize_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.ClientInitialize
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void APgPlayerReplicationInfo::ClientInitialize ( class AController* C )
{
	static UFunction* pFnClientInitialize = NULL;

	if ( ! pFnClientInitialize )
		pFnClientInitialize = (UFunction*) UObject::GObjObjects()->Data[ 49252 ];

	APgPlayerReplicationInfo_execClientInitialize_Parms ClientInitialize_Parms;
	ClientInitialize_Parms.C = C;

	pFnClientInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClientInitialize, &ClientInitialize_Parms, NULL );

	pFnClientInitialize->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerReplicationInfo._ReplicatedEvent
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgPlayerReplicationInfo::event_ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFn_ReplicatedEvent = NULL;

	if ( ! pFn_ReplicatedEvent )
		pFn_ReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 49250 ];

	APgPlayerReplicationInfo_event_ReplicatedEvent_Parms _ReplicatedEvent_Parms;
	memcpy ( &_ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFn_ReplicatedEvent, &_ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgPlayerReplicationInfo.ReplicatedEvent
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgPlayerReplicationInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 49248 ];

	APgPlayerReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	pFnReplicatedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );

	pFnReplicatedEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerStart.IsUsableAnchorFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool APgPlayerStart::IsUsableAnchorFor ( class APawn* P )
{
	static UFunction* pFnIsUsableAnchorFor = NULL;

	if ( ! pFnIsUsableAnchorFor )
		pFnIsUsableAnchorFor = (UFunction*) UObject::GObjObjects()->Data[ 49326 ];

	APgPlayerStart_execIsUsableAnchorFor_Parms IsUsableAnchorFor_Parms;
	IsUsableAnchorFor_Parms.P = P;

	pFnIsUsableAnchorFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsUsableAnchorFor, &IsUsableAnchorFor_Parms, NULL );

	pFnIsUsableAnchorFor->FunctionFlags |= 0x400;

	return IsUsableAnchorFor_Parms.ReturnValue;
};

// Function GridGame.PgPlayerStart.TriggerEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgPlayerStart::TriggerEvent ( )
{
	static UFunction* pFnTriggerEvent = NULL;

	if ( ! pFnTriggerEvent )
		pFnTriggerEvent = (UFunction*) UObject::GObjObjects()->Data[ 49325 ];

	APgPlayerStart_execTriggerEvent_Parms TriggerEvent_Parms;

	pFnTriggerEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerEvent, &TriggerEvent_Parms, NULL );

	pFnTriggerEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgPlayerStart.IsActiveCheckpoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPlayerStart::IsActiveCheckpoint ( )
{
	static UFunction* pFnIsActiveCheckpoint = NULL;

	if ( ! pFnIsActiveCheckpoint )
		pFnIsActiveCheckpoint = (UFunction*) UObject::GObjObjects()->Data[ 49323 ];

	APgPlayerStart_execIsActiveCheckpoint_Parms IsActiveCheckpoint_Parms;

	pFnIsActiveCheckpoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActiveCheckpoint, &IsActiveCheckpoint_Parms, NULL );

	pFnIsActiveCheckpoint->FunctionFlags |= 0x400;

	return IsActiveCheckpoint_Parms.ReturnValue;
};

// Function GridGame.PgRule.Compare
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Comparison                     ( CPF_Parm )
// float                          Value1                         ( CPF_Parm )
// float                          Value2                         ( CPF_Parm )

bool UPgRule::Compare ( unsigned char Comparison, float Value1, float Value2 )
{
	static UFunction* pFnCompare = NULL;

	if ( ! pFnCompare )
		pFnCompare = (UFunction*) UObject::GObjObjects()->Data[ 43011 ];

	UPgRule_execCompare_Parms Compare_Parms;
	Compare_Parms.Comparison = Comparison;
	Compare_Parms.Value1 = Value1;
	Compare_Parms.Value2 = Value2;

	pFnCompare->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCompare, &Compare_Parms, NULL );

	pFnCompare->FunctionFlags |= 0x400;

	return Compare_Parms.ReturnValue;
};

// Function GridGame.PgRule.InOrder
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Order                          ( CPF_Parm )
// float                          Value1                         ( CPF_Parm )
// float                          Value2                         ( CPF_Parm )

bool UPgRule::InOrder ( unsigned char Order, float Value1, float Value2 )
{
	static UFunction* pFnInOrder = NULL;

	if ( ! pFnInOrder )
		pFnInOrder = (UFunction*) UObject::GObjObjects()->Data[ 43006 ];

	UPgRule_execInOrder_Parms InOrder_Parms;
	InOrder_Parms.Order = Order;
	InOrder_Parms.Value1 = Value1;
	InOrder_Parms.Value2 = Value2;

	pFnInOrder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrder, &InOrder_Parms, NULL );

	pFnInOrder->FunctionFlags |= 0x400;

	return InOrder_Parms.ReturnValue;
};

// Function GridGame.PgRule.GetCmdLineString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgRule::GetCmdLineString ( )
{
	static UFunction* pFnGetCmdLineString = NULL;

	if ( ! pFnGetCmdLineString )
		pFnGetCmdLineString = (UFunction*) UObject::GObjObjects()->Data[ 43004 ];

	UPgRule_execGetCmdLineString_Parms GetCmdLineString_Parms;

	pFnGetCmdLineString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCmdLineString, &GetCmdLineString_Parms, NULL );

	pFnGetCmdLineString->FunctionFlags |= 0x400;

	return GetCmdLineString_Parms.ReturnValue;
};

// Function GridGame.PgRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 43002 ];

	UPgRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgEndRule.Check
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgEndRule::Check ( )
{
	static UFunction* pFnCheck = NULL;

	if ( ! pFnCheck )
		pFnCheck = (UFunction*) UObject::GObjObjects()->Data[ 44652 ];

	UPgEndRule_execCheck_Parms Check_Parms;

	pFnCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheck, &Check_Parms, NULL );

	pFnCheck->FunctionFlags |= 0x400;

	return Check_Parms.ReturnValue;
};

// Function GridGame.PgGoalReachedEndRule.Check
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgGoalReachedEndRule::Check ( )
{
	static UFunction* pFnCheck = NULL;

	if ( ! pFnCheck )
		pFnCheck = (UFunction*) UObject::GObjObjects()->Data[ 46878 ];

	UPgGoalReachedEndRule_execCheck_Parms Check_Parms;

	pFnCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheck, &Check_Parms, NULL );

	pFnCheck->FunctionFlags |= 0x400;

	return Check_Parms.ReturnValue;
};

// Function GridGame.PgGoalReachedEndRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgGoalReachedEndRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 46876 ];

	UPgGoalReachedEndRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgOneRemainingEndRule.Check
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgOneRemainingEndRule::Check ( )
{
	static UFunction* pFnCheck = NULL;

	if ( ! pFnCheck )
		pFnCheck = (UFunction*) UObject::GObjObjects()->Data[ 47399 ];

	UPgOneRemainingEndRule_execCheck_Parms Check_Parms;

	pFnCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheck, &Check_Parms, NULL );

	pFnCheck->FunctionFlags |= 0x400;

	return Check_Parms.ReturnValue;
};

// Function GridGame.PgOneRemainingEndRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgOneRemainingEndRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 47397 ];

	UPgOneRemainingEndRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgTimeLimitEndRule.Check
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgTimeLimitEndRule::Check ( )
{
	static UFunction* pFnCheck = NULL;

	if ( ! pFnCheck )
		pFnCheck = (UFunction*) UObject::GObjObjects()->Data[ 50513 ];

	UPgTimeLimitEndRule_execCheck_Parms Check_Parms;

	pFnCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheck, &Check_Parms, NULL );

	pFnCheck->FunctionFlags |= 0x400;

	return Check_Parms.ReturnValue;
};

// Function GridGame.PgTimeLimitEndRule.GetCmdLineString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgTimeLimitEndRule::GetCmdLineString ( )
{
	static UFunction* pFnGetCmdLineString = NULL;

	if ( ! pFnGetCmdLineString )
		pFnGetCmdLineString = (UFunction*) UObject::GObjObjects()->Data[ 50511 ];

	UPgTimeLimitEndRule_execGetCmdLineString_Parms GetCmdLineString_Parms;

	pFnGetCmdLineString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCmdLineString, &GetCmdLineString_Parms, NULL );

	pFnGetCmdLineString->FunctionFlags |= 0x400;

	return GetCmdLineString_Parms.ReturnValue;
};

// Function GridGame.PgTimeLimitEndRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgTimeLimitEndRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 50509 ];

	UPgTimeLimitEndRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgGameRule.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgGameRule::Apply ( )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 46814 ];

	UPgGameRule_execApply_Parms Apply_Parms;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;
};

// Function GridGame.PgGameRule.CheckCondition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgGameRule::CheckCondition ( )
{
	static UFunction* pFnCheckCondition = NULL;

	if ( ! pFnCheckCondition )
		pFnCheckCondition = (UFunction*) UObject::GObjObjects()->Data[ 46812 ];

	UPgGameRule_execCheckCondition_Parms CheckCondition_Parms;

	pFnCheckCondition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckCondition, &CheckCondition_Parms, NULL );

	pFnCheckCondition->FunctionFlags |= 0x400;

	return CheckCondition_Parms.ReturnValue;
};

// Function GridGame.PgScoreRule.UpdateTeam
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             Team                           ( CPF_Parm )
// float                          Amount                         ( CPF_Parm )

void UPgScoreRule::UpdateTeam ( class APgTeamInfo* Team, float Amount )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 44409 ];

	UPgScoreRule_execUpdateTeam_Parms UpdateTeam_Parms;
	UpdateTeam_Parms.Team = Team;
	UpdateTeam_Parms.Amount = Amount;

	pFnUpdateTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );

	pFnUpdateTeam->FunctionFlags |= 0x400;
};

// Function GridGame.PgScoreRule.UpdatePlayer
// [0x00080400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* Player                         ( CPF_Parm )
// float                          Amount                         ( CPF_Parm )

void UPgScoreRule::UpdatePlayer ( class APgPlayerReplicationInfo* Player, float Amount )
{
	static UFunction* pFnUpdatePlayer = NULL;

	if ( ! pFnUpdatePlayer )
		pFnUpdatePlayer = (UFunction*) UObject::GObjObjects()->Data[ 44406 ];

	UPgScoreRule_execUpdatePlayer_Parms UpdatePlayer_Parms;
	UpdatePlayer_Parms.Player = Player;
	UpdatePlayer_Parms.Amount = Amount;

	pFnUpdatePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlayer, &UpdatePlayer_Parms, NULL );

	pFnUpdatePlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgScoreRule.Apply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Scorer                         ( CPF_Parm )

void UPgScoreRule::Apply ( class AActor* Scorer )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 44404 ];

	UPgScoreRule_execApply_Parms Apply_Parms;
	Apply_Parms.Scorer = Scorer;

	pFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );

	pFnApply->FunctionFlags |= 0x400;
};

// Function GridGame.PgScoreRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgScoreRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 44402 ];

	UPgScoreRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgScoreRule.Matches
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Tag                            ( CPF_Parm )

bool UPgScoreRule::Matches ( struct FName Tag )
{
	static UFunction* pFnMatches = NULL;

	if ( ! pFnMatches )
		pFnMatches = (UFunction*) UObject::GObjObjects()->Data[ 44399 ];

	UPgScoreRule_execMatches_Parms Matches_Parms;
	memcpy ( &Matches_Parms.Tag, &Tag, 0x8 );

	pFnMatches->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMatches, &Matches_Parms, NULL );

	pFnMatches->FunctionFlags |= 0x400;

	return Matches_Parms.ReturnValue;
};

// Function GridGame.PgCustomScoreRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgCustomScoreRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 44417 ];

	UPgCustomScoreRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgCustomScoreRule.Matches
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Tag                            ( CPF_Parm )

bool UPgCustomScoreRule::Matches ( struct FName Tag )
{
	static UFunction* pFnMatches = NULL;

	if ( ! pFnMatches )
		pFnMatches = (UFunction*) UObject::GObjObjects()->Data[ 44414 ];

	UPgCustomScoreRule_execMatches_Parms Matches_Parms;
	memcpy ( &Matches_Parms.Tag, &Tag, 0x8 );

	pFnMatches->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMatches, &Matches_Parms, NULL );

	pFnMatches->FunctionFlags |= 0x400;

	return Matches_Parms.ReturnValue;
};

// Function GridGame.PgPresetScoreRule.GetValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UPgPresetScoreRule::GetValue ( )
{
	static UFunction* pFnGetValue = NULL;

	if ( ! pFnGetValue )
		pFnGetValue = (UFunction*) UObject::GObjObjects()->Data[ 49432 ];

	UPgPresetScoreRule_execGetValue_Parms GetValue_Parms;

	pFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValue, &GetValue_Parms, NULL );

	pFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Parms.ReturnValue;
};

// Function GridGame.PgPresetScoreRule.Matches
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Tag                            ( CPF_Parm )

bool UPgPresetScoreRule::Matches ( struct FName Tag )
{
	static UFunction* pFnMatches = NULL;

	if ( ! pFnMatches )
		pFnMatches = (UFunction*) UObject::GObjObjects()->Data[ 49429 ];

	UPgPresetScoreRule_execMatches_Parms Matches_Parms;
	memcpy ( &Matches_Parms.Tag, &Tag, 0x8 );

	pFnMatches->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMatches, &Matches_Parms, NULL );

	pFnMatches->FunctionFlags |= 0x400;

	return Matches_Parms.ReturnValue;
};

// Function GridGame.PgWinRule.InOrderTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgTeamInfo*             Player1                        ( CPF_Parm )
// class APgTeamInfo*             Player2                        ( CPF_Parm )

bool UPgWinRule::InOrderTeams ( class APgTeamInfo* Player1, class APgTeamInfo* Player2 )
{
	static UFunction* pFnInOrderTeams = NULL;

	if ( ! pFnInOrderTeams )
		pFnInOrderTeams = (UFunction*) UObject::GObjObjects()->Data[ 43028 ];

	UPgWinRule_execInOrderTeams_Parms InOrderTeams_Parms;
	InOrderTeams_Parms.Player1 = Player1;
	InOrderTeams_Parms.Player2 = Player2;

	pFnInOrderTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderTeams, &InOrderTeams_Parms, NULL );

	pFnInOrderTeams->FunctionFlags |= 0x400;

	return InOrderTeams_Parms.ReturnValue;
};

// Function GridGame.PgWinRule.InOrderPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerReplicationInfo* Player1                        ( CPF_Parm )
// class APgPlayerReplicationInfo* Player2                        ( CPF_Parm )

bool UPgWinRule::InOrderPlayers ( class APgPlayerReplicationInfo* Player1, class APgPlayerReplicationInfo* Player2 )
{
	static UFunction* pFnInOrderPlayers = NULL;

	if ( ! pFnInOrderPlayers )
		pFnInOrderPlayers = (UFunction*) UObject::GObjObjects()->Data[ 43024 ];

	UPgWinRule_execInOrderPlayers_Parms InOrderPlayers_Parms;
	InOrderPlayers_Parms.Player1 = Player1;
	InOrderPlayers_Parms.Player2 = Player2;

	pFnInOrderPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderPlayers, &InOrderPlayers_Parms, NULL );

	pFnInOrderPlayers->FunctionFlags |= 0x400;

	return InOrderPlayers_Parms.ReturnValue;
};

// Function GridGame.PgWinRule.GetTeamsSorted
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Ascending                      ( CPF_OptionalParm | CPF_Parm )
// TArray< class ATeamInfo* >     Teams                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgWinRule::GetTeamsSorted ( unsigned long Ascending, TArray< class ATeamInfo* >* Teams )
{
	static UFunction* pFnGetTeamsSorted = NULL;

	if ( ! pFnGetTeamsSorted )
		pFnGetTeamsSorted = (UFunction*) UObject::GObjObjects()->Data[ 43020 ];

	UPgWinRule_execGetTeamsSorted_Parms GetTeamsSorted_Parms;
	GetTeamsSorted_Parms.Ascending = Ascending;

	pFnGetTeamsSorted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamsSorted, &GetTeamsSorted_Parms, NULL );

	pFnGetTeamsSorted->FunctionFlags |= 0x400;

	if ( Teams )
		memcpy ( Teams, &GetTeamsSorted_Parms.Teams, 0xC );
};

// Function GridGame.PgWinRule.GetPlayersSorted
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Ascending                      ( CPF_OptionalParm | CPF_Parm )
// TArray< class APlayerReplicationInfo* > Players                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgWinRule::GetPlayersSorted ( unsigned long Ascending, TArray< class APlayerReplicationInfo* >* Players )
{
	static UFunction* pFnGetPlayersSorted = NULL;

	if ( ! pFnGetPlayersSorted )
		pFnGetPlayersSorted = (UFunction*) UObject::GObjObjects()->Data[ 43016 ];

	UPgWinRule_execGetPlayersSorted_Parms GetPlayersSorted_Parms;
	GetPlayersSorted_Parms.Ascending = Ascending;

	pFnGetPlayersSorted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayersSorted, &GetPlayersSorted_Parms, NULL );

	pFnGetPlayersSorted->FunctionFlags |= 0x400;

	if ( Players )
		memcpy ( Players, &GetPlayersSorted_Parms.Players, 0xC );
};

// Function GridGame.PgBestStatWinRule.InOrderTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgTeamInfo*             Player1                        ( CPF_Parm )
// class APgTeamInfo*             Player2                        ( CPF_Parm )

bool UPgBestStatWinRule::InOrderTeams ( class APgTeamInfo* Player1, class APgTeamInfo* Player2 )
{
	static UFunction* pFnInOrderTeams = NULL;

	if ( ! pFnInOrderTeams )
		pFnInOrderTeams = (UFunction*) UObject::GObjObjects()->Data[ 43038 ];

	UPgBestStatWinRule_execInOrderTeams_Parms InOrderTeams_Parms;
	InOrderTeams_Parms.Player1 = Player1;
	InOrderTeams_Parms.Player2 = Player2;

	pFnInOrderTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderTeams, &InOrderTeams_Parms, NULL );

	pFnInOrderTeams->FunctionFlags |= 0x400;

	return InOrderTeams_Parms.ReturnValue;
};

// Function GridGame.PgBestStatWinRule.InOrderPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerReplicationInfo* Player1                        ( CPF_Parm )
// class APgPlayerReplicationInfo* Player2                        ( CPF_Parm )

bool UPgBestStatWinRule::InOrderPlayers ( class APgPlayerReplicationInfo* Player1, class APgPlayerReplicationInfo* Player2 )
{
	static UFunction* pFnInOrderPlayers = NULL;

	if ( ! pFnInOrderPlayers )
		pFnInOrderPlayers = (UFunction*) UObject::GObjObjects()->Data[ 43034 ];

	UPgBestStatWinRule_execInOrderPlayers_Parms InOrderPlayers_Parms;
	InOrderPlayers_Parms.Player1 = Player1;
	InOrderPlayers_Parms.Player2 = Player2;

	pFnInOrderPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderPlayers, &InOrderPlayers_Parms, NULL );

	pFnInOrderPlayers->FunctionFlags |= 0x400;

	return InOrderPlayers_Parms.ReturnValue;
};

// Function GridGame.PgStatThresholdWinRule.InOrderTeams
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgTeamInfo*             Player1                        ( CPF_Parm )
// class APgTeamInfo*             Player2                        ( CPF_Parm )

bool UPgStatThresholdWinRule::InOrderTeams ( class APgTeamInfo* Player1, class APgTeamInfo* Player2 )
{
	static UFunction* pFnInOrderTeams = NULL;

	if ( ! pFnInOrderTeams )
		pFnInOrderTeams = (UFunction*) UObject::GObjObjects()->Data[ 50252 ];

	UPgStatThresholdWinRule_execInOrderTeams_Parms InOrderTeams_Parms;
	InOrderTeams_Parms.Player1 = Player1;
	InOrderTeams_Parms.Player2 = Player2;

	pFnInOrderTeams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderTeams, &InOrderTeams_Parms, NULL );

	pFnInOrderTeams->FunctionFlags |= 0x400;

	return InOrderTeams_Parms.ReturnValue;
};

// Function GridGame.PgStatThresholdWinRule.InOrderPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerReplicationInfo* Player1                        ( CPF_Parm )
// class APgPlayerReplicationInfo* Player2                        ( CPF_Parm )

bool UPgStatThresholdWinRule::InOrderPlayers ( class APgPlayerReplicationInfo* Player1, class APgPlayerReplicationInfo* Player2 )
{
	static UFunction* pFnInOrderPlayers = NULL;

	if ( ! pFnInOrderPlayers )
		pFnInOrderPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50248 ];

	UPgStatThresholdWinRule_execInOrderPlayers_Parms InOrderPlayers_Parms;
	InOrderPlayers_Parms.Player1 = Player1;
	InOrderPlayers_Parms.Player2 = Player2;

	pFnInOrderPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInOrderPlayers, &InOrderPlayers_Parms, NULL );

	pFnInOrderPlayers->FunctionFlags |= 0x400;

	return InOrderPlayers_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetAllStats
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FName >         Stats                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgRuleSet::GetAllStats ( TArray< struct FName >* Stats )
{
	static UFunction* pFnGetAllStats = NULL;

	if ( ! pFnGetAllStats )
		pFnGetAllStats = (UFunction*) UObject::GObjObjects()->Data[ 47548 ];

	UPgRuleSet_execGetAllStats_Parms GetAllStats_Parms;

	pFnGetAllStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllStats, &GetAllStats_Parms, NULL );

	pFnGetAllStats->FunctionFlags |= 0x400;

	if ( Stats )
		memcpy ( Stats, &GetAllStats_Parms.Stats, 0xC );
};

// Function GridGame.PgRuleSet.LogSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgRuleSet::LogSettings ( )
{
	static UFunction* pFnLogSettings = NULL;

	if ( ! pFnLogSettings )
		pFnLogSettings = (UFunction*) UObject::GObjObjects()->Data[ 47547 ];

	UPgRuleSet_execLogSettings_Parms LogSettings_Parms;

	pFnLogSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogSettings, &LogSettings_Parms, NULL );

	pFnLogSettings->FunctionFlags |= 0x400;
};

// Function GridGame.PgRuleSet.GetBotPawnArchetype
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UPgRuleSet::GetBotPawnArchetype ( )
{
	static UFunction* pFnGetBotPawnArchetype = NULL;

	if ( ! pFnGetBotPawnArchetype )
		pFnGetBotPawnArchetype = (UFunction*) UObject::GObjObjects()->Data[ 47545 ];

	UPgRuleSet_execGetBotPawnArchetype_Parms GetBotPawnArchetype_Parms;

	pFnGetBotPawnArchetype->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBotPawnArchetype, &GetBotPawnArchetype_Parms, NULL );

	pFnGetBotPawnArchetype->FunctionFlags |= 0x400;

	return GetBotPawnArchetype_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetBotAIArchetype
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UPgRuleSet::GetBotAIArchetype ( )
{
	static UFunction* pFnGetBotAIArchetype = NULL;

	if ( ! pFnGetBotAIArchetype )
		pFnGetBotAIArchetype = (UFunction*) UObject::GObjObjects()->Data[ 47543 ];

	UPgRuleSet_execGetBotAIArchetype_Parms GetBotAIArchetype_Parms;

	pFnGetBotAIArchetype->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBotAIArchetype, &GetBotAIArchetype_Parms, NULL );

	pFnGetBotAIArchetype->FunctionFlags |= 0x400;

	return GetBotAIArchetype_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetOption
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   OptionName                     ( CPF_Parm )
// struct FUserConfigOption       Option                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgRuleSet::GetOption ( struct FName OptionName, struct FUserConfigOption* Option )
{
	static UFunction* pFnGetOption = NULL;

	if ( ! pFnGetOption )
		pFnGetOption = (UFunction*) UObject::GObjObjects()->Data[ 47539 ];

	UPgRuleSet_execGetOption_Parms GetOption_Parms;
	memcpy ( &GetOption_Parms.OptionName, &OptionName, 0x8 );

	pFnGetOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOption, &GetOption_Parms, NULL );

	pFnGetOption->FunctionFlags |= 0x400;

	if ( Option )
		memcpy ( Option, &GetOption_Parms.Option, 0x18 );

	return GetOption_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetTeamsRanked
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Descending                     ( CPF_Parm )
// TArray< class APgTeamInfo* >   Teams                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgRuleSet::GetTeamsRanked ( unsigned long Descending, TArray< class APgTeamInfo* >* Teams )
{
	static UFunction* pFnGetTeamsRanked = NULL;

	if ( ! pFnGetTeamsRanked )
		pFnGetTeamsRanked = (UFunction*) UObject::GObjObjects()->Data[ 47535 ];

	UPgRuleSet_execGetTeamsRanked_Parms GetTeamsRanked_Parms;
	GetTeamsRanked_Parms.Descending = Descending;

	pFnGetTeamsRanked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamsRanked, &GetTeamsRanked_Parms, NULL );

	pFnGetTeamsRanked->FunctionFlags |= 0x400;

	if ( Teams )
		memcpy ( Teams, &GetTeamsRanked_Parms.Teams, 0xC );
};

// Function GridGame.PgRuleSet.GetPlayersRanked
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Descending                     ( CPF_Parm )
// unsigned char                  TeamIndex                      ( CPF_OptionalParm | CPF_Parm )
// TArray< class APgPlayerReplicationInfo* > Players                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgRuleSet::GetPlayersRanked ( unsigned long Descending, unsigned char TeamIndex, TArray< class APgPlayerReplicationInfo* >* Players )
{
	static UFunction* pFnGetPlayersRanked = NULL;

	if ( ! pFnGetPlayersRanked )
		pFnGetPlayersRanked = (UFunction*) UObject::GObjObjects()->Data[ 47530 ];

	UPgRuleSet_execGetPlayersRanked_Parms GetPlayersRanked_Parms;
	GetPlayersRanked_Parms.Descending = Descending;
	GetPlayersRanked_Parms.TeamIndex = TeamIndex;

	pFnGetPlayersRanked->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayersRanked, &GetPlayersRanked_Parms, NULL );

	pFnGetPlayersRanked->FunctionFlags |= 0x400;

	if ( Players )
		memcpy ( Players, &GetPlayersRanked_Parms.Players, 0xC );
};

// Function GridGame.PgRuleSet.GetLosingTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgTeamInfo* UPgRuleSet::GetLosingTeam ( )
{
	static UFunction* pFnGetLosingTeam = NULL;

	if ( ! pFnGetLosingTeam )
		pFnGetLosingTeam = (UFunction*) UObject::GObjObjects()->Data[ 47528 ];

	UPgRuleSet_execGetLosingTeam_Parms GetLosingTeam_Parms;

	pFnGetLosingTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLosingTeam, &GetLosingTeam_Parms, NULL );

	pFnGetLosingTeam->FunctionFlags |= 0x400;

	return GetLosingTeam_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetLosingPlayer
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class APgPlayerReplicationInfo* UPgRuleSet::GetLosingPlayer ( unsigned char TeamIndex )
{
	static UFunction* pFnGetLosingPlayer = NULL;

	if ( ! pFnGetLosingPlayer )
		pFnGetLosingPlayer = (UFunction*) UObject::GObjObjects()->Data[ 47525 ];

	UPgRuleSet_execGetLosingPlayer_Parms GetLosingPlayer_Parms;
	GetLosingPlayer_Parms.TeamIndex = TeamIndex;

	pFnGetLosingPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLosingPlayer, &GetLosingPlayer_Parms, NULL );

	pFnGetLosingPlayer->FunctionFlags |= 0x400;

	return GetLosingPlayer_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetWinningTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgTeamInfo* UPgRuleSet::GetWinningTeam ( )
{
	static UFunction* pFnGetWinningTeam = NULL;

	if ( ! pFnGetWinningTeam )
		pFnGetWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 47523 ];

	UPgRuleSet_execGetWinningTeam_Parms GetWinningTeam_Parms;

	pFnGetWinningTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWinningTeam, &GetWinningTeam_Parms, NULL );

	pFnGetWinningTeam->FunctionFlags |= 0x400;

	return GetWinningTeam_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetWinningPlayer
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class APgPlayerReplicationInfo* UPgRuleSet::GetWinningPlayer ( unsigned char TeamIndex )
{
	static UFunction* pFnGetWinningPlayer = NULL;

	if ( ! pFnGetWinningPlayer )
		pFnGetWinningPlayer = (UFunction*) UObject::GObjObjects()->Data[ 47520 ];

	UPgRuleSet_execGetWinningPlayer_Parms GetWinningPlayer_Parms;
	GetWinningPlayer_Parms.TeamIndex = TeamIndex;

	pFnGetWinningPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWinningPlayer, &GetWinningPlayer_Parms, NULL );

	pFnGetWinningPlayer->FunctionFlags |= 0x400;

	return GetWinningPlayer_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetWinner
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* UPgRuleSet::GetWinner ( )
{
	static UFunction* pFnGetWinner = NULL;

	if ( ! pFnGetWinner )
		pFnGetWinner = (UFunction*) UObject::GObjObjects()->Data[ 47518 ];

	UPgRuleSet_execGetWinner_Parms GetWinner_Parms;

	pFnGetWinner->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWinner, &GetWinner_Parms, NULL );

	pFnGetWinner->FunctionFlags |= 0x400;

	return GetWinner_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.CheckEndRound
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Reason                         ( CPF_Parm )

bool UPgRuleSet::CheckEndRound ( struct FName Reason )
{
	static UFunction* pFnCheckEndRound = NULL;

	if ( ! pFnCheckEndRound )
		pFnCheckEndRound = (UFunction*) UObject::GObjObjects()->Data[ 47515 ];

	UPgRuleSet_execCheckEndRound_Parms CheckEndRound_Parms;
	memcpy ( &CheckEndRound_Parms.Reason, &Reason, 0x8 );

	pFnCheckEndRound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckEndRound, &CheckEndRound_Parms, NULL );

	pFnCheckEndRound->FunctionFlags |= 0x400;

	return CheckEndRound_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.Score
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Event                          ( CPF_Parm )
// class AActor*                  Scorer                         ( CPF_Parm )

void UPgRuleSet::Score ( struct FName Event, class AActor* Scorer )
{
	static UFunction* pFnScore = NULL;

	if ( ! pFnScore )
		pFnScore = (UFunction*) UObject::GObjObjects()->Data[ 47512 ];

	UPgRuleSet_execScore_Parms Score_Parms;
	memcpy ( &Score_Parms.Event, &Event, 0x8 );
	Score_Parms.Scorer = Scorer;

	pFnScore->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScore, &Score_Parms, NULL );

	pFnScore->FunctionFlags |= 0x400;
};

// Function GridGame.PgRuleSet.GetCmdLineString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgRuleSet::GetCmdLineString ( )
{
	static UFunction* pFnGetCmdLineString = NULL;

	if ( ! pFnGetCmdLineString )
		pFnGetCmdLineString = (UFunction*) UObject::GObjObjects()->Data[ 47510 ];

	UPgRuleSet_execGetCmdLineString_Parms GetCmdLineString_Parms;

	pFnGetCmdLineString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCmdLineString, &GetCmdLineString_Parms, NULL );

	pFnGetCmdLineString->FunctionFlags |= 0x400;

	return GetCmdLineString_Parms.ReturnValue;
};

// Function GridGame.PgRuleSet.GetRuleSet
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgRuleSet*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgRuleSet* UPgRuleSet::GetRuleSet ( )
{
	static UFunction* pFnGetRuleSet = NULL;

	if ( ! pFnGetRuleSet )
		pFnGetRuleSet = (UFunction*) UObject::GObjObjects()->Data[ 41320 ];

	UPgRuleSet_execGetRuleSet_Parms GetRuleSet_Parms;

	pFnGetRuleSet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRuleSet, &GetRuleSet_Parms, NULL );

	pFnGetRuleSet->FunctionFlags |= 0x400;

	return GetRuleSet_Parms.ReturnValue;
};

// Function GridGame.PgStatInfo.ResetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Reason                         ( CPF_Parm )

void APgStatInfo::ResetStats ( unsigned char Reason )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = (UFunction*) UObject::GObjObjects()->Data[ 44348 ];

	APgStatInfo_execResetStats_Parms ResetStats_Parms;
	ResetStats_Parms.Reason = Reason;

	pFnResetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );

	pFnResetStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatInfo.GetStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

float APgStatInfo::GetStatValue ( struct FName Stat )
{
	static UFunction* pFnGetStatValue = NULL;

	if ( ! pFnGetStatValue )
		pFnGetStatValue = (UFunction*) UObject::GObjObjects()->Data[ 44345 ];

	APgStatInfo_execGetStatValue_Parms GetStatValue_Parms;
	memcpy ( &GetStatValue_Parms.Stat, &Stat, 0x8 );

	pFnGetStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatValue, &GetStatValue_Parms, NULL );

	pFnGetStatValue->FunctionFlags |= 0x400;

	return GetStatValue_Parms.ReturnValue;
};

// Function GridGame.PgStatInfo.WriteStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Stat                           ( CPF_Parm )
// unsigned char                  Op                             ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void APgStatInfo::WriteStatValue ( struct FName Stat, unsigned char Op, float Value )
{
	static UFunction* pFnWriteStatValue = NULL;

	if ( ! pFnWriteStatValue )
		pFnWriteStatValue = (UFunction*) UObject::GObjObjects()->Data[ 44340 ];

	APgStatInfo_execWriteStatValue_Parms WriteStatValue_Parms;
	memcpy ( &WriteStatValue_Parms.Stat, &Stat, 0x8 );
	WriteStatValue_Parms.Op = Op;
	WriteStatValue_Parms.Value = Value;

	pFnWriteStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteStatValue, &WriteStatValue_Parms, NULL );

	pFnWriteStatValue->FunctionFlags |= 0x400;
};

// Function GridGame.PgStatInfo.GetStatData
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Stat                           ( CPF_Parm )
// struct FGameStatData           Data                           ( CPF_Parm | CPF_OutParm )

void APgStatInfo::GetStatData ( struct FName Stat, struct FGameStatData* Data )
{
	static UFunction* pFnGetStatData = NULL;

	if ( ! pFnGetStatData )
		pFnGetStatData = (UFunction*) UObject::GObjObjects()->Data[ 44337 ];

	APgStatInfo_execGetStatData_Parms GetStatData_Parms;
	memcpy ( &GetStatData_Parms.Stat, &Stat, 0x8 );

	pFnGetStatData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatData, &GetStatData_Parms, NULL );

	pFnGetStatData->FunctionFlags |= 0x400;

	if ( Data )
		memcpy ( Data, &GetStatData_Parms.Data, 0x14 );
};

// Function GridGame.PgStatInfo.HasStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

bool APgStatInfo::HasStat ( struct FName Stat )
{
	static UFunction* pFnHasStat = NULL;

	if ( ! pFnHasStat )
		pFnHasStat = (UFunction*) UObject::GObjObjects()->Data[ 44334 ];

	APgStatInfo_execHasStat_Parms HasStat_Parms;
	memcpy ( &HasStat_Parms.Stat, &Stat, 0x8 );

	pFnHasStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasStat, &HasStat_Parms, NULL );

	pFnHasStat->FunctionFlags |= 0x400;

	return HasStat_Parms.ReturnValue;
};

// Function GridGame.PgStatInfo._ReplicatedEvent
// [0x00040903] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgStatInfo::event_ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFn_ReplicatedEvent = NULL;

	if ( ! pFn_ReplicatedEvent )
		pFn_ReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 44332 ];

	APgStatInfo_event_ReplicatedEvent_Parms _ReplicatedEvent_Parms;
	memcpy ( &_ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFn_ReplicatedEvent, &_ReplicatedEvent_Parms, NULL );
};

// Function GridGame.PgStatInfo.ReplicatedEvent
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void APgStatInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 44330 ];

	APgStatInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	pFnReplicatedEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );

	pFnReplicatedEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamBase.OnToggle
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void APgTeamBase::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 50398 ];

	APgTeamBase_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	pFnOnToggle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );

	pFnOnToggle->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamInfo.ResetStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Reason                         ( CPF_Parm )

void APgTeamInfo::ResetStats ( unsigned char Reason )
{
	static UFunction* pFnResetStats = NULL;

	if ( ! pFnResetStats )
		pFnResetStats = (UFunction*) UObject::GObjObjects()->Data[ 50488 ];

	APgTeamInfo_execResetStats_Parms ResetStats_Parms;
	ResetStats_Parms.Reason = Reason;

	pFnResetStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetStats, &ResetStats_Parms, NULL );

	pFnResetStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamInfo.GetStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

float APgTeamInfo::GetStatValue ( struct FName Stat )
{
	static UFunction* pFnGetStatValue = NULL;

	if ( ! pFnGetStatValue )
		pFnGetStatValue = (UFunction*) UObject::GObjObjects()->Data[ 50485 ];

	APgTeamInfo_execGetStatValue_Parms GetStatValue_Parms;
	memcpy ( &GetStatValue_Parms.Stat, &Stat, 0x8 );

	pFnGetStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStatValue, &GetStatValue_Parms, NULL );

	pFnGetStatValue->FunctionFlags |= 0x400;

	return GetStatValue_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.WriteStatValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   Stat                           ( CPF_Parm )
// unsigned char                  Op                             ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void APgTeamInfo::WriteStatValue ( struct FName Stat, unsigned char Op, float Value )
{
	static UFunction* pFnWriteStatValue = NULL;

	if ( ! pFnWriteStatValue )
		pFnWriteStatValue = (UFunction*) UObject::GObjObjects()->Data[ 50481 ];

	APgTeamInfo_execWriteStatValue_Parms WriteStatValue_Parms;
	memcpy ( &WriteStatValue_Parms.Stat, &Stat, 0x8 );
	WriteStatValue_Parms.Op = Op;
	WriteStatValue_Parms.Value = Value;

	pFnWriteStatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteStatValue, &WriteStatValue_Parms, NULL );

	pFnWriteStatValue->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamInfo.HasStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Stat                           ( CPF_Parm )

bool APgTeamInfo::HasStat ( struct FName Stat )
{
	static UFunction* pFnHasStat = NULL;

	if ( ! pFnHasStat )
		pFnHasStat = (UFunction*) UObject::GObjObjects()->Data[ 50478 ];

	APgTeamInfo_execHasStat_Parms HasStat_Parms;
	memcpy ( &HasStat_Parms.Stat, &Stat, 0x8 );

	pFnHasStat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasStat, &HasStat_Parms, NULL );

	pFnHasStat->FunctionFlags |= 0x400;

	return HasStat_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.InitStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgTeamInfo::InitStats ( )
{
	static UFunction* pFnInitStats = NULL;

	if ( ! pFnInitStats )
		pFnInitStats = (UFunction*) UObject::GObjObjects()->Data[ 50477 ];

	APgTeamInfo_execInitStats_Parms InitStats_Parms;

	pFnInitStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitStats, &InitStats_Parms, NULL );

	pFnInitStats->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamInfo.GetTeamColorName
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Idx                            ( CPF_OptionalParm | CPF_Parm )

struct FName APgTeamInfo::GetTeamColorName ( int Idx )
{
	static UFunction* pFnGetTeamColorName = NULL;

	if ( ! pFnGetTeamColorName )
		pFnGetTeamColorName = (UFunction*) UObject::GObjObjects()->Data[ 50474 ];

	APgTeamInfo_execGetTeamColorName_Parms GetTeamColorName_Parms;
	GetTeamColorName_Parms.Idx = Idx;

	pFnGetTeamColorName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamColorName, &GetTeamColorName_Parms, NULL );

	pFnGetTeamColorName->FunctionFlags |= 0x400;

	return GetTeamColorName_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.GetTeamColor
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_OptionalParm | CPF_Parm )
// struct FLinearColor            Colour                         ( CPF_Parm | CPF_OutParm )

void APgTeamInfo::GetTeamColor ( int Index, struct FLinearColor* Colour )
{
	static UFunction* pFnGetTeamColor = NULL;

	if ( ! pFnGetTeamColor )
		pFnGetTeamColor = (UFunction*) UObject::GObjObjects()->Data[ 50471 ];

	APgTeamInfo_execGetTeamColor_Parms GetTeamColor_Parms;
	GetTeamColor_Parms.Index = Index;

	pFnGetTeamColor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamColor, &GetTeamColor_Parms, NULL );

	pFnGetTeamColor->FunctionFlags |= 0x400;

	if ( Colour )
		memcpy ( Colour, &GetTeamColor_Parms.Colour, 0x10 );
};

// Function GridGame.PgTeamInfo.GetPlayers
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class APlayerReplicationInfo* > Players                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void APgTeamInfo::GetPlayers ( TArray< class APlayerReplicationInfo* >* Players )
{
	static UFunction* pFnGetPlayers = NULL;

	if ( ! pFnGetPlayers )
		pFnGetPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50468 ];

	APgTeamInfo_execGetPlayers_Parms GetPlayers_Parms;

	pFnGetPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayers, &GetPlayers_Parms, NULL );

	pFnGetPlayers->FunctionFlags |= 0x400;

	if ( Players )
		memcpy ( Players, &GetPlayers_Parms.Players, 0xC );
};

// Function GridGame.PgTeamInfo.GetNumBots
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgTeamInfo::GetNumBots ( )
{
	static UFunction* pFnGetNumBots = NULL;

	if ( ! pFnGetNumBots )
		pFnGetNumBots = (UFunction*) UObject::GObjObjects()->Data[ 50466 ];

	APgTeamInfo_execGetNumBots_Parms GetNumBots_Parms;

	pFnGetNumBots->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumBots, &GetNumBots_Parms, NULL );

	pFnGetNumBots->FunctionFlags |= 0x400;

	return GetNumBots_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.GetNumHumans
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgTeamInfo::GetNumHumans ( )
{
	static UFunction* pFnGetNumHumans = NULL;

	if ( ! pFnGetNumHumans )
		pFnGetNumHumans = (UFunction*) UObject::GObjObjects()->Data[ 50464 ];

	APgTeamInfo_execGetNumHumans_Parms GetNumHumans_Parms;

	pFnGetNumHumans->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumHumans, &GetNumHumans_Parms, NULL );

	pFnGetNumHumans->FunctionFlags |= 0x400;

	return GetNumHumans_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.GetNumPlayers
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgTeamInfo::GetNumPlayers ( )
{
	static UFunction* pFnGetNumPlayers = NULL;

	if ( ! pFnGetNumPlayers )
		pFnGetNumPlayers = (UFunction*) UObject::GObjObjects()->Data[ 50462 ];

	APgTeamInfo_execGetNumPlayers_Parms GetNumPlayers_Parms;

	pFnGetNumPlayers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumPlayers, &GetNumPlayers_Parms, NULL );

	pFnGetNumPlayers->FunctionFlags |= 0x400;

	return GetNumPlayers_Parms.ReturnValue;
};

// Function GridGame.PgTeamInfo.Reset
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APgTeamInfo::eventReset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 50461 ];

	APgTeamInfo_eventReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgTeamInfo._RemoveFromTeam
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// class AController*             Member                         ( CPF_Parm )

void APgTeamInfo::event_RemoveFromTeam ( class AController* Member )
{
	static UFunction* pFn_RemoveFromTeam = NULL;

	if ( ! pFn_RemoveFromTeam )
		pFn_RemoveFromTeam = (UFunction*) UObject::GObjObjects()->Data[ 50459 ];

	APgTeamInfo_event_RemoveFromTeam_Parms _RemoveFromTeam_Parms;
	_RemoveFromTeam_Parms.Member = Member;

	this->ProcessEvent ( pFn_RemoveFromTeam, &_RemoveFromTeam_Parms, NULL );
};

// Function GridGame.PgTeamInfo._AddToTeam
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewMember                      ( CPF_Parm )

bool APgTeamInfo::event_AddToTeam ( class AController* NewMember )
{
	static UFunction* pFn_AddToTeam = NULL;

	if ( ! pFn_AddToTeam )
		pFn_AddToTeam = (UFunction*) UObject::GObjObjects()->Data[ 50456 ];

	APgTeamInfo_event_AddToTeam_Parms _AddToTeam_Parms;
	_AddToTeam_Parms.NewMember = NewMember;

	this->ProcessEvent ( pFn_AddToTeam, &_AddToTeam_Parms, NULL );

	return _AddToTeam_Parms.ReturnValue;
};

// Function GridGame.PgBlockingVolume.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool APgBlockingVolume::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 43046 ];

	APgBlockingVolume_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function GridGame.PgEnergyActor.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void APgEnergyActor::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 44254 ];

	APgEnergyActor_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function GridGame.PgEnergyActor.OnEnergyActor
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_EnergyActor*   Action                         ( CPF_Parm )

void APgEnergyActor::OnEnergyActor ( class UPgSeqAct_EnergyActor* Action )
{
	static UFunction* pFnOnEnergyActor = NULL;

	if ( ! pFnOnEnergyActor )
		pFnOnEnergyActor = (UFunction*) UObject::GObjObjects()->Data[ 44242 ];

	APgEnergyActor_execOnEnergyActor_Parms OnEnergyActor_Parms;
	OnEnergyActor_Parms.Action = Action;

	this->ProcessEvent ( pFnOnEnergyActor, &OnEnergyActor_Parms, NULL );
};

// Function GridGame.PgEnergyActor.GetMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgEnergyActor::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 44239 ];

	APgEnergyActor_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgEnergyActor.InitMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgEnergyActor::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 44238 ];

	APgEnergyActor_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.EnergyActorUse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Team                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Usage                          ( CPF_Parm | CPF_NeedCtorLink )
// class AController*             Controller                     ( CPF_Parm )

void APgEnergyActor::eventEnergyActorUse ( struct FString Type, struct FString Team, struct FString Usage, class AController* Controller )
{
	static UFunction* pFnEnergyActorUse = NULL;

	if ( ! pFnEnergyActorUse )
		pFnEnergyActorUse = (UFunction*) UObject::GObjObjects()->Data[ 44232 ];

	APgEnergyActor_eventEnergyActorUse_Parms EnergyActorUse_Parms;
	memcpy ( &EnergyActorUse_Parms.Type, &Type, 0xC );
	memcpy ( &EnergyActorUse_Parms.Team, &Team, 0xC );
	memcpy ( &EnergyActorUse_Parms.Usage, &Usage, 0xC );
	EnergyActorUse_Parms.Controller = Controller;

	this->ProcessEvent ( pFnEnergyActorUse, &EnergyActorUse_Parms, NULL );
};

// Function GridGame.PgEnergyActor.LogEnergyActorUse
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )
// struct FName                   Team                           ( CPF_Parm )
// unsigned long                  IsPositiveFlow                 ( CPF_Parm )
// class AController*             Controller                     ( CPF_Parm )

void APgEnergyActor::LogEnergyActorUse ( unsigned char Type, struct FName Team, unsigned long IsPositiveFlow, class AController* Controller )
{
	static UFunction* pFnLogEnergyActorUse = NULL;

	if ( ! pFnLogEnergyActorUse )
		pFnLogEnergyActorUse = (UFunction*) UObject::GObjObjects()->Data[ 44226 ];

	APgEnergyActor_execLogEnergyActorUse_Parms LogEnergyActorUse_Parms;
	LogEnergyActorUse_Parms.Type = Type;
	memcpy ( &LogEnergyActorUse_Parms.Team, &Team, 0x8 );
	LogEnergyActorUse_Parms.IsPositiveFlow = IsPositiveFlow;
	LogEnergyActorUse_Parms.Controller = Controller;

	pFnLogEnergyActorUse->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLogEnergyActorUse, &LogEnergyActorUse_Parms, NULL );

	pFnLogEnergyActorUse->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.TriggerEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  InInstigator                   ( CPF_Parm )
// int                            ActivateIndex                  ( CPF_Parm )

void APgEnergyActor::TriggerEvent ( class AActor* InInstigator, int ActivateIndex )
{
	static UFunction* pFnTriggerEvent = NULL;

	if ( ! pFnTriggerEvent )
		pFnTriggerEvent = (UFunction*) UObject::GObjObjects()->Data[ 44223 ];

	APgEnergyActor_execTriggerEvent_Parms TriggerEvent_Parms;
	TriggerEvent_Parms.InInstigator = InInstigator;
	TriggerEvent_Parms.ActivateIndex = ActivateIndex;

	pFnTriggerEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerEvent, &TriggerEvent_Parms, NULL );

	pFnTriggerEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgEnergyActor::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 44222 ];

	APgEnergyActor_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.PostTeamChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  playAudio                      ( CPF_Parm )

void APgEnergyActor::PostTeamChange ( unsigned long playAudio )
{
	static UFunction* pFnPostTeamChange = NULL;

	if ( ! pFnPostTeamChange )
		pFnPostTeamChange = (UFunction*) UObject::GObjObjects()->Data[ 44220 ];

	APgEnergyActor_execPostTeamChange_Parms PostTeamChange_Parms;
	PostTeamChange_Parms.playAudio = playAudio;

	pFnPostTeamChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostTeamChange, &PostTeamChange_Parms, NULL );

	pFnPostTeamChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.PostStateChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  TheActor                       ( CPF_Parm )
// unsigned long                  playAudio                      ( CPF_Parm )

void APgEnergyActor::PostStateChange ( class AActor* TheActor, unsigned long playAudio )
{
	static UFunction* pFnPostStateChange = NULL;

	if ( ! pFnPostStateChange )
		pFnPostStateChange = (UFunction*) UObject::GObjObjects()->Data[ 44217 ];

	APgEnergyActor_execPostStateChange_Parms PostStateChange_Parms;
	PostStateChange_Parms.TheActor = TheActor;
	PostStateChange_Parms.playAudio = playAudio;

	pFnPostStateChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPostStateChange, &PostStateChange_Parms, NULL );

	pFnPostStateChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgEnergyActor.IsPositiveFlow
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 thePawn                        ( CPF_Parm )

bool APgEnergyActor::IsPositiveFlow ( class APgPawn* thePawn )
{
	static UFunction* pFnIsPositiveFlow = NULL;

	if ( ! pFnIsPositiveFlow )
		pFnIsPositiveFlow = (UFunction*) UObject::GObjObjects()->Data[ 44214 ];

	APgEnergyActor_execIsPositiveFlow_Parms IsPositiveFlow_Parms;
	IsPositiveFlow_Parms.thePawn = thePawn;

	pFnIsPositiveFlow->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsPositiveFlow, &IsPositiveFlow_Parms, NULL );

	pFnIsPositiveFlow->FunctionFlags |= 0x400;

	return IsPositiveFlow_Parms.ReturnValue;
};

// Function GridGame.PgEnergyActor.CanUseEnergyActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   thePawn                        ( CPF_Parm )

bool APgEnergyActor::CanUseEnergyActor ( class APawn* thePawn )
{
	static UFunction* pFnCanUseEnergyActor = NULL;

	if ( ! pFnCanUseEnergyActor )
		pFnCanUseEnergyActor = (UFunction*) UObject::GObjObjects()->Data[ 44211 ];

	APgEnergyActor_execCanUseEnergyActor_Parms CanUseEnergyActor_Parms;
	CanUseEnergyActor_Parms.thePawn = thePawn;

	pFnCanUseEnergyActor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseEnergyActor, &CanUseEnergyActor_Parms, NULL );

	pFnCanUseEnergyActor->FunctionFlags |= 0x400;

	return CanUseEnergyActor_Parms.ReturnValue;
};

// Function GridGame.PgEnergyActor.SetCooldown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          cooldown                       ( CPF_Parm )

void APgEnergyActor::SetCooldown ( float cooldown )
{
	static UFunction* pFnSetCooldown = NULL;

	if ( ! pFnSetCooldown )
		pFnSetCooldown = (UFunction*) UObject::GObjObjects()->Data[ 44208 ];

	APgEnergyActor_execSetCooldown_Parms SetCooldown_Parms;
	SetCooldown_Parms.cooldown = cooldown;

	pFnSetCooldown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCooldown, &SetCooldown_Parms, NULL );

	pFnSetCooldown->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterpActor.OnInterpActor
// [0x00020002] 
// Parameters infos:
// class UPgSeqAct_InterpActor*   Action                         ( CPF_Parm )

void APgInterpActor::OnInterpActor ( class UPgSeqAct_InterpActor* Action )
{
	static UFunction* pFnOnInterpActor = NULL;

	if ( ! pFnOnInterpActor )
		pFnOnInterpActor = (UFunction*) UObject::GObjObjects()->Data[ 44179 ];

	APgInterpActor_execOnInterpActor_Parms OnInterpActor_Parms;
	OnInterpActor_Parms.Action = Action;

	this->ProcessEvent ( pFnOnInterpActor, &OnInterpActor_Parms, NULL );
};

// Function GridGame.PgInterpActor.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgInterpActor::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 44175 ];

	APgInterpActor_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function GridGame.PgInterpActor.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgInterpActor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 44170 ];

	APgInterpActor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function GridGame.PgInterpActor.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgInterpActor::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 44160 ];

	APgInterpActor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function GridGame.PgInterpActor.OnDamageCaused
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            damageCaused                   ( CPF_Parm )
// class AActor*                  damageVictim                   ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgInterpActor::OnDamageCaused ( int damageCaused, class AActor* damageVictim, class AActor* DamageCauser )
{
	static UFunction* pFnOnDamageCaused = NULL;

	if ( ! pFnOnDamageCaused )
		pFnOnDamageCaused = (UFunction*) UObject::GObjObjects()->Data[ 44156 ];

	APgInterpActor_execOnDamageCaused_Parms OnDamageCaused_Parms;
	OnDamageCaused_Parms.damageCaused = damageCaused;
	OnDamageCaused_Parms.damageVictim = damageVictim;
	OnDamageCaused_Parms.DamageCauser = DamageCauser;

	pFnOnDamageCaused->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnDamageCaused, &OnDamageCaused_Parms, NULL );

	pFnOnDamageCaused->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterpActor.GetCauseDamageParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgDamageParam*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgDamageParam* APgInterpActor::GetCauseDamageParam ( )
{
	static UFunction* pFnGetCauseDamageParam = NULL;

	if ( ! pFnGetCauseDamageParam )
		pFnGetCauseDamageParam = (UFunction*) UObject::GObjObjects()->Data[ 44154 ];

	APgInterpActor_execGetCauseDamageParam_Parms GetCauseDamageParam_Parms;

	pFnGetCauseDamageParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCauseDamageParam, &GetCauseDamageParam_Parms, NULL );

	pFnGetCauseDamageParam->FunctionFlags |= 0x400;

	return GetCauseDamageParam_Parms.ReturnValue;
};

// Function GridGame.PgInterpActor.SetScalarParam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          currentBlend                   ( CPF_Parm )
// float                          baseBlend                      ( CPF_Parm )
// float                          desiredBlend                   ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )
// struct FName                   ParamName                      ( CPF_Parm )

void APgInterpActor::SetScalarParam ( float currentBlend, float baseBlend, float desiredBlend, float BlendTime, struct FName ParamName )
{
	static UFunction* pFnSetScalarParam = NULL;

	if ( ! pFnSetScalarParam )
		pFnSetScalarParam = (UFunction*) UObject::GObjObjects()->Data[ 44148 ];

	APgInterpActor_execSetScalarParam_Parms SetScalarParam_Parms;
	SetScalarParam_Parms.currentBlend = currentBlend;
	SetScalarParam_Parms.baseBlend = baseBlend;
	SetScalarParam_Parms.desiredBlend = desiredBlend;
	SetScalarParam_Parms.BlendTime = BlendTime;
	memcpy ( &SetScalarParam_Parms.ParamName, &ParamName, 0x8 );

	pFnSetScalarParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalarParam, &SetScalarParam_Parms, NULL );

	pFnSetScalarParam->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterpActor.GetScalarParameterBlendValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Param                          ( CPF_Parm )

float APgInterpActor::GetScalarParameterBlendValue ( struct FName Param )
{
	static UFunction* pFnGetScalarParameterBlendValue = NULL;

	if ( ! pFnGetScalarParameterBlendValue )
		pFnGetScalarParameterBlendValue = (UFunction*) UObject::GObjObjects()->Data[ 44145 ];

	APgInterpActor_execGetScalarParameterBlendValue_Parms GetScalarParameterBlendValue_Parms;
	memcpy ( &GetScalarParameterBlendValue_Parms.Param, &Param, 0x8 );

	pFnGetScalarParameterBlendValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetScalarParameterBlendValue, &GetScalarParameterBlendValue_Parms, NULL );

	pFnGetScalarParameterBlendValue->FunctionFlags |= 0x400;

	return GetScalarParameterBlendValue_Parms.ReturnValue;
};

// Function GridGame.PgInterpActor.TickMaterialParamBlend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgInterpActor::TickMaterialParamBlend ( float DeltaTime )
{
	static UFunction* pFnTickMaterialParamBlend = NULL;

	if ( ! pFnTickMaterialParamBlend )
		pFnTickMaterialParamBlend = (UFunction*) UObject::GObjObjects()->Data[ 44143 ];

	APgInterpActor_execTickMaterialParamBlend_Parms TickMaterialParamBlend_Parms;
	TickMaterialParamBlend_Parms.DeltaTime = DeltaTime;

	pFnTickMaterialParamBlend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickMaterialParamBlend, &TickMaterialParamBlend_Parms, NULL );

	pFnTickMaterialParamBlend->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterpActor.GetMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class UMaterialInstanceConstant* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UMaterialInstanceConstant* > APgInterpActor::GetMaterialInstanceList ( )
{
	static UFunction* pFnGetMaterialInstanceList = NULL;

	if ( ! pFnGetMaterialInstanceList )
		pFnGetMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 44140 ];

	APgInterpActor_execGetMaterialInstanceList_Parms GetMaterialInstanceList_Parms;

	pFnGetMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaterialInstanceList, &GetMaterialInstanceList_Parms, NULL );

	pFnGetMaterialInstanceList->FunctionFlags |= 0x400;

	return GetMaterialInstanceList_Parms.ReturnValue;
};

// Function GridGame.PgInterpActor.InitMaterialInstanceList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgInterpActor::InitMaterialInstanceList ( )
{
	static UFunction* pFnInitMaterialInstanceList = NULL;

	if ( ! pFnInitMaterialInstanceList )
		pFnInitMaterialInstanceList = (UFunction*) UObject::GObjObjects()->Data[ 44139 ];

	APgInterpActor_execInitMaterialInstanceList_Parms InitMaterialInstanceList_Parms;

	pFnInitMaterialInstanceList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitMaterialInstanceList, &InitMaterialInstanceList_Parms, NULL );

	pFnInitMaterialInstanceList->FunctionFlags |= 0x400;
};

// Function GridGame.PgObjective.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void APgObjective::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 43582 ];

	APgObjective_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function GridGame.PgObjective.OnObjectiveControl
// [0x00020102] 
// Parameters infos:
// class UPgSeqAct_ObjectiveControl* Action                         ( CPF_Parm )

void APgObjective::OnObjectiveControl ( class UPgSeqAct_ObjectiveControl* Action )
{
	static UFunction* pFnOnObjectiveControl = NULL;

	if ( ! pFnOnObjectiveControl )
		pFnOnObjectiveControl = (UFunction*) UObject::GObjObjects()->Data[ 43579 ];

	APgObjective_execOnObjectiveControl_Parms OnObjectiveControl_Parms;
	OnObjectiveControl_Parms.Action = Action;

	this->ProcessEvent ( pFnOnObjectiveControl, &OnObjectiveControl_Parms, NULL );
};

// Function GridGame.PgObjective.Release
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AAIController*           C                              ( CPF_Parm )

void APgObjective::Release ( class AAIController* C )
{
	static UFunction* pFnRelease = NULL;

	if ( ! pFnRelease )
		pFnRelease = (UFunction*) UObject::GObjObjects()->Data[ 43577 ];

	APgObjective_execRelease_Parms Release_Parms;
	Release_Parms.C = C;

	pFnRelease->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRelease, &Release_Parms, NULL );

	pFnRelease->FunctionFlags |= 0x400;
};

// Function GridGame.PgObjective.Claim
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AAIController*           C                              ( CPF_Parm )

void APgObjective::Claim ( class AAIController* C )
{
	static UFunction* pFnClaim = NULL;

	if ( ! pFnClaim )
		pFnClaim = (UFunction*) UObject::GObjObjects()->Data[ 43575 ];

	APgObjective_execClaim_Parms Claim_Parms;
	Claim_Parms.C = C;

	pFnClaim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaim, &Claim_Parms, NULL );

	pFnClaim->FunctionFlags |= 0x400;
};

// Function GridGame.PgObjective.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char APgObjective::GetTeamNum ( )
{
	static UFunction* pFnGetTeamNum = NULL;

	if ( ! pFnGetTeamNum )
		pFnGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 43573 ];

	APgObjective_execGetTeamNum_Parms GetTeamNum_Parms;

	pFnGetTeamNum->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamNum, &GetTeamNum_Parms, NULL );

	pFnGetTeamNum->FunctionFlags |= 0x400;

	return GetTeamNum_Parms.ReturnValue;
};

// Function GridGame.PgObjective.GetObjectiveText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName APgObjective::GetObjectiveText ( )
{
	static UFunction* pFnGetObjectiveText = NULL;

	if ( ! pFnGetObjectiveText )
		pFnGetObjectiveText = (UFunction*) UObject::GObjObjects()->Data[ 43571 ];

	APgObjective_execGetObjectiveText_Parms GetObjectiveText_Parms;

	pFnGetObjectiveText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObjectiveText, &GetObjectiveText_Parms, NULL );

	pFnGetObjectiveText->FunctionFlags |= 0x400;

	return GetObjectiveText_Parms.ReturnValue;
};

// Function GridGame.PgObjective.CanShowObjectiveText
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgObjective::CanShowObjectiveText ( )
{
	static UFunction* pFnCanShowObjectiveText = NULL;

	if ( ! pFnCanShowObjectiveText )
		pFnCanShowObjectiveText = (UFunction*) UObject::GObjObjects()->Data[ 43569 ];

	APgObjective_execCanShowObjectiveText_Parms CanShowObjectiveText_Parms;

	pFnCanShowObjectiveText->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanShowObjectiveText, &CanShowObjectiveText_Parms, NULL );

	pFnCanShowObjectiveText->FunctionFlags |= 0x400;

	return CanShowObjectiveText_Parms.ReturnValue;
};

// Function GridGame.PgObjective.CanShowMapLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgObjective::CanShowMapLocation ( )
{
	static UFunction* pFnCanShowMapLocation = NULL;

	if ( ! pFnCanShowMapLocation )
		pFnCanShowMapLocation = (UFunction*) UObject::GObjObjects()->Data[ 43567 ];

	APgObjective_execCanShowMapLocation_Parms CanShowMapLocation_Parms;

	pFnCanShowMapLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanShowMapLocation, &CanShowMapLocation_Parms, NULL );

	pFnCanShowMapLocation->FunctionFlags |= 0x400;

	return CanShowMapLocation_Parms.ReturnValue;
};

// Function GridGame.PgObjective.IsComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgObjective::IsComplete ( )
{
	static UFunction* pFnIsComplete = NULL;

	if ( ! pFnIsComplete )
		pFnIsComplete = (UFunction*) UObject::GObjObjects()->Data[ 43565 ];

	APgObjective_execIsComplete_Parms IsComplete_Parms;

	pFnIsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsComplete, &IsComplete_Parms, NULL );

	pFnIsComplete->FunctionFlags |= 0x400;

	return IsComplete_Parms.ReturnValue;
};

// Function GridGame.PgObjective.Complete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Player                         ( CPF_Parm )

void APgObjective::Complete ( class AActor* Player )
{
	static UFunction* pFnComplete = NULL;

	if ( ! pFnComplete )
		pFnComplete = (UFunction*) UObject::GObjObjects()->Data[ 43563 ];

	APgObjective_execComplete_Parms Complete_Parms;
	Complete_Parms.Player = Player;

	pFnComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnComplete, &Complete_Parms, NULL );

	pFnComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgObjective.IsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgObjective::IsActive ( )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 43561 ];

	APgObjective_execIsActive_Parms IsActive_Parms;

	pFnIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	pFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Parms.ReturnValue;
};

// Function GridGame.PgObjective.Activate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgObjective::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 43560 ];

	APgObjective_execActivate_Parms Activate_Parms;

	pFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );

	pFnActivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.KismetFireCaptured
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        Captors                        ( CPF_Parm | CPF_NeedCtorLink )

void APgCapturePoint::KismetFireCaptured ( TArray< class AActor* > Captors )
{
	static UFunction* pFnKismetFireCaptured = NULL;

	if ( ! pFnKismetFireCaptured )
		pFnKismetFireCaptured = (UFunction*) UObject::GObjObjects()->Data[ 43671 ];

	APgCapturePoint_execKismetFireCaptured_Parms KismetFireCaptured_Parms;
	memcpy ( &KismetFireCaptured_Parms.Captors, &Captors, 0xC );

	pFnKismetFireCaptured->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKismetFireCaptured, &KismetFireCaptured_Parms, NULL );

	pFnKismetFireCaptured->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.OnCapturePointControl
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class UPgSeqAct_CapturePointControl* Action                         ( CPF_Parm )

void APgCapturePoint::OnCapturePointControl ( class UPgSeqAct_CapturePointControl* Action )
{
	static UFunction* pFnOnCapturePointControl = NULL;

	if ( ! pFnOnCapturePointControl )
		pFnOnCapturePointControl = (UFunction*) UObject::GObjObjects()->Data[ 43669 ];

	APgCapturePoint_execOnCapturePointControl_Parms OnCapturePointControl_Parms;
	OnCapturePointControl_Parms.Action = Action;

	pFnOnCapturePointControl->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnCapturePointControl, &OnCapturePointControl_Parms, NULL );

	pFnOnCapturePointControl->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.AwardCapture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        Captors                        ( CPF_Parm | CPF_NeedCtorLink )

void APgCapturePoint::AwardCapture ( TArray< class AActor* > Captors )
{
	static UFunction* pFnAwardCapture = NULL;

	if ( ! pFnAwardCapture )
		pFnAwardCapture = (UFunction*) UObject::GObjObjects()->Data[ 43666 ];

	APgCapturePoint_execAwardCapture_Parms AwardCapture_Parms;
	memcpy ( &AwardCapture_Parms.Captors, &Captors, 0xC );

	pFnAwardCapture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAwardCapture, &AwardCapture_Parms, NULL );

	pFnAwardCapture->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.SetCaptors
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        Captors                        ( CPF_Parm | CPF_NeedCtorLink )

void APgCapturePoint::SetCaptors ( TArray< class AActor* > Captors )
{
	static UFunction* pFnSetCaptors = NULL;

	if ( ! pFnSetCaptors )
		pFnSetCaptors = (UFunction*) UObject::GObjObjects()->Data[ 43663 ];

	APgCapturePoint_execSetCaptors_Parms SetCaptors_Parms;
	memcpy ( &SetCaptors_Parms.Captors, &Captors, 0xC );

	pFnSetCaptors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCaptors, &SetCaptors_Parms, NULL );

	pFnSetCaptors->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.IsCaptor
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerReplicationInfo* Player                         ( CPF_Parm )

bool APgCapturePoint::IsCaptor ( class APgPlayerReplicationInfo* Player )
{
	static UFunction* pFnIsCaptor = NULL;

	if ( ! pFnIsCaptor )
		pFnIsCaptor = (UFunction*) UObject::GObjObjects()->Data[ 43660 ];

	APgCapturePoint_execIsCaptor_Parms IsCaptor_Parms;
	IsCaptor_Parms.Player = Player;

	pFnIsCaptor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsCaptor, &IsCaptor_Parms, NULL );

	pFnIsCaptor->FunctionFlags |= 0x400;

	return IsCaptor_Parms.ReturnValue;
};

// Function GridGame.PgCapturePoint.GetCaptorAt
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

class APgPlayerReplicationInfo* APgCapturePoint::GetCaptorAt ( int Index )
{
	static UFunction* pFnGetCaptorAt = NULL;

	if ( ! pFnGetCaptorAt )
		pFnGetCaptorAt = (UFunction*) UObject::GObjObjects()->Data[ 43657 ];

	APgCapturePoint_execGetCaptorAt_Parms GetCaptorAt_Parms;
	GetCaptorAt_Parms.Index = Index;

	pFnGetCaptorAt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCaptorAt, &GetCaptorAt_Parms, NULL );

	pFnGetCaptorAt->FunctionFlags |= 0x400;

	return GetCaptorAt_Parms.ReturnValue;
};

// Function GridGame.PgCapturePoint.GetNumCaptors
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int APgCapturePoint::GetNumCaptors ( )
{
	static UFunction* pFnGetNumCaptors = NULL;

	if ( ! pFnGetNumCaptors )
		pFnGetNumCaptors = (UFunction*) UObject::GObjObjects()->Data[ 43655 ];

	APgCapturePoint_execGetNumCaptors_Parms GetNumCaptors_Parms;

	pFnGetNumCaptors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumCaptors, &GetNumCaptors_Parms, NULL );

	pFnGetNumCaptors->FunctionFlags |= 0x400;

	return GetNumCaptors_Parms.ReturnValue;
};

// Function GridGame.PgCapturePoint.IsEnergized
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgCapturePoint::IsEnergized ( )
{
	static UFunction* pFnIsEnergized = NULL;

	if ( ! pFnIsEnergized )
		pFnIsEnergized = (UFunction*) UObject::GObjObjects()->Data[ 43653 ];

	APgCapturePoint_execIsEnergized_Parms IsEnergized_Parms;

	pFnIsEnergized->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEnergized, &IsEnergized_Parms, NULL );

	pFnIsEnergized->FunctionFlags |= 0x400;

	return IsEnergized_Parms.ReturnValue;
};

// Function GridGame.PgCapturePoint.SetNeutral
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgCapturePoint::SetNeutral ( )
{
	static UFunction* pFnSetNeutral = NULL;

	if ( ! pFnSetNeutral )
		pFnSetNeutral = (UFunction*) UObject::GObjObjects()->Data[ 43652 ];

	APgCapturePoint_execSetNeutral_Parms SetNeutral_Parms;

	pFnSetNeutral->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNeutral, &SetNeutral_Parms, NULL );

	pFnSetNeutral->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.ClearProgress
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgCapturePoint::ClearProgress ( )
{
	static UFunction* pFnClearProgress = NULL;

	if ( ! pFnClearProgress )
		pFnClearProgress = (UFunction*) UObject::GObjObjects()->Data[ 43651 ];

	APgCapturePoint_execClearProgress_Parms ClearProgress_Parms;

	pFnClearProgress->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearProgress, &ClearProgress_Parms, NULL );

	pFnClearProgress->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.Deplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DepleteRate                    ( CPF_Parm )

void APgCapturePoint::Deplete ( float DepleteRate )
{
	static UFunction* pFnDeplete = NULL;

	if ( ! pFnDeplete )
		pFnDeplete = (UFunction*) UObject::GObjObjects()->Data[ 43649 ];

	APgCapturePoint_execDeplete_Parms Deplete_Parms;
	Deplete_Parms.DepleteRate = DepleteRate;

	pFnDeplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeplete, &Deplete_Parms, NULL );

	pFnDeplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgCapturePoint.Capture
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class AActor* >        Captors                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          CaptureRate                    ( CPF_Parm )

void APgCapturePoint::Capture ( TArray< class AActor* > Captors, float CaptureRate )
{
	static UFunction* pFnCapture = NULL;

	if ( ! pFnCapture )
		pFnCapture = (UFunction*) UObject::GObjObjects()->Data[ 43645 ];

	APgCapturePoint_execCapture_Parms Capture_Parms;
	memcpy ( &Capture_Parms.Captors, &Captors, 0xC );
	Capture_Parms.CaptureRate = CaptureRate;

	pFnCapture->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCapture, &Capture_Parms, NULL );

	pFnCapture->FunctionFlags |= 0x400;
};

// Function GridGame.PgPowerLine.KismetFireConnected
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  Connected                      ( CPF_Parm )

void APgPowerLine::KismetFireConnected ( unsigned long Connected )
{
	static UFunction* pFnKismetFireConnected = NULL;

	if ( ! pFnKismetFireConnected )
		pFnKismetFireConnected = (UFunction*) UObject::GObjObjects()->Data[ 49423 ];

	APgPowerLine_execKismetFireConnected_Parms KismetFireConnected_Parms;
	KismetFireConnected_Parms.Connected = Connected;

	pFnKismetFireConnected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKismetFireConnected, &KismetFireConnected_Parms, NULL );

	pFnKismetFireConnected->FunctionFlags |= 0x400;
};

// Function GridGame.PgPowerLine.Contains
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgCapturePoint*         Point                          ( CPF_Parm )

bool APgPowerLine::Contains ( class APgCapturePoint* Point )
{
	static UFunction* pFnContains = NULL;

	if ( ! pFnContains )
		pFnContains = (UFunction*) UObject::GObjObjects()->Data[ 49420 ];

	APgPowerLine_execContains_Parms Contains_Parms;
	Contains_Parms.Point = Point;

	pFnContains->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnContains, &Contains_Parms, NULL );

	pFnContains->FunctionFlags |= 0x400;

	return Contains_Parms.ReturnValue;
};

// Function GridGame.PgPowerLine.IsConnected
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgPowerLine::IsConnected ( )
{
	static UFunction* pFnIsConnected = NULL;

	if ( ! pFnIsConnected )
		pFnIsConnected = (UFunction*) UObject::GObjObjects()->Data[ 49418 ];

	APgPowerLine_execIsConnected_Parms IsConnected_Parms;

	pFnIsConnected->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsConnected, &IsConnected_Parms, NULL );

	pFnIsConnected->FunctionFlags |= 0x400;

	return IsConnected_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.GetOtherPlayerIsHost
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 currentPawn                    ( CPF_Parm )
// int                            IsHost                         ( CPF_Parm | CPF_OutParm )

bool UPgSaveLoadManager::GetOtherPlayerIsHost ( class APgPawn* currentPawn, int* IsHost )
{
	static UFunction* pFnGetOtherPlayerIsHost = NULL;

	if ( ! pFnGetOtherPlayerIsHost )
		pFnGetOtherPlayerIsHost = (UFunction*) UObject::GObjObjects()->Data[ 49734 ];

	UPgSaveLoadManager_execGetOtherPlayerIsHost_Parms GetOtherPlayerIsHost_Parms;
	GetOtherPlayerIsHost_Parms.currentPawn = currentPawn;

	pFnGetOtherPlayerIsHost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOtherPlayerIsHost, &GetOtherPlayerIsHost_Parms, NULL );

	pFnGetOtherPlayerIsHost->FunctionFlags |= 0x400;

	if ( IsHost )
		*IsHost = GetOtherPlayerIsHost_Parms.IsHost;

	return GetOtherPlayerIsHost_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.GetIsHost
// [0x00440401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPawn*                 PlayerPawn                     ( CPF_Parm )
// int                            IsHost                         ( CPF_Parm | CPF_OutParm )

bool UPgSaveLoadManager::GetIsHost ( class APgPawn* PlayerPawn, int* IsHost )
{
	static UFunction* pFnGetIsHost = NULL;

	if ( ! pFnGetIsHost )
		pFnGetIsHost = (UFunction*) UObject::GObjObjects()->Data[ 49730 ];

	UPgSaveLoadManager_execGetIsHost_Parms GetIsHost_Parms;
	GetIsHost_Parms.PlayerPawn = PlayerPawn;

	pFnGetIsHost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetIsHost, &GetIsHost_Parms, NULL );

	pFnGetIsHost->FunctionFlags |= 0x400;

	if ( IsHost )
		*IsHost = GetIsHost_Parms.IsHost;

	return GetIsHost_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.LastSavedMapMatch
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSaveLoadManager::LastSavedMapMatch ( )
{
	static UFunction* pFnLastSavedMapMatch = NULL;

	if ( ! pFnLastSavedMapMatch )
		pFnLastSavedMapMatch = (UFunction*) UObject::GObjObjects()->Data[ 49728 ];

	UPgSaveLoadManager_execLastSavedMapMatch_Parms LastSavedMapMatch_Parms;

	pFnLastSavedMapMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLastSavedMapMatch, &LastSavedMapMatch_Parms, NULL );

	pFnLastSavedMapMatch->FunctionFlags |= 0x400;

	return LastSavedMapMatch_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.HasValidPlayerData
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Controller                     ( CPF_Parm )

bool UPgSaveLoadManager::HasValidPlayerData ( class AController* Controller )
{
	static UFunction* pFnHasValidPlayerData = NULL;

	if ( ! pFnHasValidPlayerData )
		pFnHasValidPlayerData = (UFunction*) UObject::GObjObjects()->Data[ 49725 ];

	UPgSaveLoadManager_execHasValidPlayerData_Parms HasValidPlayerData_Parms;
	HasValidPlayerData_Parms.Controller = Controller;

	pFnHasValidPlayerData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasValidPlayerData, &HasValidPlayerData_Parms, NULL );

	pFnHasValidPlayerData->FunctionFlags |= 0x400;

	return HasValidPlayerData_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.MapMatch
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSaveLoadManager::MapMatch ( )
{
	static UFunction* pFnMapMatch = NULL;

	if ( ! pFnMapMatch )
		pFnMapMatch = (UFunction*) UObject::GObjObjects()->Data[ 49723 ];

	UPgSaveLoadManager_execMapMatch_Parms MapMatch_Parms;

	pFnMapMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMapMatch, &MapMatch_Parms, NULL );

	pFnMapMatch->FunctionFlags |= 0x400;

	return MapMatch_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.CheckSerialization
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::CheckSerialization ( )
{
	static UFunction* pFnCheckSerialization = NULL;

	if ( ! pFnCheckSerialization )
		pFnCheckSerialization = (UFunction*) UObject::GObjObjects()->Data[ 49722 ];

	UPgSaveLoadManager_execCheckSerialization_Parms CheckSerialization_Parms;

	pFnCheckSerialization->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckSerialization, &CheckSerialization_Parms, NULL );

	pFnCheckSerialization->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.DiskLoad
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::DiskLoad ( )
{
	static UFunction* pFnDiskLoad = NULL;

	if ( ! pFnDiskLoad )
		pFnDiskLoad = (UFunction*) UObject::GObjObjects()->Data[ 49721 ];

	UPgSaveLoadManager_execDiskLoad_Parms DiskLoad_Parms;

	pFnDiskLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDiskLoad, &DiskLoad_Parms, NULL );

	pFnDiskLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.ApplyPlayerData
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPawn*                 PlayerPawn                     ( CPF_Parm )
// unsigned long                  IsHost                         ( CPF_Parm )

void UPgSaveLoadManager::ApplyPlayerData ( class APgPawn* PlayerPawn, unsigned long IsHost )
{
	static UFunction* pFnApplyPlayerData = NULL;

	if ( ! pFnApplyPlayerData )
		pFnApplyPlayerData = (UFunction*) UObject::GObjObjects()->Data[ 49718 ];

	UPgSaveLoadManager_execApplyPlayerData_Parms ApplyPlayerData_Parms;
	ApplyPlayerData_Parms.PlayerPawn = PlayerPawn;
	ApplyPlayerData_Parms.IsHost = IsHost;

	pFnApplyPlayerData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyPlayerData, &ApplyPlayerData_Parms, NULL );

	pFnApplyPlayerData->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.DeleteActiveSaveSlot
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::DeleteActiveSaveSlot ( )
{
	static UFunction* pFnDeleteActiveSaveSlot = NULL;

	if ( ! pFnDeleteActiveSaveSlot )
		pFnDeleteActiveSaveSlot = (UFunction*) UObject::GObjObjects()->Data[ 49717 ];

	UPgSaveLoadManager_execDeleteActiveSaveSlot_Parms DeleteActiveSaveSlot_Parms;

	pFnDeleteActiveSaveSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeleteActiveSaveSlot, &DeleteActiveSaveSlot_Parms, NULL );

	pFnDeleteActiveSaveSlot->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.AllocateActiveSaveSlot
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::AllocateActiveSaveSlot ( )
{
	static UFunction* pFnAllocateActiveSaveSlot = NULL;

	if ( ! pFnAllocateActiveSaveSlot )
		pFnAllocateActiveSaveSlot = (UFunction*) UObject::GObjObjects()->Data[ 49716 ];

	UPgSaveLoadManager_execAllocateActiveSaveSlot_Parms AllocateActiveSaveSlot_Parms;

	pFnAllocateActiveSaveSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAllocateActiveSaveSlot, &AllocateActiveSaveSlot_Parms, NULL );

	pFnAllocateActiveSaveSlot->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.ResetStreamingVolumeStates
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::ResetStreamingVolumeStates ( )
{
	static UFunction* pFnResetStreamingVolumeStates = NULL;

	if ( ! pFnResetStreamingVolumeStates )
		pFnResetStreamingVolumeStates = (UFunction*) UObject::GObjObjects()->Data[ 49715 ];

	UPgSaveLoadManager_execResetStreamingVolumeStates_Parms ResetStreamingVolumeStates_Parms;

	pFnResetStreamingVolumeStates->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetStreamingVolumeStates, &ResetStreamingVolumeStates_Parms, NULL );

	pFnResetStreamingVolumeStates->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SetupPlayerStarts
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::SetupPlayerStarts ( )
{
	static UFunction* pFnSetupPlayerStarts = NULL;

	if ( ! pFnSetupPlayerStarts )
		pFnSetupPlayerStarts = (UFunction*) UObject::GObjObjects()->Data[ 49714 ];

	UPgSaveLoadManager_execSetupPlayerStarts_Parms SetupPlayerStarts_Parms;

	pFnSetupPlayerStarts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupPlayerStarts, &SetupPlayerStarts_Parms, NULL );

	pFnSetupPlayerStarts->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.RestoreLevelState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::RestoreLevelState ( )
{
	static UFunction* pFnRestoreLevelState = NULL;

	if ( ! pFnRestoreLevelState )
		pFnRestoreLevelState = (UFunction*) UObject::GObjObjects()->Data[ 49713 ];

	UPgSaveLoadManager_execRestoreLevelState_Parms RestoreLevelState_Parms;

	pFnRestoreLevelState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreLevelState, &RestoreLevelState_Parms, NULL );

	pFnRestoreLevelState->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SetFireEventsOnLoad
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  FireLoadEvents                 ( CPF_Parm )

void UPgSaveLoadManager::SetFireEventsOnLoad ( unsigned long FireLoadEvents )
{
	static UFunction* pFnSetFireEventsOnLoad = NULL;

	if ( ! pFnSetFireEventsOnLoad )
		pFnSetFireEventsOnLoad = (UFunction*) UObject::GObjObjects()->Data[ 49711 ];

	UPgSaveLoadManager_execSetFireEventsOnLoad_Parms SetFireEventsOnLoad_Parms;
	SetFireEventsOnLoad_Parms.FireLoadEvents = FireLoadEvents;

	pFnSetFireEventsOnLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFireEventsOnLoad, &SetFireEventsOnLoad_Parms, NULL );

	pFnSetFireEventsOnLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.FireLoadedEvents
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::FireLoadedEvents ( )
{
	static UFunction* pFnFireLoadedEvents = NULL;

	if ( ! pFnFireLoadedEvents )
		pFnFireLoadedEvents = (UFunction*) UObject::GObjObjects()->Data[ 49710 ];

	UPgSaveLoadManager_execFireLoadedEvents_Parms FireLoadedEvents_Parms;

	pFnFireLoadedEvents->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireLoadedEvents, &FireLoadedEvents_Parms, NULL );

	pFnFireLoadedEvents->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.LoadFromMemory
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::LoadFromMemory ( )
{
	static UFunction* pFnLoadFromMemory = NULL;

	if ( ! pFnLoadFromMemory )
		pFnLoadFromMemory = (UFunction*) UObject::GObjObjects()->Data[ 49709 ];

	UPgSaveLoadManager_execLoadFromMemory_Parms LoadFromMemory_Parms;

	pFnLoadFromMemory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadFromMemory, &LoadFromMemory_Parms, NULL );

	pFnLoadFromMemory->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.CopyDataFromPlayerController
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     PlayerController               ( CPF_Parm )

void UPgSaveLoadManager::CopyDataFromPlayerController ( class APgPlayerController* PlayerController )
{
	static UFunction* pFnCopyDataFromPlayerController = NULL;

	if ( ! pFnCopyDataFromPlayerController )
		pFnCopyDataFromPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 49707 ];

	UPgSaveLoadManager_execCopyDataFromPlayerController_Parms CopyDataFromPlayerController_Parms;
	CopyDataFromPlayerController_Parms.PlayerController = PlayerController;

	pFnCopyDataFromPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopyDataFromPlayerController, &CopyDataFromPlayerController_Parms, NULL );

	pFnCopyDataFromPlayerController->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.CopyDataToPlayerController
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     PlayerController               ( CPF_Parm )

void UPgSaveLoadManager::CopyDataToPlayerController ( class APgPlayerController* PlayerController )
{
	static UFunction* pFnCopyDataToPlayerController = NULL;

	if ( ! pFnCopyDataToPlayerController )
		pFnCopyDataToPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 49705 ];

	UPgSaveLoadManager_execCopyDataToPlayerController_Parms CopyDataToPlayerController_Parms;
	CopyDataToPlayerController_Parms.PlayerController = PlayerController;

	pFnCopyDataToPlayerController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopyDataToPlayerController, &CopyDataToPlayerController_Parms, NULL );

	pFnCopyDataToPlayerController->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SetupForNewPlaythrough
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::SetupForNewPlaythrough ( )
{
	static UFunction* pFnSetupForNewPlaythrough = NULL;

	if ( ! pFnSetupForNewPlaythrough )
		pFnSetupForNewPlaythrough = (UFunction*) UObject::GObjObjects()->Data[ 49704 ];

	UPgSaveLoadManager_execSetupForNewPlaythrough_Parms SetupForNewPlaythrough_Parms;

	pFnSetupForNewPlaythrough->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupForNewPlaythrough, &SetupForNewPlaythrough_Parms, NULL );

	pFnSetupForNewPlaythrough->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.TranslateChapterNumToMapName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            iChapterNum                    ( CPF_Parm )

struct FString UPgSaveLoadManager::TranslateChapterNumToMapName ( int iChapterNum )
{
	static UFunction* pFnTranslateChapterNumToMapName = NULL;

	if ( ! pFnTranslateChapterNumToMapName )
		pFnTranslateChapterNumToMapName = (UFunction*) UObject::GObjObjects()->Data[ 49701 ];

	UPgSaveLoadManager_execTranslateChapterNumToMapName_Parms TranslateChapterNumToMapName_Parms;
	TranslateChapterNumToMapName_Parms.iChapterNum = iChapterNum;

	pFnTranslateChapterNumToMapName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTranslateChapterNumToMapName, &TranslateChapterNumToMapName_Parms, NULL );

	pFnTranslateChapterNumToMapName->FunctionFlags |= 0x400;

	return TranslateChapterNumToMapName_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.TranslateMapNameToChapterNum
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )

int UPgSaveLoadManager::TranslateMapNameToChapterNum ( struct FString MapName )
{
	static UFunction* pFnTranslateMapNameToChapterNum = NULL;

	if ( ! pFnTranslateMapNameToChapterNum )
		pFnTranslateMapNameToChapterNum = (UFunction*) UObject::GObjObjects()->Data[ 49698 ];

	UPgSaveLoadManager_execTranslateMapNameToChapterNum_Parms TranslateMapNameToChapterNum_Parms;
	memcpy ( &TranslateMapNameToChapterNum_Parms.MapName, &MapName, 0xC );

	pFnTranslateMapNameToChapterNum->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTranslateMapNameToChapterNum, &TranslateMapNameToChapterNum_Parms, NULL );

	pFnTranslateMapNameToChapterNum->FunctionFlags |= 0x400;

	return TranslateMapNameToChapterNum_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.CommitStatToSaveDataByIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     PlayerController               ( CPF_Parm )
// int                            StatIndex                      ( CPF_Parm )

void UPgSaveLoadManager::CommitStatToSaveDataByIndex ( class APgPlayerController* PlayerController, int StatIndex )
{
	static UFunction* pFnCommitStatToSaveDataByIndex = NULL;

	if ( ! pFnCommitStatToSaveDataByIndex )
		pFnCommitStatToSaveDataByIndex = (UFunction*) UObject::GObjObjects()->Data[ 49695 ];

	UPgSaveLoadManager_execCommitStatToSaveDataByIndex_Parms CommitStatToSaveDataByIndex_Parms;
	CommitStatToSaveDataByIndex_Parms.PlayerController = PlayerController;
	CommitStatToSaveDataByIndex_Parms.StatIndex = StatIndex;

	pFnCommitStatToSaveDataByIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCommitStatToSaveDataByIndex, &CommitStatToSaveDataByIndex_Parms, NULL );

	pFnCommitStatToSaveDataByIndex->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.CommitStatToSaveData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     PlayerController               ( CPF_Parm )
// struct FName                   StatName                       ( CPF_Parm )

void UPgSaveLoadManager::CommitStatToSaveData ( class APgPlayerController* PlayerController, struct FName StatName )
{
	static UFunction* pFnCommitStatToSaveData = NULL;

	if ( ! pFnCommitStatToSaveData )
		pFnCommitStatToSaveData = (UFunction*) UObject::GObjObjects()->Data[ 49692 ];

	UPgSaveLoadManager_execCommitStatToSaveData_Parms CommitStatToSaveData_Parms;
	CommitStatToSaveData_Parms.PlayerController = PlayerController;
	memcpy ( &CommitStatToSaveData_Parms.StatName, &StatName, 0x8 );

	pFnCommitStatToSaveData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCommitStatToSaveData, &CommitStatToSaveData_Parms, NULL );

	pFnCommitStatToSaveData->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.PopulateHardBufferFromMemCard
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::PopulateHardBufferFromMemCard ( )
{
	static UFunction* pFnPopulateHardBufferFromMemCard = NULL;

	if ( ! pFnPopulateHardBufferFromMemCard )
		pFnPopulateHardBufferFromMemCard = (UFunction*) UObject::GObjObjects()->Data[ 49691 ];

	UPgSaveLoadManager_execPopulateHardBufferFromMemCard_Parms PopulateHardBufferFromMemCard_Parms;

	pFnPopulateHardBufferFromMemCard->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateHardBufferFromMemCard, &PopulateHardBufferFromMemCard_Parms, NULL );

	pFnPopulateHardBufferFromMemCard->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.HasValidHardBuffer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSaveLoadManager::HasValidHardBuffer ( )
{
	static UFunction* pFnHasValidHardBuffer = NULL;

	if ( ! pFnHasValidHardBuffer )
		pFnHasValidHardBuffer = (UFunction*) UObject::GObjObjects()->Data[ 49689 ];

	UPgSaveLoadManager_execHasValidHardBuffer_Parms HasValidHardBuffer_Parms;

	pFnHasValidHardBuffer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasValidHardBuffer, &HasValidHardBuffer_Parms, NULL );

	pFnHasValidHardBuffer->FunctionFlags |= 0x400;

	return HasValidHardBuffer_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.InitializeHardBuffer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::InitializeHardBuffer ( )
{
	static UFunction* pFnInitializeHardBuffer = NULL;

	if ( ! pFnInitializeHardBuffer )
		pFnInitializeHardBuffer = (UFunction*) UObject::GObjObjects()->Data[ 49688 ];

	UPgSaveLoadManager_execInitializeHardBuffer_Parms InitializeHardBuffer_Parms;

	pFnInitializeHardBuffer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitializeHardBuffer, &InitializeHardBuffer_Parms, NULL );

	pFnInitializeHardBuffer->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.CopySaveDataToHardBuffer
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::CopySaveDataToHardBuffer ( )
{
	static UFunction* pFnCopySaveDataToHardBuffer = NULL;

	if ( ! pFnCopySaveDataToHardBuffer )
		pFnCopySaveDataToHardBuffer = (UFunction*) UObject::GObjObjects()->Data[ 49687 ];

	UPgSaveLoadManager_execCopySaveDataToHardBuffer_Parms CopySaveDataToHardBuffer_Parms;

	pFnCopySaveDataToHardBuffer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopySaveDataToHardBuffer, &CopySaveDataToHardBuffer_Parms, NULL );

	pFnCopySaveDataToHardBuffer->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.CopyHardBufferToSaveData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::CopyHardBufferToSaveData ( )
{
	static UFunction* pFnCopyHardBufferToSaveData = NULL;

	if ( ! pFnCopyHardBufferToSaveData )
		pFnCopyHardBufferToSaveData = (UFunction*) UObject::GObjObjects()->Data[ 49686 ];

	UPgSaveLoadManager_execCopyHardBufferToSaveData_Parms CopyHardBufferToSaveData_Parms;

	pFnCopyHardBufferToSaveData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCopyHardBufferToSaveData, &CopyHardBufferToSaveData_Parms, NULL );

	pFnCopyHardBufferToSaveData->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.ResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 49685 ];

	UPgSaveLoadManager_execResetToDefaults_Parms ResetToDefaults_Parms;

	pFnResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );

	pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.RestoreToLastHardSave
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::RestoreToLastHardSave ( )
{
	static UFunction* pFnRestoreToLastHardSave = NULL;

	if ( ! pFnRestoreToLastHardSave )
		pFnRestoreToLastHardSave = (UFunction*) UObject::GObjObjects()->Data[ 49684 ];

	UPgSaveLoadManager_execRestoreToLastHardSave_Parms RestoreToLastHardSave_Parms;

	pFnRestoreToLastHardSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreToLastHardSave, &RestoreToLastHardSave_Parms, NULL );

	pFnRestoreToLastHardSave->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.EnableTrophies
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UPgSaveLoadManager::EnableTrophies ( unsigned long bEnable )
{
	static UFunction* pFnEnableTrophies = NULL;

	if ( ! pFnEnableTrophies )
		pFnEnableTrophies = (UFunction*) UObject::GObjObjects()->Data[ 49682 ];

	UPgSaveLoadManager_execEnableTrophies_Parms EnableTrophies_Parms;
	EnableTrophies_Parms.bEnable = bEnable;

	pFnEnableTrophies->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableTrophies, &EnableTrophies_Parms, NULL );

	pFnEnableTrophies->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.EnableSaveLoad
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UPgSaveLoadManager::EnableSaveLoad ( unsigned long bEnable )
{
	static UFunction* pFnEnableSaveLoad = NULL;

	if ( ! pFnEnableSaveLoad )
		pFnEnableSaveLoad = (UFunction*) UObject::GObjObjects()->Data[ 49680 ];

	UPgSaveLoadManager_execEnableSaveLoad_Parms EnableSaveLoad_Parms;
	EnableSaveLoad_Parms.bEnable = bEnable;

	pFnEnableSaveLoad->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEnableSaveLoad, &EnableSaveLoad_Parms, NULL );

	pFnEnableSaveLoad->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.DiskSave
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::DiskSave ( )
{
	static UFunction* pFnDiskSave = NULL;

	if ( ! pFnDiskSave )
		pFnDiskSave = (UFunction*) UObject::GObjObjects()->Data[ 49679 ];

	UPgSaveLoadManager_execDiskSave_Parms DiskSave_Parms;

	pFnDiskSave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDiskSave, &DiskSave_Parms, NULL );

	pFnDiskSave->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SavePlayerData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::SavePlayerData ( )
{
	static UFunction* pFnSavePlayerData = NULL;

	if ( ! pFnSavePlayerData )
		pFnSavePlayerData = (UFunction*) UObject::GObjObjects()->Data[ 49678 ];

	UPgSaveLoadManager_execSavePlayerData_Parms SavePlayerData_Parms;

	pFnSavePlayerData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSavePlayerData, &SavePlayerData_Parms, NULL );

	pFnSavePlayerData->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SaveToMemoryUserDataGlobalOnly
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::SaveToMemoryUserDataGlobalOnly ( )
{
	static UFunction* pFnSaveToMemoryUserDataGlobalOnly = NULL;

	if ( ! pFnSaveToMemoryUserDataGlobalOnly )
		pFnSaveToMemoryUserDataGlobalOnly = (UFunction*) UObject::GObjObjects()->Data[ 49677 ];

	UPgSaveLoadManager_execSaveToMemoryUserDataGlobalOnly_Parms SaveToMemoryUserDataGlobalOnly_Parms;

	pFnSaveToMemoryUserDataGlobalOnly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveToMemoryUserDataGlobalOnly, &SaveToMemoryUserDataGlobalOnly_Parms, NULL );

	pFnSaveToMemoryUserDataGlobalOnly->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SaveToMemory
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerStart*          Checkpoint                     ( CPF_Parm )

void UPgSaveLoadManager::SaveToMemory ( class APgPlayerStart* Checkpoint )
{
	static UFunction* pFnSaveToMemory = NULL;

	if ( ! pFnSaveToMemory )
		pFnSaveToMemory = (UFunction*) UObject::GObjObjects()->Data[ 49675 ];

	UPgSaveLoadManager_execSaveToMemory_Parms SaveToMemory_Parms;
	SaveToMemory_Parms.Checkpoint = Checkpoint;

	pFnSaveToMemory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveToMemory, &SaveToMemory_Parms, NULL );

	pFnSaveToMemory->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.RestartAllToLastCheckpoint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPgSaveLoadManager::RestartAllToLastCheckpoint ( )
{
	static UFunction* pFnRestartAllToLastCheckpoint = NULL;

	if ( ! pFnRestartAllToLastCheckpoint )
		pFnRestartAllToLastCheckpoint = (UFunction*) UObject::GObjObjects()->Data[ 49674 ];

	UPgSaveLoadManager_execRestartAllToLastCheckpoint_Parms RestartAllToLastCheckpoint_Parms;

	pFnRestartAllToLastCheckpoint->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestartAllToLastCheckpoint, &RestartAllToLastCheckpoint_Parms, NULL );

	pFnRestartAllToLastCheckpoint->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.SetMapName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )

void UPgSaveLoadManager::SetMapName ( struct FString MapName )
{
	static UFunction* pFnSetMapName = NULL;

	if ( ! pFnSetMapName )
		pFnSetMapName = (UFunction*) UObject::GObjObjects()->Data[ 49672 ];

	UPgSaveLoadManager_execSetMapName_Parms SetMapName_Parms;
	memcpy ( &SetMapName_Parms.MapName, &MapName, 0xC );

	pFnSetMapName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMapName, &SetMapName_Parms, NULL );

	pFnSetMapName->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.GetMapName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgSaveLoadManager::GetMapName ( )
{
	static UFunction* pFnGetMapName = NULL;

	if ( ! pFnGetMapName )
		pFnGetMapName = (UFunction*) UObject::GObjObjects()->Data[ 49670 ];

	UPgSaveLoadManager_execGetMapName_Parms GetMapName_Parms;

	pFnGetMapName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapName, &GetMapName_Parms, NULL );

	pFnGetMapName->FunctionFlags |= 0x400;

	return GetMapName_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.GetCheckpointName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgSaveLoadManager::GetCheckpointName ( )
{
	static UFunction* pFnGetCheckpointName = NULL;

	if ( ! pFnGetCheckpointName )
		pFnGetCheckpointName = (UFunction*) UObject::GObjObjects()->Data[ 49668 ];

	UPgSaveLoadManager_execGetCheckpointName_Parms GetCheckpointName_Parms;

	pFnGetCheckpointName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCheckpointName, &GetCheckpointName_Parms, NULL );

	pFnGetCheckpointName->FunctionFlags |= 0x400;

	return GetCheckpointName_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.HasValidCheckpointData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            iSlotNum                       ( CPF_Parm )

bool UPgSaveLoadManager::HasValidCheckpointData ( int iSlotNum )
{
	static UFunction* pFnHasValidCheckpointData = NULL;

	if ( ! pFnHasValidCheckpointData )
		pFnHasValidCheckpointData = (UFunction*) UObject::GObjObjects()->Data[ 49665 ];

	UPgSaveLoadManager_execHasValidCheckpointData_Parms HasValidCheckpointData_Parms;
	HasValidCheckpointData_Parms.iSlotNum = iSlotNum;

	pFnHasValidCheckpointData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasValidCheckpointData, &HasValidCheckpointData_Parms, NULL );

	pFnHasValidCheckpointData->FunctionFlags |= 0x400;

	return HasValidCheckpointData_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.LoadPlayerData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPawn*                 PlayerPawn                     ( CPF_Parm )

void UPgSaveLoadManager::LoadPlayerData ( class APgPawn* PlayerPawn )
{
	static UFunction* pFnLoadPlayerData = NULL;

	if ( ! pFnLoadPlayerData )
		pFnLoadPlayerData = (UFunction*) UObject::GObjObjects()->Data[ 49663 ];

	UPgSaveLoadManager_execLoadPlayerData_Parms LoadPlayerData_Parms;
	LoadPlayerData_Parms.PlayerPawn = PlayerPawn;

	pFnLoadPlayerData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadPlayerData, &LoadPlayerData_Parms, NULL );

	pFnLoadPlayerData->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.GetSpawnLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector UPgSaveLoadManager::GetSpawnLocation ( )
{
	static UFunction* pFnGetSpawnLocation = NULL;

	if ( ! pFnGetSpawnLocation )
		pFnGetSpawnLocation = (UFunction*) UObject::GObjObjects()->Data[ 49661 ];

	UPgSaveLoadManager_execGetSpawnLocation_Parms GetSpawnLocation_Parms;

	pFnGetSpawnLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSpawnLocation, &GetSpawnLocation_Parms, NULL );

	pFnGetSpawnLocation->FunctionFlags |= 0x400;

	return GetSpawnLocation_Parms.ReturnValue;
};

// Function GridGame.PgSaveLoadManager.SetActiveSlot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            iSlotNum                       ( CPF_Parm )

void UPgSaveLoadManager::SetActiveSlot ( int iSlotNum )
{
	static UFunction* pFnSetActiveSlot = NULL;

	if ( ! pFnSetActiveSlot )
		pFnSetActiveSlot = (UFunction*) UObject::GObjObjects()->Data[ 49659 ];

	UPgSaveLoadManager_execSetActiveSlot_Parms SetActiveSlot_Parms;
	SetActiveSlot_Parms.iSlotNum = iSlotNum;

	pFnSetActiveSlot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveSlot, &SetActiveSlot_Parms, NULL );

	pFnSetActiveSlot->FunctionFlags |= 0x400;
};

// Function GridGame.PgSaveLoadManager.GetInstance
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgSaveLoadManager*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgSaveLoadManager* UPgSaveLoadManager::GetInstance ( )
{
	static UFunction* pFnGetInstance = NULL;

	if ( ! pFnGetInstance )
		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 49657 ];

	UPgSaveLoadManager_execGetInstance_Parms GetInstance_Parms;

	pFnGetInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );

	pFnGetInstance->FunctionFlags |= 0x400;

	return GetInstance_Parms.ReturnValue;
};

// Function GridGame.PgScalarMaterialParamBlendInterface.SetScalarParam
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          currentBlend                   ( CPF_Parm )
// float                          baseBlend                      ( CPF_Parm )
// float                          desiredBlend                   ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )
// struct FName                   ParamName                      ( CPF_Parm )

void UPgScalarMaterialParamBlendInterface::SetScalarParam ( float currentBlend, float baseBlend, float desiredBlend, float BlendTime, struct FName ParamName )
{
	static UFunction* pFnSetScalarParam = NULL;

	if ( ! pFnSetScalarParam )
		pFnSetScalarParam = (UFunction*) UObject::GObjObjects()->Data[ 49743 ];

	UPgScalarMaterialParamBlendInterface_execSetScalarParam_Parms SetScalarParam_Parms;
	SetScalarParam_Parms.currentBlend = currentBlend;
	SetScalarParam_Parms.baseBlend = baseBlend;
	SetScalarParam_Parms.desiredBlend = desiredBlend;
	SetScalarParam_Parms.BlendTime = BlendTime;
	memcpy ( &SetScalarParam_Parms.ParamName, &ParamName, 0x8 );

	pFnSetScalarParam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetScalarParam, &SetScalarParam_Parms, NULL );

	pFnSetScalarParam->FunctionFlags |= 0x400;
};

// Function GridGame.PgScalarMaterialParamBlendInterface.GetScalarParameterBlendValue
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Param                          ( CPF_Parm )

float UPgScalarMaterialParamBlendInterface::GetScalarParameterBlendValue ( struct FName Param )
{
	static UFunction* pFnGetScalarParameterBlendValue = NULL;

	if ( ! pFnGetScalarParameterBlendValue )
		pFnGetScalarParameterBlendValue = (UFunction*) UObject::GObjObjects()->Data[ 49740 ];

	UPgScalarMaterialParamBlendInterface_execGetScalarParameterBlendValue_Parms GetScalarParameterBlendValue_Parms;
	memcpy ( &GetScalarParameterBlendValue_Parms.Param, &Param, 0x8 );

	pFnGetScalarParameterBlendValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetScalarParameterBlendValue, &GetScalarParameterBlendValue_Parms, NULL );

	pFnGetScalarParameterBlendValue->FunctionFlags |= 0x400;

	return GetScalarParameterBlendValue_Parms.ReturnValue;
};

// Function GridGame.PgScalarMaterialParamBlendInterface.TickMaterialParamBlend
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgScalarMaterialParamBlendInterface::TickMaterialParamBlend ( float DeltaTime )
{
	static UFunction* pFnTickMaterialParamBlend = NULL;

	if ( ! pFnTickMaterialParamBlend )
		pFnTickMaterialParamBlend = (UFunction*) UObject::GObjObjects()->Data[ 49738 ];

	UPgScalarMaterialParamBlendInterface_execTickMaterialParamBlend_Parms TickMaterialParamBlend_Parms;
	TickMaterialParamBlend_Parms.DeltaTime = DeltaTime;

	pFnTickMaterialParamBlend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickMaterialParamBlend, &TickMaterialParamBlend_Parms, NULL );

	pFnTickMaterialParamBlend->FunctionFlags |= 0x400;
};

// Function GridGame.PgSeqAct_DriveVehicle.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPgSeqAct_DriveVehicle::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 49869 ];

	UPgSeqAct_DriveVehicle_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function GridGame.PgSeqAct_DriveVehicle.Spawned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 newSpawn                       ( CPF_Parm )

void UPgSeqAct_DriveVehicle::Spawned ( class UObject* newSpawn )
{
	static UFunction* pFnSpawned = NULL;

	if ( ! pFnSpawned )
		pFnSpawned = (UFunction*) UObject::GObjObjects()->Data[ 49867 ];

	UPgSeqAct_DriveVehicle_execSpawned_Parms Spawned_Parms;
	Spawned_Parms.newSpawn = newSpawn;

	pFnSpawned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawned, &Spawned_Parms, NULL );

	pFnSpawned->FunctionFlags |= 0x400;
};

// Function GridGame.PgSeqEvent_ChapterPoint.Deactivated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPgSeqEvent_ChapterPoint::eventDeactivated ( )
{
	static UFunction* pFnDeactivated = NULL;

	if ( ! pFnDeactivated )
		pFnDeactivated = (UFunction*) UObject::GObjObjects()->Data[ 50058 ];

	UPgSeqEvent_ChapterPoint_eventDeactivated_Parms Deactivated_Parms;

	this->ProcessEvent ( pFnDeactivated, &Deactivated_Parms, NULL );
};

// Function GridGame.PgSeqEvent_ChapterPoint.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPgSeqEvent_ChapterPoint::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 50057 ];

	UPgSeqEvent_ChapterPoint_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function GridGame.PgSeqVar_HumanPlayer.GetObjectValue
// [0x00020002] 
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UObject* UPgSeqVar_HumanPlayer::GetObjectValue ( )
{
	static UFunction* pFnGetObjectValue = NULL;

	if ( ! pFnGetObjectValue )
		pFnGetObjectValue = (UFunction*) UObject::GObjObjects()->Data[ 50081 ];

	UPgSeqVar_HumanPlayer_execGetObjectValue_Parms GetObjectValue_Parms;

	this->ProcessEvent ( pFnGetObjectValue, &GetObjectValue_Parms, NULL );

	return GetObjectValue_Parms.ReturnValue;
};

// Function GridGame.PgSeqVar_HumanPlayer.UpdatePlayersList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgSeqVar_HumanPlayer::UpdatePlayersList ( )
{
	static UFunction* pFnUpdatePlayersList = NULL;

	if ( ! pFnUpdatePlayersList )
		pFnUpdatePlayersList = (UFunction*) UObject::GObjObjects()->Data[ 50080 ];

	UPgSeqVar_HumanPlayer_execUpdatePlayersList_Parms UpdatePlayersList_Parms;

	pFnUpdatePlayersList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePlayersList, &UpdatePlayersList_Parms, NULL );

	pFnUpdatePlayersList->FunctionFlags |= 0x400;
};

// Function GridGame.PgSeqVar_Team.GetObjectValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UObject*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UObject* UPgSeqVar_Team::GetObjectValue ( )
{
	static UFunction* pFnGetObjectValue = NULL;

	if ( ! pFnGetObjectValue )
		pFnGetObjectValue = (UFunction*) UObject::GObjObjects()->Data[ 50085 ];

	UPgSeqVar_Team_execGetObjectValue_Parms GetObjectValue_Parms;

	pFnGetObjectValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObjectValue, &GetObjectValue_Parms, NULL );

	pFnGetObjectValue->FunctionFlags |= 0x400;

	return GetObjectValue_Parms.ReturnValue;
};

// Function GridGame.PgTargetActor.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgTargetActor::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 50322 ];

	APgTargetActor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function GridGame.PgTargetActor.CanTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   targeter                       ( CPF_Parm )

bool APgTargetActor::CanTarget ( class APawn* targeter )
{
	static UFunction* pFnCanTarget = NULL;

	if ( ! pFnCanTarget )
		pFnCanTarget = (UFunction*) UObject::GObjObjects()->Data[ 50319 ];

	APgTargetActor_execCanTarget_Parms CanTarget_Parms;
	CanTarget_Parms.targeter = targeter;

	pFnCanTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanTarget, &CanTarget_Parms, NULL );

	pFnCanTarget->FunctionFlags |= 0x400;

	return CanTarget_Parms.ReturnValue;
};

// Function GridGame.PgTargetActor.GetMaxTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgTargetActor::GetMaxTargetableDist ( )
{
	static UFunction* pFnGetMaxTargetableDist = NULL;

	if ( ! pFnGetMaxTargetableDist )
		pFnGetMaxTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50317 ];

	APgTargetActor_execGetMaxTargetableDist_Parms GetMaxTargetableDist_Parms;

	pFnGetMaxTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxTargetableDist, &GetMaxTargetableDist_Parms, NULL );

	pFnGetMaxTargetableDist->FunctionFlags |= 0x400;

	return GetMaxTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgTargetActor.GetMinTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgTargetActor::GetMinTargetableDist ( )
{
	static UFunction* pFnGetMinTargetableDist = NULL;

	if ( ! pFnGetMinTargetableDist )
		pFnGetMinTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50315 ];

	APgTargetActor_execGetMinTargetableDist_Parms GetMinTargetableDist_Parms;

	pFnGetMinTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinTargetableDist, &GetMinTargetableDist_Parms, NULL );

	pFnGetMinTargetableDist->FunctionFlags |= 0x400;

	return GetMinTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgTargetActor.TriggerEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            ActivateIndex                  ( CPF_Parm )
// class AActor*                  changeCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgTargetActor::TriggerEvent ( int ActivateIndex, class AActor* changeCauser )
{
	static UFunction* pFnTriggerEvent = NULL;

	if ( ! pFnTriggerEvent )
		pFnTriggerEvent = (UFunction*) UObject::GObjObjects()->Data[ 50312 ];

	APgTargetActor_execTriggerEvent_Parms TriggerEvent_Parms;
	TriggerEvent_Parms.ActivateIndex = ActivateIndex;
	TriggerEvent_Parms.changeCauser = changeCauser;

	pFnTriggerEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTriggerEvent, &TriggerEvent_Parms, NULL );

	pFnTriggerEvent->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.PlayAudioTrans
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   fromState                      ( CPF_Parm )
// struct FName                   toState                        ( CPF_Parm )

void APgTargetActor::PlayAudioTrans ( struct FName fromState, struct FName toState )
{
	static UFunction* pFnPlayAudioTrans = NULL;

	if ( ! pFnPlayAudioTrans )
		pFnPlayAudioTrans = (UFunction*) UObject::GObjObjects()->Data[ 50309 ];

	APgTargetActor_execPlayAudioTrans_Parms PlayAudioTrans_Parms;
	memcpy ( &PlayAudioTrans_Parms.fromState, &fromState, 0x8 );
	memcpy ( &PlayAudioTrans_Parms.toState, &toState, 0x8 );

	pFnPlayAudioTrans->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAudioTrans, &PlayAudioTrans_Parms, NULL );

	pFnPlayAudioTrans->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.ReloadState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   State                          ( CPF_Parm )

void APgTargetActor::ReloadState ( struct FName State )
{
	static UFunction* pFnReloadState = NULL;

	if ( ! pFnReloadState )
		pFnReloadState = (UFunction*) UObject::GObjObjects()->Data[ 50307 ];

	APgTargetActor_execReloadState_Parms ReloadState_Parms;
	memcpy ( &ReloadState_Parms.State, &State, 0x8 );

	pFnReloadState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReloadState, &ReloadState_Parms, NULL );

	pFnReloadState->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.SetTargetActorState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   State                          ( CPF_Parm )
// unsigned long                  shouldPlayAudioTrans           ( CPF_Parm )
// class AActor*                  changeCauser                   ( CPF_Parm )
// unsigned long                  shouldFireEvent                ( CPF_Parm )

void APgTargetActor::SetTargetActorState ( struct FName State, unsigned long shouldPlayAudioTrans, class AActor* changeCauser, unsigned long shouldFireEvent )
{
	static UFunction* pFnSetTargetActorState = NULL;

	if ( ! pFnSetTargetActorState )
		pFnSetTargetActorState = (UFunction*) UObject::GObjObjects()->Data[ 50302 ];

	APgTargetActor_execSetTargetActorState_Parms SetTargetActorState_Parms;
	memcpy ( &SetTargetActorState_Parms.State, &State, 0x8 );
	SetTargetActorState_Parms.shouldPlayAudioTrans = shouldPlayAudioTrans;
	SetTargetActorState_Parms.changeCauser = changeCauser;
	SetTargetActorState_Parms.shouldFireEvent = shouldFireEvent;

	pFnSetTargetActorState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTargetActorState, &SetTargetActorState_Parms, NULL );

	pFnSetTargetActorState->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.ApplyState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  changeCauser                   ( CPF_Parm )
// unsigned long                  shouldFireEvent                ( CPF_Parm )

void APgTargetActor::ApplyState ( class AActor* changeCauser, unsigned long shouldFireEvent )
{
	static UFunction* pFnApplyState = NULL;

	if ( ! pFnApplyState )
		pFnApplyState = (UFunction*) UObject::GObjObjects()->Data[ 50299 ];

	APgTargetActor_execApplyState_Parms ApplyState_Parms;
	ApplyState_Parms.changeCauser = changeCauser;
	ApplyState_Parms.shouldFireEvent = shouldFireEvent;

	pFnApplyState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyState, &ApplyState_Parms, NULL );

	pFnApplyState->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.HandleStateChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  changeCauser                   ( CPF_Parm )
// unsigned long                  shouldFireEvent                ( CPF_Parm )

void APgTargetActor::HandleStateChange ( class AActor* changeCauser, unsigned long shouldFireEvent )
{
	static UFunction* pFnHandleStateChange = NULL;

	if ( ! pFnHandleStateChange )
		pFnHandleStateChange = (UFunction*) UObject::GObjObjects()->Data[ 50296 ];

	APgTargetActor_execHandleStateChange_Parms HandleStateChange_Parms;
	HandleStateChange_Parms.changeCauser = changeCauser;
	HandleStateChange_Parms.shouldFireEvent = shouldFireEvent;

	pFnHandleStateChange->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleStateChange, &HandleStateChange_Parms, NULL );

	pFnHandleStateChange->FunctionFlags |= 0x400;
};

// Function GridGame.PgTargetActor.HandleTakeDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  DamageCauser                   ( CPF_Parm )

void APgTargetActor::HandleTakeDamage ( class AActor* DamageCauser )
{
	static UFunction* pFnHandleTakeDamage = NULL;

	if ( ! pFnHandleTakeDamage )
		pFnHandleTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 50294 ];

	APgTargetActor_execHandleTakeDamage_Parms HandleTakeDamage_Parms;
	HandleTakeDamage_Parms.DamageCauser = DamageCauser;

	pFnHandleTakeDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleTakeDamage, &HandleTakeDamage_Parms, NULL );

	pFnHandleTakeDamage->FunctionFlags |= 0x400;
};

// Function GridGame.PgVolume._PlayerControllerSpawned
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AController*             NewController                  ( CPF_Parm )

void APgVolume::event_PlayerControllerSpawned ( class AController* NewController )
{
	static UFunction* pFn_PlayerControllerSpawned = NULL;

	if ( ! pFn_PlayerControllerSpawned )
		pFn_PlayerControllerSpawned = (UFunction*) UObject::GObjObjects()->Data[ 49749 ];

	APgVolume_event_PlayerControllerSpawned_Parms _PlayerControllerSpawned_Parms;
	_PlayerControllerSpawned_Parms.NewController = NewController;

	this->ProcessEvent ( pFn_PlayerControllerSpawned, &_PlayerControllerSpawned_Parms, NULL );
};

// Function GridGame.PgSceneCaptureEnablerVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void APgSceneCaptureEnablerVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 49778 ];

	APgSceneCaptureEnablerVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function GridGame.PgSceneCaptureEnablerVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void APgSceneCaptureEnablerVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 49773 ];

	APgSceneCaptureEnablerVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function GridGame.PgSceneCaptureEnablerVolume.UpdateSceneCapture
// [0x00820102] 
// Parameters infos:
// class AController*             UpdateCauser                   ( CPF_Parm )
// unsigned long                  Enable                         ( CPF_Parm )

void APgSceneCaptureEnablerVolume::UpdateSceneCapture ( class AController* UpdateCauser, unsigned long Enable )
{
	static UFunction* pFnUpdateSceneCapture = NULL;

	if ( ! pFnUpdateSceneCapture )
		pFnUpdateSceneCapture = (UFunction*) UObject::GObjObjects()->Data[ 49765 ];

	APgSceneCaptureEnablerVolume_execUpdateSceneCapture_Parms UpdateSceneCapture_Parms;
	UpdateSceneCapture_Parms.UpdateCauser = UpdateCauser;
	UpdateSceneCapture_Parms.Enable = Enable;

	this->ProcessEvent ( pFnUpdateSceneCapture, &UpdateSceneCapture_Parms, NULL );
};

// Function GridGame.PgSceneCaptureEnablerVolume._PlayerControllerSpawned
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             NewController                  ( CPF_Parm )

void APgSceneCaptureEnablerVolume::event_PlayerControllerSpawned ( class AController* NewController )
{
	static UFunction* pFn_PlayerControllerSpawned = NULL;

	if ( ! pFn_PlayerControllerSpawned )
		pFn_PlayerControllerSpawned = (UFunction*) UObject::GObjObjects()->Data[ 49763 ];

	APgSceneCaptureEnablerVolume_event_PlayerControllerSpawned_Parms _PlayerControllerSpawned_Parms;
	_PlayerControllerSpawned_Parms.NewController = NewController;

	this->ProcessEvent ( pFn_PlayerControllerSpawned, &_PlayerControllerSpawned_Parms, NULL );
};

// Function GridGame.PgSceneCaptureEnablerVolume.PopulateTouchingActors
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APgSceneCaptureEnablerVolume::PopulateTouchingActors ( )
{
	static UFunction* pFnPopulateTouchingActors = NULL;

	if ( ! pFnPopulateTouchingActors )
		pFnPopulateTouchingActors = (UFunction*) UObject::GObjObjects()->Data[ 49762 ];

	APgSceneCaptureEnablerVolume_execPopulateTouchingActors_Parms PopulateTouchingActors_Parms;

	pFnPopulateTouchingActors->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPopulateTouchingActors, &PopulateTouchingActors_Parms, NULL );

	pFnPopulateTouchingActors->FunctionFlags |= 0x400;
};

// Function GridGame.PgCubicSpline.Evaluate
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          X                              ( CPF_Const | CPF_Parm )

float UPgCubicSpline::Evaluate ( float X )
{
	static UFunction* pFnEvaluate = NULL;

	if ( ! pFnEvaluate )
		pFnEvaluate = (UFunction*) UObject::GObjObjects()->Data[ 43511 ];

	UPgCubicSpline_execEvaluate_Parms Evaluate_Parms;
	Evaluate_Parms.X = X;

	pFnEvaluate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEvaluate, &Evaluate_Parms, NULL );

	pFnEvaluate->FunctionFlags |= 0x400;

	return Evaluate_Parms.ReturnValue;
};

// Function GridGame.PgForceFeedbackComponent.StopForceFeedbackWaveform
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PlayerController               ( CPF_Parm )
// class UForceFeedbackWaveform*  WaveformToMatch                ( CPF_OptionalParm | CPF_Parm )

void UPgForceFeedbackComponent::eventStopForceFeedbackWaveform ( class APlayerController* PlayerController, class UForceFeedbackWaveform* WaveformToMatch )
{
	static UFunction* pFnStopForceFeedbackWaveform = NULL;

	if ( ! pFnStopForceFeedbackWaveform )
		pFnStopForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 46643 ];

	UPgForceFeedbackComponent_eventStopForceFeedbackWaveform_Parms StopForceFeedbackWaveform_Parms;
	StopForceFeedbackWaveform_Parms.PlayerController = PlayerController;
	StopForceFeedbackWaveform_Parms.WaveformToMatch = WaveformToMatch;

	this->ProcessEvent ( pFnStopForceFeedbackWaveform, &StopForceFeedbackWaveform_Parms, NULL );
};

// Function GridGame.PgForceFeedbackComponent.SetRumbleScale
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PlayerController               ( CPF_Parm )
// float                          scaleAmount                    ( CPF_Parm )

void UPgForceFeedbackComponent::eventSetRumbleScale ( class APlayerController* PlayerController, float scaleAmount )
{
	static UFunction* pFnSetRumbleScale = NULL;

	if ( ! pFnSetRumbleScale )
		pFnSetRumbleScale = (UFunction*) UObject::GObjObjects()->Data[ 46640 ];

	UPgForceFeedbackComponent_eventSetRumbleScale_Parms SetRumbleScale_Parms;
	SetRumbleScale_Parms.PlayerController = PlayerController;
	SetRumbleScale_Parms.scaleAmount = scaleAmount;

	this->ProcessEvent ( pFnSetRumbleScale, &SetRumbleScale_Parms, NULL );
};

// Function GridGame.PgForceFeedbackComponent.PlayForceFeedbackWaveform
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PlayerController               ( CPF_Parm )
// class UForceFeedbackWaveform*  WaveForm                       ( CPF_Const | CPF_Parm )
// float                          scaleAmount                    ( CPF_OptionalParm | CPF_Parm )

void UPgForceFeedbackComponent::eventPlayForceFeedbackWaveform ( class APlayerController* PlayerController, class UForceFeedbackWaveform* WaveForm, float scaleAmount )
{
	static UFunction* pFnPlayForceFeedbackWaveform = NULL;

	if ( ! pFnPlayForceFeedbackWaveform )
		pFnPlayForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 46636 ];

	UPgForceFeedbackComponent_eventPlayForceFeedbackWaveform_Parms PlayForceFeedbackWaveform_Parms;
	PlayForceFeedbackWaveform_Parms.PlayerController = PlayerController;
	PlayForceFeedbackWaveform_Parms.WaveForm = WaveForm;
	PlayForceFeedbackWaveform_Parms.scaleAmount = scaleAmount;

	this->ProcessEvent ( pFnPlayForceFeedbackWaveform, &PlayForceFeedbackWaveform_Parms, NULL );
};

// Function GridGame.PgSmartObject.TriggerUsedEvent
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  User                           ( CPF_Parm )
// unsigned long                  unused                         ( CPF_OptionalParm | CPF_Parm )

void APgSmartObject::eventTriggerUsedEvent ( class AActor* User, unsigned long unused )
{
	static UFunction* pFnTriggerUsedEvent = NULL;

	if ( ! pFnTriggerUsedEvent )
		pFnTriggerUsedEvent = (UFunction*) UObject::GObjObjects()->Data[ 50184 ];

	APgSmartObject_eventTriggerUsedEvent_Parms TriggerUsedEvent_Parms;
	TriggerUsedEvent_Parms.User = User;
	TriggerUsedEvent_Parms.unused = unused;

	this->ProcessEvent ( pFnTriggerUsedEvent, &TriggerUsedEvent_Parms, NULL );
};

// Function GridGame.PgSmartObject.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void APgSmartObject::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 50181 ];

	APgSmartObject_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function GridGame.PgSmartObject.CanTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   targeter                       ( CPF_Parm )

bool APgSmartObject::CanTarget ( class APawn* targeter )
{
	static UFunction* pFnCanTarget = NULL;

	if ( ! pFnCanTarget )
		pFnCanTarget = (UFunction*) UObject::GObjObjects()->Data[ 50178 ];

	APgSmartObject_execCanTarget_Parms CanTarget_Parms;
	CanTarget_Parms.targeter = targeter;

	pFnCanTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanTarget, &CanTarget_Parms, NULL );

	pFnCanTarget->FunctionFlags |= 0x400;

	return CanTarget_Parms.ReturnValue;
};

// Function GridGame.PgSmartObject.GetMaxTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgSmartObject::GetMaxTargetableDist ( )
{
	static UFunction* pFnGetMaxTargetableDist = NULL;

	if ( ! pFnGetMaxTargetableDist )
		pFnGetMaxTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50176 ];

	APgSmartObject_execGetMaxTargetableDist_Parms GetMaxTargetableDist_Parms;

	pFnGetMaxTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMaxTargetableDist, &GetMaxTargetableDist_Parms, NULL );

	pFnGetMaxTargetableDist->FunctionFlags |= 0x400;

	return GetMaxTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgSmartObject.GetMinTargetableDist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float APgSmartObject::GetMinTargetableDist ( )
{
	static UFunction* pFnGetMinTargetableDist = NULL;

	if ( ! pFnGetMinTargetableDist )
		pFnGetMinTargetableDist = (UFunction*) UObject::GObjObjects()->Data[ 50174 ];

	APgSmartObject_execGetMinTargetableDist_Parms GetMinTargetableDist_Parms;

	pFnGetMinTargetableDist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMinTargetableDist, &GetMinTargetableDist_Parms, NULL );

	pFnGetMinTargetableDist->FunctionFlags |= 0x400;

	return GetMinTargetableDist_Parms.ReturnValue;
};

// Function GridGame.PgSmartObject.TryAndUseSmartObject
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  User                           ( CPF_Parm )
// unsigned long                  pressed                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   ButtonName                     ( CPF_OptionalParm | CPF_Parm )

bool APgSmartObject::TryAndUseSmartObject ( class AActor* User, unsigned long pressed, struct FName ButtonName )
{
	static UFunction* pFnTryAndUseSmartObject = NULL;

	if ( ! pFnTryAndUseSmartObject )
		pFnTryAndUseSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 50169 ];

	APgSmartObject_execTryAndUseSmartObject_Parms TryAndUseSmartObject_Parms;
	TryAndUseSmartObject_Parms.User = User;
	TryAndUseSmartObject_Parms.pressed = pressed;
	memcpy ( &TryAndUseSmartObject_Parms.ButtonName, &ButtonName, 0x8 );

	pFnTryAndUseSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTryAndUseSmartObject, &TryAndUseSmartObject_Parms, NULL );

	pFnTryAndUseSmartObject->FunctionFlags |= 0x400;

	return TryAndUseSmartObject_Parms.ReturnValue;
};

// Function GridGame.PgSmartObject.CanUseSmartObject
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  User                           ( CPF_Parm )
// unsigned long                  pressed                        ( CPF_OptionalParm | CPF_Parm )
// struct FName                   ButtonName                     ( CPF_OptionalParm | CPF_Parm )
// int                            useInfoIndex                   ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool APgSmartObject::CanUseSmartObject ( class AActor* User, unsigned long pressed, struct FName ButtonName, int* useInfoIndex )
{
	static UFunction* pFnCanUseSmartObject = NULL;

	if ( ! pFnCanUseSmartObject )
		pFnCanUseSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 50163 ];

	APgSmartObject_execCanUseSmartObject_Parms CanUseSmartObject_Parms;
	CanUseSmartObject_Parms.User = User;
	CanUseSmartObject_Parms.pressed = pressed;
	memcpy ( &CanUseSmartObject_Parms.ButtonName, &ButtonName, 0x8 );

	pFnCanUseSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseSmartObject, &CanUseSmartObject_Parms, NULL );

	pFnCanUseSmartObject->FunctionFlags |= 0x400;

	if ( useInfoIndex )
		*useInfoIndex = CanUseSmartObject_Parms.useInfoIndex;

	return CanUseSmartObject_Parms.ReturnValue;
};

// Function GridGame.PgSmartObject.CanPathThroughSmartObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

bool APgSmartObject::CanPathThroughSmartObject ( class APawn* Pawn )
{
	static UFunction* pFnCanPathThroughSmartObject = NULL;

	if ( ! pFnCanPathThroughSmartObject )
		pFnCanPathThroughSmartObject = (UFunction*) UObject::GObjObjects()->Data[ 50160 ];

	APgSmartObject_execCanPathThroughSmartObject_Parms CanPathThroughSmartObject_Parms;
	CanPathThroughSmartObject_Parms.Pawn = Pawn;

	pFnCanPathThroughSmartObject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanPathThroughSmartObject, &CanPathThroughSmartObject_Parms, NULL );

	pFnCanPathThroughSmartObject->FunctionFlags |= 0x400;

	return CanPathThroughSmartObject_Parms.ReturnValue;
};

// Function GridGame.PgFireController.IsFriendly
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool UPgFireController::IsFriendly ( class AActor* Target )
{
	static UFunction* pFnIsFriendly = NULL;

	if ( ! pFnIsFriendly )
		pFnIsFriendly = (UFunction*) UObject::GObjObjects()->Data[ 46614 ];

	UPgFireController_execIsFriendly_Parms IsFriendly_Parms;
	IsFriendly_Parms.Target = Target;

	pFnIsFriendly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFriendly, &IsFriendly_Parms, NULL );

	pFnIsFriendly->FunctionFlags |= 0x400;

	return IsFriendly_Parms.ReturnValue;
};

// Function GridGame.PgFireController.GetFireControlState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgFireController::GetFireControlState ( )
{
	static UFunction* pFnGetFireControlState = NULL;

	if ( ! pFnGetFireControlState )
		pFnGetFireControlState = (UFunction*) UObject::GObjObjects()->Data[ 46612 ];

	UPgFireController_execGetFireControlState_Parms GetFireControlState_Parms;

	pFnGetFireControlState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFireControlState, &GetFireControlState_Parms, NULL );

	pFnGetFireControlState->FunctionFlags |= 0x400;

	return GetFireControlState_Parms.ReturnValue;
};

// Function GridGame.PgFireController.TargetNotVisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UPgFireController::TargetNotVisible ( class AActor* Target )
{
	static UFunction* pFnTargetNotVisible = NULL;

	if ( ! pFnTargetNotVisible )
		pFnTargetNotVisible = (UFunction*) UObject::GObjObjects()->Data[ 46610 ];

	UPgFireController_execTargetNotVisible_Parms TargetNotVisible_Parms;
	TargetNotVisible_Parms.Target = Target;

	pFnTargetNotVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTargetNotVisible, &TargetNotVisible_Parms, NULL );

	pFnTargetNotVisible->FunctionFlags |= 0x400;
};

// Function GridGame.PgFireController.SeeTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UPgFireController::SeeTarget ( class AActor* Target )
{
	static UFunction* pFnSeeTarget = NULL;

	if ( ! pFnSeeTarget )
		pFnSeeTarget = (UFunction*) UObject::GObjObjects()->Data[ 46608 ];

	UPgFireController_execSeeTarget_Parms SeeTarget_Parms;
	SeeTarget_Parms.Target = Target;

	pFnSeeTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSeeTarget, &SeeTarget_Parms, NULL );

	pFnSeeTarget->FunctionFlags |= 0x400;
};

// Function GridGame.PgFireController.DisplayDebug
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgFireController::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 46604 ];

	UPgFireController_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgFireControllerAI.IsFriendly
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool UPgFireControllerAI::IsFriendly ( class AActor* Target )
{
	static UFunction* pFnIsFriendly = NULL;

	if ( ! pFnIsFriendly )
		pFnIsFriendly = (UFunction*) UObject::GObjObjects()->Data[ 46631 ];

	UPgFireControllerAI_execIsFriendly_Parms IsFriendly_Parms;
	IsFriendly_Parms.Target = Target;

	pFnIsFriendly->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFriendly, &IsFriendly_Parms, NULL );

	pFnIsFriendly->FunctionFlags |= 0x400;

	return IsFriendly_Parms.ReturnValue;
};

// Function GridGame.PgFireControllerAI.GetFireControlState
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgFireControllerAI::GetFireControlState ( )
{
	static UFunction* pFnGetFireControlState = NULL;

	if ( ! pFnGetFireControlState )
		pFnGetFireControlState = (UFunction*) UObject::GObjObjects()->Data[ 46629 ];

	UPgFireControllerAI_execGetFireControlState_Parms GetFireControlState_Parms;

	pFnGetFireControlState->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFireControlState, &GetFireControlState_Parms, NULL );

	pFnGetFireControlState->FunctionFlags |= 0x400;

	return GetFireControlState_Parms.ReturnValue;
};

// Function GridGame.PgTargetMarker.DisplayDebug
// [0x00420500] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgTargetMarker::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 50339 ];

	APgTargetMarker_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgInterface.SetCompleteGame
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgInterface::SetCompleteGame ( )
{
	static UFunction* pFnSetCompleteGame = NULL;

	if ( ! pFnSetCompleteGame )
		pFnSetCompleteGame = (UFunction*) UObject::GObjObjects()->Data[ 47049 ];

	UPgInterface_execSetCompleteGame_Parms SetCompleteGame_Parms;

	pFnSetCompleteGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetCompleteGame, &SetCompleteGame_Parms, NULL );

	pFnSetCompleteGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterface.ChangeLanguage
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 Language                       ( CPF_Parm | CPF_NeedCtorLink )

void UPgInterface::ChangeLanguage ( struct FString Language )
{
	static UFunction* pFnChangeLanguage = NULL;

	if ( ! pFnChangeLanguage )
		pFnChangeLanguage = (UFunction*) UObject::GObjObjects()->Data[ 47047 ];

	UPgInterface_execChangeLanguage_Parms ChangeLanguage_Parms;
	memcpy ( &ChangeLanguage_Parms.Language, &Language, 0xC );

	pFnChangeLanguage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeLanguage, &ChangeLanguage_Parms, NULL );

	pFnChangeLanguage->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterface.ShowDebugMenu
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UPgInterface::ShowDebugMenu ( )
{
	static UFunction* pFnShowDebugMenu = NULL;

	if ( ! pFnShowDebugMenu )
		pFnShowDebugMenu = (UFunction*) UObject::GObjObjects()->Data[ 47046 ];

	UPgInterface_execShowDebugMenu_Parms ShowDebugMenu_Parms;

	pFnShowDebugMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowDebugMenu, &ShowDebugMenu_Parms, NULL );

	pFnShowDebugMenu->FunctionFlags |= 0x400;
};

// Function GridGame.PgInterface.ScreenProject
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 InVector                       ( CPF_Parm )
// struct FVector2D               OutVector                      ( CPF_Parm | CPF_OutParm )

void UPgInterface::ScreenProject ( struct FVector InVector, struct FVector2D* OutVector )
{
	static UFunction* pFnScreenProject = NULL;

	if ( ! pFnScreenProject )
		pFnScreenProject = (UFunction*) UObject::GObjObjects()->Data[ 47043 ];

	UPgInterface_execScreenProject_Parms ScreenProject_Parms;
	memcpy ( &ScreenProject_Parms.InVector, &InVector, 0xC );

	pFnScreenProject->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnScreenProject, &ScreenProject_Parms, NULL );

	pFnScreenProject->FunctionFlags |= 0x400;

	if ( OutVector )
		memcpy ( OutVector, &ScreenProject_Parms.OutVector, 0x8 );
};

// Function GridGame.PgInterface.GetInstance
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// class UPgInterface*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgInterface* UPgInterface::GetInstance ( )
{
	static UFunction* pFnGetInstance = NULL;

	if ( ! pFnGetInstance )
		pFnGetInstance = (UFunction*) UObject::GObjObjects()->Data[ 47041 ];

	UPgInterface_execGetInstance_Parms GetInstance_Parms;

	pFnGetInstance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetInstance, &GetInstance_Parms, NULL );

	pFnGetInstance->FunctionFlags |= 0x400;

	return GetInstance_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_ArjiaCityHud.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSeqAct_ArjiaCityHud::eventIsValidLevelSequenceObject ( )
{
	static UFunction* pFnIsValidLevelSequenceObject = NULL;

	if ( ! pFnIsValidLevelSequenceObject )
		pFnIsValidLevelSequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 49791 ];

	UPgSeqAct_ArjiaCityHud_eventIsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;

	this->ProcessEvent ( pFnIsValidLevelSequenceObject, &IsValidLevelSequenceObject_Parms, NULL );

	return IsValidLevelSequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_HudBar.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSeqAct_HudBar::eventIsValidLevelSequenceObject ( )
{
	static UFunction* pFnIsValidLevelSequenceObject = NULL;

	if ( ! pFnIsValidLevelSequenceObject )
		pFnIsValidLevelSequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 49903 ];

	UPgSeqAct_HudBar_eventIsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;

	this->ProcessEvent ( pFnIsValidLevelSequenceObject, &IsValidLevelSequenceObject_Parms, NULL );

	return IsValidLevelSequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_HudText.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSeqAct_HudText::eventIsValidLevelSequenceObject ( )
{
	static UFunction* pFnIsValidLevelSequenceObject = NULL;

	if ( ! pFnIsValidLevelSequenceObject )
		pFnIsValidLevelSequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 49913 ];

	UPgSeqAct_HudText_eventIsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;

	this->ProcessEvent ( pFnIsValidLevelSequenceObject, &IsValidLevelSequenceObject_Parms, NULL );

	return IsValidLevelSequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_PlayFmv.Deactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgSeqAct_PlayFmv::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 49965 ];

	UPgSeqAct_PlayFmv_execDeactivate_Parms Deactivate_Parms;

	pFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );

	pFnDeactivate->FunctionFlags |= 0x400;
};

// Function GridGame.PgSeqAct_PlayFmv.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSeqAct_PlayFmv::eventIsValidLevelSequenceObject ( )
{
	static UFunction* pFnIsValidLevelSequenceObject = NULL;

	if ( ! pFnIsValidLevelSequenceObject )
		pFnIsValidLevelSequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 49963 ];

	UPgSeqAct_PlayFmv_eventIsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;

	this->ProcessEvent ( pFnIsValidLevelSequenceObject, &IsValidLevelSequenceObject_Parms, NULL );

	return IsValidLevelSequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgFracturedStaticMeshActor.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void APgFracturedStaticMeshActor::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 46654 ];

	APgFracturedStaticMeshActor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function GridGame.PgFracturedStaticMeshActor.AreAllChunksDead
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgFracturedStaticMeshActor::AreAllChunksDead ( )
{
	static UFunction* pFnAreAllChunksDead = NULL;

	if ( ! pFnAreAllChunksDead )
		pFnAreAllChunksDead = (UFunction*) UObject::GObjObjects()->Data[ 46650 ];

	APgFracturedStaticMeshActor_execAreAllChunksDead_Parms AreAllChunksDead_Parms;

	this->ProcessEvent ( pFnAreAllChunksDead, &AreAllChunksDead_Parms, NULL );

	return AreAllChunksDead_Parms.ReturnValue;
};

// Function GridGame.PgGFxGameViewportClient.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgGFxGameViewportClient::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46871 ];

	UPgGFxGameViewportClient_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function GridGame.PgGFxGameViewportClient.ExitToFE
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgGFxGameViewportClient::ExitToFE ( )
{
	static UFunction* pFnExitToFE = NULL;

	if ( ! pFnExitToFE )
		pFnExitToFE = (UFunction*) UObject::GObjObjects()->Data[ 46870 ];

	UPgGFxGameViewportClient_execExitToFE_Parms ExitToFE_Parms;

	pFnExitToFE->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitToFE, &ExitToFE_Parms, NULL );

	pFnExitToFE->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.ExitGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgGFxGameViewportClient::ExitGame ( )
{
	static UFunction* pFnExitGame = NULL;

	if ( ! pFnExitGame )
		pFnExitGame = (UFunction*) UObject::GObjObjects()->Data[ 46869 ];

	UPgGFxGameViewportClient_execExitGame_Parms ExitGame_Parms;

	pFnExitGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnExitGame, &ExitGame_Parms, NULL );

	pFnExitGame->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.ProcessConnectionError
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgGFxGameViewportClient::ProcessConnectionError ( )
{
	static UFunction* pFnProcessConnectionError = NULL;

	if ( ! pFnProcessConnectionError )
		pFnProcessConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 46868 ];

	UPgGFxGameViewportClient_execProcessConnectionError_Parms ProcessConnectionError_Parms;

	pFnProcessConnectionError->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessConnectionError, &ProcessConnectionError_Parms, NULL );

	pFnProcessConnectionError->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.UpdateError
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgGFxGameViewportClient::UpdateError ( float DeltaTime )
{
	static UFunction* pFnUpdateError = NULL;

	if ( ! pFnUpdateError )
		pFnUpdateError = (UFunction*) UObject::GObjObjects()->Data[ 46866 ];

	UPgGFxGameViewportClient_execUpdateError_Parms UpdateError_Parms;
	UpdateError_Parms.DeltaTime = DeltaTime;

	pFnUpdateError->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateError, &UpdateError_Parms, NULL );

	pFnUpdateError->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.HandleConnectionError
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgGFxGameViewportClient::HandleConnectionError ( )
{
	static UFunction* pFnHandleConnectionError = NULL;

	if ( ! pFnHandleConnectionError )
		pFnHandleConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 46865 ];

	UPgGFxGameViewportClient_execHandleConnectionError_Parms HandleConnectionError_Parms;

	pFnHandleConnectionError->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHandleConnectionError, &HandleConnectionError_Parms, NULL );

	pFnHandleConnectionError->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.PgGFxGameViewportClient_DestroyOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgGFxGameViewportClient::PgGFxGameViewportClient_DestroyOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgGFxGameViewportClient_DestroyOnlineGameComplete = NULL;

	if ( ! pFnPgGFxGameViewportClient_DestroyOnlineGameComplete )
		pFnPgGFxGameViewportClient_DestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 46862 ];

	UPgGFxGameViewportClient_execPgGFxGameViewportClient_DestroyOnlineGameComplete_Parms PgGFxGameViewportClient_DestroyOnlineGameComplete_Parms;
	memcpy ( &PgGFxGameViewportClient_DestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgGFxGameViewportClient_DestroyOnlineGameComplete_Parms.successful = successful;

	pFnPgGFxGameViewportClient_DestroyOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgGFxGameViewportClient_DestroyOnlineGameComplete, &PgGFxGameViewportClient_DestroyOnlineGameComplete_Parms, NULL );

	pFnPgGFxGameViewportClient_DestroyOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.PgGFxGameViewportClient_EndOnlineGameComplete
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  successful                     ( CPF_Parm )

void UPgGFxGameViewportClient::PgGFxGameViewportClient_EndOnlineGameComplete ( struct FName SessionName, unsigned long successful )
{
	static UFunction* pFnPgGFxGameViewportClient_EndOnlineGameComplete = NULL;

	if ( ! pFnPgGFxGameViewportClient_EndOnlineGameComplete )
		pFnPgGFxGameViewportClient_EndOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 46859 ];

	UPgGFxGameViewportClient_execPgGFxGameViewportClient_EndOnlineGameComplete_Parms PgGFxGameViewportClient_EndOnlineGameComplete_Parms;
	memcpy ( &PgGFxGameViewportClient_EndOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	PgGFxGameViewportClient_EndOnlineGameComplete_Parms.successful = successful;

	pFnPgGFxGameViewportClient_EndOnlineGameComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPgGFxGameViewportClient_EndOnlineGameComplete, &PgGFxGameViewportClient_EndOnlineGameComplete_Parms, NULL );

	pFnPgGFxGameViewportClient_EndOnlineGameComplete->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient.NotifyConnectionError
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// struct FString                 msg                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UPgGFxGameViewportClient::eventNotifyConnectionError ( struct FString msg, struct FString Title )
{
	static UFunction* pFnNotifyConnectionError = NULL;

	if ( ! pFnNotifyConnectionError )
		pFnNotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 46856 ];

	UPgGFxGameViewportClient_eventNotifyConnectionError_Parms NotifyConnectionError_Parms;
	memcpy ( &NotifyConnectionError_Parms.msg, &msg, 0xC );
	memcpy ( &NotifyConnectionError_Parms.Title, &Title, 0xC );

	pFnNotifyConnectionError->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyConnectionError, &NotifyConnectionError_Parms, NULL );

	pFnNotifyConnectionError->FunctionFlags |= 0x400;
};

// Function GridGame.PgGFxGameViewportClient._Init
// [0x00440803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 OutError                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgGFxGameViewportClient::event_Init ( struct FString* OutError )
{
	static UFunction* pFn_Init = NULL;

	if ( ! pFn_Init )
		pFn_Init = (UFunction*) UObject::GObjObjects()->Data[ 46853 ];

	UPgGFxGameViewportClient_event_Init_Parms _Init_Parms;

	this->ProcessEvent ( pFn_Init, &_Init_Parms, NULL );

	if ( OutError )
		memcpy ( OutError, &_Init_Parms.OutError, 0xC );

	return _Init_Parms.ReturnValue;
};

// Function GridGame.PgGFxGameViewportClient.DrawTransitionMessage
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UPgGFxGameViewportClient::DrawTransitionMessage ( class UCanvas* Canvas, struct FString Message )
{
	static UFunction* pFnDrawTransitionMessage = NULL;

	if ( ! pFnDrawTransitionMessage )
		pFnDrawTransitionMessage = (UFunction*) UObject::GObjObjects()->Data[ 46850 ];

	UPgGFxGameViewportClient_execDrawTransitionMessage_Parms DrawTransitionMessage_Parms;
	DrawTransitionMessage_Parms.Canvas = Canvas;
	memcpy ( &DrawTransitionMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnDrawTransitionMessage, &DrawTransitionMessage_Parms, NULL );
};

// Function GridGame.PgGFxGameViewportClient.DisplayProgressMessage
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UPgGFxGameViewportClient::DisplayProgressMessage ( class UCanvas* Canvas )
{
	static UFunction* pFnDisplayProgressMessage = NULL;

	if ( ! pFnDisplayProgressMessage )
		pFnDisplayProgressMessage = (UFunction*) UObject::GObjObjects()->Data[ 46848 ];

	UPgGFxGameViewportClient_execDisplayProgressMessage_Parms DisplayProgressMessage_Parms;
	DisplayProgressMessage_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnDisplayProgressMessage, &DisplayProgressMessage_Parms, NULL );
};

// Function GridGame.PgGFxGameViewportClient._NotifyConnectionError
// [0x00044803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 msg                            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UPgGFxGameViewportClient::event_NotifyConnectionError ( struct FString msg, struct FString Title )
{
	static UFunction* pFn_NotifyConnectionError = NULL;

	if ( ! pFn_NotifyConnectionError )
		pFn_NotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 46845 ];

	UPgGFxGameViewportClient_event_NotifyConnectionError_Parms _NotifyConnectionError_Parms;
	memcpy ( &_NotifyConnectionError_Parms.msg, &msg, 0xC );
	memcpy ( &_NotifyConnectionError_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFn_NotifyConnectionError, &_NotifyConnectionError_Parms, NULL );
};

// Function GridGame.PgGFxGameViewportClient.Init
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 OutError                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UPgGFxGameViewportClient::eventInit ( struct FString* OutError )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 46842 ];

	UPgGFxGameViewportClient_eventInit_Parms Init_Parms;

	pFnInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	pFnInit->FunctionFlags |= 0x400;

	if ( OutError )
		memcpy ( OutError, &Init_Parms.OutError, 0xC );

	return Init_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_AkPlaySound.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgSeqAct_AkPlaySound::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 49786 ];

	UPgSeqAct_AkPlaySound_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function GridGame.PgXPSystem.GetNumXPRanks
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgXPSystem::GetNumXPRanks ( )
{
	static UFunction* pFnGetNumXPRanks = NULL;

	if ( ! pFnGetNumXPRanks )
		pFnGetNumXPRanks = (UFunction*) UObject::GObjObjects()->Data[ 51425 ];

	UPgXPSystem_execGetNumXPRanks_Parms GetNumXPRanks_Parms;

	pFnGetNumXPRanks->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumXPRanks, &GetNumXPRanks_Parms, NULL );

	pFnGetNumXPRanks->FunctionFlags |= 0x400;

	return GetNumXPRanks_Parms.ReturnValue;
};

// Function GridGame.PgMPLoadoutBuilder.GetControllerPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPawn*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerController*     Controller                     ( CPF_Parm )

class APgPawn* UPgMPLoadoutBuilder::GetControllerPawn ( class APgPlayerController* Controller )
{
	static UFunction* pFnGetControllerPawn = NULL;

	if ( ! pFnGetControllerPawn )
		pFnGetControllerPawn = (UFunction*) UObject::GObjObjects()->Data[ 46004 ];

	UPgMPLoadoutBuilder_execGetControllerPawn_Parms GetControllerPawn_Parms;
	GetControllerPawn_Parms.Controller = Controller;

	pFnGetControllerPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetControllerPawn, &GetControllerPawn_Parms, NULL );

	pFnGetControllerPawn->FunctionFlags |= 0x400;

	return GetControllerPawn_Parms.ReturnValue;
};

// Function GridGame.PgMPLoadoutBuilder.ApplyToPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )

void UPgMPLoadoutBuilder::ApplyToPlayer ( class APgPlayerController* Controller )
{
	static UFunction* pFnApplyToPlayer = NULL;

	if ( ! pFnApplyToPlayer )
		pFnApplyToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46002 ];

	UPgMPLoadoutBuilder_execApplyToPlayer_Parms ApplyToPlayer_Parms;
	ApplyToPlayer_Parms.Controller = Controller;

	pFnApplyToPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyToPlayer, &ApplyToPlayer_Parms, NULL );

	pFnApplyToPlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.SafeSelectItem
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class UPgUnlockItem*           Item                           ( CPF_Parm )
// int                            ArrayIndex                     ( CPF_Parm )

void UPgMPLoadoutBuilder::SafeSelectItem ( class UPgUnlockItem* Item, int ArrayIndex )
{
	static UFunction* pFnSafeSelectItem = NULL;

	if ( ! pFnSafeSelectItem )
		pFnSafeSelectItem = (UFunction*) UObject::GObjObjects()->Data[ 45999 ];

	UPgMPLoadoutBuilder_execSafeSelectItem_Parms SafeSelectItem_Parms;
	SafeSelectItem_Parms.Item = Item;
	SafeSelectItem_Parms.ArrayIndex = ArrayIndex;

	pFnSafeSelectItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSafeSelectItem, &SafeSelectItem_Parms, NULL );

	pFnSafeSelectItem->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.Reset
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UPgMPLoadoutBuilder::eventReset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 45998 ];

	UPgMPLoadoutBuilder_eventReset_Parms Reset_Parms;

	pFnReset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );

	pFnReset->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.MakeBest
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockSystem*         unlockSystem                   ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )

void UPgMPLoadoutBuilder::MakeBest ( class UPgUnlockSystem* unlockSystem, int LoadoutIndex )
{
	static UFunction* pFnMakeBest = NULL;

	if ( ! pFnMakeBest )
		pFnMakeBest = (UFunction*) UObject::GObjObjects()->Data[ 45995 ];

	UPgMPLoadoutBuilder_execMakeBest_Parms MakeBest_Parms;
	MakeBest_Parms.unlockSystem = unlockSystem;
	MakeBest_Parms.LoadoutIndex = LoadoutIndex;

	pFnMakeBest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMakeBest, &MakeBest_Parms, NULL );

	pFnMakeBest->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.FillFromUnlockDatabase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockSystem*         unlockSystem                   ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )

void UPgMPLoadoutBuilder::FillFromUnlockDatabase ( class UPgUnlockSystem* unlockSystem, int LoadoutIndex )
{
	static UFunction* pFnFillFromUnlockDatabase = NULL;

	if ( ! pFnFillFromUnlockDatabase )
		pFnFillFromUnlockDatabase = (UFunction*) UObject::GObjObjects()->Data[ 45992 ];

	UPgMPLoadoutBuilder_execFillFromUnlockDatabase_Parms FillFromUnlockDatabase_Parms;
	FillFromUnlockDatabase_Parms.unlockSystem = unlockSystem;
	FillFromUnlockDatabase_Parms.LoadoutIndex = LoadoutIndex;

	pFnFillFromUnlockDatabase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillFromUnlockDatabase, &FillFromUnlockDatabase_Parms, NULL );

	pFnFillFromUnlockDatabase->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.CommitToUnlockDatabase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockSystem*         unlockSystem                   ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )

void UPgMPLoadoutBuilder::CommitToUnlockDatabase ( class UPgUnlockSystem* unlockSystem, int LoadoutIndex )
{
	static UFunction* pFnCommitToUnlockDatabase = NULL;

	if ( ! pFnCommitToUnlockDatabase )
		pFnCommitToUnlockDatabase = (UFunction*) UObject::GObjObjects()->Data[ 45989 ];

	UPgMPLoadoutBuilder_execCommitToUnlockDatabase_Parms CommitToUnlockDatabase_Parms;
	CommitToUnlockDatabase_Parms.unlockSystem = unlockSystem;
	CommitToUnlockDatabase_Parms.LoadoutIndex = LoadoutIndex;

	pFnCommitToUnlockDatabase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCommitToUnlockDatabase, &CommitToUnlockDatabase_Parms, NULL );

	pFnCommitToUnlockDatabase->FunctionFlags |= 0x400;
};

// Function GridGame.PgMPLoadoutBuilder.WriteLoadout
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockSystem*         unlockSystem                   ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )
// struct FMPPlayerLoadout        loadout                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UPgMPLoadoutBuilder::WriteLoadout ( class UPgUnlockSystem* unlockSystem, int LoadoutIndex, struct FMPPlayerLoadout* loadout )
{
	static UFunction* pFnWriteLoadout = NULL;

	if ( ! pFnWriteLoadout )
		pFnWriteLoadout = (UFunction*) UObject::GObjObjects()->Data[ 45985 ];

	UPgMPLoadoutBuilder_execWriteLoadout_Parms WriteLoadout_Parms;
	WriteLoadout_Parms.unlockSystem = unlockSystem;
	WriteLoadout_Parms.LoadoutIndex = LoadoutIndex;

	pFnWriteLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteLoadout, &WriteLoadout_Parms, NULL );

	pFnWriteLoadout->FunctionFlags |= 0x400;

	if ( loadout )
		memcpy ( loadout, &WriteLoadout_Parms.loadout, 0x24 );
};

// Function GridGame.PgMPLoadoutBuilder.ReadLoadout
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockSystem*         unlockSystem                   ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )
// struct FMPPlayerLoadout        loadout                        ( CPF_Parm | CPF_OutParm )

void UPgMPLoadoutBuilder::ReadLoadout ( class UPgUnlockSystem* unlockSystem, int LoadoutIndex, struct FMPPlayerLoadout* loadout )
{
	static UFunction* pFnReadLoadout = NULL;

	if ( ! pFnReadLoadout )
		pFnReadLoadout = (UFunction*) UObject::GObjObjects()->Data[ 45973 ];

	UPgMPLoadoutBuilder_execReadLoadout_Parms ReadLoadout_Parms;
	ReadLoadout_Parms.unlockSystem = unlockSystem;
	ReadLoadout_Parms.LoadoutIndex = LoadoutIndex;

	pFnReadLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadLoadout, &ReadLoadout_Parms, NULL );

	pFnReadLoadout->FunctionFlags |= 0x400;

	if ( loadout )
		memcpy ( loadout, &ReadLoadout_Parms.loadout, 0x24 );
};

// Function GridGame.PgMPLoadoutBuilder.SelectItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockItem*           Item                           ( CPF_Parm )
// int                            ArrayIndex                     ( CPF_Parm )

void UPgMPLoadoutBuilder::SelectItem ( class UPgUnlockItem* Item, int ArrayIndex )
{
	static UFunction* pFnSelectItem = NULL;

	if ( ! pFnSelectItem )
		pFnSelectItem = (UFunction*) UObject::GObjObjects()->Data[ 45970 ];

	UPgMPLoadoutBuilder_execSelectItem_Parms SelectItem_Parms;
	SelectItem_Parms.Item = Item;
	SelectItem_Parms.ArrayIndex = ArrayIndex;

	pFnSelectItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSelectItem, &SelectItem_Parms, NULL );

	pFnSelectItem->FunctionFlags |= 0x400;
};

// Function GridGame.PgStoryLoadoutBuilder.Fill
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )

void UPgStoryLoadoutBuilder::Fill ( class APgPlayerController* Controller )
{
	static UFunction* pFnFill = NULL;

	if ( ! pFnFill )
		pFnFill = (UFunction*) UObject::GObjObjects()->Data[ 46016 ];

	UPgStoryLoadoutBuilder_execFill_Parms Fill_Parms;
	Fill_Parms.Controller = Controller;

	pFnFill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFill, &Fill_Parms, NULL );

	pFnFill->FunctionFlags |= 0x400;
};

// Function GridGame.PgStoryLoadoutBuilder.GetControllerPawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPawn*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APgPlayerController*     Controller                     ( CPF_Parm )

class APgPawn* UPgStoryLoadoutBuilder::GetControllerPawn ( class APgPlayerController* Controller )
{
	static UFunction* pFnGetControllerPawn = NULL;

	if ( ! pFnGetControllerPawn )
		pFnGetControllerPawn = (UFunction*) UObject::GObjObjects()->Data[ 46013 ];

	UPgStoryLoadoutBuilder_execGetControllerPawn_Parms GetControllerPawn_Parms;
	GetControllerPawn_Parms.Controller = Controller;

	pFnGetControllerPawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetControllerPawn, &GetControllerPawn_Parms, NULL );

	pFnGetControllerPawn->FunctionFlags |= 0x400;

	return GetControllerPawn_Parms.ReturnValue;
};

// Function GridGame.PgStoryLoadoutBuilder.ApplyToPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )

void UPgStoryLoadoutBuilder::ApplyToPlayer ( class APgPlayerController* Controller )
{
	static UFunction* pFnApplyToPlayer = NULL;

	if ( ! pFnApplyToPlayer )
		pFnApplyToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46011 ];

	UPgStoryLoadoutBuilder_execApplyToPlayer_Parms ApplyToPlayer_Parms;
	ApplyToPlayer_Parms.Controller = Controller;

	pFnApplyToPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyToPlayer, &ApplyToPlayer_Parms, NULL );

	pFnApplyToPlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.IsVisibleInUI
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsVisibleInUI ( )
{
	static UFunction* pFnIsVisibleInUI = NULL;

	if ( ! pFnIsVisibleInUI )
		pFnIsVisibleInUI = (UFunction*) UObject::GObjObjects()->Data[ 50619 ];

	UPgUnlockItem_execIsVisibleInUI_Parms IsVisibleInUI_Parms;

	pFnIsVisibleInUI->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsVisibleInUI, &IsVisibleInUI_Parms, NULL );

	pFnIsVisibleInUI->FunctionFlags |= 0x400;

	return IsVisibleInUI_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsDLC ( )
{
	static UFunction* pFnIsDLC = NULL;

	if ( ! pFnIsDLC )
		pFnIsDLC = (UFunction*) UObject::GObjObjects()->Data[ 50617 ];

	UPgUnlockItem_execIsDLC_Parms IsDLC_Parms;

	pFnIsDLC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDLC, &IsDLC_Parms, NULL );

	pFnIsDLC->FunctionFlags |= 0x400;

	return IsDLC_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsDLCAvailable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsDLCAvailable ( )
{
	static UFunction* pFnIsDLCAvailable = NULL;

	if ( ! pFnIsDLCAvailable )
		pFnIsDLCAvailable = (UFunction*) UObject::GObjObjects()->Data[ 50615 ];

	UPgUnlockItem_execIsDLCAvailable_Parms IsDLCAvailable_Parms;

	pFnIsDLCAvailable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDLCAvailable, &IsDLCAvailable_Parms, NULL );

	pFnIsDLCAvailable->FunctionFlags |= 0x400;

	return IsDLCAvailable_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.SetLoadoutArrayIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LoadoutIndex                   ( CPF_Parm )
// int                            ArrayIndex                     ( CPF_Parm )

void UPgUnlockItem::SetLoadoutArrayIndex ( int LoadoutIndex, int ArrayIndex )
{
	static UFunction* pFnSetLoadoutArrayIndex = NULL;

	if ( ! pFnSetLoadoutArrayIndex )
		pFnSetLoadoutArrayIndex = (UFunction*) UObject::GObjObjects()->Data[ 50612 ];

	UPgUnlockItem_execSetLoadoutArrayIndex_Parms SetLoadoutArrayIndex_Parms;
	SetLoadoutArrayIndex_Parms.LoadoutIndex = LoadoutIndex;
	SetLoadoutArrayIndex_Parms.ArrayIndex = ArrayIndex;

	pFnSetLoadoutArrayIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLoadoutArrayIndex, &SetLoadoutArrayIndex_Parms, NULL );

	pFnSetLoadoutArrayIndex->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.GetLoadoutArrayIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LoadoutIndex                   ( CPF_Parm )

int UPgUnlockItem::GetLoadoutArrayIndex ( int LoadoutIndex )
{
	static UFunction* pFnGetLoadoutArrayIndex = NULL;

	if ( ! pFnGetLoadoutArrayIndex )
		pFnGetLoadoutArrayIndex = (UFunction*) UObject::GObjObjects()->Data[ 50609 ];

	UPgUnlockItem_execGetLoadoutArrayIndex_Parms GetLoadoutArrayIndex_Parms;
	GetLoadoutArrayIndex_Parms.LoadoutIndex = LoadoutIndex;

	pFnGetLoadoutArrayIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoadoutArrayIndex, &GetLoadoutArrayIndex_Parms, NULL );

	pFnGetLoadoutArrayIndex->FunctionFlags |= 0x400;

	return GetLoadoutArrayIndex_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.CanUseInStoryMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::CanUseInStoryMode ( )
{
	static UFunction* pFnCanUseInStoryMode = NULL;

	if ( ! pFnCanUseInStoryMode )
		pFnCanUseInStoryMode = (UFunction*) UObject::GObjObjects()->Data[ 50607 ];

	UPgUnlockItem_execCanUseInStoryMode_Parms CanUseInStoryMode_Parms;

	pFnCanUseInStoryMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanUseInStoryMode, &CanUseInStoryMode_Parms, NULL );

	pFnCanUseInStoryMode->FunctionFlags |= 0x400;

	return CanUseInStoryMode_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.CanAddToMPLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::CanAddToMPLoadout ( )
{
	static UFunction* pFnCanAddToMPLoadout = NULL;

	if ( ! pFnCanAddToMPLoadout )
		pFnCanAddToMPLoadout = (UFunction*) UObject::GObjObjects()->Data[ 50605 ];

	UPgUnlockItem_execCanAddToMPLoadout_Parms CanAddToMPLoadout_Parms;

	pFnCanAddToMPLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanAddToMPLoadout, &CanAddToMPLoadout_Parms, NULL );

	pFnCanAddToMPLoadout->FunctionFlags |= 0x400;

	return CanAddToMPLoadout_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.RemoveFromLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LoadoutIndex                   ( CPF_Parm )

void UPgUnlockItem::RemoveFromLoadout ( int LoadoutIndex )
{
	static UFunction* pFnRemoveFromLoadout = NULL;

	if ( ! pFnRemoveFromLoadout )
		pFnRemoveFromLoadout = (UFunction*) UObject::GObjObjects()->Data[ 50603 ];

	UPgUnlockItem_execRemoveFromLoadout_Parms RemoveFromLoadout_Parms;
	RemoveFromLoadout_Parms.LoadoutIndex = LoadoutIndex;

	pFnRemoveFromLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFromLoadout, &RemoveFromLoadout_Parms, NULL );

	pFnRemoveFromLoadout->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.AddToLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LoadoutIndex                   ( CPF_Parm )
// int                            ArrayIndex                     ( CPF_Parm )

void UPgUnlockItem::AddToLoadout ( int LoadoutIndex, int ArrayIndex )
{
	static UFunction* pFnAddToLoadout = NULL;

	if ( ! pFnAddToLoadout )
		pFnAddToLoadout = (UFunction*) UObject::GObjObjects()->Data[ 50600 ];

	UPgUnlockItem_execAddToLoadout_Parms AddToLoadout_Parms;
	AddToLoadout_Parms.LoadoutIndex = LoadoutIndex;
	AddToLoadout_Parms.ArrayIndex = ArrayIndex;

	pFnAddToLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddToLoadout, &AddToLoadout_Parms, NULL );

	pFnAddToLoadout->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.IsInLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LoadoutIndex                   ( CPF_Parm )

bool UPgUnlockItem::IsInLoadout ( int LoadoutIndex )
{
	static UFunction* pFnIsInLoadout = NULL;

	if ( ! pFnIsInLoadout )
		pFnIsInLoadout = (UFunction*) UObject::GObjObjects()->Data[ 50597 ];

	UPgUnlockItem_execIsInLoadout_Parms IsInLoadout_Parms;
	IsInLoadout_Parms.LoadoutIndex = LoadoutIndex;

	pFnIsInLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInLoadout, &IsInLoadout_Parms, NULL );

	pFnIsInLoadout->FunctionFlags |= 0x400;

	return IsInLoadout_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.Purchased
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )

void UPgUnlockItem::Purchased ( class APgPlayerController* Controller )
{
	static UFunction* pFnPurchased = NULL;

	if ( ! pFnPurchased )
		pFnPurchased = (UFunction*) UObject::GObjObjects()->Data[ 50595 ];

	UPgUnlockItem_execPurchased_Parms Purchased_Parms;
	Purchased_Parms.Controller = Controller;

	pFnPurchased->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPurchased, &Purchased_Parms, NULL );

	pFnPurchased->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItem::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50592 ];

	UPgUnlockItem_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItem.Unlock
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// TArray< class UPgUnlockItem* > ownedItems                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockItem::Unlock ( class APgPlayerController* Controller, TArray< class UPgUnlockItem* >* ownedItems )
{
	static UFunction* pFnUnlock = NULL;

	if ( ! pFnUnlock )
		pFnUnlock = (UFunction*) UObject::GObjObjects()->Data[ 50588 ];

	UPgUnlockItem_execUnlock_Parms Unlock_Parms;
	Unlock_Parms.Controller = Controller;

	pFnUnlock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnlock, &Unlock_Parms, NULL );

	pFnUnlock->FunctionFlags |= 0x400;

	if ( ownedItems )
		memcpy ( ownedItems, &Unlock_Parms.ownedItems, 0xC );
};

// Function GridGame.PgUnlockItem.FindItemByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockItem*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   ItemName                       ( CPF_Const | CPF_Parm | CPF_OutParm )

class UPgUnlockItem* UPgUnlockItem::FindItemByName ( TArray< class UPgUnlockItem* > Items, struct FName* ItemName )
{
	static UFunction* pFnFindItemByName = NULL;

	if ( ! pFnFindItemByName )
		pFnFindItemByName = (UFunction*) UObject::GObjObjects()->Data[ 50583 ];

	UPgUnlockItem_execFindItemByName_Parms FindItemByName_Parms;
	memcpy ( &FindItemByName_Parms.Items, &Items, 0xC );

	pFnFindItemByName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFindItemByName, &FindItemByName_Parms, NULL );

	pFnFindItemByName->FunctionFlags |= 0x400;

	if ( ItemName )
		memcpy ( ItemName, &FindItemByName_Parms.ItemName, 0x8 );

	return FindItemByName_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsInArray
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   ItemName                       ( CPF_Const | CPF_Parm | CPF_OutParm )

bool UPgUnlockItem::IsInArray ( TArray< class UPgUnlockItem* > Items, struct FName* ItemName )
{
	static UFunction* pFnIsInArray = NULL;

	if ( ! pFnIsInArray )
		pFnIsInArray = (UFunction*) UObject::GObjObjects()->Data[ 50578 ];

	UPgUnlockItem_execIsInArray_Parms IsInArray_Parms;
	memcpy ( &IsInArray_Parms.Items, &Items, 0xC );

	pFnIsInArray->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInArray, &IsInArray_Parms, NULL );

	pFnIsInArray->FunctionFlags |= 0x400;

	if ( ItemName )
		memcpy ( ItemName, &IsInArray_Parms.ItemName, 0x8 );

	return IsInArray_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.AreUnlockRequirementsSatisfied
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Level                          ( CPF_Parm )
// TArray< class UPgUnlockItem* > ownedItems                     ( CPF_Parm | CPF_NeedCtorLink )

bool UPgUnlockItem::AreUnlockRequirementsSatisfied ( int Level, TArray< class UPgUnlockItem* > ownedItems )
{
	static UFunction* pFnAreUnlockRequirementsSatisfied = NULL;

	if ( ! pFnAreUnlockRequirementsSatisfied )
		pFnAreUnlockRequirementsSatisfied = (UFunction*) UObject::GObjObjects()->Data[ 50573 ];

	UPgUnlockItem_execAreUnlockRequirementsSatisfied_Parms AreUnlockRequirementsSatisfied_Parms;
	AreUnlockRequirementsSatisfied_Parms.Level = Level;
	memcpy ( &AreUnlockRequirementsSatisfied_Parms.ownedItems, &ownedItems, 0xC );

	pFnAreUnlockRequirementsSatisfied->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAreUnlockRequirementsSatisfied, &AreUnlockRequirementsSatisfied_Parms, NULL );

	pFnAreUnlockRequirementsSatisfied->FunctionFlags |= 0x400;

	return AreUnlockRequirementsSatisfied_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsDisabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsDisabled ( )
{
	static UFunction* pFnIsDisabled = NULL;

	if ( ! pFnIsDisabled )
		pFnIsDisabled = (UFunction*) UObject::GObjObjects()->Data[ 50571 ];

	UPgUnlockItem_execIsDisabled_Parms IsDisabled_Parms;

	pFnIsDisabled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDisabled, &IsDisabled_Parms, NULL );

	pFnIsDisabled->FunctionFlags |= 0x400;

	return IsDisabled_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsRecentlyAvailableForPurchase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsRecentlyAvailableForPurchase ( )
{
	static UFunction* pFnIsRecentlyAvailableForPurchase = NULL;

	if ( ! pFnIsRecentlyAvailableForPurchase )
		pFnIsRecentlyAvailableForPurchase = (UFunction*) UObject::GObjObjects()->Data[ 50569 ];

	UPgUnlockItem_execIsRecentlyAvailableForPurchase_Parms IsRecentlyAvailableForPurchase_Parms;

	pFnIsRecentlyAvailableForPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRecentlyAvailableForPurchase, &IsRecentlyAvailableForPurchase_Parms, NULL );

	pFnIsRecentlyAvailableForPurchase->FunctionFlags |= 0x400;

	return IsRecentlyAvailableForPurchase_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsAvailableForPurchase
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsAvailableForPurchase ( )
{
	static UFunction* pFnIsAvailableForPurchase = NULL;

	if ( ! pFnIsAvailableForPurchase )
		pFnIsAvailableForPurchase = (UFunction*) UObject::GObjObjects()->Data[ 50567 ];

	UPgUnlockItem_execIsAvailableForPurchase_Parms IsAvailableForPurchase_Parms;

	pFnIsAvailableForPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsAvailableForPurchase, &IsAvailableForPurchase_Parms, NULL );

	pFnIsAvailableForPurchase->FunctionFlags |= 0x400;

	return IsAvailableForPurchase_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.GetUnlockType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgUnlockItem::GetUnlockType ( )
{
	static UFunction* pFnGetUnlockType = NULL;

	if ( ! pFnGetUnlockType )
		pFnGetUnlockType = (UFunction*) UObject::GObjObjects()->Data[ 50565 ];

	UPgUnlockItem_execGetUnlockType_Parms GetUnlockType_Parms;

	pFnGetUnlockType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUnlockType, &GetUnlockType_Parms, NULL );

	pFnGetUnlockType->FunctionFlags |= 0x400;

	return GetUnlockType_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsRecentlyOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsRecentlyOwned ( )
{
	static UFunction* pFnIsRecentlyOwned = NULL;

	if ( ! pFnIsRecentlyOwned )
		pFnIsRecentlyOwned = (UFunction*) UObject::GObjObjects()->Data[ 50563 ];

	UPgUnlockItem_execIsRecentlyOwned_Parms IsRecentlyOwned_Parms;

	pFnIsRecentlyOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsRecentlyOwned, &IsRecentlyOwned_Parms, NULL );

	pFnIsRecentlyOwned->FunctionFlags |= 0x400;

	return IsRecentlyOwned_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.IsOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockItem::IsOwned ( )
{
	static UFunction* pFnIsOwned = NULL;

	if ( ! pFnIsOwned )
		pFnIsOwned = (UFunction*) UObject::GObjObjects()->Data[ 50561 ];

	UPgUnlockItem_execIsOwned_Parms IsOwned_Parms;

	pFnIsOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsOwned, &IsOwned_Parms, NULL );

	pFnIsOwned->FunctionFlags |= 0x400;

	return IsOwned_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.GetCost
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgUnlockItem::GetCost ( )
{
	static UFunction* pFnGetCost = NULL;

	if ( ! pFnGetCost )
		pFnGetCost = (UFunction*) UObject::GObjObjects()->Data[ 50559 ];

	UPgUnlockItem_execGetCost_Parms GetCost_Parms;

	pFnGetCost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCost, &GetCost_Parms, NULL );

	pFnGetCost->FunctionFlags |= 0x400;

	return GetCost_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.GetDisplayUnlockCondition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgUnlockItem::GetDisplayUnlockCondition ( )
{
	static UFunction* pFnGetDisplayUnlockCondition = NULL;

	if ( ! pFnGetDisplayUnlockCondition )
		pFnGetDisplayUnlockCondition = (UFunction*) UObject::GObjObjects()->Data[ 50557 ];

	UPgUnlockItem_execGetDisplayUnlockCondition_Parms GetDisplayUnlockCondition_Parms;

	pFnGetDisplayUnlockCondition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayUnlockCondition, &GetDisplayUnlockCondition_Parms, NULL );

	pFnGetDisplayUnlockCondition->FunctionFlags |= 0x400;

	return GetDisplayUnlockCondition_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.GetDisplayDescription
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgUnlockItem::GetDisplayDescription ( )
{
	static UFunction* pFnGetDisplayDescription = NULL;

	if ( ! pFnGetDisplayDescription )
		pFnGetDisplayDescription = (UFunction*) UObject::GObjObjects()->Data[ 50555 ];

	UPgUnlockItem_execGetDisplayDescription_Parms GetDisplayDescription_Parms;

	pFnGetDisplayDescription->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayDescription, &GetDisplayDescription_Parms, NULL );

	pFnGetDisplayDescription->FunctionFlags |= 0x400;

	return GetDisplayDescription_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItem.GetDisplayName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgUnlockItem::GetDisplayName ( )
{
	static UFunction* pFnGetDisplayName = NULL;

	if ( ! pFnGetDisplayName )
		pFnGetDisplayName = (UFunction*) UObject::GObjObjects()->Data[ 50553 ];

	UPgUnlockItem_execGetDisplayName_Parms GetDisplayName_Parms;

	pFnGetDisplayName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDisplayName, &GetDisplayName_Parms, NULL );

	pFnGetDisplayName->FunctionFlags |= 0x400;

	return GetDisplayName_Parms.ReturnValue;
};

// Function GridGame.PgUnlockItemInventory.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItemInventory::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50622 ];

	UPgUnlockItemInventory_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItemPerk.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItemPerk::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50630 ];

	UPgUnlockItemPerk_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItemPlayerLoadout.Purchased
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )

void UPgUnlockItemPlayerLoadout::Purchased ( class APgPlayerController* Controller )
{
	static UFunction* pFnPurchased = NULL;

	if ( ! pFnPurchased )
		pFnPurchased = (UFunction*) UObject::GObjObjects()->Data[ 50637 ];

	UPgUnlockItemPlayerLoadout_execPurchased_Parms Purchased_Parms;
	Purchased_Parms.Controller = Controller;

	pFnPurchased->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPurchased, &Purchased_Parms, NULL );

	pFnPurchased->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItemPlayerLoadout.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItemPlayerLoadout::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50634 ];

	UPgUnlockItemPlayerLoadout_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItemPlayerUpgrade.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItemPlayerUpgrade::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50641 ];

	UPgUnlockItemPlayerUpgrade_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockItemVehicle.Equip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class APgPlayerController*     Controller                     ( CPF_Parm )
// class APgPawn*                 Pawn                           ( CPF_Parm )

void UPgUnlockItemVehicle::Equip ( class APgPlayerController* Controller, class APgPawn* Pawn )
{
	static UFunction* pFnEquip = NULL;

	if ( ! pFnEquip )
		pFnEquip = (UFunction*) UObject::GObjObjects()->Data[ 50649 ];

	UPgUnlockItemVehicle_execEquip_Parms Equip_Parms;
	Equip_Parms.Controller = Controller;
	Equip_Parms.Pawn = Pawn;

	pFnEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEquip, &Equip_Parms, NULL );

	pFnEquip->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetController
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class APgPlayerController*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerController* UPgUnlockSystem::GetController ( )
{
	static UFunction* pFnGetController = NULL;

	if ( ! pFnGetController )
		pFnGetController = (UFunction*) UObject::GObjObjects()->Data[ 46123 ];

	UPgUnlockSystem_execGetController_Parms GetController_Parms;

	pFnGetController->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetController, &GetController_Parms, NULL );

	pFnGetController->FunctionFlags |= 0x400;

	return GetController_Parms.ReturnValue;
};

// Function GridGame.PgUnlockSystem.SortItems
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// int                            Low                            ( CPF_Parm )
// int                            High                           ( CPF_Parm )

void UPgUnlockSystem::SortItems ( int Low, int High )
{
	static UFunction* pFnSortItems = NULL;

	if ( ! pFnSortItems )
		pFnSortItems = (UFunction*) UObject::GObjObjects()->Data[ 46120 ];

	UPgUnlockSystem_execSortItems_Parms SortItems_Parms;
	SortItems_Parms.Low = Low;
	SortItems_Parms.High = High;

	pFnSortItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSortItems, &SortItems_Parms, NULL );

	pFnSortItems->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.SetPlayerSkin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockItemPlayerSkin* skin                           ( CPF_Parm )

void UPgUnlockSystem::SetPlayerSkin ( class UPgUnlockItemPlayerSkin* skin )
{
	static UFunction* pFnSetPlayerSkin = NULL;

	if ( ! pFnSetPlayerSkin )
		pFnSetPlayerSkin = (UFunction*) UObject::GObjObjects()->Data[ 46118 ];

	UPgUnlockSystem_execSetPlayerSkin_Parms SetPlayerSkin_Parms;
	SetPlayerSkin_Parms.skin = skin;

	pFnSetPlayerSkin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPlayerSkin, &SetPlayerSkin_Parms, NULL );

	pFnSetPlayerSkin->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetPlayerSkins
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class UPgUnlockItemPlayerSkin* > skins                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetPlayerSkins ( TArray< class UPgUnlockItemPlayerSkin* >* skins )
{
	static UFunction* pFnGetPlayerSkins = NULL;

	if ( ! pFnGetPlayerSkins )
		pFnGetPlayerSkins = (UFunction*) UObject::GObjObjects()->Data[ 46115 ];

	UPgUnlockSystem_execGetPlayerSkins_Parms GetPlayerSkins_Parms;

	pFnGetPlayerSkins->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPlayerSkins, &GetPlayerSkins_Parms, NULL );

	pFnGetPlayerSkins->FunctionFlags |= 0x400;

	if ( skins )
		memcpy ( skins, &GetPlayerSkins_Parms.skins, 0xC );
};

// Function GridGame.PgUnlockSystem.RefreshDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::RefreshDLC ( )
{
	static UFunction* pFnRefreshDLC = NULL;

	if ( ! pFnRefreshDLC )
		pFnRefreshDLC = (UFunction*) UObject::GObjObjects()->Data[ 46114 ];

	UPgUnlockSystem_execRefreshDLC_Parms RefreshDLC_Parms;

	pFnRefreshDLC->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefreshDLC, &RefreshDLC_Parms, NULL );

	pFnRefreshDLC->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.DebugPurchaseAll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ItemType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            PlayerLevel                    ( CPF_Parm )

void UPgUnlockSystem::DebugPurchaseAll ( struct FString ItemType, int PlayerLevel )
{
	static UFunction* pFnDebugPurchaseAll = NULL;

	if ( ! pFnDebugPurchaseAll )
		pFnDebugPurchaseAll = (UFunction*) UObject::GObjObjects()->Data[ 46111 ];

	UPgUnlockSystem_execDebugPurchaseAll_Parms DebugPurchaseAll_Parms;
	memcpy ( &DebugPurchaseAll_Parms.ItemType, &ItemType, 0xC );
	DebugPurchaseAll_Parms.PlayerLevel = PlayerLevel;

	pFnDebugPurchaseAll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDebugPurchaseAll, &DebugPurchaseAll_Parms, NULL );

	pFnDebugPurchaseAll->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.DisplayDebugPlayerLoadouts
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::DisplayDebugPlayerLoadouts ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebugPlayerLoadouts = NULL;

	if ( ! pFnDisplayDebugPlayerLoadouts )
		pFnDisplayDebugPlayerLoadouts = (UFunction*) UObject::GObjObjects()->Data[ 46107 ];

	UPgUnlockSystem_execDisplayDebugPlayerLoadouts_Parms DisplayDebugPlayerLoadouts_Parms;
	DisplayDebugPlayerLoadouts_Parms.HUD = HUD;

	pFnDisplayDebugPlayerLoadouts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebugPlayerLoadouts, &DisplayDebugPlayerLoadouts_Parms, NULL );

	pFnDisplayDebugPlayerLoadouts->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebugPlayerLoadouts_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebugPlayerLoadouts_Parms.out_YPos;
};

// Function GridGame.PgUnlockSystem.DisplayDebugInventory
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::DisplayDebugInventory ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebugInventory = NULL;

	if ( ! pFnDisplayDebugInventory )
		pFnDisplayDebugInventory = (UFunction*) UObject::GObjObjects()->Data[ 46103 ];

	UPgUnlockSystem_execDisplayDebugInventory_Parms DisplayDebugInventory_Parms;
	DisplayDebugInventory_Parms.HUD = HUD;

	pFnDisplayDebugInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebugInventory, &DisplayDebugInventory_Parms, NULL );

	pFnDisplayDebugInventory->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebugInventory_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebugInventory_Parms.out_YPos;
};

// Function GridGame.PgUnlockSystem.DisplayDebugLoadout
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// int                            LoadoutIndex                   ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::DisplayDebugLoadout ( class AHUD* HUD, int LoadoutIndex, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebugLoadout = NULL;

	if ( ! pFnDisplayDebugLoadout )
		pFnDisplayDebugLoadout = (UFunction*) UObject::GObjObjects()->Data[ 46098 ];

	UPgUnlockSystem_execDisplayDebugLoadout_Parms DisplayDebugLoadout_Parms;
	DisplayDebugLoadout_Parms.HUD = HUD;
	DisplayDebugLoadout_Parms.LoadoutIndex = LoadoutIndex;

	pFnDisplayDebugLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebugLoadout, &DisplayDebugLoadout_Parms, NULL );

	pFnDisplayDebugLoadout->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebugLoadout_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebugLoadout_Parms.out_YPos;
};

// Function GridGame.PgUnlockSystem.DisplayDebug
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 46094 ];

	UPgUnlockSystem_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	pFnDisplayDebug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	pFnDisplayDebug->FunctionFlags |= 0x400;

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgUnlockSystem.IsLoadoutEditingPossible
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgUnlockSystem::IsLoadoutEditingPossible ( )
{
	static UFunction* pFnIsLoadoutEditingPossible = NULL;

	if ( ! pFnIsLoadoutEditingPossible )
		pFnIsLoadoutEditingPossible = (UFunction*) UObject::GObjObjects()->Data[ 46092 ];

	UPgUnlockSystem_execIsLoadoutEditingPossible_Parms IsLoadoutEditingPossible_Parms;

	pFnIsLoadoutEditingPossible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLoadoutEditingPossible, &IsLoadoutEditingPossible_Parms, NULL );

	pFnIsLoadoutEditingPossible->FunctionFlags |= 0x400;

	return IsLoadoutEditingPossible_Parms.ReturnValue;
};

// Function GridGame.PgUnlockSystem.GetLoadoutBuilder
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgMPLoadoutBuilder*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPgMPLoadoutBuilder* UPgUnlockSystem::GetLoadoutBuilder ( )
{
	static UFunction* pFnGetLoadoutBuilder = NULL;

	if ( ! pFnGetLoadoutBuilder )
		pFnGetLoadoutBuilder = (UFunction*) UObject::GObjObjects()->Data[ 46090 ];

	UPgUnlockSystem_execGetLoadoutBuilder_Parms GetLoadoutBuilder_Parms;

	pFnGetLoadoutBuilder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoadoutBuilder, &GetLoadoutBuilder_Parms, NULL );

	pFnGetLoadoutBuilder->FunctionFlags |= 0x400;

	return GetLoadoutBuilder_Parms.ReturnValue;
};

// Function GridGame.PgUnlockSystem.SetLoadout
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FMPPlayerLoadout        loadout                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::SetLoadout ( int Index, struct FMPPlayerLoadout* loadout )
{
	static UFunction* pFnSetLoadout = NULL;

	if ( ! pFnSetLoadout )
		pFnSetLoadout = (UFunction*) UObject::GObjObjects()->Data[ 46087 ];

	UPgUnlockSystem_execSetLoadout_Parms SetLoadout_Parms;
	SetLoadout_Parms.Index = Index;

	pFnSetLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLoadout, &SetLoadout_Parms, NULL );

	pFnSetLoadout->FunctionFlags |= 0x400;

	if ( loadout )
		memcpy ( loadout, &SetLoadout_Parms.loadout, 0x24 );
};

// Function GridGame.PgUnlockSystem.GetLoadout
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FMPPlayerLoadout        loadout                        ( CPF_Parm | CPF_OutParm )

void UPgUnlockSystem::GetLoadout ( int Index, struct FMPPlayerLoadout* loadout )
{
	static UFunction* pFnGetLoadout = NULL;

	if ( ! pFnGetLoadout )
		pFnGetLoadout = (UFunction*) UObject::GObjObjects()->Data[ 46084 ];

	UPgUnlockSystem_execGetLoadout_Parms GetLoadout_Parms;
	GetLoadout_Parms.Index = Index;

	pFnGetLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoadout, &GetLoadout_Parms, NULL );

	pFnGetLoadout->FunctionFlags |= 0x400;

	if ( loadout )
		memcpy ( loadout, &GetLoadout_Parms.loadout, 0x24 );
};

// Function GridGame.PgUnlockSystem.SetActiveLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UPgUnlockSystem::SetActiveLoadout ( int Index )
{
	static UFunction* pFnSetActiveLoadout = NULL;

	if ( ! pFnSetActiveLoadout )
		pFnSetActiveLoadout = (UFunction*) UObject::GObjObjects()->Data[ 46082 ];

	UPgUnlockSystem_execSetActiveLoadout_Parms SetActiveLoadout_Parms;
	SetActiveLoadout_Parms.Index = Index;

	pFnSetActiveLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveLoadout, &SetActiveLoadout_Parms, NULL );

	pFnSetActiveLoadout->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetActiveLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgUnlockSystem::GetActiveLoadout ( )
{
	static UFunction* pFnGetActiveLoadout = NULL;

	if ( ! pFnGetActiveLoadout )
		pFnGetActiveLoadout = (UFunction*) UObject::GObjObjects()->Data[ 46080 ];

	UPgUnlockSystem_execGetActiveLoadout_Parms GetActiveLoadout_Parms;

	pFnGetActiveLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActiveLoadout, &GetActiveLoadout_Parms, NULL );

	pFnGetActiveLoadout->FunctionFlags |= 0x400;

	return GetActiveLoadout_Parms.ReturnValue;
};

// Function GridGame.PgUnlockSystem.SetNumLoadouts
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void UPgUnlockSystem::SetNumLoadouts ( int Num )
{
	static UFunction* pFnSetNumLoadouts = NULL;

	if ( ! pFnSetNumLoadouts )
		pFnSetNumLoadouts = (UFunction*) UObject::GObjObjects()->Data[ 46078 ];

	UPgUnlockSystem_execSetNumLoadouts_Parms SetNumLoadouts_Parms;
	SetNumLoadouts_Parms.Num = Num;

	pFnSetNumLoadouts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetNumLoadouts, &SetNumLoadouts_Parms, NULL );

	pFnSetNumLoadouts->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetNumLoadouts
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgUnlockSystem::GetNumLoadouts ( )
{
	static UFunction* pFnGetNumLoadouts = NULL;

	if ( ! pFnGetNumLoadouts )
		pFnGetNumLoadouts = (UFunction*) UObject::GObjObjects()->Data[ 46076 ];

	UPgUnlockSystem_execGetNumLoadouts_Parms GetNumLoadouts_Parms;

	pFnGetNumLoadouts->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNumLoadouts, &GetNumLoadouts_Parms, NULL );

	pFnGetNumLoadouts->FunctionFlags |= 0x400;

	return GetNumLoadouts_Parms.ReturnValue;
};

// Function GridGame.PgUnlockSystem.GetItemsFromLoadoutString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 loadoutText                    ( CPF_Parm | CPF_NeedCtorLink )
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetItemsFromLoadoutString ( struct FString loadoutText, TArray< class UPgUnlockItem* >* Items )
{
	static UFunction* pFnGetItemsFromLoadoutString = NULL;

	if ( ! pFnGetItemsFromLoadoutString )
		pFnGetItemsFromLoadoutString = (UFunction*) UObject::GObjObjects()->Data[ 46072 ];

	UPgUnlockSystem_execGetItemsFromLoadoutString_Parms GetItemsFromLoadoutString_Parms;
	memcpy ( &GetItemsFromLoadoutString_Parms.loadoutText, &loadoutText, 0xC );

	pFnGetItemsFromLoadoutString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemsFromLoadoutString, &GetItemsFromLoadoutString_Parms, NULL );

	pFnGetItemsFromLoadoutString->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &GetItemsFromLoadoutString_Parms.Items, 0xC );
};

// Function GridGame.PgUnlockSystem.WriteLoadoutToString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 loadoutText                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::WriteLoadoutToString ( struct FString* loadoutText )
{
	static UFunction* pFnWriteLoadoutToString = NULL;

	if ( ! pFnWriteLoadoutToString )
		pFnWriteLoadoutToString = (UFunction*) UObject::GObjObjects()->Data[ 46070 ];

	UPgUnlockSystem_execWriteLoadoutToString_Parms WriteLoadoutToString_Parms;

	pFnWriteLoadoutToString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteLoadoutToString, &WriteLoadoutToString_Parms, NULL );

	pFnWriteLoadoutToString->FunctionFlags |= 0x400;

	if ( loadoutText )
		memcpy ( loadoutText, &WriteLoadoutToString_Parms.loadoutText, 0xC );
};

// Function GridGame.PgUnlockSystem.SetupUnlockSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::SetupUnlockSystem ( )
{
	static UFunction* pFnSetupUnlockSystem = NULL;

	if ( ! pFnSetupUnlockSystem )
		pFnSetupUnlockSystem = (UFunction*) UObject::GObjObjects()->Data[ 46069 ];

	UPgUnlockSystem_execSetupUnlockSystem_Parms SetupUnlockSystem_Parms;

	pFnSetupUnlockSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupUnlockSystem, &SetupUnlockSystem_Parms, NULL );

	pFnSetupUnlockSystem->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetMPLoadoutString
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// struct FString                 loadoutText                    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetMPLoadoutString ( struct FString* loadoutText )
{
	static UFunction* pFnGetMPLoadoutString = NULL;

	if ( ! pFnGetMPLoadoutString )
		pFnGetMPLoadoutString = (UFunction*) UObject::GObjObjects()->Data[ 46067 ];

	UPgUnlockSystem_execGetMPLoadoutString_Parms GetMPLoadoutString_Parms;

	pFnGetMPLoadoutString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMPLoadoutString, &GetMPLoadoutString_Parms, NULL );

	pFnGetMPLoadoutString->FunctionFlags |= 0x400;

	if ( loadoutText )
		memcpy ( loadoutText, &GetMPLoadoutString_Parms.loadoutText, 0xC );
};

// Function GridGame.PgUnlockSystem.SetupPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::SetupPlayer ( )
{
	static UFunction* pFnSetupPlayer = NULL;

	if ( ! pFnSetupPlayer )
		pFnSetupPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46066 ];

	UPgUnlockSystem_execSetupPlayer_Parms SetupPlayer_Parms;

	pFnSetupPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetupPlayer, &SetupPlayer_Parms, NULL );

	pFnSetupPlayer->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetItemsForLevelUp
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// int                            oldLevel                       ( CPF_Parm )
// int                            newLevel                       ( CPF_Parm )
// TArray< class UPgUnlockItem* > Unlocks                        ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< class UPgUnlockItem* > Upgrades                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetItemsForLevelUp ( int oldLevel, int newLevel, TArray< class UPgUnlockItem* >* Unlocks, TArray< class UPgUnlockItem* >* Upgrades )
{
	static UFunction* pFnGetItemsForLevelUp = NULL;

	if ( ! pFnGetItemsForLevelUp )
		pFnGetItemsForLevelUp = (UFunction*) UObject::GObjObjects()->Data[ 46059 ];

	UPgUnlockSystem_execGetItemsForLevelUp_Parms GetItemsForLevelUp_Parms;
	GetItemsForLevelUp_Parms.oldLevel = oldLevel;
	GetItemsForLevelUp_Parms.newLevel = newLevel;

	pFnGetItemsForLevelUp->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemsForLevelUp, &GetItemsForLevelUp_Parms, NULL );

	pFnGetItemsForLevelUp->FunctionFlags |= 0x400;

	if ( Unlocks )
		memcpy ( Unlocks, &GetItemsForLevelUp_Parms.Unlocks, 0xC );

	if ( Upgrades )
		memcpy ( Upgrades, &GetItemsForLevelUp_Parms.Upgrades, 0xC );
};

// Function GridGame.PgUnlockSystem.DoTest
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// int                            testIndex                      ( CPF_Parm )

void UPgUnlockSystem::DoTest ( int testIndex )
{
	static UFunction* pFnDoTest = NULL;

	if ( ! pFnDoTest )
		pFnDoTest = (UFunction*) UObject::GObjObjects()->Data[ 46057 ];

	UPgUnlockSystem_execDoTest_Parms DoTest_Parms;
	DoTest_Parms.testIndex = testIndex;

	pFnDoTest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDoTest, &DoTest_Parms, NULL );

	pFnDoTest->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.ResetRecent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::ResetRecent ( )
{
	static UFunction* pFnResetRecent = NULL;

	if ( ! pFnResetRecent )
		pFnResetRecent = (UFunction*) UObject::GObjObjects()->Data[ 46056 ];

	UPgUnlockSystem_execResetRecent_Parms ResetRecent_Parms;

	pFnResetRecent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetRecent, &ResetRecent_Parms, NULL );

	pFnResetRecent->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.ResetRecentlyAvailableForPurchase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::ResetRecentlyAvailableForPurchase ( )
{
	static UFunction* pFnResetRecentlyAvailableForPurchase = NULL;

	if ( ! pFnResetRecentlyAvailableForPurchase )
		pFnResetRecentlyAvailableForPurchase = (UFunction*) UObject::GObjObjects()->Data[ 46055 ];

	UPgUnlockSystem_execResetRecentlyAvailableForPurchase_Parms ResetRecentlyAvailableForPurchase_Parms;

	pFnResetRecentlyAvailableForPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetRecentlyAvailableForPurchase, &ResetRecentlyAvailableForPurchase_Parms, NULL );

	pFnResetRecentlyAvailableForPurchase->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetItemsRecentlyAvailableForPurchase
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetItemsRecentlyAvailableForPurchase ( TArray< class UPgUnlockItem* >* Items )
{
	static UFunction* pFnGetItemsRecentlyAvailableForPurchase = NULL;

	if ( ! pFnGetItemsRecentlyAvailableForPurchase )
		pFnGetItemsRecentlyAvailableForPurchase = (UFunction*) UObject::GObjObjects()->Data[ 46052 ];

	UPgUnlockSystem_execGetItemsRecentlyAvailableForPurchase_Parms GetItemsRecentlyAvailableForPurchase_Parms;

	pFnGetItemsRecentlyAvailableForPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemsRecentlyAvailableForPurchase, &GetItemsRecentlyAvailableForPurchase_Parms, NULL );

	pFnGetItemsRecentlyAvailableForPurchase->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &GetItemsRecentlyAvailableForPurchase_Parms.Items, 0xC );
};

// Function GridGame.PgUnlockSystem.GetItemsAvailableForPurchase
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetItemsAvailableForPurchase ( TArray< class UPgUnlockItem* >* Items )
{
	static UFunction* pFnGetItemsAvailableForPurchase = NULL;

	if ( ! pFnGetItemsAvailableForPurchase )
		pFnGetItemsAvailableForPurchase = (UFunction*) UObject::GObjObjects()->Data[ 46049 ];

	UPgUnlockSystem_execGetItemsAvailableForPurchase_Parms GetItemsAvailableForPurchase_Parms;

	pFnGetItemsAvailableForPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemsAvailableForPurchase, &GetItemsAvailableForPurchase_Parms, NULL );

	pFnGetItemsAvailableForPurchase->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &GetItemsAvailableForPurchase_Parms.Items, 0xC );
};

// Function GridGame.PgUnlockSystem.ResetRecentlyOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::ResetRecentlyOwned ( )
{
	static UFunction* pFnResetRecentlyOwned = NULL;

	if ( ! pFnResetRecentlyOwned )
		pFnResetRecentlyOwned = (UFunction*) UObject::GObjObjects()->Data[ 46048 ];

	UPgUnlockSystem_execResetRecentlyOwned_Parms ResetRecentlyOwned_Parms;

	pFnResetRecentlyOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetRecentlyOwned, &ResetRecentlyOwned_Parms, NULL );

	pFnResetRecentlyOwned->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.GetItemsRecentlyOwned
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetItemsRecentlyOwned ( TArray< class UPgUnlockItem* >* Items )
{
	static UFunction* pFnGetItemsRecentlyOwned = NULL;

	if ( ! pFnGetItemsRecentlyOwned )
		pFnGetItemsRecentlyOwned = (UFunction*) UObject::GObjObjects()->Data[ 46045 ];

	UPgUnlockSystem_execGetItemsRecentlyOwned_Parms GetItemsRecentlyOwned_Parms;

	pFnGetItemsRecentlyOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetItemsRecentlyOwned, &GetItemsRecentlyOwned_Parms, NULL );

	pFnGetItemsRecentlyOwned->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &GetItemsRecentlyOwned_Parms.Items, 0xC );
};

// Function GridGame.PgUnlockSystem.GetOwnedItems
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< class UPgUnlockItem* > Items                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UPgUnlockSystem::GetOwnedItems ( TArray< class UPgUnlockItem* >* Items )
{
	static UFunction* pFnGetOwnedItems = NULL;

	if ( ! pFnGetOwnedItems )
		pFnGetOwnedItems = (UFunction*) UObject::GObjObjects()->Data[ 46042 ];

	UPgUnlockSystem_execGetOwnedItems_Parms GetOwnedItems_Parms;

	pFnGetOwnedItems->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOwnedItems, &GetOwnedItems_Parms, NULL );

	pFnGetOwnedItems->FunctionFlags |= 0x400;

	if ( Items )
		memcpy ( Items, &GetOwnedItems_Parms.Items, 0xC );
};

// Function GridGame.PgUnlockSystem.ProcessChanges
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// unsigned char                  changeType                     ( CPF_Parm )

void UPgUnlockSystem::ProcessChanges ( unsigned char changeType )
{
	static UFunction* pFnProcessChanges = NULL;

	if ( ! pFnProcessChanges )
		pFnProcessChanges = (UFunction*) UObject::GObjObjects()->Data[ 46040 ];

	UPgUnlockSystem_execProcessChanges_Parms ProcessChanges_Parms;
	ProcessChanges_Parms.changeType = changeType;

	pFnProcessChanges->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnProcessChanges, &ProcessChanges_Parms, NULL );

	pFnProcessChanges->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.NewContentAvailable
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::NewContentAvailable ( )
{
	static UFunction* pFnNewContentAvailable = NULL;

	if ( ! pFnNewContentAvailable )
		pFnNewContentAvailable = (UFunction*) UObject::GObjObjects()->Data[ 46039 ];

	UPgUnlockSystem_execNewContentAvailable_Parms NewContentAvailable_Parms;

	pFnNewContentAvailable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNewContentAvailable, &NewContentAvailable_Parms, NULL );

	pFnNewContentAvailable->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.PlayerLevelChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            oldLevel                       ( CPF_Parm )
// int                            newLevel                       ( CPF_Parm )

void UPgUnlockSystem::PlayerLevelChanged ( int oldLevel, int newLevel )
{
	static UFunction* pFnPlayerLevelChanged = NULL;

	if ( ! pFnPlayerLevelChanged )
		pFnPlayerLevelChanged = (UFunction*) UObject::GObjObjects()->Data[ 46036 ];

	UPgUnlockSystem_execPlayerLevelChanged_Parms PlayerLevelChanged_Parms;
	PlayerLevelChanged_Parms.oldLevel = oldLevel;
	PlayerLevelChanged_Parms.newLevel = newLevel;

	pFnPlayerLevelChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayerLevelChanged, &PlayerLevelChanged_Parms, NULL );

	pFnPlayerLevelChanged->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.ItemPurchased
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPgUnlockItem*           Item                           ( CPF_Parm )
// int                            currentLevel                   ( CPF_Parm )

void UPgUnlockSystem::ItemPurchased ( class UPgUnlockItem* Item, int currentLevel )
{
	static UFunction* pFnItemPurchased = NULL;

	if ( ! pFnItemPurchased )
		pFnItemPurchased = (UFunction*) UObject::GObjObjects()->Data[ 46033 ];

	UPgUnlockSystem_execItemPurchased_Parms ItemPurchased_Parms;
	ItemPurchased_Parms.Item = Item;
	ItemPurchased_Parms.currentLevel = currentLevel;

	pFnItemPurchased->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnItemPurchased, &ItemPurchased_Parms, NULL );

	pFnItemPurchased->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.ResetToDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::ResetToDefaults ( )
{
	static UFunction* pFnResetToDefaults = NULL;

	if ( ! pFnResetToDefaults )
		pFnResetToDefaults = (UFunction*) UObject::GObjObjects()->Data[ 46032 ];

	UPgUnlockSystem_execResetToDefaults_Parms ResetToDefaults_Parms;

	pFnResetToDefaults->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetToDefaults, &ResetToDefaults_Parms, NULL );

	pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function GridGame.PgUnlockSystem.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPgUnlockSystem::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 46031 ];

	UPgUnlockSystem_execInitialize_Parms Initialize_Parms;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function GridGame.DESLightAttackPawn.ThrowDiscFct
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 AimDir                         ( CPF_Parm )

void ADESLightAttackPawn::eventThrowDiscFct ( struct FVector AimDir )
{
	static UFunction* pFnThrowDiscFct = NULL;

	if ( ! pFnThrowDiscFct )
		pFnThrowDiscFct = (UFunction*) UObject::GObjObjects()->Data[ 40704 ];

	ADESLightAttackPawn_eventThrowDiscFct_Parms ThrowDiscFct_Parms;
	memcpy ( &ThrowDiscFct_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnThrowDiscFct, &ThrowDiscFct_Parms, NULL );
};

// Function GridGame.DESLightAttackPawn.ThrowDisc
// [0x00020002] 
// Parameters infos:

void ADESLightAttackPawn::ThrowDisc ( )
{
	static UFunction* pFnThrowDisc = NULL;

	if ( ! pFnThrowDisc )
		pFnThrowDisc = (UFunction*) UObject::GObjObjects()->Data[ 40703 ];

	ADESLightAttackPawn_execThrowDisc_Parms ThrowDisc_Parms;

	this->ProcessEvent ( pFnThrowDisc, &ThrowDisc_Parms, NULL );
};

// Function GridGame.DESLightAttackPawn.SetDiscTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 AimDir                         ( CPF_Parm )

void ADESLightAttackPawn::eventSetDiscTarget ( struct FVector AimDir )
{
	static UFunction* pFnSetDiscTarget = NULL;

	if ( ! pFnSetDiscTarget )
		pFnSetDiscTarget = (UFunction*) UObject::GObjObjects()->Data[ 40701 ];

	ADESLightAttackPawn_eventSetDiscTarget_Parms SetDiscTarget_Parms;
	memcpy ( &SetDiscTarget_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnSetDiscTarget, &SetDiscTarget_Parms, NULL );
};

// Function GridGame.PgDisplayDebugHelper.DrawText
// [0x00020102] 
// Parameters infos:
// struct FString                 T                              ( CPF_Parm | CPF_NeedCtorLink )

void UPgDisplayDebugHelper::DrawText ( struct FString T )
{
	static UFunction* pFnDrawText = NULL;

	if ( ! pFnDrawText )
		pFnDrawText = (UFunction*) UObject::GObjObjects()->Data[ 44492 ];

	UPgDisplayDebugHelper_execDrawText_Parms DrawText_Parms;
	memcpy ( &DrawText_Parms.T, &T, 0xC );

	this->ProcessEvent ( pFnDrawText, &DrawText_Parms, NULL );
};

// Function GridGame.PgDisplayDebugHelper.IncrementIndentLevel
// [0x00020102] 
// Parameters infos:
// float                          I                              ( CPF_Parm )

void UPgDisplayDebugHelper::IncrementIndentLevel ( float I )
{
	static UFunction* pFnIncrementIndentLevel = NULL;

	if ( ! pFnIncrementIndentLevel )
		pFnIncrementIndentLevel = (UFunction*) UObject::GObjObjects()->Data[ 44490 ];

	UPgDisplayDebugHelper_execIncrementIndentLevel_Parms IncrementIndentLevel_Parms;
	IncrementIndentLevel_Parms.I = I;

	this->ProcessEvent ( pFnIncrementIndentLevel, &IncrementIndentLevel_Parms, NULL );
};

// Function GridGame.PgDisplayDebugHelper.SetDrawColor
// [0x00020102] 
// Parameters infos:
// int                            R                              ( CPF_Parm )
// int                            G                              ( CPF_Parm )
// int                            B                              ( CPF_Parm )

void UPgDisplayDebugHelper::SetDrawColor ( int R, int G, int B )
{
	static UFunction* pFnSetDrawColor = NULL;

	if ( ! pFnSetDrawColor )
		pFnSetDrawColor = (UFunction*) UObject::GObjObjects()->Data[ 44486 ];

	UPgDisplayDebugHelper_execSetDrawColor_Parms SetDrawColor_Parms;
	SetDrawColor_Parms.R = R;
	SetDrawColor_Parms.G = G;
	SetDrawColor_Parms.B = B;

	this->ProcessEvent ( pFnSetDrawColor, &SetDrawColor_Parms, NULL );
};

// Function GridGame.PgDisplayDebugHelper.ShouldDisplayDebug
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   DebugType                      ( CPF_Parm )

bool UPgDisplayDebugHelper::ShouldDisplayDebug ( struct FName DebugType )
{
	static UFunction* pFnShouldDisplayDebug = NULL;

	if ( ! pFnShouldDisplayDebug )
		pFnShouldDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 41506 ];

	UPgDisplayDebugHelper_execShouldDisplayDebug_Parms ShouldDisplayDebug_Parms;
	memcpy ( &ShouldDisplayDebug_Parms.DebugType, &DebugType, 0x8 );

	this->ProcessEvent ( pFnShouldDisplayDebug, &ShouldDisplayDebug_Parms, NULL );

	return ShouldDisplayDebug_Parms.ReturnValue;
};

// Function GridGame.PgDisplayDebugHelper.GetCanvas
// [0x00020102] 
// Parameters infos:
// class UCanvas*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UCanvas* UPgDisplayDebugHelper::GetCanvas ( )
{
	static UFunction* pFnGetCanvas = NULL;

	if ( ! pFnGetCanvas )
		pFnGetCanvas = (UFunction*) UObject::GObjObjects()->Data[ 44483 ];

	UPgDisplayDebugHelper_execGetCanvas_Parms GetCanvas_Parms;

	this->ProcessEvent ( pFnGetCanvas, &GetCanvas_Parms, NULL );

	return GetCanvas_Parms.ReturnValue;
};

// Function GridGame.PgCameraSpecifierInterface.SetCameraArchetype
// [0x00020100] 
// Parameters infos:
// class APgPlayerCamera*         newArchetype                   ( CPF_Parm )

void UPgCameraSpecifierInterface::SetCameraArchetype ( class APgPlayerCamera* newArchetype )
{
	static UFunction* pFnSetCameraArchetype = NULL;

	if ( ! pFnSetCameraArchetype )
		pFnSetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 43545 ];

	UPgCameraSpecifierInterface_execSetCameraArchetype_Parms SetCameraArchetype_Parms;
	SetCameraArchetype_Parms.newArchetype = newArchetype;

	this->ProcessEvent ( pFnSetCameraArchetype, &SetCameraArchetype_Parms, NULL );
};

// Function GridGame.PgCameraSpecifierInterface.GetCameraArchetype
// [0x00020100] 
// Parameters infos:
// class APgPlayerCamera*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APgPlayerCamera* UPgCameraSpecifierInterface::GetCameraArchetype ( )
{
	static UFunction* pFnGetCameraArchetype = NULL;

	if ( ! pFnGetCameraArchetype )
		pFnGetCameraArchetype = (UFunction*) UObject::GObjObjects()->Data[ 43543 ];

	UPgCameraSpecifierInterface_execGetCameraArchetype_Parms GetCameraArchetype_Parms;

	this->ProcessEvent ( pFnGetCameraArchetype, &GetCameraArchetype_Parms, NULL );

	return GetCameraArchetype_Parms.ReturnValue;
};

// Function GridGame.PgDebugCamera.UpdateViewTarget
// [0x00420002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void APgDebugCamera::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 44433 ];

	APgDebugCamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function GridGame.PgDebugCamera.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgDebugCamera::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 44429 ];

	APgDebugCamera_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgCheatManagerDebugCamera.ToggleDebugFixedCam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerDebugCamera::ToggleDebugFixedCam ( )
{
	static UFunction* pFnToggleDebugFixedCam = NULL;

	if ( ! pFnToggleDebugFixedCam )
		pFnToggleDebugFixedCam = (UFunction*) UObject::GObjObjects()->Data[ 43972 ];

	UPgCheatManagerDebugCamera_execToggleDebugFixedCam_Parms ToggleDebugFixedCam_Parms;

	this->ProcessEvent ( pFnToggleDebugFixedCam, &ToggleDebugFixedCam_Parms, NULL );
};

// Function GridGame.PgCheatManagerDebugCamera.ToggleDebugCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPgCheatManagerDebugCamera::ToggleDebugCamera ( )
{
	static UFunction* pFnToggleDebugCamera = NULL;

	if ( ! pFnToggleDebugCamera )
		pFnToggleDebugCamera = (UFunction*) UObject::GObjObjects()->Data[ 43969 ];

	UPgCheatManagerDebugCamera_execToggleDebugCamera_Parms ToggleDebugCamera_Parms;

	this->ProcessEvent ( pFnToggleDebugCamera, &ToggleDebugCamera_Parms, NULL );
};

// Function GridGame.PgDebugCameraController.DebugCamToFixedCamEnd
// [0x00020002] 
// Parameters infos:

void APgDebugCameraController::DebugCamToFixedCamEnd ( )
{
	static UFunction* pFnDebugCamToFixedCamEnd = NULL;

	if ( ! pFnDebugCamToFixedCamEnd )
		pFnDebugCamToFixedCamEnd = (UFunction*) UObject::GObjObjects()->Data[ 44456 ];

	APgDebugCameraController_execDebugCamToFixedCamEnd_Parms DebugCamToFixedCamEnd_Parms;

	this->ProcessEvent ( pFnDebugCamToFixedCamEnd, &DebugCamToFixedCamEnd_Parms, NULL );
};

// Function GridGame.PgDebugCameraController.DebugCamToFixedCamStart
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APgDebugCameraController::DebugCamToFixedCamStart ( )
{
	static UFunction* pFnDebugCamToFixedCamStart = NULL;

	if ( ! pFnDebugCamToFixedCamStart )
		pFnDebugCamToFixedCamStart = (UFunction*) UObject::GObjObjects()->Data[ 44450 ];

	APgDebugCameraController_execDebugCamToFixedCamStart_Parms DebugCamToFixedCamStart_Parms;

	this->ProcessEvent ( pFnDebugCamToFixedCamStart, &DebugCamToFixedCamStart_Parms, NULL );
};

// Function GridGame.PgDebugCameraController.AmInDebugFixedCam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APgDebugCameraController::AmInDebugFixedCam ( )
{
	static UFunction* pFnAmInDebugFixedCam = NULL;

	if ( ! pFnAmInDebugFixedCam )
		pFnAmInDebugFixedCam = (UFunction*) UObject::GObjObjects()->Data[ 43970 ];

	APgDebugCameraController_execAmInDebugFixedCam_Parms AmInDebugFixedCam_Parms;

	this->ProcessEvent ( pFnAmInDebugFixedCam, &AmInDebugFixedCam_Parms, NULL );

	return AmInDebugFixedCam_Parms.ReturnValue;
};

// Function GridGame.PgDebugCameraController.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void APgDebugCameraController::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 44446 ];

	APgDebugCameraController_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function GridGame.PgDebugCameraController.OnDeactivate
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void APgDebugCameraController::OnDeactivate ( class APlayerController* PC )
{
	static UFunction* pFnOnDeactivate = NULL;

	if ( ! pFnOnDeactivate )
		pFnOnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 44444 ];

	APgDebugCameraController_execOnDeactivate_Parms OnDeactivate_Parms;
	OnDeactivate_Parms.PC = PC;

	this->ProcessEvent ( pFnOnDeactivate, &OnDeactivate_Parms, NULL );
};

// Function GridGame.PgDebugCameraController.OnActivate
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void APgDebugCameraController::OnActivate ( class APlayerController* PC )
{
	static UFunction* pFnOnActivate = NULL;

	if ( ! pFnOnActivate )
		pFnOnActivate = (UFunction*) UObject::GObjObjects()->Data[ 44442 ];

	APgDebugCameraController_execOnActivate_Parms OnActivate_Parms;
	OnActivate_Parms.PC = PC;

	this->ProcessEvent ( pFnOnActivate, &OnActivate_Parms, NULL );
};

// Function GridGame.PgDebugCameraController.CopyCommonPlayerControllerSettings
// [0x00020002] 
// Parameters infos:
// class APlayerController*       From                           ( CPF_Parm )
// class APlayerController*       To                             ( CPF_Parm )

void APgDebugCameraController::CopyCommonPlayerControllerSettings ( class APlayerController* From, class APlayerController* To )
{
	static UFunction* pFnCopyCommonPlayerControllerSettings = NULL;

	if ( ! pFnCopyCommonPlayerControllerSettings )
		pFnCopyCommonPlayerControllerSettings = (UFunction*) UObject::GObjObjects()->Data[ 44439 ];

	APgDebugCameraController_execCopyCommonPlayerControllerSettings_Parms CopyCommonPlayerControllerSettings_Parms;
	CopyCommonPlayerControllerSettings_Parms.From = From;
	CopyCommonPlayerControllerSettings_Parms.To = To;

	this->ProcessEvent ( pFnCopyCommonPlayerControllerSettings, &CopyCommonPlayerControllerSettings_Parms, NULL );
};

// Function GridGame.PgDebugCameraInput.PlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UPgDebugCameraInput::eventPlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 44461 ];

	UPgDebugCameraInput_eventPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function GridGame.PgSeqAct_ClientSetCameraTarget.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UPgSeqAct_ClientSetCameraTarget::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 49801 ];

	UPgSeqAct_ClientSetCameraTarget_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.ToString
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UPgSavedMove::ToString ( )
{
	static UFunction* pFnToString = NULL;

	if ( ! pFnToString )
		pFnToString = (UFunction*) UObject::GObjObjects()->Data[ 49641 ];

	UPgSavedMove_execToString_Parms ToString_Parms;

	this->ProcessEvent ( pFnToString, &ToString_Parms, NULL );

	return ToString_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.SetFlags
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Flags                          ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

unsigned char UPgSavedMove::SetFlags ( unsigned char Flags, class APlayerController* PC )
{
	static UFunction* pFnSetFlags = NULL;

	if ( ! pFnSetFlags )
		pFnSetFlags = (UFunction*) UObject::GObjObjects()->Data[ 49637 ];

	UPgSavedMove_execSetFlags_Parms SetFlags_Parms;
	SetFlags_Parms.Flags = Flags;
	SetFlags_Parms.PC = PC;

	this->ProcessEvent ( pFnSetFlags, &SetFlags_Parms, NULL );

	return SetFlags_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.CompressedFlags
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UPgSavedMove::CompressedFlags ( )
{
	static UFunction* pFnCompressedFlags = NULL;

	if ( ! pFnCompressedFlags )
		pFnCompressedFlags = (UFunction*) UObject::GObjObjects()->Data[ 45457 ];

	UPgSavedMove_execCompressedFlags_Parms CompressedFlags_Parms;

	this->ProcessEvent ( pFnCompressedFlags, &CompressedFlags_Parms, NULL );

	return CompressedFlags_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.SetPawnToStartPosition
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UPgSavedMove::SetPawnToStartPosition ( class APawn* P )
{
	static UFunction* pFnSetPawnToStartPosition = NULL;

	if ( ! pFnSetPawnToStartPosition )
		pFnSetPawnToStartPosition = (UFunction*) UObject::GObjObjects()->Data[ 45450 ];

	UPgSavedMove_execSetPawnToStartPosition_Parms SetPawnToStartPosition_Parms;
	SetPawnToStartPosition_Parms.P = P;

	this->ProcessEvent ( pFnSetPawnToStartPosition, &SetPawnToStartPosition_Parms, NULL );
};

// Function GridGame.PgSavedMove.CombineWith
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UPgSavedMove*            moveToCombine                  ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )

void UPgSavedMove::CombineWith ( class UPgSavedMove* moveToCombine, class APawn* P )
{
	static UFunction* pFnCombineWith = NULL;

	if ( ! pFnCombineWith )
		pFnCombineWith = (UFunction*) UObject::GObjObjects()->Data[ 45473 ];

	UPgSavedMove_execCombineWith_Parms CombineWith_Parms;
	CombineWith_Parms.moveToCombine = moveToCombine;
	CombineWith_Parms.P = P;

	this->ProcessEvent ( pFnCombineWith, &CombineWith_Parms, NULL );
};

// Function GridGame.PgSavedMove.CanCombineWith
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USavedMove*              OlderMoveToCombine             ( CPF_Parm )
// class APawn*                   inPawn                         ( CPF_Parm )
// float                          MaxDelta                       ( CPF_Parm )

bool UPgSavedMove::CanCombineWith ( class USavedMove* OlderMoveToCombine, class APawn* inPawn, float MaxDelta )
{
	static UFunction* pFnCanCombineWith = NULL;

	if ( ! pFnCanCombineWith )
		pFnCanCombineWith = (UFunction*) UObject::GObjObjects()->Data[ 49624 ];

	UPgSavedMove_execCanCombineWith_Parms CanCombineWith_Parms;
	CanCombineWith_Parms.OlderMoveToCombine = OlderMoveToCombine;
	CanCombineWith_Parms.inPawn = inPawn;
	CanCombineWith_Parms.MaxDelta = MaxDelta;

	this->ProcessEvent ( pFnCanCombineWith, &CanCombineWith_Parms, NULL );

	return CanCombineWith_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.IsImportantMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 CompareAccel                   ( CPF_Parm )

bool UPgSavedMove::IsImportantMove ( struct FVector CompareAccel )
{
	static UFunction* pFnIsImportantMove = NULL;

	if ( ! pFnIsImportantMove )
		pFnIsImportantMove = (UFunction*) UObject::GObjObjects()->Data[ 49621 ];

	UPgSavedMove_execIsImportantMove_Parms IsImportantMove_Parms;
	memcpy ( &IsImportantMove_Parms.CompareAccel, &CompareAccel, 0xC );

	this->ProcessEvent ( pFnIsImportantMove, &IsImportantMove_Parms, NULL );

	return IsImportantMove_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.PostAdjustment
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class APgPlayerController*     P                              ( CPF_Parm )

void UPgSavedMove::PostAdjustment ( class APgPlayerController* P )
{
	static UFunction* pFnPostAdjustment = NULL;

	if ( ! pFnPostAdjustment )
		pFnPostAdjustment = (UFunction*) UObject::GObjObjects()->Data[ 45459 ];

	UPgSavedMove_execPostAdjustment_Parms PostAdjustment_Parms;
	PostAdjustment_Parms.P = P;

	this->ProcessEvent ( pFnPostAdjustment, &PostAdjustment_Parms, NULL );
};

// Function GridGame.PgSavedMove.PostUpdate
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )

void UPgSavedMove::PostUpdate ( class APlayerController* P )
{
	static UFunction* pFnPostUpdate = NULL;

	if ( ! pFnPostUpdate )
		pFnPostUpdate = (UFunction*) UObject::GObjObjects()->Data[ 49618 ];

	UPgSavedMove_execPostUpdate_Parms PostUpdate_Parms;
	PostUpdate_Parms.P = P;

	this->ProcessEvent ( pFnPostUpdate, &PostUpdate_Parms, NULL );
};

// Function GridGame.PgSavedMove.PreUpdate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class APgPlayerController*     P                              ( CPF_Parm )

void UPgSavedMove::PreUpdate ( class APgPlayerController* P )
{
	static UFunction* pFnPreUpdate = NULL;

	if ( ! pFnPreUpdate )
		pFnPreUpdate = (UFunction*) UObject::GObjObjects()->Data[ 45472 ];

	UPgSavedMove_execPreUpdate_Parms PreUpdate_Parms;
	PreUpdate_Parms.P = P;

	this->ProcessEvent ( pFnPreUpdate, &PreUpdate_Parms, NULL );
};

// Function GridGame.PgSavedMove.SetMoveFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 newAccel                       ( CPF_Parm )
// unsigned char                  InDoubleClick                  ( CPF_Parm )

void UPgSavedMove::SetMoveFor ( class APlayerController* P, float DeltaTime, struct FVector newAccel, unsigned char InDoubleClick )
{
	static UFunction* pFnSetMoveFor = NULL;

	if ( ! pFnSetMoveFor )
		pFnSetMoveFor = (UFunction*) UObject::GObjObjects()->Data[ 49609 ];

	UPgSavedMove_execSetMoveFor_Parms SetMoveFor_Parms;
	SetMoveFor_Parms.P = P;
	SetMoveFor_Parms.DeltaTime = DeltaTime;
	memcpy ( &SetMoveFor_Parms.newAccel, &newAccel, 0xC );
	SetMoveFor_Parms.InDoubleClick = InDoubleClick;

	this->ProcessEvent ( pFnSetMoveFor, &SetMoveFor_Parms, NULL );
};

// Function GridGame.PgSavedMove.Clear
// [0x00020002] 
// Parameters infos:

void UPgSavedMove::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 49608 ];

	UPgSavedMove_execClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function GridGame.PgSavedMove.IsComboMove
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSavedMove::IsComboMove ( )
{
	static UFunction* pFnIsComboMove = NULL;

	if ( ! pFnIsComboMove )
		pFnIsComboMove = (UFunction*) UObject::GObjObjects()->Data[ 45547 ];

	UPgSavedMove_execIsComboMove_Parms IsComboMove_Parms;

	this->ProcessEvent ( pFnIsComboMove, &IsComboMove_Parms, NULL );

	return IsComboMove_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.GetMoveRepStruct
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct FPgSavedMoveRepParams   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FPgSavedMoveRepParams UPgSavedMove::GetMoveRepStruct ( )
{
	static UFunction* pFnGetMoveRepStruct = NULL;

	if ( ! pFnGetMoveRepStruct )
		pFnGetMoveRepStruct = (UFunction*) UObject::GObjObjects()->Data[ 45557 ];

	UPgSavedMove_execGetMoveRepStruct_Parms GetMoveRepStruct_Parms;

	this->ProcessEvent ( pFnGetMoveRepStruct, &GetMoveRepStruct_Parms, NULL );

	return GetMoveRepStruct_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.GetComboRepStruct
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct FPgSavedMoveComboParams ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FPgSavedMoveComboParams UPgSavedMove::GetComboRepStruct ( )
{
	static UFunction* pFnGetComboRepStruct = NULL;

	if ( ! pFnGetComboRepStruct )
		pFnGetComboRepStruct = (UFunction*) UObject::GObjObjects()->Data[ 45549 ];

	UPgSavedMove_execGetComboRepStruct_Parms GetComboRepStruct_Parms;

	this->ProcessEvent ( pFnGetComboRepStruct, &GetComboRepStruct_Parms, NULL );

	return GetComboRepStruct_Parms.ReturnValue;
};

// Function GridGame.PgSavedMove.CopyComboChainArray
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// class UPgSpecialMoveAsset*     fromArray                      ( CPF_Const | CPF_Parm | CPF_OutParm )
// class UPgSpecialMoveAsset*     toArray                        ( CPF_Parm | CPF_OutParm )

void UPgSavedMove::CopyComboChainArray ( class UPgSpecialMoveAsset** fromArray, class UPgSpecialMoveAsset** toArray )
{
	static UFunction* pFnCopyComboChainArray = NULL;

	if ( ! pFnCopyComboChainArray )
		pFnCopyComboChainArray = (UFunction*) UObject::GObjObjects()->Data[ 49602 ];

	UPgSavedMove_execCopyComboChainArray_Parms CopyComboChainArray_Parms;

	this->ProcessEvent ( pFnCopyComboChainArray, &CopyComboChainArray_Parms, NULL );

	if ( fromArray )
		memcpy ( fromArray, &CopyComboChainArray_Parms.fromArray, 0x20 );

	if ( toArray )
		memcpy ( toArray, &CopyComboChainArray_Parms.toArray, 0x20 );
};

// Function GridGame.PgSeqAct_UIGetObjectProperty.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UPgSeqAct_UIGetObjectProperty::eventIsValidLevelSequenceObject ( )
{
	static UFunction* pFnIsValidLevelSequenceObject = NULL;

	if ( ! pFnIsValidLevelSequenceObject )
		pFnIsValidLevelSequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 50042 ];

	UPgSeqAct_UIGetObjectProperty_eventIsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;

	this->ProcessEvent ( pFnIsValidLevelSequenceObject, &IsValidLevelSequenceObject_Parms, NULL );

	return IsValidLevelSequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgSeqAct_UIGetObjectProperty.IsValidUISequenceObject
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUIScreenObject*         TargetObject                   ( CPF_OptionalParm | CPF_Parm )

bool UPgSeqAct_UIGetObjectProperty::eventIsValidUISequenceObject ( class UUIScreenObject* TargetObject )
{
	static UFunction* pFnIsValidUISequenceObject = NULL;

	if ( ! pFnIsValidUISequenceObject )
		pFnIsValidUISequenceObject = (UFunction*) UObject::GObjObjects()->Data[ 50039 ];

	UPgSeqAct_UIGetObjectProperty_eventIsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;

	this->ProcessEvent ( pFnIsValidUISequenceObject, &IsValidUISequenceObject_Parms, NULL );

	return IsValidUISequenceObject_Parms.ReturnValue;
};

// Function GridGame.PgVehicleWeapon.GetVehicleWeaponFireTriggerTag
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BarrelIndex                    ( CPF_Parm )
// int                            FireMode                       ( CPF_Parm )

struct FName APgVehicleWeapon::GetVehicleWeaponFireTriggerTag ( int BarrelIndex, int FireMode )
{
	static UFunction* pFnGetVehicleWeaponFireTriggerTag = NULL;

	if ( ! pFnGetVehicleWeaponFireTriggerTag )
		pFnGetVehicleWeaponFireTriggerTag = (UFunction*) UObject::GObjObjects()->Data[ 51038 ];

	APgVehicleWeapon_execGetVehicleWeaponFireTriggerTag_Parms GetVehicleWeaponFireTriggerTag_Parms;
	GetVehicleWeaponFireTriggerTag_Parms.BarrelIndex = BarrelIndex;
	GetVehicleWeaponFireTriggerTag_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnGetVehicleWeaponFireTriggerTag, &GetVehicleWeaponFireTriggerTag_Parms, NULL );

	return GetVehicleWeaponFireTriggerTag_Parms.ReturnValue;
};

// Function GridGame.PgVehicleWeapon.CustomFire
// [0x00020102] 
// Parameters infos:

void APgVehicleWeapon::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51245 ];

	APgVehicleWeapon_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function GridGame.PgVehicleWeapon.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void APgVehicleWeapon::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 51242 ];

	APgVehicleWeapon_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function GridGame.PgVehicleWeapon.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void APgVehicleWeapon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51240 ];

	APgVehicleWeapon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function GridGame.PgVehicleVolume.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool APgVehicleVolume::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 51226 ];

	APgVehicleVolume_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function GridGame.PgVehicleVolume.PawnLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void APgVehicleVolume::eventPawnLeavingVolume ( class APawn* Other )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 51221 ];

	APgVehicleVolume_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function GridGame.PgVehicleVolume.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void APgVehicleVolume::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 51218 ];

	APgVehicleVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function GridGame.PgWeapFireTypeInstantHit.CustomFire
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Weapon                         ( CPF_Parm )

void UPgWeapFireTypeInstantHit::CustomFire ( class AWeapon* Weapon )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 51269 ];

	UPgWeapFireTypeInstantHit_execCustomFire_Parms CustomFire_Parms;
	CustomFire_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif