/*
#############################################################################################
# Ravaged Beta (Beta) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: UTGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function UTGame.UTCarriedObject.CheckPain
// [0x00020000] 
// Parameters infos:

void AUTCarriedObject::CheckPain ( )
{
	static UFunction* pFnCheckPain = NULL;

	if ( ! pFnCheckPain )
		pFnCheckPain = (UFunction*) UObject::GObjObjects()->Data[ 52266 ];

	AUTCarriedObject_execCheckPain_Parms CheckPain_Parms;

	this->ProcessEvent ( pFnCheckPain, &CheckPain_Parms, NULL );
};

// Function UTGame.UTCarriedObject.CheckFit
// [0x00020000] 
// Parameters infos:

void AUTCarriedObject::CheckFit ( )
{
	static UFunction* pFnCheckFit = NULL;

	if ( ! pFnCheckFit )
		pFnCheckFit = (UFunction*) UObject::GObjObjects()->Data[ 52265 ];

	AUTCarriedObject_execCheckFit_Parms CheckFit_Parms;

	this->ProcessEvent ( pFnCheckFit, &CheckFit_Parms, NULL );
};

// Function UTGame.UTCarriedObject.AutoSendHome
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::AutoSendHome ( )
{
	static UFunction* pFnAutoSendHome = NULL;

	if ( ! pFnAutoSendHome )
		pFnAutoSendHome = (UFunction*) UObject::GObjObjects()->Data[ 52238 ];

	AUTCarriedObject_execAutoSendHome_Parms AutoSendHome_Parms;

	this->ProcessEvent ( pFnAutoSendHome, &AutoSendHome_Parms, NULL );
};

// Function UTGame.UTCarriedObject.CheckTouching
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::CheckTouching ( )
{
	static UFunction* pFnCheckTouching = NULL;

	if ( ! pFnCheckTouching )
		pFnCheckTouching = (UFunction*) UObject::GObjObjects()->Data[ 52234 ];

	AUTCarriedObject_execCheckTouching_Parms CheckTouching_Parms;

	this->ProcessEvent ( pFnCheckTouching, &CheckTouching_Parms, NULL );
};

// Function UTGame.UTCarriedObject.LogDropped
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::LogDropped ( class AController* EventInstigator )
{
	static UFunction* pFnLogDropped = NULL;

	if ( ! pFnLogDropped )
		pFnLogDropped = (UFunction*) UObject::GObjObjects()->Data[ 52231 ];

	AUTCarriedObject_execLogDropped_Parms LogDropped_Parms;
	LogDropped_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogDropped, &LogDropped_Parms, NULL );
};

// Function UTGame.UTCarriedObject.LogReturned
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::LogReturned ( class AController* EventInstigator )
{
	static UFunction* pFnLogReturned = NULL;

	if ( ! pFnLogReturned )
		pFnLogReturned = (UFunction*) UObject::GObjObjects()->Data[ 52229 ];

	AUTCarriedObject_execLogReturned_Parms LogReturned_Parms;
	LogReturned_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogReturned, &LogReturned_Parms, NULL );
};

// Function UTGame.UTCarriedObject.LogTaken
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::LogTaken ( class AController* EventInstigator )
{
	static UFunction* pFnLogTaken = NULL;

	if ( ! pFnLogTaken )
		pFnLogTaken = (UFunction*) UObject::GObjObjects()->Data[ 52227 ];

	AUTCarriedObject_execLogTaken_Parms LogTaken_Parms;
	LogTaken_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogTaken, &LogTaken_Parms, NULL );
};

// Function UTGame.UTCarriedObject.GetKismetEventObjective
// [0x00020002] 
// Parameters infos:
// class AUDKGameObjective*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUDKGameObjective* AUTCarriedObject::GetKismetEventObjective ( )
{
	static UFunction* pFnGetKismetEventObjective = NULL;

	if ( ! pFnGetKismetEventObjective )
		pFnGetKismetEventObjective = (UFunction*) UObject::GObjObjects()->Data[ 52225 ];

	AUTCarriedObject_execGetKismetEventObjective_Parms GetKismetEventObjective_Parms;

	this->ProcessEvent ( pFnGetKismetEventObjective, &GetKismetEventObjective_Parms, NULL );

	return GetKismetEventObjective_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.Landed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void AUTCarriedObject::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 52220 ];

	AUTCarriedObject_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function UTGame.UTCarriedObject.NotReachableBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTCarriedObject::eventNotReachableBy ( class APawn* P )
{
	static UFunction* pFnNotReachableBy = NULL;

	if ( ! pFnNotReachableBy )
		pFnNotReachableBy = (UFunction*) UObject::GObjObjects()->Data[ 52218 ];

	AUTCarriedObject_eventNotReachableBy_Parms NotReachableBy_Parms;
	NotReachableBy_Parms.P = P;

	this->ProcessEvent ( pFnNotReachableBy, &NotReachableBy_Parms, NULL );
};

// Function UTGame.UTCarriedObject.ClientReturnedHome
// [0x00020102] 
// Parameters infos:

void AUTCarriedObject::ClientReturnedHome ( )
{
	static UFunction* pFnClientReturnedHome = NULL;

	if ( ! pFnClientReturnedHome )
		pFnClientReturnedHome = (UFunction*) UObject::GObjObjects()->Data[ 52217 ];

	AUTCarriedObject_execClientReturnedHome_Parms ClientReturnedHome_Parms;

	this->ProcessEvent ( pFnClientReturnedHome, &ClientReturnedHome_Parms, NULL );
};

// Function UTGame.UTCarriedObject.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTCarriedObject::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 52215 ];

	AUTCarriedObject_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTCarriedObject.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void AUTCarriedObject::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 52213 ];

	AUTCarriedObject_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function UTGame.UTCarriedObject.Touch
// [0x00020822] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTCarriedObject::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 52208 ];

	AUTCarriedObject_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTCarriedObject.ValidHolder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTCarriedObject::ValidHolder ( class AActor* Other )
{
	static UFunction* pFnValidHolder = NULL;

	if ( ! pFnValidHolder )
		pFnValidHolder = (UFunction*) UObject::GObjObjects()->Data[ 52202 ];

	AUTCarriedObject_execValidHolder_Parms ValidHolder_Parms;
	ValidHolder_Parms.Other = Other;

	this->ProcessEvent ( pFnValidHolder, &ValidHolder_Parms, NULL );

	return ValidHolder_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.Position
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTCarriedObject::Position ( )
{
	static UFunction* pFnPosition = NULL;

	if ( ! pFnPosition )
		pFnPosition = (UFunction*) UObject::GObjObjects()->Data[ 52200 ];

	AUTCarriedObject_execPosition_Parms Position_Parms;

	this->ProcessEvent ( pFnPosition, &Position_Parms, NULL );

	return Position_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.ClearHolder
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::ClearHolder ( )
{
	static UFunction* pFnClearHolder = NULL;

	if ( ! pFnClearHolder )
		pFnClearHolder = (UFunction*) UObject::GObjObjects()->Data[ 52195 ];

	AUTCarriedObject_execClearHolder_Parms ClearHolder_Parms;

	this->ProcessEvent ( pFnClearHolder, &ClearHolder_Parms, NULL );
};

// Function UTGame.UTCarriedObject.CalcSetHome
// [0x00080002] 
// Parameters infos:

void AUTCarriedObject::CalcSetHome ( )
{
	static UFunction* pFnCalcSetHome = NULL;

	if ( ! pFnCalcSetHome )
		pFnCalcSetHome = (UFunction*) UObject::GObjObjects()->Data[ 52193 ];

	AUTCarriedObject_execCalcSetHome_Parms CalcSetHome_Parms;

	this->ProcessEvent ( pFnCalcSetHome, &CalcSetHome_Parms, NULL );
};

// Function UTGame.UTCarriedObject.BroadcastTakenDroppedMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::BroadcastTakenDroppedMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastTakenDroppedMessage = NULL;

	if ( ! pFnBroadcastTakenDroppedMessage )
		pFnBroadcastTakenDroppedMessage = (UFunction*) UObject::GObjObjects()->Data[ 52191 ];

	AUTCarriedObject_execBroadcastTakenDroppedMessage_Parms BroadcastTakenDroppedMessage_Parms;
	BroadcastTakenDroppedMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastTakenDroppedMessage, &BroadcastTakenDroppedMessage_Parms, NULL );
};

// Function UTGame.UTCarriedObject.BroadcastTakenFromBaseMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::BroadcastTakenFromBaseMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastTakenFromBaseMessage = NULL;

	if ( ! pFnBroadcastTakenFromBaseMessage )
		pFnBroadcastTakenFromBaseMessage = (UFunction*) UObject::GObjObjects()->Data[ 52189 ];

	AUTCarriedObject_execBroadcastTakenFromBaseMessage_Parms BroadcastTakenFromBaseMessage_Parms;
	BroadcastTakenFromBaseMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastTakenFromBaseMessage, &BroadcastTakenFromBaseMessage_Parms, NULL );
};

// Function UTGame.UTCarriedObject.BroadcastDroppedMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void AUTCarriedObject::BroadcastDroppedMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastDroppedMessage = NULL;

	if ( ! pFnBroadcastDroppedMessage )
		pFnBroadcastDroppedMessage = (UFunction*) UObject::GObjObjects()->Data[ 52187 ];

	AUTCarriedObject_execBroadcastDroppedMessage_Parms BroadcastDroppedMessage_Parms;
	BroadcastDroppedMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastDroppedMessage, &BroadcastDroppedMessage_Parms, NULL );
};

// Function UTGame.UTCarriedObject.BroadcastReturnedMessage
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::BroadcastReturnedMessage ( )
{
	static UFunction* pFnBroadcastReturnedMessage = NULL;

	if ( ! pFnBroadcastReturnedMessage )
		pFnBroadcastReturnedMessage = (UFunction*) UObject::GObjObjects()->Data[ 52186 ];

	AUTCarriedObject_execBroadcastReturnedMessage_Parms BroadcastReturnedMessage_Parms;

	this->ProcessEvent ( pFnBroadcastReturnedMessage, &BroadcastReturnedMessage_Parms, NULL );
};

// Function UTGame.UTCarriedObject.KismetSendHome
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::KismetSendHome ( )
{
	static UFunction* pFnKismetSendHome = NULL;

	if ( ! pFnKismetSendHome )
		pFnKismetSendHome = (UFunction*) UObject::GObjObjects()->Data[ 52185 ];

	AUTCarriedObject_execKismetSendHome_Parms KismetSendHome_Parms;

	this->ProcessEvent ( pFnKismetSendHome, &KismetSendHome_Parms, NULL );
};

// Function UTGame.UTCarriedObject.SendHome
// [0x00020002] 
// Parameters infos:
// class AController*             Returner                       ( CPF_Parm )

void AUTCarriedObject::SendHome ( class AController* Returner )
{
	static UFunction* pFnSendHome = NULL;

	if ( ! pFnSendHome )
		pFnSendHome = (UFunction*) UObject::GObjObjects()->Data[ 52182 ];

	AUTCarriedObject_execSendHome_Parms SendHome_Parms;
	SendHome_Parms.Returner = Returner;

	this->ProcessEvent ( pFnSendHome, &SendHome_Parms, NULL );
};

// Function UTGame.UTCarriedObject.Drop
// [0x00024002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void AUTCarriedObject::Drop ( class AController* Killer )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 52179 ];

	AUTCarriedObject_execDrop_Parms Drop_Parms;
	Drop_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );
};

// Function UTGame.UTCarriedObject.Score
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::Score ( )
{
	static UFunction* pFnScore = NULL;

	if ( ! pFnScore )
		pFnScore = (UFunction*) UObject::GObjObjects()->Data[ 52178 ];

	AUTCarriedObject_execScore_Parms Score_Parms;

	this->ProcessEvent ( pFnScore, &Score_Parms, NULL );
};

// Function UTGame.UTCarriedObject.SendFlagMessage
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTCarriedObject::SendFlagMessage ( class AController* C )
{
	static UFunction* pFnSendFlagMessage = NULL;

	if ( ! pFnSendFlagMessage )
		pFnSendFlagMessage = (UFunction*) UObject::GObjObjects()->Data[ 52176 ];

	AUTCarriedObject_execSendFlagMessage_Parms SendFlagMessage_Parms;
	SendFlagMessage_Parms.C = C;

	this->ProcessEvent ( pFnSendFlagMessage, &SendFlagMessage_Parms, NULL );
};

// Function UTGame.UTCarriedObject.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTCarriedObject::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 52170 ];

	AUTCarriedObject_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function UTGame.UTCarriedObject.RenderEnemyMapIcon
// [0x00820102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// class AUTGameObjective*        NearbyObjective                ( CPF_Parm )

void AUTCarriedObject::RenderEnemyMapIcon ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, class AUTGameObjective* NearbyObjective )
{
	static UFunction* pFnRenderEnemyMapIcon = NULL;

	if ( ! pFnRenderEnemyMapIcon )
		pFnRenderEnemyMapIcon = (UFunction*) UObject::GObjObjects()->Data[ 52160 ];

	AUTCarriedObject_execRenderEnemyMapIcon_Parms RenderEnemyMapIcon_Parms;
	RenderEnemyMapIcon_Parms.MP = MP;
	RenderEnemyMapIcon_Parms.Canvas = Canvas;
	RenderEnemyMapIcon_Parms.PlayerOwner = PlayerOwner;
	RenderEnemyMapIcon_Parms.NearbyObjective = NearbyObjective;

	this->ProcessEvent ( pFnRenderEnemyMapIcon, &RenderEnemyMapIcon_Parms, NULL );
};

// Function UTGame.UTCarriedObject.RenderMapIcon
// [0x00020102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )

void AUTCarriedObject::RenderMapIcon ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner )
{
	static UFunction* pFnRenderMapIcon = NULL;

	if ( ! pFnRenderMapIcon )
		pFnRenderMapIcon = (UFunction*) UObject::GObjObjects()->Data[ 52155 ];

	AUTCarriedObject_execRenderMapIcon_Parms RenderMapIcon_Parms;
	RenderMapIcon_Parms.MP = MP;
	RenderMapIcon_Parms.Canvas = Canvas;
	RenderMapIcon_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnRenderMapIcon, &RenderMapIcon_Parms, NULL );
};

// Function UTGame.UTCarriedObject.DrawIcon
// [0x00820102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 IconLocation                   ( CPF_Parm )
// float                          IconWidth                      ( CPF_Parm )
// float                          IconAlpha                      ( CPF_Parm )

void AUTCarriedObject::DrawIcon ( class UCanvas* Canvas, struct FVector IconLocation, float IconWidth, float IconAlpha )
{
	static UFunction* pFnDrawIcon = NULL;

	if ( ! pFnDrawIcon )
		pFnDrawIcon = (UFunction*) UObject::GObjObjects()->Data[ 52148 ];

	AUTCarriedObject_execDrawIcon_Parms DrawIcon_Parms;
	DrawIcon_Parms.Canvas = Canvas;
	memcpy ( &DrawIcon_Parms.IconLocation, &IconLocation, 0xC );
	DrawIcon_Parms.IconWidth = IconWidth;
	DrawIcon_Parms.IconAlpha = IconAlpha;

	this->ProcessEvent ( pFnDrawIcon, &DrawIcon_Parms, NULL );
};

// Function UTGame.UTCarriedObject.GetIconTexture
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* AUTCarriedObject::GetIconTexture ( )
{
	static UFunction* pFnGetIconTexture = NULL;

	if ( ! pFnGetIconTexture )
		pFnGetIconTexture = (UFunction*) UObject::GObjObjects()->Data[ 52146 ];

	AUTCarriedObject_execGetIconTexture_Parms GetIconTexture_Parms;

	this->ProcessEvent ( pFnGetIconTexture, &GetIconTexture_Parms, NULL );

	return GetIconTexture_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.HighlightOnMinimap
// [0x00020102] 
// Parameters infos:
// int                            Switch                         ( CPF_Parm )

void AUTCarriedObject::HighlightOnMinimap ( int Switch )
{
	static UFunction* pFnHighlightOnMinimap = NULL;

	if ( ! pFnHighlightOnMinimap )
		pFnHighlightOnMinimap = (UFunction*) UObject::GObjObjects()->Data[ 52144 ];

	AUTCarriedObject_execHighlightOnMinimap_Parms HighlightOnMinimap_Parms;
	HighlightOnMinimap_Parms.Switch = Switch;

	this->ProcessEvent ( pFnHighlightOnMinimap, &HighlightOnMinimap_Parms, NULL );
};

// Function UTGame.UTCarriedObject.ShouldMinimapRenderFor
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )

bool AUTCarriedObject::ShouldMinimapRenderFor ( class APlayerController* PC )
{
	static UFunction* pFnShouldMinimapRenderFor = NULL;

	if ( ! pFnShouldMinimapRenderFor )
		pFnShouldMinimapRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 52141 ];

	AUTCarriedObject_execShouldMinimapRenderFor_Parms ShouldMinimapRenderFor_Parms;
	ShouldMinimapRenderFor_Parms.PC = PC;

	this->ProcessEvent ( pFnShouldMinimapRenderFor, &ShouldMinimapRenderFor_Parms, NULL );

	return ShouldMinimapRenderFor_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.FlagUse
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTCarriedObject::FlagUse ( class AController* C )
{
	static UFunction* pFnFlagUse = NULL;

	if ( ! pFnFlagUse )
		pFnFlagUse = (UFunction*) UObject::GObjObjects()->Data[ 44029 ];

	AUTCarriedObject_execFlagUse_Parms FlagUse_Parms;
	FlagUse_Parms.C = C;

	this->ProcessEvent ( pFnFlagUse, &FlagUse_Parms, NULL );

	return FlagUse_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObject.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTCarriedObject::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52139 ];

	AUTCarriedObject_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTGameObjective.ReachedParkingSpot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTGameObjective::ReachedParkingSpot ( class APawn* P )
{
	static UFunction* pFnReachedParkingSpot = NULL;

	if ( ! pFnReachedParkingSpot )
		pFnReachedParkingSpot = (UFunction*) UObject::GObjObjects()->Data[ 53008 ];

	AUTGameObjective_execReachedParkingSpot_Parms ReachedParkingSpot_Parms;
	ReachedParkingSpot_Parms.P = P;

	this->ProcessEvent ( pFnReachedParkingSpot, &ReachedParkingSpot_Parms, NULL );

	return ReachedParkingSpot_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.MarkShootSpotsFor
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTGameObjective::MarkShootSpotsFor ( class APawn* P )
{
	static UFunction* pFnMarkShootSpotsFor = NULL;

	if ( ! pFnMarkShootSpotsFor )
		pFnMarkShootSpotsFor = (UFunction*) UObject::GObjObjects()->Data[ 53004 ];

	AUTGameObjective_execMarkShootSpotsFor_Parms MarkShootSpotsFor_Parms;
	MarkShootSpotsFor_Parms.P = P;

	this->ProcessEvent ( pFnMarkShootSpotsFor, &MarkShootSpotsFor_Parms, NULL );
};

// Function UTGame.UTGameObjective.TriggerFlagEvent
// [0x00020002] 
// Parameters infos:
// struct FName                   EventType                      ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )

void AUTGameObjective::TriggerFlagEvent ( struct FName EventType, class AController* EventInstigator )
{
	static UFunction* pFnTriggerFlagEvent = NULL;

	if ( ! pFnTriggerFlagEvent )
		pFnTriggerFlagEvent = (UFunction*) UObject::GObjObjects()->Data[ 52998 ];

	AUTGameObjective_execTriggerFlagEvent_Parms TriggerFlagEvent_Parms;
	memcpy ( &TriggerFlagEvent_Parms.EventType, &EventType, 0x8 );
	TriggerFlagEvent_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnTriggerFlagEvent, &TriggerFlagEvent_Parms, NULL );
};

// Function UTGame.UTGameObjective.SetAlarm
// [0x00020000] 
// Parameters infos:
// unsigned long                  bNowOn                         ( CPF_Parm )

void AUTGameObjective::SetAlarm ( unsigned long bNowOn )
{
	static UFunction* pFnSetAlarm = NULL;

	if ( ! pFnSetAlarm )
		pFnSetAlarm = (UFunction*) UObject::GObjObjects()->Data[ 52996 ];

	AUTGameObjective_execSetAlarm_Parms SetAlarm_Parms;
	SetAlarm_Parms.bNowOn = bNowOn;

	this->ProcessEvent ( pFnSetAlarm, &SetAlarm_Parms, NULL );
};

// Function UTGame.UTGameObjective.GetFlag
// [0x00020000] 
// Parameters infos:
// class AUTCarriedObject*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTCarriedObject* AUTGameObjective::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = (UFunction*) UObject::GObjObjects()->Data[ 51078 ];

	AUTGameObjective_execGetFlag_Parms GetFlag_Parms;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	return GetFlag_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.ValidSpawnPointFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

bool AUTGameObjective::ValidSpawnPointFor ( unsigned char TeamIndex )
{
	static UFunction* pFnValidSpawnPointFor = NULL;

	if ( ! pFnValidSpawnPointFor )
		pFnValidSpawnPointFor = (UFunction*) UObject::GObjObjects()->Data[ 52993 ];

	AUTGameObjective_execValidSpawnPointFor_Parms ValidSpawnPointFor_Parms;
	ValidSpawnPointFor_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnValidSpawnPointFor, &ValidSpawnPointFor_Parms, NULL );

	return ValidSpawnPointFor_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.TeleportTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPawn*                 Traveler                       ( CPF_Parm )

bool AUTGameObjective::TeleportTo ( class AUTPawn* Traveler )
{
	static UFunction* pFnTeleportTo = NULL;

	if ( ! pFnTeleportTo )
		pFnTeleportTo = (UFunction*) UObject::GObjObjects()->Data[ 52990 ];

	AUTGameObjective_execTeleportTo_Parms TeleportTo_Parms;
	TeleportTo_Parms.Traveler = Traveler;

	this->ProcessEvent ( pFnTeleportTo, &TeleportTo_Parms, NULL );

	return TeleportTo_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.FindGoodEndView
// [0x00C20102] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// struct FRotator                GoodRotation                   ( CPF_Parm | CPF_OutParm )

void AUTGameObjective::FindGoodEndView ( class APlayerController* PC, struct FRotator* GoodRotation )
{
	static UFunction* pFnFindGoodEndView = NULL;

	if ( ! pFnFindGoodEndView )
		pFnFindGoodEndView = (UFunction*) UObject::GObjObjects()->Data[ 52980 ];

	AUTGameObjective_execFindGoodEndView_Parms FindGoodEndView_Parms;
	FindGoodEndView_Parms.PC = PC;

	this->ProcessEvent ( pFnFindGoodEndView, &FindGoodEndView_Parms, NULL );

	if ( GoodRotation )
		memcpy ( GoodRotation, &FindGoodEndView_Parms.GoodRotation, 0xC );
};

// Function UTGame.UTGameObjective.SetTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamIndex                      ( CPF_Parm )

void AUTGameObjective::SetTeam ( unsigned char TeamIndex )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 52978 ];

	AUTGameObjective_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function UTGame.UTGameObjective.ShareScore
// [0x00020002] 
// Parameters infos:
// int                            TotalScore                     ( CPF_Parm )
// struct FString                 EventDesc                      ( CPF_Parm | CPF_NeedCtorLink )

void AUTGameObjective::ShareScore ( int TotalScore, struct FString EventDesc )
{
	static UFunction* pFnShareScore = NULL;

	if ( ! pFnShareScore )
		pFnShareScore = (UFunction*) UObject::GObjObjects()->Data[ 52973 ];

	AUTGameObjective_execShareScore_Parms ShareScore_Parms;
	ShareScore_Parms.TotalScore = TotalScore;
	memcpy ( &ShareScore_Parms.EventDesc, &EventDesc, 0xC );

	this->ProcessEvent ( pFnShareScore, &ShareScore_Parms, NULL );
};

// Function UTGame.UTGameObjective.AddScorer
// [0x00820002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )
// float                          Pct                            ( CPF_Parm )

void AUTGameObjective::AddScorer ( class AUTPlayerReplicationInfo* PRI, float Pct )
{
	static UFunction* pFnAddScorer = NULL;

	if ( ! pFnAddScorer )
		pFnAddScorer = (UFunction*) UObject::GObjObjects()->Data[ 52968 ];

	AUTGameObjective_execAddScorer_Parms AddScorer_Parms;
	AddScorer_Parms.PRI = PRI;
	AddScorer_Parms.Pct = Pct;

	this->ProcessEvent ( pFnAddScorer, &AddScorer_Parms, NULL );
};

// Function UTGame.UTGameObjective.ClientReset
// [0x00020100] 
// Parameters infos:

void AUTGameObjective::ClientReset ( )
{
	static UFunction* pFnClientReset = NULL;

	if ( ! pFnClientReset )
		pFnClientReset = (UFunction*) UObject::GObjObjects()->Data[ 52967 ];

	AUTGameObjective_execClientReset_Parms ClientReset_Parms;

	this->ProcessEvent ( pFnClientReset, &ClientReset_Parms, NULL );
};

// Function UTGame.UTGameObjective.Reset
// [0x00020002] 
// Parameters infos:

void AUTGameObjective::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 52966 ];

	AUTGameObjective_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTGameObjective.BetterObjectiveThan
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTGameObjective*        Best                           ( CPF_Parm )
// unsigned char                  DesiredTeamNum                 ( CPF_Parm )
// unsigned char                  RequesterTeamNum               ( CPF_Parm )

bool AUTGameObjective::BetterObjectiveThan ( class AUTGameObjective* Best, unsigned char DesiredTeamNum, unsigned char RequesterTeamNum )
{
	static UFunction* pFnBetterObjectiveThan = NULL;

	if ( ! pFnBetterObjectiveThan )
		pFnBetterObjectiveThan = (UFunction*) UObject::GObjObjects()->Data[ 52961 ];

	AUTGameObjective_execBetterObjectiveThan_Parms BetterObjectiveThan_Parms;
	BetterObjectiveThan_Parms.Best = Best;
	BetterObjectiveThan_Parms.DesiredTeamNum = DesiredTeamNum;
	BetterObjectiveThan_Parms.RequesterTeamNum = RequesterTeamNum;

	this->ProcessEvent ( pFnBetterObjectiveThan, &BetterObjectiveThan_Parms, NULL );

	return BetterObjectiveThan_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.GetNumDefenders
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTGameObjective::GetNumDefenders ( )
{
	static UFunction* pFnGetNumDefenders = NULL;

	if ( ! pFnGetNumDefenders )
		pFnGetNumDefenders = (UFunction*) UObject::GObjObjects()->Data[ 52957 ];

	AUTGameObjective_execGetNumDefenders_Parms GetNumDefenders_Parms;

	this->ProcessEvent ( pFnGetNumDefenders, &GetNumDefenders_Parms, NULL );

	return GetNumDefenders_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.TellBotHowToDisable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTGameObjective::TellBotHowToDisable ( class AUTBot* B )
{
	static UFunction* pFnTellBotHowToDisable = NULL;

	if ( ! pFnTellBotHowToDisable )
		pFnTellBotHowToDisable = (UFunction*) UObject::GObjObjects()->Data[ 52952 ];

	AUTGameObjective_execTellBotHowToDisable_Parms TellBotHowToDisable_Parms;
	TellBotHowToDisable_Parms.B = B;

	this->ProcessEvent ( pFnTellBotHowToDisable, &TellBotHowToDisable_Parms, NULL );

	return TellBotHowToDisable_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.GetHumanReadableName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTGameObjective::GetHumanReadableName ( )
{
	static UFunction* pFnGetHumanReadableName = NULL;

	if ( ! pFnGetHumanReadableName )
		pFnGetHumanReadableName = (UFunction*) UObject::GObjObjects()->Data[ 52950 ];

	AUTGameObjective_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

	this->ProcessEvent ( pFnGetHumanReadableName, &GetHumanReadableName_Parms, NULL );

	return GetHumanReadableName_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.NearObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTGameObjective::NearObjective ( class APawn* P )
{
	static UFunction* pFnNearObjective = NULL;

	if ( ! pFnNearObjective )
		pFnNearObjective = (UFunction*) UObject::GObjObjects()->Data[ 52946 ];

	AUTGameObjective_execNearObjective_Parms NearObjective_Parms;
	NearObjective_Parms.P = P;

	this->ProcessEvent ( pFnNearObjective, &NearObjective_Parms, NULL );

	return NearObjective_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.BotNearObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           C                              ( CPF_Parm )

bool AUTGameObjective::BotNearObjective ( class AAIController* C )
{
	static UFunction* pFnBotNearObjective = NULL;

	if ( ! pFnBotNearObjective )
		pFnBotNearObjective = (UFunction*) UObject::GObjObjects()->Data[ 52942 ];

	AUTGameObjective_execBotNearObjective_Parms BotNearObjective_Parms;
	BotNearObjective_Parms.C = C;

	this->ProcessEvent ( pFnBotNearObjective, &BotNearObjective_Parms, NULL );

	return BotNearObjective_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.CanDoubleJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTGameObjective::CanDoubleJump ( class APawn* Other )
{
	static UFunction* pFnCanDoubleJump = NULL;

	if ( ! pFnCanDoubleJump )
		pFnCanDoubleJump = (UFunction*) UObject::GObjObjects()->Data[ 52939 ];

	AUTGameObjective_execCanDoubleJump_Parms CanDoubleJump_Parms;
	CanDoubleJump_Parms.Other = Other;

	this->ProcessEvent ( pFnCanDoubleJump, &CanDoubleJump_Parms, NULL );

	return CanDoubleJump_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.NeedsHealing
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::NeedsHealing ( )
{
	static UFunction* pFnNeedsHealing = NULL;

	if ( ! pFnNeedsHealing )
		pFnNeedsHealing = (UFunction*) UObject::GObjObjects()->Data[ 52937 ];

	AUTGameObjective_execNeedsHealing_Parms NeedsHealing_Parms;

	this->ProcessEvent ( pFnNeedsHealing, &NeedsHealing_Parms, NULL );

	return NeedsHealing_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.TeamLink
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamNum                        ( CPF_Parm )

bool AUTGameObjective::TeamLink ( int TeamNum )
{
	static UFunction* pFnTeamLink = NULL;

	if ( ! pFnTeamLink )
		pFnTeamLink = (UFunction*) UObject::GObjObjects()->Data[ 52934 ];

	AUTGameObjective_execTeamLink_Parms TeamLink_Parms;
	TeamLink_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnTeamLink, &TeamLink_Parms, NULL );

	return TeamLink_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.TellBotHowToHeal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTGameObjective::TellBotHowToHeal ( class AUTBot* B )
{
	static UFunction* pFnTellBotHowToHeal = NULL;

	if ( ! pFnTellBotHowToHeal )
		pFnTellBotHowToHeal = (UFunction*) UObject::GObjObjects()->Data[ 52931 ];

	AUTGameObjective_execTellBotHowToHeal_Parms TellBotHowToHeal_Parms;
	TellBotHowToHeal_Parms.B = B;

	this->ProcessEvent ( pFnTellBotHowToHeal, &TellBotHowToHeal_Parms, NULL );

	return TellBotHowToHeal_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.Shootable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::Shootable ( )
{
	static UFunction* pFnShootable = NULL;

	if ( ! pFnShootable )
		pFnShootable = (UFunction*) UObject::GObjObjects()->Data[ 51526 ];

	AUTGameObjective_execShootable_Parms Shootable_Parms;

	this->ProcessEvent ( pFnShootable, &Shootable_Parms, NULL );

	return Shootable_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.IsActive
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::eventIsActive ( )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 52929 ];

	AUTGameObjective_eventIsActive_Parms IsActive_Parms;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	return IsActive_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.IsNeutral
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::IsNeutral ( )
{
	static UFunction* pFnIsNeutral = NULL;

	if ( ! pFnIsNeutral )
		pFnIsNeutral = (UFunction*) UObject::GObjObjects()->Data[ 52927 ];

	AUTGameObjective_execIsNeutral_Parms IsNeutral_Parms;

	this->ProcessEvent ( pFnIsNeutral, &IsNeutral_Parms, NULL );

	return IsNeutral_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.IsCritical
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::eventIsCritical ( )
{
	static UFunction* pFnIsCritical = NULL;

	if ( ! pFnIsCritical )
		pFnIsCritical = (UFunction*) UObject::GObjObjects()->Data[ 52925 ];

	AUTGameObjective_eventIsCritical_Parms IsCritical_Parms;

	this->ProcessEvent ( pFnIsCritical, &IsCritical_Parms, NULL );

	return IsCritical_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.DrawMapSelection
// [0x00020102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )

void AUTGameObjective::DrawMapSelection ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner )
{
	static UFunction* pFnDrawMapSelection = NULL;

	if ( ! pFnDrawMapSelection )
		pFnDrawMapSelection = (UFunction*) UObject::GObjObjects()->Data[ 52920 ];

	AUTGameObjective_execDrawMapSelection_Parms DrawMapSelection_Parms;
	DrawMapSelection_Parms.MP = MP;
	DrawMapSelection_Parms.Canvas = Canvas;
	DrawMapSelection_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnDrawMapSelection, &DrawMapSelection_Parms, NULL );
};

// Function UTGame.UTGameObjective.RenderExtraDetails
// [0x00020102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// float                          ColorPercent                   ( CPF_Parm )
// unsigned long                  bSelected                      ( CPF_Parm )

void AUTGameObjective::RenderExtraDetails ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, float ColorPercent, unsigned long bSelected )
{
	static UFunction* pFnRenderExtraDetails = NULL;

	if ( ! pFnRenderExtraDetails )
		pFnRenderExtraDetails = (UFunction*) UObject::GObjObjects()->Data[ 52914 ];

	AUTGameObjective_execRenderExtraDetails_Parms RenderExtraDetails_Parms;
	RenderExtraDetails_Parms.MP = MP;
	RenderExtraDetails_Parms.Canvas = Canvas;
	RenderExtraDetails_Parms.PlayerOwner = PlayerOwner;
	RenderExtraDetails_Parms.ColorPercent = ColorPercent;
	RenderExtraDetails_Parms.bSelected = bSelected;

	this->ProcessEvent ( pFnRenderExtraDetails, &RenderExtraDetails_Parms, NULL );
};

// Function UTGame.UTGameObjective.RenderMinimap
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// float                          ColorPercent                   ( CPF_Parm )

void AUTGameObjective::eventRenderMinimap ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, float ColorPercent )
{
	static UFunction* pFnRenderMinimap = NULL;

	if ( ! pFnRenderMinimap )
		pFnRenderMinimap = (UFunction*) UObject::GObjObjects()->Data[ 52909 ];

	AUTGameObjective_eventRenderMinimap_Parms RenderMinimap_Parms;
	RenderMinimap_Parms.MP = MP;
	RenderMinimap_Parms.Canvas = Canvas;
	RenderMinimap_Parms.PlayerOwner = PlayerOwner;
	RenderMinimap_Parms.ColorPercent = ColorPercent;

	this->ProcessEvent ( pFnRenderMinimap, &RenderMinimap_Parms, NULL );
};

// Function UTGame.UTGameObjective.HighlightOnMinimap
// [0x00020102] 
// Parameters infos:
// int                            Switch                         ( CPF_Parm )

void AUTGameObjective::HighlightOnMinimap ( int Switch )
{
	static UFunction* pFnHighlightOnMinimap = NULL;

	if ( ! pFnHighlightOnMinimap )
		pFnHighlightOnMinimap = (UFunction*) UObject::GObjObjects()->Data[ 52907 ];

	AUTGameObjective_execHighlightOnMinimap_Parms HighlightOnMinimap_Parms;
	HighlightOnMinimap_Parms.Switch = Switch;

	this->ProcessEvent ( pFnHighlightOnMinimap, &HighlightOnMinimap_Parms, NULL );
};

// Function UTGame.UTGameObjective.CalcCamera
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTGameObjective::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 52899 ];

	AUTGameObjective_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.UsedBy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTGameObjective::UsedBy ( class APawn* P )
{
	static UFunction* pFnUsedBy = NULL;

	if ( ! pFnUsedBy )
		pFnUsedBy = (UFunction*) UObject::GObjObjects()->Data[ 43896 ];

	AUTGameObjective_execUsedBy_Parms UsedBy_Parms;
	UsedBy_Parms.P = P;

	this->ProcessEvent ( pFnUsedBy, &UsedBy_Parms, NULL );

	return UsedBy_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.FindNearestFriendlyNode
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

class AUTGameObjective* AUTGameObjective::FindNearestFriendlyNode ( int TeamIndex )
{
	static UFunction* pFnFindNearestFriendlyNode = NULL;

	if ( ! pFnFindNearestFriendlyNode )
		pFnFindNearestFriendlyNode = (UFunction*) UObject::GObjObjects()->Data[ 52895 ];

	AUTGameObjective_execFindNearestFriendlyNode_Parms FindNearestFriendlyNode_Parms;
	FindNearestFriendlyNode_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnFindNearestFriendlyNode, &FindNearestFriendlyNode_Parms, NULL );

	return FindNearestFriendlyNode_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTGameObjective::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 52893 ];

	AUTGameObjective_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTGameObjective.UpdateTeamStaticMeshes
// [0x00020102] 
// Parameters infos:

void AUTGameObjective::UpdateTeamStaticMeshes ( )
{
	static UFunction* pFnUpdateTeamStaticMeshes = NULL;

	if ( ! pFnUpdateTeamStaticMeshes )
		pFnUpdateTeamStaticMeshes = (UFunction*) UObject::GObjObjects()->Data[ 52891 ];

	AUTGameObjective_execUpdateTeamStaticMeshes_Parms UpdateTeamStaticMeshes_Parms;

	this->ProcessEvent ( pFnUpdateTeamStaticMeshes, &UpdateTeamStaticMeshes_Parms, NULL );
};

// Function UTGame.UTGameObjective.AddTeamStaticMesh
// [0x00020102] 
// Parameters infos:
// class AUTTeamStaticMesh*       SMesh                          ( CPF_Parm )

void AUTGameObjective::AddTeamStaticMesh ( class AUTTeamStaticMesh* SMesh )
{
	static UFunction* pFnAddTeamStaticMesh = NULL;

	if ( ! pFnAddTeamStaticMesh )
		pFnAddTeamStaticMesh = (UFunction*) UObject::GObjObjects()->Data[ 52889 ];

	AUTGameObjective_execAddTeamStaticMesh_Parms AddTeamStaticMesh_Parms;
	AddTeamStaticMesh_Parms.SMesh = SMesh;

	this->ProcessEvent ( pFnAddTeamStaticMesh, &AddTeamStaticMesh_Parms, NULL );
};

// Function UTGame.UTGameObjective.Destroyed
// [0x00020102] 
// Parameters infos:

void AUTGameObjective::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 52887 ];

	AUTGameObjective_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTGameObjective.GetAutoObjectiveActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )

class AActor* AUTGameObjective::GetAutoObjectiveActor ( class AUTPlayerController* PC )
{
	static UFunction* pFnGetAutoObjectiveActor = NULL;

	if ( ! pFnGetAutoObjectiveActor )
		pFnGetAutoObjectiveActor = (UFunction*) UObject::GObjObjects()->Data[ 43966 ];

	AUTGameObjective_execGetAutoObjectiveActor_Parms GetAutoObjectiveActor_Parms;
	GetAutoObjectiveActor_Parms.PC = PC;

	this->ProcessEvent ( pFnGetAutoObjectiveActor, &GetAutoObjectiveActor_Parms, NULL );

	return GetAutoObjectiveActor_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.GetLocationSpeechFor
// [0x00020102] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )

class USoundNodeWave* AUTGameObjective::GetLocationSpeechFor ( class APlayerController* PC, int LocationSpeechOffset, int MessageIndex )
{
	static UFunction* pFnGetLocationSpeechFor = NULL;

	if ( ! pFnGetLocationSpeechFor )
		pFnGetLocationSpeechFor = (UFunction*) UObject::GObjObjects()->Data[ 52881 ];

	AUTGameObjective_execGetLocationSpeechFor_Parms GetLocationSpeechFor_Parms;
	GetLocationSpeechFor_Parms.PC = PC;
	GetLocationSpeechFor_Parms.LocationSpeechOffset = LocationSpeechOffset;
	GetLocationSpeechFor_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnGetLocationSpeechFor, &GetLocationSpeechFor_Parms, NULL );

	return GetLocationSpeechFor_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.GetLocationMessageIndex
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   StatusPawn                     ( CPF_Parm )

int AUTGameObjective::GetLocationMessageIndex ( class AUTBot* B, class APawn* StatusPawn )
{
	static UFunction* pFnGetLocationMessageIndex = NULL;

	if ( ! pFnGetLocationMessageIndex )
		pFnGetLocationMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 52877 ];

	AUTGameObjective_execGetLocationMessageIndex_Parms GetLocationMessageIndex_Parms;
	GetLocationMessageIndex_Parms.B = B;
	GetLocationMessageIndex_Parms.StatusPawn = StatusPawn;

	this->ProcessEvent ( pFnGetLocationMessageIndex, &GetLocationMessageIndex_Parms, NULL );

	return GetLocationMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.GetHUDOffset
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )

struct FVector AUTGameObjective::GetHUDOffset ( class APlayerController* PC, class UCanvas* Canvas )
{
	static UFunction* pFnGetHUDOffset = NULL;

	if ( ! pFnGetHUDOffset )
		pFnGetHUDOffset = (UFunction*) UObject::GObjObjects()->Data[ 52872 ];

	AUTGameObjective_execGetHUDOffset_Parms GetHUDOffset_Parms;
	GetHUDOffset_Parms.PC = PC;
	GetHUDOffset_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnGetHUDOffset, &GetHUDOffset_Parms, NULL );

	return GetHUDOffset_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.IsStandalone
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameObjective::IsStandalone ( )
{
	static UFunction* pFnIsStandalone = NULL;

	if ( ! pFnIsStandalone )
		pFnIsStandalone = (UFunction*) UObject::GObjObjects()->Data[ 52870 ];

	AUTGameObjective_execIsStandalone_Parms IsStandalone_Parms;

	this->ProcessEvent ( pFnIsStandalone, &IsStandalone_Parms, NULL );

	return IsStandalone_Parms.ReturnValue;
};

// Function UTGame.UTGameObjective.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTGameObjective::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52863 ];

	AUTGameObjective_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTPawn.HandDamp
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinDamp                        ( CPF_Parm )

void AUTPawn::HandDamp ( float LinDamp )
{
	static UFunction* pFnHandDamp = NULL;

	if ( ! pFnHandDamp )
		pFnHandDamp = (UFunction*) UObject::GObjObjects()->Data[ 49939 ];

	AUTPawn_execHandDamp_Parms HandDamp_Parms;
	HandDamp_Parms.LinDamp = LinDamp;

	this->ProcessEvent ( pFnHandDamp, &HandDamp_Parms, NULL );
};

// Function UTGame.UTPawn.HandSpring
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinSpring                      ( CPF_Parm )

void AUTPawn::HandSpring ( float LinSpring )
{
	static UFunction* pFnHandSpring = NULL;

	if ( ! pFnHandSpring )
		pFnHandSpring = (UFunction*) UObject::GObjObjects()->Data[ 49934 ];

	AUTPawn_execHandSpring_Parms HandSpring_Parms;
	HandSpring_Parms.LinSpring = LinSpring;

	this->ProcessEvent ( pFnHandSpring, &HandSpring_Parms, NULL );
};

// Function UTGame.UTPawn.BackDamp
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinDamp                        ( CPF_Parm )

void AUTPawn::BackDamp ( float LinDamp )
{
	static UFunction* pFnBackDamp = NULL;

	if ( ! pFnBackDamp )
		pFnBackDamp = (UFunction*) UObject::GObjObjects()->Data[ 49929 ];

	AUTPawn_execBackDamp_Parms BackDamp_Parms;
	BackDamp_Parms.LinDamp = LinDamp;

	this->ProcessEvent ( pFnBackDamp, &BackDamp_Parms, NULL );
};

// Function UTGame.UTPawn.BackSpring
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinSpring                      ( CPF_Parm )

void AUTPawn::BackSpring ( float LinSpring )
{
	static UFunction* pFnBackSpring = NULL;

	if ( ! pFnBackSpring )
		pFnBackSpring = (UFunction*) UObject::GObjObjects()->Data[ 49924 ];

	AUTPawn_execBackSpring_Parms BackSpring_Parms;
	BackSpring_Parms.LinSpring = LinSpring;

	this->ProcessEvent ( pFnBackSpring, &BackSpring_Parms, NULL );
};

// Function UTGame.UTPawn.PostBigTeleport
// [0x00020102] 
// Parameters infos:

void AUTPawn::PostBigTeleport ( )
{
	static UFunction* pFnPostBigTeleport = NULL;

	if ( ! pFnPostBigTeleport )
		pFnPostBigTeleport = (UFunction*) UObject::GObjObjects()->Data[ 49923 ];

	AUTPawn_execPostBigTeleport_Parms PostBigTeleport_Parms;

	this->ProcessEvent ( pFnPostBigTeleport, &PostBigTeleport_Parms, NULL );
};

// Function UTGame.UTPawn.PostTeleport
// [0x00020102] 
// Parameters infos:
// class ATeleporter*             OutTeleporter                  ( CPF_Parm )

void AUTPawn::PostTeleport ( class ATeleporter* OutTeleporter )
{
	static UFunction* pFnPostTeleport = NULL;

	if ( ! pFnPostTeleport )
		pFnPostTeleport = (UFunction*) UObject::GObjObjects()->Data[ 49921 ];

	AUTPawn_execPostTeleport_Parms PostTeleport_Parms;
	PostTeleport_Parms.OutTeleporter = OutTeleporter;

	this->ProcessEvent ( pFnPostTeleport, &PostTeleport_Parms, NULL );
};

// Function UTGame.UTPawn.GetFamilyInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* AUTPawn::GetFamilyInfo ( )
{
	static UFunction* pFnGetFamilyInfo = NULL;

	if ( ! pFnGetFamilyInfo )
		pFnGetFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 49918 ];

	AUTPawn_execGetFamilyInfo_Parms GetFamilyInfo_Parms;

	this->ProcessEvent ( pFnGetFamilyInfo, &GetFamilyInfo_Parms, NULL );

	return GetFamilyInfo_Parms.ReturnValue;
};

// Function UTGame.UTPawn.NeedToTurn
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 targ                           ( CPF_Parm )

bool AUTPawn::NeedToTurn ( struct FVector targ )
{
	static UFunction* pFnNeedToTurn = NULL;

	if ( ! pFnNeedToTurn )
		pFnNeedToTurn = (UFunction*) UObject::GObjObjects()->Data[ 49792 ];

	AUTPawn_execNeedToTurn_Parms NeedToTurn_Parms;
	memcpy ( &NeedToTurn_Parms.targ, &targ, 0xC );

	this->ProcessEvent ( pFnNeedToTurn, &NeedToTurn_Parms, NULL );

	return NeedToTurn_Parms.ReturnValue;
};

// Function UTGame.UTPawn.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTPawn::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 49789 ];

	AUTPawn_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function UTGame.UTPawn.OnInfiniteAmmo
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_InfiniteAmmo*  Action                         ( CPF_Parm )

void AUTPawn::OnInfiniteAmmo ( class UUTSeqAct_InfiniteAmmo* Action )
{
	static UFunction* pFnOnInfiniteAmmo = NULL;

	if ( ! pFnOnInfiniteAmmo )
		pFnOnInfiniteAmmo = (UFunction*) UObject::GObjObjects()->Data[ 49783 ];

	AUTPawn_execOnInfiniteAmmo_Parms OnInfiniteAmmo_Parms;
	OnInfiniteAmmo_Parms.Action = Action;

	this->ProcessEvent ( pFnOnInfiniteAmmo, &OnInfiniteAmmo_Parms, NULL );
};

// Function UTGame.UTPawn.OnExitVehicle
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_ExitVehicle*   Action                         ( CPF_Parm )

void AUTPawn::OnExitVehicle ( class UUTSeqAct_ExitVehicle* Action )
{
	static UFunction* pFnOnExitVehicle = NULL;

	if ( ! pFnOnExitVehicle )
		pFnOnExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 49781 ];

	AUTPawn_execOnExitVehicle_Parms OnExitVehicle_Parms;
	OnExitVehicle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnExitVehicle, &OnExitVehicle_Parms, NULL );
};

// Function UTGame.UTPawn.StuckFalling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventStuckFalling ( )
{
	static UFunction* pFnStuckFalling = NULL;

	if ( ! pFnStuckFalling )
		pFnStuckFalling = (UFunction*) UObject::GObjObjects()->Data[ 49780 ];

	AUTPawn_eventStuckFalling_Parms StuckFalling_Parms;

	this->ProcessEvent ( pFnStuckFalling, &StuckFalling_Parms, NULL );
};

// Function UTGame.UTPawn.OnRanOver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ASVehicle*               Vehicle                        ( CPF_Parm )
// class UPrimitiveComponent*     RunOverComponent               ( CPF_Parm | CPF_EditInline )
// int                            WheelIndex                     ( CPF_Parm )

void AUTPawn::eventOnRanOver ( class ASVehicle* Vehicle, class UPrimitiveComponent* RunOverComponent, int WheelIndex )
{
	static UFunction* pFnOnRanOver = NULL;

	if ( ! pFnOnRanOver )
		pFnOnRanOver = (UFunction*) UObject::GObjObjects()->Data[ 49775 ];

	AUTPawn_eventOnRanOver_Parms OnRanOver_Parms;
	OnRanOver_Parms.Vehicle = Vehicle;
	OnRanOver_Parms.RunOverComponent = RunOverComponent;
	OnRanOver_Parms.WheelIndex = WheelIndex;

	this->ProcessEvent ( pFnOnRanOver, &OnRanOver_Parms, NULL );
};

// Function UTGame.UTPawn.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTPawn::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 49770 ];

	AUTPawn_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTPawn.TakeFallingDamage
// [0x00020102] 
// Parameters infos:

void AUTPawn::TakeFallingDamage ( )
{
	static UFunction* pFnTakeFallingDamage = NULL;

	if ( ! pFnTakeFallingDamage )
		pFnTakeFallingDamage = (UFunction*) UObject::GObjObjects()->Data[ 49767 ];

	AUTPawn_execTakeFallingDamage_Parms TakeFallingDamage_Parms;

	this->ProcessEvent ( pFnTakeFallingDamage, &TakeFallingDamage_Parms, NULL );
};

// Function UTGame.UTPawn.SetOverlayVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void AUTPawn::SetOverlayVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetOverlayVisibility = NULL;

	if ( ! pFnSetOverlayVisibility )
		pFnSetOverlayVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49765 ];

	AUTPawn_execSetOverlayVisibility_Parms SetOverlayVisibility_Parms;
	SetOverlayVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetOverlayVisibility, &SetOverlayVisibility_Parms, NULL );
};

// Function UTGame.UTPawn.TornOff
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventTornOff ( )
{
	static UFunction* pFnTornOff = NULL;

	if ( ! pFnTornOff )
		pFnTornOff = (UFunction*) UObject::GObjObjects()->Data[ 49763 ];

	AUTPawn_eventTornOff_Parms TornOff_Parms;

	this->ProcessEvent ( pFnTornOff, &TornOff_Parms, NULL );
};

// Function UTGame.UTPawn.GetViewRotation
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTPawn::eventGetViewRotation ( )
{
	static UFunction* pFnGetViewRotation = NULL;

	if ( ! pFnGetViewRotation )
		pFnGetViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 49760 ];

	AUTPawn_eventGetViewRotation_Parms GetViewRotation_Parms;

	this->ProcessEvent ( pFnGetViewRotation, &GetViewRotation_Parms, NULL );

	return GetViewRotation_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AdjustCameraScale
// [0x00020102] 
// Parameters infos:
// unsigned long                  bMoveCameraIn                  ( CPF_Parm )

void AUTPawn::AdjustCameraScale ( unsigned long bMoveCameraIn )
{
	static UFunction* pFnAdjustCameraScale = NULL;

	if ( ! pFnAdjustCameraScale )
		pFnAdjustCameraScale = (UFunction*) UObject::GObjObjects()->Data[ 49756 ];

	AUTPawn_execAdjustCameraScale_Parms AdjustCameraScale_Parms;
	AdjustCameraScale_Parms.bMoveCameraIn = bMoveCameraIn;

	this->ProcessEvent ( pFnAdjustCameraScale, &AdjustCameraScale_Parms, NULL );
};

// Function UTGame.UTPawn.IsFirstPerson
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::IsFirstPerson ( )
{
	static UFunction* pFnIsFirstPerson = NULL;

	if ( ! pFnIsFirstPerson )
		pFnIsFirstPerson = (UFunction*) UObject::GObjObjects()->Data[ 49753 ];

	AUTPawn_execIsFirstPerson_Parms IsFirstPerson_Parms;

	this->ProcessEvent ( pFnIsFirstPerson, &IsFirstPerson_Parms, NULL );

	return IsFirstPerson_Parms.ReturnValue;
};

// Function UTGame.UTPawn.ModifyRotForDebugFreeCam
// [0x00420102] 
// Parameters infos:
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )

void AUTPawn::ModifyRotForDebugFreeCam ( struct FRotator* out_CamRot )
{
	static UFunction* pFnModifyRotForDebugFreeCam = NULL;

	if ( ! pFnModifyRotForDebugFreeCam )
		pFnModifyRotForDebugFreeCam = (UFunction*) UObject::GObjObjects()->Data[ 49750 ];

	AUTPawn_execModifyRotForDebugFreeCam_Parms ModifyRotForDebugFreeCam_Parms;

	this->ProcessEvent ( pFnModifyRotForDebugFreeCam, &ModifyRotForDebugFreeCam_Parms, NULL );

	if ( out_CamRot )
		memcpy ( out_CamRot, &ModifyRotForDebugFreeCam_Parms.out_CamRot, 0xC );
};

// Function UTGame.UTPawn.IsLocationOnHead
// [0x00C20002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          AdditionalScale                ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Const | CPF_Parm | CPF_OutParm )

bool AUTPawn::IsLocationOnHead ( float AdditionalScale, struct FImpactInfo* Impact )
{
	static UFunction* pFnIsLocationOnHead = NULL;

	if ( ! pFnIsLocationOnHead )
		pFnIsLocationOnHead = (UFunction*) UObject::GObjObjects()->Data[ 49742 ];

	AUTPawn_execIsLocationOnHead_Parms IsLocationOnHead_Parms;
	IsLocationOnHead_Parms.AdditionalScale = AdditionalScale;

	this->ProcessEvent ( pFnIsLocationOnHead, &IsLocationOnHead_Parms, NULL );

	if ( Impact )
		memcpy ( Impact, &IsLocationOnHead_Parms.Impact, 0x50 );

	return IsLocationOnHead_Parms.ReturnValue;
};

// Function UTGame.UTPawn.TakeDrowningDamage
// [0x00020002] 
// Parameters infos:

void AUTPawn::TakeDrowningDamage ( )
{
	static UFunction* pFnTakeDrowningDamage = NULL;

	if ( ! pFnTakeDrowningDamage )
		pFnTakeDrowningDamage = (UFunction*) UObject::GObjObjects()->Data[ 49741 ];

	AUTPawn_execTakeDrowningDamage_Parms TakeDrowningDamage_Parms;

	this->ProcessEvent ( pFnTakeDrowningDamage, &TakeDrowningDamage_Parms, NULL );
};

// Function UTGame.UTPawn.SwitchWeapon
// [0x00020102] 
// Parameters infos:
// unsigned char                  NewGroup                       ( CPF_Parm )

void AUTPawn::SwitchWeapon ( unsigned char NewGroup )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 49739 ];

	AUTPawn_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.NewGroup = NewGroup;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function UTGame.UTPawn.OnUseHoverboard
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_UseHoverboard* Action                         ( CPF_Parm )

void AUTPawn::OnUseHoverboard ( class UUTSeqAct_UseHoverboard* Action )
{
	static UFunction* pFnOnUseHoverboard = NULL;

	if ( ! pFnOnUseHoverboard )
		pFnOnUseHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 49735 ];

	AUTPawn_execOnUseHoverboard_Parms OnUseHoverboard_Parms;
	OnUseHoverboard_Parms.Action = Action;

	this->ProcessEvent ( pFnOnUseHoverboard, &OnUseHoverboard_Parms, NULL );
};

// Function UTGame.UTPawn.ServerHoverboard
// [0x00A200C2] 
// Parameters infos:

void AUTPawn::ServerHoverboard ( )
{
	static UFunction* pFnServerHoverboard = NULL;

	if ( ! pFnServerHoverboard )
		pFnServerHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 49723 ];

	AUTPawn_execServerHoverboard_Parms ServerHoverboard_Parms;

	this->ProcessEvent ( pFnServerHoverboard, &ServerHoverboard_Parms, NULL );
};

// Function UTGame.UTPawn.TakeHitBlendedOut
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventTakeHitBlendedOut ( )
{
	static UFunction* pFnTakeHitBlendedOut = NULL;

	if ( ! pFnTakeHitBlendedOut )
		pFnTakeHitBlendedOut = (UFunction*) UObject::GObjObjects()->Data[ 49722 ];

	AUTPawn_eventTakeHitBlendedOut_Parms TakeHitBlendedOut_Parms;

	this->ProcessEvent ( pFnTakeHitBlendedOut, &TakeHitBlendedOut_Parms, NULL );
};

// Function UTGame.UTPawn.PlayTakeHitEffects
// [0x00820102] 
// Parameters infos:

void AUTPawn::PlayTakeHitEffects ( )
{
	static UFunction* pFnPlayTakeHitEffects = NULL;

	if ( ! pFnPlayTakeHitEffects )
		pFnPlayTakeHitEffects = (UFunction*) UObject::GObjObjects()->Data[ 49711 ];

	AUTPawn_execPlayTakeHitEffects_Parms PlayTakeHitEffects_Parms;

	this->ProcessEvent ( pFnPlayTakeHitEffects, &PlayTakeHitEffects_Parms, NULL );
};

// Function UTGame.UTPawn.PlayHit
// [0x00020002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void AUTPawn::PlayHit ( float Damage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FVector Momentum, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnPlayHit = NULL;

	if ( ! pFnPlayHit )
		pFnPlayHit = (UFunction*) UObject::GObjObjects()->Data[ 49699 ];

	AUTPawn_execPlayHit_Parms PlayHit_Parms;
	PlayHit_Parms.Damage = Damage;
	PlayHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &PlayHit_Parms.HitLocation, &HitLocation, 0xC );
	PlayHit_Parms.DamageType = DamageType;
	memcpy ( &PlayHit_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &PlayHit_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnPlayHit, &PlayHit_Parms, NULL );
};

// Function UTGame.UTPawn.WeaponAttachmentChanged
// [0x00020102] 
// Parameters infos:

void AUTPawn::WeaponAttachmentChanged ( )
{
	static UFunction* pFnWeaponAttachmentChanged = NULL;

	if ( ! pFnWeaponAttachmentChanged )
		pFnWeaponAttachmentChanged = (UFunction*) UObject::GObjObjects()->Data[ 49698 ];

	AUTPawn_execWeaponAttachmentChanged_Parms WeaponAttachmentChanged_Parms;

	this->ProcessEvent ( pFnWeaponAttachmentChanged, &WeaponAttachmentChanged_Parms, NULL );
};

// Function UTGame.UTPawn.WeaponChanged
// [0x00020102] 
// Parameters infos:
// class AUTWeapon*               NewWeapon                      ( CPF_Parm )

void AUTPawn::WeaponChanged ( class AUTWeapon* NewWeapon )
{
	static UFunction* pFnWeaponChanged = NULL;

	if ( ! pFnWeaponChanged )
		pFnWeaponChanged = (UFunction*) UObject::GObjObjects()->Data[ 49695 ];

	AUTPawn_execWeaponChanged_Parms WeaponChanged_Parms;
	WeaponChanged_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnWeaponChanged, &WeaponChanged_Parms, NULL );
};

// Function UTGame.UTPawn.WeaponStoppedFiring
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void AUTPawn::WeaponStoppedFiring ( class AWeapon* InWeapon, unsigned long bViaReplication )
{
	static UFunction* pFnWeaponStoppedFiring = NULL;

	if ( ! pFnWeaponStoppedFiring )
		pFnWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 49692 ];

	AUTPawn_execWeaponStoppedFiring_Parms WeaponStoppedFiring_Parms;
	WeaponStoppedFiring_Parms.InWeapon = InWeapon;
	WeaponStoppedFiring_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnWeaponStoppedFiring, &WeaponStoppedFiring_Parms, NULL );
};

// Function UTGame.UTPawn.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void AUTPawn::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 49687 ];

	AUTPawn_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function UTGame.UTPawn.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTPawn::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 49675 ];

	AUTPawn_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTPawn.GetPuttingDownWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::GetPuttingDownWeapon ( )
{
	static UFunction* pFnGetPuttingDownWeapon = NULL;

	if ( ! pFnGetPuttingDownWeapon )
		pFnGetPuttingDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 49673 ];

	AUTPawn_execGetPuttingDownWeapon_Parms GetPuttingDownWeapon_Parms;

	this->ProcessEvent ( pFnGetPuttingDownWeapon, &GetPuttingDownWeapon_Parms, NULL );

	return GetPuttingDownWeapon_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetPuttingDownWeapon
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNowPuttingDownWeapon          ( CPF_Parm )

void AUTPawn::SetPuttingDownWeapon ( unsigned long bNowPuttingDownWeapon )
{
	static UFunction* pFnSetPuttingDownWeapon = NULL;

	if ( ! pFnSetPuttingDownWeapon )
		pFnSetPuttingDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 49671 ];

	AUTPawn_execSetPuttingDownWeapon_Parms SetPuttingDownWeapon_Parms;
	SetPuttingDownWeapon_Parms.bNowPuttingDownWeapon = bNowPuttingDownWeapon;

	this->ProcessEvent ( pFnSetPuttingDownWeapon, &SetPuttingDownWeapon_Parms, NULL );
};

// Function UTGame.UTPawn.SetHeadScale
// [0x00020102] 
// Parameters infos:
// float                          NewScale                       ( CPF_Parm )

void AUTPawn::SetHeadScale ( float NewScale )
{
	static UFunction* pFnSetHeadScale = NULL;

	if ( ! pFnSetHeadScale )
		pFnSetHeadScale = (UFunction*) UObject::GObjObjects()->Data[ 49668 ];

	AUTPawn_execSetHeadScale_Parms SetHeadScale_Parms;
	SetHeadScale_Parms.NewScale = NewScale;

	this->ProcessEvent ( pFnSetHeadScale, &SetHeadScale_Parms, NULL );
};

// Function UTGame.UTPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 49664 ];

	AUTPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTPawn.FireRateChanged
// [0x00020102] 
// Parameters infos:

void AUTPawn::FireRateChanged ( )
{
	static UFunction* pFnFireRateChanged = NULL;

	if ( ! pFnFireRateChanged )
		pFnFireRateChanged = (UFunction*) UObject::GObjObjects()->Data[ 49663 ];

	AUTPawn_execFireRateChanged_Parms FireRateChanged_Parms;

	this->ProcessEvent ( pFnFireRateChanged, &FireRateChanged_Parms, NULL );
};

// Function UTGame.UTPawn.SetBigHead
// [0x00020002] 
// Parameters infos:

void AUTPawn::SetBigHead ( )
{
	static UFunction* pFnSetBigHead = NULL;

	if ( ! pFnSetBigHead )
		pFnSetBigHead = (UFunction*) UObject::GObjObjects()->Data[ 49661 ];

	AUTPawn_execSetBigHead_Parms SetBigHead_Parms;

	this->ProcessEvent ( pFnSetBigHead, &SetBigHead_Parms, NULL );
};

// Function UTGame.UTPawn.FiringModeUpdated
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned char                  InFiringMode                   ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void AUTPawn::FiringModeUpdated ( class AWeapon* InWeapon, unsigned char InFiringMode, unsigned long bViaReplication )
{
	static UFunction* pFnFiringModeUpdated = NULL;

	if ( ! pFnFiringModeUpdated )
		pFnFiringModeUpdated = (UFunction*) UObject::GObjObjects()->Data[ 49657 ];

	AUTPawn_execFiringModeUpdated_Parms FiringModeUpdated_Parms;
	FiringModeUpdated_Parms.InWeapon = InWeapon;
	FiringModeUpdated_Parms.InFiringMode = InFiringMode;
	FiringModeUpdated_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnFiringModeUpdated, &FiringModeUpdated_Parms, NULL );
};

// Function UTGame.UTPawn.ForceRagdoll
// [0x00020002] 
// Parameters infos:

void AUTPawn::ForceRagdoll ( )
{
	static UFunction* pFnForceRagdoll = NULL;

	if ( ! pFnForceRagdoll )
		pFnForceRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 49656 ];

	AUTPawn_execForceRagdoll_Parms ForceRagdoll_Parms;

	this->ProcessEvent ( pFnForceRagdoll, &ForceRagdoll_Parms, NULL );
};

// Function UTGame.UTPawn.FeignDeath
// [0x00020300] ( FUNC_Exec )
// Parameters infos:

void AUTPawn::FeignDeath ( )
{
	static UFunction* pFnFeignDeath = NULL;

	if ( ! pFnFeignDeath )
		pFnFeignDeath = (UFunction*) UObject::GObjObjects()->Data[ 49655 ];

	AUTPawn_execFeignDeath_Parms FeignDeath_Parms;

	this->ProcessEvent ( pFnFeignDeath, &FeignDeath_Parms, NULL );
};

// Function UTGame.UTPawn.ServerFeignDeath
// [0x002200C2] 
// Parameters infos:

void AUTPawn::ServerFeignDeath ( )
{
	static UFunction* pFnServerFeignDeath = NULL;

	if ( ! pFnServerFeignDeath )
		pFnServerFeignDeath = (UFunction*) UObject::GObjObjects()->Data[ 49654 ];

	AUTPawn_execServerFeignDeath_Parms ServerFeignDeath_Parms;

	this->ProcessEvent ( pFnServerFeignDeath, &ServerFeignDeath_Parms, NULL );
};

// Function UTGame.UTPawn.CheckValidLocation
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 FeignLocation                  ( CPF_Parm )

bool AUTPawn::CheckValidLocation ( struct FVector FeignLocation )
{
	static UFunction* pFnCheckValidLocation = NULL;

	if ( ! pFnCheckValidLocation )
		pFnCheckValidLocation = (UFunction*) UObject::GObjObjects()->Data[ 49648 ];

	AUTPawn_execCheckValidLocation_Parms CheckValidLocation_Parms;
	memcpy ( &CheckValidLocation_Parms.FeignLocation, &FeignLocation, 0xC );

	this->ProcessEvent ( pFnCheckValidLocation, &CheckValidLocation_Parms, NULL );

	return CheckValidLocation_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetFeignEndLocation
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 FeignLocation                  ( CPF_Parm )

bool AUTPawn::SetFeignEndLocation ( struct FVector HitLocation, struct FVector FeignLocation )
{
	static UFunction* pFnSetFeignEndLocation = NULL;

	if ( ! pFnSetFeignEndLocation )
		pFnSetFeignEndLocation = (UFunction*) UObject::GObjObjects()->Data[ 49643 ];

	AUTPawn_execSetFeignEndLocation_Parms SetFeignEndLocation_Parms;
	memcpy ( &SetFeignEndLocation_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SetFeignEndLocation_Parms.FeignLocation, &FeignLocation, 0xC );

	this->ProcessEvent ( pFnSetFeignEndLocation, &SetFeignEndLocation_Parms, NULL );

	return SetFeignEndLocation_Parms.ReturnValue;
};

// Function UTGame.UTPawn.PlayFeignDeath
// [0x00820102] 
// Parameters infos:

void AUTPawn::PlayFeignDeath ( )
{
	static UFunction* pFnPlayFeignDeath = NULL;

	if ( ! pFnPlayFeignDeath )
		pFnPlayFeignDeath = (UFunction*) UObject::GObjObjects()->Data[ 49629 ];

	AUTPawn_execPlayFeignDeath_Parms PlayFeignDeath_Parms;

	this->ProcessEvent ( pFnPlayFeignDeath, &PlayFeignDeath_Parms, NULL );
};

// Function UTGame.UTPawn.FeignDeathDelayTimer
// [0x00020002] 
// Parameters infos:

void AUTPawn::FeignDeathDelayTimer ( )
{
	static UFunction* pFnFeignDeathDelayTimer = NULL;

	if ( ! pFnFeignDeathDelayTimer )
		pFnFeignDeathDelayTimer = (UFunction*) UObject::GObjObjects()->Data[ 49626 ];

	AUTPawn_execFeignDeathDelayTimer_Parms FeignDeathDelayTimer_Parms;

	this->ProcessEvent ( pFnFeignDeathDelayTimer, &FeignDeathDelayTimer_Parms, NULL );
};

// Function UTGame.UTPawn.StartFeignDeathRecoveryAnim
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventStartFeignDeathRecoveryAnim ( )
{
	static UFunction* pFnStartFeignDeathRecoveryAnim = NULL;

	if ( ! pFnStartFeignDeathRecoveryAnim )
		pFnStartFeignDeathRecoveryAnim = (UFunction*) UObject::GObjObjects()->Data[ 49624 ];

	AUTPawn_eventStartFeignDeathRecoveryAnim_Parms StartFeignDeathRecoveryAnim_Parms;

	this->ProcessEvent ( pFnStartFeignDeathRecoveryAnim, &StartFeignDeathRecoveryAnim_Parms, NULL );
};

// Function UTGame.UTPawn.ApplyWeaponOverlayFlags
// [0x00020102] 
// Parameters infos:
// unsigned char                  NewFlags                       ( CPF_Parm )

void AUTPawn::ApplyWeaponOverlayFlags ( unsigned char NewFlags )
{
	static UFunction* pFnApplyWeaponOverlayFlags = NULL;

	if ( ! pFnApplyWeaponOverlayFlags )
		pFnApplyWeaponOverlayFlags = (UFunction*) UObject::GObjObjects()->Data[ 49620 ];

	AUTPawn_execApplyWeaponOverlayFlags_Parms ApplyWeaponOverlayFlags_Parms;
	ApplyWeaponOverlayFlags_Parms.NewFlags = NewFlags;

	this->ProcessEvent ( pFnApplyWeaponOverlayFlags, &ApplyWeaponOverlayFlags_Parms, NULL );
};

// Function UTGame.UTPawn.ClearWeaponOverlayFlag
// [0x00020002] 
// Parameters infos:
// unsigned char                  FlagToClear                    ( CPF_Parm )

void AUTPawn::ClearWeaponOverlayFlag ( unsigned char FlagToClear )
{
	static UFunction* pFnClearWeaponOverlayFlag = NULL;

	if ( ! pFnClearWeaponOverlayFlag )
		pFnClearWeaponOverlayFlag = (UFunction*) UObject::GObjObjects()->Data[ 49618 ];

	AUTPawn_execClearWeaponOverlayFlag_Parms ClearWeaponOverlayFlag_Parms;
	ClearWeaponOverlayFlag_Parms.FlagToClear = FlagToClear;

	this->ProcessEvent ( pFnClearWeaponOverlayFlag, &ClearWeaponOverlayFlag_Parms, NULL );
};

// Function UTGame.UTPawn.SetWeaponOverlayFlag
// [0x00020002] 
// Parameters infos:
// unsigned char                  FlagToSet                      ( CPF_Parm )

void AUTPawn::SetWeaponOverlayFlag ( unsigned char FlagToSet )
{
	static UFunction* pFnSetWeaponOverlayFlag = NULL;

	if ( ! pFnSetWeaponOverlayFlag )
		pFnSetWeaponOverlayFlag = (UFunction*) UObject::GObjObjects()->Data[ 49616 ];

	AUTPawn_execSetWeaponOverlayFlag_Parms SetWeaponOverlayFlag_Parms;
	SetWeaponOverlayFlag_Parms.FlagToSet = FlagToSet;

	this->ProcessEvent ( pFnSetWeaponOverlayFlag, &SetWeaponOverlayFlag_Parms, NULL );
};

// Function UTGame.UTPawn.GetOverlayMaterial
// [0x00020102] 
// Parameters infos:
// class UMaterialInterface*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UMaterialInterface* AUTPawn::GetOverlayMaterial ( )
{
	static UFunction* pFnGetOverlayMaterial = NULL;

	if ( ! pFnGetOverlayMaterial )
		pFnGetOverlayMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49614 ];

	AUTPawn_execGetOverlayMaterial_Parms GetOverlayMaterial_Parms;

	this->ProcessEvent ( pFnGetOverlayMaterial, &GetOverlayMaterial_Parms, NULL );

	return GetOverlayMaterial_Parms.ReturnValue;
};

// Function UTGame.UTPawn.GetShieldMaterialInstance
// [0x00020102] 
// Parameters infos:
// class UMaterialInterface*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bTeamGame                      ( CPF_Parm )

class UMaterialInterface* AUTPawn::GetShieldMaterialInstance ( unsigned long bTeamGame )
{
	static UFunction* pFnGetShieldMaterialInstance = NULL;

	if ( ! pFnGetShieldMaterialInstance )
		pFnGetShieldMaterialInstance = (UFunction*) UObject::GObjObjects()->Data[ 49609 ];

	AUTPawn_execGetShieldMaterialInstance_Parms GetShieldMaterialInstance_Parms;
	GetShieldMaterialInstance_Parms.bTeamGame = bTeamGame;

	this->ProcessEvent ( pFnGetShieldMaterialInstance, &GetShieldMaterialInstance_Parms, NULL );

	return GetShieldMaterialInstance_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetOverlayMaterial
// [0x00020102] 
// Parameters infos:
// class UMaterialInterface*      NewOverlay                     ( CPF_Parm )

void AUTPawn::SetOverlayMaterial ( class UMaterialInterface* NewOverlay )
{
	static UFunction* pFnSetOverlayMaterial = NULL;

	if ( ! pFnSetOverlayMaterial )
		pFnSetOverlayMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49606 ];

	AUTPawn_execSetOverlayMaterial_Parms SetOverlayMaterial_Parms;
	SetOverlayMaterial_Parms.NewOverlay = NewOverlay;

	this->ProcessEvent ( pFnSetOverlayMaterial, &SetOverlayMaterial_Parms, NULL );
};

// Function UTGame.UTPawn.GetWeaponAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USoundCue* AUTPawn::GetWeaponAmbientSound ( )
{
	static UFunction* pFnGetWeaponAmbientSound = NULL;

	if ( ! pFnGetWeaponAmbientSound )
		pFnGetWeaponAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 49604 ];

	AUTPawn_execGetWeaponAmbientSound_Parms GetWeaponAmbientSound_Parms;

	this->ProcessEvent ( pFnGetWeaponAmbientSound, &GetWeaponAmbientSound_Parms, NULL );

	return GetWeaponAmbientSound_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetWeaponAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               NewAmbientSound                ( CPF_Parm )

void AUTPawn::SetWeaponAmbientSound ( class USoundCue* NewAmbientSound )
{
	static UFunction* pFnSetWeaponAmbientSound = NULL;

	if ( ! pFnSetWeaponAmbientSound )
		pFnSetWeaponAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 49602 ];

	AUTPawn_execSetWeaponAmbientSound_Parms SetWeaponAmbientSound_Parms;
	SetWeaponAmbientSound_Parms.NewAmbientSound = NewAmbientSound;

	this->ProcessEvent ( pFnSetWeaponAmbientSound, &SetWeaponAmbientSound_Parms, NULL );
};

// Function UTGame.UTPawn.GetPawnAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USoundCue* AUTPawn::GetPawnAmbientSound ( )
{
	static UFunction* pFnGetPawnAmbientSound = NULL;

	if ( ! pFnGetPawnAmbientSound )
		pFnGetPawnAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 49600 ];

	AUTPawn_execGetPawnAmbientSound_Parms GetPawnAmbientSound_Parms;

	this->ProcessEvent ( pFnGetPawnAmbientSound, &GetPawnAmbientSound_Parms, NULL );

	return GetPawnAmbientSound_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetPawnAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               NewAmbientSound                ( CPF_Parm )

void AUTPawn::SetPawnAmbientSound ( class USoundCue* NewAmbientSound )
{
	static UFunction* pFnSetPawnAmbientSound = NULL;

	if ( ! pFnSetPawnAmbientSound )
		pFnSetPawnAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 49598 ];

	AUTPawn_execSetPawnAmbientSound_Parms SetPawnAmbientSound_Parms;
	SetPawnAmbientSound_Parms.NewAmbientSound = NewAmbientSound;

	this->ProcessEvent ( pFnSetPawnAmbientSound, &SetPawnAmbientSound_Parms, NULL );
};

// Function UTGame.UTPawn.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTPawn::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 49588 ];

	AUTPawn_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTPawn.PlayDyingSound
// [0x00020002] 
// Parameters infos:

void AUTPawn::PlayDyingSound ( )
{
	static UFunction* pFnPlayDyingSound = NULL;

	if ( ! pFnPlayDyingSound )
		pFnPlayDyingSound = (UFunction*) UObject::GObjObjects()->Data[ 49587 ];

	AUTPawn_execPlayDyingSound_Parms PlayDyingSound_Parms;

	this->ProcessEvent ( pFnPlayDyingSound, &PlayDyingSound_Parms, NULL );
};

// Function UTGame.UTPawn.CanMultiJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::CanMultiJump ( )
{
	static UFunction* pFnCanMultiJump = NULL;

	if ( ! pFnCanMultiJump )
		pFnCanMultiJump = (UFunction*) UObject::GObjObjects()->Data[ 49585 ];

	AUTPawn_execCanMultiJump_Parms CanMultiJump_Parms;

	this->ProcessEvent ( pFnCanMultiJump, &CanMultiJump_Parms, NULL );

	return CanMultiJump_Parms.ReturnValue;
};

// Function UTGame.UTPawn.CanDoubleJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::CanDoubleJump ( )
{
	static UFunction* pFnCanDoubleJump = NULL;

	if ( ! pFnCanDoubleJump )
		pFnCanDoubleJump = (UFunction*) UObject::GObjObjects()->Data[ 43928 ];

	AUTPawn_execCanDoubleJump_Parms CanDoubleJump_Parms;

	this->ProcessEvent ( pFnCanDoubleJump, &CanDoubleJump_Parms, NULL );

	return CanDoubleJump_Parms.ReturnValue;
};

// Function UTGame.UTPawn.JumpOutOfWater
// [0x00020002] 
// Parameters infos:
// struct FVector                 JumpDir                        ( CPF_Parm )

void AUTPawn::JumpOutOfWater ( struct FVector JumpDir )
{
	static UFunction* pFnJumpOutOfWater = NULL;

	if ( ! pFnJumpOutOfWater )
		pFnJumpOutOfWater = (UFunction*) UObject::GObjObjects()->Data[ 49583 ];

	AUTPawn_execJumpOutOfWater_Parms JumpOutOfWater_Parms;
	memcpy ( &JumpOutOfWater_Parms.JumpDir, &JumpDir, 0xC );

	this->ProcessEvent ( pFnJumpOutOfWater, &JumpOutOfWater_Parms, NULL );
};

// Function UTGame.UTPawn.Landed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void AUTPawn::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 49577 ];

	AUTPawn_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function UTGame.UTPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool AUTPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 49573 ];

	AUTPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function UTGame.UTPawn.StopFlying
// [0x00020100] 
// Parameters infos:

void AUTPawn::StopFlying ( )
{
	static UFunction* pFnStopFlying = NULL;

	if ( ! pFnStopFlying )
		pFnStopFlying = (UFunction*) UObject::GObjObjects()->Data[ 49572 ];

	AUTPawn_execStopFlying_Parms StopFlying_Parms;

	this->ProcessEvent ( pFnStopFlying, &StopFlying_Parms, NULL );
};

// Function UTGame.UTPawn.StartFlying
// [0x00020100] 
// Parameters infos:

void AUTPawn::StartFlying ( )
{
	static UFunction* pFnStartFlying = NULL;

	if ( ! pFnStartFlying )
		pFnStartFlying = (UFunction*) UObject::GObjObjects()->Data[ 49571 ];

	AUTPawn_execStartFlying_Parms StartFlying_Parms;

	this->ProcessEvent ( pFnStartFlying, &StartFlying_Parms, NULL );
};

// Function UTGame.UTPawn.Gasp
// [0x00020002] 
// Parameters infos:

void AUTPawn::Gasp ( )
{
	static UFunction* pFnGasp = NULL;

	if ( ! pFnGasp )
		pFnGasp = (UFunction*) UObject::GObjObjects()->Data[ 49570 ];

	AUTPawn_execGasp_Parms Gasp_Parms;

	this->ProcessEvent ( pFnGasp, &Gasp_Parms, NULL );
};

// Function UTGame.UTPawn.DoDoubleJump
// [0x00020002] 
// Parameters infos:
// unsigned long                  bUpdating                      ( CPF_Parm )

void AUTPawn::DoDoubleJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoDoubleJump = NULL;

	if ( ! pFnDoDoubleJump )
		pFnDoDoubleJump = (UFunction*) UObject::GObjObjects()->Data[ 49567 ];

	AUTPawn_execDoDoubleJump_Parms DoDoubleJump_Parms;
	DoDoubleJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoDoubleJump, &DoDoubleJump_Parms, NULL );
};

// Function UTGame.UTPawn.PerformDodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )
// struct FVector                 Dir                            ( CPF_Parm )
// struct FVector                 Cross                          ( CPF_Parm )

bool AUTPawn::PerformDodge ( unsigned char DoubleClickMove, struct FVector Dir, struct FVector Cross )
{
	static UFunction* pFnPerformDodge = NULL;

	if ( ! pFnPerformDodge )
		pFnPerformDodge = (UFunction*) UObject::GObjObjects()->Data[ 49558 ];

	AUTPawn_execPerformDodge_Parms PerformDodge_Parms;
	PerformDodge_Parms.DoubleClickMove = DoubleClickMove;
	memcpy ( &PerformDodge_Parms.Dir, &Dir, 0xC );
	memcpy ( &PerformDodge_Parms.Cross, &Cross, 0xC );

	this->ProcessEvent ( pFnPerformDodge, &PerformDodge_Parms, NULL );

	return PerformDodge_Parms.ReturnValue;
};

// Function UTGame.UTPawn.BotDodge
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Dir                            ( CPF_Parm )

struct FVector AUTPawn::BotDodge ( struct FVector Dir )
{
	static UFunction* pFnBotDodge = NULL;

	if ( ! pFnBotDodge )
		pFnBotDodge = (UFunction*) UObject::GObjObjects()->Data[ 49552 ];

	AUTPawn_execBotDodge_Parms BotDodge_Parms;
	memcpy ( &BotDodge_Parms.Dir, &Dir, 0xC );

	this->ProcessEvent ( pFnBotDodge, &BotDodge_Parms, NULL );

	return BotDodge_Parms.ReturnValue;
};

// Function UTGame.UTPawn.Dodge
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool AUTPawn::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 44052 ];

	AUTPawn_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function UTGame.UTPawn.GetWeaponStartTraceLocation
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector AUTPawn::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 49537 ];

	AUTPawn_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function UTGame.UTPawn.CalcThirdPersonCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTPawn::CalcThirdPersonCam ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcThirdPersonCam = NULL;

	if ( ! pFnCalcThirdPersonCam )
		pFnCalcThirdPersonCam = (UFunction*) UObject::GObjObjects()->Data[ 49522 ];

	AUTPawn_execCalcThirdPersonCam_Parms CalcThirdPersonCam_Parms;
	CalcThirdPersonCam_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcThirdPersonCam, &CalcThirdPersonCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcThirdPersonCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcThirdPersonCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcThirdPersonCam_Parms.out_FOV;

	return CalcThirdPersonCam_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetHeroCam
// [0x00420102] 
// Parameters infos:
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )

void AUTPawn::SetHeroCam ( struct FRotator* out_CamRot )
{
	static UFunction* pFnSetHeroCam = NULL;

	if ( ! pFnSetHeroCam )
		pFnSetHeroCam = (UFunction*) UObject::GObjObjects()->Data[ 49519 ];

	AUTPawn_execSetHeroCam_Parms SetHeroCam_Parms;

	this->ProcessEvent ( pFnSetHeroCam, &SetHeroCam_Parms, NULL );

	if ( out_CamRot )
		memcpy ( out_CamRot, &SetHeroCam_Parms.out_CamRot, 0xC );
};

// Function UTGame.UTPawn.TryNewCamRot
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )
// struct FRotator                ViewRotation                   ( CPF_Parm )
// float                          CamDist                        ( CPF_Parm | CPF_OutParm )

bool AUTPawn::TryNewCamRot ( class AUTPlayerController* PC, struct FRotator ViewRotation, float* CamDist )
{
	static UFunction* pFnTryNewCamRot = NULL;

	if ( ! pFnTryNewCamRot )
		pFnTryNewCamRot = (UFunction*) UObject::GObjObjects()->Data[ 49511 ];

	AUTPawn_execTryNewCamRot_Parms TryNewCamRot_Parms;
	TryNewCamRot_Parms.PC = PC;
	memcpy ( &TryNewCamRot_Parms.ViewRotation, &ViewRotation, 0xC );

	this->ProcessEvent ( pFnTryNewCamRot, &TryNewCamRot_Parms, NULL );

	if ( CamDist )
		*CamDist = TryNewCamRot_Parms.CamDist;

	return TryNewCamRot_Parms.ReturnValue;
};

// Function UTGame.UTPawn.FindGoodEndView
// [0x00C20102] 
// Parameters infos:
// class APlayerController*       InPC                           ( CPF_Parm )
// struct FRotator                GoodRotation                   ( CPF_Parm | CPF_OutParm )

void AUTPawn::FindGoodEndView ( class APlayerController* InPC, struct FRotator* GoodRotation )
{
	static UFunction* pFnFindGoodEndView = NULL;

	if ( ! pFnFindGoodEndView )
		pFnFindGoodEndView = (UFunction*) UObject::GObjObjects()->Data[ 49501 ];

	AUTPawn_execFindGoodEndView_Parms FindGoodEndView_Parms;
	FindGoodEndView_Parms.InPC = InPC;

	this->ProcessEvent ( pFnFindGoodEndView, &FindGoodEndView_Parms, NULL );

	if ( GoodRotation )
		memcpy ( GoodRotation, &FindGoodEndView_Parms.GoodRotation, 0xC );
};

// Function UTGame.UTPawn.SetThirdPersonCamera
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void AUTPawn::SetThirdPersonCamera ( unsigned long bNewBehindView )
{
	static UFunction* pFnSetThirdPersonCamera = NULL;

	if ( ! pFnSetThirdPersonCamera )
		pFnSetThirdPersonCamera = (UFunction*) UObject::GObjObjects()->Data[ 49498 ];

	AUTPawn_execSetThirdPersonCamera_Parms SetThirdPersonCamera_Parms;
	SetThirdPersonCamera_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnSetThirdPersonCamera, &SetThirdPersonCamera_Parms, NULL );
};

// Function UTGame.UTPawn.CalcCamera
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTPawn::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 49492 ];

	AUTPawn_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AddDefaultInventory
// [0x00020002] 
// Parameters infos:

void AUTPawn::AddDefaultInventory ( )
{
	static UFunction* pFnAddDefaultInventory = NULL;

	if ( ! pFnAddDefaultInventory )
		pFnAddDefaultInventory = (UFunction*) UObject::GObjObjects()->Data[ 49491 ];

	AUTPawn_execAddDefaultInventory_Parms AddDefaultInventory_Parms;

	this->ProcessEvent ( pFnAddDefaultInventory, &AddDefaultInventory_Parms, NULL );
};

// Function UTGame.UTPawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 49488 ];

	AUTPawn_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTPawn.DoingDeathAnim
// [0x00820102] 
// Parameters infos:

void AUTPawn::DoingDeathAnim ( )
{
	static UFunction* pFnDoingDeathAnim = NULL;

	if ( ! pFnDoingDeathAnim )
		pFnDoingDeathAnim = (UFunction*) UObject::GObjObjects()->Data[ 49479 ];

	AUTPawn_execDoingDeathAnim_Parms DoingDeathAnim_Parms;

	this->ProcessEvent ( pFnDoingDeathAnim, &DoingDeathAnim_Parms, NULL );
};

// Function UTGame.UTPawn.PlayDying
// [0x00820102] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )

void AUTPawn::PlayDying ( class UClass* DamageType, struct FVector HitLoc )
{
	static UFunction* pFnPlayDying = NULL;

	if ( ! pFnPlayDying )
		pFnPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 49447 ];

	AUTPawn_execPlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy ( &PlayDying_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnPlayDying, &PlayDying_Parms, NULL );
};

// Function UTGame.UTPawn.TurnOffPawn
// [0x00020102] 
// Parameters infos:

void AUTPawn::TurnOffPawn ( )
{
	static UFunction* pFnTurnOffPawn = NULL;

	if ( ! pFnTurnOffPawn )
		pFnTurnOffPawn = (UFunction*) UObject::GObjObjects()->Data[ 49446 ];

	AUTPawn_execTurnOffPawn_Parms TurnOffPawn_Parms;

	this->ProcessEvent ( pFnTurnOffPawn, &TurnOffPawn_Parms, NULL );
};

// Function UTGame.UTPawn.SpawnGibs
// [0x00820102] 
// Parameters infos:
// class UClass*                  UTDamageType                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTPawn::SpawnGibs ( class UClass* UTDamageType, struct FVector HitLocation )
{
	static UFunction* pFnSpawnGibs = NULL;

	if ( ! pFnSpawnGibs )
		pFnSpawnGibs = (UFunction*) UObject::GObjObjects()->Data[ 49433 ];

	AUTPawn_execSpawnGibs_Parms SpawnGibs_Parms;
	SpawnGibs_Parms.UTDamageType = UTDamageType;
	memcpy ( &SpawnGibs_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnGibs, &SpawnGibs_Parms, NULL );
};

// Function UTGame.UTPawn.SpawnGib
// [0x00820102] 
// Parameters infos:
// class AUTGib*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  GibClass                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// class UClass*                  UTDamageType                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  bSpinGib                       ( CPF_Parm )

class AUTGib* AUTPawn::SpawnGib ( class UClass* GibClass, struct FName BoneName, class UClass* UTDamageType, struct FVector HitLocation, unsigned long bSpinGib )
{
	static UFunction* pFnSpawnGib = NULL;

	if ( ! pFnSpawnGib )
		pFnSpawnGib = (UFunction*) UObject::GObjObjects()->Data[ 49416 ];

	AUTPawn_execSpawnGib_Parms SpawnGib_Parms;
	SpawnGib_Parms.GibClass = GibClass;
	memcpy ( &SpawnGib_Parms.BoneName, &BoneName, 0x8 );
	SpawnGib_Parms.UTDamageType = UTDamageType;
	memcpy ( &SpawnGib_Parms.HitLocation, &HitLocation, 0xC );
	SpawnGib_Parms.bSpinGib = bSpinGib;

	this->ProcessEvent ( pFnSpawnGib, &SpawnGib_Parms, NULL );

	return SpawnGib_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SpawnHeadGib
// [0x00820102] 
// Parameters infos:
// class UClass*                  UTDamageType                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTPawn::SpawnHeadGib ( class UClass* UTDamageType, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHeadGib = NULL;

	if ( ! pFnSpawnHeadGib )
		pFnSpawnHeadGib = (UFunction*) UObject::GObjObjects()->Data[ 49396 ];

	AUTPawn_execSpawnHeadGib_Parms SpawnHeadGib_Parms;
	SpawnHeadGib_Parms.UTDamageType = UTDamageType;
	memcpy ( &SpawnHeadGib_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHeadGib, &SpawnHeadGib_Parms, NULL );
};

// Function UTGame.UTPawn.ShouldGib
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  UTDamageType                   ( CPF_Parm )

bool AUTPawn::ShouldGib ( class UClass* UTDamageType )
{
	static UFunction* pFnShouldGib = NULL;

	if ( ! pFnShouldGib )
		pFnShouldGib = (UFunction*) UObject::GObjObjects()->Data[ 49391 ];

	AUTPawn_execShouldGib_Parms ShouldGib_Parms;
	ShouldGib_Parms.UTDamageType = UTDamageType;

	this->ProcessEvent ( pFnShouldGib, &ShouldGib_Parms, NULL );

	return ShouldGib_Parms.ReturnValue;
};

// Function UTGame.UTPawn.PlayJumpingSound
// [0x00020002] 
// Parameters infos:

void AUTPawn::PlayJumpingSound ( )
{
	static UFunction* pFnPlayJumpingSound = NULL;

	if ( ! pFnPlayJumpingSound )
		pFnPlayJumpingSound = (UFunction*) UObject::GObjObjects()->Data[ 49387 ];

	AUTPawn_execPlayJumpingSound_Parms PlayJumpingSound_Parms;

	this->ProcessEvent ( pFnPlayJumpingSound, &PlayJumpingSound_Parms, NULL );
};

// Function UTGame.UTPawn.PlayLandingSound
// [0x00020002] 
// Parameters infos:

void AUTPawn::PlayLandingSound ( )
{
	static UFunction* pFnPlayLandingSound = NULL;

	if ( ! pFnPlayLandingSound )
		pFnPlayLandingSound = (UFunction*) UObject::GObjObjects()->Data[ 49382 ];

	AUTPawn_execPlayLandingSound_Parms PlayLandingSound_Parms;

	this->ProcessEvent ( pFnPlayLandingSound, &PlayLandingSound_Parms, NULL );
};

// Function UTGame.UTPawn.GetMaterialBelowFeet
// [0x00820102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTPawn::GetMaterialBelowFeet ( )
{
	static UFunction* pFnGetMaterialBelowFeet = NULL;

	if ( ! pFnGetMaterialBelowFeet )
		pFnGetMaterialBelowFeet = (UFunction*) UObject::GObjObjects()->Data[ 49372 ];

	AUTPawn_execGetMaterialBelowFeet_Parms GetMaterialBelowFeet_Parms;

	this->ProcessEvent ( pFnGetMaterialBelowFeet, &GetMaterialBelowFeet_Parms, NULL );

	return GetMaterialBelowFeet_Parms.ReturnValue;
};

// Function UTGame.UTPawn.ActuallyPlayFootstepSound
// [0x00020102] 
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void AUTPawn::ActuallyPlayFootstepSound ( int FootDown )
{
	static UFunction* pFnActuallyPlayFootstepSound = NULL;

	if ( ! pFnActuallyPlayFootstepSound )
		pFnActuallyPlayFootstepSound = (UFunction*) UObject::GObjObjects()->Data[ 49366 ];

	AUTPawn_execActuallyPlayFootstepSound_Parms ActuallyPlayFootstepSound_Parms;
	ActuallyPlayFootstepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnActuallyPlayFootstepSound, &ActuallyPlayFootstepSound_Parms, NULL );
};

// Function UTGame.UTPawn.PlayFootStepSound
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void AUTPawn::eventPlayFootStepSound ( int FootDown )
{
	static UFunction* pFnPlayFootStepSound = NULL;

	if ( ! pFnPlayFootStepSound )
		pFnPlayFootStepSound = (UFunction*) UObject::GObjObjects()->Data[ 49362 ];

	AUTPawn_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL );
};

// Function UTGame.UTPawn.GetDebugName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTPawn::GetDebugName ( )
{
	static UFunction* pFnGetDebugName = NULL;

	if ( ! pFnGetDebugName )
		pFnGetDebugName = (UFunction*) UObject::GObjObjects()->Data[ 49360 ];

	AUTPawn_execGetDebugName_Parms GetDebugName_Parms;

	this->ProcessEvent ( pFnGetDebugName, &GetDebugName_Parms, NULL );

	return GetDebugName_Parms.ReturnValue;
};

// Function UTGame.UTPawn.GiveHealth
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            HealAmount                     ( CPF_Parm )
// int                            HealMax                        ( CPF_Parm )

bool AUTPawn::GiveHealth ( int HealAmount, int HealMax )
{
	static UFunction* pFnGiveHealth = NULL;

	if ( ! pFnGiveHealth )
		pFnGiveHealth = (UFunction*) UObject::GObjObjects()->Data[ 49356 ];

	AUTPawn_execGiveHealth_Parms GiveHealth_Parms;
	GiveHealth_Parms.HealAmount = HealAmount;
	GiveHealth_Parms.HealMax = HealMax;

	this->ProcessEvent ( pFnGiveHealth, &GiveHealth_Parms, NULL );

	return GiveHealth_Parms.ReturnValue;
};

// Function UTGame.UTPawn.HoldGameObject
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKCarriedObject*       GameObj                        ( CPF_Parm )

void AUTPawn::eventHoldGameObject ( class AUDKCarriedObject* GameObj )
{
	static UFunction* pFnHoldGameObject = NULL;

	if ( ! pFnHoldGameObject )
		pFnHoldGameObject = (UFunction*) UObject::GObjObjects()->Data[ 49348 ];

	AUTPawn_eventHoldGameObject_Parms HoldGameObject_Parms;
	HoldGameObject_Parms.GameObj = GameObj;

	this->ProcessEvent ( pFnHoldGameObject, &HoldGameObject_Parms, NULL );
};

// Function UTGame.UTPawn.EnableInventoryPickup
// [0x00020002] 
// Parameters infos:

void AUTPawn::EnableInventoryPickup ( )
{
	static UFunction* pFnEnableInventoryPickup = NULL;

	if ( ! pFnEnableInventoryPickup )
		pFnEnableInventoryPickup = (UFunction*) UObject::GObjObjects()->Data[ 49347 ];

	AUTPawn_execEnableInventoryPickup_Parms EnableInventoryPickup_Parms;

	this->ProcessEvent ( pFnEnableInventoryPickup, &EnableInventoryPickup_Parms, NULL );
};

// Function UTGame.UTPawn.DropFlag
// [0x00020002] 
// Parameters infos:

void AUTPawn::DropFlag ( )
{
	static UFunction* pFnDropFlag = NULL;

	if ( ! pFnDropFlag )
		pFnDropFlag = (UFunction*) UObject::GObjObjects()->Data[ 49344 ];

	AUTPawn_execDropFlag_Parms DropFlag_Parms;

	this->ProcessEvent ( pFnDropFlag, &DropFlag_Parms, NULL );
};

// Function UTGame.UTPawn.AdjustDamage
// [0x00420002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            InDamage                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void AUTPawn::AdjustDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser, int* InDamage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustDamage = NULL;

	if ( ! pFnAdjustDamage )
		pFnAdjustDamage = (UFunction*) UObject::GObjObjects()->Data[ 49335 ];

	AUTPawn_execAdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy ( &AdjustDamage_Parms.HitInfo, &HitInfo, 0x1C );
	AdjustDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnAdjustDamage, &AdjustDamage_Parms, NULL );

	if ( InDamage )
		*InDamage = AdjustDamage_Parms.InDamage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustDamage_Parms.Momentum, 0xC );
};

// Function UTGame.UTPawn.ShieldAbsorb
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Damage                         ( CPF_Parm )

int AUTPawn::ShieldAbsorb ( int Damage )
{
	static UFunction* pFnShieldAbsorb = NULL;

	if ( ! pFnShieldAbsorb )
		pFnShieldAbsorb = (UFunction*) UObject::GObjObjects()->Data[ 49330 ];

	AUTPawn_execShieldAbsorb_Parms ShieldAbsorb_Parms;
	ShieldAbsorb_Parms.Damage = Damage;

	this->ProcessEvent ( pFnShieldAbsorb, &ShieldAbsorb_Parms, NULL );

	return ShieldAbsorb_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AbsorbDamage
// [0x00420002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CurrentShieldStrength          ( CPF_Parm )
// float                          AbsorptionRate                 ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )

int AUTPawn::AbsorbDamage ( int CurrentShieldStrength, float AbsorptionRate, int* Damage )
{
	static UFunction* pFnAbsorbDamage = NULL;

	if ( ! pFnAbsorbDamage )
		pFnAbsorbDamage = (UFunction*) UObject::GObjObjects()->Data[ 49324 ];

	AUTPawn_execAbsorbDamage_Parms AbsorbDamage_Parms;
	AbsorbDamage_Parms.CurrentShieldStrength = CurrentShieldStrength;
	AbsorbDamage_Parms.AbsorptionRate = AbsorptionRate;

	this->ProcessEvent ( pFnAbsorbDamage, &AbsorbDamage_Parms, NULL );

	if ( Damage )
		*Damage = AbsorbDamage_Parms.Damage;

	return AbsorbDamage_Parms.ReturnValue;
};

// Function UTGame.UTPawn.GetShieldStrength
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTPawn::GetShieldStrength ( )
{
	static UFunction* pFnGetShieldStrength = NULL;

	if ( ! pFnGetShieldStrength )
		pFnGetShieldStrength = (UFunction*) UObject::GObjObjects()->Data[ 44980 ];

	AUTPawn_execGetShieldStrength_Parms GetShieldStrength_Parms;

	this->ProcessEvent ( pFnGetShieldStrength, &GetShieldStrength_Parms, NULL );

	return GetShieldStrength_Parms.ReturnValue;
};

// Function UTGame.UTPawn.ClientRestart
// [0x00820102] 
// Parameters infos:

void AUTPawn::ClientRestart ( )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 49321 ];

	AUTPawn_execClientRestart_Parms ClientRestart_Parms;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function UTGame.UTPawn.StopDriving
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void AUTPawn::eventStopDriving ( class AVehicle* V )
{
	static UFunction* pFnStopDriving = NULL;

	if ( ! pFnStopDriving )
		pFnStopDriving = (UFunction*) UObject::GObjObjects()->Data[ 49315 ];

	AUTPawn_eventStopDriving_Parms StopDriving_Parms;
	StopDriving_Parms.V = V;

	this->ProcessEvent ( pFnStopDriving, &StopDriving_Parms, NULL );
};

// Function UTGame.UTPawn.StartDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void AUTPawn::eventStartDriving ( class AVehicle* V )
{
	static UFunction* pFnStartDriving = NULL;

	if ( ! pFnStartDriving )
		pFnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 49309 ];

	AUTPawn_eventStartDriving_Parms StartDriving_Parms;
	StartDriving_Parms.V = V;

	this->ProcessEvent ( pFnStartDriving, &StartDriving_Parms, NULL );
};

// Function UTGame.UTPawn.SpawnTransEffect
// [0x00020002] 
// Parameters infos:
// int                            TeamNum                        ( CPF_Parm )

void AUTPawn::SpawnTransEffect ( int TeamNum )
{
	static UFunction* pFnSpawnTransEffect = NULL;

	if ( ! pFnSpawnTransEffect )
		pFnSpawnTransEffect = (UFunction*) UObject::GObjObjects()->Data[ 49306 ];

	AUTPawn_execSpawnTransEffect_Parms SpawnTransEffect_Parms;
	SpawnTransEffect_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnSpawnTransEffect, &SpawnTransEffect_Parms, NULL );
};

// Function UTGame.UTPawn.PlayTeleportEffect
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOut                           ( CPF_Parm )
// unsigned long                  bSound                         ( CPF_Parm )

void AUTPawn::PlayTeleportEffect ( unsigned long bOut, unsigned long bSound )
{
	static UFunction* pFnPlayTeleportEffect = NULL;

	if ( ! pFnPlayTeleportEffect )
		pFnPlayTeleportEffect = (UFunction*) UObject::GObjObjects()->Data[ 49296 ];

	AUTPawn_execPlayTeleportEffect_Parms PlayTeleportEffect_Parms;
	PlayTeleportEffect_Parms.bOut = bOut;
	PlayTeleportEffect_Parms.bSound = bSound;

	this->ProcessEvent ( pFnPlayTeleportEffect, &PlayTeleportEffect_Parms, NULL );
};

// Function UTGame.UTPawn.DeactivateSpawnProtection
// [0x00020002] 
// Parameters infos:

void AUTPawn::DeactivateSpawnProtection ( )
{
	static UFunction* pFnDeactivateSpawnProtection = NULL;

	if ( ! pFnDeactivateSpawnProtection )
		pFnDeactivateSpawnProtection = (UFunction*) UObject::GObjObjects()->Data[ 49292 ];

	AUTPawn_execDeactivateSpawnProtection_Parms DeactivateSpawnProtection_Parms;

	this->ProcessEvent ( pFnDeactivateSpawnProtection, &DeactivateSpawnProtection_Parms, NULL );
};

// Function UTGame.UTPawn.FixedView
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 VisibleMeshes                  ( CPF_Parm | CPF_NeedCtorLink )

void AUTPawn::FixedView ( struct FString VisibleMeshes )
{
	static UFunction* pFnFixedView = NULL;

	if ( ! pFnFixedView )
		pFnFixedView = (UFunction*) UObject::GObjObjects()->Data[ 49288 ];

	AUTPawn_execFixedView_Parms FixedView_Parms;
	memcpy ( &FixedView_Parms.VisibleMeshes, &VisibleMeshes, 0xC );

	this->ProcessEvent ( pFnFixedView, &FixedView_Parms, NULL );
};

// Function UTGame.UTPawn.SetMeshVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void AUTPawn::SetMeshVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetMeshVisibility = NULL;

	if ( ! pFnSetMeshVisibility )
		pFnSetMeshVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49285 ];

	AUTPawn_execSetMeshVisibility_Parms SetMeshVisibility_Parms;
	SetMeshVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetMeshVisibility, &SetMeshVisibility_Parms, NULL );
};

// Function UTGame.UTPawn.SetWeaponAttachmentVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bAttachmentVisible             ( CPF_Parm )

void AUTPawn::SetWeaponAttachmentVisibility ( unsigned long bAttachmentVisible )
{
	static UFunction* pFnSetWeaponAttachmentVisibility = NULL;

	if ( ! pFnSetWeaponAttachmentVisibility )
		pFnSetWeaponAttachmentVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49282 ];

	AUTPawn_execSetWeaponAttachmentVisibility_Parms SetWeaponAttachmentVisibility_Parms;
	SetWeaponAttachmentVisibility_Parms.bAttachmentVisible = bAttachmentVisible;

	this->ProcessEvent ( pFnSetWeaponAttachmentVisibility, &SetWeaponAttachmentVisibility_Parms, NULL );
};

// Function UTGame.UTPawn.SetWeaponVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bWeaponVisible                 ( CPF_Parm )

void AUTPawn::SetWeaponVisibility ( unsigned long bWeaponVisible )
{
	static UFunction* pFnSetWeaponVisibility = NULL;

	if ( ! pFnSetWeaponVisibility )
		pFnSetWeaponVisibility = (UFunction*) UObject::GObjObjects()->Data[ 49276 ];

	AUTPawn_execSetWeaponVisibility_Parms SetWeaponVisibility_Parms;
	SetWeaponVisibility_Parms.bWeaponVisible = bWeaponVisible;

	this->ProcessEvent ( pFnSetWeaponVisibility, &SetWeaponVisibility_Parms, NULL );
};

// Function UTGame.UTPawn.EndViewTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTPawn::eventEndViewTarget ( class APlayerController* PC )
{
	static UFunction* pFnEndViewTarget = NULL;

	if ( ! pFnEndViewTarget )
		pFnEndViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 49274 ];

	AUTPawn_eventEndViewTarget_Parms EndViewTarget_Parms;
	EndViewTarget_Parms.PC = PC;

	this->ProcessEvent ( pFnEndViewTarget, &EndViewTarget_Parms, NULL );
};

// Function UTGame.UTPawn.BecomeViewTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTPawn::eventBecomeViewTarget ( class APlayerController* PC )
{
	static UFunction* pFnBecomeViewTarget = NULL;

	if ( ! pFnBecomeViewTarget )
		pFnBecomeViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 49268 ];

	AUTPawn_eventBecomeViewTarget_Parms BecomeViewTarget_Parms;
	BecomeViewTarget_Parms.PC = PC;

	this->ProcessEvent ( pFnBecomeViewTarget, &BecomeViewTarget_Parms, NULL );
};

// Function UTGame.UTPawn.GetPawnViewLocation
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTPawn::GetPawnViewLocation ( )
{
	static UFunction* pFnGetPawnViewLocation = NULL;

	if ( ! pFnGetPawnViewLocation )
		pFnGetPawnViewLocation = (UFunction*) UObject::GObjObjects()->Data[ 49266 ];

	AUTPawn_execGetPawnViewLocation_Parms GetPawnViewLocation_Parms;

	this->ProcessEvent ( pFnGetPawnViewLocation, &GetPawnViewLocation_Parms, NULL );

	return GetPawnViewLocation_Parms.ReturnValue;
};

// Function UTGame.UTPawn.UpdateEyeHeight
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTPawn::eventUpdateEyeHeight ( float DeltaTime )
{
	static UFunction* pFnUpdateEyeHeight = NULL;

	if ( ! pFnUpdateEyeHeight )
		pFnUpdateEyeHeight = (UFunction*) UObject::GObjObjects()->Data[ 49246 ];

	AUTPawn_eventUpdateEyeHeight_Parms UpdateEyeHeight_Parms;
	UpdateEyeHeight_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateEyeHeight, &UpdateEyeHeight_Parms, NULL );
};

// Function UTGame.UTPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void AUTPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 49243 ];

	AUTPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function UTGame.UTPawn.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void AUTPawn::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 49225 ];

	AUTPawn_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function UTGame.UTPawn.GetScreenName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTPawn::GetScreenName ( )
{
	static UFunction* pFnGetScreenName = NULL;

	if ( ! pFnGetScreenName )
		pFnGetScreenName = (UFunction*) UObject::GObjObjects()->Data[ 49223 ];

	AUTPawn_execGetScreenName_Parms GetScreenName_Parms;

	this->ProcessEvent ( pFnGetScreenName, &GetScreenName_Parms, NULL );

	return GetScreenName_Parms.ReturnValue;
};

// Function UTGame.UTPawn.OnModifyHealth
// [0x00020102] 
// Parameters infos:
// class USeqAct_ModifyHealth*    Action                         ( CPF_Parm )

void AUTPawn::OnModifyHealth ( class USeqAct_ModifyHealth* Action )
{
	static UFunction* pFnOnModifyHealth = NULL;

	if ( ! pFnOnModifyHealth )
		pFnOnModifyHealth = (UFunction*) UObject::GObjObjects()->Data[ 49221 ];

	AUTPawn_execOnModifyHealth_Parms OnModifyHealth_Parms;
	OnModifyHealth_Parms.Action = Action;

	this->ProcessEvent ( pFnOnModifyHealth, &OnModifyHealth_Parms, NULL );
};

// Function UTGame.UTPawn.PlayVictoryAnimation
// [0x00020002] 
// Parameters infos:

void AUTPawn::PlayVictoryAnimation ( )
{
	static UFunction* pFnPlayVictoryAnimation = NULL;

	if ( ! pFnPlayVictoryAnimation )
		pFnPlayVictoryAnimation = (UFunction*) UObject::GObjObjects()->Data[ 49219 ];

	AUTPawn_execPlayVictoryAnimation_Parms PlayVictoryAnimation_Parms;

	this->ProcessEvent ( pFnPlayVictoryAnimation, &PlayVictoryAnimation_Parms, NULL );
};

// Function UTGame.UTPawn.GetEyeHeight
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTPawn::GetEyeHeight ( )
{
	static UFunction* pFnGetEyeHeight = NULL;

	if ( ! pFnGetEyeHeight )
		pFnGetEyeHeight = (UFunction*) UObject::GObjObjects()->Data[ 49217 ];

	AUTPawn_execGetEyeHeight_Parms GetEyeHeight_Parms;

	this->ProcessEvent ( pFnGetEyeHeight, &GetEyeHeight_Parms, NULL );

	return GetEyeHeight_Parms.ReturnValue;
};

// Function UTGame.UTPawn.RangedAttackTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTPawn::RangedAttackTime ( )
{
	static UFunction* pFnRangedAttackTime = NULL;

	if ( ! pFnRangedAttackTime )
		pFnRangedAttackTime = (UFunction*) UObject::GObjObjects()->Data[ 49213 ];

	AUTPawn_execRangedAttackTime_Parms RangedAttackTime_Parms;

	this->ProcessEvent ( pFnRangedAttackTime, &RangedAttackTime_Parms, NULL );

	return RangedAttackTime_Parms.ReturnValue;
};

// Function UTGame.UTPawn.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 49209 ];

	AUTPawn_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function UTGame.UTPawn.ChooseFireMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTPawn::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 49205 ];

	AUTPawn_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function UTGame.UTPawn.StopWeaponFiring
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::StopWeaponFiring ( )
{
	static UFunction* pFnStopWeaponFiring = NULL;

	if ( ! pFnStopWeaponFiring )
		pFnStopWeaponFiring = (UFunction*) UObject::GObjObjects()->Data[ 49200 ];

	AUTPawn_execStopWeaponFiring_Parms StopWeaponFiring_Parms;

	this->ProcessEvent ( pFnStopWeaponFiring, &StopWeaponFiring_Parms, NULL );

	return StopWeaponFiring_Parms.ReturnValue;
};

// Function UTGame.UTPawn.BotFire
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bFinished                      ( CPF_Parm )

bool AUTPawn::BotFire ( unsigned long bFinished )
{
	static UFunction* pFnBotFire = NULL;

	if ( ! pFnBotFire )
		pFnBotFire = (UFunction*) UObject::GObjObjects()->Data[ 49193 ];

	AUTPawn_execBotFire_Parms BotFire_Parms;
	BotFire_Parms.bFinished = bFinished;

	this->ProcessEvent ( pFnBotFire, &BotFire_Parms, NULL );

	return BotFire_Parms.ReturnValue;
};

// Function UTGame.UTPawn.StopFiring
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::StopFiring ( )
{
	static UFunction* pFnStopFiring = NULL;

	if ( ! pFnStopFiring )
		pFnStopFiring = (UFunction*) UObject::GObjObjects()->Data[ 49191 ];

	AUTPawn_execStopFiring_Parms StopFiring_Parms;

	this->ProcessEvent ( pFnStopFiring, &StopFiring_Parms, NULL );

	return StopFiring_Parms.ReturnValue;
};

// Function UTGame.UTPawn.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTPawn::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 49189 ];

	AUTPawn_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function UTGame.UTPawn.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool AUTPawn::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 49184 ];

	AUTPawn_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AddVelocity
// [0x00024002] 
// Parameters infos:
// struct FVector                 NewVelocity                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )

void AUTPawn::AddVelocity ( struct FVector NewVelocity, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnAddVelocity = NULL;

	if ( ! pFnAddVelocity )
		pFnAddVelocity = (UFunction*) UObject::GObjObjects()->Data[ 49178 ];

	AUTPawn_execAddVelocity_Parms AddVelocity_Parms;
	memcpy ( &AddVelocity_Parms.NewVelocity, &NewVelocity, 0xC );
	memcpy ( &AddVelocity_Parms.HitLocation, &HitLocation, 0xC );
	AddVelocity_Parms.DamageType = DamageType;
	memcpy ( &AddVelocity_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnAddVelocity, &AddVelocity_Parms, NULL );
};

// Function UTGame.UTPawn.Falling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTPawn::eventFalling ( )
{
	static UFunction* pFnFalling = NULL;

	if ( ! pFnFalling )
		pFnFalling = (UFunction*) UObject::GObjObjects()->Data[ 49177 ];

	AUTPawn_eventFalling_Parms Falling_Parms;

	this->ProcessEvent ( pFnFalling, &Falling_Parms, NULL );
};

// Function UTGame.UTPawn.StuckOnPawn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   OtherPawn                      ( CPF_Parm )

void AUTPawn::eventStuckOnPawn ( class APawn* OtherPawn )
{
	static UFunction* pFnStuckOnPawn = NULL;

	if ( ! pFnStuckOnPawn )
		pFnStuckOnPawn = (UFunction*) UObject::GObjObjects()->Data[ 49175 ];

	AUTPawn_eventStuckOnPawn_Parms StuckOnPawn_Parms;
	StuckOnPawn_Parms.OtherPawn = OtherPawn;

	this->ProcessEvent ( pFnStuckOnPawn, &StuckOnPawn_Parms, NULL );
};

// Function UTGame.UTPawn.JumpOffPawn
// [0x00020002] 
// Parameters infos:

void AUTPawn::JumpOffPawn ( )
{
	static UFunction* pFnJumpOffPawn = NULL;

	if ( ! pFnJumpOffPawn )
		pFnJumpOffPawn = (UFunction*) UObject::GObjObjects()->Data[ 49174 ];

	AUTPawn_execJumpOffPawn_Parms JumpOffPawn_Parms;

	this->ProcessEvent ( pFnJumpOffPawn, &JumpOffPawn_Parms, NULL );
};

// Function UTGame.UTPawn.gibbedBy
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTPawn::gibbedBy ( class AActor* Other )
{
	static UFunction* pFngibbedBy = NULL;

	if ( ! pFngibbedBy )
		pFngibbedBy = (UFunction*) UObject::GObjObjects()->Data[ 49170 ];

	AUTPawn_execgibbedBy_Parms gibbedBy_Parms;
	gibbedBy_Parms.Other = Other;

	this->ProcessEvent ( pFngibbedBy, &gibbedBy_Parms, NULL );
};

// Function UTGame.UTPawn.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTPawn::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 49167 ];

	AUTPawn_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function UTGame.UTPawn.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTPawn::eventEncroachingOn ( class AActor* Other )
{
	static UFunction* pFnEncroachingOn = NULL;

	if ( ! pFnEncroachingOn )
		pFnEncroachingOn = (UFunction*) UObject::GObjObjects()->Data[ 49164 ];

	AUTPawn_eventEncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachingOn, &EncroachingOn_Parms, NULL );

	return EncroachingOn_Parms.ReturnValue;
};

// Function UTGame.UTPawn.TurnOff
// [0x00020102] 
// Parameters infos:

void AUTPawn::TurnOff ( )
{
	static UFunction* pFnTurnOff = NULL;

	if ( ! pFnTurnOff )
		pFnTurnOff = (UFunction*) UObject::GObjObjects()->Data[ 49163 ];

	AUTPawn_execTurnOff_Parms TurnOff_Parms;

	this->ProcessEvent ( pFnTurnOff, &TurnOff_Parms, NULL );
};

// Function UTGame.UTPawn.WeaponBob
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          BobDamping                     ( CPF_Parm )
// float                          JumpDamping                    ( CPF_Parm )

struct FVector AUTPawn::WeaponBob ( float BobDamping, float JumpDamping )
{
	static UFunction* pFnWeaponBob = NULL;

	if ( ! pFnWeaponBob )
		pFnWeaponBob = (UFunction*) UObject::GObjObjects()->Data[ 49155 ];

	AUTPawn_execWeaponBob_Parms WeaponBob_Parms;
	WeaponBob_Parms.BobDamping = BobDamping;
	WeaponBob_Parms.JumpDamping = JumpDamping;

	this->ProcessEvent ( pFnWeaponBob, &WeaponBob_Parms, NULL );

	return WeaponBob_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SpawnDefaultController
// [0x00820002] 
// Parameters infos:

void AUTPawn::SpawnDefaultController ( )
{
	static UFunction* pFnSpawnDefaultController = NULL;

	if ( ! pFnSpawnDefaultController )
		pFnSpawnDefaultController = (UFunction*) UObject::GObjObjects()->Data[ 49149 ];

	AUTPawn_execSpawnDefaultController_Parms SpawnDefaultController_Parms;

	this->ProcessEvent ( pFnSpawnDefaultController, &SpawnDefaultController_Parms, NULL );
};

// Function UTGame.UTPawn.OnPlayAnim
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_PlayAnim*      inAction                       ( CPF_Parm )

void AUTPawn::OnPlayAnim ( class UUTSeqAct_PlayAnim* inAction )
{
	static UFunction* pFnOnPlayAnim = NULL;

	if ( ! pFnOnPlayAnim )
		pFnOnPlayAnim = (UFunction*) UObject::GObjObjects()->Data[ 49126 ];

	AUTPawn_execOnPlayAnim_Parms OnPlayAnim_Parms;
	OnPlayAnim_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnPlayAnim, &OnPlayAnim_Parms, NULL );
};

// Function UTGame.UTPawn.PlayEmote
// [0x00020302] ( FUNC_Exec )
// Parameters infos:
// struct FName                   InEmoteTag                     ( CPF_Parm )
// int                            InPlayerID                     ( CPF_Parm )

void AUTPawn::PlayEmote ( struct FName InEmoteTag, int InPlayerID )
{
	static UFunction* pFnPlayEmote = NULL;

	if ( ! pFnPlayEmote )
		pFnPlayEmote = (UFunction*) UObject::GObjObjects()->Data[ 49123 ];

	AUTPawn_execPlayEmote_Parms PlayEmote_Parms;
	memcpy ( &PlayEmote_Parms.InEmoteTag, &InEmoteTag, 0x8 );
	PlayEmote_Parms.InPlayerID = InPlayerID;

	this->ProcessEvent ( pFnPlayEmote, &PlayEmote_Parms, NULL );
};

// Function UTGame.UTPawn.ServerPlayEmote
// [0x002200C2] 
// Parameters infos:
// struct FName                   InEmoteTag                     ( CPF_Parm )
// int                            InPlayerID                     ( CPF_Parm )

void AUTPawn::ServerPlayEmote ( struct FName InEmoteTag, int InPlayerID )
{
	static UFunction* pFnServerPlayEmote = NULL;

	if ( ! pFnServerPlayEmote )
		pFnServerPlayEmote = (UFunction*) UObject::GObjObjects()->Data[ 49120 ];

	AUTPawn_execServerPlayEmote_Parms ServerPlayEmote_Parms;
	memcpy ( &ServerPlayEmote_Parms.InEmoteTag, &InEmoteTag, 0x8 );
	ServerPlayEmote_Parms.InPlayerID = InPlayerID;

	this->ProcessEvent ( pFnServerPlayEmote, &ServerPlayEmote_Parms, NULL );
};

// Function UTGame.UTPawn.DoPlayEmote
// [0x00820102] 
// Parameters infos:
// struct FName                   InEmoteTag                     ( CPF_Parm )
// int                            InPlayerID                     ( CPF_Parm )

void AUTPawn::DoPlayEmote ( struct FName InEmoteTag, int InPlayerID )
{
	static UFunction* pFnDoPlayEmote = NULL;

	if ( ! pFnDoPlayEmote )
		pFnDoPlayEmote = (UFunction*) UObject::GObjObjects()->Data[ 49110 ];

	AUTPawn_execDoPlayEmote_Parms DoPlayEmote_Parms;
	memcpy ( &DoPlayEmote_Parms.InEmoteTag, &InEmoteTag, 0x8 );
	DoPlayEmote_Parms.InPlayerID = InPlayerID;

	this->ProcessEvent ( pFnDoPlayEmote, &DoPlayEmote_Parms, NULL );
};

// Function UTGame.UTPawn.PerformEmoteCommand
// [0x00020002] 
// Parameters infos:
// struct FEmoteInfo              EInfo                          ( CPF_Parm | CPF_NeedCtorLink )
// int                            PlayerID                       ( CPF_Parm )

void AUTPawn::PerformEmoteCommand ( struct FEmoteInfo EInfo, int PlayerID )
{
	static UFunction* pFnPerformEmoteCommand = NULL;

	if ( ! pFnPerformEmoteCommand )
		pFnPerformEmoteCommand = (UFunction*) UObject::GObjObjects()->Data[ 49101 ];

	AUTPawn_execPerformEmoteCommand_Parms PerformEmoteCommand_Parms;
	memcpy ( &PerformEmoteCommand_Parms.EInfo, &EInfo, 0x34 );
	PerformEmoteCommand_Parms.PlayerID = PlayerID;

	this->ProcessEvent ( pFnPerformEmoteCommand, &PerformEmoteCommand_Parms, NULL );
};

// Function UTGame.UTPawn.LeaveABloodSplatterDecal
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )

void AUTPawn::LeaveABloodSplatterDecal ( struct FVector HitLoc, struct FVector HitNorm )
{
	static UFunction* pFnLeaveABloodSplatterDecal = NULL;

	if ( ! pFnLeaveABloodSplatterDecal )
		pFnLeaveABloodSplatterDecal = (UFunction*) UObject::GObjObjects()->Data[ 49087 ];

	AUTPawn_execLeaveABloodSplatterDecal_Parms LeaveABloodSplatterDecal_Parms;
	memcpy ( &LeaveABloodSplatterDecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveABloodSplatterDecal_Parms.HitNorm, &HitNorm, 0xC );

	this->ProcessEvent ( pFnLeaveABloodSplatterDecal, &LeaveABloodSplatterDecal_Parms, NULL );
};

// Function UTGame.UTPawn.SetWeapAnimType
// [0x00020102] 
// Parameters infos:
// unsigned char                  AnimType                       ( CPF_Parm )

void AUTPawn::SetWeapAnimType ( unsigned char AnimType )
{
	static UFunction* pFnSetWeapAnimType = NULL;

	if ( ! pFnSetWeapAnimType )
		pFnSetWeapAnimType = (UFunction*) UObject::GObjObjects()->Data[ 49084 ];

	AUTPawn_execSetWeapAnimType_Parms SetWeapAnimType_Parms;
	SetWeapAnimType_Parms.AnimType = AnimType;

	this->ProcessEvent ( pFnSetWeapAnimType, &SetWeapAnimType_Parms, NULL );
};

// Function UTGame.UTPawn.SetAnimRateScale
// [0x00020102] 
// Parameters infos:
// float                          RateScale                      ( CPF_Parm )

void AUTPawn::SetAnimRateScale ( float RateScale )
{
	static UFunction* pFnSetAnimRateScale = NULL;

	if ( ! pFnSetAnimRateScale )
		pFnSetAnimRateScale = (UFunction*) UObject::GObjObjects()->Data[ 49082 ];

	AUTPawn_execSetAnimRateScale_Parms SetAnimRateScale_Parms;
	SetAnimRateScale_Parms.RateScale = RateScale;

	this->ProcessEvent ( pFnSetAnimRateScale, &SetAnimRateScale_Parms, NULL );
};

// Function UTGame.UTPawn.SetHandIKEnabled
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void AUTPawn::SetHandIKEnabled ( unsigned long bEnabled )
{
	static UFunction* pFnSetHandIKEnabled = NULL;

	if ( ! pFnSetHandIKEnabled )
		pFnSetHandIKEnabled = (UFunction*) UObject::GObjObjects()->Data[ 49080 ];

	AUTPawn_execSetHandIKEnabled_Parms SetHandIKEnabled_Parms;
	SetHandIKEnabled_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetHandIKEnabled, &SetHandIKEnabled_Parms, NULL );
};

// Function UTGame.UTPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void AUTPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 49072 ];

	AUTPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function UTGame.UTPawn.ReattachMesh
// [0x00020102] 
// Parameters infos:

void AUTPawn::ReattachMesh ( )
{
	static UFunction* pFnReattachMesh = NULL;

	if ( ! pFnReattachMesh )
		pFnReattachMesh = (UFunction*) UObject::GObjObjects()->Data[ 49071 ];

	AUTPawn_execReattachMesh_Parms ReattachMesh_Parms;

	this->ProcessEvent ( pFnReattachMesh, &ReattachMesh_Parms, NULL );
};

// Function UTGame.UTPawn.UpdateShadowSettings
// [0x00020102] 
// Parameters infos:
// unsigned long                  bWantShadow                    ( CPF_Parm )

void AUTPawn::UpdateShadowSettings ( unsigned long bWantShadow )
{
	static UFunction* pFnUpdateShadowSettings = NULL;

	if ( ! pFnUpdateShadowSettings )
		pFnUpdateShadowSettings = (UFunction*) UObject::GObjObjects()->Data[ 49067 ];

	AUTPawn_execUpdateShadowSettings_Parms UpdateShadowSettings_Parms;
	UpdateShadowSettings_Parms.bWantShadow = bWantShadow;

	this->ProcessEvent ( pFnUpdateShadowSettings, &UpdateShadowSettings_Parms, NULL );
};

// Function UTGame.UTPawn.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AUTPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 49062 ];

	AUTPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTPawn.SetTeamColor
// [0x00820102] 
// Parameters infos:

void AUTPawn::SetTeamColor ( )
{
	static UFunction* pFnSetTeamColor = NULL;

	if ( ! pFnSetTeamColor )
		pFnSetTeamColor = (UFunction*) UObject::GObjObjects()->Data[ 49058 ];

	AUTPawn_execSetTeamColor_Parms SetTeamColor_Parms;

	this->ProcessEvent ( pFnSetTeamColor, &SetTeamColor_Parms, NULL );
};

// Function UTGame.UTPawn.SetFirstPersonArmsInfo
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           FirstPersonArmMesh             ( CPF_Parm )
// class UMaterialInterface*      ArmMaterial                    ( CPF_Parm )

void AUTPawn::SetFirstPersonArmsInfo ( class USkeletalMesh* FirstPersonArmMesh, class UMaterialInterface* ArmMaterial )
{
	static UFunction* pFnSetFirstPersonArmsInfo = NULL;

	if ( ! pFnSetFirstPersonArmsInfo )
		pFnSetFirstPersonArmsInfo = (UFunction*) UObject::GObjObjects()->Data[ 49055 ];

	AUTPawn_execSetFirstPersonArmsInfo_Parms SetFirstPersonArmsInfo_Parms;
	SetFirstPersonArmsInfo_Parms.FirstPersonArmMesh = FirstPersonArmMesh;
	SetFirstPersonArmsInfo_Parms.ArmMaterial = ArmMaterial;

	this->ProcessEvent ( pFnSetFirstPersonArmsInfo, &SetFirstPersonArmsInfo_Parms, NULL );
};

// Function UTGame.UTPawn.NotifyTeamChanged
// [0x00020102] 
// Parameters infos:

void AUTPawn::NotifyTeamChanged ( )
{
	static UFunction* pFnNotifyTeamChanged = NULL;

	if ( ! pFnNotifyTeamChanged )
		pFnNotifyTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 49049 ];

	AUTPawn_execNotifyTeamChanged_Parms NotifyTeamChanged_Parms;

	this->ProcessEvent ( pFnNotifyTeamChanged, &NotifyTeamChanged_Parms, NULL );
};

// Function UTGame.UTPawn.ResetCharPhysState
// [0x00020102] 
// Parameters infos:

void AUTPawn::ResetCharPhysState ( )
{
	static UFunction* pFnResetCharPhysState = NULL;

	if ( ! pFnResetCharPhysState )
		pFnResetCharPhysState = (UFunction*) UObject::GObjObjects()->Data[ 49047 ];

	AUTPawn_execResetCharPhysState_Parms ResetCharPhysState_Parms;

	this->ProcessEvent ( pFnResetCharPhysState, &ResetCharPhysState_Parms, NULL );
};

// Function UTGame.UTPawn.SetPawnRBChannels
// [0x00020102] 
// Parameters infos:
// unsigned long                  bRagdollMode                   ( CPF_Parm )

void AUTPawn::SetPawnRBChannels ( unsigned long bRagdollMode )
{
	static UFunction* pFnSetPawnRBChannels = NULL;

	if ( ! pFnSetPawnRBChannels )
		pFnSetPawnRBChannels = (UFunction*) UObject::GObjObjects()->Data[ 49045 ];

	AUTPawn_execSetPawnRBChannels_Parms SetPawnRBChannels_Parms;
	SetPawnRBChannels_Parms.bRagdollMode = bRagdollMode;

	this->ProcessEvent ( pFnSetPawnRBChannels, &SetPawnRBChannels_Parms, NULL );
};

// Function UTGame.UTPawn.SetCharacterMeshInfo
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           SkelMesh                       ( CPF_Parm )
// class UMaterialInterface*      HeadMaterial                   ( CPF_Parm )
// class UMaterialInterface*      BodyMaterial                   ( CPF_Parm )

void AUTPawn::SetCharacterMeshInfo ( class USkeletalMesh* SkelMesh, class UMaterialInterface* HeadMaterial, class UMaterialInterface* BodyMaterial )
{
	static UFunction* pFnSetCharacterMeshInfo = NULL;

	if ( ! pFnSetCharacterMeshInfo )
		pFnSetCharacterMeshInfo = (UFunction*) UObject::GObjObjects()->Data[ 49041 ];

	AUTPawn_execSetCharacterMeshInfo_Parms SetCharacterMeshInfo_Parms;
	SetCharacterMeshInfo_Parms.SkelMesh = SkelMesh;
	SetCharacterMeshInfo_Parms.HeadMaterial = HeadMaterial;
	SetCharacterMeshInfo_Parms.BodyMaterial = BodyMaterial;

	this->ProcessEvent ( pFnSetCharacterMeshInfo, &SetCharacterMeshInfo_Parms, NULL );
};

// Function UTGame.UTPawn.SetCharacterClassFromInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )

void AUTPawn::SetCharacterClassFromInfo ( class UClass* Info )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 49012 ];

	AUTPawn_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function UTGame.UTPawn.VerifyBodyMaterialInstance
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::VerifyBodyMaterialInstance ( )
{
	static UFunction* pFnVerifyBodyMaterialInstance = NULL;

	if ( ! pFnVerifyBodyMaterialInstance )
		pFnVerifyBodyMaterialInstance = (UFunction*) UObject::GObjObjects()->Data[ 49009 ];

	AUTPawn_execVerifyBodyMaterialInstance_Parms VerifyBodyMaterialInstance_Parms;

	this->ProcessEvent ( pFnVerifyBodyMaterialInstance, &VerifyBodyMaterialInstance_Parms, NULL );

	return VerifyBodyMaterialInstance_Parms.ReturnValue;
};

// Function UTGame.UTPawn.SetArmsSkin
// [0x00080102] 
// Parameters infos:
// class UMaterialInterface*      NewMaterial                    ( CPF_Parm )

void AUTPawn::SetArmsSkin ( class UMaterialInterface* NewMaterial )
{
	static UFunction* pFnSetArmsSkin = NULL;

	if ( ! pFnSetArmsSkin )
		pFnSetArmsSkin = (UFunction*) UObject::GObjObjects()->Data[ 49002 ];

	AUTPawn_execSetArmsSkin_Parms SetArmsSkin_Parms;
	SetArmsSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetArmsSkin, &SetArmsSkin_Parms, NULL );
};

// Function UTGame.UTPawn.SetSkin
// [0x00020102] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void AUTPawn::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 48998 ];

	AUTPawn_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function UTGame.UTPawn.SetInvisible
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNowInvisible                  ( CPF_Parm )

void AUTPawn::SetInvisible ( unsigned long bNowInvisible )
{
	static UFunction* pFnSetInvisible = NULL;

	if ( ! pFnSetInvisible )
		pFnSetInvisible = (UFunction*) UObject::GObjObjects()->Data[ 48996 ];

	AUTPawn_execSetInvisible_Parms SetInvisible_Parms;
	SetInvisible_Parms.bNowInvisible = bNowInvisible;

	this->ProcessEvent ( pFnSetInvisible, &SetInvisible_Parms, NULL );
};

// Function UTGame.UTPawn.SetBodyMatColor
// [0x00020102] 
// Parameters infos:
// struct FLinearColor            NewBodyMatColor                ( CPF_Parm )
// float                          NewOverlayDuration             ( CPF_Parm )

void AUTPawn::SetBodyMatColor ( struct FLinearColor NewBodyMatColor, float NewOverlayDuration )
{
	static UFunction* pFnSetBodyMatColor = NULL;

	if ( ! pFnSetBodyMatColor )
		pFnSetBodyMatColor = (UFunction*) UObject::GObjObjects()->Data[ 48993 ];

	AUTPawn_execSetBodyMatColor_Parms SetBodyMatColor_Parms;
	memcpy ( &SetBodyMatColor_Parms.NewBodyMatColor, &NewBodyMatColor, 0x10 );
	SetBodyMatColor_Parms.NewOverlayDuration = NewOverlayDuration;

	this->ProcessEvent ( pFnSetBodyMatColor, &SetBodyMatColor_Parms, NULL );
};

// Function UTGame.UTPawn.ClearBodyMatColor
// [0x00020102] 
// Parameters infos:

void AUTPawn::ClearBodyMatColor ( )
{
	static UFunction* pFnClearBodyMatColor = NULL;

	if ( ! pFnClearBodyMatColor )
		pFnClearBodyMatColor = (UFunction*) UObject::GObjObjects()->Data[ 48992 ];

	AUTPawn_execClearBodyMatColor_Parms ClearBodyMatColor_Parms;

	this->ProcessEvent ( pFnClearBodyMatColor, &ClearBodyMatColor_Parms, NULL );
};

// Function UTGame.UTPawn.SetWalking
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNewIsWalking                  ( CPF_Parm )

void AUTPawn::eventSetWalking ( unsigned long bNewIsWalking )
{
	static UFunction* pFnSetWalking = NULL;

	if ( ! pFnSetWalking )
		pFnSetWalking = (UFunction*) UObject::GObjObjects()->Data[ 48990 ];

	AUTPawn_eventSetWalking_Parms SetWalking_Parms;
	SetWalking_Parms.bNewIsWalking = bNewIsWalking;

	this->ProcessEvent ( pFnSetWalking, &SetWalking_Parms, NULL );
};

// Function UTGame.UTPawn.RenderMapIcon
// [0x00020102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// struct FLinearColor            FinalColor                     ( CPF_Parm )

void AUTPawn::RenderMapIcon ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, struct FLinearColor FinalColor )
{
	static UFunction* pFnRenderMapIcon = NULL;

	if ( ! pFnRenderMapIcon )
		pFnRenderMapIcon = (UFunction*) UObject::GObjObjects()->Data[ 48983 ];

	AUTPawn_execRenderMapIcon_Parms RenderMapIcon_Parms;
	RenderMapIcon_Parms.MP = MP;
	RenderMapIcon_Parms.Canvas = Canvas;
	RenderMapIcon_Parms.PlayerOwner = PlayerOwner;
	memcpy ( &RenderMapIcon_Parms.FinalColor, &FinalColor, 0x10 );

	this->ProcessEvent ( pFnRenderMapIcon, &RenderMapIcon_Parms, NULL );
};

// Function UTGame.UTPawn.InCombat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::InCombat ( )
{
	static UFunction* pFnInCombat = NULL;

	if ( ! pFnInCombat )
		pFnInCombat = (UFunction*) UObject::GObjObjects()->Data[ 48980 ];

	AUTPawn_execInCombat_Parms InCombat_Parms;

	this->ProcessEvent ( pFnInCombat, &InCombat_Parms, NULL );

	return InCombat_Parms.ReturnValue;
};

// Function UTGame.UTPawn.PoweredUp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPawn::PoweredUp ( )
{
	static UFunction* pFnPoweredUp = NULL;

	if ( ! pFnPoweredUp )
		pFnPoweredUp = (UFunction*) UObject::GObjObjects()->Data[ 48978 ];

	AUTPawn_execPoweredUp_Parms PoweredUp_Parms;

	this->ProcessEvent ( pFnPoweredUp, &PoweredUp_Parms, NULL );

	return PoweredUp_Parms.ReturnValue;
};

// Function UTGame.UTPawn.HeadVolumeChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APhysicsVolume*          newHeadVolume                  ( CPF_Parm )

void AUTPawn::eventHeadVolumeChange ( class APhysicsVolume* newHeadVolume )
{
	static UFunction* pFnHeadVolumeChange = NULL;

	if ( ! pFnHeadVolumeChange )
		pFnHeadVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 48976 ];

	AUTPawn_eventHeadVolumeChange_Parms HeadVolumeChange_Parms;
	HeadVolumeChange_Parms.newHeadVolume = newHeadVolume;

	this->ProcessEvent ( pFnHeadVolumeChange, &HeadVolumeChange_Parms, NULL );
};

// Function UTGame.UTPawn.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void AUTPawn::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 48973 ];

	AUTPawn_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function UTGame.UTPawn.GetUTPlayerReplicationInfo
// [0x00020102] 
// Parameters infos:
// class AUTPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTPlayerReplicationInfo* AUTPawn::GetUTPlayerReplicationInfo ( )
{
	static UFunction* pFnGetUTPlayerReplicationInfo = NULL;

	if ( ! pFnGetUTPlayerReplicationInfo )
		pFnGetUTPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 48970 ];

	AUTPawn_execGetUTPlayerReplicationInfo_Parms GetUTPlayerReplicationInfo_Parms;

	this->ProcessEvent ( pFnGetUTPlayerReplicationInfo, &GetUTPlayerReplicationInfo_Parms, NULL );

	return GetUTPlayerReplicationInfo_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AdjustedStrength
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTPawn::AdjustedStrength ( )
{
	static UFunction* pFnAdjustedStrength = NULL;

	if ( ! pFnAdjustedStrength )
		pFnAdjustedStrength = (UFunction*) UObject::GObjObjects()->Data[ 48968 ];

	AUTPawn_execAdjustedStrength_Parms AdjustedStrength_Parms;

	this->ProcessEvent ( pFnAdjustedStrength, &AdjustedStrength_Parms, NULL );

	return AdjustedStrength_Parms.ReturnValue;
};

// Function UTGame.UTPawn.AdjustPPEffects
// [0x00020100] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )
// unsigned long                  bRemove                        ( CPF_Parm )

void AUTPawn::AdjustPPEffects ( class AUTPlayerController* PC, unsigned long bRemove )
{
	static UFunction* pFnAdjustPPEffects = NULL;

	if ( ! pFnAdjustPPEffects )
		pFnAdjustPPEffects = (UFunction*) UObject::GObjObjects()->Data[ 48964 ];

	AUTPawn_execAdjustPPEffects_Parms AdjustPPEffects_Parms;
	AdjustPPEffects_Parms.PC = PC;
	AdjustPPEffects_Parms.bRemove = bRemove;

	this->ProcessEvent ( pFnAdjustPPEffects, &AdjustPPEffects_Parms, NULL );
};

// Function UTGame.UTPlayerController.NotifyDisconnect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

bool AUTPlayerController::eventNotifyDisconnect ( struct FString Command )
{
	static UFunction* pFnNotifyDisconnect = NULL;

	if ( ! pFnNotifyDisconnect )
		pFnNotifyDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 44584 ];

	AUTPlayerController_eventNotifyDisconnect_Parms NotifyDisconnect_Parms;
	memcpy ( &NotifyDisconnect_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnNotifyDisconnect, &NotifyDisconnect_Parms, NULL );

	return NotifyDisconnect_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ReadLeaderboardStatsComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void AUTPlayerController::ReadLeaderboardStatsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnReadLeaderboardStatsComplete = NULL;

	if ( ! pFnReadLeaderboardStatsComplete )
		pFnReadLeaderboardStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 44576 ];

	AUTPlayerController_execReadLeaderboardStatsComplete_Parms ReadLeaderboardStatsComplete_Parms;
	ReadLeaderboardStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnReadLeaderboardStatsComplete, &ReadLeaderboardStatsComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientWriteLeaderboardStats
// [0x010241C2] 
// Parameters infos:
// class UClass*                  OnlineStatsWriteClass          ( CPF_Parm )
// unsigned long                  bIsIncomplete                  ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::ClientWriteLeaderboardStats ( class UClass* OnlineStatsWriteClass, unsigned long bIsIncomplete )
{
	static UFunction* pFnClientWriteLeaderboardStats = NULL;

	if ( ! pFnClientWriteLeaderboardStats )
		pFnClientWriteLeaderboardStats = (UFunction*) UObject::GObjObjects()->Data[ 44568 ];

	AUTPlayerController_execClientWriteLeaderboardStats_Parms ClientWriteLeaderboardStats_Parms;
	ClientWriteLeaderboardStats_Parms.OnlineStatsWriteClass = OnlineStatsWriteClass;
	ClientWriteLeaderboardStats_Parms.bIsIncomplete = bIsIncomplete;

	this->ProcessEvent ( pFnClientWriteLeaderboardStats, &ClientWriteLeaderboardStats_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientUpdateSpiceOfLife
// [0x010201C2] 
// Parameters infos:
// int                            MutatorBitMask                 ( CPF_Parm )

void AUTPlayerController::ClientUpdateSpiceOfLife ( int MutatorBitMask )
{
	static UFunction* pFnClientUpdateSpiceOfLife = NULL;

	if ( ! pFnClientUpdateSpiceOfLife )
		pFnClientUpdateSpiceOfLife = (UFunction*) UObject::GObjObjects()->Data[ 44564 ];

	AUTPlayerController_execClientUpdateSpiceOfLife_Parms ClientUpdateSpiceOfLife_Parms;
	ClientUpdateSpiceOfLife_Parms.MutatorBitMask = MutatorBitMask;

	this->ProcessEvent ( pFnClientUpdateSpiceOfLife, &ClientUpdateSpiceOfLife_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientUpdateAchievement
// [0x010241C2] 
// Parameters infos:
// int                            AchievementId                  ( CPF_Parm )
// int                            Count                          ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::ClientUpdateAchievement ( int AchievementId, int Count )
{
	static UFunction* pFnClientUpdateAchievement = NULL;

	if ( ! pFnClientUpdateAchievement )
		pFnClientUpdateAchievement = (UFunction*) UObject::GObjObjects()->Data[ 44561 ];

	AUTPlayerController_execClientUpdateAchievement_Parms ClientUpdateAchievement_Parms;
	ClientUpdateAchievement_Parms.AchievementId = AchievementId;
	ClientUpdateAchievement_Parms.Count = Count;

	this->ProcessEvent ( pFnClientUpdateAchievement, &ClientUpdateAchievement_Parms, NULL );
};

// Function UTGame.UTPlayerController.InitAchievementHandler
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::InitAchievementHandler ( )
{
	static UFunction* pFnInitAchievementHandler = NULL;

	if ( ! pFnInitAchievementHandler )
		pFnInitAchievementHandler = (UFunction*) UObject::GObjObjects()->Data[ 44559 ];

	AUTPlayerController_execInitAchievementHandler_Parms InitAchievementHandler_Parms;

	this->ProcessEvent ( pFnInitAchievementHandler, &InitAchievementHandler_Parms, NULL );
};

// Function UTGame.UTPlayerController.Disconnect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::Disconnect ( )
{
	static UFunction* pFnDisconnect = NULL;

	if ( ! pFnDisconnect )
		pFnDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 44558 ];

	AUTPlayerController_execDisconnect_Parms Disconnect_Parms;

	this->ProcessEvent ( pFnDisconnect, &Disconnect_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerForceTextUnMute
// [0x002200C2] 
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerForceTextUnMute ( struct FString TargetPlayer )
{
	static UFunction* pFnServerForceTextUnMute = NULL;

	if ( ! pFnServerForceTextUnMute )
		pFnServerForceTextUnMute = (UFunction*) UObject::GObjObjects()->Data[ 44555 ];

	AUTPlayerController_execServerForceTextUnMute_Parms ServerForceTextUnMute_Parms;
	memcpy ( &ServerForceTextUnMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnServerForceTextUnMute, &ServerForceTextUnMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminForceTextUnMute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminForceTextUnMute ( struct FString TargetPlayer )
{
	static UFunction* pFnAdminForceTextUnMute = NULL;

	if ( ! pFnAdminForceTextUnMute )
		pFnAdminForceTextUnMute = (UFunction*) UObject::GObjObjects()->Data[ 44553 ];

	AUTPlayerController_execAdminForceTextUnMute_Parms AdminForceTextUnMute_Parms;
	memcpy ( &AdminForceTextUnMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnAdminForceTextUnMute, &AdminForceTextUnMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerForceTextMute
// [0x002200C2] 
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerForceTextMute ( struct FString TargetPlayer )
{
	static UFunction* pFnServerForceTextMute = NULL;

	if ( ! pFnServerForceTextMute )
		pFnServerForceTextMute = (UFunction*) UObject::GObjObjects()->Data[ 44550 ];

	AUTPlayerController_execServerForceTextMute_Parms ServerForceTextMute_Parms;
	memcpy ( &ServerForceTextMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnServerForceTextMute, &ServerForceTextMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminForceTextMute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminForceTextMute ( struct FString TargetPlayer )
{
	static UFunction* pFnAdminForceTextMute = NULL;

	if ( ! pFnAdminForceTextMute )
		pFnAdminForceTextMute = (UFunction*) UObject::GObjObjects()->Data[ 44548 ];

	AUTPlayerController_execAdminForceTextMute_Parms AdminForceTextMute_Parms;
	memcpy ( &AdminForceTextMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnAdminForceTextMute, &AdminForceTextMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerForceVoiceUnMute
// [0x002200C2] 
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerForceVoiceUnMute ( struct FString TargetPlayer )
{
	static UFunction* pFnServerForceVoiceUnMute = NULL;

	if ( ! pFnServerForceVoiceUnMute )
		pFnServerForceVoiceUnMute = (UFunction*) UObject::GObjObjects()->Data[ 44544 ];

	AUTPlayerController_execServerForceVoiceUnMute_Parms ServerForceVoiceUnMute_Parms;
	memcpy ( &ServerForceVoiceUnMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnServerForceVoiceUnMute, &ServerForceVoiceUnMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminForceVoiceUnMute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminForceVoiceUnMute ( struct FString TargetPlayer )
{
	static UFunction* pFnAdminForceVoiceUnMute = NULL;

	if ( ! pFnAdminForceVoiceUnMute )
		pFnAdminForceVoiceUnMute = (UFunction*) UObject::GObjObjects()->Data[ 44542 ];

	AUTPlayerController_execAdminForceVoiceUnMute_Parms AdminForceVoiceUnMute_Parms;
	memcpy ( &AdminForceVoiceUnMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnAdminForceVoiceUnMute, &AdminForceVoiceUnMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerForceVoiceMute
// [0x002200C2] 
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerForceVoiceMute ( struct FString TargetPlayer )
{
	static UFunction* pFnServerForceVoiceMute = NULL;

	if ( ! pFnServerForceVoiceMute )
		pFnServerForceVoiceMute = (UFunction*) UObject::GObjObjects()->Data[ 44538 ];

	AUTPlayerController_execServerForceVoiceMute_Parms ServerForceVoiceMute_Parms;
	memcpy ( &ServerForceVoiceMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnServerForceVoiceMute, &ServerForceVoiceMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminForceVoiceMute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TargetPlayer                   ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminForceVoiceMute ( struct FString TargetPlayer )
{
	static UFunction* pFnAdminForceVoiceMute = NULL;

	if ( ! pFnAdminForceVoiceMute )
		pFnAdminForceVoiceMute = (UFunction*) UObject::GObjObjects()->Data[ 44536 ];

	AUTPlayerController_execAdminForceVoiceMute_Parms AdminForceVoiceMute_Parms;
	memcpy ( &AdminForceVoiceMute_Parms.TargetPlayer, &TargetPlayer, 0xC );

	this->ProcessEvent ( pFnAdminForceVoiceMute, &AdminForceVoiceMute_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerChangeMap
// [0x002200C2] 
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerChangeMap ( struct FString URL )
{
	static UFunction* pFnServerChangeMap = NULL;

	if ( ! pFnServerChangeMap )
		pFnServerChangeMap = (UFunction*) UObject::GObjObjects()->Data[ 44534 ];

	AUTPlayerController_execServerChangeMap_Parms ServerChangeMap_Parms;
	memcpy ( &ServerChangeMap_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnServerChangeMap, &ServerChangeMap_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminChangeMap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminChangeMap ( struct FString URL )
{
	static UFunction* pFnAdminChangeMap = NULL;

	if ( ! pFnAdminChangeMap )
		pFnAdminChangeMap = (UFunction*) UObject::GObjObjects()->Data[ 44532 ];

	AUTPlayerController_execAdminChangeMap_Parms AdminChangeMap_Parms;
	memcpy ( &AdminChangeMap_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnAdminChangeMap, &AdminChangeMap_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerRestartMap
// [0x002200C2] 
// Parameters infos:

void AUTPlayerController::ServerRestartMap ( )
{
	static UFunction* pFnServerRestartMap = NULL;

	if ( ! pFnServerRestartMap )
		pFnServerRestartMap = (UFunction*) UObject::GObjObjects()->Data[ 44531 ];

	AUTPlayerController_execServerRestartMap_Parms ServerRestartMap_Parms;

	this->ProcessEvent ( pFnServerRestartMap, &ServerRestartMap_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminRestartMap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::AdminRestartMap ( )
{
	static UFunction* pFnAdminRestartMap = NULL;

	if ( ! pFnAdminRestartMap )
		pFnAdminRestartMap = (UFunction*) UObject::GObjObjects()->Data[ 44530 ];

	AUTPlayerController_execAdminRestartMap_Parms AdminRestartMap_Parms;

	this->ProcessEvent ( pFnAdminRestartMap, &AdminRestartMap_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminPlayerList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::AdminPlayerList ( )
{
	static UFunction* pFnAdminPlayerList = NULL;

	if ( ! pFnAdminPlayerList )
		pFnAdminPlayerList = (UFunction*) UObject::GObjObjects()->Data[ 44528 ];

	AUTPlayerController_execAdminPlayerList_Parms AdminPlayerList_Parms;

	this->ProcessEvent ( pFnAdminPlayerList, &AdminPlayerList_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerAdmin
// [0x002200C2] 
// Parameters infos:
// struct FString                 CommandLine                    ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerAdmin ( struct FString CommandLine )
{
	static UFunction* pFnServerAdmin = NULL;

	if ( ! pFnServerAdmin )
		pFnServerAdmin = (UFunction*) UObject::GObjObjects()->Data[ 44525 ];

	AUTPlayerController_execServerAdmin_Parms ServerAdmin_Parms;
	memcpy ( &ServerAdmin_Parms.CommandLine, &CommandLine, 0xC );

	this->ProcessEvent ( pFnServerAdmin, &ServerAdmin_Parms, NULL );
};

// Function UTGame.UTPlayerController.Admin
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 CommandLine                    ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::Admin ( struct FString CommandLine )
{
	static UFunction* pFnAdmin = NULL;

	if ( ! pFnAdmin )
		pFnAdmin = (UFunction*) UObject::GObjObjects()->Data[ 44523 ];

	AUTPlayerController_execAdmin_Parms Admin_Parms;
	memcpy ( &Admin_Parms.CommandLine, &CommandLine, 0xC );

	this->ProcessEvent ( pFnAdmin, &Admin_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerAdminLogOut
// [0x002200C2] 
// Parameters infos:

void AUTPlayerController::ServerAdminLogOut ( )
{
	static UFunction* pFnServerAdminLogOut = NULL;

	if ( ! pFnServerAdminLogOut )
		pFnServerAdminLogOut = (UFunction*) UObject::GObjObjects()->Data[ 44522 ];

	AUTPlayerController_execServerAdminLogOut_Parms ServerAdminLogOut_Parms;

	this->ProcessEvent ( pFnServerAdminLogOut, &ServerAdminLogOut_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminLogout
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::AdminLogout ( )
{
	static UFunction* pFnAdminLogout = NULL;

	if ( ! pFnAdminLogout )
		pFnAdminLogout = (UFunction*) UObject::GObjObjects()->Data[ 44521 ];

	AUTPlayerController_execAdminLogout_Parms AdminLogout_Parms;

	this->ProcessEvent ( pFnAdminLogout, &AdminLogout_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerAdminLogin
// [0x002200C2] 
// Parameters infos:
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerAdminLogin ( struct FString Password )
{
	static UFunction* pFnServerAdminLogin = NULL;

	if ( ! pFnServerAdminLogin )
		pFnServerAdminLogin = (UFunction*) UObject::GObjObjects()->Data[ 44519 ];

	AUTPlayerController_execServerAdminLogin_Parms ServerAdminLogin_Parms;
	memcpy ( &ServerAdminLogin_Parms.Password, &Password, 0xC );

	this->ProcessEvent ( pFnServerAdminLogin, &ServerAdminLogin_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminLogin
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::AdminLogin ( struct FString Password )
{
	static UFunction* pFnAdminLogin = NULL;

	if ( ! pFnAdminLogin )
		pFnAdminLogin = (UFunction*) UObject::GObjObjects()->Data[ 44517 ];

	AUTPlayerController_execAdminLogin_Parms AdminLogin_Parms;
	memcpy ( &AdminLogin_Parms.Password, &Password, 0xC );

	this->ProcessEvent ( pFnAdminLogin, &AdminLogin_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdminCmdOk
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::AdminCmdOk ( )
{
	static UFunction* pFnAdminCmdOk = NULL;

	if ( ! pFnAdminCmdOk )
		pFnAdminCmdOk = (UFunction*) UObject::GObjObjects()->Data[ 44514 ];

	AUTPlayerController_execAdminCmdOk_Parms AdminCmdOk_Parms;

	this->ProcessEvent ( pFnAdminCmdOk, &AdminCmdOk_Parms, NULL );

	return AdminCmdOk_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ServerTeamSay
// [0x00220042] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerTeamSay ( struct FString msg )
{
	static UFunction* pFnServerTeamSay = NULL;

	if ( ! pFnServerTeamSay )
		pFnServerTeamSay = (UFunction*) UObject::GObjObjects()->Data[ 44512 ];

	AUTPlayerController_execServerTeamSay_Parms ServerTeamSay_Parms;
	memcpy ( &ServerTeamSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnServerTeamSay, &ServerTeamSay_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSay
// [0x00220042] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerSay ( struct FString msg )
{
	static UFunction* pFnServerSay = NULL;

	if ( ! pFnServerSay )
		pFnServerSay = (UFunction*) UObject::GObjObjects()->Data[ 44509 ];

	AUTPlayerController_execServerSay_Parms ServerSay_Parms;
	memcpy ( &ServerSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnServerSay, &ServerSay_Parms, NULL );
};

// Function UTGame.UTPlayerController.GetSeamlessTravelActorList
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bToEntry                       ( CPF_Parm )
// TArray< class AActor* >        ActorList                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTPlayerController::eventGetSeamlessTravelActorList ( unsigned long bToEntry, TArray< class AActor* >* ActorList )
{
	static UFunction* pFnGetSeamlessTravelActorList = NULL;

	if ( ! pFnGetSeamlessTravelActorList )
		pFnGetSeamlessTravelActorList = (UFunction*) UObject::GObjObjects()->Data[ 44505 ];

	AUTPlayerController_eventGetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;

	this->ProcessEvent ( pFnGetSeamlessTravelActorList, &GetSeamlessTravelActorList_Parms, NULL );

	if ( ActorList )
		memcpy ( ActorList, &GetSeamlessTravelActorList_Parms.ActorList, 0xC );
};

// Function UTGame.UTPlayerController.ServerChangeTeam
// [0x002200C2] 
// Parameters infos:
// int                            N                              ( CPF_Parm )

void AUTPlayerController::ServerChangeTeam ( int N )
{
	static UFunction* pFnServerChangeTeam = NULL;

	if ( ! pFnServerChangeTeam )
		pFnServerChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 44502 ];

	AUTPlayerController_execServerChangeTeam_Parms ServerChangeTeam_Parms;
	ServerChangeTeam_Parms.N = N;

	this->ProcessEvent ( pFnServerChangeTeam, &ServerChangeTeam_Parms, NULL );
};

// Function UTGame.UTPlayerController.BullseyeMessage
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::BullseyeMessage ( )
{
	static UFunction* pFnBullseyeMessage = NULL;

	if ( ! pFnBullseyeMessage )
		pFnBullseyeMessage = (UFunction*) UObject::GObjObjects()->Data[ 44497 ];

	AUTPlayerController_execBullseyeMessage_Parms BullseyeMessage_Parms;

	this->ProcessEvent ( pFnBullseyeMessage, &BullseyeMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSetNetSpeed
// [0x002200C2] 
// Parameters infos:
// int                            NewSpeed                       ( CPF_Parm )

void AUTPlayerController::ServerSetNetSpeed ( int NewSpeed )
{
	static UFunction* pFnServerSetNetSpeed = NULL;

	if ( ! pFnServerSetNetSpeed )
		pFnServerSetNetSpeed = (UFunction*) UObject::GObjObjects()->Data[ 44495 ];

	AUTPlayerController_execServerSetNetSpeed_Parms ServerSetNetSpeed_Parms;
	ServerSetNetSpeed_Parms.NewSpeed = NewSpeed;

	this->ProcessEvent ( pFnServerSetNetSpeed, &ServerSetNetSpeed_Parms, NULL );
};

// Function UTGame.UTPlayerController.ReceiveBotVoiceMessage
// [0x01020142] 
// Parameters infos:
// class AUTPlayerReplicationInfo* SenderPRI                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 LocationObject                 ( CPF_Parm )

void AUTPlayerController::ReceiveBotVoiceMessage ( class AUTPlayerReplicationInfo* SenderPRI, int MessageIndex, class UObject* LocationObject )
{
	static UFunction* pFnReceiveBotVoiceMessage = NULL;

	if ( ! pFnReceiveBotVoiceMessage )
		pFnReceiveBotVoiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 44491 ];

	AUTPlayerController_execReceiveBotVoiceMessage_Parms ReceiveBotVoiceMessage_Parms;
	ReceiveBotVoiceMessage_Parms.SenderPRI = SenderPRI;
	ReceiveBotVoiceMessage_Parms.MessageIndex = MessageIndex;
	ReceiveBotVoiceMessage_Parms.LocationObject = LocationObject;

	this->ProcessEvent ( pFnReceiveBotVoiceMessage, &ReceiveBotVoiceMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.SendMessage
// [0x00024002] 
// Parameters infos:
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// float                          Wait                           ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::SendMessage ( class APlayerReplicationInfo* Recipient, struct FName MessageType, float Wait, class UClass* DamageType )
{
	static UFunction* pFnSendMessage = NULL;

	if ( ! pFnSendMessage )
		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 44485 ];

	AUTPlayerController_execSendMessage_Parms SendMessage_Parms;
	SendMessage_Parms.Recipient = Recipient;
	memcpy ( &SendMessage_Parms.MessageType, &MessageType, 0x8 );
	SendMessage_Parms.Wait = Wait;
	SendMessage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.CanRestartPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::CanRestartPlayer ( )
{
	static UFunction* pFnCanRestartPlayer = NULL;

	if ( ! pFnCanRestartPlayer )
		pFnCanRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 44483 ];

	AUTPlayerController_execCanRestartPlayer_Parms CanRestartPlayer_Parms;

	this->ProcessEvent ( pFnCanRestartPlayer, &CanRestartPlayer_Parms, NULL );

	return CanRestartPlayer_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.CharacterProcessingComplete
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::CharacterProcessingComplete ( )
{
	static UFunction* pFnCharacterProcessingComplete = NULL;

	if ( ! pFnCharacterProcessingComplete )
		pFnCharacterProcessingComplete = (UFunction*) UObject::GObjObjects()->Data[ 44480 ];

	AUTPlayerController_execCharacterProcessingComplete_Parms CharacterProcessingComplete_Parms;

	this->ProcessEvent ( pFnCharacterProcessingComplete, &CharacterProcessingComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.GetPlayerLoc
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::GetPlayerLoc ( )
{
	static UFunction* pFnGetPlayerLoc = NULL;

	if ( ! pFnGetPlayerLoc )
		pFnGetPlayerLoc = (UFunction*) UObject::GObjObjects()->Data[ 44479 ];

	AUTPlayerController_execGetPlayerLoc_Parms GetPlayerLoc_Parms;

	this->ProcessEvent ( pFnGetPlayerLoc, &GetPlayerLoc_Parms, NULL );
};

// Function UTGame.UTPlayerController.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTPlayerController::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 44476 ];

	AUTPlayerController_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientEndZoom
// [0x010201C2] 
// Parameters infos:

void AUTPlayerController::ClientEndZoom ( )
{
	static UFunction* pFnClientEndZoom = NULL;

	if ( ! pFnClientEndZoom )
		pFnClientEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 44475 ];

	AUTPlayerController_execClientEndZoom_Parms ClientEndZoom_Parms;

	this->ProcessEvent ( pFnClientEndZoom, &ClientEndZoom_Parms, NULL );
};

// Function UTGame.UTPlayerController.EndZoomNonlinear
// [0x00020102] 
// Parameters infos:
// float                          ZoomInterpSpeed                ( CPF_Parm )

void AUTPlayerController::EndZoomNonlinear ( float ZoomInterpSpeed )
{
	static UFunction* pFnEndZoomNonlinear = NULL;

	if ( ! pFnEndZoomNonlinear )
		pFnEndZoomNonlinear = (UFunction*) UObject::GObjObjects()->Data[ 44473 ];

	AUTPlayerController_execEndZoomNonlinear_Parms EndZoomNonlinear_Parms;
	EndZoomNonlinear_Parms.ZoomInterpSpeed = ZoomInterpSpeed;

	this->ProcessEvent ( pFnEndZoomNonlinear, &EndZoomNonlinear_Parms, NULL );
};

// Function UTGame.UTPlayerController.EndZoom
// [0x00020102] 
// Parameters infos:

void AUTPlayerController::EndZoom ( )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 44472 ];

	AUTPlayerController_execEndZoom_Parms EndZoom_Parms;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function UTGame.UTPlayerController.StopZoom
// [0x00020102] 
// Parameters infos:

void AUTPlayerController::StopZoom ( )
{
	static UFunction* pFnStopZoom = NULL;

	if ( ! pFnStopZoom )
		pFnStopZoom = (UFunction*) UObject::GObjObjects()->Data[ 44471 ];

	AUTPlayerController_execStopZoom_Parms StopZoom_Parms;

	this->ProcessEvent ( pFnStopZoom, &StopZoom_Parms, NULL );
};

// Function UTGame.UTPlayerController.StartZoomNonlinear
// [0x00020102] 
// Parameters infos:
// float                          NewDesiredFOV                  ( CPF_Parm )
// float                          NewZoomInterpSpeed             ( CPF_Parm )

void AUTPlayerController::StartZoomNonlinear ( float NewDesiredFOV, float NewZoomInterpSpeed )
{
	static UFunction* pFnStartZoomNonlinear = NULL;

	if ( ! pFnStartZoomNonlinear )
		pFnStartZoomNonlinear = (UFunction*) UObject::GObjObjects()->Data[ 44468 ];

	AUTPlayerController_execStartZoomNonlinear_Parms StartZoomNonlinear_Parms;
	StartZoomNonlinear_Parms.NewDesiredFOV = NewDesiredFOV;
	StartZoomNonlinear_Parms.NewZoomInterpSpeed = NewZoomInterpSpeed;

	this->ProcessEvent ( pFnStartZoomNonlinear, &StartZoomNonlinear_Parms, NULL );
};

// Function UTGame.UTPlayerController.StartZoom
// [0x00020102] 
// Parameters infos:
// float                          NewDesiredFOV                  ( CPF_Parm )
// float                          NewZoomRate                    ( CPF_Parm )

void AUTPlayerController::StartZoom ( float NewDesiredFOV, float NewZoomRate )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 44465 ];

	AUTPlayerController_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.NewDesiredFOV = NewDesiredFOV;
	StartZoom_Parms.NewZoomRate = NewZoomRate;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdjustFOV
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTPlayerController::AdjustFOV ( float DeltaTime )
{
	static UFunction* pFnAdjustFOV = NULL;

	if ( ! pFnAdjustFOV )
		pFnAdjustFOV = (UFunction*) UObject::GObjObjects()->Data[ 44459 ];

	AUTPlayerController_execAdjustFOV_Parms AdjustFOV_Parms;
	AdjustFOV_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnAdjustFOV, &AdjustFOV_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnUpdatePropertyFOVAngle
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::OnUpdatePropertyFOVAngle ( )
{
	static UFunction* pFnOnUpdatePropertyFOVAngle = NULL;

	if ( ! pFnOnUpdatePropertyFOVAngle )
		pFnOnUpdatePropertyFOVAngle = (UFunction*) UObject::GObjObjects()->Data[ 44458 ];

	AUTPlayerController_execOnUpdatePropertyFOVAngle_Parms OnUpdatePropertyFOVAngle_Parms;

	this->ProcessEvent ( pFnOnUpdatePropertyFOVAngle, &OnUpdatePropertyFOVAngle_Parms, NULL );
};

// Function UTGame.UTPlayerController.FlushDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::FlushDebug ( )
{
	static UFunction* pFnFlushDebug = NULL;

	if ( ! pFnFlushDebug )
		pFnFlushDebug = (UFunction*) UObject::GObjObjects()->Data[ 44457 ];

	AUTPlayerController_execFlushDebug_Parms FlushDebug_Parms;

	this->ProcessEvent ( pFnFlushDebug, &FlushDebug_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientBecameActivePlayer
// [0x010201C2] 
// Parameters infos:

void AUTPlayerController::ClientBecameActivePlayer ( )
{
	static UFunction* pFnClientBecameActivePlayer = NULL;

	if ( ! pFnClientBecameActivePlayer )
		pFnClientBecameActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 44456 ];

	AUTPlayerController_execClientBecameActivePlayer_Parms ClientBecameActivePlayer_Parms;

	this->ProcessEvent ( pFnClientBecameActivePlayer, &ClientBecameActivePlayer_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerBecomeActivePlayer
// [0x002200C2] 
// Parameters infos:

void AUTPlayerController::ServerBecomeActivePlayer ( )
{
	static UFunction* pFnServerBecomeActivePlayer = NULL;

	if ( ! pFnServerBecomeActivePlayer )
		pFnServerBecomeActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 44452 ];

	AUTPlayerController_execServerBecomeActivePlayer_Parms ServerBecomeActivePlayer_Parms;

	this->ProcessEvent ( pFnServerBecomeActivePlayer, &ServerBecomeActivePlayer_Parms, NULL );
};

// Function UTGame.UTPlayerController.BecomeActive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::BecomeActive ( )
{
	static UFunction* pFnBecomeActive = NULL;

	if ( ! pFnBecomeActive )
		pFnBecomeActive = (UFunction*) UObject::GObjObjects()->Data[ 44451 ];

	AUTPlayerController_execBecomeActive_Parms BecomeActive_Parms;

	this->ProcessEvent ( pFnBecomeActive, &BecomeActive_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerShowPathToBase
// [0x002200C2] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )

void AUTPlayerController::ServerShowPathToBase ( unsigned char TeamNum )
{
	static UFunction* pFnServerShowPathToBase = NULL;

	if ( ! pFnServerShowPathToBase )
		pFnServerShowPathToBase = (UFunction*) UObject::GObjObjects()->Data[ 44449 ];

	AUTPlayerController_execServerShowPathToBase_Parms ServerShowPathToBase_Parms;
	ServerShowPathToBase_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnServerShowPathToBase, &ServerShowPathToBase_Parms, NULL );
};

// Function UTGame.UTPlayerController.BasePath
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  Num                            ( CPF_Parm )

void AUTPlayerController::BasePath ( unsigned char Num )
{
	static UFunction* pFnBasePath = NULL;

	if ( ! pFnBasePath )
		pFnBasePath = (UFunction*) UObject::GObjObjects()->Data[ 44447 ];

	AUTPlayerController_execBasePath_Parms BasePath_Parms;
	BasePath_Parms.Num = Num;

	this->ProcessEvent ( pFnBasePath, &BasePath_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientPawnDied
// [0x010201C2] 
// Parameters infos:

void AUTPlayerController::ClientPawnDied ( )
{
	static UFunction* pFnClientPawnDied = NULL;

	if ( ! pFnClientPawnDied )
		pFnClientPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 44446 ];

	AUTPlayerController_execClientPawnDied_Parms ClientPawnDied_Parms;

	this->ProcessEvent ( pFnClientPawnDied, &ClientPawnDied_Parms, NULL );
};

// Function UTGame.UTPlayerController.PawnDied
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTPlayerController::PawnDied ( class APawn* P )
{
	static UFunction* pFnPawnDied = NULL;

	if ( ! pFnPawnDied )
		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 44444 ];

	AUTPlayerController_execPawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.P = P;

	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
};

// Function UTGame.UTPlayerController.CheckBulletWhip
// [0x00820002] 
// Parameters infos:
// class USoundCue*               BulletWhip                     ( CPF_Parm )
// struct FVector                 FireLocation                   ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTPlayerController::CheckBulletWhip ( class USoundCue* BulletWhip, struct FVector FireLocation, struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnCheckBulletWhip = NULL;

	if ( ! pFnCheckBulletWhip )
		pFnCheckBulletWhip = (UFunction*) UObject::GObjObjects()->Data[ 44436 ];

	AUTPlayerController_execCheckBulletWhip_Parms CheckBulletWhip_Parms;
	CheckBulletWhip_Parms.BulletWhip = BulletWhip;
	memcpy ( &CheckBulletWhip_Parms.FireLocation, &FireLocation, 0xC );
	memcpy ( &CheckBulletWhip_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &CheckBulletWhip_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCheckBulletWhip, &CheckBulletWhip_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientRoundEnded
// [0x010201C2] 
// Parameters infos:
// class AActor*                  EndRoundFocus                  ( CPF_Parm )

void AUTPlayerController::ClientRoundEnded ( class AActor* EndRoundFocus )
{
	static UFunction* pFnClientRoundEnded = NULL;

	if ( ! pFnClientRoundEnded )
		pFnClientRoundEnded = (UFunction*) UObject::GObjObjects()->Data[ 44434 ];

	AUTPlayerController_execClientRoundEnded_Parms ClientRoundEnded_Parms;
	ClientRoundEnded_Parms.EndRoundFocus = EndRoundFocus;

	this->ProcessEvent ( pFnClientRoundEnded, &ClientRoundEnded_Parms, NULL );
};

// Function UTGame.UTPlayerController.RoundHasEnded
// [0x00024002] 
// Parameters infos:
// class AActor*                  EndRoundFocus                  ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::RoundHasEnded ( class AActor* EndRoundFocus )
{
	static UFunction* pFnRoundHasEnded = NULL;

	if ( ! pFnRoundHasEnded )
		pFnRoundHasEnded = (UFunction*) UObject::GObjObjects()->Data[ 44432 ];

	AUTPlayerController_execRoundHasEnded_Parms RoundHasEnded_Parms;
	RoundHasEnded_Parms.EndRoundFocus = EndRoundFocus;

	this->ProcessEvent ( pFnRoundHasEnded, &RoundHasEnded_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientGameEnded
// [0x010201C2] 
// Parameters infos:
// class AActor*                  EndGameFocus                   ( CPF_Parm )
// unsigned long                  bIsWinner                      ( CPF_Parm )

void AUTPlayerController::ClientGameEnded ( class AActor* EndGameFocus, unsigned long bIsWinner )
{
	static UFunction* pFnClientGameEnded = NULL;

	if ( ! pFnClientGameEnded )
		pFnClientGameEnded = (UFunction*) UObject::GObjObjects()->Data[ 44429 ];

	AUTPlayerController_execClientGameEnded_Parms ClientGameEnded_Parms;
	ClientGameEnded_Parms.EndGameFocus = EndGameFocus;
	ClientGameEnded_Parms.bIsWinner = bIsWinner;

	this->ProcessEvent ( pFnClientGameEnded, &ClientGameEnded_Parms, NULL );
};

// Function UTGame.UTPlayerController.ShowMidGameMenu
// [0x00024002] 
// Parameters infos:
// struct FName                   TabTag                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bEnableInput                   ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::ShowMidGameMenu ( struct FName TabTag, unsigned long bEnableInput )
{
	static UFunction* pFnShowMidGameMenu = NULL;

	if ( ! pFnShowMidGameMenu )
		pFnShowMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 44425 ];

	AUTPlayerController_execShowMidGameMenu_Parms ShowMidGameMenu_Parms;
	memcpy ( &ShowMidGameMenu_Parms.TabTag, &TabTag, 0x8 );
	ShowMidGameMenu_Parms.bEnableInput = bEnableInput;

	this->ProcessEvent ( pFnShowMidGameMenu, &ShowMidGameMenu_Parms, NULL );
};

// Function UTGame.UTPlayerController.ShowMap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ShowMap ( )
{
	static UFunction* pFnShowMap = NULL;

	if ( ! pFnShowMap )
		pFnShowMap = (UFunction*) UObject::GObjObjects()->Data[ 44420 ];

	AUTPlayerController_execShowMap_Parms ShowMap_Parms;

	this->ProcessEvent ( pFnShowMap, &ShowMap_Parms, NULL );
};

// Function UTGame.UTPlayerController.AdjustCameraScale
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bIn                            ( CPF_Parm )

void AUTPlayerController::AdjustCameraScale ( unsigned long bIn )
{
	static UFunction* pFnAdjustCameraScale = NULL;

	if ( ! pFnAdjustCameraScale )
		pFnAdjustCameraScale = (UFunction*) UObject::GObjObjects()->Data[ 44369 ];

	AUTPlayerController_execAdjustCameraScale_Parms AdjustCameraScale_Parms;
	AdjustCameraScale_Parms.bIn = bIn;

	this->ProcessEvent ( pFnAdjustCameraScale, &AdjustCameraScale_Parms, NULL );
};

// Function UTGame.UTPlayerController.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 44368 ];

	AUTPlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function UTGame.UTPlayerController.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 44367 ];

	AUTPlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerViewObjective
// [0x00220042] 
// Parameters infos:

void AUTPlayerController::ServerViewObjective ( )
{
	static UFunction* pFnServerViewObjective = NULL;

	if ( ! pFnServerViewObjective )
		pFnServerViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 44366 ];

	AUTPlayerController_execServerViewObjective_Parms ServerViewObjective_Parms;

	this->ProcessEvent ( pFnServerViewObjective, &ServerViewObjective_Parms, NULL );
};

// Function UTGame.UTPlayerController.ViewObjective
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ViewObjective ( )
{
	static UFunction* pFnViewObjective = NULL;

	if ( ! pFnViewObjective )
		pFnViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 44365 ];

	AUTPlayerController_execViewObjective_Parms ViewObjective_Parms;

	this->ProcessEvent ( pFnViewObjective, &ViewObjective_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerViewPlayerByName
// [0x00220042] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerViewPlayerByName ( struct FString PlayerName )
{
	static UFunction* pFnServerViewPlayerByName = NULL;

	if ( ! pFnServerViewPlayerByName )
		pFnServerViewPlayerByName = (UFunction*) UObject::GObjObjects()->Data[ 44361 ];

	AUTPlayerController_execServerViewPlayerByName_Parms ServerViewPlayerByName_Parms;
	memcpy ( &ServerViewPlayerByName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnServerViewPlayerByName, &ServerViewPlayerByName_Parms, NULL );
};

// Function UTGame.UTPlayerController.ViewPlayerByName
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ViewPlayerByName ( struct FString PlayerName )
{
	static UFunction* pFnViewPlayerByName = NULL;

	if ( ! pFnViewPlayerByName )
		pFnViewPlayerByName = (UFunction*) UObject::GObjObjects()->Data[ 44359 ];

	AUTPlayerController_execViewPlayerByName_Parms ViewPlayerByName_Parms;
	memcpy ( &ViewPlayerByName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnViewPlayerByName, &ViewPlayerByName_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerViewSelf
// [0x00A24042] 
// Parameters infos:
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::ServerViewSelf ( struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnServerViewSelf = NULL;

	if ( ! pFnServerViewSelf )
		pFnServerViewSelf = (UFunction*) UObject::GObjObjects()->Data[ 44355 ];

	AUTPlayerController_execServerViewSelf_Parms ServerViewSelf_Parms;
	memcpy ( &ServerViewSelf_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnServerViewSelf, &ServerViewSelf_Parms, NULL );
};

// Function UTGame.UTPlayerController.SwitchWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void AUTPlayerController::SwitchWeapon ( unsigned char T )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 44353 ];

	AUTPlayerController_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.T = T;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function UTGame.UTPlayerController.ViewNextBot
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::ViewNextBot ( )
{
	static UFunction* pFnViewNextBot = NULL;

	if ( ! pFnViewNextBot )
		pFnViewNextBot = (UFunction*) UObject::GObjObjects()->Data[ 44352 ];

	AUTPlayerController_execViewNextBot_Parms ViewNextBot_Parms;

	this->ProcessEvent ( pFnViewNextBot, &ViewNextBot_Parms, NULL );
};

// Function UTGame.UTPlayerController.LongClientAdjustPosition
// [0x01820142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FName                   NewState                       ( CPF_Parm )
// unsigned char                  newPhysics                     ( CPF_Parm )
// float                          NewLocX                        ( CPF_Parm )
// float                          NewLocY                        ( CPF_Parm )
// float                          NewLocZ                        ( CPF_Parm )
// float                          NewVelX                        ( CPF_Parm )
// float                          NewVelY                        ( CPF_Parm )
// float                          NewVelZ                        ( CPF_Parm )
// class AActor*                  NewBase                        ( CPF_Parm )
// float                          NewFloorX                      ( CPF_Parm )
// float                          NewFloorY                      ( CPF_Parm )
// float                          NewFloorZ                      ( CPF_Parm )

void AUTPlayerController::LongClientAdjustPosition ( float TimeStamp, struct FName NewState, unsigned char newPhysics, float NewLocX, float NewLocY, float NewLocZ, float NewVelX, float NewVelY, float NewVelZ, class AActor* NewBase, float NewFloorX, float NewFloorY, float NewFloorZ )
{
	static UFunction* pFnLongClientAdjustPosition = NULL;

	if ( ! pFnLongClientAdjustPosition )
		pFnLongClientAdjustPosition = (UFunction*) UObject::GObjObjects()->Data[ 44318 ];

	AUTPlayerController_execLongClientAdjustPosition_Parms LongClientAdjustPosition_Parms;
	LongClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy ( &LongClientAdjustPosition_Parms.NewState, &NewState, 0x8 );
	LongClientAdjustPosition_Parms.newPhysics = newPhysics;
	LongClientAdjustPosition_Parms.NewLocX = NewLocX;
	LongClientAdjustPosition_Parms.NewLocY = NewLocY;
	LongClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	LongClientAdjustPosition_Parms.NewVelX = NewVelX;
	LongClientAdjustPosition_Parms.NewVelY = NewVelY;
	LongClientAdjustPosition_Parms.NewVelZ = NewVelZ;
	LongClientAdjustPosition_Parms.NewBase = NewBase;
	LongClientAdjustPosition_Parms.NewFloorX = NewFloorX;
	LongClientAdjustPosition_Parms.NewFloorY = NewFloorY;
	LongClientAdjustPosition_Parms.NewFloorZ = NewFloorZ;

	this->ProcessEvent ( pFnLongClientAdjustPosition, &LongClientAdjustPosition_Parms, NULL );
};

// Function UTGame.UTPlayerController.ShortServerMove
// [0x00220042] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// struct FVector                 ClientLoc                      ( CPF_Parm )
// unsigned char                  NewFlags                       ( CPF_Parm )
// unsigned char                  ClientRoll                     ( CPF_Parm )
// int                            View                           ( CPF_Parm )

void AUTPlayerController::ShortServerMove ( float TimeStamp, struct FVector ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, int View )
{
	static UFunction* pFnShortServerMove = NULL;

	if ( ! pFnShortServerMove )
		pFnShortServerMove = (UFunction*) UObject::GObjObjects()->Data[ 44312 ];

	AUTPlayerController_execShortServerMove_Parms ShortServerMove_Parms;
	ShortServerMove_Parms.TimeStamp = TimeStamp;
	memcpy ( &ShortServerMove_Parms.ClientLoc, &ClientLoc, 0xC );
	ShortServerMove_Parms.NewFlags = NewFlags;
	ShortServerMove_Parms.ClientRoll = ClientRoll;
	ShortServerMove_Parms.View = View;

	this->ProcessEvent ( pFnShortServerMove, &ShortServerMove_Parms, NULL );
};

// Function UTGame.UTPlayerController.CallServerMove
// [0x00820002] 
// Parameters infos:
// class USavedMove*              NewMove                        ( CPF_Parm )
// struct FVector                 ClientLoc                      ( CPF_Parm )
// unsigned char                  ClientRoll                     ( CPF_Parm )
// int                            View                           ( CPF_Parm )
// class USavedMove*              OldMove                        ( CPF_Parm )

void AUTPlayerController::CallServerMove ( class USavedMove* NewMove, struct FVector ClientLoc, unsigned char ClientRoll, int View, class USavedMove* OldMove )
{
	static UFunction* pFnCallServerMove = NULL;

	if ( ! pFnCallServerMove )
		pFnCallServerMove = (UFunction*) UObject::GObjObjects()->Data[ 44302 ];

	AUTPlayerController_execCallServerMove_Parms CallServerMove_Parms;
	CallServerMove_Parms.NewMove = NewMove;
	memcpy ( &CallServerMove_Parms.ClientLoc, &ClientLoc, 0xC );
	CallServerMove_Parms.ClientRoll = ClientRoll;
	CallServerMove_Parms.View = View;
	CallServerMove_Parms.OldMove = OldMove;

	this->ProcessEvent ( pFnCallServerMove, &CallServerMove_Parms, NULL );
};

// Function UTGame.UTPlayerController.ToggleTranslocator
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ToggleTranslocator ( )
{
	static UFunction* pFnToggleTranslocator = NULL;

	if ( ! pFnToggleTranslocator )
		pFnToggleTranslocator = (UFunction*) UObject::GObjObjects()->Data[ 44301 ];

	AUTPlayerController_execToggleTranslocator_Parms ToggleTranslocator_Parms;

	this->ProcessEvent ( pFnToggleTranslocator, &ToggleTranslocator_Parms, NULL );
};

// Function UTGame.UTPlayerController.ToggleMelee
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ToggleMelee ( )
{
	static UFunction* pFnToggleMelee = NULL;

	if ( ! pFnToggleMelee )
		pFnToggleMelee = (UFunction*) UObject::GObjObjects()->Data[ 44299 ];

	AUTPlayerController_execToggleMelee_Parms ToggleMelee_Parms;

	this->ProcessEvent ( pFnToggleMelee, &ToggleMelee_Parms, NULL );
};

// Function UTGame.UTPlayerController.ViewShake
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTPlayerController::ViewShake ( float DeltaTime )
{
	static UFunction* pFnViewShake = NULL;

	if ( ! pFnViewShake )
		pFnViewShake = (UFunction*) UObject::GObjObjects()->Data[ 44297 ];

	AUTPlayerController_execViewShake_Parms ViewShake_Parms;
	ViewShake_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnViewShake, &ViewShake_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnStopCameraAnim
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_StopCameraAnim* inAction                       ( CPF_Parm )

void AUTPlayerController::OnStopCameraAnim ( class UUTSeqAct_StopCameraAnim* inAction )
{
	static UFunction* pFnOnStopCameraAnim = NULL;

	if ( ! pFnOnStopCameraAnim )
		pFnOnStopCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44294 ];

	AUTPlayerController_execOnStopCameraAnim_Parms OnStopCameraAnim_Parms;
	OnStopCameraAnim_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnStopCameraAnim, &OnStopCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnPlayCameraAnim
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_PlayCameraAnim* inAction                       ( CPF_Parm )

void AUTPlayerController::OnPlayCameraAnim ( class UUTSeqAct_PlayCameraAnim* inAction )
{
	static UFunction* pFnOnPlayCameraAnim = NULL;

	if ( ! pFnOnPlayCameraAnim )
		pFnOnPlayCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44286 ];

	AUTPlayerController_execOnPlayCameraAnim_Parms OnPlayCameraAnim_Parms;
	OnPlayCameraAnim_Parms.inAction = inAction;

	this->ProcessEvent ( pFnOnPlayCameraAnim, &OnPlayCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientStopCameraAnim
// [0x010209C2] ( FUNC_Event )
// Parameters infos:
// class UCameraAnim*             AnimToStop                     ( CPF_Parm )

void AUTPlayerController::eventClientStopCameraAnim ( class UCameraAnim* AnimToStop )
{
	static UFunction* pFnClientStopCameraAnim = NULL;

	if ( ! pFnClientStopCameraAnim )
		pFnClientStopCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44284 ];

	AUTPlayerController_eventClientStopCameraAnim_Parms ClientStopCameraAnim_Parms;
	ClientStopCameraAnim_Parms.AnimToStop = AnimToStop;

	this->ProcessEvent ( pFnClientStopCameraAnim, &ClientStopCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientPlayCameraAnim
// [0x01024942] ( FUNC_Event )
// Parameters infos:
// class UCameraAnim*             AnimToPlay                     ( CPF_Parm )
// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
// float                          Rate                           ( CPF_OptionalParm | CPF_Parm )
// float                          BlendInTime                    ( CPF_OptionalParm | CPF_Parm )
// float                          BlendOutTime                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRandomStartTime               ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  Space                          ( CPF_OptionalParm | CPF_Parm )
// struct FRotator                CustomPlaySpace                ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::eventClientPlayCameraAnim ( class UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, unsigned long bLoop, unsigned long bRandomStartTime, unsigned char Space, struct FRotator CustomPlaySpace )
{
	static UFunction* pFnClientPlayCameraAnim = NULL;

	if ( ! pFnClientPlayCameraAnim )
		pFnClientPlayCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44274 ];

	AUTPlayerController_eventClientPlayCameraAnim_Parms ClientPlayCameraAnim_Parms;
	ClientPlayCameraAnim_Parms.AnimToPlay = AnimToPlay;
	ClientPlayCameraAnim_Parms.Scale = Scale;
	ClientPlayCameraAnim_Parms.Rate = Rate;
	ClientPlayCameraAnim_Parms.BlendInTime = BlendInTime;
	ClientPlayCameraAnim_Parms.BlendOutTime = BlendOutTime;
	ClientPlayCameraAnim_Parms.bLoop = bLoop;
	ClientPlayCameraAnim_Parms.bRandomStartTime = bRandomStartTime;
	ClientPlayCameraAnim_Parms.Space = Space;
	memcpy ( &ClientPlayCameraAnim_Parms.CustomPlaySpace, &CustomPlaySpace, 0xC );

	this->ProcessEvent ( pFnClientPlayCameraAnim, &ClientPlayCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetCameraAnimStrength
// [0x00020002] 
// Parameters infos:
// float                          NewStrength                    ( CPF_Parm )

void AUTPlayerController::SetCameraAnimStrength ( float NewStrength )
{
	static UFunction* pFnSetCameraAnimStrength = NULL;

	if ( ! pFnSetCameraAnimStrength )
		pFnSetCameraAnimStrength = (UFunction*) UObject::GObjObjects()->Data[ 44272 ];

	AUTPlayerController_execSetCameraAnimStrength_Parms SetCameraAnimStrength_Parms;
	SetCameraAnimStrength_Parms.NewStrength = NewStrength;

	this->ProcessEvent ( pFnSetCameraAnimStrength, &SetCameraAnimStrength_Parms, NULL );
};

// Function UTGame.UTPlayerController.StopCameraAnim
// [0x00024002] 
// Parameters infos:
// unsigned long                  bImmediate                     ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::StopCameraAnim ( unsigned long bImmediate )
{
	static UFunction* pFnStopCameraAnim = NULL;

	if ( ! pFnStopCameraAnim )
		pFnStopCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44270 ];

	AUTPlayerController_execStopCameraAnim_Parms StopCameraAnim_Parms;
	StopCameraAnim_Parms.bImmediate = bImmediate;

	this->ProcessEvent ( pFnStopCameraAnim, &StopCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.PlayCameraAnim
// [0x00024002] 
// Parameters infos:
// class UCameraAnim*             AnimToPlay                     ( CPF_Parm )
// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
// float                          Rate                           ( CPF_OptionalParm | CPF_Parm )
// float                          BlendInTime                    ( CPF_OptionalParm | CPF_Parm )
// float                          BlendOutTime                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsDamageShake                 ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::PlayCameraAnim ( class UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, unsigned long bLoop, unsigned long bIsDamageShake )
{
	static UFunction* pFnPlayCameraAnim = NULL;

	if ( ! pFnPlayCameraAnim )
		pFnPlayCameraAnim = (UFunction*) UObject::GObjObjects()->Data[ 44258 ];

	AUTPlayerController_execPlayCameraAnim_Parms PlayCameraAnim_Parms;
	PlayCameraAnim_Parms.AnimToPlay = AnimToPlay;
	PlayCameraAnim_Parms.Scale = Scale;
	PlayCameraAnim_Parms.Rate = Rate;
	PlayCameraAnim_Parms.BlendInTime = BlendInTime;
	PlayCameraAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCameraAnim_Parms.bLoop = bLoop;
	PlayCameraAnim_Parms.bIsDamageShake = bIsDamageShake;

	this->ProcessEvent ( pFnPlayCameraAnim, &PlayCameraAnim_Parms, NULL );
};

// Function UTGame.UTPlayerController.StopViewShaking
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::StopViewShaking ( )
{
	static UFunction* pFnStopViewShaking = NULL;

	if ( ! pFnStopViewShaking )
		pFnStopViewShaking = (UFunction*) UObject::GObjObjects()->Data[ 44257 ];

	AUTPlayerController_execStopViewShaking_Parms StopViewShaking_Parms;

	this->ProcessEvent ( pFnStopViewShaking, &StopViewShaking_Parms, NULL );
};

// Function UTGame.UTPlayerController.DamageShake
// [0x00020002] 
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTPlayerController::DamageShake ( int Damage, class UClass* DamageType )
{
	static UFunction* pFnDamageShake = NULL;

	if ( ! pFnDamageShake )
		pFnDamageShake = (UFunction*) UObject::GObjObjects()->Data[ 44247 ];

	AUTPlayerController_execDamageShake_Parms DamageShake_Parms;
	DamageShake_Parms.Damage = Damage;
	DamageShake_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDamageShake, &DamageShake_Parms, NULL );
};

// Function UTGame.UTPlayerController.PlayAnnouncement
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::PlayAnnouncement ( class UClass* InMessageClass, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnPlayAnnouncement = NULL;

	if ( ! pFnPlayAnnouncement )
		pFnPlayAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 44241 ];

	AUTPlayerController_execPlayAnnouncement_Parms PlayAnnouncement_Parms;
	PlayAnnouncement_Parms.InMessageClass = InMessageClass;
	PlayAnnouncement_Parms.MessageIndex = MessageIndex;
	PlayAnnouncement_Parms.PRI = PRI;
	PlayAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnPlayAnnouncement, &PlayAnnouncement_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientPlayAnnouncement
// [0x010241C2] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::ClientPlayAnnouncement ( class UClass* InMessageClass, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnClientPlayAnnouncement = NULL;

	if ( ! pFnClientPlayAnnouncement )
		pFnClientPlayAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 44236 ];

	AUTPlayerController_execClientPlayAnnouncement_Parms ClientPlayAnnouncement_Parms;
	ClientPlayAnnouncement_Parms.InMessageClass = InMessageClass;
	ClientPlayAnnouncement_Parms.MessageIndex = MessageIndex;
	ClientPlayAnnouncement_Parms.PRI = PRI;
	ClientPlayAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientPlayAnnouncement, &ClientPlayAnnouncement_Parms, NULL );
};

// Function UTGame.UTPlayerController.Music
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            EventIndex                     ( CPF_Parm )

void AUTPlayerController::Music ( int EventIndex )
{
	static UFunction* pFnMusic = NULL;

	if ( ! pFnMusic )
		pFnMusic = (UFunction*) UObject::GObjObjects()->Data[ 44234 ];

	AUTPlayerController_execMusic_Parms Music_Parms;
	Music_Parms.EventIndex = EventIndex;

	this->ProcessEvent ( pFnMusic, &Music_Parms, NULL );
};

// Function UTGame.UTPlayerController.AlreadyInActionMusic
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::AlreadyInActionMusic ( )
{
	static UFunction* pFnAlreadyInActionMusic = NULL;

	if ( ! pFnAlreadyInActionMusic )
		pFnAlreadyInActionMusic = (UFunction*) UObject::GObjObjects()->Data[ 44229 ];

	AUTPlayerController_execAlreadyInActionMusic_Parms AlreadyInActionMusic_Parms;

	this->ProcessEvent ( pFnAlreadyInActionMusic, &AlreadyInActionMusic_Parms, NULL );

	return AlreadyInActionMusic_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ClientMusicEvent
// [0x01020142] 
// Parameters infos:
// int                            EventIndex                     ( CPF_Parm )

void AUTPlayerController::ClientMusicEvent ( int EventIndex )
{
	static UFunction* pFnClientMusicEvent = NULL;

	if ( ! pFnClientMusicEvent )
		pFnClientMusicEvent = (UFunction*) UObject::GObjObjects()->Data[ 44227 ];

	AUTPlayerController_execClientMusicEvent_Parms ClientMusicEvent_Parms;
	ClientMusicEvent_Parms.EventIndex = EventIndex;

	this->ProcessEvent ( pFnClientMusicEvent, &ClientMusicEvent_Parms, NULL );
};

// Function UTGame.UTPlayerController.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 POVLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                POVRotation                    ( CPF_Parm | CPF_OutParm )

void AUTPlayerController::eventGetPlayerViewPoint ( struct FVector* POVLocation, struct FRotator* POVRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 44214 ];

	AUTPlayerController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( POVLocation )
		memcpy ( POVLocation, &GetPlayerViewPoint_Parms.POVLocation, 0xC );

	if ( POVRotation )
		memcpy ( POVRotation, &GetPlayerViewPoint_Parms.POVRotation, 0xC );
};

// Function UTGame.UTPlayerController.SpawnCamera
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::SpawnCamera ( )
{
	static UFunction* pFnSpawnCamera = NULL;

	if ( ! pFnSpawnCamera )
		pFnSpawnCamera = (UFunction*) UObject::GObjObjects()->Data[ 44211 ];

	AUTPlayerController_execSpawnCamera_Parms SpawnCamera_Parms;

	this->ProcessEvent ( pFnSpawnCamera, &SpawnCamera_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetCameraMode
// [0x00020002] 
// Parameters infos:
// struct FName                   NewCamMode                     ( CPF_Parm )

void AUTPlayerController::SetCameraMode ( struct FName NewCamMode )
{
	static UFunction* pFnSetCameraMode = NULL;

	if ( ! pFnSetCameraMode )
		pFnSetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 44207 ];

	AUTPlayerController_execSetCameraMode_Parms SetCameraMode_Parms;
	memcpy ( &SetCameraMode_Parms.NewCamMode, &NewCamMode, 0x8 );

	this->ProcessEvent ( pFnSetCameraMode, &SetCameraMode_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientSetBehindView
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void AUTPlayerController::ClientSetBehindView ( unsigned long bNewBehindView )
{
	static UFunction* pFnClientSetBehindView = NULL;

	if ( ! pFnClientSetBehindView )
		pFnClientSetBehindView = (UFunction*) UObject::GObjObjects()->Data[ 44205 ];

	AUTPlayerController_execClientSetBehindView_Parms ClientSetBehindView_Parms;
	ClientSetBehindView_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnClientSetBehindView, &ClientSetBehindView_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetBehindView
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void AUTPlayerController::SetBehindView ( unsigned long bNewBehindView )
{
	static UFunction* pFnSetBehindView = NULL;

	if ( ! pFnSetBehindView )
		pFnSetBehindView = (UFunction*) UObject::GObjObjects()->Data[ 44201 ];

	AUTPlayerController_execSetBehindView_Parms SetBehindView_Parms;
	SetBehindView_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnSetBehindView, &SetBehindView_Parms, NULL );
};

// Function UTGame.UTPlayerController.BehindView
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::BehindView ( )
{
	static UFunction* pFnBehindView = NULL;

	if ( ! pFnBehindView )
		pFnBehindView = (UFunction*) UObject::GObjObjects()->Data[ 44200 ];

	AUTPlayerController_execBehindView_Parms BehindView_Parms;

	this->ProcessEvent ( pFnBehindView, &BehindView_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientReset
// [0x010201C2] 
// Parameters infos:

void AUTPlayerController::ClientReset ( )
{
	static UFunction* pFnClientReset = NULL;

	if ( ! pFnClientReset )
		pFnClientReset = (UFunction*) UObject::GObjObjects()->Data[ 44198 ];

	AUTPlayerController_execClientReset_Parms ClientReset_Parms;

	this->ProcessEvent ( pFnClientReset, &ClientReset_Parms, NULL );
};

// Function UTGame.UTPlayerController.Reset
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 44197 ];

	AUTPlayerController_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTPlayerController.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTPlayerController::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 44192 ];

	AUTPlayerController_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTPlayerController.ShowScoreboard
// [0x00020000] 
// Parameters infos:

void AUTPlayerController::ShowScoreboard ( )
{
	static UFunction* pFnShowScoreboard = NULL;

	if ( ! pFnShowScoreboard )
		pFnShowScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 44144 ];

	AUTPlayerController_execShowScoreboard_Parms ShowScoreboard_Parms;

	this->ProcessEvent ( pFnShowScoreboard, &ShowScoreboard_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSpectate
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::ServerSpectate ( )
{
	static UFunction* pFnServerSpectate = NULL;

	if ( ! pFnServerSpectate )
		pFnServerSpectate = (UFunction*) UObject::GObjObjects()->Data[ 44069 ];

	AUTPlayerController_execServerSpectate_Parms ServerSpectate_Parms;

	this->ProcessEvent ( pFnServerSpectate, &ServerSpectate_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClearDoubleClick
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::ClearDoubleClick ( )
{
	static UFunction* pFnClearDoubleClick = NULL;

	if ( ! pFnClearDoubleClick )
		pFnClearDoubleClick = (UFunction*) UObject::GObjObjects()->Data[ 44031 ];

	AUTPlayerController_execClearDoubleClick_Parms ClearDoubleClick_Parms;

	this->ProcessEvent ( pFnClearDoubleClick, &ClearDoubleClick_Parms, NULL );
};

// Function UTGame.UTPlayerController.PerformedUseAction
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::PerformedUseAction ( )
{
	static UFunction* pFnPerformedUseAction = NULL;

	if ( ! pFnPerformedUseAction )
		pFnPerformedUseAction = (UFunction*) UObject::GObjObjects()->Data[ 44026 ];

	AUTPlayerController_execPerformedUseAction_Parms PerformedUseAction_Parms;

	this->ProcessEvent ( pFnPerformedUseAction, &PerformedUseAction_Parms, NULL );

	return PerformedUseAction_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.Use
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::Use ( )
{
	static UFunction* pFnUse = NULL;

	if ( ! pFnUse )
		pFnUse = (UFunction*) UObject::GObjObjects()->Data[ 44025 ];

	AUTPlayerController_execUse_Parms Use_Parms;

	this->ProcessEvent ( pFnUse, &Use_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerUse
// [0x00220042] 
// Parameters infos:

void AUTPlayerController::ServerUse ( )
{
	static UFunction* pFnServerUse = NULL;

	if ( ! pFnServerUse )
		pFnServerUse = (UFunction*) UObject::GObjObjects()->Data[ 44023 ];

	AUTPlayerController_execServerUse_Parms ServerUse_Parms;

	this->ProcessEvent ( pFnServerUse, &ServerUse_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientPlayTakeHit
// [0x01020142] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// unsigned char                  Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTPlayerController::ClientPlayTakeHit ( struct FVector HitLoc, unsigned char Damage, class UClass* DamageType )
{
	static UFunction* pFnClientPlayTakeHit = NULL;

	if ( ! pFnClientPlayTakeHit )
		pFnClientPlayTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 44018 ];

	AUTPlayerController_execClientPlayTakeHit_Parms ClientPlayTakeHit_Parms;
	memcpy ( &ClientPlayTakeHit_Parms.HitLoc, &HitLoc, 0xC );
	ClientPlayTakeHit_Parms.Damage = Damage;
	ClientPlayTakeHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnClientPlayTakeHit, &ClientPlayTakeHit_Parms, NULL );
};

// Function UTGame.UTPlayerController.NotifyTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void AUTPlayerController::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 44011 ];

	AUTPlayerController_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function UTGame.UTPlayerController.PlayStartupMessage
// [0x010201C2] 
// Parameters infos:
// unsigned char                  StartupStage                   ( CPF_Parm )

void AUTPlayerController::PlayStartupMessage ( unsigned char StartupStage )
{
	static UFunction* pFnPlayStartupMessage = NULL;

	if ( ! pFnPlayStartupMessage )
		pFnPlayStartupMessage = (UFunction*) UObject::GObjObjects()->Data[ 44007 ];

	AUTPlayerController_execPlayStartupMessage_Parms PlayStartupMessage_Parms;
	PlayStartupMessage_Parms.StartupStage = StartupStage;

	this->ProcessEvent ( pFnPlayStartupMessage, &PlayStartupMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.ToggleScreenShotMode
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ToggleScreenShotMode ( )
{
	static UFunction* pFnToggleScreenShotMode = NULL;

	if ( ! pFnToggleScreenShotMode )
		pFnToggleScreenShotMode = (UFunction*) UObject::GObjObjects()->Data[ 44005 ];

	AUTPlayerController_execToggleScreenShotMode_Parms ToggleScreenShotMode_Parms;

	this->ProcessEvent ( pFnToggleScreenShotMode, &ToggleScreenShotMode_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetAutoTaunt
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  Value                          ( CPF_Parm )

void AUTPlayerController::SetAutoTaunt ( unsigned long Value )
{
	static UFunction* pFnSetAutoTaunt = NULL;

	if ( ! pFnSetAutoTaunt )
		pFnSetAutoTaunt = (UFunction*) UObject::GObjObjects()->Data[ 44003 ];

	AUTPlayerController_execSetAutoTaunt_Parms SetAutoTaunt_Parms;
	SetAutoTaunt_Parms.Value = Value;

	this->ProcessEvent ( pFnSetAutoTaunt, &SetAutoTaunt_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSetAutoTaunt
// [0x002200C2] 
// Parameters infos:
// unsigned long                  Value                          ( CPF_Parm )

void AUTPlayerController::ServerSetAutoTaunt ( unsigned long Value )
{
	static UFunction* pFnServerSetAutoTaunt = NULL;

	if ( ! pFnServerSetAutoTaunt )
		pFnServerSetAutoTaunt = (UFunction*) UObject::GObjObjects()->Data[ 44001 ];

	AUTPlayerController_execServerSetAutoTaunt_Parms ServerSetAutoTaunt_Parms;
	ServerSetAutoTaunt_Parms.Value = Value;

	this->ProcessEvent ( pFnServerSetAutoTaunt, &ServerSetAutoTaunt_Parms, NULL );
};

// Function UTGame.UTPlayerController.UsingFirstPersonCamera
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::UsingFirstPersonCamera ( )
{
	static UFunction* pFnUsingFirstPersonCamera = NULL;

	if ( ! pFnUsingFirstPersonCamera )
		pFnUsingFirstPersonCamera = (UFunction*) UObject::GObjObjects()->Data[ 43999 ];

	AUTPlayerController_execUsingFirstPersonCamera_Parms UsingFirstPersonCamera_Parms;

	this->ProcessEvent ( pFnUsingFirstPersonCamera, &UsingFirstPersonCamera_Parms, NULL );

	return UsingFirstPersonCamera_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ResetCameraMode
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventResetCameraMode ( )
{
	static UFunction* pFnResetCameraMode = NULL;

	if ( ! pFnResetCameraMode )
		pFnResetCameraMode = (UFunction*) UObject::GObjObjects()->Data[ 43998 ];

	AUTPlayerController_eventResetCameraMode_Parms ResetCameraMode_Parms;

	this->ProcessEvent ( pFnResetCameraMode, &ResetCameraMode_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetHand
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewWeaponHand                  ( CPF_Parm )

void AUTPlayerController::SetHand ( unsigned char NewWeaponHand )
{
	static UFunction* pFnSetHand = NULL;

	if ( ! pFnSetHand )
		pFnSetHand = (UFunction*) UObject::GObjObjects()->Data[ 43996 ];

	AUTPlayerController_execSetHand_Parms SetHand_Parms;
	SetHand_Parms.NewWeaponHand = NewWeaponHand;

	this->ProcessEvent ( pFnSetHand, &SetHand_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSetHand
// [0x002200C2] 
// Parameters infos:
// unsigned char                  NewWeaponHand                  ( CPF_Parm )

void AUTPlayerController::ServerSetHand ( unsigned char NewWeaponHand )
{
	static UFunction* pFnServerSetHand = NULL;

	if ( ! pFnServerSetHand )
		pFnServerSetHand = (UFunction*) UObject::GObjObjects()->Data[ 43993 ];

	AUTPlayerController_execServerSetHand_Parms ServerSetHand_Parms;
	ServerSetHand_Parms.NewWeaponHand = NewWeaponHand;

	this->ProcessEvent ( pFnServerSetHand, &ServerSetHand_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerPlayerPreferences
// [0x002200C2] 
// Parameters infos:
// unsigned char                  NewWeaponHand                  ( CPF_Parm )
// unsigned long                  bNewAutoTaunt                  ( CPF_Parm )
// unsigned long                  bNewCenteredWeaponFire         ( CPF_Parm )
// unsigned char                  NewAutoObjectivePreference     ( CPF_Parm )
// unsigned char                  NewVehicleControls             ( CPF_Parm )

void AUTPlayerController::ServerPlayerPreferences ( unsigned char NewWeaponHand, unsigned long bNewAutoTaunt, unsigned long bNewCenteredWeaponFire, unsigned char NewAutoObjectivePreference, unsigned char NewVehicleControls )
{
	static UFunction* pFnServerPlayerPreferences = NULL;

	if ( ! pFnServerPlayerPreferences )
		pFnServerPlayerPreferences = (UFunction*) UObject::GObjObjects()->Data[ 43987 ];

	AUTPlayerController_execServerPlayerPreferences_Parms ServerPlayerPreferences_Parms;
	ServerPlayerPreferences_Parms.NewWeaponHand = NewWeaponHand;
	ServerPlayerPreferences_Parms.bNewAutoTaunt = bNewAutoTaunt;
	ServerPlayerPreferences_Parms.bNewCenteredWeaponFire = bNewCenteredWeaponFire;
	ServerPlayerPreferences_Parms.NewAutoObjectivePreference = NewAutoObjectivePreference;
	ServerPlayerPreferences_Parms.NewVehicleControls = NewVehicleControls;

	this->ProcessEvent ( pFnServerPlayerPreferences, &ServerPlayerPreferences_Parms, NULL );
};

// Function UTGame.UTPlayerController.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventReceivedPlayer ( )
{
	static UFunction* pFnReceivedPlayer = NULL;

	if ( ! pFnReceivedPlayer )
		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 43986 ];

	AUTPlayerController_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
};

// Function UTGame.UTPlayerController.AcknowledgePossession
// [0x00820002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTPlayerController::AcknowledgePossession ( class APawn* P )
{
	static UFunction* pFnAcknowledgePossession = NULL;

	if ( ! pFnAcknowledgePossession )
		pFnAcknowledgePossession = (UFunction*) UObject::GObjObjects()->Data[ 43979 ];

	AUTPlayerController_execAcknowledgePossession_Parms AcknowledgePossession_Parms;
	AcknowledgePossession_Parms.P = P;

	this->ProcessEvent ( pFnAcknowledgePossession, &AcknowledgePossession_Parms, NULL );
};

// Function UTGame.UTPlayerController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTPlayerController::eventPossess ( class APawn* inPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 43976 ];

	AUTPlayerController_eventPossess_Parms Possess_Parms;
	Possess_Parms.inPawn = inPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientSetAutoObjective
// [0x010201C2] 
// Parameters infos:
// class AActor*                  NewAutoObjective               ( CPF_Parm )

void AUTPlayerController::ClientSetAutoObjective ( class AActor* NewAutoObjective )
{
	static UFunction* pFnClientSetAutoObjective = NULL;

	if ( ! pFnClientSetAutoObjective )
		pFnClientSetAutoObjective = (UFunction*) UObject::GObjObjects()->Data[ 43972 ];

	AUTPlayerController_execClientSetAutoObjective_Parms ClientSetAutoObjective_Parms;
	ClientSetAutoObjective_Parms.NewAutoObjective = NewAutoObjective;

	this->ProcessEvent ( pFnClientSetAutoObjective, &ClientSetAutoObjective_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetAutoObjective
// [0x00020002] 
// Parameters infos:
// class AActor*                  ObjectiveActor                 ( CPF_Parm )
// unsigned long                  bOnlyNotifyDifferent           ( CPF_Parm )

void AUTPlayerController::SetAutoObjective ( class AActor* ObjectiveActor, unsigned long bOnlyNotifyDifferent )
{
	static UFunction* pFnSetAutoObjective = NULL;

	if ( ! pFnSetAutoObjective )
		pFnSetAutoObjective = (UFunction*) UObject::GObjObjects()->Data[ 43961 ];

	AUTPlayerController_execSetAutoObjective_Parms SetAutoObjective_Parms;
	SetAutoObjective_Parms.ObjectiveActor = ObjectiveActor;
	SetAutoObjective_Parms.bOnlyNotifyDifferent = bOnlyNotifyDifferent;

	this->ProcessEvent ( pFnSetAutoObjective, &SetAutoObjective_Parms, NULL );
};

// Function UTGame.UTPlayerController.CheckAutoObjective
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOnlyNotifyDifferent           ( CPF_Parm )

void AUTPlayerController::CheckAutoObjective ( unsigned long bOnlyNotifyDifferent )
{
	static UFunction* pFnCheckAutoObjective = NULL;

	if ( ! pFnCheckAutoObjective )
		pFnCheckAutoObjective = (UFunction*) UObject::GObjObjects()->Data[ 43955 ];

	AUTPlayerController_execCheckAutoObjective_Parms CheckAutoObjective_Parms;
	CheckAutoObjective_Parms.bOnlyNotifyDifferent = bOnlyNotifyDifferent;

	this->ProcessEvent ( pFnCheckAutoObjective, &CheckAutoObjective_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetViewTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 43947 ];

	AUTPlayerController_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientRestart
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )

void AUTPlayerController::ClientRestart ( class APawn* NewPawn )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 43938 ];

	AUTPlayerController_execClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function UTGame.UTPlayerController.Restart
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTPlayerController::Restart ( unsigned long bVehicleTransition )
{
	static UFunction* pFnRestart = NULL;

	if ( ! pFnRestart )
		pFnRestart = (UFunction*) UObject::GObjObjects()->Data[ 43936 ];

	AUTPlayerController_execRestart_Parms Restart_Parms;
	Restart_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnRestart, &Restart_Parms, NULL );
};

// Function UTGame.UTPlayerController.FixFOV
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::FixFOV ( )
{
	static UFunction* pFnFixFOV = NULL;

	if ( ! pFnFixFOV )
		pFnFixFOV = (UFunction*) UObject::GObjObjects()->Data[ 43935 ];

	AUTPlayerController_execFixFOV_Parms FixFOV_Parms;

	this->ProcessEvent ( pFnFixFOV, &FixFOV_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetFOV
// [0x00020002] 
// Parameters infos:
// float                          Angle                          ( CPF_Parm )

void AUTPlayerController::SetFOV ( float Angle )
{
	static UFunction* pFnSetFOV = NULL;

	if ( ! pFnSetFOV )
		pFnSetFOV = (UFunction*) UObject::GObjObjects()->Data[ 43933 ];

	AUTPlayerController_execSetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.Angle = Angle;

	this->ProcessEvent ( pFnSetFOV, &SetFOV_Parms, NULL );
};

// Function UTGame.UTPlayerController.FOV
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void AUTPlayerController::FOV ( float F )
{
	static UFunction* pFnFOV = NULL;

	if ( ! pFnFOV )
		pFnFOV = (UFunction*) UObject::GObjObjects()->Data[ 43930 ];

	AUTPlayerController_execFOV_Parms FOV_Parms;
	FOV_Parms.F = F;

	this->ProcessEvent ( pFnFOV, &FOV_Parms, NULL );
};

// Function UTGame.UTPlayerController.CheckJumpOrDuck
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::CheckJumpOrDuck ( )
{
	static UFunction* pFnCheckJumpOrDuck = NULL;

	if ( ! pFnCheckJumpOrDuck )
		pFnCheckJumpOrDuck = (UFunction*) UObject::GObjObjects()->Data[ 43927 ];

	AUTPlayerController_execCheckJumpOrDuck_Parms CheckJumpOrDuck_Parms;

	this->ProcessEvent ( pFnCheckJumpOrDuck, &CheckJumpOrDuck_Parms, NULL );
};

// Function UTGame.UTPlayerController.KickWarning
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventKickWarning ( )
{
	static UFunction* pFnKickWarning = NULL;

	if ( ! pFnKickWarning )
		pFnKickWarning = (UFunction*) UObject::GObjObjects()->Data[ 43924 ];

	AUTPlayerController_eventKickWarning_Parms KickWarning_Parms;

	this->ProcessEvent ( pFnKickWarning, &KickWarning_Parms, NULL );
};

// Function UTGame.UTPlayerController.DrawHUD
// [0x00020002] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void AUTPlayerController::DrawHUD ( class AHUD* H )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 43921 ];

	AUTPlayerController_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function UTGame.UTPlayerController.SoakPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTPlayerController::eventSoakPause ( class APawn* P )
{
	static UFunction* pFnSoakPause = NULL;

	if ( ! pFnSoakPause )
		pFnSoakPause = (UFunction*) UObject::GObjObjects()->Data[ 43919 ];

	AUTPlayerController_eventSoakPause_Parms SoakPause_Parms;
	SoakPause_Parms.P = P;

	this->ProcessEvent ( pFnSoakPause, &SoakPause_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnControllerChanged
// [0x00020002] 
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void AUTPlayerController::OnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnOnControllerChanged = NULL;

	if ( ! pFnOnControllerChanged )
		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 43915 ];

	AUTPlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
};

// Function UTGame.UTPlayerController.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 43911 ];

	AUTPlayerController_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTPlayerController.Typing
// [0x00020002] 
// Parameters infos:
// unsigned long                  bTyping                        ( CPF_Parm )

void AUTPlayerController::Typing ( unsigned long bTyping )
{
	static UFunction* pFnTyping = NULL;

	if ( ! pFnTyping )
		pFnTyping = (UFunction*) UObject::GObjObjects()->Data[ 43908 ];

	AUTPlayerController_execTyping_Parms Typing_Parms;
	Typing_Parms.bTyping = bTyping;

	this->ProcessEvent ( pFnTyping, &Typing_Parms, NULL );
};

// Function UTGame.UTPlayerController.Taunt
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TauntIndex                     ( CPF_Parm )

void AUTPlayerController::Taunt ( int TauntIndex )
{
	static UFunction* pFnTaunt = NULL;

	if ( ! pFnTaunt )
		pFnTaunt = (UFunction*) UObject::GObjObjects()->Data[ 43904 ];

	AUTPlayerController_execTaunt_Parms Taunt_Parms;
	Taunt_Parms.TauntIndex = TauntIndex;

	this->ProcessEvent ( pFnTaunt, &Taunt_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerPlayVehicleHorn
// [0x00220042] 
// Parameters infos:

void AUTPlayerController::ServerPlayVehicleHorn ( )
{
	static UFunction* pFnServerPlayVehicleHorn = NULL;

	if ( ! pFnServerPlayVehicleHorn )
		pFnServerPlayVehicleHorn = (UFunction*) UObject::GObjObjects()->Data[ 43902 ];

	AUTPlayerController_execServerPlayVehicleHorn_Parms ServerPlayVehicleHorn_Parms;

	this->ProcessEvent ( pFnServerPlayVehicleHorn, &ServerPlayVehicleHorn_Parms, NULL );
};

// Function UTGame.UTPlayerController.PlayVehicleHorn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::PlayVehicleHorn ( )
{
	static UFunction* pFnPlayVehicleHorn = NULL;

	if ( ! pFnPlayVehicleHorn )
		pFnPlayVehicleHorn = (UFunction*) UObject::GObjObjects()->Data[ 43899 ];

	AUTPlayerController_execPlayVehicleHorn_Parms PlayVehicleHorn_Parms;

	this->ProcessEvent ( pFnPlayVehicleHorn, &PlayVehicleHorn_Parms, NULL );
};

// Function UTGame.UTPlayerController.TriggerInteracted
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::TriggerInteracted ( )
{
	static UFunction* pFnTriggerInteracted = NULL;

	if ( ! pFnTriggerInteracted )
		pFnTriggerInteracted = (UFunction*) UObject::GObjObjects()->Data[ 43887 ];

	AUTPlayerController_execTriggerInteracted_Parms TriggerInteracted_Parms;

	this->ProcessEvent ( pFnTriggerInteracted, &TriggerInteracted_Parms, NULL );

	return TriggerInteracted_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.PlayWinMessage
// [0x00020000] 
// Parameters infos:
// unsigned long                  bWinner                        ( CPF_Parm )

void AUTPlayerController::PlayWinMessage ( unsigned long bWinner )
{
	static UFunction* pFnPlayWinMessage = NULL;

	if ( ! pFnPlayWinMessage )
		pFnPlayWinMessage = (UFunction*) UObject::GObjObjects()->Data[ 43885 ];

	AUTPlayerController_execPlayWinMessage_Parms PlayWinMessage_Parms;
	PlayWinMessage_Parms.bWinner = bWinner;

	this->ProcessEvent ( pFnPlayWinMessage, &PlayWinMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.ProjectileWarningTimer
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::ProjectileWarningTimer ( )
{
	static UFunction* pFnProjectileWarningTimer = NULL;

	if ( ! pFnProjectileWarningTimer )
		pFnProjectileWarningTimer = (UFunction*) UObject::GObjObjects()->Data[ 43884 ];

	AUTPlayerController_execProjectileWarningTimer_Parms ProjectileWarningTimer_Parms;

	this->ProcessEvent ( pFnProjectileWarningTimer, &ProjectileWarningTimer_Parms, NULL );
};

// Function UTGame.UTPlayerController.ReceiveProjectileWarning
// [0x00020002] 
// Parameters infos:
// class AProjectile*             Proj                           ( CPF_Parm )

void AUTPlayerController::ReceiveProjectileWarning ( class AProjectile* Proj )
{
	static UFunction* pFnReceiveProjectileWarning = NULL;

	if ( ! pFnReceiveProjectileWarning )
		pFnReceiveProjectileWarning = (UFunction*) UObject::GObjObjects()->Data[ 43882 ];

	AUTPlayerController_execReceiveProjectileWarning_Parms ReceiveProjectileWarning_Parms;
	ReceiveProjectileWarning_Parms.Proj = Proj;

	this->ProcessEvent ( pFnReceiveProjectileWarning, &ReceiveProjectileWarning_Parms, NULL );
};

// Function UTGame.UTPlayerController.ReceiveWarning
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   shooter                        ( CPF_Parm )
// float                          projSpeed                      ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )

void AUTPlayerController::eventReceiveWarning ( class APawn* shooter, float projSpeed, struct FVector FireDir )
{
	static UFunction* pFnReceiveWarning = NULL;

	if ( ! pFnReceiveWarning )
		pFnReceiveWarning = (UFunction*) UObject::GObjObjects()->Data[ 43877 ];

	AUTPlayerController_eventReceiveWarning_Parms ReceiveWarning_Parms;
	ReceiveWarning_Parms.shooter = shooter;
	ReceiveWarning_Parms.projSpeed = projSpeed;
	memcpy ( &ReceiveWarning_Parms.FireDir, &FireDir, 0xC );

	this->ProcessEvent ( pFnReceiveWarning, &ReceiveWarning_Parms, NULL );
};

// Function UTGame.UTPlayerController.PlayBeepSound
// [0x00020102] 
// Parameters infos:

void AUTPlayerController::PlayBeepSound ( )
{
	static UFunction* pFnPlayBeepSound = NULL;

	if ( ! pFnPlayBeepSound )
		pFnPlayBeepSound = (UFunction*) UObject::GObjObjects()->Data[ 43873 ];

	AUTPlayerController_execPlayBeepSound_Parms PlayBeepSound_Parms;

	this->ProcessEvent ( pFnPlayBeepSound, &PlayBeepSound_Parms, NULL );
};

// Function UTGame.UTPlayerController.LandingShake
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::LandingShake ( )
{
	static UFunction* pFnLandingShake = NULL;

	if ( ! pFnLandingShake )
		pFnLandingShake = (UFunction*) UObject::GObjObjects()->Data[ 43870 ];

	AUTPlayerController_execLandingShake_Parms LandingShake_Parms;

	this->ProcessEvent ( pFnLandingShake, &LandingShake_Parms, NULL );

	return LandingShake_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ServerDropFlag
// [0x002200C2] 
// Parameters infos:

void AUTPlayerController::ServerDropFlag ( )
{
	static UFunction* pFnServerDropFlag = NULL;

	if ( ! pFnServerDropFlag )
		pFnServerDropFlag = (UFunction*) UObject::GObjObjects()->Data[ 43869 ];

	AUTPlayerController_execServerDropFlag_Parms ServerDropFlag_Parms;

	this->ProcessEvent ( pFnServerDropFlag, &ServerDropFlag_Parms, NULL );
};

// Function UTGame.UTPlayerController.DropFlag
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::DropFlag ( )
{
	static UFunction* pFnDropFlag = NULL;

	if ( ! pFnDropFlag )
		pFnDropFlag = (UFunction*) UObject::GObjObjects()->Data[ 43868 ];

	AUTPlayerController_execDropFlag_Parms DropFlag_Parms;

	this->ProcessEvent ( pFnDropFlag, &DropFlag_Parms, NULL );
};

// Function UTGame.UTPlayerController.ToggleMinimap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::ToggleMinimap ( )
{
	static UFunction* pFnToggleMinimap = NULL;

	if ( ! pFnToggleMinimap )
		pFnToggleMinimap = (UFunction*) UObject::GObjObjects()->Data[ 43866 ];

	AUTPlayerController_execToggleMinimap_Parms ToggleMinimap_Parms;

	this->ProcessEvent ( pFnToggleMinimap, &ToggleMinimap_Parms, NULL );
};

// Function UTGame.UTPlayerController.CheckVehicleToDrive
// [0x00820002] 
// Parameters infos:
// class AUTVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bEnterVehicle                  ( CPF_Parm )

class AUTVehicle* AUTPlayerController::CheckVehicleToDrive ( unsigned long bEnterVehicle )
{
	static UFunction* pFnCheckVehicleToDrive = NULL;

	if ( ! pFnCheckVehicleToDrive )
		pFnCheckVehicleToDrive = (UFunction*) UObject::GObjObjects()->Data[ 43849 ];

	AUTPlayerController_execCheckVehicleToDrive_Parms CheckVehicleToDrive_Parms;
	CheckVehicleToDrive_Parms.bEnterVehicle = bEnterVehicle;

	this->ProcessEvent ( pFnCheckVehicleToDrive, &CheckVehicleToDrive_Parms, NULL );

	return CheckVehicleToDrive_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ClientSetRequestedEntryWithFlag
// [0x010201C2] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )
// unsigned long                  bNewValue                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )

void AUTPlayerController::ClientSetRequestedEntryWithFlag ( class AUTVehicle* V, unsigned long bNewValue, int MessageIndex )
{
	static UFunction* pFnClientSetRequestedEntryWithFlag = NULL;

	if ( ! pFnClientSetRequestedEntryWithFlag )
		pFnClientSetRequestedEntryWithFlag = (UFunction*) UObject::GObjObjects()->Data[ 43843 ];

	AUTPlayerController_execClientSetRequestedEntryWithFlag_Parms ClientSetRequestedEntryWithFlag_Parms;
	ClientSetRequestedEntryWithFlag_Parms.V = V;
	ClientSetRequestedEntryWithFlag_Parms.bNewValue = bNewValue;
	ClientSetRequestedEntryWithFlag_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnClientSetRequestedEntryWithFlag, &ClientSetRequestedEntryWithFlag_Parms, NULL );
};

// Function UTGame.UTPlayerController.CheckPickedVehicle
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicle*              V                              ( CPF_Parm )
// unsigned long                  bEnterVehicle                  ( CPF_Parm )

class AUTVehicle* AUTPlayerController::CheckPickedVehicle ( class AUTVehicle* V, unsigned long bEnterVehicle )
{
	static UFunction* pFnCheckPickedVehicle = NULL;

	if ( ! pFnCheckPickedVehicle )
		pFnCheckPickedVehicle = (UFunction*) UObject::GObjObjects()->Data[ 43831 ];

	AUTPlayerController_execCheckPickedVehicle_Parms CheckPickedVehicle_Parms;
	CheckPickedVehicle_Parms.V = V;
	CheckPickedVehicle_Parms.bEnterVehicle = bEnterVehicle;

	this->ProcessEvent ( pFnCheckPickedVehicle, &CheckPickedVehicle_Parms, NULL );

	return CheckPickedVehicle_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.FindVehicleToDrive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerController::FindVehicleToDrive ( )
{
	static UFunction* pFnFindVehicleToDrive = NULL;

	if ( ! pFnFindVehicleToDrive )
		pFnFindVehicleToDrive = (UFunction*) UObject::GObjObjects()->Data[ 43829 ];

	AUTPlayerController_execFindVehicleToDrive_Parms FindVehicleToDrive_Parms;

	this->ProcessEvent ( pFnFindVehicleToDrive, &FindVehicleToDrive_Parms, NULL );

	return FindVehicleToDrive_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.GetAdjustedAimFor
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator AUTPlayerController::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 43816 ];

	AUTPlayerController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.AimHelpModifier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTPlayerController::AimHelpModifier ( )
{
	static UFunction* pFnAimHelpModifier = NULL;

	if ( ! pFnAimHelpModifier )
		pFnAimHelpModifier = (UFunction*) UObject::GObjObjects()->Data[ 43813 ];

	AUTPlayerController_execAimHelpModifier_Parms AimHelpModifier_Parms;

	this->ProcessEvent ( pFnAimHelpModifier, &AimHelpModifier_Parms, NULL );

	return AimHelpModifier_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.AimingHelp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInstantHit                    ( CPF_Parm )

bool AUTPlayerController::AimingHelp ( unsigned long bInstantHit )
{
	static UFunction* pFnAimingHelp = NULL;

	if ( ! pFnAimingHelp )
		pFnAimingHelp = (UFunction*) UObject::GObjObjects()->Data[ 43808 ];

	AUTPlayerController_execAimingHelp_Parms AimingHelp_Parms;
	AimingHelp_Parms.bInstantHit = bInstantHit;

	this->ProcessEvent ( pFnAimingHelp, &AimingHelp_Parms, NULL );

	return AimingHelp_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.ClientHearSound
// [0x01024942] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               ASound                         ( CPF_Parm )
// class AActor*                  SourceActor                    ( CPF_Parm )
// struct FVector                 SourceLocation                 ( CPF_Parm )
// unsigned long                  bStopWhenOwnerDestroyed        ( CPF_Parm )
// unsigned long                  bIsOccluded                    ( CPF_OptionalParm | CPF_Parm )

void AUTPlayerController::eventClientHearSound ( class USoundCue* ASound, class AActor* SourceActor, struct FVector SourceLocation, unsigned long bStopWhenOwnerDestroyed, unsigned long bIsOccluded )
{
	static UFunction* pFnClientHearSound = NULL;

	if ( ! pFnClientHearSound )
		pFnClientHearSound = (UFunction*) UObject::GObjObjects()->Data[ 43801 ];

	AUTPlayerController_eventClientHearSound_Parms ClientHearSound_Parms;
	ClientHearSound_Parms.ASound = ASound;
	ClientHearSound_Parms.SourceActor = SourceActor;
	memcpy ( &ClientHearSound_Parms.SourceLocation, &SourceLocation, 0xC );
	ClientHearSound_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	ClientHearSound_Parms.bIsOccluded = bIsOccluded;

	this->ProcessEvent ( pFnClientHearSound, &ClientHearSound_Parms, NULL );
};

// Function UTGame.UTPlayerController.ToggleSpeaking
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bNowOn                         ( CPF_Parm )

void AUTPlayerController::ToggleSpeaking ( unsigned long bNowOn )
{
	static UFunction* pFnToggleSpeaking = NULL;

	if ( ! pFnToggleSpeaking )
		pFnToggleSpeaking = (UFunction*) UObject::GObjObjects()->Data[ 43798 ];

	AUTPlayerController_execToggleSpeaking_Parms ToggleSpeaking_Parms;
	ToggleSpeaking_Parms.bNowOn = bNowOn;

	this->ProcessEvent ( pFnToggleSpeaking, &ToggleSpeaking_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerProcessSpeechRecognition
// [0x002200C2] 
// Parameters infos:
// struct FSpeechRecognizedWord   ReplicatedWords                ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::ServerProcessSpeechRecognition ( struct FSpeechRecognizedWord* ReplicatedWords )
{
	static UFunction* pFnServerProcessSpeechRecognition = NULL;

	if ( ! pFnServerProcessSpeechRecognition )
		pFnServerProcessSpeechRecognition = (UFunction*) UObject::GObjObjects()->Data[ 43791 ];

	AUTPlayerController_execServerProcessSpeechRecognition_Parms ServerProcessSpeechRecognition_Parms;
	memcpy ( &ServerProcessSpeechRecognition_Parms.ReplicatedWords, &ReplicatedWords, 0x3C );

	this->ProcessEvent ( pFnServerProcessSpeechRecognition, &ServerProcessSpeechRecognition_Parms, NULL );
};

// Function UTGame.UTPlayerController.SpeechRecognitionComplete
// [0x00820002] 
// Parameters infos:

void AUTPlayerController::SpeechRecognitionComplete ( )
{
	static UFunction* pFnSpeechRecognitionComplete = NULL;

	if ( ! pFnSpeechRecognitionComplete )
		pFnSpeechRecognitionComplete = (UFunction*) UObject::GObjObjects()->Data[ 43786 ];

	AUTPlayerController_execSpeechRecognitionComplete_Parms SpeechRecognitionComplete_Parms;

	this->ProcessEvent ( pFnSpeechRecognitionComplete, &SpeechRecognitionComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientSetSpeechRecognitionObject
// [0x010201C2] 
// Parameters infos:
// class USpeechRecognition*      NewRecognitionData             ( CPF_Parm )

void AUTPlayerController::ClientSetSpeechRecognitionObject ( class USpeechRecognition* NewRecognitionData )
{
	static UFunction* pFnClientSetSpeechRecognitionObject = NULL;

	if ( ! pFnClientSetSpeechRecognitionObject )
		pFnClientSetSpeechRecognitionObject = (UFunction*) UObject::GObjObjects()->Data[ 43784 ];

	AUTPlayerController_execClientSetSpeechRecognitionObject_Parms ClientSetSpeechRecognitionObject_Parms;
	ClientSetSpeechRecognitionObject_Parms.NewRecognitionData = NewRecognitionData;

	this->ProcessEvent ( pFnClientSetSpeechRecognitionObject, &ClientSetSpeechRecognitionObject_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnDestroyOnlineGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void AUTPlayerController::OnDestroyOnlineGameComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

	if ( ! pFnOnDestroyOnlineGameComplete )
		pFnOnDestroyOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 43781 ];

	AUTPlayerController_execOnDestroyOnlineGameComplete_Parms OnDestroyOnlineGameComplete_Parms;
	memcpy ( &OnDestroyOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnDestroyOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnDestroyOnlineGameComplete, &OnDestroyOnlineGameComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnEndOnlineGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void AUTPlayerController::OnEndOnlineGameComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnEndOnlineGameComplete = NULL;

	if ( ! pFnOnEndOnlineGameComplete )
		pFnOnEndOnlineGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 43778 ];

	AUTPlayerController_execOnEndOnlineGameComplete_Parms OnEndOnlineGameComplete_Parms;
	memcpy ( &OnEndOnlineGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnEndOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnEndOnlineGameComplete, &OnEndOnlineGameComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.CleanupOnlineSubsystemSession
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bWasFromMenu                   ( CPF_Parm )

bool AUTPlayerController::CleanupOnlineSubsystemSession ( unsigned long bWasFromMenu )
{
	static UFunction* pFnCleanupOnlineSubsystemSession = NULL;

	if ( ! pFnCleanupOnlineSubsystemSession )
		pFnCleanupOnlineSubsystemSession = (UFunction*) UObject::GObjObjects()->Data[ 43775 ];

	AUTPlayerController_execCleanupOnlineSubsystemSession_Parms CleanupOnlineSubsystemSession_Parms;
	CleanupOnlineSubsystemSession_Parms.bWasFromMenu = bWasFromMenu;

	this->ProcessEvent ( pFnCleanupOnlineSubsystemSession, &CleanupOnlineSubsystemSession_Parms, NULL );

	return CleanupOnlineSubsystemSession_Parms.ReturnValue;
};

// Function UTGame.UTPlayerController.FinishQuitToMainMenu
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::FinishQuitToMainMenu ( )
{
	static UFunction* pFnFinishQuitToMainMenu = NULL;

	if ( ! pFnFinishQuitToMainMenu )
		pFnFinishQuitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 43772 ];

	AUTPlayerController_execFinishQuitToMainMenu_Parms FinishQuitToMainMenu_Parms;

	this->ProcessEvent ( pFnFinishQuitToMainMenu, &FinishQuitToMainMenu_Parms, NULL );
};

// Function UTGame.UTPlayerController.QuitToMainMenu
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::QuitToMainMenu ( )
{
	static UFunction* pFnQuitToMainMenu = NULL;

	if ( ! pFnQuitToMainMenu )
		pFnQuitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 43769 ];

	AUTPlayerController_execQuitToMainMenu_Parms QuitToMainMenu_Parms;

	this->ProcessEvent ( pFnQuitToMainMenu, &QuitToMainMenu_Parms, NULL );
};

// Function UTGame.UTPlayerController.SetFrontEndErrorMessage
// [0x00022002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::SetFrontEndErrorMessage ( struct FString Title, struct FString Message )
{
	static UFunction* pFnSetFrontEndErrorMessage = NULL;

	if ( ! pFnSetFrontEndErrorMessage )
		pFnSetFrontEndErrorMessage = (UFunction*) UObject::GObjObjects()->Data[ 43765 ];

	AUTPlayerController_execSetFrontEndErrorMessage_Parms SetFrontEndErrorMessage_Parms;
	memcpy ( &SetFrontEndErrorMessage_Parms.Title, &Title, 0xC );
	memcpy ( &SetFrontEndErrorMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSetFrontEndErrorMessage, &SetFrontEndErrorMessage_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientWasKicked
// [0x010201C2] 
// Parameters infos:
// unsigned long                  banned                         ( CPF_Parm )

void AUTPlayerController::ClientWasKicked ( unsigned long banned )
{
	static UFunction* pFnClientWasKicked = NULL;

	if ( ! pFnClientWasKicked )
		pFnClientWasKicked = (UFunction*) UObject::GObjObjects()->Data[ 43763 ];

	AUTPlayerController_execClientWasKicked_Parms ClientWasKicked_Parms;
	ClientWasKicked_Parms.banned = banned;

	this->ProcessEvent ( pFnClientWasKicked, &ClientWasKicked_Parms, NULL );
};

// Function UTGame.UTPlayerController.NotifyNotEnoughSpaceInInvite
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::NotifyNotEnoughSpaceInInvite ( )
{
	static UFunction* pFnNotifyNotEnoughSpaceInInvite = NULL;

	if ( ! pFnNotifyNotEnoughSpaceInInvite )
		pFnNotifyNotEnoughSpaceInInvite = (UFunction*) UObject::GObjObjects()->Data[ 43762 ];

	AUTPlayerController_execNotifyNotEnoughSpaceInInvite_Parms NotifyNotEnoughSpaceInInvite_Parms;

	this->ProcessEvent ( pFnNotifyNotEnoughSpaceInInvite, &NotifyNotEnoughSpaceInInvite_Parms, NULL );
};

// Function UTGame.UTPlayerController.NotifyNotAllPlayersCanJoinInvite
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::NotifyNotAllPlayersCanJoinInvite ( )
{
	static UFunction* pFnNotifyNotAllPlayersCanJoinInvite = NULL;

	if ( ! pFnNotifyNotAllPlayersCanJoinInvite )
		pFnNotifyNotAllPlayersCanJoinInvite = (UFunction*) UObject::GObjObjects()->Data[ 43761 ];

	AUTPlayerController_execNotifyNotAllPlayersCanJoinInvite_Parms NotifyNotAllPlayersCanJoinInvite_Parms;

	this->ProcessEvent ( pFnNotifyNotAllPlayersCanJoinInvite, &NotifyNotAllPlayersCanJoinInvite_Parms, NULL );
};

// Function UTGame.UTPlayerController.NotifyInviteFailed
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::NotifyInviteFailed ( )
{
	static UFunction* pFnNotifyInviteFailed = NULL;

	if ( ! pFnNotifyInviteFailed )
		pFnNotifyInviteFailed = (UFunction*) UObject::GObjObjects()->Data[ 43760 ];

	AUTPlayerController_execNotifyInviteFailed_Parms NotifyInviteFailed_Parms;

	this->ProcessEvent ( pFnNotifyInviteFailed, &NotifyInviteFailed_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnFriendMessageReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            SendingPlayer                  ( CPF_Parm )
// struct FString                 SendingNick                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::OnFriendMessageReceived ( unsigned char LocalUserNum, struct FUniqueNetId SendingPlayer, struct FString SendingNick, struct FString Message )
{
	static UFunction* pFnOnFriendMessageReceived = NULL;

	if ( ! pFnOnFriendMessageReceived )
		pFnOnFriendMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 43755 ];

	AUTPlayerController_execOnFriendMessageReceived_Parms OnFriendMessageReceived_Parms;
	OnFriendMessageReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendMessageReceived_Parms.SendingPlayer, &SendingPlayer, 0x8 );
	memcpy ( &OnFriendMessageReceived_Parms.SendingNick, &SendingNick, 0xC );
	memcpy ( &OnFriendMessageReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendMessageReceived, &OnFriendMessageReceived_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnFriendInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            RequestingPlayer               ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::OnFriendInviteReceived ( unsigned char LocalUserNum, struct FUniqueNetId RequestingPlayer, struct FString RequestingNick, struct FString Message )
{
	static UFunction* pFnOnFriendInviteReceived = NULL;

	if ( ! pFnOnFriendInviteReceived )
		pFnOnFriendInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 43750 ];

	AUTPlayerController_execOnFriendInviteReceived_Parms OnFriendInviteReceived_Parms;
	OnFriendInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendInviteReceived_Parms.RequestingPlayer, &RequestingPlayer, 0x8 );
	memcpy ( &OnFriendInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );
	memcpy ( &OnFriendInviteReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendInviteReceived, &OnFriendInviteReceived_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnGameInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )

void AUTPlayerController::OnGameInviteReceived ( unsigned char LocalUserNum, struct FString RequestingNick )
{
	static UFunction* pFnOnGameInviteReceived = NULL;

	if ( ! pFnOnGameInviteReceived )
		pFnOnGameInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 43747 ];

	AUTPlayerController_execOnGameInviteReceived_Parms OnGameInviteReceived_Parms;
	OnGameInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnGameInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );

	this->ProcessEvent ( pFnOnGameInviteReceived, &OnGameInviteReceived_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnReadProfileSettingsComplete
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void AUTPlayerController::OnReadProfileSettingsComplete ( unsigned char LocalUserNum, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnReadProfileSettingsComplete = NULL;

	if ( ! pFnOnReadProfileSettingsComplete )
		pFnOnReadProfileSettingsComplete = (UFunction*) UObject::GObjObjects()->Data[ 43744 ];

	AUTPlayerController_execOnReadProfileSettingsComplete_Parms OnReadProfileSettingsComplete_Parms;
	OnReadProfileSettingsComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadProfileSettingsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnReadProfileSettingsComplete, &OnReadProfileSettingsComplete_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnLinkStatusChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConnected                     ( CPF_Parm )

void AUTPlayerController::OnLinkStatusChanged ( unsigned long bConnected )
{
	static UFunction* pFnOnLinkStatusChanged = NULL;

	if ( ! pFnOnLinkStatusChanged )
		pFnOnLinkStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 43740 ];

	AUTPlayerController_execOnLinkStatusChanged_Parms OnLinkStatusChanged_Parms;
	OnLinkStatusChanged_Parms.bConnected = bConnected;

	this->ProcessEvent ( pFnOnLinkStatusChanged, &OnLinkStatusChanged_Parms, NULL );
};

// Function UTGame.UTPlayerController.OnConnectionStatusChange
// [0x00020002] 
// Parameters infos:
// unsigned char                  ConnectionStatus               ( CPF_Parm )

void AUTPlayerController::OnConnectionStatusChange ( unsigned char ConnectionStatus )
{
	static UFunction* pFnOnConnectionStatusChange = NULL;

	if ( ! pFnOnConnectionStatusChange )
		pFnOnConnectionStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 43736 ];

	AUTPlayerController_execOnConnectionStatusChange_Parms OnConnectionStatusChange_Parms;
	OnConnectionStatusChange_Parms.ConnectionStatus = ConnectionStatus;

	this->ProcessEvent ( pFnOnConnectionStatusChange, &OnConnectionStatusChange_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClientSetOnlineStatus
// [0x010201C2] 
// Parameters infos:

void AUTPlayerController::ClientSetOnlineStatus ( )
{
	static UFunction* pFnClientSetOnlineStatus = NULL;

	if ( ! pFnClientSetOnlineStatus )
		pFnClientSetOnlineStatus = (UFunction*) UObject::GObjObjects()->Data[ 43727 ];

	AUTPlayerController_execClientSetOnlineStatus_Parms ClientSetOnlineStatus_Parms;

	this->ProcessEvent ( pFnClientSetOnlineStatus, &ClientSetOnlineStatus_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClearOnlineDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventClearOnlineDelegates ( )
{
	static UFunction* pFnClearOnlineDelegates = NULL;

	if ( ! pFnClearOnlineDelegates )
		pFnClearOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 43725 ];

	AUTPlayerController_eventClearOnlineDelegates_Parms ClearOnlineDelegates_Parms;

	this->ProcessEvent ( pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms, NULL );
};

// Function UTGame.UTPlayerController.AddOnlineDelegates
// [0x00020002] 
// Parameters infos:
// unsigned long                  bRegisterVoice                 ( CPF_Parm )

void AUTPlayerController::AddOnlineDelegates ( unsigned long bRegisterVoice )
{
	static UFunction* pFnAddOnlineDelegates = NULL;

	if ( ! pFnAddOnlineDelegates )
		pFnAddOnlineDelegates = (UFunction*) UObject::GObjObjects()->Data[ 43723 ];

	AUTPlayerController_execAddOnlineDelegates_Parms AddOnlineDelegates_Parms;
	AddOnlineDelegates_Parms.bRegisterVoice = bRegisterVoice;

	this->ProcessEvent ( pFnAddOnlineDelegates, &AddOnlineDelegates_Parms, NULL );
};

// Function UTGame.UTPlayerController.UnregisterPlayerDataStores
// [0x00020102] 
// Parameters infos:

void AUTPlayerController::UnregisterPlayerDataStores ( )
{
	static UFunction* pFnUnregisterPlayerDataStores = NULL;

	if ( ! pFnUnregisterPlayerDataStores )
		pFnUnregisterPlayerDataStores = (UFunction*) UObject::GObjObjects()->Data[ 43720 ];

	AUTPlayerController_execUnregisterPlayerDataStores_Parms UnregisterPlayerDataStores_Parms;

	this->ProcessEvent ( pFnUnregisterPlayerDataStores, &UnregisterPlayerDataStores_Parms, NULL );
};

// Function UTGame.UTPlayerController.RegisterCustomPlayerDataStores
// [0x00080102] 
// Parameters infos:

void AUTPlayerController::RegisterCustomPlayerDataStores ( )
{
	static UFunction* pFnRegisterCustomPlayerDataStores = NULL;

	if ( ! pFnRegisterCustomPlayerDataStores )
		pFnRegisterCustomPlayerDataStores = (UFunction*) UObject::GObjObjects()->Data[ 43715 ];

	AUTPlayerController_execRegisterCustomPlayerDataStores_Parms RegisterCustomPlayerDataStores_Parms;

	this->ProcessEvent ( pFnRegisterCustomPlayerDataStores, &RegisterCustomPlayerDataStores_Parms, NULL );
};

// Function UTGame.UTPlayerController.ClearStringAliasBindingMapCache
// [0x00020102] 
// Parameters infos:

void AUTPlayerController::ClearStringAliasBindingMapCache ( )
{
	static UFunction* pFnClearStringAliasBindingMapCache = NULL;

	if ( ! pFnClearStringAliasBindingMapCache )
		pFnClearStringAliasBindingMapCache = (UFunction*) UObject::GObjObjects()->Data[ 43713 ];

	AUTPlayerController_execClearStringAliasBindingMapCache_Parms ClearStringAliasBindingMapCache_Parms;

	this->ProcessEvent ( pFnClearStringAliasBindingMapCache, &ClearStringAliasBindingMapCache_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerSetCharacterClass
// [0x002200C2] 
// Parameters infos:
// class UClass*                  CharClass                      ( CPF_Parm )

void AUTPlayerController::ServerSetCharacterClass ( class UClass* CharClass )
{
	static UFunction* pFnServerSetCharacterClass = NULL;

	if ( ! pFnServerSetCharacterClass )
		pFnServerSetCharacterClass = (UFunction*) UObject::GObjObjects()->Data[ 43703 ];

	AUTPlayerController_execServerSetCharacterClass_Parms ServerSetCharacterClass_Parms;
	ServerSetCharacterClass_Parms.CharClass = CharClass;

	this->ProcessEvent ( pFnServerSetCharacterClass, &ServerSetCharacterClass_Parms, NULL );
};

// Function UTGame.UTPlayerController.PulseTeamColor
// [0x00020002] 
// Parameters infos:

void AUTPlayerController::PulseTeamColor ( )
{
	static UFunction* pFnPulseTeamColor = NULL;

	if ( ! pFnPulseTeamColor )
		pFnPulseTeamColor = (UFunction*) UObject::GObjObjects()->Data[ 43702 ];

	AUTPlayerController_execPulseTeamColor_Parms PulseTeamColor_Parms;

	this->ProcessEvent ( pFnPulseTeamColor, &PulseTeamColor_Parms, NULL );
};

// Function UTGame.UTPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 43700 ];

	AUTPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function UTGame.UTPlayerController.SwitchHud
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTPlayerController::SwitchHud ( )
{
	static UFunction* pFnSwitchHud = NULL;

	if ( ! pFnSwitchHud )
		pFnSwitchHud = (UFunction*) UObject::GObjObjects()->Data[ 43695 ];

	AUTPlayerController_execSwitchHud_Parms SwitchHud_Parms;

	this->ProcessEvent ( pFnSwitchHud, &SwitchHud_Parms, NULL );
};

// Function UTGame.UTPlayerController.ServerThrowWeapon
// [0x002200C2] 
// Parameters infos:

void AUTPlayerController::ServerThrowWeapon ( )
{
	static UFunction* pFnServerThrowWeapon = NULL;

	if ( ! pFnServerThrowWeapon )
		pFnServerThrowWeapon = (UFunction*) UObject::GObjObjects()->Data[ 43694 ];

	AUTPlayerController_execServerThrowWeapon_Parms ServerThrowWeapon_Parms;

	this->ProcessEvent ( pFnServerThrowWeapon, &ServerThrowWeapon_Parms, NULL );
};

// Function UTGame.UTPlayerController.Camera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   NewMode                        ( CPF_Parm )

void AUTPlayerController::Camera ( struct FName NewMode )
{
	static UFunction* pFnCamera = NULL;

	if ( ! pFnCamera )
		pFnCamera = (UFunction*) UObject::GObjObjects()->Data[ 43692 ];

	AUTPlayerController_execCamera_Parms Camera_Parms;
	memcpy ( &Camera_Parms.NewMode, &NewMode, 0x8 );

	this->ProcessEvent ( pFnCamera, &Camera_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.CompleteCloseTimer
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::CompleteCloseTimer ( )
{
	static UFunction* pFnCompleteCloseTimer = NULL;

	if ( ! pFnCompleteCloseTimer )
		pFnCompleteCloseTimer = (UFunction*) UObject::GObjObjects()->Data[ 56711 ];

	AUTGFxHudWrapper_execCompleteCloseTimer_Parms CompleteCloseTimer_Parms;

	this->ProcessEvent ( pFnCompleteCloseTimer, &CompleteCloseTimer_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.CompleteCloseInventory
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::CompleteCloseInventory ( )
{
	static UFunction* pFnCompleteCloseInventory = NULL;

	if ( ! pFnCompleteCloseInventory )
		pFnCompleteCloseInventory = (UFunction*) UObject::GObjObjects()->Data[ 56710 ];

	AUTGFxHudWrapper_execCompleteCloseInventory_Parms CompleteCloseInventory_Parms;

	this->ProcessEvent ( pFnCompleteCloseInventory, &CompleteCloseInventory_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.ToggleInventory
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGFxHudWrapper::ToggleInventory ( )
{
	static UFunction* pFnToggleInventory = NULL;

	if ( ! pFnToggleInventory )
		pFnToggleInventory = (UFunction*) UObject::GObjObjects()->Data[ 56709 ];

	AUTGFxHudWrapper_execToggleInventory_Parms ToggleInventory_Parms;

	this->ProcessEvent ( pFnToggleInventory, &ToggleInventory_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.AddConsoleMessage
// [0x00024002] 
// Parameters infos:
// struct FString                 M                              ( CPF_Parm | CPF_NeedCtorLink )
// class UClass*                  InMessageClass                 ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// float                          Lifetime                       ( CPF_OptionalParm | CPF_Parm )

void AUTGFxHudWrapper::AddConsoleMessage ( struct FString M, class UClass* InMessageClass, class APlayerReplicationInfo* PRI, float Lifetime )
{
	static UFunction* pFnAddConsoleMessage = NULL;

	if ( ! pFnAddConsoleMessage )
		pFnAddConsoleMessage = (UFunction*) UObject::GObjObjects()->Data[ 56704 ];

	AUTGFxHudWrapper_execAddConsoleMessage_Parms AddConsoleMessage_Parms;
	memcpy ( &AddConsoleMessage_Parms.M, &M, 0xC );
	AddConsoleMessage_Parms.InMessageClass = InMessageClass;
	AddConsoleMessage_Parms.PRI = PRI;
	AddConsoleMessage_Parms.Lifetime = Lifetime;

	this->ProcessEvent ( pFnAddConsoleMessage, &AddConsoleMessage_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.LocalizedMessage
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_Parm )
// struct FString                 CriticalString                 ( CPF_Parm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_Parm )
// float                          Position                       ( CPF_Parm )
// float                          Lifetime                       ( CPF_Parm )
// int                            FontSize                       ( CPF_Parm )
// struct FColor                  DrawColor                      ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void AUTGFxHudWrapper::LocalizedMessage ( class UClass* InMessageClass, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, struct FString CriticalString, int Switch, float Position, float Lifetime, int FontSize, struct FColor DrawColor, class UObject* OptionalObject )
{
	static UFunction* pFnLocalizedMessage = NULL;

	if ( ! pFnLocalizedMessage )
		pFnLocalizedMessage = (UFunction*) UObject::GObjObjects()->Data[ 56692 ];

	AUTGFxHudWrapper_execLocalizedMessage_Parms LocalizedMessage_Parms;
	LocalizedMessage_Parms.InMessageClass = InMessageClass;
	LocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	LocalizedMessage_Parms.RelatedPRI01 = RelatedPRI01;
	memcpy ( &LocalizedMessage_Parms.CriticalString, &CriticalString, 0xC );
	LocalizedMessage_Parms.Switch = Switch;
	LocalizedMessage_Parms.Position = Position;
	LocalizedMessage_Parms.Lifetime = Lifetime;
	LocalizedMessage_Parms.FontSize = FontSize;
	memcpy ( &LocalizedMessage_Parms.DrawColor, &DrawColor, 0x4 );
	LocalizedMessage_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnLocalizedMessage, &LocalizedMessage_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.DrawHUD
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTGFxHudWrapper::eventDrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 56686 ];

	AUTGFxHudWrapper_eventDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTGFxHudWrapper::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 56685 ];

	AUTGFxHudWrapper_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.ResolutionChanged
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::ResolutionChanged ( )
{
	static UFunction* pFnResolutionChanged = NULL;

	if ( ! pFnResolutionChanged )
		pFnResolutionChanged = (UFunction*) UObject::GObjObjects()->Data[ 56683 ];

	AUTGFxHudWrapper_execResolutionChanged_Parms ResolutionChanged_Parms;

	this->ProcessEvent ( pFnResolutionChanged, &ResolutionChanged_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.CloseOtherMenus
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::CloseOtherMenus ( )
{
	static UFunction* pFnCloseOtherMenus = NULL;

	if ( ! pFnCloseOtherMenus )
		pFnCloseOtherMenus = (UFunction*) UObject::GObjObjects()->Data[ 56682 ];

	AUTGFxHudWrapper_execCloseOtherMenus_Parms CloseOtherMenus_Parms;

	this->ProcessEvent ( pFnCloseOtherMenus, &CloseOtherMenus_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.DisplayHit
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitDir                         ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTGFxHudWrapper::DisplayHit ( struct FVector HitDir, int Damage, class UClass* DamageType )
{
	static UFunction* pFnDisplayHit = NULL;

	if ( ! pFnDisplayHit )
		pFnDisplayHit = (UFunction*) UObject::GObjObjects()->Data[ 56678 ];

	AUTGFxHudWrapper_execDisplayHit_Parms DisplayHit_Parms;
	memcpy ( &DisplayHit_Parms.HitDir, &HitDir, 0xC );
	DisplayHit_Parms.Damage = Damage;
	DisplayHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDisplayHit, &DisplayHit_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.SetVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewVisible                    ( CPF_Parm )

void AUTGFxHudWrapper::SetVisible ( unsigned long bNewVisible )
{
	static UFunction* pFnSetVisible = NULL;

	if ( ! pFnSetVisible )
		pFnSetVisible = (UFunction*) UObject::GObjObjects()->Data[ 56676 ];

	AUTGFxHudWrapper_execSetVisible_Parms SetVisible_Parms;
	SetVisible_Parms.bNewVisible = bNewVisible;

	this->ProcessEvent ( pFnSetVisible, &SetVisible_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.GetLocalPlayerOwnerIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTGFxHudWrapper::GetLocalPlayerOwnerIndex ( )
{
	static UFunction* pFnGetLocalPlayerOwnerIndex = NULL;

	if ( ! pFnGetLocalPlayerOwnerIndex )
		pFnGetLocalPlayerOwnerIndex = (UFunction*) UObject::GObjObjects()->Data[ 56674 ];

	AUTGFxHudWrapper_execGetLocalPlayerOwnerIndex_Parms GetLocalPlayerOwnerIndex_Parms;

	this->ProcessEvent ( pFnGetLocalPlayerOwnerIndex, &GetLocalPlayerOwnerIndex_Parms, NULL );

	return GetLocalPlayerOwnerIndex_Parms.ReturnValue;
};

// Function UTGame.UTGFxHudWrapper.CreateHUDMovie
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::CreateHUDMovie ( )
{
	static UFunction* pFnCreateHUDMovie = NULL;

	if ( ! pFnCreateHUDMovie )
		pFnCreateHUDMovie = (UFunction*) UObject::GObjObjects()->Data[ 56673 ];

	AUTGFxHudWrapper_execCreateHUDMovie_Parms CreateHUDMovie_Parms;

	this->ProcessEvent ( pFnCreateHUDMovie, &CreateHUDMovie_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTGFxHudWrapper::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56672 ];

	AUTGFxHudWrapper_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.RemoveMovies
// [0x00020002] 
// Parameters infos:

void AUTGFxHudWrapper::RemoveMovies ( )
{
	static UFunction* pFnRemoveMovies = NULL;

	if ( ! pFnRemoveMovies )
		pFnRemoveMovies = (UFunction*) UObject::GObjObjects()->Data[ 56671 ];

	AUTGFxHudWrapper_execRemoveMovies_Parms RemoveMovies_Parms;

	this->ProcessEvent ( pFnRemoveMovies, &RemoveMovies_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.Destroyed
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void AUTGFxHudWrapper::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 56670 ];

	AUTGFxHudWrapper_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.MinimapZoomOut
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGFxHudWrapper::MinimapZoomOut ( )
{
	static UFunction* pFnMinimapZoomOut = NULL;

	if ( ! pFnMinimapZoomOut )
		pFnMinimapZoomOut = (UFunction*) UObject::GObjObjects()->Data[ 56669 ];

	AUTGFxHudWrapper_execMinimapZoomOut_Parms MinimapZoomOut_Parms;

	this->ProcessEvent ( pFnMinimapZoomOut, &MinimapZoomOut_Parms, NULL );
};

// Function UTGame.UTGFxHudWrapper.MinimapZoomIn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGFxHudWrapper::MinimapZoomIn ( )
{
	static UFunction* pFnMinimapZoomIn = NULL;

	if ( ! pFnMinimapZoomIn )
		pFnMinimapZoomIn = (UFunction*) UObject::GObjObjects()->Data[ 56668 ];

	AUTGFxHudWrapper_execMinimapZoomIn_Parms MinimapZoomIn_Parms;

	this->ProcessEvent ( pFnMinimapZoomIn, &MinimapZoomIn_Parms, NULL );
};

// Function UTGame.UTHUDBase.DrawShadowedRotatedTile
// [0x00824102] 
// Parameters infos:
// class UTexture2D*              Tex                            ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          XL                             ( CPF_Parm )
// float                          YL                             ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// struct FColor                  TileColor                      ( CPF_Parm )
// unsigned long                  bScaleToRes                    ( CPF_OptionalParm | CPF_Parm )

void AUTHUDBase::DrawShadowedRotatedTile ( class UTexture2D* Tex, struct FRotator Rot, float X, float Y, float XL, float YL, float U, float V, float UL, float VL, struct FColor TileColor, unsigned long bScaleToRes )
{
	static UFunction* pFnDrawShadowedRotatedTile = NULL;

	if ( ! pFnDrawShadowedRotatedTile )
		pFnDrawShadowedRotatedTile = (UFunction*) UObject::GObjObjects()->Data[ 54119 ];

	AUTHUDBase_execDrawShadowedRotatedTile_Parms DrawShadowedRotatedTile_Parms;
	DrawShadowedRotatedTile_Parms.Tex = Tex;
	memcpy ( &DrawShadowedRotatedTile_Parms.Rot, &Rot, 0xC );
	DrawShadowedRotatedTile_Parms.X = X;
	DrawShadowedRotatedTile_Parms.Y = Y;
	DrawShadowedRotatedTile_Parms.XL = XL;
	DrawShadowedRotatedTile_Parms.YL = YL;
	DrawShadowedRotatedTile_Parms.U = U;
	DrawShadowedRotatedTile_Parms.V = V;
	DrawShadowedRotatedTile_Parms.UL = UL;
	DrawShadowedRotatedTile_Parms.VL = VL;
	memcpy ( &DrawShadowedRotatedTile_Parms.TileColor, &TileColor, 0x4 );
	DrawShadowedRotatedTile_Parms.bScaleToRes = bScaleToRes;

	this->ProcessEvent ( pFnDrawShadowedRotatedTile, &DrawShadowedRotatedTile_Parms, NULL );
};

// Function UTGame.UTHUDBase.DrawShadowedStretchedTile
// [0x00824102] 
// Parameters infos:
// class UTexture2D*              Tex                            ( CPF_Parm )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          XL                             ( CPF_Parm )
// float                          YL                             ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// struct FColor                  TileColor                      ( CPF_Parm )
// unsigned long                  bScaleToRes                    ( CPF_OptionalParm | CPF_Parm )

void AUTHUDBase::DrawShadowedStretchedTile ( class UTexture2D* Tex, float X, float Y, float XL, float YL, float U, float V, float UL, float VL, struct FColor TileColor, unsigned long bScaleToRes )
{
	static UFunction* pFnDrawShadowedStretchedTile = NULL;

	if ( ! pFnDrawShadowedStretchedTile )
		pFnDrawShadowedStretchedTile = (UFunction*) UObject::GObjObjects()->Data[ 54105 ];

	AUTHUDBase_execDrawShadowedStretchedTile_Parms DrawShadowedStretchedTile_Parms;
	DrawShadowedStretchedTile_Parms.Tex = Tex;
	DrawShadowedStretchedTile_Parms.X = X;
	DrawShadowedStretchedTile_Parms.Y = Y;
	DrawShadowedStretchedTile_Parms.XL = XL;
	DrawShadowedStretchedTile_Parms.YL = YL;
	DrawShadowedStretchedTile_Parms.U = U;
	DrawShadowedStretchedTile_Parms.V = V;
	DrawShadowedStretchedTile_Parms.UL = UL;
	DrawShadowedStretchedTile_Parms.VL = VL;
	memcpy ( &DrawShadowedStretchedTile_Parms.TileColor, &TileColor, 0x4 );
	DrawShadowedStretchedTile_Parms.bScaleToRes = bScaleToRes;

	this->ProcessEvent ( pFnDrawShadowedStretchedTile, &DrawShadowedStretchedTile_Parms, NULL );
};

// Function UTGame.UTHUDBase.DrawShadowedTile
// [0x00824102] 
// Parameters infos:
// class UTexture2D*              Tex                            ( CPF_Parm )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          XL                             ( CPF_Parm )
// float                          YL                             ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// struct FColor                  TileColor                      ( CPF_Parm )
// unsigned long                  bScaleToRes                    ( CPF_OptionalParm | CPF_Parm )

void AUTHUDBase::DrawShadowedTile ( class UTexture2D* Tex, float X, float Y, float XL, float YL, float U, float V, float UL, float VL, struct FColor TileColor, unsigned long bScaleToRes )
{
	static UFunction* pFnDrawShadowedTile = NULL;

	if ( ! pFnDrawShadowedTile )
		pFnDrawShadowedTile = (UFunction*) UObject::GObjObjects()->Data[ 54092 ];

	AUTHUDBase_execDrawShadowedTile_Parms DrawShadowedTile_Parms;
	DrawShadowedTile_Parms.Tex = Tex;
	DrawShadowedTile_Parms.X = X;
	DrawShadowedTile_Parms.Y = Y;
	DrawShadowedTile_Parms.XL = XL;
	DrawShadowedTile_Parms.YL = YL;
	DrawShadowedTile_Parms.U = U;
	DrawShadowedTile_Parms.V = V;
	DrawShadowedTile_Parms.UL = UL;
	DrawShadowedTile_Parms.VL = VL;
	memcpy ( &DrawShadowedTile_Parms.TileColor, &TileColor, 0x4 );
	DrawShadowedTile_Parms.bScaleToRes = bScaleToRes;

	this->ProcessEvent ( pFnDrawShadowedTile, &DrawShadowedTile_Parms, NULL );
};

// Function UTGame.UTHUDBase.CheckCrosshairOnFriendly
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTHUDBase::CheckCrosshairOnFriendly ( )
{
	static UFunction* pFnCheckCrosshairOnFriendly = NULL;

	if ( ! pFnCheckCrosshairOnFriendly )
		pFnCheckCrosshairOnFriendly = (UFunction*) UObject::GObjObjects()->Data[ 54079 ];

	AUTHUDBase_execCheckCrosshairOnFriendly_Parms CheckCrosshairOnFriendly_Parms;

	this->ProcessEvent ( pFnCheckCrosshairOnFriendly, &CheckCrosshairOnFriendly_Parms, NULL );

	return CheckCrosshairOnFriendly_Parms.ReturnValue;
};

// Function UTGame.UTHUDBase.DrawToolTip
// [0x00024002] 
// Parameters infos:
// class UCanvas*                 Cvs                            ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// float                          ResScale                       ( CPF_Parm )
// class UTexture2D*              IconTexture                    ( CPF_OptionalParm | CPF_Parm )
// float                          Alpha                          ( CPF_OptionalParm | CPF_Parm )

void AUTHUDBase::DrawToolTip ( class UCanvas* Cvs, class APlayerController* PC, struct FString Command, float X, float Y, float U, float V, float UL, float VL, float ResScale, class UTexture2D* IconTexture, float Alpha )
{
	static UFunction* pFnDrawToolTip = NULL;

	if ( ! pFnDrawToolTip )
		pFnDrawToolTip = (UFunction*) UObject::GObjObjects()->Data[ 54056 ];

	AUTHUDBase_execDrawToolTip_Parms DrawToolTip_Parms;
	DrawToolTip_Parms.Cvs = Cvs;
	DrawToolTip_Parms.PC = PC;
	memcpy ( &DrawToolTip_Parms.Command, &Command, 0xC );
	DrawToolTip_Parms.X = X;
	DrawToolTip_Parms.Y = Y;
	DrawToolTip_Parms.U = U;
	DrawToolTip_Parms.V = V;
	DrawToolTip_Parms.UL = UL;
	DrawToolTip_Parms.VL = VL;
	DrawToolTip_Parms.ResScale = ResScale;
	DrawToolTip_Parms.IconTexture = IconTexture;
	DrawToolTip_Parms.Alpha = Alpha;

	this->ProcessEvent ( pFnDrawToolTip, &DrawToolTip_Parms, NULL );
};

// Function UTGame.UTHUDBase.SetShowLeaderboard
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnableLeaderboard             ( CPF_Parm )

void AUTHUDBase::SetShowLeaderboard ( unsigned long bEnableLeaderboard )
{
	static UFunction* pFnSetShowLeaderboard = NULL;

	if ( ! pFnSetShowLeaderboard )
		pFnSetShowLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 54054 ];

	AUTHUDBase_execSetShowLeaderboard_Parms SetShowLeaderboard_Parms;
	SetShowLeaderboard_Parms.bEnableLeaderboard = bEnableLeaderboard;

	this->ProcessEvent ( pFnSetShowLeaderboard, &SetShowLeaderboard_Parms, NULL );
};

// Function UTGame.UTHUDBase.ToggleLeaderboard
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUDBase::ToggleLeaderboard ( )
{
	static UFunction* pFnToggleLeaderboard = NULL;

	if ( ! pFnToggleLeaderboard )
		pFnToggleLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 54053 ];

	AUTHUDBase_execToggleLeaderboard_Parms ToggleLeaderboard_Parms;

	this->ProcessEvent ( pFnToggleLeaderboard, &ToggleLeaderboard_Parms, NULL );
};

// Function UTGame.UTHUDBase.SetShowScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnableShowScores              ( CPF_Parm )

void AUTHUDBase::SetShowScores ( unsigned long bEnableShowScores )
{
	static UFunction* pFnSetShowScores = NULL;

	if ( ! pFnSetShowScores )
		pFnSetShowScores = (UFunction*) UObject::GObjObjects()->Data[ 54051 ];

	AUTHUDBase_execSetShowScores_Parms SetShowScores_Parms;
	SetShowScores_Parms.bEnableShowScores = bEnableShowScores;

	this->ProcessEvent ( pFnSetShowScores, &SetShowScores_Parms, NULL );
};

// Function UTGame.UTHUDBase.GetLocalPlayerOwnerIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTHUDBase::GetLocalPlayerOwnerIndex ( )
{
	static UFunction* pFnGetLocalPlayerOwnerIndex = NULL;

	if ( ! pFnGetLocalPlayerOwnerIndex )
		pFnGetLocalPlayerOwnerIndex = (UFunction*) UObject::GObjObjects()->Data[ 54049 ];

	AUTHUDBase_execGetLocalPlayerOwnerIndex_Parms GetLocalPlayerOwnerIndex_Parms;

	this->ProcessEvent ( pFnGetLocalPlayerOwnerIndex, &GetLocalPlayerOwnerIndex_Parms, NULL );

	return GetLocalPlayerOwnerIndex_Parms.ReturnValue;
};

// Function UTGame.UTHUDBase.ReleaseShowScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUDBase::ReleaseShowScores ( )
{
	static UFunction* pFnReleaseShowScores = NULL;

	if ( ! pFnReleaseShowScores )
		pFnReleaseShowScores = (UFunction*) UObject::GObjObjects()->Data[ 54048 ];

	AUTHUDBase_execReleaseShowScores_Parms ReleaseShowScores_Parms;

	this->ProcessEvent ( pFnReleaseShowScores, &ReleaseShowScores_Parms, NULL );
};

// Function UTGame.UTHUDBase.CompletePauseMenuClose
// [0x00020002] 
// Parameters infos:

void AUTHUDBase::CompletePauseMenuClose ( )
{
	static UFunction* pFnCompletePauseMenuClose = NULL;

	if ( ! pFnCompletePauseMenuClose )
		pFnCompletePauseMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 54047 ];

	AUTHUDBase_execCompletePauseMenuClose_Parms CompletePauseMenuClose_Parms;

	this->ProcessEvent ( pFnCompletePauseMenuClose, &CompletePauseMenuClose_Parms, NULL );
};

// Function UTGame.UTHUDBase.TogglePauseMenu
// [0x00020002] 
// Parameters infos:

void AUTHUDBase::TogglePauseMenu ( )
{
	static UFunction* pFnTogglePauseMenu = NULL;

	if ( ! pFnTogglePauseMenu )
		pFnTogglePauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 54045 ];

	AUTHUDBase_execTogglePauseMenu_Parms TogglePauseMenu_Parms;

	this->ProcessEvent ( pFnTogglePauseMenu, &TogglePauseMenu_Parms, NULL );
};

// Function UTGame.UTHUDBase.CloseOtherMenus
// [0x00020000] 
// Parameters infos:

void AUTHUDBase::CloseOtherMenus ( )
{
	static UFunction* pFnCloseOtherMenus = NULL;

	if ( ! pFnCloseOtherMenus )
		pFnCloseOtherMenus = (UFunction*) UObject::GObjObjects()->Data[ 54044 ];

	AUTHUDBase_execCloseOtherMenus_Parms CloseOtherMenus_Parms;

	this->ProcessEvent ( pFnCloseOtherMenus, &CloseOtherMenus_Parms, NULL );
};

// Function UTGame.UTHUDBase.SetVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewVisible                    ( CPF_Parm )

void AUTHUDBase::SetVisible ( unsigned long bNewVisible )
{
	static UFunction* pFnSetVisible = NULL;

	if ( ! pFnSetVisible )
		pFnSetVisible = (UFunction*) UObject::GObjObjects()->Data[ 54042 ];

	AUTHUDBase_execSetVisible_Parms SetVisible_Parms;
	SetVisible_Parms.bNewVisible = bNewVisible;

	this->ProcessEvent ( pFnSetVisible, &SetVisible_Parms, NULL );
};

// Function UTGame.UTHUDBase.RemoveMovies
// [0x00020002] 
// Parameters infos:

void AUTHUDBase::RemoveMovies ( )
{
	static UFunction* pFnRemoveMovies = NULL;

	if ( ! pFnRemoveMovies )
		pFnRemoveMovies = (UFunction*) UObject::GObjObjects()->Data[ 54041 ];

	AUTHUDBase_execRemoveMovies_Parms RemoveMovies_Parms;

	this->ProcessEvent ( pFnRemoveMovies, &RemoveMovies_Parms, NULL );
};

// Function UTGame.UTHUDBase.OnOpenAnimComplete
// [0x00020000] 
// Parameters infos:

void AUTHUDBase::OnOpenAnimComplete ( )
{
	static UFunction* pFnOnOpenAnimComplete = NULL;

	if ( ! pFnOnOpenAnimComplete )
		pFnOnOpenAnimComplete = (UFunction*) UObject::GObjObjects()->Data[ 54040 ];

	AUTHUDBase_execOnOpenAnimComplete_Parms OnOpenAnimComplete_Parms;

	this->ProcessEvent ( pFnOnOpenAnimComplete, &OnOpenAnimComplete_Parms, NULL );
};

// Function UTGame.UTHUDBase.OnCloseAnimComplete
// [0x00020002] 
// Parameters infos:

void AUTHUDBase::OnCloseAnimComplete ( )
{
	static UFunction* pFnOnCloseAnimComplete = NULL;

	if ( ! pFnOnCloseAnimComplete )
		pFnOnCloseAnimComplete = (UFunction*) UObject::GObjObjects()->Data[ 54039 ];

	AUTHUDBase_execOnCloseAnimComplete_Parms OnCloseAnimComplete_Parms;

	this->ProcessEvent ( pFnOnCloseAnimComplete, &OnCloseAnimComplete_Parms, NULL );
};

// Function UTGame.UTHUDBase.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTHUDBase::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 54038 ];

	AUTHUDBase_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function UTGame.UTHUDBase.ResolutionChanged
// [0x00020002] 
// Parameters infos:

void AUTHUDBase::ResolutionChanged ( )
{
	static UFunction* pFnResolutionChanged = NULL;

	if ( ! pFnResolutionChanged )
		pFnResolutionChanged = (UFunction*) UObject::GObjObjects()->Data[ 54034 ];

	AUTHUDBase_execResolutionChanged_Parms ResolutionChanged_Parms;

	this->ProcessEvent ( pFnResolutionChanged, &ResolutionChanged_Parms, NULL );
};

// Function UTGame.UTHUDBase.ShowMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUDBase::ShowMenu ( )
{
	static UFunction* pFnShowMenu = NULL;

	if ( ! pFnShowMenu )
		pFnShowMenu = (UFunction*) UObject::GObjObjects()->Data[ 54033 ];

	AUTHUDBase_execShowMenu_Parms ShowMenu_Parms;

	this->ProcessEvent ( pFnShowMenu, &ShowMenu_Parms, NULL );
};

// Function UTGame.UTHUDBase.Timer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTHUDBase::eventTimer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 54032 ];

	AUTHUDBase_eventTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTHUDBase.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTHUDBase::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54029 ];

	AUTHUDBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTGFxTeamHUDWrapper.Timer
// [0x00020102] 
// Parameters infos:

void AUTGFxTeamHUDWrapper::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 56724 ];

	AUTGFxTeamHUDWrapper_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.UpdatePowerupAchievements
// [0x00020002] 
// Parameters infos:
// struct FName                   StatName                       ( CPF_Parm )
// int                            Time                           ( CPF_Parm )

void AUTPlayerReplicationInfo::UpdatePowerupAchievements ( struct FName StatName, int Time )
{
	static UFunction* pFnUpdatePowerupAchievements = NULL;

	if ( ! pFnUpdatePowerupAchievements )
		pFnUpdatePowerupAchievements = (UFunction*) UObject::GObjObjects()->Data[ 57887 ];

	AUTPlayerReplicationInfo_execUpdatePowerupAchievements_Parms UpdatePowerupAchievements_Parms;
	memcpy ( &UpdatePowerupAchievements_Parms.StatName, &StatName, 0x8 );
	UpdatePowerupAchievements_Parms.Time = Time;

	this->ProcessEvent ( pFnUpdatePowerupAchievements, &UpdatePowerupAchievements_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.AttemptMidGameMenu
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerReplicationInfo::AttemptMidGameMenu ( )
{
	static UFunction* pFnAttemptMidGameMenu = NULL;

	if ( ! pFnAttemptMidGameMenu )
		pFnAttemptMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 57883 ];

	AUTPlayerReplicationInfo_execAttemptMidGameMenu_Parms AttemptMidGameMenu_Parms;

	this->ProcessEvent ( pFnAttemptMidGameMenu, &AttemptMidGameMenu_Parms, NULL );

	return AttemptMidGameMenu_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.ShowMidGameMenu
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bInitial                       ( CPF_Parm )

void AUTPlayerReplicationInfo::ShowMidGameMenu ( unsigned long bInitial )
{
	static UFunction* pFnShowMidGameMenu = NULL;

	if ( ! pFnShowMidGameMenu )
		pFnShowMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 57881 ];

	AUTPlayerReplicationInfo_execShowMidGameMenu_Parms ShowMidGameMenu_Parms;
	ShowMidGameMenu_Parms.bInitial = bInitial;

	this->ProcessEvent ( pFnShowMidGameMenu, &ShowMidGameMenu_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTPlayerReplicationInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 57878 ];

	AUTPlayerReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.ServerTeleportToActor
// [0x002200C2] 
// Parameters infos:
// class AActor*                  DestinationActor               ( CPF_Parm )

void AUTPlayerReplicationInfo::ServerTeleportToActor ( class AActor* DestinationActor )
{
	static UFunction* pFnServerTeleportToActor = NULL;

	if ( ! pFnServerTeleportToActor )
		pFnServerTeleportToActor = (UFunction*) UObject::GObjObjects()->Data[ 57875 ];

	AUTPlayerReplicationInfo_execServerTeleportToActor_Parms ServerTeleportToActor_Parms;
	ServerTeleportToActor_Parms.DestinationActor = DestinationActor;

	this->ProcessEvent ( pFnServerTeleportToActor, &ServerTeleportToActor_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.AllowClientToTeleport
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DestinationActor               ( CPF_Parm )
// class AUTPawn*                 OwnerPawn                      ( CPF_Parm | CPF_OutParm )

bool AUTPlayerReplicationInfo::AllowClientToTeleport ( class AActor* DestinationActor, class AUTPawn** OwnerPawn )
{
	static UFunction* pFnAllowClientToTeleport = NULL;

	if ( ! pFnAllowClientToTeleport )
		pFnAllowClientToTeleport = (UFunction*) UObject::GObjObjects()->Data[ 57870 ];

	AUTPlayerReplicationInfo_execAllowClientToTeleport_Parms AllowClientToTeleport_Parms;
	AllowClientToTeleport_Parms.DestinationActor = DestinationActor;

	this->ProcessEvent ( pFnAllowClientToTeleport, &AllowClientToTeleport_Parms, NULL );

	if ( OwnerPawn )
		*OwnerPawn = AllowClientToTeleport_Parms.OwnerPawn;

	return AllowClientToTeleport_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.SeamlessTravelTo
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  NewPRI                         ( CPF_Parm )

void AUTPlayerReplicationInfo::SeamlessTravelTo ( class APlayerReplicationInfo* NewPRI )
{
	static UFunction* pFnSeamlessTravelTo = NULL;

	if ( ! pFnSeamlessTravelTo )
		pFnSeamlessTravelTo = (UFunction*) UObject::GObjObjects()->Data[ 57867 ];

	AUTPlayerReplicationInfo_execSeamlessTravelTo_Parms SeamlessTravelTo_Parms;
	SeamlessTravelTo_Parms.NewPRI = NewPRI;

	this->ProcessEvent ( pFnSeamlessTravelTo, &SeamlessTravelTo_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.CopyProperties
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void AUTPlayerReplicationInfo::CopyProperties ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnCopyProperties = NULL;

	if ( ! pFnCopyProperties )
		pFnCopyProperties = (UFunction*) UObject::GObjObjects()->Data[ 57864 ];

	AUTPlayerReplicationInfo_execCopyProperties_Parms CopyProperties_Parms;
	CopyProperties_Parms.PRI = PRI;

	this->ProcessEvent ( pFnCopyProperties, &CopyProperties_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.OverrideWith
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void AUTPlayerReplicationInfo::OverrideWith ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnOverrideWith = NULL;

	if ( ! pFnOverrideWith )
		pFnOverrideWith = (UFunction*) UObject::GObjObjects()->Data[ 57861 ];

	AUTPlayerReplicationInfo_execOverrideWith_Parms OverrideWith_Parms;
	OverrideWith_Parms.PRI = PRI;

	this->ProcessEvent ( pFnOverrideWith, &OverrideWith_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.GetCallSign
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTPlayerReplicationInfo::GetCallSign ( )
{
	static UFunction* pFnGetCallSign = NULL;

	if ( ! pFnGetCallSign )
		pFnGetCallSign = (UFunction*) UObject::GObjObjects()->Data[ 53924 ];

	AUTPlayerReplicationInfo_execGetCallSign_Parms GetCallSign_Parms;

	this->ProcessEvent ( pFnGetCallSign, &GetCallSign_Parms, NULL );

	return GetCallSign_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.Reset
// [0x00020002] 
// Parameters infos:

void AUTPlayerReplicationInfo::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 57860 ];

	AUTPlayerReplicationInfo_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.IncrementKills
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnemyKill                     ( CPF_Parm )

void AUTPlayerReplicationInfo::IncrementKills ( unsigned long bEnemyKill )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 57858 ];

	AUTPlayerReplicationInfo_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.bEnemyKill = bEnemyKill;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.GetFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTCarriedObject* AUTPlayerReplicationInfo::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = (UFunction*) UObject::GObjObjects()->Data[ 47955 ];

	AUTPlayerReplicationInfo_execGetFlag_Parms GetFlag_Parms;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	return GetFlag_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.SetFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        NewFlag                        ( CPF_Parm )

void AUTPlayerReplicationInfo::SetFlag ( class AUTCarriedObject* NewFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = (UFunction*) UObject::GObjObjects()->Data[ 57856 ];

	AUTPlayerReplicationInfo_execSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.StopPowerupTimeStat
// [0x00020002] 
// Parameters infos:
// struct FName                   NewStatName                    ( CPF_Parm )

void AUTPlayerReplicationInfo::StopPowerupTimeStat ( struct FName NewStatName )
{
	static UFunction* pFnStopPowerupTimeStat = NULL;

	if ( ! pFnStopPowerupTimeStat )
		pFnStopPowerupTimeStat = (UFunction*) UObject::GObjObjects()->Data[ 57851 ];

	AUTPlayerReplicationInfo_execStopPowerupTimeStat_Parms StopPowerupTimeStat_Parms;
	memcpy ( &StopPowerupTimeStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnStopPowerupTimeStat, &StopPowerupTimeStat_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.StartPowerupTimeStat
// [0x00820002] 
// Parameters infos:
// struct FName                   NewStatName                    ( CPF_Parm )

void AUTPlayerReplicationInfo::StartPowerupTimeStat ( struct FName NewStatName )
{
	static UFunction* pFnStartPowerupTimeStat = NULL;

	if ( ! pFnStartPowerupTimeStat )
		pFnStartPowerupTimeStat = (UFunction*) UObject::GObjObjects()->Data[ 57846 ];

	AUTPlayerReplicationInfo_execStartPowerupTimeStat_Parms StartPowerupTimeStat_Parms;
	memcpy ( &StartPowerupTimeStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnStartPowerupTimeStat, &StartPowerupTimeStat_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.IncrementPickupStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementPickupStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementPickupStat = NULL;

	if ( ! pFnIncrementPickupStat )
		pFnIncrementPickupStat = (UFunction*) UObject::GObjObjects()->Data[ 48929 ];

	AUTPlayerReplicationInfo_execIncrementPickupStat_Parms IncrementPickupStat_Parms;
	memcpy ( &IncrementPickupStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementPickupStat, &IncrementPickupStat_Parms, NULL );

	return IncrementPickupStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.IncrementVehicleKillStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementVehicleKillStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementVehicleKillStat = NULL;

	if ( ! pFnIncrementVehicleKillStat )
		pFnIncrementVehicleKillStat = (UFunction*) UObject::GObjObjects()->Data[ 53213 ];

	AUTPlayerReplicationInfo_execIncrementVehicleKillStat_Parms IncrementVehicleKillStat_Parms;
	memcpy ( &IncrementVehicleKillStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementVehicleKillStat, &IncrementVehicleKillStat_Parms, NULL );

	return IncrementVehicleKillStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.StopDrivingStat
// [0x00020002] 
// Parameters infos:
// struct FName                   NewStatName                    ( CPF_Parm )

void AUTPlayerReplicationInfo::StopDrivingStat ( struct FName NewStatName )
{
	static UFunction* pFnStopDrivingStat = NULL;

	if ( ! pFnStopDrivingStat )
		pFnStopDrivingStat = (UFunction*) UObject::GObjObjects()->Data[ 57834 ];

	AUTPlayerReplicationInfo_execStopDrivingStat_Parms StopDrivingStat_Parms;
	memcpy ( &StopDrivingStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnStopDrivingStat, &StopDrivingStat_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.StartDrivingStat
// [0x00820002] 
// Parameters infos:
// struct FName                   NewStatName                    ( CPF_Parm )

void AUTPlayerReplicationInfo::StartDrivingStat ( struct FName NewStatName )
{
	static UFunction* pFnStartDrivingStat = NULL;

	if ( ! pFnStartDrivingStat )
		pFnStartDrivingStat = (UFunction*) UObject::GObjObjects()->Data[ 57829 ];

	AUTPlayerReplicationInfo_execStartDrivingStat_Parms StartDrivingStat_Parms;
	memcpy ( &StartDrivingStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnStartDrivingStat, &StartDrivingStat_Parms, NULL );
};

// Function UTGame.UTPlayerReplicationInfo.IncrementEventStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementEventStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementEventStat = NULL;

	if ( ! pFnIncrementEventStat )
		pFnIncrementEventStat = (UFunction*) UObject::GObjObjects()->Data[ 44500 ];

	AUTPlayerReplicationInfo_execIncrementEventStat_Parms IncrementEventStat_Parms;
	memcpy ( &IncrementEventStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementEventStat, &IncrementEventStat_Parms, NULL );

	return IncrementEventStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.IncrementSuicideStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementSuicideStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementSuicideStat = NULL;

	if ( ! pFnIncrementSuicideStat )
		pFnIncrementSuicideStat = (UFunction*) UObject::GObjObjects()->Data[ 53216 ];

	AUTPlayerReplicationInfo_execIncrementSuicideStat_Parms IncrementSuicideStat_Parms;
	memcpy ( &IncrementSuicideStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementSuicideStat, &IncrementSuicideStat_Parms, NULL );

	return IncrementSuicideStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.IncrementDeathStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementDeathStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementDeathStat = NULL;

	if ( ! pFnIncrementDeathStat )
		pFnIncrementDeathStat = (UFunction*) UObject::GObjObjects()->Data[ 53220 ];

	AUTPlayerReplicationInfo_execIncrementDeathStat_Parms IncrementDeathStat_Parms;
	memcpy ( &IncrementDeathStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementDeathStat, &IncrementDeathStat_Parms, NULL );

	return IncrementDeathStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.IncrementKillStat
// [0x00820002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int AUTPlayerReplicationInfo::IncrementKillStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementKillStat = NULL;

	if ( ! pFnIncrementKillStat )
		pFnIncrementKillStat = (UFunction*) UObject::GObjObjects()->Data[ 53218 ];

	AUTPlayerReplicationInfo_execIncrementKillStat_Parms IncrementKillStat_Parms;
	memcpy ( &IncrementKillStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementKillStat, &IncrementKillStat_Parms, NULL );

	return IncrementKillStat_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.ShouldBroadCastWelcomeMessage
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bExiting                       ( CPF_OptionalParm | CPF_Parm )

bool AUTPlayerReplicationInfo::ShouldBroadCastWelcomeMessage ( unsigned long bExiting )
{
	static UFunction* pFnShouldBroadCastWelcomeMessage = NULL;

	if ( ! pFnShouldBroadCastWelcomeMessage )
		pFnShouldBroadCastWelcomeMessage = (UFunction*) UObject::GObjObjects()->Data[ 57810 ];

	AUTPlayerReplicationInfo_execShouldBroadCastWelcomeMessage_Parms ShouldBroadCastWelcomeMessage_Parms;
	ShouldBroadCastWelcomeMessage_Parms.bExiting = bExiting;

	this->ProcessEvent ( pFnShouldBroadCastWelcomeMessage, &ShouldBroadCastWelcomeMessage_Parms, NULL );

	return ShouldBroadCastWelcomeMessage_Parms.ReturnValue;
};

// Function UTGame.UTPlayerReplicationInfo.IsLocalPlayerPRI
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTPlayerReplicationInfo::IsLocalPlayerPRI ( )
{
	static UFunction* pFnIsLocalPlayerPRI = NULL;

	if ( ! pFnIsLocalPlayerPRI )
		pFnIsLocalPlayerPRI = (UFunction*) UObject::GObjObjects()->Data[ 46892 ];

	AUTPlayerReplicationInfo_execIsLocalPlayerPRI_Parms IsLocalPlayerPRI_Parms;

	this->ProcessEvent ( pFnIsLocalPlayerPRI, &IsLocalPlayerPRI_Parms, NULL );

	return IsLocalPlayerPRI_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTTeamInfo::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 55859 ];

	AUTTeamInfo_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTTeamInfo.GetBotInfo
// [0x00020002] 
// Parameters infos:
// struct FCharacterInfo          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 BotName                        ( CPF_Parm | CPF_NeedCtorLink )

struct FCharacterInfo AUTTeamInfo::GetBotInfo ( struct FString BotName )
{
	static UFunction* pFnGetBotInfo = NULL;

	if ( ! pFnGetBotInfo )
		pFnGetBotInfo = (UFunction*) UObject::GObjObjects()->Data[ 53356 ];

	AUTTeamInfo_execGetBotInfo_Parms GetBotInfo_Parms;
	memcpy ( &GetBotInfo_Parms.BotName, &BotName, 0xC );

	this->ProcessEvent ( pFnGetBotInfo, &GetBotInfo_Parms, NULL );

	return GetBotInfo_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.GetAvailableBotList
// [0x00424002] 
// Parameters infos:
// struct FString                 FactionFilter                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bMalesOnly                     ( CPF_OptionalParm | CPF_Parm )
// TArray< int >                  AvailableBots                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamInfo::GetAvailableBotList ( struct FString FactionFilter, unsigned long bMalesOnly, TArray< int >* AvailableBots )
{
	static UFunction* pFnGetAvailableBotList = NULL;

	if ( ! pFnGetAvailableBotList )
		pFnGetAvailableBotList = (UFunction*) UObject::GObjObjects()->Data[ 55848 ];

	AUTTeamInfo_execGetAvailableBotList_Parms GetAvailableBotList_Parms;
	memcpy ( &GetAvailableBotList_Parms.FactionFilter, &FactionFilter, 0xC );
	GetAvailableBotList_Parms.bMalesOnly = bMalesOnly;

	this->ProcessEvent ( pFnGetAvailableBotList, &GetAvailableBotList_Parms, NULL );

	if ( AvailableBots )
		memcpy ( AvailableBots, &GetAvailableBotList_Parms.AvailableBots, 0xC );
};

// Function UTGame.UTTeamInfo.BotNameTaken
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_Parm | CPF_NeedCtorLink )

bool AUTTeamInfo::BotNameTaken ( struct FString BotName )
{
	static UFunction* pFnBotNameTaken = NULL;

	if ( ! pFnBotNameTaken )
		pFnBotNameTaken = (UFunction*) UObject::GObjObjects()->Data[ 55842 ];

	AUTTeamInfo_execBotNameTaken_Parms BotNameTaken_Parms;
	memcpy ( &BotNameTaken_Parms.BotName, &BotName, 0xC );

	this->ProcessEvent ( pFnBotNameTaken, &BotNameTaken_Parms, NULL );

	return BotNameTaken_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.RemoveFromTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )

void AUTTeamInfo::RemoveFromTeam ( class AController* Other )
{
	static UFunction* pFnRemoveFromTeam = NULL;

	if ( ! pFnRemoveFromTeam )
		pFnRemoveFromTeam = (UFunction*) UObject::GObjObjects()->Data[ 55840 ];

	AUTTeamInfo_execRemoveFromTeam_Parms RemoveFromTeam_Parms;
	RemoveFromTeam_Parms.Other = Other;

	this->ProcessEvent ( pFnRemoveFromTeam, &RemoveFromTeam_Parms, NULL );
};

// Function UTGame.UTTeamInfo.SetBotOrders
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  NewBot                         ( CPF_Parm )

void AUTTeamInfo::SetBotOrders ( class AUTBot* NewBot )
{
	static UFunction* pFnSetBotOrders = NULL;

	if ( ! pFnSetBotOrders )
		pFnSetBotOrders = (UFunction*) UObject::GObjObjects()->Data[ 55838 ];

	AUTTeamInfo_execSetBotOrders_Parms SetBotOrders_Parms;
	SetBotOrders_Parms.NewBot = NewBot;

	this->ProcessEvent ( pFnSetBotOrders, &SetBotOrders_Parms, NULL );
};

// Function UTGame.UTTeamInfo.NeedsBotMoreThan
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTTeamInfo*             T                              ( CPF_Parm )

bool AUTTeamInfo::NeedsBotMoreThan ( class AUTTeamInfo* T )
{
	static UFunction* pFnNeedsBotMoreThan = NULL;

	if ( ! pFnNeedsBotMoreThan )
		pFnNeedsBotMoreThan = (UFunction*) UObject::GObjObjects()->Data[ 55835 ];

	AUTTeamInfo_execNeedsBotMoreThan_Parms NeedsBotMoreThan_Parms;
	NeedsBotMoreThan_Parms.T = T;

	this->ProcessEvent ( pFnNeedsBotMoreThan, &NeedsBotMoreThan_Parms, NULL );

	return NeedsBotMoreThan_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.Initialize
// [0x00020002] 
// Parameters infos:
// int                            NewTeamIndex                   ( CPF_Parm )

void AUTTeamInfo::Initialize ( int NewTeamIndex )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 55833 ];

	AUTTeamInfo_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.NewTeamIndex = NewTeamIndex;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function UTGame.UTTeamInfo.AllBotsSpawned
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTTeamInfo::AllBotsSpawned ( )
{
	static UFunction* pFnAllBotsSpawned = NULL;

	if ( ! pFnAllBotsSpawned )
		pFnAllBotsSpawned = (UFunction*) UObject::GObjObjects()->Data[ 53745 ];

	AUTTeamInfo_execAllBotsSpawned_Parms AllBotsSpawned_Parms;

	this->ProcessEvent ( pFnAllBotsSpawned, &AllBotsSpawned_Parms, NULL );

	return AllBotsSpawned_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.Reset
// [0x00020002] 
// Parameters infos:

void AUTTeamInfo::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 55832 ];

	AUTTeamInfo_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTTeamInfo.GetHUDColor
// [0x00020102] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FColor AUTTeamInfo::GetHUDColor ( )
{
	static UFunction* pFnGetHUDColor = NULL;

	if ( ! pFnGetHUDColor )
		pFnGetHUDColor = (UFunction*) UObject::GObjObjects()->Data[ 54442 ];

	AUTTeamInfo_execGetHUDColor_Parms GetHUDColor_Parms;

	this->ProcessEvent ( pFnGetHUDColor, &GetHUDColor_Parms, NULL );

	return GetHUDColor_Parms.ReturnValue;
};

// Function UTGame.UTTeamInfo.GetHumanReadableName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTTeamInfo::GetHumanReadableName ( )
{
	static UFunction* pFnGetHumanReadableName = NULL;

	if ( ! pFnGetHumanReadableName )
		pFnGetHumanReadableName = (UFunction*) UObject::GObjObjects()->Data[ 55830 ];

	AUTTeamInfo_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

	this->ProcessEvent ( pFnGetHumanReadableName, &GetHumanReadableName_Parms, NULL );

	return GetHumanReadableName_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetEmoteIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   EmoteTag                       ( CPF_Parm )

int UUTFamilyInfo::GetEmoteIndex ( struct FName EmoteTag )
{
	static UFunction* pFnGetEmoteIndex = NULL;

	if ( ! pFnGetEmoteIndex )
		pFnGetEmoteIndex = (UFunction*) UObject::GObjObjects()->Data[ 49117 ];

	UUTFamilyInfo_execGetEmoteIndex_Parms GetEmoteIndex_Parms;
	memcpy ( &GetEmoteIndex_Parms.EmoteTag, &EmoteTag, 0x8 );

	this->ProcessEvent ( pFnGetEmoteIndex, &GetEmoteIndex_Parms, NULL );

	return GetEmoteIndex_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetEmotes
// [0x00422002] 
// Parameters infos:
// struct FName                   Category                       ( CPF_Parm )
// TArray< struct FString >       Captions                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< struct FName >         EmoteTags                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTFamilyInfo::GetEmotes ( struct FName Category, TArray< struct FString >* Captions, TArray< struct FName >* EmoteTags )
{
	static UFunction* pFnGetEmotes = NULL;

	if ( ! pFnGetEmotes )
		pFnGetEmotes = (UFunction*) UObject::GObjObjects()->Data[ 56245 ];

	UUTFamilyInfo_execGetEmotes_Parms GetEmotes_Parms;
	memcpy ( &GetEmotes_Parms.Category, &Category, 0x8 );

	this->ProcessEvent ( pFnGetEmotes, &GetEmotes_Parms, NULL );

	if ( Captions )
		memcpy ( Captions, &GetEmotes_Parms.Captions, 0xC );

	if ( EmoteTags )
		memcpy ( EmoteTags, &GetEmotes_Parms.EmoteTags, 0xC );
};

// Function UTGame.UTFamilyInfo.GetVoiceClass
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* UUTFamilyInfo::GetVoiceClass ( )
{
	static UFunction* pFnGetVoiceClass = NULL;

	if ( ! pFnGetVoiceClass )
		pFnGetVoiceClass = (UFunction*) UObject::GObjObjects()->Data[ 49027 ];

	UUTFamilyInfo_execGetVoiceClass_Parms GetVoiceClass_Parms;

	this->ProcessEvent ( pFnGetVoiceClass, &GetVoiceClass_Parms, NULL );

	return GetVoiceClass_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetEmoteGroupCnt
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Category                       ( CPF_Parm )

int UUTFamilyInfo::GetEmoteGroupCnt ( struct FName Category )
{
	static UFunction* pFnGetEmoteGroupCnt = NULL;

	if ( ! pFnGetEmoteGroupCnt )
		pFnGetEmoteGroupCnt = (UFunction*) UObject::GObjObjects()->Data[ 56240 ];

	UUTFamilyInfo_execGetEmoteGroupCnt_Parms GetEmoteGroupCnt_Parms;
	memcpy ( &GetEmoteGroupCnt_Parms.Category, &Category, 0x8 );

	this->ProcessEvent ( pFnGetEmoteGroupCnt, &GetEmoteGroupCnt_Parms, NULL );

	return GetEmoteGroupCnt_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetCharPortrait
// [0x00022002] 
// Parameters infos:
// class UTexture*                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamNum                        ( CPF_Parm )

class UTexture* UUTFamilyInfo::GetCharPortrait ( int TeamNum )
{
	static UFunction* pFnGetCharPortrait = NULL;

	if ( ! pFnGetCharPortrait )
		pFnGetCharPortrait = (UFunction*) UObject::GObjObjects()->Data[ 49030 ];

	UUTFamilyInfo_execGetCharPortrait_Parms GetCharPortrait_Parms;
	GetCharPortrait_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetCharPortrait, &GetCharPortrait_Parms, NULL );

	return GetCharPortrait_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetTeamMaterials
// [0x00422002] 
// Parameters infos:
// int                            TeamNum                        ( CPF_Parm )
// class UMaterialInterface*      TeamMaterialHead               ( CPF_Parm | CPF_OutParm )
// class UMaterialInterface*      TeamMaterialBody               ( CPF_Parm | CPF_OutParm )

void UUTFamilyInfo::GetTeamMaterials ( int TeamNum, class UMaterialInterface** TeamMaterialHead, class UMaterialInterface** TeamMaterialBody )
{
	static UFunction* pFnGetTeamMaterials = NULL;

	if ( ! pFnGetTeamMaterials )
		pFnGetTeamMaterials = (UFunction*) UObject::GObjObjects()->Data[ 56235 ];

	UUTFamilyInfo_execGetTeamMaterials_Parms GetTeamMaterials_Parms;
	GetTeamMaterials_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetTeamMaterials, &GetTeamMaterials_Parms, NULL );

	if ( TeamMaterialHead )
		*TeamMaterialHead = GetTeamMaterials_Parms.TeamMaterialHead;

	if ( TeamMaterialBody )
		*TeamMaterialBody = GetTeamMaterials_Parms.TeamMaterialBody;
};

// Function UTGame.UTFamilyInfo.GetFirstPersonArmsMaterial
// [0x00022002] 
// Parameters infos:
// class UMaterialInterface*      ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamNum                        ( CPF_Parm )

class UMaterialInterface* UUTFamilyInfo::GetFirstPersonArmsMaterial ( int TeamNum )
{
	static UFunction* pFnGetFirstPersonArmsMaterial = NULL;

	if ( ! pFnGetFirstPersonArmsMaterial )
		pFnGetFirstPersonArmsMaterial = (UFunction*) UObject::GObjObjects()->Data[ 49007 ];

	UUTFamilyInfo_execGetFirstPersonArmsMaterial_Parms GetFirstPersonArmsMaterial_Parms;
	GetFirstPersonArmsMaterial_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetFirstPersonArmsMaterial, &GetFirstPersonArmsMaterial_Parms, NULL );

	return GetFirstPersonArmsMaterial_Parms.ReturnValue;
};

// Function UTGame.UTFamilyInfo.GetFirstPersonArms
// [0x00022002] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* UUTFamilyInfo::GetFirstPersonArms ( )
{
	static UFunction* pFnGetFirstPersonArms = NULL;

	if ( ! pFnGetFirstPersonArms )
		pFnGetFirstPersonArms = (UFunction*) UObject::GObjObjects()->Data[ 49022 ];

	UUTFamilyInfo_execGetFirstPersonArms_Parms GetFirstPersonArms_Parms;

	this->ProcessEvent ( pFnGetFirstPersonArms, &GetFirstPersonArms_Parms, NULL );

	return GetFirstPersonArms_Parms.ReturnValue;
};

// Function UTGame.UTGame.WriteOnlineStats
// [0x00020002] 
// Parameters infos:

void AUTGame::WriteOnlineStats ( )
{
	static UFunction* pFnWriteOnlineStats = NULL;

	if ( ! pFnWriteOnlineStats )
		pFnWriteOnlineStats = (UFunction*) UObject::GObjObjects()->Data[ 53673 ];

	AUTGame_execWriteOnlineStats_Parms WriteOnlineStats_Parms;

	this->ProcessEvent ( pFnWriteOnlineStats, &WriteOnlineStats_Parms, NULL );
};

// Function UTGame.UTGame.UpdateGameSettings
// [0x00020002] 
// Parameters infos:

void AUTGame::UpdateGameSettings ( )
{
	static UFunction* pFnUpdateGameSettings = NULL;

	if ( ! pFnUpdateGameSettings )
		pFnUpdateGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 53669 ];

	AUTGame_execUpdateGameSettings_Parms UpdateGameSettings_Parms;

	this->ProcessEvent ( pFnUpdateGameSettings, &UpdateGameSettings_Parms, NULL );
};

// Function UTGame.UTGame.AllowCheats
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       P                              ( CPF_Parm )

bool AUTGame::AllowCheats ( class APlayerController* P )
{
	static UFunction* pFnAllowCheats = NULL;

	if ( ! pFnAllowCheats )
		pFnAllowCheats = (UFunction*) UObject::GObjObjects()->Data[ 53666 ];

	AUTGame_execAllowCheats_Parms AllowCheats_Parms;
	AllowCheats_Parms.P = P;

	this->ProcessEvent ( pFnAllowCheats, &AllowCheats_Parms, NULL );

	return AllowCheats_Parms.ReturnValue;
};

// Function UTGame.UTGame.GetLocationFor
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// class AActor*                  LocationObject                 ( CPF_Parm | CPF_OutParm )
// int                            MessageIndex                   ( CPF_Parm | CPF_OutParm )

bool AUTGame::GetLocationFor ( class APawn* StatusPawn, int LocationSpeechOffset, class AActor** LocationObject, int* MessageIndex )
{
	static UFunction* pFnGetLocationFor = NULL;

	if ( ! pFnGetLocationFor )
		pFnGetLocationFor = (UFunction*) UObject::GObjObjects()->Data[ 53654 ];

	AUTGame_execGetLocationFor_Parms GetLocationFor_Parms;
	GetLocationFor_Parms.StatusPawn = StatusPawn;
	GetLocationFor_Parms.LocationSpeechOffset = LocationSpeechOffset;

	this->ProcessEvent ( pFnGetLocationFor, &GetLocationFor_Parms, NULL );

	if ( LocationObject )
		*LocationObject = GetLocationFor_Parms.LocationObject;

	if ( MessageIndex )
		*MessageIndex = GetLocationFor_Parms.MessageIndex;

	return GetLocationFor_Parms.ReturnValue;
};

// Function UTGame.UTGame.GetEndOfMatchRules
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            InGoalScore                    ( CPF_Parm )
// int                            InTimeLimit                    ( CPF_Parm )

struct FString AUTGame::GetEndOfMatchRules ( int InGoalScore, int InTimeLimit )
{
	static UFunction* pFnGetEndOfMatchRules = NULL;

	if ( ! pFnGetEndOfMatchRules )
		pFnGetEndOfMatchRules = (UFunction*) UObject::GObjObjects()->Data[ 53649 ];

	AUTGame_execGetEndOfMatchRules_Parms GetEndOfMatchRules_Parms;
	GetEndOfMatchRules_Parms.InGoalScore = InGoalScore;
	GetEndOfMatchRules_Parms.InTimeLimit = InTimeLimit;

	this->ProcessEvent ( pFnGetEndOfMatchRules, &GetEndOfMatchRules_Parms, NULL );

	return GetEndOfMatchRules_Parms.ReturnValue;
};

// Function UTGame.UTGame.ContinueSeamlessTravel
// [0x00020002] 
// Parameters infos:

void AUTGame::ContinueSeamlessTravel ( )
{
	static UFunction* pFnContinueSeamlessTravel = NULL;

	if ( ! pFnContinueSeamlessTravel )
		pFnContinueSeamlessTravel = (UFunction*) UObject::GObjObjects()->Data[ 53648 ];

	AUTGame_execContinueSeamlessTravel_Parms ContinueSeamlessTravel_Parms;

	this->ProcessEvent ( pFnContinueSeamlessTravel, &ContinueSeamlessTravel_Parms, NULL );
};

// Function UTGame.UTGame.ProcessServerTravel
// [0x00024002] 
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bAbsolute                      ( CPF_OptionalParm | CPF_Parm )

void AUTGame::ProcessServerTravel ( struct FString URL, unsigned long bAbsolute )
{
	static UFunction* pFnProcessServerTravel = NULL;

	if ( ! pFnProcessServerTravel )
		pFnProcessServerTravel = (UFunction*) UObject::GObjObjects()->Data[ 53644 ];

	AUTGame_execProcessServerTravel_Parms ProcessServerTravel_Parms;
	memcpy ( &ProcessServerTravel_Parms.URL, &URL, 0xC );
	ProcessServerTravel_Parms.bAbsolute = bAbsolute;

	this->ProcessEvent ( pFnProcessServerTravel, &ProcessServerTravel_Parms, NULL );
};

// Function UTGame.UTGame.GetNextMap
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTGame::GetNextMap ( )
{
	static UFunction* pFnGetNextMap = NULL;

	if ( ! pFnGetNextMap )
		pFnGetNextMap = (UFunction*) UObject::GObjObjects()->Data[ 53639 ];

	AUTGame_execGetNextMap_Parms GetNextMap_Parms;

	this->ProcessEvent ( pFnGetNextMap, &GetNextMap_Parms, NULL );

	return GetNextMap_Parms.ReturnValue;
};

// Function UTGame.UTGame.GetCurrentMapCycleIndex
// [0x00420002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FString >       MapList                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int AUTGame::GetCurrentMapCycleIndex ( TArray< struct FString >* MapList )
{
	static UFunction* pFnGetCurrentMapCycleIndex = NULL;

	if ( ! pFnGetCurrentMapCycleIndex )
		pFnGetCurrentMapCycleIndex = (UFunction*) UObject::GObjObjects()->Data[ 53635 ];

	AUTGame_execGetCurrentMapCycleIndex_Parms GetCurrentMapCycleIndex_Parms;

	this->ProcessEvent ( pFnGetCurrentMapCycleIndex, &GetCurrentMapCycleIndex_Parms, NULL );

	if ( MapList )
		memcpy ( MapList, &GetCurrentMapCycleIndex_Parms.MapList, 0xC );

	return GetCurrentMapCycleIndex_Parms.ReturnValue;
};

// Function UTGame.UTGame.WriteOnlinePlayerScores
// [0x00820002] 
// Parameters infos:

void AUTGame::WriteOnlinePlayerScores ( )
{
	static UFunction* pFnWriteOnlinePlayerScores = NULL;

	if ( ! pFnWriteOnlinePlayerScores )
		pFnWriteOnlinePlayerScores = (UFunction*) UObject::GObjObjects()->Data[ 53628 ];

	AUTGame_execWriteOnlinePlayerScores_Parms WriteOnlinePlayerScores_Parms;

	this->ProcessEvent ( pFnWriteOnlinePlayerScores, &WriteOnlinePlayerScores_Parms, NULL );
};

// Function UTGame.UTGame.ProcessSpeechRecognition
// [0x00420002] 
// Parameters infos:
// class AUTPlayerController*     Speaker                        ( CPF_Parm )
// TArray< struct FSpeechRecognizedWord > Words                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTGame::ProcessSpeechRecognition ( class AUTPlayerController* Speaker, TArray< struct FSpeechRecognizedWord >* Words )
{
	static UFunction* pFnProcessSpeechRecognition = NULL;

	if ( ! pFnProcessSpeechRecognition )
		pFnProcessSpeechRecognition = (UFunction*) UObject::GObjObjects()->Data[ 53623 ];

	AUTGame_execProcessSpeechRecognition_Parms ProcessSpeechRecognition_Parms;
	ProcessSpeechRecognition_Parms.Speaker = Speaker;

	this->ProcessEvent ( pFnProcessSpeechRecognition, &ProcessSpeechRecognition_Parms, NULL );

	if ( Words )
		memcpy ( Words, &ProcessSpeechRecognition_Parms.Words, 0xC );
};

// Function UTGame.UTGame.GetBaseUTMutator
// [0x00020002] 
// Parameters infos:
// class AUTMutator*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTMutator* AUTGame::GetBaseUTMutator ( )
{
	static UFunction* pFnGetBaseUTMutator = NULL;

	if ( ! pFnGetBaseUTMutator )
		pFnGetBaseUTMutator = (UFunction*) UObject::GObjObjects()->Data[ 53619 ];

	AUTGame_execGetBaseUTMutator_Parms GetBaseUTMutator_Parms;

	this->ProcessEvent ( pFnGetBaseUTMutator, &GetBaseUTMutator_Parms, NULL );

	return GetBaseUTMutator_Parms.ReturnValue;
};

// Function UTGame.UTGame.GetAutoObjectiveFor
// [0x00020000] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )

class AActor* AUTGame::GetAutoObjectiveFor ( class AUTPlayerController* PC )
{
	static UFunction* pFnGetAutoObjectiveFor = NULL;

	if ( ! pFnGetAutoObjectiveFor )
		pFnGetAutoObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 43958 ];

	AUTGame_execGetAutoObjectiveFor_Parms GetAutoObjectiveFor_Parms;
	GetAutoObjectiveFor_Parms.PC = PC;

	this->ProcessEvent ( pFnGetAutoObjectiveFor, &GetAutoObjectiveFor_Parms, NULL );

	return GetAutoObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTGame.HandleSeamlessTravelPlayer
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void AUTGame::eventHandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

	if ( ! pFnHandleSeamlessTravelPlayer )
		pFnHandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53612 ];

	AUTGame_eventHandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;

	this->ProcessEvent ( pFnHandleSeamlessTravelPlayer, &HandleSeamlessTravelPlayer_Parms, NULL );

	if ( C )
		*C = HandleSeamlessTravelPlayer_Parms.C;
};

// Function UTGame.UTGame.PostSeamlessTravel
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTGame::eventPostSeamlessTravel ( )
{
	static UFunction* pFnPostSeamlessTravel = NULL;

	if ( ! pFnPostSeamlessTravel )
		pFnPostSeamlessTravel = (UFunction*) UObject::GObjObjects()->Data[ 53609 ];

	AUTGame_eventPostSeamlessTravel_Parms PostSeamlessTravel_Parms;

	this->ProcessEvent ( pFnPostSeamlessTravel, &PostSeamlessTravel_Parms, NULL );
};

// Function UTGame.UTGame.GetSeamlessTravelActorList
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bToEntry                       ( CPF_Parm )
// TArray< class AActor* >        ActorList                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTGame::eventGetSeamlessTravelActorList ( unsigned long bToEntry, TArray< class AActor* >* ActorList )
{
	static UFunction* pFnGetSeamlessTravelActorList = NULL;

	if ( ! pFnGetSeamlessTravelActorList )
		pFnGetSeamlessTravelActorList = (UFunction*) UObject::GObjObjects()->Data[ 53604 ];

	AUTGame_eventGetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;

	this->ProcessEvent ( pFnGetSeamlessTravelActorList, &GetSeamlessTravelActorList_Parms, NULL );

	if ( ActorList )
		memcpy ( ActorList, &GetSeamlessTravelActorList_Parms.ActorList, 0xC );
};

// Function UTGame.UTGame.ShowPathTo
// [0x00020000] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void AUTGame::ShowPathTo ( class APlayerController* P, int TeamNum )
{
	static UFunction* pFnShowPathTo = NULL;

	if ( ! pFnShowPathTo )
		pFnShowPathTo = (UFunction*) UObject::GObjObjects()->Data[ 53601 ];

	AUTGame_execShowPathTo_Parms ShowPathTo_Parms;
	ShowPathTo_Parms.P = P;
	ShowPathTo_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnShowPathTo, &ShowPathTo_Parms, NULL );
};

// Function UTGame.UTGame.AllowClientToTeleport
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* ClientPRI                      ( CPF_Parm )
// class AActor*                  DestinationActor               ( CPF_Parm )

bool AUTGame::AllowClientToTeleport ( class AUTPlayerReplicationInfo* ClientPRI, class AActor* DestinationActor )
{
	static UFunction* pFnAllowClientToTeleport = NULL;

	if ( ! pFnAllowClientToTeleport )
		pFnAllowClientToTeleport = (UFunction*) UObject::GObjObjects()->Data[ 53597 ];

	AUTGame_execAllowClientToTeleport_Parms AllowClientToTeleport_Parms;
	AllowClientToTeleport_Parms.ClientPRI = ClientPRI;
	AllowClientToTeleport_Parms.DestinationActor = DestinationActor;

	this->ProcessEvent ( pFnAllowClientToTeleport, &AllowClientToTeleport_Parms, NULL );

	return AllowClientToTeleport_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddMutator
// [0x00024002] 
// Parameters infos:
// struct FString                 mutname                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUserAdded                     ( CPF_OptionalParm | CPF_Parm )

void AUTGame::AddMutator ( struct FString mutname, unsigned long bUserAdded )
{
	static UFunction* pFnAddMutator = NULL;

	if ( ! pFnAddMutator )
		pFnAddMutator = (UFunction*) UObject::GObjObjects()->Data[ 53594 ];

	AUTGame_execAddMutator_Parms AddMutator_Parms;
	memcpy ( &AddMutator_Parms.mutname, &mutname, 0xC );
	AddMutator_Parms.bUserAdded = bUserAdded;

	this->ProcessEvent ( pFnAddMutator, &AddMutator_Parms, NULL );
};

// Function UTGame.UTGame.ViewObjective
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTGame::ViewObjective ( class APlayerController* PC )
{
	static UFunction* pFnViewObjective = NULL;

	if ( ! pFnViewObjective )
		pFnViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 53588 ];

	AUTGame_execViewObjective_Parms ViewObjective_Parms;
	ViewObjective_Parms.PC = PC;

	this->ProcessEvent ( pFnViewObjective, &ViewObjective_Parms, NULL );
};

// Function UTGame.UTGame.ActivateVehicleFactory
// [0x00020002] 
// Parameters infos:
// class AUTVehicleFactory*       VF                             ( CPF_Parm )

void AUTGame::ActivateVehicleFactory ( class AUTVehicleFactory* VF )
{
	static UFunction* pFnActivateVehicleFactory = NULL;

	if ( ! pFnActivateVehicleFactory )
		pFnActivateVehicleFactory = (UFunction*) UObject::GObjObjects()->Data[ 53581 ];

	AUTGame_execActivateVehicleFactory_Parms ActivateVehicleFactory_Parms;
	ActivateVehicleFactory_Parms.VF = VF;

	this->ProcessEvent ( pFnActivateVehicleFactory, &ActivateVehicleFactory_Parms, NULL );
};

// Function UTGame.UTGame.RegisterVehicle
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void AUTGame::RegisterVehicle ( class AUTVehicle* V )
{
	static UFunction* pFnRegisterVehicle = NULL;

	if ( ! pFnRegisterVehicle )
		pFnRegisterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53579 ];

	AUTGame_execRegisterVehicle_Parms RegisterVehicle_Parms;
	RegisterVehicle_Parms.V = V;

	this->ProcessEvent ( pFnRegisterVehicle, &RegisterVehicle_Parms, NULL );
};

// Function UTGame.UTGame.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool AUTGame::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 53574 ];

	AUTGame_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function UTGame.UTGame.CheckMaxLives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool AUTGame::CheckMaxLives ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckMaxLives = NULL;

	if ( ! pFnCheckMaxLives )
		pFnCheckMaxLives = (UFunction*) UObject::GObjObjects()->Data[ 53568 ];

	AUTGame_execCheckMaxLives_Parms CheckMaxLives_Parms;
	CheckMaxLives_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckMaxLives, &CheckMaxLives_Parms, NULL );

	return CheckMaxLives_Parms.ReturnValue;
};

// Function UTGame.UTGame.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float AUTGame::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 53559 ];

	AUTGame_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function UTGame.UTGame.ChoosePlayerStart
// [0x00024002] 
// Parameters infos:
// class APlayerStart*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )

class APlayerStart* AUTGame::ChoosePlayerStart ( class AController* Player, unsigned char InTeam )
{
	static UFunction* pFnChoosePlayerStart = NULL;

	if ( ! pFnChoosePlayerStart )
		pFnChoosePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 53546 ];

	AUTGame_execChoosePlayerStart_Parms ChoosePlayerStart_Parms;
	ChoosePlayerStart_Parms.Player = Player;
	ChoosePlayerStart_Parms.InTeam = InTeam;

	this->ProcessEvent ( pFnChoosePlayerStart, &ChoosePlayerStart_Parms, NULL );

	return ChoosePlayerStart_Parms.ReturnValue;
};

// Function UTGame.UTGame.IsConsoleDedicatedServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::IsConsoleDedicatedServer ( )
{
	static UFunction* pFnIsConsoleDedicatedServer = NULL;

	if ( ! pFnIsConsoleDedicatedServer )
		pFnIsConsoleDedicatedServer = (UFunction*) UObject::GObjObjects()->Data[ 53460 ];

	AUTGame_execIsConsoleDedicatedServer_Parms IsConsoleDedicatedServer_Parms;

	this->ProcessEvent ( pFnIsConsoleDedicatedServer, &IsConsoleDedicatedServer_Parms, NULL );

	return IsConsoleDedicatedServer_Parms.ReturnValue;
};

// Function UTGame.UTGame.CalculatedNetSpeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTGame::CalculatedNetSpeed ( )
{
	static UFunction* pFnCalculatedNetSpeed = NULL;

	if ( ! pFnCalculatedNetSpeed )
		pFnCalculatedNetSpeed = (UFunction*) UObject::GObjObjects()->Data[ 53457 ];

	AUTGame_execCalculatedNetSpeed_Parms CalculatedNetSpeed_Parms;

	this->ProcessEvent ( pFnCalculatedNetSpeed, &CalculatedNetSpeed_Parms, NULL );

	return CalculatedNetSpeed_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddInitialBots
// [0x00020002] 
// Parameters infos:

void AUTGame::AddInitialBots ( )
{
	static UFunction* pFnAddInitialBots = NULL;

	if ( ! pFnAddInitialBots )
		pFnAddInitialBots = (UFunction*) UObject::GObjObjects()->Data[ 53455 ];

	AUTGame_execAddInitialBots_Parms AddInitialBots_Parms;

	this->ProcessEvent ( pFnAddInitialBots, &AddInitialBots_Parms, NULL );
};

// Function UTGame.UTGame.MatchIsInProgress
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::MatchIsInProgress ( )
{
	static UFunction* pFnMatchIsInProgress = NULL;

	if ( ! pFnMatchIsInProgress )
		pFnMatchIsInProgress = (UFunction*) UObject::GObjObjects()->Data[ 53453 ];

	AUTGame_execMatchIsInProgress_Parms MatchIsInProgress_Parms;

	this->ProcessEvent ( pFnMatchIsInProgress, &MatchIsInProgress_Parms, NULL );

	return MatchIsInProgress_Parms.ReturnValue;
};

// Function UTGame.UTGame.EndRound
// [0x00020002] 
// Parameters infos:
// class AActor*                  EndRoundFocus                  ( CPF_Parm )

void AUTGame::EndRound ( class AActor* EndRoundFocus )
{
	static UFunction* pFnEndRound = NULL;

	if ( ! pFnEndRound )
		pFnEndRound = (UFunction*) UObject::GObjObjects()->Data[ 53450 ];

	AUTGame_execEndRound_Parms EndRound_Parms;
	EndRound_Parms.EndRoundFocus = EndRoundFocus;

	this->ProcessEvent ( pFnEndRound, &EndRound_Parms, NULL );
};

// Function UTGame.UTGame.JustStarted
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          MaxElapsedTime                 ( CPF_Parm )

bool AUTGame::JustStarted ( float MaxElapsedTime )
{
	static UFunction* pFnJustStarted = NULL;

	if ( ! pFnJustStarted )
		pFnJustStarted = (UFunction*) UObject::GObjObjects()->Data[ 47994 ];

	AUTGame_execJustStarted_Parms JustStarted_Parms;
	JustStarted_Parms.MaxElapsedTime = MaxElapsedTime;

	this->ProcessEvent ( pFnJustStarted, &JustStarted_Parms, NULL );

	return JustStarted_Parms.ReturnValue;
};

// Function UTGame.UTGame.PlayStartupMessage
// [0x00020002] 
// Parameters infos:

void AUTGame::PlayStartupMessage ( )
{
	static UFunction* pFnPlayStartupMessage = NULL;

	if ( ! pFnPlayStartupMessage )
		pFnPlayStartupMessage = (UFunction*) UObject::GObjObjects()->Data[ 53447 ];

	AUTGame_execPlayStartupMessage_Parms PlayStartupMessage_Parms;

	this->ProcessEvent ( pFnPlayStartupMessage, &PlayStartupMessage_Parms, NULL );
};

// Function UTGame.UTGame.PlayRegularEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void AUTGame::PlayRegularEndOfMatchMessage ( )
{
	static UFunction* pFnPlayRegularEndOfMatchMessage = NULL;

	if ( ! pFnPlayRegularEndOfMatchMessage )
		pFnPlayRegularEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 53445 ];

	AUTGame_execPlayRegularEndOfMatchMessage_Parms PlayRegularEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayRegularEndOfMatchMessage, &PlayRegularEndOfMatchMessage_Parms, NULL );
};

// Function UTGame.UTGame.PlayEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void AUTGame::PlayEndOfMatchMessage ( )
{
	static UFunction* pFnPlayEndOfMatchMessage = NULL;

	if ( ! pFnPlayEndOfMatchMessage )
		pFnPlayEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 53443 ];

	AUTGame_execPlayEndOfMatchMessage_Parms PlayEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayEndOfMatchMessage, &PlayEndOfMatchMessage_Parms, NULL );
};

// Function UTGame.UTGame.IsAWinner
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       C                              ( CPF_Parm )

bool AUTGame::IsAWinner ( class APlayerController* C )
{
	static UFunction* pFnIsAWinner = NULL;

	if ( ! pFnIsAWinner )
		pFnIsAWinner = (UFunction*) UObject::GObjObjects()->Data[ 53440 ];

	AUTGame_execIsAWinner_Parms IsAWinner_Parms;
	IsAWinner_Parms.C = C;

	this->ProcessEvent ( pFnIsAWinner, &IsAWinner_Parms, NULL );

	return IsAWinner_Parms.ReturnValue;
};

// Function UTGame.UTGame.DominatingVictory
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::DominatingVictory ( )
{
	static UFunction* pFnDominatingVictory = NULL;

	if ( ! pFnDominatingVictory )
		pFnDominatingVictory = (UFunction*) UObject::GObjObjects()->Data[ 53438 ];

	AUTGame_execDominatingVictory_Parms DominatingVictory_Parms;

	this->ProcessEvent ( pFnDominatingVictory, &DominatingVictory_Parms, NULL );

	return DominatingVictory_Parms.ReturnValue;
};

// Function UTGame.UTGame.FindPlayerStart
// [0x00024002] 
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )
// struct FString                 IncomingName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class ANavigationPoint* AUTGame::FindPlayerStart ( class AController* Player, unsigned char InTeam, struct FString IncomingName )
{
	static UFunction* pFnFindPlayerStart = NULL;

	if ( ! pFnFindPlayerStart )
		pFnFindPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 53432 ];

	AUTGame_execFindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy ( &FindPlayerStart_Parms.IncomingName, &IncomingName, 0xC );

	this->ProcessEvent ( pFnFindPlayerStart, &FindPlayerStart_Parms, NULL );

	return FindPlayerStart_Parms.ReturnValue;
};

// Function UTGame.UTGame.EndLogging
// [0x00020002] 
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void AUTGame::EndLogging ( struct FString Reason )
{
	static UFunction* pFnEndLogging = NULL;

	if ( ! pFnEndLogging )
		pFnEndLogging = (UFunction*) UObject::GObjObjects()->Data[ 53430 ];

	AUTGame_execEndLogging_Parms EndLogging_Parms;
	memcpy ( &EndLogging_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndLogging, &EndLogging_Parms, NULL );
};

// Function UTGame.UTGame.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void AUTGame::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 53422 ];

	AUTGame_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function UTGame.UTGame.StartMatch
// [0x00020002] 
// Parameters infos:

void AUTGame::StartMatch ( )
{
	static UFunction* pFnStartMatch = NULL;

	if ( ! pFnStartMatch )
		pFnStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 53419 ];

	AUTGame_execStartMatch_Parms StartMatch_Parms;

	this->ProcessEvent ( pFnStartMatch, &StartMatch_Parms, NULL );
};

// Function UTGame.UTGame.ResetAllPlayerMuteListsToSpectatorChannel
// [0x00020002] 
// Parameters infos:

void AUTGame::ResetAllPlayerMuteListsToSpectatorChannel ( )
{
	static UFunction* pFnResetAllPlayerMuteListsToSpectatorChannel = NULL;

	if ( ! pFnResetAllPlayerMuteListsToSpectatorChannel )
		pFnResetAllPlayerMuteListsToSpectatorChannel = (UFunction*) UObject::GObjObjects()->Data[ 53417 ];

	AUTGame_execResetAllPlayerMuteListsToSpectatorChannel_Parms ResetAllPlayerMuteListsToSpectatorChannel_Parms;

	this->ProcessEvent ( pFnResetAllPlayerMuteListsToSpectatorChannel, &ResetAllPlayerMuteListsToSpectatorChannel_Parms, NULL );
};

// Function UTGame.UTGame.RemovePlayerFromMuteLists
// [0x00020002] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void AUTGame::RemovePlayerFromMuteLists ( class AUTPlayerController* PC )
{
	static UFunction* pFnRemovePlayerFromMuteLists = NULL;

	if ( ! pFnRemovePlayerFromMuteLists )
		pFnRemovePlayerFromMuteLists = (UFunction*) UObject::GObjObjects()->Data[ 53414 ];

	AUTGame_execRemovePlayerFromMuteLists_Parms RemovePlayerFromMuteLists_Parms;
	RemovePlayerFromMuteLists_Parms.PC = PC;

	this->ProcessEvent ( pFnRemovePlayerFromMuteLists, &RemovePlayerFromMuteLists_Parms, NULL );
};

// Function UTGame.UTGame.SetupPlayerMuteList
// [0x00820002] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )
// unsigned long                  bForceSpectatorChannel         ( CPF_Parm )

void AUTGame::SetupPlayerMuteList ( class AUTPlayerController* PC, unsigned long bForceSpectatorChannel )
{
	static UFunction* pFnSetupPlayerMuteList = NULL;

	if ( ! pFnSetupPlayerMuteList )
		pFnSetupPlayerMuteList = (UFunction*) UObject::GObjObjects()->Data[ 53405 ];

	AUTGame_execSetupPlayerMuteList_Parms SetupPlayerMuteList_Parms;
	SetupPlayerMuteList_Parms.PC = PC;
	SetupPlayerMuteList_Parms.bForceSpectatorChannel = bForceSpectatorChannel;

	this->ProcessEvent ( pFnSetupPlayerMuteList, &SetupPlayerMuteList_Parms, NULL );
};

// Function UTGame.UTGame.UpdateGameplayMuteList
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTGame::UpdateGameplayMuteList ( class APlayerController* PC )
{
	static UFunction* pFnUpdateGameplayMuteList = NULL;

	if ( ! pFnUpdateGameplayMuteList )
		pFnUpdateGameplayMuteList = (UFunction*) UObject::GObjObjects()->Data[ 53402 ];

	AUTGame_execUpdateGameplayMuteList_Parms UpdateGameplayMuteList_Parms;
	UpdateGameplayMuteList_Parms.PC = PC;

	this->ProcessEvent ( pFnUpdateGameplayMuteList, &UpdateGameplayMuteList_Parms, NULL );
};

// Function UTGame.UTGame.EndSpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Killer                         ( CPF_Parm )
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )

void AUTGame::EndSpree ( class AUTPlayerReplicationInfo* Killer, class AUTPlayerReplicationInfo* Other )
{
	static UFunction* pFnEndSpree = NULL;

	if ( ! pFnEndSpree )
		pFnEndSpree = (UFunction*) UObject::GObjObjects()->Data[ 53398 ];

	AUTGame_execEndSpree_Parms EndSpree_Parms;
	EndSpree_Parms.Killer = Killer;
	EndSpree_Parms.Other = Other;

	this->ProcessEvent ( pFnEndSpree, &EndSpree_Parms, NULL );
};

// Function UTGame.UTGame.NotifySpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

void AUTGame::NotifySpree ( class AUTPlayerReplicationInfo* Other, int Num )
{
	static UFunction* pFnNotifySpree = NULL;

	if ( ! pFnNotifySpree )
		pFnNotifySpree = (UFunction*) UObject::GObjObjects()->Data[ 53393 ];

	AUTGame_execNotifySpree_Parms NotifySpree_Parms;
	NotifySpree_Parms.Other = Other;
	NotifySpree_Parms.Num = Num;

	this->ProcessEvent ( pFnNotifySpree, &NotifySpree_Parms, NULL );
};

// Function UTGame.UTGame.ReduceDamage
// [0x00420002] 
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void AUTGame::ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnReduceDamage = NULL;

	if ( ! pFnReduceDamage )
		pFnReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 53381 ];

	AUTGame_execReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	ReduceDamage_Parms.DamageType = DamageType;
	ReduceDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnReduceDamage, &ReduceDamage_Parms, NULL );

	if ( Damage )
		*Damage = ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &ReduceDamage_Parms.Momentum, 0xC );
};

// Function UTGame.UTGame.GetEndGameConditionRule
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTGame::GetEndGameConditionRule ( )
{
	static UFunction* pFnGetEndGameConditionRule = NULL;

	if ( ! pFnGetEndGameConditionRule )
		pFnGetEndGameConditionRule = (UFunction*) UObject::GObjObjects()->Data[ 53379 ];

	AUTGame_execGetEndGameConditionRule_Parms GetEndGameConditionRule_Parms;

	this->ProcessEvent ( pFnGetEndGameConditionRule, &GetEndGameConditionRule_Parms, NULL );

	return GetEndGameConditionRule_Parms.ReturnValue;
};

// Function UTGame.UTGame.GetMapTypeRule
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTGame::GetMapTypeRule ( )
{
	static UFunction* pFnGetMapTypeRule = NULL;

	if ( ! pFnGetMapTypeRule )
		pFnGetMapTypeRule = (UFunction*) UObject::GObjObjects()->Data[ 53377 ];

	AUTGame_execGetMapTypeRule_Parms GetMapTypeRule_Parms;

	this->ProcessEvent ( pFnGetMapTypeRule, &GetMapTypeRule_Parms, NULL );

	return GetMapTypeRule_Parms.ReturnValue;
};

// Function UTGame.UTGame.InitGameReplicationInfo
// [0x00020002] 
// Parameters infos:

void AUTGame::InitGameReplicationInfo ( )
{
	static UFunction* pFnInitGameReplicationInfo = NULL;

	if ( ! pFnInitGameReplicationInfo )
		pFnInitGameReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 53367 ];

	AUTGame_execInitGameReplicationInfo_Parms InitGameReplicationInfo_Parms;

	this->ProcessEvent ( pFnInitGameReplicationInfo, &InitGameReplicationInfo_Parms, NULL );
};

// Function UTGame.UTGame.GetBotTeam
// [0x00024002] 
// Parameters infos:
// class AUTTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamBots                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTTeamInfo* AUTGame::GetBotTeam ( int TeamBots, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnGetBotTeam = NULL;

	if ( ! pFnGetBotTeam )
		pFnGetBotTeam = (UFunction*) UObject::GObjObjects()->Data[ 49153 ];

	AUTGame_execGetBotTeam_Parms GetBotTeam_Parms;
	GetBotTeam_Parms.TeamBots = TeamBots;
	GetBotTeam_Parms.bUseTeamIndex = bUseTeamIndex;
	GetBotTeam_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetBotTeam, &GetBotTeam_Parms, NULL );

	return GetBotTeam_Parms.ReturnValue;
};

// Function UTGame.UTGame.InitializeBot
// [0x00420002] 
// Parameters infos:
// class AUTBot*                  NewBot                         ( CPF_Parm )
// class AUTTeamInfo*             BotTeam                        ( CPF_Parm )
// struct FCharacterInfo          BotInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTGame::InitializeBot ( class AUTBot* NewBot, class AUTTeamInfo* BotTeam, struct FCharacterInfo* BotInfo )
{
	static UFunction* pFnInitializeBot = NULL;

	if ( ! pFnInitializeBot )
		pFnInitializeBot = (UFunction*) UObject::GObjObjects()->Data[ 53358 ];

	AUTGame_execInitializeBot_Parms InitializeBot_Parms;
	InitializeBot_Parms.NewBot = NewBot;
	InitializeBot_Parms.BotTeam = BotTeam;

	this->ProcessEvent ( pFnInitializeBot, &InitializeBot_Parms, NULL );

	if ( BotInfo )
		memcpy ( BotInfo, &InitializeBot_Parms.BotInfo, 0x70 );
};

// Function UTGame.UTGame.SpawnBot
// [0x00824002] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* AUTGame::SpawnBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnSpawnBot = NULL;

	if ( ! pFnSpawnBot )
		pFnSpawnBot = (UFunction*) UObject::GObjObjects()->Data[ 53348 ];

	AUTGame_execSpawnBot_Parms SpawnBot_Parms;
	memcpy ( &SpawnBot_Parms.BotName, &BotName, 0xC );
	SpawnBot_Parms.bUseTeamIndex = bUseTeamIndex;
	SpawnBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSpawnBot, &SpawnBot_Parms, NULL );

	return SpawnBot_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddBot
// [0x00024002] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* AUTGame::AddBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnAddBot = NULL;

	if ( ! pFnAddBot )
		pFnAddBot = (UFunction*) UObject::GObjObjects()->Data[ 53341 ];

	AUTGame_execAddBot_Parms AddBot_Parms;
	memcpy ( &AddBot_Parms.BotName, &BotName, 0xC );
	AddBot_Parms.bUseTeamIndex = bUseTeamIndex;
	AddBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnAddBot, &AddBot_Parms, NULL );

	return AddBot_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddNamedBot
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* AUTGame::AddNamedBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnAddNamedBot = NULL;

	if ( ! pFnAddNamedBot )
		pFnAddNamedBot = (UFunction*) UObject::GObjObjects()->Data[ 53336 ];

	AUTGame_execAddNamedBot_Parms AddNamedBot_Parms;
	memcpy ( &AddNamedBot_Parms.BotName, &BotName, 0xC );
	AddNamedBot_Parms.bUseTeamIndex = bUseTeamIndex;
	AddNamedBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnAddNamedBot, &AddNamedBot_Parms, NULL );

	return AddNamedBot_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void AUTGame::AddBots ( int Num )
{
	static UFunction* pFnAddBots = NULL;

	if ( ! pFnAddBots )
		pFnAddBots = (UFunction*) UObject::GObjObjects()->Data[ 53333 ];

	AUTGame_execAddBots_Parms AddBots_Parms;
	AddBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddBots, &AddBots_Parms, NULL );
};

// Function UTGame.UTGame.NeedPlayers
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::NeedPlayers ( )
{
	static UFunction* pFnNeedPlayers = NULL;

	if ( ! pFnNeedPlayers )
		pFnNeedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53331 ];

	AUTGame_execNeedPlayers_Parms NeedPlayers_Parms;

	this->ProcessEvent ( pFnNeedPlayers, &NeedPlayers_Parms, NULL );

	return NeedPlayers_Parms.ReturnValue;
};

// Function UTGame.UTGame.KillBot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTGame::KillBot ( class AUTBot* B )
{
	static UFunction* pFnKillBot = NULL;

	if ( ! pFnKillBot )
		pFnKillBot = (UFunction*) UObject::GObjObjects()->Data[ 53329 ];

	AUTGame_execKillBot_Parms KillBot_Parms;
	KillBot_Parms.B = B;

	this->ProcessEvent ( pFnKillBot, &KillBot_Parms, NULL );
};

// Function UTGame.UTGame.KillThis
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGame::KillThis ( )
{
	static UFunction* pFnKillThis = NULL;

	if ( ! pFnKillThis )
		pFnKillThis = (UFunction*) UObject::GObjObjects()->Data[ 53326 ];

	AUTGame_execKillThis_Parms KillThis_Parms;

	this->ProcessEvent ( pFnKillThis, &KillThis_Parms, NULL );
};

// Function UTGame.UTGame.KillOthers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGame::KillOthers ( )
{
	static UFunction* pFnKillOthers = NULL;

	if ( ! pFnKillOthers )
		pFnKillOthers = (UFunction*) UObject::GObjObjects()->Data[ 53322 ];

	AUTGame_execKillOthers_Parms KillOthers_Parms;

	this->ProcessEvent ( pFnKillOthers, &KillOthers_Parms, NULL );
};

// Function UTGame.UTGame.KillBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTGame::KillBots ( )
{
	static UFunction* pFnKillBots = NULL;

	if ( ! pFnKillBots )
		pFnKillBots = (UFunction*) UObject::GObjObjects()->Data[ 53320 ];

	AUTGame_execKillBots_Parms KillBots_Parms;

	this->ProcessEvent ( pFnKillBots, &KillBots_Parms, NULL );
};

// Function UTGame.UTGame.Logout
// [0x00020002] 
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void AUTGame::Logout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 53315 ];

	AUTGame_execLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function UTGame.UTGame.DiscardInventory
// [0x00024002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void AUTGame::DiscardInventory ( class APawn* Other, class AController* Killer )
{
	static UFunction* pFnDiscardInventory = NULL;

	if ( ! pFnDiscardInventory )
		pFnDiscardInventory = (UFunction*) UObject::GObjObjects()->Data[ 53311 ];

	AUTGame_execDiscardInventory_Parms DiscardInventory_Parms;
	DiscardInventory_Parms.Other = Other;
	DiscardInventory_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDiscardInventory, &DiscardInventory_Parms, NULL );
};

// Function UTGame.UTGame.ChangeName
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bNameChange                    ( CPF_Parm )

void AUTGame::ChangeName ( class AController* Other, struct FString S, unsigned long bNameChange )
{
	static UFunction* pFnChangeName = NULL;

	if ( ! pFnChangeName )
		pFnChangeName = (UFunction*) UObject::GObjObjects()->Data[ 53306 ];

	AUTGame_execChangeName_Parms ChangeName_Parms;
	ChangeName_Parms.Other = Other;
	memcpy ( &ChangeName_Parms.S, &S, 0xC );
	ChangeName_Parms.bNameChange = bNameChange;

	this->ProcessEvent ( pFnChangeName, &ChangeName_Parms, NULL );
};

// Function UTGame.UTGame.CanSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       Viewer                         ( CPF_Parm )
// class APlayerReplicationInfo*  ViewTarget                     ( CPF_Parm )

bool AUTGame::CanSpectate ( class APlayerController* Viewer, class APlayerReplicationInfo* ViewTarget )
{
	static UFunction* pFnCanSpectate = NULL;

	if ( ! pFnCanSpectate )
		pFnCanSpectate = (UFunction*) UObject::GObjObjects()->Data[ 53302 ];

	AUTGame_execCanSpectate_Parms CanSpectate_Parms;
	CanSpectate_Parms.Viewer = Viewer;
	CanSpectate_Parms.ViewTarget = ViewTarget;

	this->ProcessEvent ( pFnCanSpectate, &CanSpectate_Parms, NULL );

	return CanSpectate_Parms.ReturnValue;
};

// Function UTGame.UTGame.AddDefaultInventory
// [0x00020002] 
// Parameters infos:
// class APawn*                   PlayerPawn                     ( CPF_Parm )

void AUTGame::AddDefaultInventory ( class APawn* PlayerPawn )
{
	static UFunction* pFnAddDefaultInventory = NULL;

	if ( ! pFnAddDefaultInventory )
		pFnAddDefaultInventory = (UFunction*) UObject::GObjObjects()->Data[ 53294 ];

	AUTGame_execAddDefaultInventory_Parms AddDefaultInventory_Parms;
	AddDefaultInventory_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnAddDefaultInventory, &AddDefaultInventory_Parms, NULL );
};

// Function UTGame.UTGame.CampaignSkillAdjust
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  aBot                           ( CPF_Parm )

void AUTGame::CampaignSkillAdjust ( class AUTBot* aBot )
{
	static UFunction* pFnCampaignSkillAdjust = NULL;

	if ( ! pFnCampaignSkillAdjust )
		pFnCampaignSkillAdjust = (UFunction*) UObject::GObjObjects()->Data[ 53292 ];

	AUTGame_execCampaignSkillAdjust_Parms CampaignSkillAdjust_Parms;
	CampaignSkillAdjust_Parms.aBot = aBot;

	this->ProcessEvent ( pFnCampaignSkillAdjust, &CampaignSkillAdjust_Parms, NULL );
};

// Function UTGame.UTGame.RestartPlayer
// [0x00820002] 
// Parameters infos:
// class AController*             aPlayer                        ( CPF_Parm )

void AUTGame::RestartPlayer ( class AController* aPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53284 ];

	AUTGame_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.aPlayer = aPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function UTGame.UTGame.GetHandicapNeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

int AUTGame::GetHandicapNeed ( class APawn* Other )
{
	static UFunction* pFnGetHandicapNeed = NULL;

	if ( ! pFnGetHandicapNeed )
		pFnGetHandicapNeed = (UFunction*) UObject::GObjObjects()->Data[ 53281 ];

	AUTGame_execGetHandicapNeed_Parms GetHandicapNeed_Parms;
	GetHandicapNeed_Parms.Other = Other;

	this->ProcessEvent ( pFnGetHandicapNeed, &GetHandicapNeed_Parms, NULL );

	return GetHandicapNeed_Parms.ReturnValue;
};

// Function UTGame.UTGame.AssignHoverboard
// [0x00020002] 
// Parameters infos:
// class AUTPawn*                 P                              ( CPF_Parm )

void AUTGame::AssignHoverboard ( class AUTPawn* P )
{
	static UFunction* pFnAssignHoverboard = NULL;

	if ( ! pFnAssignHoverboard )
		pFnAssignHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 53279 ];

	AUTGame_execAssignHoverboard_Parms AssignHoverboard_Parms;
	AssignHoverboard_Parms.P = P;

	this->ProcessEvent ( pFnAssignHoverboard, &AssignHoverboard_Parms, NULL );
};

// Function UTGame.UTGame.UpdateGameSettingsCounts
// [0x00020002] 
// Parameters infos:

void AUTGame::UpdateGameSettingsCounts ( )
{
	static UFunction* pFnUpdateGameSettingsCounts = NULL;

	if ( ! pFnUpdateGameSettingsCounts )
		pFnUpdateGameSettingsCounts = (UFunction*) UObject::GObjObjects()->Data[ 53275 ];

	AUTGame_execUpdateGameSettingsCounts_Parms UpdateGameSettingsCounts_Parms;

	this->ProcessEvent ( pFnUpdateGameSettingsCounts, &UpdateGameSettingsCounts_Parms, NULL );
};

// Function UTGame.UTGame.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void AUTGame::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 53271 ];

	AUTGame_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function UTGame.UTGame.AtCapacity
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSpectator                     ( CPF_Parm )

bool AUTGame::AtCapacity ( unsigned long bSpectator )
{
	static UFunction* pFnAtCapacity = NULL;

	if ( ! pFnAtCapacity )
		pFnAtCapacity = (UFunction*) UObject::GObjObjects()->Data[ 53266 ];

	AUTGame_execAtCapacity_Parms AtCapacity_Parms;
	AtCapacity_Parms.bSpectator = bSpectator;

	this->ProcessEvent ( pFnAtCapacity, &AtCapacity_Parms, NULL );

	return AtCapacity_Parms.ReturnValue;
};

// Function UTGame.UTGame.SetEndGameFocus
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )

void AUTGame::SetEndGameFocus ( class APlayerReplicationInfo* Winner )
{
	static UFunction* pFnSetEndGameFocus = NULL;

	if ( ! pFnSetEndGameFocus )
		pFnSetEndGameFocus = (UFunction*) UObject::GObjObjects()->Data[ 53262 ];

	AUTGame_execSetEndGameFocus_Parms SetEndGameFocus_Parms;
	SetEndGameFocus_Parms.Winner = Winner;

	this->ProcessEvent ( pFnSetEndGameFocus, &SetEndGameFocus_Parms, NULL );
};

// Function UTGame.UTGame.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool AUTGame::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 53256 ];

	AUTGame_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function UTGame.UTGame.CycleMap
// [0x00020002] 
// Parameters infos:

void AUTGame::CycleMap ( )
{
	static UFunction* pFnCycleMap = NULL;

	if ( ! pFnCycleMap )
		pFnCycleMap = (UFunction*) UObject::GObjObjects()->Data[ 53255 ];

	AUTGame_execCycleMap_Parms CycleMap_Parms;

	this->ProcessEvent ( pFnCycleMap, &CycleMap_Parms, NULL );
};

// Function UTGame.UTGame.RestartGame
// [0x00020002] 
// Parameters infos:

void AUTGame::RestartGame ( )
{
	static UFunction* pFnRestartGame = NULL;

	if ( ! pFnRestartGame )
		pFnRestartGame = (UFunction*) UObject::GObjObjects()->Data[ 53254 ];

	AUTGame_execRestartGame_Parms RestartGame_Parms;

	this->ProcessEvent ( pFnRestartGame, &RestartGame_Parms, NULL );
};

// Function UTGame.UTGame.TooManyBots
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             botToRemove                    ( CPF_Parm )

bool AUTGame::TooManyBots ( class AController* botToRemove )
{
	static UFunction* pFnTooManyBots = NULL;

	if ( ! pFnTooManyBots )
		pFnTooManyBots = (UFunction*) UObject::GObjObjects()->Data[ 51270 ];

	AUTGame_execTooManyBots_Parms TooManyBots_Parms;
	TooManyBots_Parms.botToRemove = botToRemove;

	this->ProcessEvent ( pFnTooManyBots, &TooManyBots_Parms, NULL );

	return TooManyBots_Parms.ReturnValue;
};

// Function UTGame.UTGame.SpawnWait
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           B                              ( CPF_Parm )

float AUTGame::SpawnWait ( class AAIController* B )
{
	static UFunction* pFnSpawnWait = NULL;

	if ( ! pFnSpawnWait )
		pFnSpawnWait = (UFunction*) UObject::GObjObjects()->Data[ 51964 ];

	AUTGame_execSpawnWait_Parms SpawnWait_Parms;
	SpawnWait_Parms.B = B;

	this->ProcessEvent ( pFnSpawnWait, &SpawnWait_Parms, NULL );

	return SpawnWait_Parms.ReturnValue;
};

// Function UTGame.UTGame.WantFastSpawnFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           B                              ( CPF_Parm )

bool AUTGame::WantFastSpawnFor ( class AAIController* B )
{
	static UFunction* pFnWantFastSpawnFor = NULL;

	if ( ! pFnWantFastSpawnFor )
		pFnWantFastSpawnFor = (UFunction*) UObject::GObjObjects()->Data[ 53249 ];

	AUTGame_execWantFastSpawnFor_Parms WantFastSpawnFor_Parms;
	WantFastSpawnFor_Parms.B = B;

	this->ProcessEvent ( pFnWantFastSpawnFor, &WantFastSpawnFor_Parms, NULL );

	return WantFastSpawnFor_Parms.ReturnValue;
};

// Function UTGame.UTGame.ShouldRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APickupFactory*          Other                          ( CPF_Parm )

bool AUTGame::ShouldRespawn ( class APickupFactory* Other )
{
	static UFunction* pFnShouldRespawn = NULL;

	if ( ! pFnShouldRespawn )
		pFnShouldRespawn = (UFunction*) UObject::GObjObjects()->Data[ 53246 ];

	AUTGame_execShouldRespawn_Parms ShouldRespawn_Parms;
	ShouldRespawn_Parms.Other = Other;

	this->ProcessEvent ( pFnShouldRespawn, &ShouldRespawn_Parms, NULL );

	return ShouldRespawn_Parms.ReturnValue;
};

// Function UTGame.UTGame.Login
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APlayerController* AUTGame::eventLogin ( struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString* ErrorMessage )
{
	static UFunction* pFnLogin = NULL;

	if ( ! pFnLogin )
		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 53236 ];

	AUTGame_eventLogin_Parms Login_Parms;
	memcpy ( &Login_Parms.Portal, &Portal, 0xC );
	memcpy ( &Login_Parms.Options, &Options, 0xC );
	memcpy ( &Login_Parms.UniqueId, &UniqueId, 0x8 );

	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &Login_Parms.ErrorMessage, 0xC );

	return Login_Parms.ReturnValue;
};

// Function UTGame.UTGame.LevelRecommendedPlayers
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTGame::LevelRecommendedPlayers ( )
{
	static UFunction* pFnLevelRecommendedPlayers = NULL;

	if ( ! pFnLevelRecommendedPlayers )
		pFnLevelRecommendedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53231 ];

	AUTGame_execLevelRecommendedPlayers_Parms LevelRecommendedPlayers_Parms;

	this->ProcessEvent ( pFnLevelRecommendedPlayers, &LevelRecommendedPlayers_Parms, NULL );

	return LevelRecommendedPlayers_Parms.ReturnValue;
};

// Function UTGame.UTGame.GenericPlayerInitialization
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTGame::GenericPlayerInitialization ( class AController* C )
{
	static UFunction* pFnGenericPlayerInitialization = NULL;

	if ( ! pFnGenericPlayerInitialization )
		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 53229 ];

	AUTGame_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
	GenericPlayerInitialization_Parms.C = C;

	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
};

// Function UTGame.UTGame.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTGame::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 53224 ];

	AUTGame_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTGame.ForceRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::ForceRespawn ( )
{
	static UFunction* pFnForceRespawn = NULL;

	if ( ! pFnForceRespawn )
		pFnForceRespawn = (UFunction*) UObject::GObjObjects()->Data[ 44187 ];

	AUTGame_execForceRespawn_Parms ForceRespawn_Parms;

	this->ProcessEvent ( pFnForceRespawn, &ForceRespawn_Parms, NULL );

	return ForceRespawn_Parms.ReturnValue;
};

// Function UTGame.UTGame.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTGame::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 53204 ];

	AUTGame_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function UTGame.UTGame.AdjustSkill
// [0x00020002] 
// Parameters infos:
// class AAIController*           B                              ( CPF_Parm )
// class APlayerController*       P                              ( CPF_Parm )
// unsigned long                  bWinner                        ( CPF_Parm )

void AUTGame::AdjustSkill ( class AAIController* B, class APlayerController* P, unsigned long bWinner )
{
	static UFunction* pFnAdjustSkill = NULL;

	if ( ! pFnAdjustSkill )
		pFnAdjustSkill = (UFunction*) UObject::GObjObjects()->Data[ 53199 ];

	AUTGame_execAdjustSkill_Parms AdjustSkill_Parms;
	AdjustSkill_Parms.B = B;
	AdjustSkill_Parms.P = P;
	AdjustSkill_Parms.bWinner = bWinner;

	this->ProcessEvent ( pFnAdjustSkill, &AdjustSkill_Parms, NULL );
};

// Function UTGame.UTGame.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void AUTGame::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 53193 ];

	AUTGame_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function UTGame.UTGame.BroadcastDeathMessage
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTGame::BroadcastDeathMessage ( class AController* Killer, class AController* Other, class UClass* DamageType )
{
	static UFunction* pFnBroadcastDeathMessage = NULL;

	if ( ! pFnBroadcastDeathMessage )
		pFnBroadcastDeathMessage = (UFunction*) UObject::GObjObjects()->Data[ 53188 ];

	AUTGame_execBroadcastDeathMessage_Parms BroadcastDeathMessage_Parms;
	BroadcastDeathMessage_Parms.Killer = Killer;
	BroadcastDeathMessage_Parms.Other = Other;
	BroadcastDeathMessage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnBroadcastDeathMessage, &BroadcastDeathMessage_Parms, NULL );
};

// Function UTGame.UTGame.SetGameSpeed
// [0x00020002] 
// Parameters infos:
// float                          T                              ( CPF_Parm )

void AUTGame::SetGameSpeed ( float T )
{
	static UFunction* pFnSetGameSpeed = NULL;

	if ( ! pFnSetGameSpeed )
		pFnSetGameSpeed = (UFunction*) UObject::GObjObjects()->Data[ 53185 ];

	AUTGame_execSetGameSpeed_Parms SetGameSpeed_Parms;
	SetGameSpeed_Parms.T = T;

	this->ProcessEvent ( pFnSetGameSpeed, &SetGameSpeed_Parms, NULL );
};

// Function UTGame.UTGame.SkipPlaySound
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGame::SkipPlaySound ( )
{
	static UFunction* pFnSkipPlaySound = NULL;

	if ( ! pFnSkipPlaySound )
		pFnSkipPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 53183 ];

	AUTGame_execSkipPlaySound_Parms SkipPlaySound_Parms;

	this->ProcessEvent ( pFnSkipPlaySound, &SkipPlaySound_Parms, NULL );

	return SkipPlaySound_Parms.ReturnValue;
};

// Function UTGame.UTGame.ParseKillMessage
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 KillerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 VictimName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DeathMessage                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString AUTGame::ParseKillMessage ( struct FString KillerName, struct FString VictimName, struct FString DeathMessage )
{
	static UFunction* pFnParseKillMessage = NULL;

	if ( ! pFnParseKillMessage )
		pFnParseKillMessage = (UFunction*) UObject::GObjObjects()->Data[ 53178 ];

	AUTGame_execParseKillMessage_Parms ParseKillMessage_Parms;
	memcpy ( &ParseKillMessage_Parms.KillerName, &KillerName, 0xC );
	memcpy ( &ParseKillMessage_Parms.VictimName, &VictimName, 0xC );
	memcpy ( &ParseKillMessage_Parms.DeathMessage, &DeathMessage, 0xC );

	this->ProcessEvent ( pFnParseKillMessage, &ParseKillMessage_Parms, NULL );

	return ParseKillMessage_Parms.ReturnValue;
};

// Function UTGame.UTGame.NotifyNavigationChanged
// [0x00020002] 
// Parameters infos:
// class ANavigationPoint*        N                              ( CPF_Parm )

void AUTGame::NotifyNavigationChanged ( class ANavigationPoint* N )
{
	static UFunction* pFnNotifyNavigationChanged = NULL;

	if ( ! pFnNotifyNavigationChanged )
		pFnNotifyNavigationChanged = (UFunction*) UObject::GObjObjects()->Data[ 53175 ];

	AUTGame_execNotifyNavigationChanged_Parms NotifyNavigationChanged_Parms;
	NotifyNavigationChanged_Parms.N = N;

	this->ProcessEvent ( pFnNotifyNavigationChanged, &NotifyNavigationChanged_Parms, NULL );
};

// Function UTGame.UTGame.FindNewObjectives
// [0x00020000] 
// Parameters infos:
// class AUTGameObjective*        DisabledObjective              ( CPF_Parm )

void AUTGame::FindNewObjectives ( class AUTGameObjective* DisabledObjective )
{
	static UFunction* pFnFindNewObjectives = NULL;

	if ( ! pFnFindNewObjectives )
		pFnFindNewObjectives = (UFunction*) UObject::GObjObjects()->Data[ 53173 ];

	AUTGame_execFindNewObjectives_Parms FindNewObjectives_Parms;
	FindNewObjectives_Parms.DisabledObjective = DisabledObjective;

	this->ProcessEvent ( pFnFindNewObjectives, &FindNewObjectives_Parms, NULL );
};

// Function UTGame.UTGame.Reset
// [0x00020002] 
// Parameters infos:

void AUTGame::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 53170 ];

	AUTGame_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTGame.AllowBecomeActivePlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       P                              ( CPF_Parm )

bool AUTGame::AllowBecomeActivePlayer ( class APlayerController* P )
{
	static UFunction* pFnAllowBecomeActivePlayer = NULL;

	if ( ! pFnAllowBecomeActivePlayer )
		pFnAllowBecomeActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 44454 ];

	AUTGame_execAllowBecomeActivePlayer_Parms AllowBecomeActivePlayer_Parms;
	AllowBecomeActivePlayer_Parms.P = P;

	this->ProcessEvent ( pFnAllowBecomeActivePlayer, &AllowBecomeActivePlayer_Parms, NULL );

	return AllowBecomeActivePlayer_Parms.ReturnValue;
};

// Function UTGame.UTGame.DriverLeftVehicle
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )

void AUTGame::DriverLeftVehicle ( class AVehicle* V, class APawn* P )
{
	static UFunction* pFnDriverLeftVehicle = NULL;

	if ( ! pFnDriverLeftVehicle )
		pFnDriverLeftVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53165 ];

	AUTGame_execDriverLeftVehicle_Parms DriverLeftVehicle_Parms;
	DriverLeftVehicle_Parms.V = V;
	DriverLeftVehicle_Parms.P = P;

	this->ProcessEvent ( pFnDriverLeftVehicle, &DriverLeftVehicle_Parms, NULL );
};

// Function UTGame.UTGame.DriverEnteredVehicle
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )

void AUTGame::DriverEnteredVehicle ( class AVehicle* V, class APawn* P )
{
	static UFunction* pFnDriverEnteredVehicle = NULL;

	if ( ! pFnDriverEnteredVehicle )
		pFnDriverEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53160 ];

	AUTGame_execDriverEnteredVehicle_Parms DriverEnteredVehicle_Parms;
	DriverEnteredVehicle_Parms.V = V;
	DriverEnteredVehicle_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnteredVehicle, &DriverEnteredVehicle_Parms, NULL );
};

// Function UTGame.UTGame.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* AUTGame::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
{
	static UFunction* pFnSetGameType = NULL;

	if ( ! pFnSetGameType )
		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 53149 ];

	AUTGame_eventSetGameType_Parms SetGameType_Parms;
	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );

	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );

	return SetGameType_Parms.ReturnValue;
};

// Function UTGame.UTGame.AllowMutator
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MutatorClassName               ( CPF_Parm | CPF_NeedCtorLink )

bool AUTGame::AllowMutator ( struct FString MutatorClassName )
{
	static UFunction* pFnAllowMutator = NULL;

	if ( ! pFnAllowMutator )
		pFnAllowMutator = (UFunction*) UObject::GObjObjects()->Data[ 53146 ];

	AUTGame_execAllowMutator_Parms AllowMutator_Parms;
	memcpy ( &AllowMutator_Parms.MutatorClassName, &MutatorClassName, 0xC );

	this->ProcessEvent ( pFnAllowMutator, &AllowMutator_Parms, NULL );

	return AllowMutator_Parms.ReturnValue;
};

// Function UTGame.UTGame.UseLowGore
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWorldInfo*              WI                             ( CPF_Parm )

bool AUTGame::UseLowGore ( class AWorldInfo* WI )
{
	static UFunction* pFnUseLowGore = NULL;

	if ( ! pFnUseLowGore )
		pFnUseLowGore = (UFunction*) UObject::GObjObjects()->Data[ 49406 ];

	AUTGame_execUseLowGore_Parms UseLowGore_Parms;
	UseLowGore_Parms.WI = WI;

	this->ProcessEvent ( pFnUseLowGore, &UseLowGore_Parms, NULL );

	return UseLowGore_Parms.ReturnValue;
};

// Function UTGame.UTGame.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTGame::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53143 ];

	AUTGame_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.AddGameRule
// [0x00020002] 
// Parameters infos:
// struct FString                 Rule                           ( CPF_Parm | CPF_NeedCtorLink )

void AUTGameReplicationInfo::AddGameRule ( struct FString Rule )
{
	static UFunction* pFnAddGameRule = NULL;

	if ( ! pFnAddGameRule )
		pFnAddGameRule = (UFunction*) UObject::GObjObjects()->Data[ 54706 ];

	AUTGameReplicationInfo_execAddGameRule_Parms AddGameRule_Parms;
	memcpy ( &AddGameRule_Parms.Rule, &Rule, 0xC );

	this->ProcessEvent ( pFnAddGameRule, &AddGameRule_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.SetHudShowScores
// [0x00020102] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void AUTGameReplicationInfo::SetHudShowScores ( unsigned long bShow )
{
	static UFunction* pFnSetHudShowScores = NULL;

	if ( ! pFnSetHudShowScores )
		pFnSetHudShowScores = (UFunction*) UObject::GObjObjects()->Data[ 54703 ];

	AUTGameReplicationInfo_execSetHudShowScores_Parms SetHudShowScores_Parms;
	SetHudShowScores_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetHudShowScores, &SetHudShowScores_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.ShowMidGameMenu
// [0x00024102] 
// Parameters infos:
// class AUTPlayerController*     InstigatorPC                   ( CPF_Parm )
// struct FName                   TabTag                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bEnableInput                   ( CPF_OptionalParm | CPF_Parm )

void AUTGameReplicationInfo::ShowMidGameMenu ( class AUTPlayerController* InstigatorPC, struct FName TabTag, unsigned long bEnableInput )
{
	static UFunction* pFnShowMidGameMenu = NULL;

	if ( ! pFnShowMidGameMenu )
		pFnShowMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 54699 ];

	AUTGameReplicationInfo_execShowMidGameMenu_Parms ShowMidGameMenu_Parms;
	ShowMidGameMenu_Parms.InstigatorPC = InstigatorPC;
	memcpy ( &ShowMidGameMenu_Parms.TabTag, &TabTag, 0x8 );
	ShowMidGameMenu_Parms.bEnableInput = bEnableInput;

	this->ProcessEvent ( pFnShowMidGameMenu, &ShowMidGameMenu_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.Timer
// [0x00020102] 
// Parameters infos:

void AUTGameReplicationInfo::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 54696 ];

	AUTGameReplicationInfo_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.FlagIsDown
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

bool AUTGameReplicationInfo::FlagIsDown ( int TeamIndex )
{
	static UFunction* pFnFlagIsDown = NULL;

	if ( ! pFnFlagIsDown )
		pFnFlagIsDown = (UFunction*) UObject::GObjObjects()->Data[ 54693 ];

	AUTGameReplicationInfo_execFlagIsDown_Parms FlagIsDown_Parms;
	FlagIsDown_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnFlagIsDown, &FlagIsDown_Parms, NULL );

	return FlagIsDown_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.SetFlagDown
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void AUTGameReplicationInfo::SetFlagDown ( int TeamIndex )
{
	static UFunction* pFnSetFlagDown = NULL;

	if ( ! pFnSetFlagDown )
		pFnSetFlagDown = (UFunction*) UObject::GObjObjects()->Data[ 54691 ];

	AUTGameReplicationInfo_execSetFlagDown_Parms SetFlagDown_Parms;
	SetFlagDown_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSetFlagDown, &SetFlagDown_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.FlagIsHeldEnemy
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

bool AUTGameReplicationInfo::FlagIsHeldEnemy ( int TeamIndex )
{
	static UFunction* pFnFlagIsHeldEnemy = NULL;

	if ( ! pFnFlagIsHeldEnemy )
		pFnFlagIsHeldEnemy = (UFunction*) UObject::GObjObjects()->Data[ 54688 ];

	AUTGameReplicationInfo_execFlagIsHeldEnemy_Parms FlagIsHeldEnemy_Parms;
	FlagIsHeldEnemy_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnFlagIsHeldEnemy, &FlagIsHeldEnemy_Parms, NULL );

	return FlagIsHeldEnemy_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.SetFlagHeldEnemy
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void AUTGameReplicationInfo::SetFlagHeldEnemy ( int TeamIndex )
{
	static UFunction* pFnSetFlagHeldEnemy = NULL;

	if ( ! pFnSetFlagHeldEnemy )
		pFnSetFlagHeldEnemy = (UFunction*) UObject::GObjObjects()->Data[ 54686 ];

	AUTGameReplicationInfo_execSetFlagHeldEnemy_Parms SetFlagHeldEnemy_Parms;
	SetFlagHeldEnemy_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSetFlagHeldEnemy, &SetFlagHeldEnemy_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.FlagIsHeldFriendly
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

bool AUTGameReplicationInfo::FlagIsHeldFriendly ( int TeamIndex )
{
	static UFunction* pFnFlagIsHeldFriendly = NULL;

	if ( ! pFnFlagIsHeldFriendly )
		pFnFlagIsHeldFriendly = (UFunction*) UObject::GObjObjects()->Data[ 54683 ];

	AUTGameReplicationInfo_execFlagIsHeldFriendly_Parms FlagIsHeldFriendly_Parms;
	FlagIsHeldFriendly_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnFlagIsHeldFriendly, &FlagIsHeldFriendly_Parms, NULL );

	return FlagIsHeldFriendly_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.SetFlagHeldFriendly
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void AUTGameReplicationInfo::SetFlagHeldFriendly ( int TeamIndex )
{
	static UFunction* pFnSetFlagHeldFriendly = NULL;

	if ( ! pFnSetFlagHeldFriendly )
		pFnSetFlagHeldFriendly = (UFunction*) UObject::GObjObjects()->Data[ 54681 ];

	AUTGameReplicationInfo_execSetFlagHeldFriendly_Parms SetFlagHeldFriendly_Parms;
	SetFlagHeldFriendly_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSetFlagHeldFriendly, &SetFlagHeldFriendly_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.FlagsAreHome
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTGameReplicationInfo::FlagsAreHome ( )
{
	static UFunction* pFnFlagsAreHome = NULL;

	if ( ! pFnFlagsAreHome )
		pFnFlagsAreHome = (UFunction*) UObject::GObjObjects()->Data[ 54679 ];

	AUTGameReplicationInfo_execFlagsAreHome_Parms FlagsAreHome_Parms;

	this->ProcessEvent ( pFnFlagsAreHome, &FlagsAreHome_Parms, NULL );

	return FlagsAreHome_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.FlagIsHome
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

bool AUTGameReplicationInfo::FlagIsHome ( int TeamIndex )
{
	static UFunction* pFnFlagIsHome = NULL;

	if ( ! pFnFlagIsHome )
		pFnFlagIsHome = (UFunction*) UObject::GObjObjects()->Data[ 54676 ];

	AUTGameReplicationInfo_execFlagIsHome_Parms FlagIsHome_Parms;
	FlagIsHome_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnFlagIsHome, &FlagIsHome_Parms, NULL );

	return FlagIsHome_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.SetFlagHome
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void AUTGameReplicationInfo::SetFlagHome ( int TeamIndex )
{
	static UFunction* pFnSetFlagHome = NULL;

	if ( ! pFnSetFlagHome )
		pFnSetFlagHome = (UFunction*) UObject::GObjObjects()->Data[ 54673 ];

	AUTGameReplicationInfo_execSetFlagHome_Parms SetFlagHome_Parms;
	SetFlagHome_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSetFlagHome, &SetFlagHome_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.CharacterProcessingComplete
// [0x00020102] 
// Parameters infos:

void AUTGameReplicationInfo::CharacterProcessingComplete ( )
{
	static UFunction* pFnCharacterProcessingComplete = NULL;

	if ( ! pFnCharacterProcessingComplete )
		pFnCharacterProcessingComplete = (UFunction*) UObject::GObjObjects()->Data[ 54671 ];

	AUTGameReplicationInfo_execCharacterProcessingComplete_Parms CharacterProcessingComplete_Parms;

	this->ProcessEvent ( pFnCharacterProcessingComplete, &CharacterProcessingComplete_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.SortPRIArray
// [0x00020102] 
// Parameters infos:

void AUTGameReplicationInfo::SortPRIArray ( )
{
	static UFunction* pFnSortPRIArray = NULL;

	if ( ! pFnSortPRIArray )
		pFnSortPRIArray = (UFunction*) UObject::GObjObjects()->Data[ 54666 ];

	AUTGameReplicationInfo_execSortPRIArray_Parms SortPRIArray_Parms;

	this->ProcessEvent ( pFnSortPRIArray, &SortPRIArray_Parms, NULL );
};

// Function UTGame.UTGameReplicationInfo.InOrder
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  P1                             ( CPF_Parm )
// class APlayerReplicationInfo*  P2                             ( CPF_Parm )

bool AUTGameReplicationInfo::InOrder ( class APlayerReplicationInfo* P1, class APlayerReplicationInfo* P2 )
{
	static UFunction* pFnInOrder = NULL;

	if ( ! pFnInOrder )
		pFnInOrder = (UFunction*) UObject::GObjObjects()->Data[ 54660 ];

	AUTGameReplicationInfo_execInOrder_Parms InOrder_Parms;
	InOrder_Parms.P1 = P1;
	InOrder_Parms.P2 = P2;

	this->ProcessEvent ( pFnInOrder, &InOrder_Parms, NULL );

	return InOrder_Parms.ReturnValue;
};

// Function UTGame.UTGameReplicationInfo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTGameReplicationInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54651 ];

	AUTGameReplicationInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicle.ShouldLeaveForCombat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTVehicle::ShouldLeaveForCombat ( class AUTBot* B )
{
	static UFunction* pFnShouldLeaveForCombat = NULL;

	if ( ! pFnShouldLeaveForCombat )
		pFnShouldLeaveForCombat = (UFunction*) UObject::GObjObjects()->Data[ 48571 ];

	AUTVehicle_execShouldLeaveForCombat_Parms ShouldLeaveForCombat_Parms;
	ShouldLeaveForCombat_Parms.B = B;

	this->ProcessEvent ( pFnShouldLeaveForCombat, &ShouldLeaveForCombat_Parms, NULL );

	return ShouldLeaveForCombat_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ApplyWeaponEffects
// [0x00024102] 
// Parameters infos:
// int                            OverlayFlags                   ( CPF_Parm )
// int                            SeatIndex                      ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::ApplyWeaponEffects ( int OverlayFlags, int SeatIndex )
{
	static UFunction* pFnApplyWeaponEffects = NULL;

	if ( ! pFnApplyWeaponEffects )
		pFnApplyWeaponEffects = (UFunction*) UObject::GObjObjects()->Data[ 48561 ];

	AUTVehicle_execApplyWeaponEffects_Parms ApplyWeaponEffects_Parms;
	ApplyWeaponEffects_Parms.OverlayFlags = OverlayFlags;
	ApplyWeaponEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnApplyWeaponEffects, &ApplyWeaponEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.GetSeatColor
// [0x00020102] 
// Parameters infos:
// struct FLinearColor            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bIsPlayersSeat                 ( CPF_Parm )

struct FLinearColor AUTVehicle::GetSeatColor ( int SeatIndex, unsigned long bIsPlayersSeat )
{
	static UFunction* pFnGetSeatColor = NULL;

	if ( ! pFnGetSeatColor )
		pFnGetSeatColor = (UFunction*) UObject::GObjObjects()->Data[ 48555 ];

	AUTVehicle_execGetSeatColor_Parms GetSeatColor_Parms;
	GetSeatColor_Parms.SeatIndex = SeatIndex;
	GetSeatColor_Parms.bIsPlayersSeat = bIsPlayersSeat;

	this->ProcessEvent ( pFnGetSeatColor, &GetSeatColor_Parms, NULL );

	return GetSeatColor_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.DisplaySeats
// [0x00020102] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          PosX                           ( CPF_Parm )
// float                          PosY                           ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// int                            SIndex                         ( CPF_Parm )

void AUTVehicle::DisplaySeats ( class AUTHUD* HUD, class UCanvas* Canvas, float PosX, float PosY, float Width, float Height, int SIndex )
{
	static UFunction* pFnDisplaySeats = NULL;

	if ( ! pFnDisplaySeats )
		pFnDisplaySeats = (UFunction*) UObject::GObjObjects()->Data[ 48542 ];

	AUTVehicle_execDisplaySeats_Parms DisplaySeats_Parms;
	DisplaySeats_Parms.HUD = HUD;
	DisplaySeats_Parms.Canvas = Canvas;
	DisplaySeats_Parms.PosX = PosX;
	DisplaySeats_Parms.PosY = PosY;
	DisplaySeats_Parms.Width = Width;
	DisplaySeats_Parms.Height = Height;
	DisplaySeats_Parms.SIndex = SIndex;

	this->ProcessEvent ( pFnDisplaySeats, &DisplaySeats_Parms, NULL );
};

// Function UTGame.UTVehicle.DisplayExtraHud
// [0x00020100] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector2D               pos                            ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// int                            SIndex                         ( CPF_Parm )

void AUTVehicle::DisplayExtraHud ( class AUTHUD* HUD, class UCanvas* Canvas, struct FVector2D pos, float Width, float Height, int SIndex )
{
	static UFunction* pFnDisplayExtraHud = NULL;

	if ( ! pFnDisplayExtraHud )
		pFnDisplayExtraHud = (UFunction*) UObject::GObjObjects()->Data[ 48535 ];

	AUTVehicle_execDisplayExtraHud_Parms DisplayExtraHud_Parms;
	DisplayExtraHud_Parms.HUD = HUD;
	DisplayExtraHud_Parms.Canvas = Canvas;
	memcpy ( &DisplayExtraHud_Parms.pos, &pos, 0x8 );
	DisplayExtraHud_Parms.Width = Width;
	DisplayExtraHud_Parms.Height = Height;
	DisplayExtraHud_Parms.SIndex = SIndex;

	this->ProcessEvent ( pFnDisplayExtraHud, &DisplayExtraHud_Parms, NULL );
};

// Function UTGame.UTVehicle.DrawBarGraph
// [0x00020102] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          MaxWidth                       ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )

void AUTVehicle::DrawBarGraph ( float X, float Y, float Width, float MaxWidth, float Height, class UCanvas* DrawCanvas )
{
	static UFunction* pFnDrawBarGraph = NULL;

	if ( ! pFnDrawBarGraph )
		pFnDrawBarGraph = (UFunction*) UObject::GObjObjects()->Data[ 48528 ];

	AUTVehicle_execDrawBarGraph_Parms DrawBarGraph_Parms;
	DrawBarGraph_Parms.X = X;
	DrawBarGraph_Parms.Y = Y;
	DrawBarGraph_Parms.Width = Width;
	DrawBarGraph_Parms.MaxWidth = MaxWidth;
	DrawBarGraph_Parms.Height = Height;
	DrawBarGraph_Parms.DrawCanvas = DrawCanvas;

	this->ProcessEvent ( pFnDrawBarGraph, &DrawBarGraph_Parms, NULL );
};

// Function UTGame.UTVehicle.DisplayHud
// [0x00824102] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector2D               HudPOS                         ( CPF_Parm )
// int                            SeatIndex                      ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::DisplayHud ( class AUTHUD* HUD, class UCanvas* Canvas, struct FVector2D HudPOS, int SeatIndex )
{
	static UFunction* pFnDisplayHud = NULL;

	if ( ! pFnDisplayHud )
		pFnDisplayHud = (UFunction*) UObject::GObjObjects()->Data[ 48507 ];

	AUTVehicle_execDisplayHud_Parms DisplayHud_Parms;
	DisplayHud_Parms.HUD = HUD;
	DisplayHud_Parms.Canvas = Canvas;
	memcpy ( &DisplayHud_Parms.HudPOS, &HudPOS, 0x8 );
	DisplayHud_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnDisplayHud, &DisplayHud_Parms, NULL );
};

// Function UTGame.UTVehicle.GetVehicleKillStatName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTVehicle::GetVehicleKillStatName ( )
{
	static UFunction* pFnGetVehicleKillStatName = NULL;

	if ( ! pFnGetVehicleKillStatName )
		pFnGetVehicleKillStatName = (UFunction*) UObject::GObjObjects()->Data[ 48504 ];

	AUTVehicle_execGetVehicleKillStatName_Parms GetVehicleKillStatName_Parms;

	this->ProcessEvent ( pFnGetVehicleKillStatName, &GetVehicleKillStatName_Parms, NULL );

	return GetVehicleKillStatName_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.CanAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle::CanAttack ( class AActor* Other )
{
	static UFunction* pFnCanAttack = NULL;

	if ( ! pFnCanAttack )
		pFnCanAttack = (UFunction*) UObject::GObjObjects()->Data[ 48499 ];

	AUTVehicle_execCanAttack_Parms CanAttack_Parms;
	CanAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnCanAttack, &CanAttack_Parms, NULL );

	return CanAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTVehicle::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 48497 ];

	AUTVehicle_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function UTGame.UTVehicle.SetMovementEffect
// [0x00024102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bSetActive                     ( CPF_Parm )
// class AUTPawn*                 UTP                            ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::SetMovementEffect ( int SeatIndex, unsigned long bSetActive, class AUTPawn* UTP )
{
	static UFunction* pFnSetMovementEffect = NULL;

	if ( ! pFnSetMovementEffect )
		pFnSetMovementEffect = (UFunction*) UObject::GObjObjects()->Data[ 48491 ];

	AUTVehicle_execSetMovementEffect_Parms SetMovementEffect_Parms;
	SetMovementEffect_Parms.SeatIndex = SeatIndex;
	SetMovementEffect_Parms.bSetActive = bSetActive;
	SetMovementEffect_Parms.UTP = UTP;

	this->ProcessEvent ( pFnSetMovementEffect, &SetMovementEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.SetSeatStoragePawn
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// class APawn*                   PawnToSit                      ( CPF_Parm )

void AUTVehicle::SetSeatStoragePawn ( int SeatIndex, class APawn* PawnToSit )
{
	static UFunction* pFnSetSeatStoragePawn = NULL;

	if ( ! pFnSetSeatStoragePawn )
		pFnSetSeatStoragePawn = (UFunction*) UObject::GObjObjects()->Data[ 48487 ];

	AUTVehicle_execSetSeatStoragePawn_Parms SetSeatStoragePawn_Parms;
	SetSeatStoragePawn_Parms.SeatIndex = SeatIndex;
	SetSeatStoragePawn_Parms.PawnToSit = PawnToSit;

	this->ProcessEvent ( pFnSetSeatStoragePawn, &SetSeatStoragePawn_Parms, NULL );
};

// Function UTGame.UTVehicle.SetShieldActive
// [0x00020000] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bActive                        ( CPF_Parm )

void AUTVehicle::SetShieldActive ( int SeatIndex, unsigned long bActive )
{
	static UFunction* pFnSetShieldActive = NULL;

	if ( ! pFnSetShieldActive )
		pFnSetShieldActive = (UFunction*) UObject::GObjObjects()->Data[ 48484 ];

	AUTVehicle_execSetShieldActive_Parms SetShieldActive_Parms;
	SetShieldActive_Parms.SeatIndex = SeatIndex;
	SetShieldActive_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetShieldActive, &SetShieldActive_Parms, NULL );
};

// Function UTGame.UTVehicle.OnExitVehicle
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_ExitVehicle*   Action                         ( CPF_Parm )

void AUTVehicle::OnExitVehicle ( class UUTSeqAct_ExitVehicle* Action )
{
	static UFunction* pFnOnExitVehicle = NULL;

	if ( ! pFnOnExitVehicle )
		pFnOnExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 48480 ];

	AUTVehicle_execOnExitVehicle_Parms OnExitVehicle_Parms;
	OnExitVehicle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnExitVehicle, &OnExitVehicle_Parms, NULL );
};

// Function UTGame.UTVehicle.GetSVehicleDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle::GetSVehicleDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetSVehicleDebug = NULL;

	if ( ! pFnGetSVehicleDebug )
		pFnGetSVehicleDebug = (UFunction*) UObject::GObjObjects()->Data[ 48476 ];

	AUTVehicle_execGetSVehicleDebug_Parms GetSVehicleDebug_Parms;

	this->ProcessEvent ( pFnGetSVehicleDebug, &GetSVehicleDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetSVehicleDebug_Parms.DebugInfo, 0xC );
};

// Function UTGame.UTVehicle.SpawnGibVehicle
// [0x00820102] 
// Parameters infos:
// class AUTGib*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )
// class UStaticMesh*             TheMesh                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  bSpinGib                       ( CPF_Parm )
// struct FVector                 ImpulseDirection               ( CPF_Parm )
// class UParticleSystem*         PS_OnBreak                     ( CPF_Parm )
// class UParticleSystem*         PS_Trail                       ( CPF_Parm )

class AUTGib* AUTVehicle::SpawnGibVehicle ( struct FVector SpawnLocation, struct FRotator SpawnRotation, class UStaticMesh* TheMesh, struct FVector HitLocation, unsigned long bSpinGib, struct FVector ImpulseDirection, class UParticleSystem* PS_OnBreak, class UParticleSystem* PS_Trail )
{
	static UFunction* pFnSpawnGibVehicle = NULL;

	if ( ! pFnSpawnGibVehicle )
		pFnSpawnGibVehicle = (UFunction*) UObject::GObjObjects()->Data[ 48456 ];

	AUTVehicle_execSpawnGibVehicle_Parms SpawnGibVehicle_Parms;
	memcpy ( &SpawnGibVehicle_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &SpawnGibVehicle_Parms.SpawnRotation, &SpawnRotation, 0xC );
	SpawnGibVehicle_Parms.TheMesh = TheMesh;
	memcpy ( &SpawnGibVehicle_Parms.HitLocation, &HitLocation, 0xC );
	SpawnGibVehicle_Parms.bSpinGib = bSpinGib;
	memcpy ( &SpawnGibVehicle_Parms.ImpulseDirection, &ImpulseDirection, 0xC );
	SpawnGibVehicle_Parms.PS_OnBreak = PS_OnBreak;
	SpawnGibVehicle_Parms.PS_Trail = PS_Trail;

	this->ProcessEvent ( pFnSpawnGibVehicle, &SpawnGibVehicle_Parms, NULL );

	return SpawnGibVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ApplyRandomMorphDamage
// [0x00020102] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void AUTVehicle::ApplyRandomMorphDamage ( int Amount )
{
	static UFunction* pFnApplyRandomMorphDamage = NULL;

	if ( ! pFnApplyRandomMorphDamage )
		pFnApplyRandomMorphDamage = (UFunction*) UObject::GObjObjects()->Data[ 48449 ];

	AUTVehicle_execApplyRandomMorphDamage_Parms ApplyRandomMorphDamage_Parms;
	ApplyRandomMorphDamage_Parms.Amount = Amount;

	this->ProcessEvent ( pFnApplyRandomMorphDamage, &ApplyRandomMorphDamage_Parms, NULL );
};

// Function UTGame.UTVehicle.ApplyMorphHeal
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void AUTVehicle::eventApplyMorphHeal ( int Amount )
{
	static UFunction* pFnApplyMorphHeal = NULL;

	if ( ! pFnApplyMorphHeal )
		pFnApplyMorphHeal = (UFunction*) UObject::GObjObjects()->Data[ 48442 ];

	AUTVehicle_eventApplyMorphHeal_Parms ApplyMorphHeal_Parms;
	ApplyMorphHeal_Parms.Amount = Amount;

	this->ProcessEvent ( pFnApplyMorphHeal, &ApplyMorphHeal_Parms, NULL );
};

// Function UTGame.UTVehicle.ReceivedHealthChange
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventReceivedHealthChange ( )
{
	static UFunction* pFnReceivedHealthChange = NULL;

	if ( ! pFnReceivedHealthChange )
		pFnReceivedHealthChange = (UFunction*) UObject::GObjObjects()->Data[ 48440 ];

	AUTVehicle_eventReceivedHealthChange_Parms ReceivedHealthChange_Parms;

	this->ProcessEvent ( pFnReceivedHealthChange, &ReceivedHealthChange_Parms, NULL );
};

// Function UTGame.UTVehicle.InitializeMorphs
// [0x00020102] 
// Parameters infos:

void AUTVehicle::InitializeMorphs ( )
{
	static UFunction* pFnInitializeMorphs = NULL;

	if ( ! pFnInitializeMorphs )
		pFnInitializeMorphs = (UFunction*) UObject::GObjObjects()->Data[ 48437 ];

	AUTVehicle_execInitializeMorphs_Parms InitializeMorphs_Parms;

	this->ProcessEvent ( pFnInitializeMorphs, &InitializeMorphs_Parms, NULL );
};

// Function UTGame.UTVehicle.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    Collision                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* Collision )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 48378 ];

	AUTVehicle_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( Collision )
		memcpy ( Collision, &RigidBodyCollision_Parms.Collision, 0x24 );
};

// Function UTGame.UTVehicle.GetCollisionDamageModifier
// [0x00C20002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FRigidBodyContactInfo > ContactInfos                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

float AUTVehicle::GetCollisionDamageModifier ( TArray< struct FRigidBodyContactInfo >* ContactInfos )
{
	static UFunction* pFnGetCollisionDamageModifier = NULL;

	if ( ! pFnGetCollisionDamageModifier )
		pFnGetCollisionDamageModifier = (UFunction*) UObject::GObjObjects()->Data[ 48422 ];

	AUTVehicle_execGetCollisionDamageModifier_Parms GetCollisionDamageModifier_Parms;

	this->ProcessEvent ( pFnGetCollisionDamageModifier, &GetCollisionDamageModifier_Parms, NULL );

	if ( ContactInfos )
		memcpy ( ContactInfos, &GetCollisionDamageModifier_Parms.ContactInfos, 0xC );

	return GetCollisionDamageModifier_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetHealth
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

int AUTVehicle::GetHealth ( int SeatIndex )
{
	static UFunction* pFnGetHealth = NULL;

	if ( ! pFnGetHealth )
		pFnGetHealth = (UFunction*) UObject::GObjObjects()->Data[ 48419 ];

	AUTVehicle_execGetHealth_Parms GetHealth_Parms;
	GetHealth_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetHealth, &GetHealth_Parms, NULL );

	return GetHealth_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.OnPropertyChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   PropName                       ( CPF_Parm )

void AUTVehicle::eventOnPropertyChange ( struct FName PropName )
{
	static UFunction* pFnOnPropertyChange = NULL;

	if ( ! pFnOnPropertyChange )
		pFnOnPropertyChange = (UFunction*) UObject::GObjObjects()->Data[ 48416 ];

	AUTVehicle_eventOnPropertyChange_Parms OnPropertyChange_Parms;
	memcpy ( &OnPropertyChange_Parms.PropName, &PropName, 0x8 );

	this->ProcessEvent ( pFnOnPropertyChange, &OnPropertyChange_Parms, NULL );
};

// Function UTGame.UTVehicle.GetHumanReadableName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTVehicle::GetHumanReadableName ( )
{
	static UFunction* pFnGetHumanReadableName = NULL;

	if ( ! pFnGetHumanReadableName )
		pFnGetHumanReadableName = (UFunction*) UObject::GObjObjects()->Data[ 48414 ];

	AUTVehicle_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

	this->ProcessEvent ( pFnGetHumanReadableName, &GetHumanReadableName_Parms, NULL );

	return GetHumanReadableName_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.OnDriverPhysicsAssetChanged
// [0x00020100] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )

void AUTVehicle::OnDriverPhysicsAssetChanged ( class AUTPawn* UTP )
{
	static UFunction* pFnOnDriverPhysicsAssetChanged = NULL;

	if ( ! pFnOnDriverPhysicsAssetChanged )
		pFnOnDriverPhysicsAssetChanged = (UFunction*) UObject::GObjObjects()->Data[ 48412 ];

	AUTVehicle_execOnDriverPhysicsAssetChanged_Parms OnDriverPhysicsAssetChanged_Parms;
	OnDriverPhysicsAssetChanged_Parms.UTP = UTP;

	this->ProcessEvent ( pFnOnDriverPhysicsAssetChanged, &OnDriverPhysicsAssetChanged_Parms, NULL );
};

// Function UTGame.UTVehicle.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 48409 ];

	AUTVehicle_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function UTGame.UTVehicle.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTVehicle::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 48406 ];

	AUTVehicle_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function UTGame.UTVehicle.CheckDamageSmoke
// [0x00020102] 
// Parameters infos:

void AUTVehicle::CheckDamageSmoke ( )
{
	static UFunction* pFnCheckDamageSmoke = NULL;

	if ( ! pFnCheckDamageSmoke )
		pFnCheckDamageSmoke = (UFunction*) UObject::GObjObjects()->Data[ 48405 ];

	AUTVehicle_execCheckDamageSmoke_Parms CheckDamageSmoke_Parms;

	this->ProcessEvent ( pFnCheckDamageSmoke, &CheckDamageSmoke_Parms, NULL );
};

// Function UTGame.UTVehicle.StopVehicleSounds
// [0x00020102] 
// Parameters infos:

void AUTVehicle::StopVehicleSounds ( )
{
	static UFunction* pFnStopVehicleSounds = NULL;

	if ( ! pFnStopVehicleSounds )
		pFnStopVehicleSounds = (UFunction*) UObject::GObjObjects()->Data[ 48403 ];

	AUTVehicle_execStopVehicleSounds_Parms StopVehicleSounds_Parms;

	this->ProcessEvent ( pFnStopVehicleSounds, &StopVehicleSounds_Parms, NULL );
};

// Function UTGame.UTVehicle.TurretExplosion
// [0x00820102] 
// Parameters infos:

void AUTVehicle::TurretExplosion ( )
{
	static UFunction* pFnTurretExplosion = NULL;

	if ( ! pFnTurretExplosion )
		pFnTurretExplosion = (UFunction*) UObject::GObjObjects()->Data[ 48398 ];

	AUTVehicle_execTurretExplosion_Parms TurretExplosion_Parms;

	this->ProcessEvent ( pFnTurretExplosion, &TurretExplosion_Parms, NULL );
};

// Function UTGame.UTVehicle.RBPenetrationDestroy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventRBPenetrationDestroy ( )
{
	static UFunction* pFnRBPenetrationDestroy = NULL;

	if ( ! pFnRBPenetrationDestroy )
		pFnRBPenetrationDestroy = (UFunction*) UObject::GObjObjects()->Data[ 48310 ];

	AUTVehicle_eventRBPenetrationDestroy_Parms RBPenetrationDestroy_Parms;

	this->ProcessEvent ( pFnRBPenetrationDestroy, &RBPenetrationDestroy_Parms, NULL );
};

// Function UTGame.UTVehicle.ShouldSpawnExplosionLight
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool AUTVehicle::ShouldSpawnExplosionLight ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnShouldSpawnExplosionLight = NULL;

	if ( ! pFnShouldSpawnExplosionLight )
		pFnShouldSpawnExplosionLight = (UFunction*) UObject::GObjObjects()->Data[ 48304 ];

	AUTVehicle_execShouldSpawnExplosionLight_Parms ShouldSpawnExplosionLight_Parms;
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnShouldSpawnExplosionLight, &ShouldSpawnExplosionLight_Parms, NULL );

	return ShouldSpawnExplosionLight_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.SetBurnOut
// [0x00820102] 
// Parameters infos:

void AUTVehicle::SetBurnOut ( )
{
	static UFunction* pFnSetBurnOut = NULL;

	if ( ! pFnSetBurnOut )
		pFnSetBurnOut = (UFunction*) UObject::GObjObjects()->Data[ 48297 ];

	AUTVehicle_execSetBurnOut_Parms SetBurnOut_Parms;

	this->ProcessEvent ( pFnSetBurnOut, &SetBurnOut_Parms, NULL );
};

// Function UTGame.UTVehicle.DisableCollision
// [0x00020102] 
// Parameters infos:

void AUTVehicle::DisableCollision ( )
{
	static UFunction* pFnDisableCollision = NULL;

	if ( ! pFnDisableCollision )
		pFnDisableCollision = (UFunction*) UObject::GObjObjects()->Data[ 48296 ];

	AUTVehicle_execDisableCollision_Parms DisableCollision_Parms;

	this->ProcessEvent ( pFnDisableCollision, &DisableCollision_Parms, NULL );
};

// Function UTGame.UTVehicle.DisableDamageSmoke
// [0x00020102] 
// Parameters infos:

void AUTVehicle::DisableDamageSmoke ( )
{
	static UFunction* pFnDisableDamageSmoke = NULL;

	if ( ! pFnDisableDamageSmoke )
		pFnDisableDamageSmoke = (UFunction*) UObject::GObjObjects()->Data[ 48295 ];

	AUTVehicle_execDisableDamageSmoke_Parms DisableDamageSmoke_Parms;

	this->ProcessEvent ( pFnDisableDamageSmoke, &DisableDamageSmoke_Parms, NULL );
};

// Function UTGame.UTVehicle.TurnOffShadows
// [0x00020102] 
// Parameters infos:

void AUTVehicle::TurnOffShadows ( )
{
	static UFunction* pFnTurnOffShadows = NULL;

	if ( ! pFnTurnOffShadows )
		pFnTurnOffShadows = (UFunction*) UObject::GObjObjects()->Data[ 48294 ];

	AUTVehicle_execTurnOffShadows_Parms TurnOffShadows_Parms;

	this->ProcessEvent ( pFnTurnOffShadows, &TurnOffShadows_Parms, NULL );
};

// Function UTGame.UTVehicle.StartBurnOut
// [0x00020102] 
// Parameters infos:

void AUTVehicle::StartBurnOut ( )
{
	static UFunction* pFnStartBurnOut = NULL;

	if ( ! pFnStartBurnOut )
		pFnStartBurnOut = (UFunction*) UObject::GObjObjects()->Data[ 48291 ];

	AUTVehicle_execStartBurnOut_Parms StartBurnOut_Parms;

	this->ProcessEvent ( pFnStartBurnOut, &StartBurnOut_Parms, NULL );
};

// Function UTGame.UTVehicle.AdjustCameraScale
// [0x00020100] 
// Parameters infos:
// unsigned long                  bMoveCameraIn                  ( CPF_Parm )

void AUTVehicle::AdjustCameraScale ( unsigned long bMoveCameraIn )
{
	static UFunction* pFnAdjustCameraScale = NULL;

	if ( ! pFnAdjustCameraScale )
		pFnAdjustCameraScale = (UFunction*) UObject::GObjObjects()->Data[ 48289 ];

	AUTVehicle_execAdjustCameraScale_Parms AdjustCameraScale_Parms;
	AdjustCameraScale_Parms.bMoveCameraIn = bMoveCameraIn;

	this->ProcessEvent ( pFnAdjustCameraScale, &AdjustCameraScale_Parms, NULL );
};

// Function UTGame.UTVehicle.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void AUTVehicle::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 48262 ];

	AUTVehicle_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function UTGame.UTVehicle.LimitCameraZ
// [0x00820102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          CurrentCamZ                    ( CPF_Parm )
// float                          OriginalCamZ                   ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

float AUTVehicle::LimitCameraZ ( float CurrentCamZ, float OriginalCamZ, int SeatIndex )
{
	static UFunction* pFnLimitCameraZ = NULL;

	if ( ! pFnLimitCameraZ )
		pFnLimitCameraZ = (UFunction*) UObject::GObjObjects()->Data[ 48255 ];

	AUTVehicle_execLimitCameraZ_Parms LimitCameraZ_Parms;
	LimitCameraZ_Parms.CurrentCamZ = CurrentCamZ;
	LimitCameraZ_Parms.OriginalCamZ = OriginalCamZ;
	LimitCameraZ_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnLimitCameraZ, &LimitCameraZ_Parms, NULL );

	return LimitCameraZ_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetCameraStart
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle::GetCameraStart ( int SeatIndex )
{
	static UFunction* pFnGetCameraStart = NULL;

	if ( ! pFnGetCameraStart )
		pFnGetCameraStart = (UFunction*) UObject::GObjObjects()->Data[ 48244 ];

	AUTVehicle_execGetCameraStart_Parms GetCameraStart_Parms;
	GetCameraStart_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraStart, &GetCameraStart_Parms, NULL );

	return GetCameraStart_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetCameraFocus
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle::GetCameraFocus ( int SeatIndex )
{
	static UFunction* pFnGetCameraFocus = NULL;

	if ( ! pFnGetCameraFocus )
		pFnGetCameraFocus = (UFunction*) UObject::GObjObjects()->Data[ 48237 ];

	AUTVehicle_execGetCameraFocus_Parms GetCameraFocus_Parms;
	GetCameraFocus_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraFocus, &GetCameraFocus_Parms, NULL );

	return GetCameraFocus_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.CalcCamera
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTVehicle::CalcCamera ( float DeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 48230 ];

	AUTVehicle_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.FindGoodEndView
// [0x00C20102] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// struct FRotator                GoodRotation                   ( CPF_Parm | CPF_OutParm )

void AUTVehicle::FindGoodEndView ( class APlayerController* PC, struct FRotator* GoodRotation )
{
	static UFunction* pFnFindGoodEndView = NULL;

	if ( ! pFnFindGoodEndView )
		pFnFindGoodEndView = (UFunction*) UObject::GObjObjects()->Data[ 48220 ];

	AUTVehicle_execFindGoodEndView_Parms FindGoodEndView_Parms;
	FindGoodEndView_Parms.PC = PC;

	this->ProcessEvent ( pFnFindGoodEndView, &FindGoodEndView_Parms, NULL );

	if ( GoodRotation )
		memcpy ( GoodRotation, &FindGoodEndView_Parms.GoodRotation, 0xC );
};

// Function UTGame.UTVehicle.VehicleAdjustFlashLocation
// [0x00024102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 NewLocation                    ( CPF_Parm )
// unsigned long                  bClear                         ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::VehicleAdjustFlashLocation ( int SeatIndex, unsigned char FireModeNum, struct FVector NewLocation, unsigned long bClear )
{
	static UFunction* pFnVehicleAdjustFlashLocation = NULL;

	if ( ! pFnVehicleAdjustFlashLocation )
		pFnVehicleAdjustFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 48215 ];

	AUTVehicle_execVehicleAdjustFlashLocation_Parms VehicleAdjustFlashLocation_Parms;
	VehicleAdjustFlashLocation_Parms.SeatIndex = SeatIndex;
	VehicleAdjustFlashLocation_Parms.FireModeNum = FireModeNum;
	memcpy ( &VehicleAdjustFlashLocation_Parms.NewLocation, &NewLocation, 0xC );
	VehicleAdjustFlashLocation_Parms.bClear = bClear;

	this->ProcessEvent ( pFnVehicleAdjustFlashLocation, &VehicleAdjustFlashLocation_Parms, NULL );
};

// Function UTGame.UTVehicle.VehicleAdjustFlashCount
// [0x00024102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// unsigned long                  bClear                         ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::VehicleAdjustFlashCount ( int SeatIndex, unsigned char FireModeNum, unsigned long bClear )
{
	static UFunction* pFnVehicleAdjustFlashCount = NULL;

	if ( ! pFnVehicleAdjustFlashCount )
		pFnVehicleAdjustFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 48211 ];

	AUTVehicle_execVehicleAdjustFlashCount_Parms VehicleAdjustFlashCount_Parms;
	VehicleAdjustFlashCount_Parms.SeatIndex = SeatIndex;
	VehicleAdjustFlashCount_Parms.FireModeNum = FireModeNum;
	VehicleAdjustFlashCount_Parms.bClear = bClear;

	this->ProcessEvent ( pFnVehicleAdjustFlashCount, &VehicleAdjustFlashCount_Parms, NULL );
};

// Function UTGame.UTVehicle.SpawnImpactEmitter
// [0x00420102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// struct FMaterialImpactEffect   ImpactEffect                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle::SpawnImpactEmitter ( struct FVector HitLocation, struct FVector HitNormal, int SeatIndex, struct FMaterialImpactEffect* ImpactEffect )
{
	static UFunction* pFnSpawnImpactEmitter = NULL;

	if ( ! pFnSpawnImpactEmitter )
		pFnSpawnImpactEmitter = (UFunction*) UObject::GObjObjects()->Data[ 48206 ];

	AUTVehicle_execSpawnImpactEmitter_Parms SpawnImpactEmitter_Parms;
	memcpy ( &SpawnImpactEmitter_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnImpactEmitter_Parms.HitNormal, &HitNormal, 0xC );
	SpawnImpactEmitter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSpawnImpactEmitter, &SpawnImpactEmitter_Parms, NULL );

	if ( ImpactEffect )
		memcpy ( ImpactEffect, &SpawnImpactEmitter_Parms.ImpactEffect, 0x30 );
};

// Function UTGame.UTVehicle.VehicleWeaponImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::VehicleWeaponImpactEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponImpactEffects = NULL;

	if ( ! pFnVehicleWeaponImpactEffects )
		pFnVehicleWeaponImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 48188 ];

	AUTVehicle_execVehicleWeaponImpactEffects_Parms VehicleWeaponImpactEffects_Parms;
	memcpy ( &VehicleWeaponImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponImpactEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponImpactEffects, &VehicleWeaponImpactEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.FindWeaponHitNormal
// [0x00420102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 End                            ( CPF_Parm )
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 HitNormal                      ( CPF_Parm | CPF_OutParm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm | CPF_OutParm )

class AActor* AUTVehicle::FindWeaponHitNormal ( struct FVector End, struct FVector Start, struct FVector* HitLocation, struct FVector* HitNormal, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnFindWeaponHitNormal = NULL;

	if ( ! pFnFindWeaponHitNormal )
		pFnFindWeaponHitNormal = (UFunction*) UObject::GObjObjects()->Data[ 48181 ];

	AUTVehicle_execFindWeaponHitNormal_Parms FindWeaponHitNormal_Parms;
	memcpy ( &FindWeaponHitNormal_Parms.End, &End, 0xC );
	memcpy ( &FindWeaponHitNormal_Parms.Start, &Start, 0xC );

	this->ProcessEvent ( pFnFindWeaponHitNormal, &FindWeaponHitNormal_Parms, NULL );

	if ( HitLocation )
		memcpy ( HitLocation, &FindWeaponHitNormal_Parms.HitLocation, 0xC );

	if ( HitNormal )
		memcpy ( HitNormal, &FindWeaponHitNormal_Parms.HitNormal, 0xC );

	if ( HitInfo )
		memcpy ( HitInfo, &FindWeaponHitNormal_Parms.HitInfo, 0x1C );

	return FindWeaponHitNormal_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.VehicleWeaponFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 48178 ];

	AUTVehicle_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.VehicleWeaponStoppedFiring
// [0x00020102] 
// Parameters infos:
// unsigned long                  bViaReplication                ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::VehicleWeaponStoppedFiring ( unsigned long bViaReplication, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponStoppedFiring = NULL;

	if ( ! pFnVehicleWeaponStoppedFiring )
		pFnVehicleWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 48172 ];

	AUTVehicle_execVehicleWeaponStoppedFiring_Parms VehicleWeaponStoppedFiring_Parms;
	VehicleWeaponStoppedFiring_Parms.bViaReplication = bViaReplication;
	VehicleWeaponStoppedFiring_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponStoppedFiring, &VehicleWeaponStoppedFiring_Parms, NULL );
};

// Function UTGame.UTVehicle.WeaponStoppedFiring
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void AUTVehicle::WeaponStoppedFiring ( class AWeapon* InWeapon, unsigned long bViaReplication )
{
	static UFunction* pFnWeaponStoppedFiring = NULL;

	if ( ! pFnWeaponStoppedFiring )
		pFnWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 48169 ];

	AUTVehicle_execWeaponStoppedFiring_Parms WeaponStoppedFiring_Parms;
	WeaponStoppedFiring_Parms.InWeapon = InWeapon;
	WeaponStoppedFiring_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnWeaponStoppedFiring, &WeaponStoppedFiring_Parms, NULL );
};

// Function UTGame.UTVehicle.VehicleWeaponFired
// [0x00020102] 
// Parameters infos:
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::VehicleWeaponFired ( unsigned long bViaReplication, struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFired = NULL;

	if ( ! pFnVehicleWeaponFired )
		pFnVehicleWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 48165 ];

	AUTVehicle_execVehicleWeaponFired_Parms VehicleWeaponFired_Parms;
	VehicleWeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &VehicleWeaponFired_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFired_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFired, &VehicleWeaponFired_Parms, NULL );
};

// Function UTGame.UTVehicle.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 48161 ];

	AUTVehicle_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function UTGame.UTVehicle.CauseMuzzleFlashLight
// [0x00020102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::CauseMuzzleFlashLight ( int SeatIndex )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 48159 ];

	AUTVehicle_execCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;
	CauseMuzzleFlashLight_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function UTGame.UTVehicle.GetWeaponViewAxes
// [0x00420102] 
// Parameters infos:
// class AUTWeapon*               WhichWeapon                    ( CPF_Parm )
// struct FVector                 XAxis                          ( CPF_Parm | CPF_OutParm )
// struct FVector                 YAxis                          ( CPF_Parm | CPF_OutParm )
// struct FVector                 ZAxis                          ( CPF_Parm | CPF_OutParm )

void AUTVehicle::GetWeaponViewAxes ( class AUTWeapon* WhichWeapon, struct FVector* XAxis, struct FVector* YAxis, struct FVector* ZAxis )
{
	static UFunction* pFnGetWeaponViewAxes = NULL;

	if ( ! pFnGetWeaponViewAxes )
		pFnGetWeaponViewAxes = (UFunction*) UObject::GObjObjects()->Data[ 48154 ];

	AUTVehicle_execGetWeaponViewAxes_Parms GetWeaponViewAxes_Parms;
	GetWeaponViewAxes_Parms.WhichWeapon = WhichWeapon;

	this->ProcessEvent ( pFnGetWeaponViewAxes, &GetWeaponViewAxes_Parms, NULL );

	if ( XAxis )
		memcpy ( XAxis, &GetWeaponViewAxes_Parms.XAxis, 0xC );

	if ( YAxis )
		memcpy ( YAxis, &GetWeaponViewAxes_Parms.YAxis, 0xC );

	if ( ZAxis )
		memcpy ( ZAxis, &GetWeaponViewAxes_Parms.ZAxis, 0xC );
};

// Function UTGame.UTVehicle.OverrideEndFire
// [0x00020100] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle::OverrideEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideEndFire = NULL;

	if ( ! pFnOverrideEndFire )
		pFnOverrideEndFire = (UFunction*) UObject::GObjObjects()->Data[ 48151 ];

	AUTVehicle_execOverrideEndFire_Parms OverrideEndFire_Parms;
	OverrideEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideEndFire, &OverrideEndFire_Parms, NULL );

	return OverrideEndFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.OverrideBeginFire
// [0x00020100] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle::OverrideBeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideBeginFire = NULL;

	if ( ! pFnOverrideBeginFire )
		pFnOverrideBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 48148 ];

	AUTVehicle_execOverrideBeginFire_Parms OverrideBeginFire_Parms;
	OverrideBeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideBeginFire, &OverrideBeginFire_Parms, NULL );

	return OverrideBeginFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator AUTVehicle::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 48124 ];

	AUTVehicle_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetPhysicalFireStartLoc
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTWeapon*               ForWeapon                      ( CPF_Parm )

struct FVector AUTVehicle::GetPhysicalFireStartLoc ( class AUTWeapon* ForWeapon )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 48120 ];

	AUTVehicle_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	GetPhysicalFireStartLoc_Parms.ForWeapon = ForWeapon;

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetEffectLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle::GetEffectLocation ( int SeatIndex )
{
	static UFunction* pFnGetEffectLocation = NULL;

	if ( ! pFnGetEffectLocation )
		pFnGetEffectLocation = (UFunction*) UObject::GObjObjects()->Data[ 48116 ];

	AUTVehicle_execGetEffectLocation_Parms GetEffectLocation_Parms;
	GetEffectLocation_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetEffectLocation, &GetEffectLocation_Parms, NULL );

	return GetEffectLocation_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetBarrelLocationAndRotation
// [0x00424902] ( FUNC_Event )
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// struct FVector                 SocketLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                SocketRotation                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void AUTVehicle::eventGetBarrelLocationAndRotation ( int SeatIndex, struct FVector* SocketLocation, struct FRotator* SocketRotation )
{
	static UFunction* pFnGetBarrelLocationAndRotation = NULL;

	if ( ! pFnGetBarrelLocationAndRotation )
		pFnGetBarrelLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 48112 ];

	AUTVehicle_eventGetBarrelLocationAndRotation_Parms GetBarrelLocationAndRotation_Parms;
	GetBarrelLocationAndRotation_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetBarrelLocationAndRotation, &GetBarrelLocationAndRotation_Parms, NULL );

	if ( SocketLocation )
		memcpy ( SocketLocation, &GetBarrelLocationAndRotation_Parms.SocketLocation, 0xC );

	if ( SocketRotation )
		memcpy ( SocketRotation, &GetBarrelLocationAndRotation_Parms.SocketRotation, 0xC );
};

// Function UTGame.UTVehicle.ClearFlashLocation
// [0x00020002] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )

void AUTVehicle::ClearFlashLocation ( class AWeapon* Who )
{
	static UFunction* pFnClearFlashLocation = NULL;

	if ( ! pFnClearFlashLocation )
		pFnClearFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 48109 ];

	AUTVehicle_execClearFlashLocation_Parms ClearFlashLocation_Parms;
	ClearFlashLocation_Parms.Who = Who;

	this->ProcessEvent ( pFnClearFlashLocation, &ClearFlashLocation_Parms, NULL );
};

// Function UTGame.UTVehicle.SetFlashLocation
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 NewLoc                         ( CPF_Parm )

void AUTVehicle::SetFlashLocation ( class AWeapon* Who, unsigned char FireModeNum, struct FVector NewLoc )
{
	static UFunction* pFnSetFlashLocation = NULL;

	if ( ! pFnSetFlashLocation )
		pFnSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 48104 ];

	AUTVehicle_execSetFlashLocation_Parms SetFlashLocation_Parms;
	SetFlashLocation_Parms.Who = Who;
	SetFlashLocation_Parms.FireModeNum = FireModeNum;
	memcpy ( &SetFlashLocation_Parms.NewLoc, &NewLoc, 0xC );

	this->ProcessEvent ( pFnSetFlashLocation, &SetFlashLocation_Parms, NULL );
};

// Function UTGame.UTVehicle.IncrementFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTVehicle::IncrementFlashCount ( class AWeapon* Who, unsigned char FireModeNum )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 48100 ];

	AUTVehicle_execIncrementFlashCount_Parms IncrementFlashCount_Parms;
	IncrementFlashCount_Parms.Who = Who;
	IncrementFlashCount_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function UTGame.UTVehicle.ClearFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )

void AUTVehicle::ClearFlashCount ( class AWeapon* Who )
{
	static UFunction* pFnClearFlashCount = NULL;

	if ( ! pFnClearFlashCount )
		pFnClearFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 48097 ];

	AUTVehicle_execClearFlashCount_Parms ClearFlashCount_Parms;
	ClearFlashCount_Parms.Who = Who;

	this->ProcessEvent ( pFnClearFlashCount, &ClearFlashCount_Parms, NULL );
};

// Function UTGame.UTVehicle.SetFiringMode
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Weap                           ( CPF_Parm )
// unsigned char                  FiringModeNum                  ( CPF_Parm )

void AUTVehicle::SetFiringMode ( class AWeapon* Weap, unsigned char FiringModeNum )
{
	static UFunction* pFnSetFiringMode = NULL;

	if ( ! pFnSetFiringMode )
		pFnSetFiringMode = (UFunction*) UObject::GObjObjects()->Data[ 48094 ];

	AUTVehicle_execSetFiringMode_Parms SetFiringMode_Parms;
	SetFiringMode_Parms.Weap = Weap;
	SetFiringMode_Parms.FiringModeNum = FiringModeNum;

	this->ProcessEvent ( pFnSetFiringMode, &SetFiringMode_Parms, NULL );
};

// Function UTGame.UTVehicle.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTVehicle::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 48091 ];

	AUTVehicle_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function UTGame.UTVehicle.InitializeTurrets
// [0x00820102] 
// Parameters infos:

void AUTVehicle::InitializeTurrets ( )
{
	static UFunction* pFnInitializeTurrets = NULL;

	if ( ! pFnInitializeTurrets )
		pFnInitializeTurrets = (UFunction*) UObject::GObjObjects()->Data[ 48084 ];

	AUTVehicle_execInitializeTurrets_Parms InitializeTurrets_Parms;

	this->ProcessEvent ( pFnInitializeTurrets, &InitializeTurrets_Parms, NULL );
};

// Function UTGame.UTVehicle.PreCacheSeatNames
// [0x00020102] 
// Parameters infos:

void AUTVehicle::PreCacheSeatNames ( )
{
	static UFunction* pFnPreCacheSeatNames = NULL;

	if ( ! pFnPreCacheSeatNames )
		pFnPreCacheSeatNames = (UFunction*) UObject::GObjObjects()->Data[ 48082 ];

	AUTVehicle_execPreCacheSeatNames_Parms PreCacheSeatNames_Parms;

	this->ProcessEvent ( pFnPreCacheSeatNames, &PreCacheSeatNames_Parms, NULL );
};

// Function UTGame.UTVehicle.InitializeSeats
// [0x00020002] 
// Parameters infos:

void AUTVehicle::InitializeSeats ( )
{
	static UFunction* pFnInitializeSeats = NULL;

	if ( ! pFnInitializeSeats )
		pFnInitializeSeats = (UFunction*) UObject::GObjObjects()->Data[ 48078 ];

	AUTVehicle_execInitializeSeats_Parms InitializeSeats_Parms;

	this->ProcessEvent ( pFnInitializeSeats, &InitializeSeats_Parms, NULL );
};

// Function UTGame.UTVehicle.ImportantVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::ImportantVehicle ( )
{
	static UFunction* pFnImportantVehicle = NULL;

	if ( ! pFnImportantVehicle )
		pFnImportantVehicle = (UFunction*) UObject::GObjObjects()->Data[ 48076 ];

	AUTVehicle_execImportantVehicle_Parms ImportantVehicle_Parms;

	this->ProcessEvent ( pFnImportantVehicle, &ImportantVehicle_Parms, NULL );

	return ImportantVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetHomingTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTProjectile*           Seeker                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )

class AActor* AUTVehicle::eventGetHomingTarget ( class AUTProjectile* Seeker, class AController* InstigatedBy )
{
	static UFunction* pFnGetHomingTarget = NULL;

	if ( ! pFnGetHomingTarget )
		pFnGetHomingTarget = (UFunction*) UObject::GObjObjects()->Data[ 48071 ];

	AUTVehicle_eventGetHomingTarget_Parms GetHomingTarget_Parms;
	GetHomingTarget_Parms.Seeker = Seeker;
	GetHomingTarget_Parms.InstigatedBy = InstigatedBy;

	this->ProcessEvent ( pFnGetHomingTarget, &GetHomingTarget_Parms, NULL );

	return GetHomingTarget_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 48059 ];

	AUTVehicle_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTVehicle.NotifyTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

void AUTVehicle::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum, class AActor* DamageCauser )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 48051 ];

	AUTVehicle_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );
	NotifyTakeHit_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function UTGame.UTVehicle.PlayTakeHitEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventPlayTakeHitEffects ( )
{
	static UFunction* pFnPlayTakeHitEffects = NULL;

	if ( ! pFnPlayTakeHitEffects )
		pFnPlayTakeHitEffects = (UFunction*) UObject::GObjObjects()->Data[ 48049 ];

	AUTVehicle_eventPlayTakeHitEffects_Parms PlayTakeHitEffects_Parms;

	this->ProcessEvent ( pFnPlayTakeHitEffects, &PlayTakeHitEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.PlayHit
// [0x00020002] 
// Parameters infos:
// float                          Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void AUTVehicle::PlayHit ( float Damage, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FVector Momentum, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnPlayHit = NULL;

	if ( ! pFnPlayHit )
		pFnPlayHit = (UFunction*) UObject::GObjObjects()->Data[ 48037 ];

	AUTVehicle_execPlayHit_Parms PlayHit_Parms;
	PlayHit_Parms.Damage = Damage;
	PlayHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &PlayHit_Parms.HitLocation, &HitLocation, 0xC );
	PlayHit_Parms.DamageType = DamageType;
	memcpy ( &PlayHit_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &PlayHit_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnPlayHit, &PlayHit_Parms, NULL );
};

// Function UTGame.UTVehicle.StopLinkedEffect
// [0x00880102] 
// Parameters infos:

void AUTVehicle::StopLinkedEffect ( )
{
	static UFunction* pFnStopLinkedEffect = NULL;

	if ( ! pFnStopLinkedEffect )
		pFnStopLinkedEffect = (UFunction*) UObject::GObjObjects()->Data[ 48033 ];

	AUTVehicle_execStopLinkedEffect_Parms StopLinkedEffect_Parms;

	this->ProcessEvent ( pFnStopLinkedEffect, &StopLinkedEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.StartLinkedEffect
// [0x00880102] 
// Parameters infos:

void AUTVehicle::StartLinkedEffect ( )
{
	static UFunction* pFnStartLinkedEffect = NULL;

	if ( ! pFnStartLinkedEffect )
		pFnStartLinkedEffect = (UFunction*) UObject::GObjObjects()->Data[ 48028 ];

	AUTVehicle_execStartLinkedEffect_Parms StartLinkedEffect_Parms;

	this->ProcessEvent ( pFnStartLinkedEffect, &StartLinkedEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.DecrementLinkedToCount
// [0x00020002] 
// Parameters infos:

void AUTVehicle::DecrementLinkedToCount ( )
{
	static UFunction* pFnDecrementLinkedToCount = NULL;

	if ( ! pFnDecrementLinkedToCount )
		pFnDecrementLinkedToCount = (UFunction*) UObject::GObjObjects()->Data[ 48027 ];

	AUTVehicle_execDecrementLinkedToCount_Parms DecrementLinkedToCount_Parms;

	this->ProcessEvent ( pFnDecrementLinkedToCount, &DecrementLinkedToCount_Parms, NULL );
};

// Function UTGame.UTVehicle.IncrementLinkedToCount
// [0x00020002] 
// Parameters infos:

void AUTVehicle::IncrementLinkedToCount ( )
{
	static UFunction* pFnIncrementLinkedToCount = NULL;

	if ( ! pFnIncrementLinkedToCount )
		pFnIncrementLinkedToCount = (UFunction*) UObject::GObjObjects()->Data[ 48026 ];

	AUTVehicle_execIncrementLinkedToCount_Parms IncrementLinkedToCount_Parms;

	this->ProcessEvent ( pFnIncrementLinkedToCount, &IncrementLinkedToCount_Parms, NULL );
};

// Function UTGame.UTVehicle.HealDamage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )
// class AController*             Healer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

bool AUTVehicle::HealDamage ( int Amount, class AController* Healer, class UClass* DamageType )
{
	static UFunction* pFnHealDamage = NULL;

	if ( ! pFnHealDamage )
		pFnHealDamage = (UFunction*) UObject::GObjObjects()->Data[ 48021 ];

	AUTVehicle_execHealDamage_Parms HealDamage_Parms;
	HealDamage_Parms.Amount = Amount;
	HealDamage_Parms.Healer = Healer;
	HealDamage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnHealDamage, &HealDamage_Parms, NULL );

	return HealDamage_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.AllowLinkThroughOwnedActor
// [0x00020100] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  OwnedActor                     ( CPF_Parm )

bool AUTVehicle::AllowLinkThroughOwnedActor ( class AActor* OwnedActor )
{
	static UFunction* pFnAllowLinkThroughOwnedActor = NULL;

	if ( ! pFnAllowLinkThroughOwnedActor )
		pFnAllowLinkThroughOwnedActor = (UFunction*) UObject::GObjObjects()->Data[ 48018 ];

	AUTVehicle_execAllowLinkThroughOwnedActor_Parms AllowLinkThroughOwnedActor_Parms;
	AllowLinkThroughOwnedActor_Parms.OwnedActor = OwnedActor;

	this->ProcessEvent ( pFnAllowLinkThroughOwnedActor, &AllowLinkThroughOwnedActor_Parms, NULL );

	return AllowLinkThroughOwnedActor_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TeamLink
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamNum                        ( CPF_Parm )

bool AUTVehicle::TeamLink ( int TeamNum )
{
	static UFunction* pFnTeamLink = NULL;

	if ( ! pFnTeamLink )
		pFnTeamLink = (UFunction*) UObject::GObjObjects()->Data[ 48015 ];

	AUTVehicle_execTeamLink_Parms TeamLink_Parms;
	TeamLink_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnTeamLink, &TeamLink_Parms, NULL );

	return TeamLink_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.SetReservation
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTVehicle::SetReservation ( class AController* C )
{
	static UFunction* pFnSetReservation = NULL;

	if ( ! pFnSetReservation )
		pFnSetReservation = (UFunction*) UObject::GObjObjects()->Data[ 48013 ];

	AUTVehicle_execSetReservation_Parms SetReservation_Parms;
	SetReservation_Parms.C = C;

	this->ProcessEvent ( pFnSetReservation, &SetReservation_Parms, NULL );
};

// Function UTGame.UTVehicle.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool AUTVehicle::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48010 ];

	AUTVehicle_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.SpokenFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTVehicle::SpokenFor ( class AController* C )
{
	static UFunction* pFnSpokenFor = NULL;

	if ( ! pFnSpokenFor )
		pFnSpokenFor = (UFunction*) UObject::GObjObjects()->Data[ 48006 ];

	AUTVehicle_execSpokenFor_Parms SpokenFor_Parms;
	SpokenFor_Parms.C = C;

	this->ProcessEvent ( pFnSpokenFor, &SpokenFor_Parms, NULL );

	return SpokenFor_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ReservationCostMultiplier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

float AUTVehicle::ReservationCostMultiplier ( class APawn* P )
{
	static UFunction* pFnReservationCostMultiplier = NULL;

	if ( ! pFnReservationCostMultiplier )
		pFnReservationCostMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 48003 ];

	AUTVehicle_execReservationCostMultiplier_Parms ReservationCostMultiplier_Parms;
	ReservationCostMultiplier_Parms.P = P;

	this->ProcessEvent ( pFnReservationCostMultiplier, &ReservationCostMultiplier_Parms, NULL );

	return ReservationCostMultiplier_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTSquadAI*              S                              ( CPF_Parm )
// int                            TeamIndex                      ( CPF_Parm )
// class AActor*                  Objective                      ( CPF_Parm )

float AUTVehicle::BotDesireability ( class AUTSquadAI* S, int TeamIndex, class AActor* Objective )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 47996 ];

	AUTVehicle_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.S = S;
	BotDesireability_Parms.TeamIndex = TeamIndex;
	BotDesireability_Parms.Objective = Objective;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.OpenPositionFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle::OpenPositionFor ( class APawn* P )
{
	static UFunction* pFnOpenPositionFor = NULL;

	if ( ! pFnOpenPositionFor )
		pFnOpenPositionFor = (UFunction*) UObject::GObjObjects()->Data[ 47990 ];

	AUTVehicle_execOpenPositionFor_Parms OpenPositionFor_Parms;
	OpenPositionFor_Parms.P = P;

	this->ProcessEvent ( pFnOpenPositionFor, &OpenPositionFor_Parms, NULL );

	return OpenPositionFor_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.Occupied
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::Occupied ( )
{
	static UFunction* pFnOccupied = NULL;

	if ( ! pFnOccupied )
		pFnOccupied = (UFunction*) UObject::GObjObjects()->Data[ 47987 ];

	AUTVehicle_execOccupied_Parms Occupied_Parms;

	this->ProcessEvent ( pFnOccupied, &Occupied_Parms, NULL );

	return Occupied_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.CheckReset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventCheckReset ( )
{
	static UFunction* pFnCheckReset = NULL;

	if ( ! pFnCheckReset )
		pFnCheckReset = (UFunction*) UObject::GObjObjects()->Data[ 47984 ];

	AUTVehicle_eventCheckReset_Parms CheckReset_Parms;

	this->ProcessEvent ( pFnCheckReset, &CheckReset_Parms, NULL );
};

// Function UTGame.UTVehicle.PassengerLeave
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::PassengerLeave ( int SeatIndex )
{
	static UFunction* pFnPassengerLeave = NULL;

	if ( ! pFnPassengerLeave )
		pFnPassengerLeave = (UFunction*) UObject::GObjObjects()->Data[ 47982 ];

	AUTVehicle_execPassengerLeave_Parms PassengerLeave_Parms;
	PassengerLeave_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerLeave, &PassengerLeave_Parms, NULL );
};

// Function UTGame.UTVehicle.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool AUTVehicle::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 47942 ];

	AUTVehicle_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.PassengerEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool AUTVehicle::PassengerEnter ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnPassengerEnter = NULL;

	if ( ! pFnPassengerEnter )
		pFnPassengerEnter = (UFunction*) UObject::GObjObjects()->Data[ 47975 ];

	AUTVehicle_execPassengerEnter_Parms PassengerEnter_Parms;
	PassengerEnter_Parms.P = P;
	PassengerEnter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerEnter, &PassengerEnter_Parms, NULL );

	return PassengerEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetFirstAvailableSeat
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTVehicle::GetFirstAvailableSeat ( )
{
	static UFunction* pFnGetFirstAvailableSeat = NULL;

	if ( ! pFnGetFirstAvailableSeat )
		pFnGetFirstAvailableSeat = (UFunction*) UObject::GObjObjects()->Data[ 47972 ];

	AUTVehicle_execGetFirstAvailableSeat_Parms GetFirstAvailableSeat_Parms;

	this->ProcessEvent ( pFnGetFirstAvailableSeat, &GetFirstAvailableSeat_Parms, NULL );

	return GetFirstAvailableSeat_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.DriverLeft
// [0x00020002] 
// Parameters infos:

void AUTVehicle::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 47969 ];

	AUTVehicle_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function UTGame.UTVehicle.AttachFlag
// [0x00020102] 
// Parameters infos:
// class AUTCarriedObject*        FlagActor                      ( CPF_Parm )
// class APawn*                   NewDriver                      ( CPF_Parm )

void AUTVehicle::AttachFlag ( class AUTCarriedObject* FlagActor, class APawn* NewDriver )
{
	static UFunction* pFnAttachFlag = NULL;

	if ( ! pFnAttachFlag )
		pFnAttachFlag = (UFunction*) UObject::GObjObjects()->Data[ 47966 ];

	AUTVehicle_execAttachFlag_Parms AttachFlag_Parms;
	AttachFlag_Parms.FlagActor = FlagActor;
	AttachFlag_Parms.NewDriver = NewDriver;

	this->ProcessEvent ( pFnAttachFlag, &AttachFlag_Parms, NULL );
};

// Function UTGame.UTVehicle.HoldGameObject
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKCarriedObject*       GameObj                        ( CPF_Parm )

void AUTVehicle::eventHoldGameObject ( class AUDKCarriedObject* GameObj )
{
	static UFunction* pFnHoldGameObject = NULL;

	if ( ! pFnHoldGameObject )
		pFnHoldGameObject = (UFunction*) UObject::GObjObjects()->Data[ 47962 ];

	AUTVehicle_eventHoldGameObject_Parms HoldGameObject_Parms;
	HoldGameObject_Parms.GameObj = GameObj;

	this->ProcessEvent ( pFnHoldGameObject, &HoldGameObject_Parms, NULL );
};

// Function UTGame.UTVehicle.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 47957 ];

	AUTVehicle_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.HandleEnteringFlag
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* EnteringPRI                    ( CPF_Parm )

void AUTVehicle::HandleEnteringFlag ( class AUTPlayerReplicationInfo* EnteringPRI )
{
	static UFunction* pFnHandleEnteringFlag = NULL;

	if ( ! pFnHandleEnteringFlag )
		pFnHandleEnteringFlag = (UFunction*) UObject::GObjObjects()->Data[ 47953 ];

	AUTVehicle_execHandleEnteringFlag_Parms HandleEnteringFlag_Parms;
	HandleEnteringFlag_Parms.EnteringPRI = EnteringPRI;

	this->ProcessEvent ( pFnHandleEnteringFlag, &HandleEnteringFlag_Parms, NULL );
};

// Function UTGame.UTVehicle.GetMoveTargetFor
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

class AUTVehicle* AUTVehicle::GetMoveTargetFor ( class APawn* P )
{
	static UFunction* pFnGetMoveTargetFor = NULL;

	if ( ! pFnGetMoveTargetFor )
		pFnGetMoveTargetFor = (UFunction*) UObject::GObjObjects()->Data[ 47950 ];

	AUTVehicle_execGetMoveTargetFor_Parms GetMoveTargetFor_Parms;
	GetMoveTargetFor_Parms.P = P;

	this->ProcessEvent ( pFnGetMoveTargetFor, &GetMoveTargetFor_Parms, NULL );

	return GetMoveTargetFor_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.NumPassengers
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTVehicle::NumPassengers ( )
{
	static UFunction* pFnNumPassengers = NULL;

	if ( ! pFnNumPassengers )
		pFnNumPassengers = (UFunction*) UObject::GObjObjects()->Data[ 47946 ];

	AUTVehicle_execNumPassengers_Parms NumPassengers_Parms;

	this->ProcessEvent ( pFnNumPassengers, &NumPassengers_Parms, NULL );

	return NumPassengers_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.UpdateControllerOnPossess
// [0x00020000] 
// Parameters infos:
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTVehicle::UpdateControllerOnPossess ( unsigned long bVehicleTransition )
{
	static UFunction* pFnUpdateControllerOnPossess = NULL;

	if ( ! pFnUpdateControllerOnPossess )
		pFnUpdateControllerOnPossess = (UFunction*) UObject::GObjObjects()->Data[ 47944 ];

	AUTVehicle_execUpdateControllerOnPossess_Parms UpdateControllerOnPossess_Parms;
	UpdateControllerOnPossess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnUpdateControllerOnPossess, &UpdateControllerOnPossess_Parms, NULL );
};

// Function UTGame.UTVehicle.PlayHorn
// [0x00020002] 
// Parameters infos:

void AUTVehicle::PlayHorn ( )
{
	static UFunction* pFnPlayHorn = NULL;

	if ( ! pFnPlayHorn )
		pFnPlayHorn = (UFunction*) UObject::GObjObjects()->Data[ 47935 ];

	AUTVehicle_execPlayHorn_Parms PlayHorn_Parms;

	this->ProcessEvent ( pFnPlayHorn, &PlayHorn_Parms, NULL );
};

// Function UTGame.UTVehicle.CheckTurretPitchLimit
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            NeededPitch                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool AUTVehicle::CheckTurretPitchLimit ( int NeededPitch, int SeatIndex )
{
	static UFunction* pFnCheckTurretPitchLimit = NULL;

	if ( ! pFnCheckTurretPitchLimit )
		pFnCheckTurretPitchLimit = (UFunction*) UObject::GObjObjects()->Data[ 47930 ];

	AUTVehicle_execCheckTurretPitchLimit_Parms CheckTurretPitchLimit_Parms;
	CheckTurretPitchLimit_Parms.NeededPitch = NeededPitch;
	CheckTurretPitchLimit_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnCheckTurretPitchLimit, &CheckTurretPitchLimit_Parms, NULL );

	return CheckTurretPitchLimit_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 47924 ];

	AUTVehicle_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.LockOnWarning
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKProjectile*          IncomingMissile                ( CPF_Parm )

void AUTVehicle::eventLockOnWarning ( class AUDKProjectile* IncomingMissile )
{
	static UFunction* pFnLockOnWarning = NULL;

	if ( ! pFnLockOnWarning )
		pFnLockOnWarning = (UFunction*) UObject::GObjObjects()->Data[ 47922 ];

	AUTVehicle_eventLockOnWarning_Parms LockOnWarning_Parms;
	LockOnWarning_Parms.IncomingMissile = IncomingMissile;

	this->ProcessEvent ( pFnLockOnWarning, &LockOnWarning_Parms, NULL );
};

// Function UTGame.UTVehicle.SendLockOnMessage
// [0x00020102] 
// Parameters infos:
// int                            Switch                         ( CPF_Parm )

void AUTVehicle::SendLockOnMessage ( int Switch )
{
	static UFunction* pFnSendLockOnMessage = NULL;

	if ( ! pFnSendLockOnMessage )
		pFnSendLockOnMessage = (UFunction*) UObject::GObjObjects()->Data[ 47917 ];

	AUTVehicle_execSendLockOnMessage_Parms SendLockOnMessage_Parms;
	SendLockOnMessage_Parms.Switch = Switch;

	this->ProcessEvent ( pFnSendLockOnMessage, &SendLockOnMessage_Parms, NULL );
};

// Function UTGame.UTVehicle.ShootMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void AUTVehicle::ShootMissile ( class AProjectile* P )
{
	static UFunction* pFnShootMissile = NULL;

	if ( ! pFnShootMissile )
		pFnShootMissile = (UFunction*) UObject::GObjObjects()->Data[ 47915 ];

	AUTVehicle_execShootMissile_Parms ShootMissile_Parms;
	ShootMissile_Parms.P = P;

	this->ProcessEvent ( pFnShootMissile, &ShootMissile_Parms, NULL );
};

// Function UTGame.UTVehicle.IncomingMissile
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void AUTVehicle::eventIncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 47912 ];

	AUTVehicle_eventIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function UTGame.UTVehicle.Dodge
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool AUTVehicle::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 47909 ];

	AUTVehicle_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TeamChanged_VehicleEffects
// [0x00020102] 
// Parameters infos:

void AUTVehicle::TeamChanged_VehicleEffects ( )
{
	static UFunction* pFnTeamChanged_VehicleEffects = NULL;

	if ( ! pFnTeamChanged_VehicleEffects )
		pFnTeamChanged_VehicleEffects = (UFunction*) UObject::GObjObjects()->Data[ 47904 ];

	AUTVehicle_execTeamChanged_VehicleEffects_Parms TeamChanged_VehicleEffects_Parms;

	this->ProcessEvent ( pFnTeamChanged_VehicleEffects, &TeamChanged_VehicleEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.TeamChanged
// [0x00020102] 
// Parameters infos:

void AUTVehicle::TeamChanged ( )
{
	static UFunction* pFnTeamChanged = NULL;

	if ( ! pFnTeamChanged )
		pFnTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 47902 ];

	AUTVehicle_execTeamChanged_Parms TeamChanged_Parms;

	this->ProcessEvent ( pFnTeamChanged, &TeamChanged_Parms, NULL );
};

// Function UTGame.UTVehicle.SetTeamNum
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void AUTVehicle::eventSetTeamNum ( unsigned char T )
{
	static UFunction* pFnSetTeamNum = NULL;

	if ( ! pFnSetTeamNum )
		pFnSetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 47900 ];

	AUTVehicle_eventSetTeamNum_Parms SetTeamNum_Parms;
	SetTeamNum_Parms.T = T;

	this->ProcessEvent ( pFnSetTeamNum, &SetTeamNum_Parms, NULL );
};

// Function UTGame.UTVehicle.PostRenderPassengerBeacon
// [0x00820102] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FLinearColor            TeamColor                      ( CPF_Parm )
// struct FColor                  TextColor                      ( CPF_Parm )
// class AUTWeapon*               Weap                           ( CPF_Parm )
// class APlayerReplicationInfo*  InPassengerPRI                 ( CPF_Parm )
// struct FVector                 InPassengerTeamBeaconOffset    ( CPF_Parm )

void AUTVehicle::PostRenderPassengerBeacon ( class APlayerController* PC, class UCanvas* Canvas, struct FLinearColor TeamColor, struct FColor TextColor, class AUTWeapon* Weap, class APlayerReplicationInfo* InPassengerPRI, struct FVector InPassengerTeamBeaconOffset )
{
	static UFunction* pFnPostRenderPassengerBeacon = NULL;

	if ( ! pFnPostRenderPassengerBeacon )
		pFnPostRenderPassengerBeacon = (UFunction*) UObject::GObjObjects()->Data[ 47885 ];

	AUTVehicle_execPostRenderPassengerBeacon_Parms PostRenderPassengerBeacon_Parms;
	PostRenderPassengerBeacon_Parms.PC = PC;
	PostRenderPassengerBeacon_Parms.Canvas = Canvas;
	memcpy ( &PostRenderPassengerBeacon_Parms.TeamColor, &TeamColor, 0x10 );
	memcpy ( &PostRenderPassengerBeacon_Parms.TextColor, &TextColor, 0x4 );
	PostRenderPassengerBeacon_Parms.Weap = Weap;
	PostRenderPassengerBeacon_Parms.InPassengerPRI = InPassengerPRI;
	memcpy ( &PostRenderPassengerBeacon_Parms.InPassengerTeamBeaconOffset, &InPassengerTeamBeaconOffset, 0xC );

	this->ProcessEvent ( pFnPostRenderPassengerBeacon, &PostRenderPassengerBeacon_Parms, NULL );
};

// Function UTGame.UTVehicle.RenderPassengerBeacons
// [0x00020102] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FLinearColor            TeamColor                      ( CPF_Parm )
// struct FColor                  TextColor                      ( CPF_Parm )
// class AUTWeapon*               Weap                           ( CPF_Parm )

void AUTVehicle::RenderPassengerBeacons ( class APlayerController* PC, class UCanvas* Canvas, struct FLinearColor TeamColor, struct FColor TextColor, class AUTWeapon* Weap )
{
	static UFunction* pFnRenderPassengerBeacons = NULL;

	if ( ! pFnRenderPassengerBeacons )
		pFnRenderPassengerBeacons = (UFunction*) UObject::GObjObjects()->Data[ 47879 ];

	AUTVehicle_execRenderPassengerBeacons_Parms RenderPassengerBeacons_Parms;
	RenderPassengerBeacons_Parms.PC = PC;
	RenderPassengerBeacons_Parms.Canvas = Canvas;
	memcpy ( &RenderPassengerBeacons_Parms.TeamColor, &TeamColor, 0x10 );
	memcpy ( &RenderPassengerBeacons_Parms.TextColor, &TextColor, 0x4 );
	RenderPassengerBeacons_Parms.Weap = Weap;

	this->ProcessEvent ( pFnRenderPassengerBeacons, &RenderPassengerBeacons_Parms, NULL );
};

// Function UTGame.UTVehicle.GetDisplayedHealth
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle::GetDisplayedHealth ( )
{
	static UFunction* pFnGetDisplayedHealth = NULL;

	if ( ! pFnGetDisplayedHealth )
		pFnGetDisplayedHealth = (UFunction*) UObject::GObjObjects()->Data[ 47877 ];

	AUTVehicle_execGetDisplayedHealth_Parms GetDisplayedHealth_Parms;

	this->ProcessEvent ( pFnGetDisplayedHealth, &GetDisplayedHealth_Parms, NULL );

	return GetDisplayedHealth_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void AUTVehicle::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 47847 ];

	AUTVehicle_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function UTGame.UTVehicle.ShouldShowUseable
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )

bool AUTVehicle::ShouldShowUseable ( class APlayerController* PC, float Dist )
{
	static UFunction* pFnShouldShowUseable = NULL;

	if ( ! pFnShouldShowUseable )
		pFnShouldShowUseable = (UFunction*) UObject::GObjObjects()->Data[ 47842 ];

	AUTVehicle_execShouldShowUseable_Parms ShouldShowUseable_Parms;
	ShouldShowUseable_Parms.PC = PC;
	ShouldShowUseable_Parms.Dist = Dist;

	this->ProcessEvent ( pFnShouldShowUseable, &ShouldShowUseable_Parms, NULL );

	return ShouldShowUseable_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.VehicleLocked
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTVehicle::VehicleLocked ( class APawn* P )
{
	static UFunction* pFnVehicleLocked = NULL;

	if ( ! pFnVehicleLocked )
		pFnVehicleLocked = (UFunction*) UObject::GObjObjects()->Data[ 47838 ];

	AUTVehicle_execVehicleLocked_Parms VehicleLocked_Parms;
	VehicleLocked_Parms.P = P;

	this->ProcessEvent ( pFnVehicleLocked, &VehicleLocked_Parms, NULL );
};

// Function UTGame.UTVehicle.KickOutBot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::KickOutBot ( )
{
	static UFunction* pFnKickOutBot = NULL;

	if ( ! pFnKickOutBot )
		pFnKickOutBot = (UFunction*) UObject::GObjObjects()->Data[ 47834 ];

	AUTVehicle_execKickOutBot_Parms KickOutBot_Parms;

	this->ProcessEvent ( pFnKickOutBot, &KickOutBot_Parms, NULL );

	return KickOutBot_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TryToDrive
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle::TryToDrive ( class APawn* P )
{
	static UFunction* pFnTryToDrive = NULL;

	if ( ! pFnTryToDrive )
		pFnTryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 43841 ];

	AUTVehicle_execTryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;

	this->ProcessEvent ( pFnTryToDrive, &TryToDrive_Parms, NULL );

	return TryToDrive_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.CanEnterVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle::CanEnterVehicle ( class APawn* P )
{
	static UFunction* pFnCanEnterVehicle = NULL;

	if ( ! pFnCanEnterVehicle )
		pFnCanEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 47821 ];

	AUTVehicle_execCanEnterVehicle_Parms CanEnterVehicle_Parms;
	CanEnterVehicle_Parms.P = P;

	this->ProcessEvent ( pFnCanEnterVehicle, &CanEnterVehicle_Parms, NULL );

	return CanEnterVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetSeatPRI
// [0x00020102] 
// Parameters infos:
// class APlayerReplicationInfo*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatNum                        ( CPF_Parm )

class APlayerReplicationInfo* AUTVehicle::GetSeatPRI ( int SeatNum )
{
	static UFunction* pFnGetSeatPRI = NULL;

	if ( ! pFnGetSeatPRI )
		pFnGetSeatPRI = (UFunction*) UObject::GObjObjects()->Data[ 47818 ];

	AUTVehicle_execGetSeatPRI_Parms GetSeatPRI_Parms;
	GetSeatPRI_Parms.SeatNum = SeatNum;

	this->ProcessEvent ( pFnGetSeatPRI, &GetSeatPRI_Parms, NULL );

	return GetSeatPRI_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.InCustomEntryRadius
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle::InCustomEntryRadius ( class APawn* P )
{
	static UFunction* pFnInCustomEntryRadius = NULL;

	if ( ! pFnInCustomEntryRadius )
		pFnInCustomEntryRadius = (UFunction*) UObject::GObjObjects()->Data[ 43863 ];

	AUTVehicle_execInCustomEntryRadius_Parms InCustomEntryRadius_Parms;
	InCustomEntryRadius_Parms.P = P;

	this->ProcessEvent ( pFnInCustomEntryRadius, &InCustomEntryRadius_Parms, NULL );

	return InCustomEntryRadius_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void AUTVehicle::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 47815 ];

	AUTVehicle_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function UTGame.UTVehicle.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool AUTVehicle::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 47804 ];

	AUTVehicle_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetCollisionDamageInstigator
// [0x00020002] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AController* AUTVehicle::GetCollisionDamageInstigator ( )
{
	static UFunction* pFnGetCollisionDamageInstigator = NULL;

	if ( ! pFnGetCollisionDamageInstigator )
		pFnGetCollisionDamageInstigator = (UFunction*) UObject::GObjObjects()->Data[ 47802 ];

	AUTVehicle_execGetCollisionDamageInstigator_Parms GetCollisionDamageInstigator_Parms;

	this->ProcessEvent ( pFnGetCollisionDamageInstigator, &GetCollisionDamageInstigator_Parms, NULL );

	return GetCollisionDamageInstigator_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TornOff
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventTornOff ( )
{
	static UFunction* pFnTornOff = NULL;

	if ( ! pFnTornOff )
		pFnTornOff = (UFunction*) UObject::GObjObjects()->Data[ 47801 ];

	AUTVehicle_eventTornOff_Parms TornOff_Parms;

	this->ProcessEvent ( pFnTornOff, &TornOff_Parms, NULL );
};

// Function UTGame.UTVehicle.ChangeSeat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             ControllerToMove               ( CPF_Parm )
// int                            RequestedSeat                  ( CPF_Parm )

bool AUTVehicle::ChangeSeat ( class AController* ControllerToMove, int RequestedSeat )
{
	static UFunction* pFnChangeSeat = NULL;

	if ( ! pFnChangeSeat )
		pFnChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 47793 ];

	AUTVehicle_execChangeSeat_Parms ChangeSeat_Parms;
	ChangeSeat_Parms.ControllerToMove = ControllerToMove;
	ChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnChangeSeat, &ChangeSeat_Parms, NULL );

	return ChangeSeat_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.HasPriority
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             first                          ( CPF_Parm )
// class AController*             second                         ( CPF_Parm )

bool AUTVehicle::HasPriority ( class AController* first, class AController* second )
{
	static UFunction* pFnHasPriority = NULL;

	if ( ! pFnHasPriority )
		pFnHasPriority = (UFunction*) UObject::GObjObjects()->Data[ 47789 ];

	AUTVehicle_execHasPriority_Parms HasPriority_Parms;
	HasPriority_Parms.first = first;
	HasPriority_Parms.second = second;

	this->ProcessEvent ( pFnHasPriority, &HasPriority_Parms, NULL );

	return HasPriority_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ServerChangeSeat
// [0x002200C2] 
// Parameters infos:
// int                            RequestedSeat                  ( CPF_Parm )

void AUTVehicle::ServerChangeSeat ( int RequestedSeat )
{
	static UFunction* pFnServerChangeSeat = NULL;

	if ( ! pFnServerChangeSeat )
		pFnServerChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 47787 ];

	AUTVehicle_execServerChangeSeat_Parms ServerChangeSeat_Parms;
	ServerChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnServerChangeSeat, &ServerChangeSeat_Parms, NULL );
};

// Function UTGame.UTVehicle.ServerAdjacentSeat
// [0x002200C2] 
// Parameters infos:
// int                            Direction                      ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

void AUTVehicle::ServerAdjacentSeat ( int Direction, class AController* C )
{
	static UFunction* pFnServerAdjacentSeat = NULL;

	if ( ! pFnServerAdjacentSeat )
		pFnServerAdjacentSeat = (UFunction*) UObject::GObjObjects()->Data[ 47782 ];

	AUTVehicle_execServerAdjacentSeat_Parms ServerAdjacentSeat_Parms;
	ServerAdjacentSeat_Parms.Direction = Direction;
	ServerAdjacentSeat_Parms.C = C;

	this->ProcessEvent ( pFnServerAdjacentSeat, &ServerAdjacentSeat_Parms, NULL );
};

// Function UTGame.UTVehicle.GetControllerForSeatIndex
// [0x00020002] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

class AController* AUTVehicle::GetControllerForSeatIndex ( int SeatIndex )
{
	static UFunction* pFnGetControllerForSeatIndex = NULL;

	if ( ! pFnGetControllerForSeatIndex )
		pFnGetControllerForSeatIndex = (UFunction*) UObject::GObjObjects()->Data[ 47779 ];

	AUTVehicle_execGetControllerForSeatIndex_Parms GetControllerForSeatIndex_Parms;
	GetControllerForSeatIndex_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetControllerForSeatIndex, &GetControllerForSeatIndex_Parms, NULL );

	return GetControllerForSeatIndex_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetSeatIndexForController
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             ControllerToMove               ( CPF_Parm )

int AUTVehicle::GetSeatIndexForController ( class AController* ControllerToMove )
{
	static UFunction* pFnGetSeatIndexForController = NULL;

	if ( ! pFnGetSeatIndexForController )
		pFnGetSeatIndexForController = (UFunction*) UObject::GObjObjects()->Data[ 47775 ];

	AUTVehicle_execGetSeatIndexForController_Parms GetSeatIndexForController_Parms;
	GetSeatIndexForController_Parms.ControllerToMove = ControllerToMove;

	this->ProcessEvent ( pFnGetSeatIndexForController, &GetSeatIndexForController_Parms, NULL );

	return GetSeatIndexForController_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.AnySeatAvailable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::AnySeatAvailable ( )
{
	static UFunction* pFnAnySeatAvailable = NULL;

	if ( ! pFnAnySeatAvailable )
		pFnAnySeatAvailable = (UFunction*) UObject::GObjObjects()->Data[ 47772 ];

	AUTVehicle_execAnySeatAvailable_Parms AnySeatAvailable_Parms;

	this->ProcessEvent ( pFnAnySeatAvailable, &AnySeatAvailable_Parms, NULL );

	return AnySeatAvailable_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.SeatAvailable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

bool AUTVehicle::SeatAvailable ( int SeatIndex )
{
	static UFunction* pFnSeatAvailable = NULL;

	if ( ! pFnSeatAvailable )
		pFnSeatAvailable = (UFunction*) UObject::GObjObjects()->Data[ 47769 ];

	AUTVehicle_execSeatAvailable_Parms SeatAvailable_Parms;
	SeatAvailable_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSeatAvailable, &SeatAvailable_Parms, NULL );

	return SeatAvailable_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.OnAnimEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void AUTVehicle::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 47765 ];

	AUTVehicle_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function UTGame.UTVehicle.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void AUTVehicle::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 47764 ];

	AUTVehicle_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function UTGame.UTVehicle.SetKeyVehicle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventSetKeyVehicle ( )
{
	static UFunction* pFnSetKeyVehicle = NULL;

	if ( ! pFnSetKeyVehicle )
		pFnSetKeyVehicle = (UFunction*) UObject::GObjObjects()->Data[ 47763 ];

	AUTVehicle_eventSetKeyVehicle_Parms SetKeyVehicle_Parms;

	this->ProcessEvent ( pFnSetKeyVehicle, &SetKeyVehicle_Parms, NULL );
};

// Function UTGame.UTVehicle.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTVehicle::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 47759 ];

	AUTVehicle_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTVehicle.WeaponRotationChanged
// [0x00020102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle::WeaponRotationChanged ( int SeatIndex )
{
	static UFunction* pFnWeaponRotationChanged = NULL;

	if ( ! pFnWeaponRotationChanged )
		pFnWeaponRotationChanged = (UFunction*) UObject::GObjObjects()->Data[ 47756 ];

	AUTVehicle_execWeaponRotationChanged_Parms WeaponRotationChanged_Parms;
	WeaponRotationChanged_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnWeaponRotationChanged, &WeaponRotationChanged_Parms, NULL );
};

// Function UTGame.UTVehicle.GetViewRotation
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTVehicle::eventGetViewRotation ( )
{
	static UFunction* pFnGetViewRotation = NULL;

	if ( ! pFnGetViewRotation )
		pFnGetViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 47754 ];

	AUTVehicle_eventGetViewRotation_Parms GetViewRotation_Parms;

	this->ProcessEvent ( pFnGetViewRotation, &GetViewRotation_Parms, NULL );

	return GetViewRotation_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 47752 ];

	AUTVehicle_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.GetClampedViewRotation
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTVehicle::GetClampedViewRotation ( )
{
	static UFunction* pFnGetClampedViewRotation = NULL;

	if ( ! pFnGetClampedViewRotation )
		pFnGetClampedViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 47743 ];

	AUTVehicle_execGetClampedViewRotation_Parms GetClampedViewRotation_Parms;

	this->ProcessEvent ( pFnGetClampedViewRotation, &GetClampedViewRotation_Parms, NULL );

	return GetClampedViewRotation_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void AUTVehicle::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 47736 ];

	AUTVehicle_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function UTGame.UTVehicle.ServerSetConsoleTurning
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bNewConsoleTurning             ( CPF_Parm )

void AUTVehicle::ServerSetConsoleTurning ( unsigned long bNewConsoleTurning )
{
	static UFunction* pFnServerSetConsoleTurning = NULL;

	if ( ! pFnServerSetConsoleTurning )
		pFnServerSetConsoleTurning = (UFunction*) UObject::GObjObjects()->Data[ 47734 ];

	AUTVehicle_execServerSetConsoleTurning_Parms ServerSetConsoleTurning_Parms;
	ServerSetConsoleTurning_Parms.bNewConsoleTurning = bNewConsoleTurning;

	this->ProcessEvent ( pFnServerSetConsoleTurning, &ServerSetConsoleTurning_Parms, NULL );
};

// Function UTGame.UTVehicle.GetSeatIndexFromPrefix
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Prefix                         ( CPF_Parm | CPF_NeedCtorLink )

int AUTVehicle::GetSeatIndexFromPrefix ( struct FString Prefix )
{
	static UFunction* pFnGetSeatIndexFromPrefix = NULL;

	if ( ! pFnGetSeatIndexFromPrefix )
		pFnGetSeatIndexFromPrefix = (UFunction*) UObject::GObjObjects()->Data[ 47730 ];

	AUTVehicle_execGetSeatIndexFromPrefix_Parms GetSeatIndexFromPrefix_Parms;
	memcpy ( &GetSeatIndexFromPrefix_Parms.Prefix, &Prefix, 0xC );

	this->ProcessEvent ( pFnGetSeatIndexFromPrefix, &GetSeatIndexFromPrefix_Parms, NULL );

	return GetSeatIndexFromPrefix_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.TakeFireDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventTakeFireDamage ( )
{
	static UFunction* pFnTakeFireDamage = NULL;

	if ( ! pFnTakeFireDamage )
		pFnTakeFireDamage = (UFunction*) UObject::GObjObjects()->Data[ 47728 ];

	AUTVehicle_eventTakeFireDamage_Parms TakeFireDamage_Parms;

	this->ProcessEvent ( pFnTakeFireDamage, &TakeFireDamage_Parms, NULL );
};

// Function UTGame.UTVehicle.EnableVehicle
// [0x00020102] 
// Parameters infos:

void AUTVehicle::EnableVehicle ( )
{
	static UFunction* pFnEnableVehicle = NULL;

	if ( ! pFnEnableVehicle )
		pFnEnableVehicle = (UFunction*) UObject::GObjObjects()->Data[ 47727 ];

	AUTVehicle_execEnableVehicle_Parms EnableVehicle_Parms;

	this->ProcessEvent ( pFnEnableVehicle, &EnableVehicle_Parms, NULL );
};

// Function UTGame.UTVehicle.DisableVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::DisableVehicle ( )
{
	static UFunction* pFnDisableVehicle = NULL;

	if ( ! pFnDisableVehicle )
		pFnDisableVehicle = (UFunction*) UObject::GObjObjects()->Data[ 47724 ];

	AUTVehicle_execDisableVehicle_Parms DisableVehicle_Parms;

	this->ProcessEvent ( pFnDisableVehicle, &DisableVehicle_Parms, NULL );

	return DisableVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.SetTexturesToBeResident
// [0x00020102] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void AUTVehicle::SetTexturesToBeResident ( unsigned long bActive )
{
	static UFunction* pFnSetTexturesToBeResident = NULL;

	if ( ! pFnSetTexturesToBeResident )
		pFnSetTexturesToBeResident = (UFunction*) UObject::GObjObjects()->Data[ 47719 ];

	AUTVehicle_execSetTexturesToBeResident_Parms SetTexturesToBeResident_Parms;
	SetTexturesToBeResident_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetTexturesToBeResident, &SetTexturesToBeResident_Parms, NULL );
};

// Function UTGame.UTVehicle.Destroyed
// [0x00020102] 
// Parameters infos:

void AUTVehicle::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 47714 ];

	AUTVehicle_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTVehicle.DriverRadiusDamage
// [0x00024002] 
// Parameters infos:
// float                          DamageAmount                   ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle::DriverRadiusDamage ( float DamageAmount, float DamageRadius, class AController* EventInstigator, class UClass* DamageType, float Momentum, struct FVector HitLocation, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnDriverRadiusDamage = NULL;

	if ( ! pFnDriverRadiusDamage )
		pFnDriverRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 47703 ];

	AUTVehicle_execDriverRadiusDamage_Parms DriverRadiusDamage_Parms;
	DriverRadiusDamage_Parms.DamageAmount = DamageAmount;
	DriverRadiusDamage_Parms.DamageRadius = DamageRadius;
	DriverRadiusDamage_Parms.EventInstigator = EventInstigator;
	DriverRadiusDamage_Parms.DamageType = DamageType;
	DriverRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &DriverRadiusDamage_Parms.HitLocation, &HitLocation, 0xC );
	DriverRadiusDamage_Parms.DamageCauser = DamageCauser;
	DriverRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnDriverRadiusDamage, &DriverRadiusDamage_Parms, NULL );
};

// Function UTGame.UTVehicle.TakeWaterDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle::eventTakeWaterDamage ( )
{
	static UFunction* pFnTakeWaterDamage = NULL;

	if ( ! pFnTakeWaterDamage )
		pFnTakeWaterDamage = (UFunction*) UObject::GObjObjects()->Data[ 47701 ];

	AUTVehicle_eventTakeWaterDamage_Parms TakeWaterDamage_Parms;

	this->ProcessEvent ( pFnTakeWaterDamage, &TakeWaterDamage_Parms, NULL );
};

// Function UTGame.UTVehicle.PancakeOther
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTVehicle::PancakeOther ( class APawn* Other )
{
	static UFunction* pFnPancakeOther = NULL;

	if ( ! pFnPancakeOther )
		pFnPancakeOther = (UFunction*) UObject::GObjObjects()->Data[ 47699 ];

	AUTVehicle_execPancakeOther_Parms PancakeOther_Parms;
	PancakeOther_Parms.Other = Other;

	this->ProcessEvent ( pFnPancakeOther, &PancakeOther_Parms, NULL );
};

// Function UTGame.UTVehicle.RanInto
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTVehicle::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 47692 ];

	AUTVehicle_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function UTGame.UTVehicle.FindAutoExit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )

bool AUTVehicle::FindAutoExit ( class APawn* ExitingDriver )
{
	static UFunction* pFnFindAutoExit = NULL;

	if ( ! pFnFindAutoExit )
		pFnFindAutoExit = (UFunction*) UObject::GObjObjects()->Data[ 47682 ];

	AUTVehicle_execFindAutoExit_Parms FindAutoExit_Parms;
	FindAutoExit_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnFindAutoExit, &FindAutoExit_Parms, NULL );

	return FindAutoExit_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ExitRotation
// [0x00020002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTVehicle::ExitRotation ( )
{
	static UFunction* pFnExitRotation = NULL;

	if ( ! pFnExitRotation )
		pFnExitRotation = (UFunction*) UObject::GObjObjects()->Data[ 47680 ];

	AUTVehicle_execExitRotation_Parms ExitRotation_Parms;

	this->ProcessEvent ( pFnExitRotation, &ExitRotation_Parms, NULL );

	return ExitRotation_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.EntryAnnouncement
// [0x00020102] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTVehicle::EntryAnnouncement ( class AController* C )
{
	static UFunction* pFnEntryAnnouncement = NULL;

	if ( ! pFnEntryAnnouncement )
		pFnEntryAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 47678 ];

	AUTVehicle_execEntryAnnouncement_Parms EntryAnnouncement_Parms;
	EntryAnnouncement_Parms.C = C;

	this->ProcessEvent ( pFnEntryAnnouncement, &EntryAnnouncement_Parms, NULL );
};

// Function UTGame.UTVehicle.VehicleEvent
// [0x00020102] 
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void AUTVehicle::VehicleEvent ( struct FName EventTag )
{
	static UFunction* pFnVehicleEvent = NULL;

	if ( ! pFnVehicleEvent )
		pFnVehicleEvent = (UFunction*) UObject::GObjObjects()->Data[ 47676 ];

	AUTVehicle_execVehicleEvent_Parms VehicleEvent_Parms;
	memcpy ( &VehicleEvent_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnVehicleEvent, &VehicleEvent_Parms, NULL );
};

// Function UTGame.UTVehicle.PlayVehicleAnimation
// [0x00020102] 
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void AUTVehicle::PlayVehicleAnimation ( struct FName EventTag )
{
	static UFunction* pFnPlayVehicleAnimation = NULL;

	if ( ! pFnPlayVehicleAnimation )
		pFnPlayVehicleAnimation = (UFunction*) UObject::GObjObjects()->Data[ 47671 ];

	AUTVehicle_execPlayVehicleAnimation_Parms PlayVehicleAnimation_Parms;
	memcpy ( &PlayVehicleAnimation_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnPlayVehicleAnimation, &PlayVehicleAnimation_Parms, NULL );
};

// Function UTGame.UTVehicle.PlayVehicleSound
// [0x00020102] 
// Parameters infos:
// struct FName                   SoundTag                       ( CPF_Parm )

void AUTVehicle::PlayVehicleSound ( struct FName SoundTag )
{
	static UFunction* pFnPlayVehicleSound = NULL;

	if ( ! pFnPlayVehicleSound )
		pFnPlayVehicleSound = (UFunction*) UObject::GObjObjects()->Data[ 47668 ];

	AUTVehicle_execPlayVehicleSound_Parms PlayVehicleSound_Parms;
	memcpy ( &PlayVehicleSound_Parms.SoundTag, &SoundTag, 0x8 );

	this->ProcessEvent ( pFnPlayVehicleSound, &PlayVehicleSound_Parms, NULL );
};

// Function UTGame.UTVehicle.TriggerVehicleEffect
// [0x00020102] 
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void AUTVehicle::TriggerVehicleEffect ( struct FName EventTag )
{
	static UFunction* pFnTriggerVehicleEffect = NULL;

	if ( ! pFnTriggerVehicleEffect )
		pFnTriggerVehicleEffect = (UFunction*) UObject::GObjObjects()->Data[ 47665 ];

	AUTVehicle_execTriggerVehicleEffect_Parms TriggerVehicleEffect_Parms;
	memcpy ( &TriggerVehicleEffect_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnTriggerVehicleEffect, &TriggerVehicleEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.SetVehicleEffectParms
// [0x00020102] 
// Parameters infos:
// struct FName                   TriggerName                    ( CPF_Parm )
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void AUTVehicle::SetVehicleEffectParms ( struct FName TriggerName, class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetVehicleEffectParms = NULL;

	if ( ! pFnSetVehicleEffectParms )
		pFnSetVehicleEffectParms = (UFunction*) UObject::GObjObjects()->Data[ 47661 ];

	AUTVehicle_execSetVehicleEffectParms_Parms SetVehicleEffectParms_Parms;
	memcpy ( &SetVehicleEffectParms_Parms.TriggerName, &TriggerName, 0x8 );
	SetVehicleEffectParms_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetVehicleEffectParms, &SetVehicleEffectParms_Parms, NULL );
};

// Function UTGame.UTVehicle.InitializeEffects
// [0x00020102] 
// Parameters infos:

void AUTVehicle::InitializeEffects ( )
{
	static UFunction* pFnInitializeEffects = NULL;

	if ( ! pFnInitializeEffects )
		pFnInitializeEffects = (UFunction*) UObject::GObjObjects()->Data[ 47660 ];

	AUTVehicle_execInitializeEffects_Parms InitializeEffects_Parms;

	this->ProcessEvent ( pFnInitializeEffects, &InitializeEffects_Parms, NULL );
};

// Function UTGame.UTVehicle.CreateVehicleEffect
// [0x00020102] 
// Parameters infos:
// int                            EffectIndex                    ( CPF_Parm )

void AUTVehicle::CreateVehicleEffect ( int EffectIndex )
{
	static UFunction* pFnCreateVehicleEffect = NULL;

	if ( ! pFnCreateVehicleEffect )
		pFnCreateVehicleEffect = (UFunction*) UObject::GObjObjects()->Data[ 47657 ];

	AUTVehicle_execCreateVehicleEffect_Parms CreateVehicleEffect_Parms;
	CreateVehicleEffect_Parms.EffectIndex = EffectIndex;

	this->ProcessEvent ( pFnCreateVehicleEffect, &CreateVehicleEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.CriticalChargeAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTVehicle::CriticalChargeAttack ( class AUTBot* B )
{
	static UFunction* pFnCriticalChargeAttack = NULL;

	if ( ! pFnCriticalChargeAttack )
		pFnCriticalChargeAttack = (UFunction*) UObject::GObjObjects()->Data[ 47654 ];

	AUTVehicle_execCriticalChargeAttack_Parms CriticalChargeAttack_Parms;
	CriticalChargeAttack_Parms.B = B;

	this->ProcessEvent ( pFnCriticalChargeAttack, &CriticalChargeAttack_Parms, NULL );

	return CriticalChargeAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.RecommendCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTVehicle::RecommendCharge ( class AUTBot* B, class APawn* Enemy )
{
	static UFunction* pFnRecommendCharge = NULL;

	if ( ! pFnRecommendCharge )
		pFnRecommendCharge = (UFunction*) UObject::GObjObjects()->Data[ 47650 ];

	AUTVehicle_execRecommendCharge_Parms RecommendCharge_Parms;
	RecommendCharge_Parms.B = B;
	RecommendCharge_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnRecommendCharge, &RecommendCharge_Parms, NULL );

	return RecommendCharge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.IsDriverSeat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AVehicle*                TestSeatPawn                   ( CPF_Parm )

bool AUTVehicle::IsDriverSeat ( class AVehicle* TestSeatPawn )
{
	static UFunction* pFnIsDriverSeat = NULL;

	if ( ! pFnIsDriverSeat )
		pFnIsDriverSeat = (UFunction*) UObject::GObjObjects()->Data[ 47647 ];

	AUTVehicle_execIsDriverSeat_Parms IsDriverSeat_Parms;
	IsDriverSeat_Parms.TestSeatPawn = TestSeatPawn;

	this->ProcessEvent ( pFnIsDriverSeat, &IsDriverSeat_Parms, NULL );

	return IsDriverSeat_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.ContinueOnFoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle::eventContinueOnFoot ( )
{
	static UFunction* pFnContinueOnFoot = NULL;

	if ( ! pFnContinueOnFoot )
		pFnContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 47640 ];

	AUTVehicle_eventContinueOnFoot_Parms ContinueOnFoot_Parms;

	this->ProcessEvent ( pFnContinueOnFoot, &ContinueOnFoot_Parms, NULL );

	return ContinueOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.AdjustedStrength
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle::AdjustedStrength ( )
{
	static UFunction* pFnAdjustedStrength = NULL;

	if ( ! pFnAdjustedStrength )
		pFnAdjustedStrength = (UFunction*) UObject::GObjObjects()->Data[ 47638 ];

	AUTVehicle_execAdjustedStrength_Parms AdjustedStrength_Parms;

	this->ProcessEvent ( pFnAdjustedStrength, &AdjustedStrength_Parms, NULL );

	return AdjustedStrength_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.RenderMapIcon
// [0x00820102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// struct FLinearColor            FinalColor                     ( CPF_Parm )

void AUTVehicle::RenderMapIcon ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, struct FLinearColor FinalColor )
{
	static UFunction* pFnRenderMapIcon = NULL;

	if ( ! pFnRenderMapIcon )
		pFnRenderMapIcon = (UFunction*) UObject::GObjObjects()->Data[ 47632 ];

	AUTVehicle_execRenderMapIcon_Parms RenderMapIcon_Parms;
	RenderMapIcon_Parms.MP = MP;
	RenderMapIcon_Parms.Canvas = Canvas;
	RenderMapIcon_Parms.PlayerOwner = PlayerOwner;
	memcpy ( &RenderMapIcon_Parms.FinalColor, &FinalColor, 0x10 );

	this->ProcessEvent ( pFnRenderMapIcon, &RenderMapIcon_Parms, NULL );
};

// Function UTGame.UTVehicle.DrawKillIcon
// [0x00822102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )
// float                          HUDScaleX                      ( CPF_Parm )
// float                          HUDScaleY                      ( CPF_Parm )

void AUTVehicle::DrawKillIcon ( class UCanvas* Canvas, float ScreenX, float ScreenY, float HUDScaleX, float HUDScaleY )
{
	static UFunction* pFnDrawKillIcon = NULL;

	if ( ! pFnDrawKillIcon )
		pFnDrawKillIcon = (UFunction*) UObject::GObjObjects()->Data[ 47623 ];

	AUTVehicle_execDrawKillIcon_Parms DrawKillIcon_Parms;
	DrawKillIcon_Parms.Canvas = Canvas;
	DrawKillIcon_Parms.ScreenX = ScreenX;
	DrawKillIcon_Parms.ScreenY = ScreenY;
	DrawKillIcon_Parms.HUDScaleX = HUDScaleX;
	DrawKillIcon_Parms.HUDScaleY = HUDScaleY;

	this->ProcessEvent ( pFnDrawKillIcon, &DrawKillIcon_Parms, NULL );
};

// Function UTGame.UTVehicle.DisplayWeaponBar
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTHUD*                  HUD                            ( CPF_Parm )

void AUTVehicle::DisplayWeaponBar ( class UCanvas* Canvas, class AUTHUD* HUD )
{
	static UFunction* pFnDisplayWeaponBar = NULL;

	if ( ! pFnDisplayWeaponBar )
		pFnDisplayWeaponBar = (UFunction*) UObject::GObjObjects()->Data[ 47620 ];

	AUTVehicle_execDisplayWeaponBar_Parms DisplayWeaponBar_Parms;
	DisplayWeaponBar_Parms.Canvas = Canvas;
	DisplayWeaponBar_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayWeaponBar, &DisplayWeaponBar_Parms, NULL );
};

// Function UTGame.UTVehicle.GetRanOverDamageType
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* AUTVehicle::GetRanOverDamageType ( )
{
	static UFunction* pFnGetRanOverDamageType = NULL;

	if ( ! pFnGetRanOverDamageType )
		pFnGetRanOverDamageType = (UFunction*) UObject::GObjObjects()->Data[ 47618 ];

	AUTVehicle_execGetRanOverDamageType_Parms GetRanOverDamageType_Parms;

	this->ProcessEvent ( pFnGetRanOverDamageType, &GetRanOverDamageType_Parms, NULL );

	return GetRanOverDamageType_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.EjectSeat
// [0x00020002] 
// Parameters infos:
// int                            SeatIdx                        ( CPF_Parm )

void AUTVehicle::EjectSeat ( int SeatIdx )
{
	static UFunction* pFnEjectSeat = NULL;

	if ( ! pFnEjectSeat )
		pFnEjectSeat = (UFunction*) UObject::GObjObjects()->Data[ 47615 ];

	AUTVehicle_execEjectSeat_Parms EjectSeat_Parms;
	EjectSeat_Parms.SeatIdx = SeatIdx;

	this->ProcessEvent ( pFnEjectSeat, &EjectSeat_Parms, NULL );
};

// Function UTGame.UTVehicle.StopSpawnEffect
// [0x00020102] 
// Parameters infos:

void AUTVehicle::StopSpawnEffect ( )
{
	static UFunction* pFnStopSpawnEffect = NULL;

	if ( ! pFnStopSpawnEffect )
		pFnStopSpawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 47613 ];

	AUTVehicle_execStopSpawnEffect_Parms StopSpawnEffect_Parms;

	this->ProcessEvent ( pFnStopSpawnEffect, &StopSpawnEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.PlaySpawnEffect
// [0x00020102] 
// Parameters infos:

void AUTVehicle::PlaySpawnEffect ( )
{
	static UFunction* pFnPlaySpawnEffect = NULL;

	if ( ! pFnPlaySpawnEffect )
		pFnPlaySpawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 47610 ];

	AUTVehicle_execPlaySpawnEffect_Parms PlaySpawnEffect_Parms;

	this->ProcessEvent ( pFnPlaySpawnEffect, &PlaySpawnEffect_Parms, NULL );
};

// Function UTGame.UTVehicle.GetChargePower
// [0x00020100] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle::GetChargePower ( )
{
	static UFunction* pFnGetChargePower = NULL;

	if ( ! pFnGetChargePower )
		pFnGetChargePower = (UFunction*) UObject::GObjObjects()->Data[ 47608 ];

	AUTVehicle_execGetChargePower_Parms GetChargePower_Parms;

	this->ProcessEvent ( pFnGetChargePower, &GetChargePower_Parms, NULL );

	return GetChargePower_Parms.ReturnValue;
};

// Function UTGame.UTVehicle.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void AUTVehicle::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 47606 ];

	AUTVehicle_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function UTGame.UTVehicle.SetInputs
// [0x00820102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void AUTVehicle::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 47590 ];

	AUTVehicle_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function UTGame.UTVehicle.UpdateLookSteerStatus
// [0x00020102] 
// Parameters infos:

void AUTVehicle::UpdateLookSteerStatus ( )
{
	static UFunction* pFnUpdateLookSteerStatus = NULL;

	if ( ! pFnUpdateLookSteerStatus )
		pFnUpdateLookSteerStatus = (UFunction*) UObject::GObjObjects()->Data[ 47588 ];

	AUTVehicle_execUpdateLookSteerStatus_Parms UpdateLookSteerStatus_Parms;

	this->ProcessEvent ( pFnUpdateLookSteerStatus, &UpdateLookSteerStatus_Parms, NULL );
};

// Function UTGame.UTVehicle.CreateDamageMaterialInstance
// [0x00020102] 
// Parameters infos:

void AUTVehicle::CreateDamageMaterialInstance ( )
{
	static UFunction* pFnCreateDamageMaterialInstance = NULL;

	if ( ! pFnCreateDamageMaterialInstance )
		pFnCreateDamageMaterialInstance = (UFunction*) UObject::GObjObjects()->Data[ 47587 ];

	AUTVehicle_execCreateDamageMaterialInstance_Parms CreateDamageMaterialInstance_Parms;

	this->ProcessEvent ( pFnCreateDamageMaterialInstance, &CreateDamageMaterialInstance_Parms, NULL );
};

// Function UTGame.UTVehicle.ReattachMesh
// [0x00020102] 
// Parameters infos:

void AUTVehicle::ReattachMesh ( )
{
	static UFunction* pFnReattachMesh = NULL;

	if ( ! pFnReattachMesh )
		pFnReattachMesh = (UFunction*) UObject::GObjObjects()->Data[ 47586 ];

	AUTVehicle_execReattachMesh_Parms ReattachMesh_Parms;

	this->ProcessEvent ( pFnReattachMesh, &ReattachMesh_Parms, NULL );
};

// Function UTGame.UTVehicle.UpdateShadowSettings
// [0x00020102] 
// Parameters infos:
// unsigned long                  bWantShadow                    ( CPF_Parm )

void AUTVehicle::UpdateShadowSettings ( unsigned long bWantShadow )
{
	static UFunction* pFnUpdateShadowSettings = NULL;

	if ( ! pFnUpdateShadowSettings )
		pFnUpdateShadowSettings = (UFunction*) UObject::GObjObjects()->Data[ 47582 ];

	AUTVehicle_execUpdateShadowSettings_Parms UpdateShadowSettings_Parms;
	UpdateShadowSettings_Parms.bWantShadow = bWantShadow;

	this->ProcessEvent ( pFnUpdateShadowSettings, &UpdateShadowSettings_Parms, NULL );
};

// Function UTGame.UTVehicle.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTVehicle::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 47580 ];

	AUTVehicle_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicleCantCarryFlagMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTVehicleCantCarryFlagMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59543 ];

	UUTVehicleCantCarryFlagMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTVehicleCantCarryFlagMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTVehicleCantCarryFlagMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 59540 ];

	UUTVehicleCantCarryFlagMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTVehicleCantCarryFlagMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTVehicleCantCarryFlagMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59535 ];

	UUTVehicleCantCarryFlagMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTVehicleCantCarryFlagMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVehicleCantCarryFlagMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59529 ];

	UUTVehicleCantCarryFlagMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTLocalMessage.KilledByVictoryMessage
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AnnouncementIndex              ( CPF_Parm )

bool UUTLocalMessage::KilledByVictoryMessage ( int AnnouncementIndex )
{
	static UFunction* pFnKilledByVictoryMessage = NULL;

	if ( ! pFnKilledByVictoryMessage )
		pFnKilledByVictoryMessage = (UFunction*) UObject::GObjObjects()->Data[ 52320 ];

	UUTLocalMessage_execKilledByVictoryMessage_Parms KilledByVictoryMessage_Parms;
	KilledByVictoryMessage_Parms.AnnouncementIndex = AnnouncementIndex;

	this->ProcessEvent ( pFnKilledByVictoryMessage, &KilledByVictoryMessage_Parms, NULL );

	return KilledByVictoryMessage_Parms.ReturnValue;
};

// Function UTGame.UTLocalMessage.GetPos
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class AHUD*                    myHUD                          ( CPF_Parm )

float UUTLocalMessage::GetPos ( int Switch, class AHUD* myHUD )
{
	static UFunction* pFnGetPos = NULL;

	if ( ! pFnGetPos )
		pFnGetPos = (UFunction*) UObject::GObjObjects()->Data[ 52315 ];

	UUTLocalMessage_execGetPos_Parms GetPos_Parms;
	GetPos_Parms.Switch = Switch;
	GetPos_Parms.myHUD = myHUD;

	this->ProcessEvent ( pFnGetPos, &GetPos_Parms, NULL );

	return GetPos_Parms.ReturnValue;
};

// Function UTGame.UTLocalMessage.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTLocalMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 48912 ];

	UUTLocalMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTLocalMessage.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTLocalMessage::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 52302 ];

	UUTLocalMessage_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function UTGame.UTLocalMessage.AnnouncementSound
// [0x00022000] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTLocalMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 48896 ];

	UUTLocalMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTLocalMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTLocalMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 48909 ];

	UUTLocalMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.EnableFriendlyWarningCrosshair
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::EnableFriendlyWarningCrosshair ( )
{
	static UFunction* pFnEnableFriendlyWarningCrosshair = NULL;

	if ( ! pFnEnableFriendlyWarningCrosshair )
		pFnEnableFriendlyWarningCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 50799 ];

	AUTWeapon_execEnableFriendlyWarningCrosshair_Parms EnableFriendlyWarningCrosshair_Parms;

	this->ProcessEvent ( pFnEnableFriendlyWarningCrosshair, &EnableFriendlyWarningCrosshair_Parms, NULL );

	return EnableFriendlyWarningCrosshair_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.DrawKillIcon
// [0x00822102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )
// float                          HUDScaleX                      ( CPF_Parm )
// float                          HUDScaleY                      ( CPF_Parm )

void AUTWeapon::DrawKillIcon ( class UCanvas* Canvas, float ScreenX, float ScreenY, float HUDScaleX, float HUDScaleY )
{
	static UFunction* pFnDrawKillIcon = NULL;

	if ( ! pFnDrawKillIcon )
		pFnDrawKillIcon = (UFunction*) UObject::GObjObjects()->Data[ 50791 ];

	AUTWeapon_execDrawKillIcon_Parms DrawKillIcon_Parms;
	DrawKillIcon_Parms.Canvas = Canvas;
	DrawKillIcon_Parms.ScreenX = ScreenX;
	DrawKillIcon_Parms.ScreenY = ScreenY;
	DrawKillIcon_Parms.HUDScaleX = HUDScaleX;
	DrawKillIcon_Parms.HUDScaleY = HUDScaleY;

	this->ProcessEvent ( pFnDrawKillIcon, &DrawKillIcon_Parms, NULL );
};

// Function UTGame.UTWeapon.CoversScreenSpace
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ScreenLoc                      ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )

bool AUTWeapon::CoversScreenSpace ( struct FVector ScreenLoc, class UCanvas* Canvas )
{
	static UFunction* pFnCoversScreenSpace = NULL;

	if ( ! pFnCoversScreenSpace )
		pFnCoversScreenSpace = (UFunction*) UObject::GObjObjects()->Data[ 47871 ];

	AUTWeapon_execCoversScreenSpace_Parms CoversScreenSpace_Parms;
	memcpy ( &CoversScreenSpace_Parms.ScreenLoc, &ScreenLoc, 0xC );
	CoversScreenSpace_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnCoversScreenSpace, &CoversScreenSpace_Parms, NULL );

	return CoversScreenSpace_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.HolderEnteredVehicle
// [0x00020100] 
// Parameters infos:

void AUTWeapon::HolderEnteredVehicle ( )
{
	static UFunction* pFnHolderEnteredVehicle = NULL;

	if ( ! pFnHolderEnteredVehicle )
		pFnHolderEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 50786 ];

	AUTWeapon_execHolderEnteredVehicle_Parms HolderEnteredVehicle_Parms;

	this->ProcessEvent ( pFnHolderEnteredVehicle, &HolderEnteredVehicle_Parms, NULL );
};

// Function UTGame.UTWeapon.CanViewAccelerationWhenFiring
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::CanViewAccelerationWhenFiring ( )
{
	static UFunction* pFnCanViewAccelerationWhenFiring = NULL;

	if ( ! pFnCanViewAccelerationWhenFiring )
		pFnCanViewAccelerationWhenFiring = (UFunction*) UObject::GObjObjects()->Data[ 50784 ];

	AUTWeapon_execCanViewAccelerationWhenFiring_Parms CanViewAccelerationWhenFiring_Parms;

	this->ProcessEvent ( pFnCanViewAccelerationWhenFiring, &CanViewAccelerationWhenFiring_Parms, NULL );

	return CanViewAccelerationWhenFiring_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ClientWeaponThrown
// [0x010201C2] 
// Parameters infos:

void AUTWeapon::ClientWeaponThrown ( )
{
	static UFunction* pFnClientWeaponThrown = NULL;

	if ( ! pFnClientWeaponThrown )
		pFnClientWeaponThrown = (UFunction*) UObject::GObjObjects()->Data[ 50783 ];

	AUTWeapon_execClientWeaponThrown_Parms ClientWeaponThrown_Parms;

	this->ProcessEvent ( pFnClientWeaponThrown, &ClientWeaponThrown_Parms, NULL );
};

// Function UTGame.UTWeapon.DropFrom
// [0x00020002] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void AUTWeapon::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 50780 ];

	AUTWeapon_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );
};

// Function UTGame.UTWeapon.GetPowerPerc
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::eventGetPowerPerc ( )
{
	static UFunction* pFnGetPowerPerc = NULL;

	if ( ! pFnGetPowerPerc )
		pFnGetPowerPerc = (UFunction*) UObject::GObjObjects()->Data[ 48526 ];

	AUTWeapon_eventGetPowerPerc_Parms GetPowerPerc_Parms;

	this->ProcessEvent ( pFnGetPowerPerc, &GetPowerPerc_Parms, NULL );

	return GetPowerPerc_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.Activate
// [0x00020102] 
// Parameters infos:

void AUTWeapon::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 50779 ];

	AUTWeapon_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function UTGame.UTWeapon.ThrottleLook
// [0x00420100] 
// Parameters infos:
// float                          aTurn                          ( CPF_Parm | CPF_OutParm )
// float                          aLookUp                        ( CPF_Parm | CPF_OutParm )

void AUTWeapon::ThrottleLook ( float* aTurn, float* aLookUp )
{
	static UFunction* pFnThrottleLook = NULL;

	if ( ! pFnThrottleLook )
		pFnThrottleLook = (UFunction*) UObject::GObjObjects()->Data[ 50776 ];

	AUTWeapon_execThrottleLook_Parms ThrottleLook_Parms;

	this->ProcessEvent ( pFnThrottleLook, &ThrottleLook_Parms, NULL );

	if ( aTurn )
		*aTurn = ThrottleLook_Parms.aTurn;

	if ( aLookUp )
		*aLookUp = ThrottleLook_Parms.aLookUp;
};

// Function UTGame.UTWeapon.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 49211 ];

	AUTWeapon_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.DetourWeight
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )
// float                          PathWeight                     ( CPF_Parm )

float AUTWeapon::DetourWeight ( class APawn* Other, float PathWeight )
{
	static UFunction* pFnDetourWeight = NULL;

	if ( ! pFnDetourWeight )
		pFnDetourWeight = (UFunction*) UObject::GObjObjects()->Data[ 50766 ];

	AUTWeapon_execDetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;

	this->ProcessEvent ( pFnDetourWeight, &DetourWeight_Parms, NULL );

	return DetourWeight_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SetWeaponOverlayFlags
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 OwnerPawn                      ( CPF_Parm )

void AUTWeapon::SetWeaponOverlayFlags ( class AUTPawn* OwnerPawn )
{
	static UFunction* pFnSetWeaponOverlayFlags = NULL;

	if ( ! pFnSetWeaponOverlayFlags )
		pFnSetWeaponOverlayFlags = (UFunction*) UObject::GObjObjects()->Data[ 50760 ];

	AUTWeapon_execSetWeaponOverlayFlags_Parms SetWeaponOverlayFlags_Parms;
	SetWeaponOverlayFlags_Parms.OwnerPawn = OwnerPawn;

	this->ProcessEvent ( pFnSetWeaponOverlayFlags, &SetWeaponOverlayFlags_Parms, NULL );
};

// Function UTGame.UTWeapon.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeapon::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 50735 ];

	AUTWeapon_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTWeapon.GetArmAnimNodeSeq
// [0x00020102] 
// Parameters infos:
// class UAnimNodeSequence*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UAnimNodeSequence* AUTWeapon::GetArmAnimNodeSeq ( )
{
	static UFunction* pFnGetArmAnimNodeSeq = NULL;

	if ( ! pFnGetArmAnimNodeSeq )
		pFnGetArmAnimNodeSeq = (UFunction*) UObject::GObjObjects()->Data[ 50732 ];

	AUTWeapon_execGetArmAnimNodeSeq_Parms GetArmAnimNodeSeq_Parms;

	this->ProcessEvent ( pFnGetArmAnimNodeSeq, &GetArmAnimNodeSeq_Parms, NULL );

	return GetArmAnimNodeSeq_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SetupArmsAnim
// [0x00020102] 
// Parameters infos:

void AUTWeapon::SetupArmsAnim ( )
{
	static UFunction* pFnSetupArmsAnim = NULL;

	if ( ! pFnSetupArmsAnim )
		pFnSetupArmsAnim = (UFunction*) UObject::GObjObjects()->Data[ 50721 ];

	AUTWeapon_execSetupArmsAnim_Parms SetupArmsAnim_Parms;

	this->ProcessEvent ( pFnSetupArmsAnim, &SetupArmsAnim_Parms, NULL );
};

// Function UTGame.UTWeapon.RefireCheckTimer
// [0x00020100] 
// Parameters infos:

void AUTWeapon::RefireCheckTimer ( )
{
	static UFunction* pFnRefireCheckTimer = NULL;

	if ( ! pFnRefireCheckTimer )
		pFnRefireCheckTimer = (UFunction*) UObject::GObjObjects()->Data[ 50720 ];

	AUTWeapon_execRefireCheckTimer_Parms RefireCheckTimer_Parms;

	this->ProcessEvent ( pFnRefireCheckTimer, &RefireCheckTimer_Parms, NULL );
};

// Function UTGame.UTWeapon.GetEffectLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTWeapon::GetEffectLocation ( )
{
	static UFunction* pFnGetEffectLocation = NULL;

	if ( ! pFnGetEffectLocation )
		pFnGetEffectLocation = (UFunction*) UObject::GObjObjects()->Data[ 50716 ];

	AUTWeapon_execGetEffectLocation_Parms GetEffectLocation_Parms;

	this->ProcessEvent ( pFnGetEffectLocation, &GetEffectLocation_Parms, NULL );

	return GetEffectLocation_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.GetPhysicalFireStartLoc
// [0x00824102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector AUTWeapon::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 50701 ];

	AUTWeapon_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.FiringPutDownWeapon
// [0x00020102] 
// Parameters infos:

void AUTWeapon::FiringPutDownWeapon ( )
{
	static UFunction* pFnFiringPutDownWeapon = NULL;

	if ( ! pFnFiringPutDownWeapon )
		pFnFiringPutDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50700 ];

	AUTWeapon_execFiringPutDownWeapon_Parms FiringPutDownWeapon_Parms;

	this->ProcessEvent ( pFnFiringPutDownWeapon, &FiringPutDownWeapon_Parms, NULL );
};

// Function UTGame.UTWeapon.TryPutDown
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::TryPutDown ( )
{
	static UFunction* pFnTryPutDown = NULL;

	if ( ! pFnTryPutDown )
		pFnTryPutDown = (UFunction*) UObject::GObjObjects()->Data[ 50695 ];

	AUTWeapon_execTryPutDown_Parms TryPutDown_Parms;

	this->ProcessEvent ( pFnTryPutDown, &TryPutDown_Parms, NULL );

	return TryPutDown_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.AllowSwitchTo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 NewWeapon                      ( CPF_Parm )

bool AUTWeapon::AllowSwitchTo ( class AWeapon* NewWeapon )
{
	static UFunction* pFnAllowSwitchTo = NULL;

	if ( ! pFnAllowSwitchTo )
		pFnAllowSwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 50692 ];

	AUTWeapon_execAllowSwitchTo_Parms AllowSwitchTo_Parms;
	AllowSwitchTo_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnAllowSwitchTo, &AllowSwitchTo_Parms, NULL );

	return AllowSwitchTo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.PreloadTextures
// [0x00020102] 
// Parameters infos:
// unsigned long                  bForcePreload                  ( CPF_Parm )

void AUTWeapon::PreloadTextures ( unsigned long bForcePreload )
{
	static UFunction* pFnPreloadTextures = NULL;

	if ( ! pFnPreloadTextures )
		pFnPreloadTextures = (UFunction*) UObject::GObjObjects()->Data[ 50690 ];

	AUTWeapon_execPreloadTextures_Parms PreloadTextures_Parms;
	PreloadTextures_Parms.bForcePreload = bForcePreload;

	this->ProcessEvent ( pFnPreloadTextures, &PreloadTextures_Parms, NULL );
};

// Function UTGame.UTWeapon.FireAmmunition
// [0x00020102] 
// Parameters infos:

void AUTWeapon::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 50660 ];

	AUTWeapon_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function UTGame.UTWeapon.ClientWeaponSet
// [0x010241C2] 
// Parameters infos:
// unsigned long                  bOptionalSet                   ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::ClientWeaponSet ( unsigned long bOptionalSet, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientWeaponSet = NULL;

	if ( ! pFnClientWeaponSet )
		pFnClientWeaponSet = (UFunction*) UObject::GObjObjects()->Data[ 50656 ];

	AUTWeapon_execClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL );
};

// Function UTGame.UTWeapon.SendToFiringState
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::SendToFiringState ( unsigned char FireModeNum )
{
	static UFunction* pFnSendToFiringState = NULL;

	if ( ! pFnSendToFiringState )
		pFnSendToFiringState = (UFunction*) UObject::GObjObjects()->Data[ 50654 ];

	AUTWeapon_execSendToFiringState_Parms SendToFiringState_Parms;
	SendToFiringState_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnSendToFiringState, &SendToFiringState_Parms, NULL );
};

// Function UTGame.UTWeapon.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 50651 ];

	AUTWeapon_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function UTGame.UTWeapon.ClientEndFire
// [0x010201C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::ClientEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnClientEndFire = NULL;

	if ( ! pFnClientEndFire )
		pFnClientEndFire = (UFunction*) UObject::GObjObjects()->Data[ 50649 ];

	AUTWeapon_execClientEndFire_Parms ClientEndFire_Parms;
	ClientEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnClientEndFire, &ClientEndFire_Parms, NULL );
};

// Function UTGame.UTWeapon.EndZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void AUTWeapon::EndZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 50646 ];

	AUTWeapon_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function UTGame.UTWeapon.StartZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void AUTWeapon::StartZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 50643 ];

	AUTWeapon_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function UTGame.UTWeapon.CheckZoom
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTWeapon::CheckZoom ( unsigned char FireModeNum )
{
	static UFunction* pFnCheckZoom = NULL;

	if ( ! pFnCheckZoom )
		pFnCheckZoom = (UFunction*) UObject::GObjObjects()->Data[ 50638 ];

	AUTWeapon_execCheckZoom_Parms CheckZoom_Parms;
	CheckZoom_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnCheckZoom, &CheckZoom_Parms, NULL );

	return CheckZoom_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.GetZoomedState
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTWeapon::GetZoomedState ( )
{
	static UFunction* pFnGetZoomedState = NULL;

	if ( ! pFnGetZoomedState )
		pFnGetZoomedState = (UFunction*) UObject::GObjObjects()->Data[ 50635 ];

	AUTWeapon_execGetZoomedState_Parms GetZoomedState_Parms;

	this->ProcessEvent ( pFnGetZoomedState, &GetZoomedState_Parms, NULL );

	return GetZoomedState_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ProcessInstantHit
// [0x00024102] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// int                            NumHits                        ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::ProcessInstantHit ( unsigned char FiringMode, struct FImpactInfo Impact, int NumHits )
{
	static UFunction* pFnProcessInstantHit = NULL;

	if ( ! pFnProcessInstantHit )
		pFnProcessInstantHit = (UFunction*) UObject::GObjObjects()->Data[ 50628 ];

	AUTWeapon_execProcessInstantHit_Parms ProcessInstantHit_Parms;
	ProcessInstantHit_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Parms.NumHits = NumHits;

	this->ProcessEvent ( pFnProcessInstantHit, &ProcessInstantHit_Parms, NULL );
};

// Function UTGame.UTWeapon.ProjectileFire
// [0x00820102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* AUTWeapon::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 50624 ];

	AUTWeapon_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.InstantAimHelp
// [0x00820102] 
// Parameters infos:
// struct FImpactInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FImpactInfo             RealImpact                     ( CPF_Parm )

struct FImpactInfo AUTWeapon::InstantAimHelp ( struct FVector StartTrace, struct FVector EndTrace, struct FImpactInfo RealImpact )
{
	static UFunction* pFnInstantAimHelp = NULL;

	if ( ! pFnInstantAimHelp )
		pFnInstantAimHelp = (UFunction*) UObject::GObjObjects()->Data[ 50612 ];

	AUTWeapon_execInstantAimHelp_Parms InstantAimHelp_Parms;
	memcpy ( &InstantAimHelp_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &InstantAimHelp_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &InstantAimHelp_Parms.RealImpact, &RealImpact, 0x50 );

	this->ProcessEvent ( pFnInstantAimHelp, &InstantAimHelp_Parms, NULL );

	return InstantAimHelp_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.InstantFire
// [0x00820102] 
// Parameters infos:

void AUTWeapon::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 50602 ];

	AUTWeapon_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function UTGame.UTWeapon.InstantFireEndTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )

struct FVector AUTWeapon::InstantFireEndTrace ( struct FVector StartTrace )
{
	static UFunction* pFnInstantFireEndTrace = NULL;

	if ( ! pFnInstantFireEndTrace )
		pFnInstantFireEndTrace = (UFunction*) UObject::GObjObjects()->Data[ 50599 ];

	AUTWeapon_execInstantFireEndTrace_Parms InstantFireEndTrace_Parms;
	memcpy ( &InstantFireEndTrace_Parms.StartTrace, &StartTrace, 0xC );

	this->ProcessEvent ( pFnInstantFireEndTrace, &InstantFireEndTrace_Parms, NULL );

	return InstantFireEndTrace_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.InstantFireStartTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTWeapon::InstantFireStartTrace ( )
{
	static UFunction* pFnInstantFireStartTrace = NULL;

	if ( ! pFnInstantFireStartTrace )
		pFnInstantFireStartTrace = (UFunction*) UObject::GObjObjects()->Data[ 50597 ];

	AUTWeapon_execInstantFireStartTrace_Parms InstantFireStartTrace_Parms;

	this->ProcessEvent ( pFnInstantFireStartTrace, &InstantFireStartTrace_Parms, NULL );

	return InstantFireStartTrace_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.bReadyToFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::bReadyToFire ( )
{
	static UFunction* pFnbReadyToFire = NULL;

	if ( ! pFnbReadyToFire )
		pFnbReadyToFire = (UFunction*) UObject::GObjObjects()->Data[ 50595 ];

	AUTWeapon_execbReadyToFire_Parms bReadyToFire_Parms;

	this->ProcessEvent ( pFnbReadyToFire, &bReadyToFire_Parms, NULL );

	return bReadyToFire_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.WeaponEmpty
// [0x00020102] 
// Parameters infos:

void AUTWeapon::WeaponEmpty ( )
{
	static UFunction* pFnWeaponEmpty = NULL;

	if ( ! pFnWeaponEmpty )
		pFnWeaponEmpty = (UFunction*) UObject::GObjObjects()->Data[ 50594 ];

	AUTWeapon_execWeaponEmpty_Parms WeaponEmpty_Parms;

	this->ProcessEvent ( pFnWeaponEmpty, &WeaponEmpty_Parms, NULL );
};

// Function UTGame.UTWeapon.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool AUTWeapon::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 50589 ];

	AUTWeapon_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.Loaded
// [0x00024102] 
// Parameters infos:
// unsigned long                  bUseWeaponMax                  ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::Loaded ( unsigned long bUseWeaponMax )
{
	static UFunction* pFnLoaded = NULL;

	if ( ! pFnLoaded )
		pFnLoaded = (UFunction*) UObject::GObjObjects()->Data[ 50587 ];

	AUTWeapon_execLoaded_Parms Loaded_Parms;
	Loaded_Parms.bUseWeaponMax = bUseWeaponMax;

	this->ProcessEvent ( pFnLoaded, &Loaded_Parms, NULL );
};

// Function UTGame.UTWeapon.NeedAmmo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::NeedAmmo ( )
{
	static UFunction* pFnNeedAmmo = NULL;

	if ( ! pFnNeedAmmo )
		pFnNeedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 50585 ];

	AUTWeapon_execNeedAmmo_Parms NeedAmmo_Parms;

	this->ProcessEvent ( pFnNeedAmmo, &NeedAmmo_Parms, NULL );

	return NeedAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.DesireAmmo
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bDetour                        ( CPF_Parm )

float AUTWeapon::DesireAmmo ( unsigned long bDetour )
{
	static UFunction* pFnDesireAmmo = NULL;

	if ( ! pFnDesireAmmo )
		pFnDesireAmmo = (UFunction*) UObject::GObjObjects()->Data[ 48777 ];

	AUTWeapon_execDesireAmmo_Parms DesireAmmo_Parms;
	DesireAmmo_Parms.bDetour = bDetour;

	this->ProcessEvent ( pFnDesireAmmo, &DesireAmmo_Parms, NULL );

	return DesireAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.HasAnyAmmo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::HasAnyAmmo ( )
{
	static UFunction* pFnHasAnyAmmo = NULL;

	if ( ! pFnHasAnyAmmo )
		pFnHasAnyAmmo = (UFunction*) UObject::GObjObjects()->Data[ 50582 ];

	AUTWeapon_execHasAnyAmmo_Parms HasAnyAmmo_Parms;

	this->ProcessEvent ( pFnHasAnyAmmo, &HasAnyAmmo_Parms, NULL );

	return HasAnyAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool AUTWeapon::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 50578 ];

	AUTWeapon_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.AmmoMaxed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Mode                           ( CPF_Parm )

bool AUTWeapon::AmmoMaxed ( int Mode )
{
	static UFunction* pFnAmmoMaxed = NULL;

	if ( ! pFnAmmoMaxed )
		pFnAmmoMaxed = (UFunction*) UObject::GObjObjects()->Data[ 50533 ];

	AUTWeapon_execAmmoMaxed_Parms AmmoMaxed_Parms;
	AmmoMaxed_Parms.Mode = Mode;

	this->ProcessEvent ( pFnAmmoMaxed, &AmmoMaxed_Parms, NULL );

	return AmmoMaxed_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.AddAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int AUTWeapon::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 50574 ];

	AUTWeapon_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ConsumeAmmo
// [0x00020002] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 50571 ];

	AUTWeapon_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function UTGame.UTWeapon.StillFiring
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireMode                       ( CPF_Parm )

bool AUTWeapon::StillFiring ( unsigned char FireMode )
{
	static UFunction* pFnStillFiring = NULL;

	if ( ! pFnStillFiring )
		pFnStillFiring = (UFunction*) UObject::GObjObjects()->Data[ 50566 ];

	AUTWeapon_execStillFiring_Parms StillFiring_Parms;
	StillFiring_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnStillFiring, &StillFiring_Parms, NULL );

	return StillFiring_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ReadyToFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bFinished                      ( CPF_Parm )

bool AUTWeapon::ReadyToFire ( unsigned long bFinished )
{
	static UFunction* pFnReadyToFire = NULL;

	if ( ! pFnReadyToFire )
		pFnReadyToFire = (UFunction*) UObject::GObjObjects()->Data[ 49198 ];

	AUTWeapon_execReadyToFire_Parms ReadyToFire_Parms;
	ReadyToFire_Parms.bFinished = bFinished;

	this->ProcessEvent ( pFnReadyToFire, &ReadyToFire_Parms, NULL );

	return ReadyToFire_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.IsFullyCharged
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::IsFullyCharged ( )
{
	static UFunction* pFnIsFullyCharged = NULL;

	if ( ! pFnIsFullyCharged )
		pFnIsFullyCharged = (UFunction*) UObject::GObjObjects()->Data[ 50563 ];

	AUTWeapon_execIsFullyCharged_Parms IsFullyCharged_Parms;

	this->ProcessEvent ( pFnIsFullyCharged, &IsFullyCharged_Parms, NULL );

	return IsFullyCharged_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTWeapon::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 49207 ];

	AUTWeapon_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ShouldFireWithoutTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::ShouldFireWithoutTarget ( )
{
	static UFunction* pFnShouldFireWithoutTarget = NULL;

	if ( ! pFnShouldFireWithoutTarget )
		pFnShouldFireWithoutTarget = (UFunction*) UObject::GObjObjects()->Data[ 50559 ];

	AUTWeapon_execShouldFireWithoutTarget_Parms ShouldFireWithoutTarget_Parms;

	this->ProcessEvent ( pFnShouldFireWithoutTarget, &ShouldFireWithoutTarget_Parms, NULL );

	return ShouldFireWithoutTarget_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SplashJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::SplashJump ( )
{
	static UFunction* pFnSplashJump = NULL;

	if ( ! pFnSplashJump )
		pFnSplashJump = (UFunction*) UObject::GObjObjects()->Data[ 50556 ];

	AUTWeapon_execSplashJump_Parms SplashJump_Parms;

	this->ProcessEvent ( pFnSplashJump, &SplashJump_Parms, NULL );

	return SplashJump_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.RangedAttackTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::RangedAttackTime ( )
{
	static UFunction* pFnRangedAttackTime = NULL;

	if ( ! pFnRangedAttackTime )
		pFnRangedAttackTime = (UFunction*) UObject::GObjObjects()->Data[ 49215 ];

	AUTWeapon_execRangedAttackTime_Parms RangedAttackTime_Parms;

	this->ProcessEvent ( pFnRangedAttackTime, &RangedAttackTime_Parms, NULL );

	return RangedAttackTime_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SuggestDefenseStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::SuggestDefenseStyle ( )
{
	static UFunction* pFnSuggestDefenseStyle = NULL;

	if ( ! pFnSuggestDefenseStyle )
		pFnSuggestDefenseStyle = (UFunction*) UObject::GObjObjects()->Data[ 50554 ];

	AUTWeapon_execSuggestDefenseStyle_Parms SuggestDefenseStyle_Parms;

	this->ProcessEvent ( pFnSuggestDefenseStyle, &SuggestDefenseStyle_Parms, NULL );

	return SuggestDefenseStyle_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SuggestAttackStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::SuggestAttackStyle ( )
{
	static UFunction* pFnSuggestAttackStyle = NULL;

	if ( ! pFnSuggestAttackStyle )
		pFnSuggestAttackStyle = (UFunction*) UObject::GObjObjects()->Data[ 50552 ];

	AUTWeapon_execSuggestAttackStyle_Parms SuggestAttackStyle_Parms;

	this->ProcessEvent ( pFnSuggestAttackStyle, &SuggestAttackStyle_Parms, NULL );

	return SuggestAttackStyle_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.RecommendRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::RecommendRangedAttack ( )
{
	static UFunction* pFnRecommendRangedAttack = NULL;

	if ( ! pFnRecommendRangedAttack )
		pFnRecommendRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 50550 ];

	AUTWeapon_execRecommendRangedAttack_Parms RecommendRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendRangedAttack, &RecommendRangedAttack_Parms, NULL );

	return RecommendRangedAttack_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.FocusOnLeader
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLeaderFiring                  ( CPF_Parm )

bool AUTWeapon::FocusOnLeader ( unsigned long bLeaderFiring )
{
	static UFunction* pFnFocusOnLeader = NULL;

	if ( ! pFnFocusOnLeader )
		pFnFocusOnLeader = (UFunction*) UObject::GObjObjects()->Data[ 50547 ];

	AUTWeapon_execFocusOnLeader_Parms FocusOnLeader_Parms;
	FocusOnLeader_Parms.bLeaderFiring = bLeaderFiring;

	this->ProcessEvent ( pFnFocusOnLeader, &FocusOnLeader_Parms, NULL );

	return FocusOnLeader_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.FireOnRelease
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::FireOnRelease ( )
{
	static UFunction* pFnFireOnRelease = NULL;

	if ( ! pFnFireOnRelease )
		pFnFireOnRelease = (UFunction*) UObject::GObjObjects()->Data[ 50545 ];

	AUTWeapon_execFireOnRelease_Parms FireOnRelease_Parms;

	this->ProcessEvent ( pFnFireOnRelease, &FireOnRelease_Parms, NULL );

	return FireOnRelease_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.GetOptimalRangeFor
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

float AUTWeapon::GetOptimalRangeFor ( class AActor* Target )
{
	static UFunction* pFnGetOptimalRangeFor = NULL;

	if ( ! pFnGetOptimalRangeFor )
		pFnGetOptimalRangeFor = (UFunction*) UObject::GObjObjects()->Data[ 50542 ];

	AUTWeapon_execGetOptimalRangeFor_Parms GetOptimalRangeFor_Parms;
	GetOptimalRangeFor_Parms.Target = Target;

	this->ProcessEvent ( pFnGetOptimalRangeFor, &GetOptimalRangeFor_Parms, NULL );

	return GetOptimalRangeFor_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.CanHeal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTWeapon::CanHeal ( class AActor* Other )
{
	static UFunction* pFnCanHeal = NULL;

	if ( ! pFnCanHeal )
		pFnCanHeal = (UFunction*) UObject::GObjObjects()->Data[ 50539 ];

	AUTWeapon_execCanHeal_Parms CanHeal_Parms;
	CanHeal_Parms.Other = Other;

	this->ProcessEvent ( pFnCanHeal, &CanHeal_Parms, NULL );

	return CanHeal_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.GetDamageRadius
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::GetDamageRadius ( )
{
	static UFunction* pFnGetDamageRadius = NULL;

	if ( ! pFnGetDamageRadius )
		pFnGetDamageRadius = (UFunction*) UObject::GObjObjects()->Data[ 50536 ];

	AUTWeapon_execGetDamageRadius_Parms GetDamageRadius_Parms;

	this->ProcessEvent ( pFnGetDamageRadius, &GetDamageRadius_Parms, NULL );

	return GetDamageRadius_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.BotDesireability
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  PickupHolder                   ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTWeapon::BotDesireability ( class AActor* PickupHolder, class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 50521 ];

	AUTWeapon_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.PickupHolder = PickupHolder;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.CanAttack
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTWeapon::CanAttack ( class AActor* Other )
{
	static UFunction* pFnCanAttack = NULL;

	if ( ! pFnCanAttack )
		pFnCanAttack = (UFunction*) UObject::GObjObjects()->Data[ 50506 ];

	AUTWeapon_execCanAttack_Parms CanAttack_Parms;
	CanAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnCanAttack, &CanAttack_Parms, NULL );

	return CanAttack_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.GetWeaponRating
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::GetWeaponRating ( )
{
	static UFunction* pFnGetWeaponRating = NULL;

	if ( ! pFnGetWeaponRating )
		pFnGetWeaponRating = (UFunction*) UObject::GObjObjects()->Data[ 50501 ];

	AUTWeapon_execGetWeaponRating_Parms GetWeaponRating_Parms;

	this->ProcessEvent ( pFnGetWeaponRating, &GetWeaponRating_Parms, NULL );

	return GetWeaponRating_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.RelativeStrengthVersus
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )

float AUTWeapon::RelativeStrengthVersus ( class APawn* P, float Dist )
{
	static UFunction* pFnRelativeStrengthVersus = NULL;

	if ( ! pFnRelativeStrengthVersus )
		pFnRelativeStrengthVersus = (UFunction*) UObject::GObjObjects()->Data[ 50497 ];

	AUTWeapon_execRelativeStrengthVersus_Parms RelativeStrengthVersus_Parms;
	RelativeStrengthVersus_Parms.P = P;
	RelativeStrengthVersus_Parms.Dist = Dist;

	this->ProcessEvent ( pFnRelativeStrengthVersus, &RelativeStrengthVersus_Parms, NULL );

	return RelativeStrengthVersus_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.AdjustPlayerDamage
// [0x00420000] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void AUTWeapon::AdjustPlayerDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustPlayerDamage = NULL;

	if ( ! pFnAdjustPlayerDamage )
		pFnAdjustPlayerDamage = (UFunction*) UObject::GObjObjects()->Data[ 50491 ];

	AUTWeapon_execAdjustPlayerDamage_Parms AdjustPlayerDamage_Parms;
	AdjustPlayerDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustPlayerDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustPlayerDamage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnAdjustPlayerDamage, &AdjustPlayerDamage_Parms, NULL );

	if ( Damage )
		*Damage = AdjustPlayerDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustPlayerDamage_Parms.Momentum, 0xC );
};

// Function UTGame.UTWeapon.LagRot
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            NewValue                       ( CPF_Parm )
// int                            LastValue                      ( CPF_Parm )
// float                          MaxDiff                        ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

int AUTWeapon::LagRot ( int NewValue, int LastValue, float MaxDiff, int Index )
{
	static UFunction* pFnLagRot = NULL;

	if ( ! pFnLagRot )
		pFnLagRot = (UFunction*) UObject::GObjObjects()->Data[ 50477 ];

	AUTWeapon_execLagRot_Parms LagRot_Parms;
	LagRot_Parms.NewValue = NewValue;
	LagRot_Parms.LastValue = LastValue;
	LagRot_Parms.MaxDiff = MaxDiff;
	LagRot_Parms.Index = Index;

	this->ProcessEvent ( pFnLagRot, &LagRot_Parms, NULL );

	return LagRot_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ShouldLagRot
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::ShouldLagRot ( )
{
	static UFunction* pFnShouldLagRot = NULL;

	if ( ! pFnShouldLagRot )
		pFnShouldLagRot = (UFunction*) UObject::GObjObjects()->Data[ 50475 ];

	AUTWeapon_execShouldLagRot_Parms ShouldLagRot_Parms;

	this->ProcessEvent ( pFnShouldLagRot, &ShouldLagRot_Parms, NULL );

	return ShouldLagRot_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.SetPosition
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AUDKPawn*                Holder                         ( CPF_Parm )

void AUTWeapon::eventSetPosition ( class AUDKPawn* Holder )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 50449 ];

	AUTWeapon_eventSetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.Holder = Holder;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );
};

// Function UTGame.UTWeapon.GetHand
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTWeapon::GetHand ( )
{
	static UFunction* pFnGetHand = NULL;

	if ( ! pFnGetHand )
		pFnGetHand = (UFunction*) UObject::GObjObjects()->Data[ 50446 ];

	AUTWeapon_execGetHand_Parms GetHand_Parms;

	this->ProcessEvent ( pFnGetHand, &GetHand_Parms, NULL );

	return GetHand_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.CanThrow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeapon::CanThrow ( )
{
	static UFunction* pFnCanThrow = NULL;

	if ( ! pFnCanThrow )
		pFnCanThrow = (UFunction*) UObject::GObjObjects()->Data[ 50444 ];

	AUTWeapon_execCanThrow_Parms CanThrow_Parms;

	this->ProcessEvent ( pFnCanThrow, &CanThrow_Parms, NULL );

	return CanThrow_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.ServerReselectWeapon
// [0x002200C0] 
// Parameters infos:

void AUTWeapon::ServerReselectWeapon ( )
{
	static UFunction* pFnServerReselectWeapon = NULL;

	if ( ! pFnServerReselectWeapon )
		pFnServerReselectWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50443 ];

	AUTWeapon_execServerReselectWeapon_Parms ServerReselectWeapon_Parms;

	this->ProcessEvent ( pFnServerReselectWeapon, &ServerReselectWeapon_Parms, NULL );
};

// Function UTGame.UTWeapon.GetViewAxes
// [0x00420102] 
// Parameters infos:
// struct FVector                 XAxis                          ( CPF_Parm | CPF_OutParm )
// struct FVector                 YAxis                          ( CPF_Parm | CPF_OutParm )
// struct FVector                 ZAxis                          ( CPF_Parm | CPF_OutParm )

void AUTWeapon::GetViewAxes ( struct FVector* XAxis, struct FVector* YAxis, struct FVector* ZAxis )
{
	static UFunction* pFnGetViewAxes = NULL;

	if ( ! pFnGetViewAxes )
		pFnGetViewAxes = (UFunction*) UObject::GObjObjects()->Data[ 50439 ];

	AUTWeapon_execGetViewAxes_Parms GetViewAxes_Parms;

	this->ProcessEvent ( pFnGetViewAxes, &GetViewAxes_Parms, NULL );

	if ( XAxis )
		memcpy ( XAxis, &GetViewAxes_Parms.XAxis, 0xC );

	if ( YAxis )
		memcpy ( YAxis, &GetViewAxes_Parms.YAxis, 0xC );

	if ( ZAxis )
		memcpy ( ZAxis, &GetViewAxes_Parms.ZAxis, 0xC );
};

// Function UTGame.UTWeapon.PerformWeaponChange
// [0x00020102] 
// Parameters infos:

void AUTWeapon::PerformWeaponChange ( )
{
	static UFunction* pFnPerformWeaponChange = NULL;

	if ( ! pFnPerformWeaponChange )
		pFnPerformWeaponChange = (UFunction*) UObject::GObjObjects()->Data[ 50438 ];

	AUTWeapon_execPerformWeaponChange_Parms PerformWeaponChange_Parms;

	this->ProcessEvent ( pFnPerformWeaponChange, &PerformWeaponChange_Parms, NULL );
};

// Function UTGame.UTWeapon.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void AUTWeapon::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 50433 ];

	AUTWeapon_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function UTGame.UTWeapon.DetachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeapon::DetachMuzzleFlash ( )
{
	static UFunction* pFnDetachMuzzleFlash = NULL;

	if ( ! pFnDetachMuzzleFlash )
		pFnDetachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50431 ];

	AUTWeapon_execDetachMuzzleFlash_Parms DetachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnDetachMuzzleFlash, &DetachMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeapon.DetachWeapon
// [0x00020102] 
// Parameters infos:

void AUTWeapon::DetachWeapon ( )
{
	static UFunction* pFnDetachWeapon = NULL;

	if ( ! pFnDetachWeapon )
		pFnDetachWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50429 ];

	AUTWeapon_execDetachWeapon_Parms DetachWeapon_Parms;

	this->ProcessEvent ( pFnDetachWeapon, &DetachWeapon_Parms, NULL );
};

// Function UTGame.UTWeapon.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeapon::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50427 ];

	AUTWeapon_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeapon.SetMuzzleFlashParams
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void AUTWeapon::SetMuzzleFlashParams ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetMuzzleFlashParams = NULL;

	if ( ! pFnSetMuzzleFlashParams )
		pFnSetMuzzleFlashParams = (UFunction*) UObject::GObjObjects()->Data[ 50424 ];

	AUTWeapon_execSetMuzzleFlashParams_Parms SetMuzzleFlashParams_Parms;
	SetMuzzleFlashParams_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetMuzzleFlashParams, &SetMuzzleFlashParams_Parms, NULL );
};

// Function UTGame.UTWeapon.AttachWeaponTo
// [0x00024102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 50418 ];

	AUTWeapon_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void AUTWeapon::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 50414 ];

	AUTWeapon_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function UTGame.UTWeapon.GetEquipTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeapon::GetEquipTime ( )
{
	static UFunction* pFnGetEquipTime = NULL;

	if ( ! pFnGetEquipTime )
		pFnGetEquipTime = (UFunction*) UObject::GObjObjects()->Data[ 50411 ];

	AUTWeapon_execGetEquipTime_Parms GetEquipTime_Parms;

	this->ProcessEvent ( pFnGetEquipTime, &GetEquipTime_Parms, NULL );

	return GetEquipTime_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.TimeWeaponEquipping
// [0x00020102] 
// Parameters infos:

void AUTWeapon::TimeWeaponEquipping ( )
{
	static UFunction* pFnTimeWeaponEquipping = NULL;

	if ( ! pFnTimeWeaponEquipping )
		pFnTimeWeaponEquipping = (UFunction*) UObject::GObjObjects()->Data[ 50410 ];

	AUTWeapon_execTimeWeaponEquipping_Parms TimeWeaponEquipping_Parms;

	this->ProcessEvent ( pFnTimeWeaponEquipping, &TimeWeaponEquipping_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void AUTWeapon::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 50406 ];

	AUTWeapon_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function UTGame.UTWeapon.TimeWeaponPutDown
// [0x00020102] 
// Parameters infos:

void AUTWeapon::TimeWeaponPutDown ( )
{
	static UFunction* pFnTimeWeaponPutDown = NULL;

	if ( ! pFnTimeWeaponPutDown )
		pFnTimeWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 50405 ];

	AUTWeapon_execTimeWeaponPutDown_Parms TimeWeaponPutDown_Parms;

	this->ProcessEvent ( pFnTimeWeaponPutDown, &TimeWeaponPutDown_Parms, NULL );
};

// Function UTGame.UTWeapon.StopMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeapon::eventStopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50404 ];

	AUTWeapon_eventStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeapon.CauseMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeapon::eventCauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50396 ];

	AUTWeapon_eventCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeapon.CauseMuzzleFlashLight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeapon::eventCauseMuzzleFlashLight ( )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 50392 ];

	AUTWeapon_eventCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function UTGame.UTWeapon.MuzzleFlashTimer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeapon::eventMuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 50389 ];

	AUTWeapon_eventMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayFiringSound
// [0x00020102] 
// Parameters infos:

void AUTWeapon::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 50387 ];

	AUTWeapon_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function UTGame.UTWeapon.WeaponPlaySound
// [0x00024102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::WeaponPlaySound ( class USoundCue* Sound, float NoiseLoudness )
{
	static UFunction* pFnWeaponPlaySound = NULL;

	if ( ! pFnWeaponPlaySound )
		pFnWeaponPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 50383 ];

	AUTWeapon_execWeaponPlaySound_Parms WeaponPlaySound_Parms;
	WeaponPlaySound_Parms.Sound = Sound;
	WeaponPlaySound_Parms.NoiseLoudness = NoiseLoudness;

	this->ProcessEvent ( pFnWeaponPlaySound, &WeaponPlaySound_Parms, NULL );
};

// Function UTGame.UTWeapon.WeaponCalcCamera
// [0x00420100] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )

void AUTWeapon::WeaponCalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot )
{
	static UFunction* pFnWeaponCalcCamera = NULL;

	if ( ! pFnWeaponCalcCamera )
		pFnWeaponCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 50379 ];

	AUTWeapon_execWeaponCalcCamera_Parms WeaponCalcCamera_Parms;
	WeaponCalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnWeaponCalcCamera, &WeaponCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &WeaponCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &WeaponCalcCamera_Parms.out_CamRot, 0xC );
};

// Function UTGame.UTWeapon.ShakeView
// [0x00020102] 
// Parameters infos:

void AUTWeapon::ShakeView ( )
{
	static UFunction* pFnShakeView = NULL;

	if ( ! pFnShakeView )
		pFnShakeView = (UFunction*) UObject::GObjObjects()->Data[ 50375 ];

	AUTWeapon_execShakeView_Parms ShakeView_Parms;

	this->ProcessEvent ( pFnShakeView, &ShakeView_Parms, NULL );
};

// Function UTGame.UTWeapon.StopFireEffects
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::StopFireEffects ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFireEffects = NULL;

	if ( ! pFnStopFireEffects )
		pFnStopFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50373 ];

	AUTWeapon_execStopFireEffects_Parms StopFireEffects_Parms;
	StopFireEffects_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFireEffects, &StopFireEffects_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void AUTWeapon::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50368 ];

	AUTWeapon_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayWeaponAnimation
// [0x00024102] 
// Parameters infos:
// struct FName                   Sequence                       ( CPF_Parm )
// float                          fDesiredDuration               ( CPF_Parm )
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// class USkeletalMeshComponent*  SkelMesh                       ( CPF_OptionalParm | CPF_Parm | CPF_EditInline )

void AUTWeapon::PlayWeaponAnimation ( struct FName Sequence, float fDesiredDuration, unsigned long bLoop, class USkeletalMeshComponent* SkelMesh )
{
	static UFunction* pFnPlayWeaponAnimation = NULL;

	if ( ! pFnPlayWeaponAnimation )
		pFnPlayWeaponAnimation = (UFunction*) UObject::GObjObjects()->Data[ 50363 ];

	AUTWeapon_execPlayWeaponAnimation_Parms PlayWeaponAnimation_Parms;
	memcpy ( &PlayWeaponAnimation_Parms.Sequence, &Sequence, 0x8 );
	PlayWeaponAnimation_Parms.fDesiredDuration = fDesiredDuration;
	PlayWeaponAnimation_Parms.bLoop = bLoop;
	PlayWeaponAnimation_Parms.SkelMesh = SkelMesh;

	this->ProcessEvent ( pFnPlayWeaponAnimation, &PlayWeaponAnimation_Parms, NULL );
};

// Function UTGame.UTWeapon.PlayArmAnimation
// [0x00024102] 
// Parameters infos:
// struct FName                   Sequence                       ( CPF_Parm )
// float                          fDesiredDuration               ( CPF_Parm )
// unsigned long                  OffHand                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLoop                          ( CPF_OptionalParm | CPF_Parm )
// class USkeletalMeshComponent*  SkelMesh                       ( CPF_OptionalParm | CPF_Parm | CPF_EditInline )

void AUTWeapon::PlayArmAnimation ( struct FName Sequence, float fDesiredDuration, unsigned long OffHand, unsigned long bLoop, class USkeletalMeshComponent* SkelMesh )
{
	static UFunction* pFnPlayArmAnimation = NULL;

	if ( ! pFnPlayArmAnimation )
		pFnPlayArmAnimation = (UFunction*) UObject::GObjObjects()->Data[ 50353 ];

	AUTWeapon_execPlayArmAnimation_Parms PlayArmAnimation_Parms;
	memcpy ( &PlayArmAnimation_Parms.Sequence, &Sequence, 0x8 );
	PlayArmAnimation_Parms.fDesiredDuration = fDesiredDuration;
	PlayArmAnimation_Parms.OffHand = OffHand;
	PlayArmAnimation_Parms.bLoop = bLoop;
	PlayArmAnimation_Parms.SkelMesh = SkelMesh;

	this->ProcessEvent ( pFnPlayArmAnimation, &PlayArmAnimation_Parms, NULL );
};

// Function UTGame.UTWeapon.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float AUTWeapon::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 50350 ];

	AUTWeapon_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTWeapon::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 50344 ];

	AUTWeapon_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTWeapon.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTWeapon::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 44985 ];

	AUTWeapon_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.DrawLockedOn
// [0x00820102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void AUTWeapon::DrawLockedOn ( class AHUD* H )
{
	static UFunction* pFnDrawLockedOn = NULL;

	if ( ! pFnDrawLockedOn )
		pFnDrawLockedOn = (UFunction*) UObject::GObjObjects()->Data[ 50328 ];

	AUTWeapon_execDrawLockedOn_Parms DrawLockedOn_Parms;
	DrawLockedOn_Parms.H = H;

	this->ProcessEvent ( pFnDrawLockedOn, &DrawLockedOn_Parms, NULL );
};

// Function UTGame.UTWeapon.DrawWeaponCrosshair
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTWeapon::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 50312 ];

	AUTWeapon_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function UTGame.UTWeapon.ActiveRenderOverlays
// [0x00020102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void AUTWeapon::ActiveRenderOverlays ( class AHUD* H )
{
	static UFunction* pFnActiveRenderOverlays = NULL;

	if ( ! pFnActiveRenderOverlays )
		pFnActiveRenderOverlays = (UFunction*) UObject::GObjObjects()->Data[ 50308 ];

	AUTWeapon_execActiveRenderOverlays_Parms ActiveRenderOverlays_Parms;
	ActiveRenderOverlays_Parms.H = H;

	this->ProcessEvent ( pFnActiveRenderOverlays, &ActiveRenderOverlays_Parms, NULL );
};

// Function UTGame.UTWeapon.SetSkin
// [0x00020102] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void AUTWeapon::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 50304 ];

	AUTWeapon_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function UTGame.UTWeapon.ShouldSwitchTo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTWeapon*               InWeapon                       ( CPF_Parm )

bool AUTWeapon::ShouldSwitchTo ( class AUTWeapon* InWeapon )
{
	static UFunction* pFnShouldSwitchTo = NULL;

	if ( ! pFnShouldSwitchTo )
		pFnShouldSwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 50301 ];

	AUTWeapon_execShouldSwitchTo_Parms ShouldSwitchTo_Parms;
	ShouldSwitchTo_Parms.InWeapon = InWeapon;

	this->ProcessEvent ( pFnShouldSwitchTo, &ShouldSwitchTo_Parms, NULL );

	return ShouldSwitchTo_Parms.ReturnValue;
};

// Function UTGame.UTWeapon.CalcInventoryWeight
// [0x00020102] 
// Parameters infos:

void AUTWeapon::CalcInventoryWeight ( )
{
	static UFunction* pFnCalcInventoryWeight = NULL;

	if ( ! pFnCalcInventoryWeight )
		pFnCalcInventoryWeight = (UFunction*) UObject::GObjObjects()->Data[ 50298 ];

	AUTWeapon_execCalcInventoryWeight_Parms CalcInventoryWeight_Parms;

	this->ProcessEvent ( pFnCalcInventoryWeight, &CalcInventoryWeight_Parms, NULL );
};

// Function UTGame.UTWeapon.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeapon::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 50295 ];

	AUTWeapon_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeapon.CreateOverlayMesh
// [0x00020102] 
// Parameters infos:

void AUTWeapon::CreateOverlayMesh ( )
{
	static UFunction* pFnCreateOverlayMesh = NULL;

	if ( ! pFnCreateOverlayMesh )
		pFnCreateOverlayMesh = (UFunction*) UObject::GObjObjects()->Data[ 50290 ];

	AUTWeapon_execCreateOverlayMesh_Parms CreateOverlayMesh_Parms;

	this->ProcessEvent ( pFnCreateOverlayMesh, &CreateOverlayMesh_Parms, NULL );
};

// Function UTGame.UTWeapon.AdjustWeaponTimingForConsole
// [0x00020102] 
// Parameters infos:

void AUTWeapon::AdjustWeaponTimingForConsole ( )
{
	static UFunction* pFnAdjustWeaponTimingForConsole = NULL;

	if ( ! pFnAdjustWeaponTimingForConsole )
		pFnAdjustWeaponTimingForConsole = (UFunction*) UObject::GObjObjects()->Data[ 50288 ];

	AUTWeapon_execAdjustWeaponTimingForConsole_Parms AdjustWeaponTimingForConsole_Parms;

	this->ProcessEvent ( pFnAdjustWeaponTimingForConsole, &AdjustWeaponTimingForConsole_Parms, NULL );
};

// Function UTGame.UTWeapon.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTWeapon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50281 ];

	AUTWeapon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTWeapon.ServerStartFire
// [0x002200C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeapon::ServerStartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnServerStartFire = NULL;

	if ( ! pFnServerStartFire )
		pFnServerStartFire = (UFunction*) UObject::GObjObjects()->Data[ 50278 ];

	AUTWeapon_execServerStartFire_Parms ServerStartFire_Parms;
	ServerStartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnServerStartFire, &ServerStartFire_Parms, NULL );
};

// Function UTGame.UTIdleKickWarningMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTIdleKickWarningMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 56925 ];

	UUTIdleKickWarningMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTWillowWhisp.StartNextPath
// [0x00020102] 
// Parameters infos:

void AUTWillowWhisp::StartNextPath ( )
{
	static UFunction* pFnStartNextPath = NULL;

	if ( ! pFnStartNextPath )
		pFnStartNextPath = (UFunction*) UObject::GObjObjects()->Data[ 60843 ];

	AUTWillowWhisp_execStartNextPath_Parms StartNextPath_Parms;

	this->ProcessEvent ( pFnStartNextPath, &StartNextPath_Parms, NULL );
};

// Function UTGame.UTWillowWhisp.SetTemplate
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class UParticleSystem*         NewTemplate                    ( CPF_Parm )
// unsigned long                  bDestroyOnFinish               ( CPF_OptionalParm | CPF_Parm )

void AUTWillowWhisp::eventSetTemplate ( class UParticleSystem* NewTemplate, unsigned long bDestroyOnFinish )
{
	static UFunction* pFnSetTemplate = NULL;

	if ( ! pFnSetTemplate )
		pFnSetTemplate = (UFunction*) UObject::GObjObjects()->Data[ 60840 ];

	AUTWillowWhisp_eventSetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	SetTemplate_Parms.bDestroyOnFinish = bDestroyOnFinish;

	this->ProcessEvent ( pFnSetTemplate, &SetTemplate_Parms, NULL );
};

// Function UTGame.UTWillowWhisp.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWillowWhisp::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60838 ];

	AUTWillowWhisp_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWillowWhisp.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWillowWhisp::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 60837 ];

	AUTWillowWhisp_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTWillowWhisp.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AUTWillowWhisp::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60830 ];

	AUTWillowWhisp_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTReplicatedEmitter.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTReplicatedEmitter::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56076 ];

	AUTReplicatedEmitter_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTEmitter.SetLightEnvironment
// [0x00020002] 
// Parameters infos:
// class ULightEnvironmentComponent* Light                          ( CPF_Parm | CPF_EditInline )

void AUTEmitter::SetLightEnvironment ( class ULightEnvironmentComponent* Light )
{
	static UFunction* pFnSetLightEnvironment = NULL;

	if ( ! pFnSetLightEnvironment )
		pFnSetLightEnvironment = (UFunction*) UObject::GObjObjects()->Data[ 56059 ];

	AUTEmitter_execSetLightEnvironment_Parms SetLightEnvironment_Parms;
	SetLightEnvironment_Parms.Light = Light;

	this->ProcessEvent ( pFnSetLightEnvironment, &SetLightEnvironment_Parms, NULL );
};

// Function UTGame.UTEmitter.SetTemplate
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class UParticleSystem*         NewTemplate                    ( CPF_Parm )
// unsigned long                  bDestroyOnFinish               ( CPF_OptionalParm | CPF_Parm )

void AUTEmitter::eventSetTemplate ( class UParticleSystem* NewTemplate, unsigned long bDestroyOnFinish )
{
	static UFunction* pFnSetTemplate = NULL;

	if ( ! pFnSetTemplate )
		pFnSetTemplate = (UFunction*) UObject::GObjObjects()->Data[ 56054 ];

	AUTEmitter_eventSetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	SetTemplate_Parms.bDestroyOnFinish = bDestroyOnFinish;

	this->ProcessEvent ( pFnSetTemplate, &SetTemplate_Parms, NULL );
};

// Function UTGame.UTEmitter.GetTemplateForDistance
// [0x00422003] ( FUNC_Final )
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// class AWorldInfo*              WI                             ( CPF_Parm )
// TArray< struct FDistanceBasedParticleTemplate > TemplateList                   ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class UParticleSystem* AUTEmitter::GetTemplateForDistance ( struct FVector SpawnLocation, class AWorldInfo* WI, TArray< struct FDistanceBasedParticleTemplate >* TemplateList )
{
	static UFunction* pFnGetTemplateForDistance = NULL;

	if ( ! pFnGetTemplateForDistance )
		pFnGetTemplateForDistance = (UFunction*) UObject::GObjObjects()->Data[ 48362 ];

	AUTEmitter_execGetTemplateForDistance_Parms GetTemplateForDistance_Parms;
	memcpy ( &GetTemplateForDistance_Parms.SpawnLocation, &SpawnLocation, 0xC );
	GetTemplateForDistance_Parms.WI = WI;

	this->ProcessEvent ( pFnGetTemplateForDistance, &GetTemplateForDistance_Parms, NULL );

	if ( TemplateList )
		memcpy ( TemplateList, &GetTemplateForDistance_Parms.TemplateList, 0xC );

	return GetTemplateForDistance_Parms.ReturnValue;
};

// Function UTGame.UTObjectiveAnnouncement.SetHUDDisplay
// [0x00022102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_Parm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )

void UUTObjectiveAnnouncement::SetHUDDisplay ( class APlayerController* P, int Switch, struct FString Text, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnSetHUDDisplay = NULL;

	if ( ! pFnSetHUDDisplay )
		pFnSetHUDDisplay = (UFunction*) UObject::GObjObjects()->Data[ 57602 ];

	UUTObjectiveAnnouncement_execSetHUDDisplay_Parms SetHUDDisplay_Parms;
	SetHUDDisplay_Parms.P = P;
	SetHUDDisplay_Parms.Switch = Switch;
	memcpy ( &SetHUDDisplay_Parms.Text, &Text, 0xC );
	SetHUDDisplay_Parms.RelatedPRI = RelatedPRI;
	SetHUDDisplay_Parms.RelatedPRI01 = RelatedPRI01;
	SetHUDDisplay_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnSetHUDDisplay, &SetHUDDisplay_Parms, NULL );
};

// Function UTGame.UTObjectiveAnnouncement.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTObjectiveAnnouncement::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 57597 ];

	UUTObjectiveAnnouncement_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function UTGame.UTObjectiveAnnouncement.GetObjectiveAnnouncement
// [0x00822002] 
// Parameters infos:
// struct FObjectiveAnnouncementInfo ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  MessageIndex                   ( CPF_Parm )
// class UObject*                 Objective                      ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

struct FObjectiveAnnouncementInfo UUTObjectiveAnnouncement::GetObjectiveAnnouncement ( unsigned char MessageIndex, class UObject* Objective, class APlayerController* PC )
{
	static UFunction* pFnGetObjectiveAnnouncement = NULL;

	if ( ! pFnGetObjectiveAnnouncement )
		pFnGetObjectiveAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 57587 ];

	UUTObjectiveAnnouncement_execGetObjectiveAnnouncement_Parms GetObjectiveAnnouncement_Parms;
	GetObjectiveAnnouncement_Parms.MessageIndex = MessageIndex;
	GetObjectiveAnnouncement_Parms.Objective = Objective;
	GetObjectiveAnnouncement_Parms.PC = PC;

	this->ProcessEvent ( pFnGetObjectiveAnnouncement, &GetObjectiveAnnouncement_Parms, NULL );

	return GetObjectiveAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTObjectiveSpecificMessage.SetHUDDisplay
// [0x00022102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_Parm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )

void UUTObjectiveSpecificMessage::SetHUDDisplay ( class APlayerController* P, int Switch, struct FString Text, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnSetHUDDisplay = NULL;

	if ( ! pFnSetHUDDisplay )
		pFnSetHUDDisplay = (UFunction*) UObject::GObjObjects()->Data[ 57186 ];

	UUTObjectiveSpecificMessage_execSetHUDDisplay_Parms SetHUDDisplay_Parms;
	SetHUDDisplay_Parms.P = P;
	SetHUDDisplay_Parms.Switch = Switch;
	memcpy ( &SetHUDDisplay_Parms.Text, &Text, 0xC );
	SetHUDDisplay_Parms.RelatedPRI = RelatedPRI;
	SetHUDDisplay_Parms.RelatedPRI01 = RelatedPRI01;
	SetHUDDisplay_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnSetHUDDisplay, &SetHUDDisplay_Parms, NULL );
};

// Function UTGame.UTObjectiveSpecificMessage.GetString
// [0x00826002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTObjectiveSpecificMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57178 ];

	UUTObjectiveSpecificMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTObjectiveSpecificMessage.ClientReceive
// [0x00826102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTObjectiveSpecificMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57170 ];

	UUTObjectiveSpecificMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTObjectiveSpecificMessage.AnnouncementSound
// [0x00822002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTObjectiveSpecificMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 57164 ];

	UUTObjectiveSpecificMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTObjectiveSpecificMessage.GetObjectiveAnnouncement
// [0x00022000] 
// Parameters infos:
// struct FObjectiveAnnouncementInfo ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  MessageIndex                   ( CPF_Parm )
// class UObject*                 Objective                      ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

struct FObjectiveAnnouncementInfo UUTObjectiveSpecificMessage::GetObjectiveAnnouncement ( unsigned char MessageIndex, class UObject* Objective, class APlayerController* PC )
{
	static UFunction* pFnGetObjectiveAnnouncement = NULL;

	if ( ! pFnGetObjectiveAnnouncement )
		pFnGetObjectiveAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 57159 ];

	UUTObjectiveSpecificMessage_execGetObjectiveAnnouncement_Parms GetObjectiveAnnouncement_Parms;
	GetObjectiveAnnouncement_Parms.MessageIndex = MessageIndex;
	GetObjectiveAnnouncement_Parms.Objective = Objective;
	GetObjectiveAnnouncement_Parms.PC = PC;

	this->ProcessEvent ( pFnGetObjectiveAnnouncement, &GetObjectiveAnnouncement_Parms, NULL );

	return GetObjectiveAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.ApplyWeaponEffects
// [0x00024102] 
// Parameters infos:
// int                            OverlayFlags                   ( CPF_Parm )
// int                            SeatIndex                      ( CPF_OptionalParm | CPF_Parm )

void AUTWeaponPawn::ApplyWeaponEffects ( int OverlayFlags, int SeatIndex )
{
	static UFunction* pFnApplyWeaponEffects = NULL;

	if ( ! pFnApplyWeaponEffects )
		pFnApplyWeaponEffects = (UFunction*) UObject::GObjObjects()->Data[ 52579 ];

	AUTWeaponPawn_execApplyWeaponEffects_Parms ApplyWeaponEffects_Parms;
	ApplyWeaponEffects_Parms.OverlayFlags = OverlayFlags;
	ApplyWeaponEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnApplyWeaponEffects, &ApplyWeaponEffects_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.DisplayHud
// [0x00024002] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector2D               HudPOS                         ( CPF_Parm )
// int                            SIndex                         ( CPF_OptionalParm | CPF_Parm )

void AUTWeaponPawn::DisplayHud ( class AUTHUD* HUD, class UCanvas* Canvas, struct FVector2D HudPOS, int SIndex )
{
	static UFunction* pFnDisplayHud = NULL;

	if ( ! pFnDisplayHud )
		pFnDisplayHud = (UFunction*) UObject::GObjObjects()->Data[ 52574 ];

	AUTWeaponPawn_execDisplayHud_Parms DisplayHud_Parms;
	DisplayHud_Parms.HUD = HUD;
	DisplayHud_Parms.Canvas = Canvas;
	memcpy ( &DisplayHud_Parms.HudPOS, &HudPOS, 0x8 );
	DisplayHud_Parms.SIndex = SIndex;

	this->ProcessEvent ( pFnDisplayHud, &DisplayHud_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTWeaponPawn::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 52570 ];

	AUTWeaponPawn_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool AUTWeaponPawn::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 52564 ];

	AUTWeaponPawn_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.DriverLeave
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool AUTWeaponPawn::DriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 52560 ];

	AUTWeaponPawn_execDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void AUTWeaponPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 52557 ];

	AUTWeaponPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.HoldGameObject
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKCarriedObject*       GameObj                        ( CPF_Parm )

void AUTWeaponPawn::eventHoldGameObject ( class AUDKCarriedObject* GameObj )
{
	static UFunction* pFnHoldGameObject = NULL;

	if ( ! pFnHoldGameObject )
		pFnHoldGameObject = (UFunction*) UObject::GObjObjects()->Data[ 52555 ];

	AUTWeaponPawn_eventHoldGameObject_Parms HoldGameObject_Parms;
	HoldGameObject_Parms.GameObj = GameObj;

	this->ProcessEvent ( pFnHoldGameObject, &HoldGameObject_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTWeaponPawn::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 52552 ];

	AUTWeaponPawn_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.SetBaseEyeheight
// [0x00020102] 
// Parameters infos:

void AUTWeaponPawn::SetBaseEyeheight ( )
{
	static UFunction* pFnSetBaseEyeheight = NULL;

	if ( ! pFnSetBaseEyeheight )
		pFnSetBaseEyeheight = (UFunction*) UObject::GObjObjects()->Data[ 52551 ];

	AUTWeaponPawn_execSetBaseEyeheight_Parms SetBaseEyeheight_Parms;

	this->ProcessEvent ( pFnSetBaseEyeheight, &SetBaseEyeheight_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.GetCollisionRadius
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeaponPawn::GetCollisionRadius ( )
{
	static UFunction* pFnGetCollisionRadius = NULL;

	if ( ! pFnGetCollisionRadius )
		pFnGetCollisionRadius = (UFunction*) UObject::GObjObjects()->Data[ 52549 ];

	AUTWeaponPawn_execGetCollisionRadius_Parms GetCollisionRadius_Parms;

	this->ProcessEvent ( pFnGetCollisionRadius, &GetCollisionRadius_Parms, NULL );

	return GetCollisionRadius_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool AUTWeaponPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 52546 ];

	AUTWeaponPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.SetMovementPhysics
// [0x00020000] 
// Parameters infos:

void AUTWeaponPawn::SetMovementPhysics ( )
{
	static UFunction* pFnSetMovementPhysics = NULL;

	if ( ! pFnSetMovementPhysics )
		pFnSetMovementPhysics = (UFunction*) UObject::GObjObjects()->Data[ 52545 ];

	AUTWeaponPawn_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

	this->ProcessEvent ( pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.BaseChange
// [0x00020820] ( FUNC_Event )
// Parameters infos:

void AUTWeaponPawn::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 52544 ];

	AUTWeaponPawn_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.JumpOffPawn
// [0x00020000] 
// Parameters infos:

void AUTWeaponPawn::JumpOffPawn ( )
{
	static UFunction* pFnJumpOffPawn = NULL;

	if ( ! pFnJumpOffPawn )
		pFnJumpOffPawn = (UFunction*) UObject::GObjObjects()->Data[ 52543 ];

	AUTWeaponPawn_execJumpOffPawn_Parms JumpOffPawn_Parms;

	this->ProcessEvent ( pFnJumpOffPawn, &JumpOffPawn_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.AddVelocity
// [0x00024000] 
// Parameters infos:
// struct FVector                 NewVelocity                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )

void AUTWeaponPawn::AddVelocity ( struct FVector NewVelocity, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnAddVelocity = NULL;

	if ( ! pFnAddVelocity )
		pFnAddVelocity = (UFunction*) UObject::GObjObjects()->Data[ 52538 ];

	AUTWeaponPawn_execAddVelocity_Parms AddVelocity_Parms;
	memcpy ( &AddVelocity_Parms.NewVelocity, &NewVelocity, 0xC );
	memcpy ( &AddVelocity_Parms.HitLocation, &HitLocation, 0xC );
	AddVelocity_Parms.DamageType = DamageType;
	memcpy ( &AddVelocity_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnAddVelocity, &AddVelocity_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.DropToGround
// [0x00020000] 
// Parameters infos:

void AUTWeaponPawn::DropToGround ( )
{
	static UFunction* pFnDropToGround = NULL;

	if ( ! pFnDropToGround )
		pFnDropToGround = (UFunction*) UObject::GObjObjects()->Data[ 52537 ];

	AUTWeaponPawn_execDropToGround_Parms DropToGround_Parms;

	this->ProcessEvent ( pFnDropToGround, &DropToGround_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.PlaceExitingDriver
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_OptionalParm | CPF_Parm )

bool AUTWeaponPawn::PlaceExitingDriver ( class APawn* ExitingDriver )
{
	static UFunction* pFnPlaceExitingDriver = NULL;

	if ( ! pFnPlaceExitingDriver )
		pFnPlaceExitingDriver = (UFunction*) UObject::GObjObjects()->Data[ 52534 ];

	AUTWeaponPawn_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL );

	return PlaceExitingDriver_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.AdjustCameraScale
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIn                            ( CPF_Parm )

void AUTWeaponPawn::AdjustCameraScale ( unsigned long bIn )
{
	static UFunction* pFnAdjustCameraScale = NULL;

	if ( ! pFnAdjustCameraScale )
		pFnAdjustCameraScale = (UFunction*) UObject::GObjObjects()->Data[ 52532 ];

	AUTWeaponPawn_execAdjustCameraScale_Parms AdjustCameraScale_Parms;
	AdjustCameraScale_Parms.bIn = bIn;

	this->ProcessEvent ( pFnAdjustCameraScale, &AdjustCameraScale_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.ServerChangeSeat
// [0x002200C2] 
// Parameters infos:
// int                            RequestedSeat                  ( CPF_Parm )

void AUTWeaponPawn::ServerChangeSeat ( int RequestedSeat )
{
	static UFunction* pFnServerChangeSeat = NULL;

	if ( ! pFnServerChangeSeat )
		pFnServerChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 52530 ];

	AUTWeaponPawn_execServerChangeSeat_Parms ServerChangeSeat_Parms;
	ServerChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnServerChangeSeat, &ServerChangeSeat_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.ServerAdjacentSeat
// [0x002200C2] 
// Parameters infos:
// int                            Direction                      ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

void AUTWeaponPawn::ServerAdjacentSeat ( int Direction, class AController* C )
{
	static UFunction* pFnServerAdjacentSeat = NULL;

	if ( ! pFnServerAdjacentSeat )
		pFnServerAdjacentSeat = (UFunction*) UObject::GObjObjects()->Data[ 52527 ];

	AUTWeaponPawn_execServerAdjacentSeat_Parms ServerAdjacentSeat_Parms;
	ServerAdjacentSeat_Parms.Direction = Direction;
	ServerAdjacentSeat_Parms.C = C;

	this->ProcessEvent ( pFnServerAdjacentSeat, &ServerAdjacentSeat_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.DriverLeft
// [0x00020002] 
// Parameters infos:

void AUTWeaponPawn::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 52525 ];

	AUTWeaponPawn_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTWeaponPawn::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 52522 ];

	AUTWeaponPawn_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.ClearFlashLocation
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )

void AUTWeaponPawn::ClearFlashLocation ( class AWeapon* Who )
{
	static UFunction* pFnClearFlashLocation = NULL;

	if ( ! pFnClearFlashLocation )
		pFnClearFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 52520 ];

	AUTWeaponPawn_execClearFlashLocation_Parms ClearFlashLocation_Parms;
	ClearFlashLocation_Parms.Who = Who;

	this->ProcessEvent ( pFnClearFlashLocation, &ClearFlashLocation_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.SetFlashLocation
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 NewLoc                         ( CPF_Parm )

void AUTWeaponPawn::SetFlashLocation ( class AWeapon* Who, unsigned char FireModeNum, struct FVector NewLoc )
{
	static UFunction* pFnSetFlashLocation = NULL;

	if ( ! pFnSetFlashLocation )
		pFnSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 52516 ];

	AUTWeaponPawn_execSetFlashLocation_Parms SetFlashLocation_Parms;
	SetFlashLocation_Parms.Who = Who;
	SetFlashLocation_Parms.FireModeNum = FireModeNum;
	memcpy ( &SetFlashLocation_Parms.NewLoc, &NewLoc, 0xC );

	this->ProcessEvent ( pFnSetFlashLocation, &SetFlashLocation_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.ClearFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )

void AUTWeaponPawn::ClearFlashCount ( class AWeapon* Who )
{
	static UFunction* pFnClearFlashCount = NULL;

	if ( ! pFnClearFlashCount )
		pFnClearFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 52514 ];

	AUTWeaponPawn_execClearFlashCount_Parms ClearFlashCount_Parms;
	ClearFlashCount_Parms.Who = Who;

	this->ProcessEvent ( pFnClearFlashCount, &ClearFlashCount_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.IncrementFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Who                            ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeaponPawn::IncrementFlashCount ( class AWeapon* Who, unsigned char FireModeNum )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 52511 ];

	AUTWeaponPawn_execIncrementFlashCount_Parms IncrementFlashCount_Parms;
	IncrementFlashCount_Parms.Who = Who;
	IncrementFlashCount_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.SetFiringMode
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 Weap                           ( CPF_Parm )
// unsigned char                  FiringModeNum                  ( CPF_Parm )

void AUTWeaponPawn::SetFiringMode ( class AWeapon* Weap, unsigned char FiringModeNum )
{
	static UFunction* pFnSetFiringMode = NULL;

	if ( ! pFnSetFiringMode )
		pFnSetFiringMode = (UFunction*) UObject::GObjObjects()->Data[ 52508 ];

	AUTWeaponPawn_execSetFiringMode_Parms SetFiringMode_Parms;
	SetFiringMode_Parms.Weap = Weap;
	SetFiringMode_Parms.FiringModeNum = FiringModeNum;

	this->ProcessEvent ( pFnSetFiringMode, &SetFiringMode_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void AUTWeaponPawn::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 52501 ];

	AUTWeaponPawn_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function UTGame.UTWeaponPawn.CalcCamera
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTWeaponPawn::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 52494 ];

	AUTWeaponPawn_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeaponPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 52492 ];

	AUTWeaponPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeaponPawn.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTWeaponPawn::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 52487 ];

	AUTWeaponPawn_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTWeaponPawn.GetVehicleDrivingStatName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTWeaponPawn::GetVehicleDrivingStatName ( )
{
	static UFunction* pFnGetVehicleDrivingStatName = NULL;

	if ( ! pFnGetVehicleDrivingStatName )
		pFnGetVehicleDrivingStatName = (UFunction*) UObject::GObjObjects()->Data[ 52484 ];

	AUTWeaponPawn_execGetVehicleDrivingStatName_Parms GetVehicleDrivingStatName_Parms;

	this->ProcessEvent ( pFnGetVehicleDrivingStatName, &GetVehicleDrivingStatName_Parms, NULL );

	return GetVehicleDrivingStatName_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UUTTeamGameMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 58563 ];

	UUTTeamGameMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.GetPos
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class AHUD*                    myHUD                          ( CPF_Parm )

float UUTTeamGameMessage::GetPos ( int Switch, class AHUD* myHUD )
{
	static UFunction* pFnGetPos = NULL;

	if ( ! pFnGetPos )
		pFnGetPos = (UFunction*) UObject::GObjObjects()->Data[ 58559 ];

	UUTTeamGameMessage_execGetPos_Parms GetPos_Parms;
	GetPos_Parms.Switch = Switch;
	GetPos_Parms.myHUD = myHUD;

	this->ProcessEvent ( pFnGetPos, &GetPos_Parms, NULL );

	return GetPos_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UUTTeamGameMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 58553 ];

	UUTTeamGameMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTTeamGameMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 58548 ];

	UUTTeamGameMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTTeamGameMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 58541 ];

	UUTTeamGameMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTTeamGameMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTTeamGameMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 58535 ];

	UUTTeamGameMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTTimerMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UUTTimerMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 58683 ];

	UUTTimerMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function UTGame.UTTimerMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTTimerMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 58678 ];

	UUTTimerMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTTimerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTTimerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 58671 ];

	UUTTimerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTTimerMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTTimerMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 58663 ];

	UUTTimerMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTStartupMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTStartupMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 58509 ];

	UUTStartupMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTStartupMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTStartupMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 58504 ];

	UUTStartupMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTStartupMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTStartupMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 58496 ];

	UUTStartupMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayConsoleMessages
// [0x00020002] 
// Parameters infos:

void AUTHUD::DisplayConsoleMessages ( )
{
	static UFunction* pFnDisplayConsoleMessages = NULL;

	if ( ! pFnDisplayConsoleMessages )
		pFnDisplayConsoleMessages = (UFunction*) UObject::GObjObjects()->Data[ 54597 ];

	AUTHUD_execDisplayConsoleMessages_Parms DisplayConsoleMessages_Parms;

	this->ProcessEvent ( pFnDisplayConsoleMessages, &DisplayConsoleMessages_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayLeaderBoard
// [0x00820002] 
// Parameters infos:
// struct FVector2D               pos                            ( CPF_Parm )

void AUTHUD::DisplayLeaderBoard ( struct FVector2D pos )
{
	static UFunction* pFnDisplayLeaderBoard = NULL;

	if ( ! pFnDisplayLeaderBoard )
		pFnDisplayLeaderBoard = (UFunction*) UObject::GObjObjects()->Data[ 54584 ];

	AUTHUD_execDisplayLeaderBoard_Parms DisplayLeaderBoard_Parms;
	memcpy ( &DisplayLeaderBoard_Parms.pos, &pos, 0x8 );

	this->ProcessEvent ( pFnDisplayLeaderBoard, &DisplayLeaderBoard_Parms, NULL );
};

// Function UTGame.UTHUD.DrawNameplateBackground
// [0x00024002] 
// Parameters infos:
// struct FVector2D               pos                            ( CPF_Parm )
// float                          WordWidth                      ( CPF_Parm )
// struct FLinearColor            NameplateColor                 ( CPF_Parm )
// float                          WordHeight                     ( CPF_OptionalParm | CPF_Parm )

void AUTHUD::DrawNameplateBackground ( struct FVector2D pos, float WordWidth, struct FLinearColor NameplateColor, float WordHeight )
{
	static UFunction* pFnDrawNameplateBackground = NULL;

	if ( ! pFnDrawNameplateBackground )
		pFnDrawNameplateBackground = (UFunction*) UObject::GObjObjects()->Data[ 54577 ];

	AUTHUD_execDrawNameplateBackground_Parms DrawNameplateBackground_Parms;
	memcpy ( &DrawNameplateBackground_Parms.pos, &pos, 0x8 );
	DrawNameplateBackground_Parms.WordWidth = WordWidth;
	memcpy ( &DrawNameplateBackground_Parms.NameplateColor, &NameplateColor, 0x10 );
	DrawNameplateBackground_Parms.WordHeight = WordHeight;

	this->ProcessEvent ( pFnDrawNameplateBackground, &DrawNameplateBackground_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayFragCount
// [0x00020002] 
// Parameters infos:
// struct FVector2D               pos                            ( CPF_Parm )

void AUTHUD::DisplayFragCount ( struct FVector2D pos )
{
	static UFunction* pFnDisplayFragCount = NULL;

	if ( ! pFnDisplayFragCount )
		pFnDisplayFragCount = (UFunction*) UObject::GObjObjects()->Data[ 54573 ];

	AUTHUD_execDisplayFragCount_Parms DisplayFragCount_Parms;
	memcpy ( &DisplayFragCount_Parms.pos, &pos, 0x8 );

	this->ProcessEvent ( pFnDisplayFragCount, &DisplayFragCount_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayScoring
// [0x00820002] 
// Parameters infos:

void AUTHUD::DisplayScoring ( )
{
	static UFunction* pFnDisplayScoring = NULL;

	if ( ! pFnDisplayScoring )
		pFnDisplayScoring = (UFunction*) UObject::GObjObjects()->Data[ 54571 ];

	AUTHUD_execDisplayScoring_Parms DisplayScoring_Parms;

	this->ProcessEvent ( pFnDisplayScoring, &DisplayScoring_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayPowerups
// [0x00020002] 
// Parameters infos:

void AUTHUD::DisplayPowerups ( )
{
	static UFunction* pFnDisplayPowerups = NULL;

	if ( ! pFnDisplayPowerups )
		pFnDisplayPowerups = (UFunction*) UObject::GObjObjects()->Data[ 54568 ];

	AUTHUD_execDisplayPowerups_Parms DisplayPowerups_Parms;

	this->ProcessEvent ( pFnDisplayPowerups, &DisplayPowerups_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayAmmo
// [0x00820002] 
// Parameters infos:
// class AUTWeapon*               Weapon                         ( CPF_Parm )

void AUTHUD::DisplayAmmo ( class AUTWeapon* Weapon )
{
	static UFunction* pFnDisplayAmmo = NULL;

	if ( ! pFnDisplayAmmo )
		pFnDisplayAmmo = (UFunction*) UObject::GObjObjects()->Data[ 54561 ];

	AUTHUD_execDisplayAmmo_Parms DisplayAmmo_Parms;
	DisplayAmmo_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnDisplayAmmo, &DisplayAmmo_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayPawnDoll
// [0x00820002] 
// Parameters infos:

void AUTHUD::DisplayPawnDoll ( )
{
	static UFunction* pFnDisplayPawnDoll = NULL;

	if ( ! pFnDisplayPawnDoll )
		pFnDisplayPawnDoll = (UFunction*) UObject::GObjObjects()->Data[ 54552 ];

	AUTHUD_execDisplayPawnDoll_Parms DisplayPawnDoll_Parms;

	this->ProcessEvent ( pFnDisplayPawnDoll, &DisplayPawnDoll_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayClock
// [0x00820002] 
// Parameters infos:

void AUTHUD::DisplayClock ( )
{
	static UFunction* pFnDisplayClock = NULL;

	if ( ! pFnDisplayClock )
		pFnDisplayClock = (UFunction*) UObject::GObjObjects()->Data[ 54549 ];

	AUTHUD_execDisplayClock_Parms DisplayClock_Parms;

	this->ProcessEvent ( pFnDisplayClock, &DisplayClock_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayHUDMessage
// [0x00024002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          XOffsetPct                     ( CPF_OptionalParm | CPF_Parm )
// float                          YOffsetPct                     ( CPF_OptionalParm | CPF_Parm )

void AUTHUD::DisplayHUDMessage ( struct FString Message, float XOffsetPct, float YOffsetPct )
{
	static UFunction* pFnDisplayHUDMessage = NULL;

	if ( ! pFnDisplayHUDMessage )
		pFnDisplayHUDMessage = (UFunction*) UObject::GObjObjects()->Data[ 54538 ];

	AUTHUD_execDisplayHUDMessage_Parms DisplayHUDMessage_Parms;
	memcpy ( &DisplayHUDMessage_Parms.Message, &Message, 0xC );
	DisplayHUDMessage_Parms.XOffsetPct = XOffsetPct;
	DisplayHUDMessage_Parms.YOffsetPct = YOffsetPct;

	this->ProcessEvent ( pFnDisplayHUDMessage, &DisplayHUDMessage_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayPortrait
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTHUD::DisplayPortrait ( float DeltaTime )
{
	static UFunction* pFnDisplayPortrait = NULL;

	if ( ! pFnDisplayPortrait )
		pFnDisplayPortrait = (UFunction*) UObject::GObjObjects()->Data[ 54530 ];

	AUTHUD_execDisplayPortrait_Parms DisplayPortrait_Parms;
	DisplayPortrait_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDisplayPortrait, &DisplayPortrait_Parms, NULL );
};

// Function UTGame.UTHUD.HidePortrait
// [0x00020102] 
// Parameters infos:

void AUTHUD::HidePortrait ( )
{
	static UFunction* pFnHidePortrait = NULL;

	if ( ! pFnHidePortrait )
		pFnHidePortrait = (UFunction*) UObject::GObjObjects()->Data[ 54528 ];

	AUTHUD_execHidePortrait_Parms HidePortrait_Parms;

	this->ProcessEvent ( pFnHidePortrait, &HidePortrait_Parms, NULL );
};

// Function UTGame.UTHUD.ShowPortrait
// [0x00024102] 
// Parameters infos:
// class AUTPlayerReplicationInfo* ShowPRI                        ( CPF_Parm )
// float                          PortraitDuration               ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bOverrideCurrentSpeaker        ( CPF_OptionalParm | CPF_Parm )

void AUTHUD::ShowPortrait ( class AUTPlayerReplicationInfo* ShowPRI, float PortraitDuration, unsigned long bOverrideCurrentSpeaker )
{
	static UFunction* pFnShowPortrait = NULL;

	if ( ! pFnShowPortrait )
		pFnShowPortrait = (UFunction*) UObject::GObjObjects()->Data[ 54524 ];

	AUTHUD_execShowPortrait_Parms ShowPortrait_Parms;
	ShowPortrait_Parms.ShowPRI = ShowPRI;
	ShowPortrait_Parms.PortraitDuration = PortraitDuration;
	ShowPortrait_Parms.bOverrideCurrentSpeaker = bOverrideCurrentSpeaker;

	this->ProcessEvent ( pFnShowPortrait, &ShowPortrait_Parms, NULL );
};

// Function UTGame.UTHUD.GetFontSizeIndex
// [0x00022002] 
// Parameters infos:
// class UFont*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FontSize                       ( CPF_Parm )

class UFont* AUTHUD::GetFontSizeIndex ( int FontSize )
{
	static UFunction* pFnGetFontSizeIndex = NULL;

	if ( ! pFnGetFontSizeIndex )
		pFnGetFontSizeIndex = (UFunction*) UObject::GObjObjects()->Data[ 54521 ];

	AUTHUD_execGetFontSizeIndex_Parms GetFontSizeIndex_Parms;
	GetFontSizeIndex_Parms.FontSize = FontSize;

	this->ProcessEvent ( pFnGetFontSizeIndex, &GetFontSizeIndex_Parms, NULL );

	return GetFontSizeIndex_Parms.ReturnValue;
};

// Function UTGame.UTHUD.FormatTime
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString AUTHUD::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 46942 ];

	AUTHUD_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function UTGame.UTHUD.DrawBarGraph
// [0x00022102] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          MaxWidth                       ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// struct FColor                  BarColor                       ( CPF_Parm )
// struct FColor                  BackColor                      ( CPF_Parm )

void AUTHUD::DrawBarGraph ( float X, float Y, float Width, float MaxWidth, float Height, class UCanvas* DrawCanvas, struct FColor BarColor, struct FColor BackColor )
{
	static UFunction* pFnDrawBarGraph = NULL;

	if ( ! pFnDrawBarGraph )
		pFnDrawBarGraph = (UFunction*) UObject::GObjObjects()->Data[ 54508 ];

	AUTHUD_execDrawBarGraph_Parms DrawBarGraph_Parms;
	DrawBarGraph_Parms.X = X;
	DrawBarGraph_Parms.Y = Y;
	DrawBarGraph_Parms.Width = Width;
	DrawBarGraph_Parms.MaxWidth = MaxWidth;
	DrawBarGraph_Parms.Height = Height;
	DrawBarGraph_Parms.DrawCanvas = DrawCanvas;
	memcpy ( &DrawBarGraph_Parms.BarColor, &BarColor, 0x4 );
	memcpy ( &DrawBarGraph_Parms.BackColor, &BackColor, 0x4 );

	this->ProcessEvent ( pFnDrawBarGraph, &DrawBarGraph_Parms, NULL );
};

// Function UTGame.UTHUD.DrawHealth
// [0x00826102] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          MaxWidth                       ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// unsigned char                  Alpha                          ( CPF_OptionalParm | CPF_Parm )

void AUTHUD::DrawHealth ( float X, float Y, float Width, float MaxWidth, float Height, class UCanvas* DrawCanvas, unsigned char Alpha )
{
	static UFunction* pFnDrawHealth = NULL;

	if ( ! pFnDrawHealth )
		pFnDrawHealth = (UFunction*) UObject::GObjObjects()->Data[ 54497 ];

	AUTHUD_execDrawHealth_Parms DrawHealth_Parms;
	DrawHealth_Parms.X = X;
	DrawHealth_Parms.Y = Y;
	DrawHealth_Parms.Width = Width;
	DrawHealth_Parms.MaxWidth = MaxWidth;
	DrawHealth_Parms.Height = Height;
	DrawHealth_Parms.DrawCanvas = DrawCanvas;
	DrawHealth_Parms.Alpha = Alpha;

	this->ProcessEvent ( pFnDrawHealth, &DrawHealth_Parms, NULL );
};

// Function UTGame.UTHUD.DrawBeaconBackground
// [0x00022102] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// struct FLinearColor            DrawColor                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )

void AUTHUD::DrawBeaconBackground ( float X, float Y, float Width, float Height, struct FLinearColor DrawColor, class UCanvas* DrawCanvas )
{
	static UFunction* pFnDrawBeaconBackground = NULL;

	if ( ! pFnDrawBeaconBackground )
		pFnDrawBeaconBackground = (UFunction*) UObject::GObjObjects()->Data[ 54490 ];

	AUTHUD_execDrawBeaconBackground_Parms DrawBeaconBackground_Parms;
	DrawBeaconBackground_Parms.X = X;
	DrawBeaconBackground_Parms.Y = Y;
	DrawBeaconBackground_Parms.Width = Width;
	DrawBeaconBackground_Parms.Height = Height;
	memcpy ( &DrawBeaconBackground_Parms.DrawColor, &DrawColor, 0x10 );
	DrawBeaconBackground_Parms.DrawCanvas = DrawCanvas;

	this->ProcessEvent ( pFnDrawBeaconBackground, &DrawBeaconBackground_Parms, NULL );
};

// Function UTGame.UTHUD.DrawBackground
// [0x00022102] 
// Parameters infos:
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// struct FLinearColor            DrawColor                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )

void AUTHUD::DrawBackground ( float X, float Y, float Width, float Height, struct FLinearColor DrawColor, class UCanvas* DrawCanvas )
{
	static UFunction* pFnDrawBackground = NULL;

	if ( ! pFnDrawBackground )
		pFnDrawBackground = (UFunction*) UObject::GObjObjects()->Data[ 54483 ];

	AUTHUD_execDrawBackground_Parms DrawBackground_Parms;
	DrawBackground_Parms.X = X;
	DrawBackground_Parms.Y = Y;
	DrawBackground_Parms.Width = Width;
	DrawBackground_Parms.Height = Height;
	memcpy ( &DrawBackground_Parms.DrawColor, &DrawColor, 0x10 );
	DrawBackground_Parms.DrawCanvas = DrawCanvas;

	this->ProcessEvent ( pFnDrawBackground, &DrawBackground_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayDamage
// [0x00020002] 
// Parameters infos:

void AUTHUD::DisplayDamage ( )
{
	static UFunction* pFnDisplayDamage = NULL;

	if ( ! pFnDisplayDamage )
		pFnDisplayDamage = (UFunction*) UObject::GObjObjects()->Data[ 54481 ];

	AUTHUD_execDisplayDamage_Parms DisplayDamage_Parms;

	this->ProcessEvent ( pFnDisplayDamage, &DisplayDamage_Parms, NULL );
};

// Function UTGame.UTHUD.UpdateDamage
// [0x00820002] 
// Parameters infos:

void AUTHUD::UpdateDamage ( )
{
	static UFunction* pFnUpdateDamage = NULL;

	if ( ! pFnUpdateDamage )
		pFnUpdateDamage = (UFunction*) UObject::GObjObjects()->Data[ 54477 ];

	AUTHUD_execUpdateDamage_Parms UpdateDamage_Parms;

	this->ProcessEvent ( pFnUpdateDamage, &UpdateDamage_Parms, NULL );
};

// Function UTGame.UTHUD.FlashDamage
// [0x00020002] 
// Parameters infos:
// float                          FlashPosition                  ( CPF_Parm )

void AUTHUD::FlashDamage ( float FlashPosition )
{
	static UFunction* pFnFlashDamage = NULL;

	if ( ! pFnFlashDamage )
		pFnFlashDamage = (UFunction*) UObject::GObjObjects()->Data[ 54472 ];

	AUTHUD_execFlashDamage_Parms FlashDamage_Parms;
	FlashDamage_Parms.FlashPosition = FlashPosition;

	this->ProcessEvent ( pFnFlashDamage, &FlashDamage_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 HitDir                         ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTHUD::DisplayHit ( struct FVector HitDir, int Damage, class UClass* DamageType )
{
	static UFunction* pFnDisplayHit = NULL;

	if ( ! pFnDisplayHit )
		pFnDisplayHit = (UFunction*) UObject::GObjObjects()->Data[ 54452 ];

	AUTHUD_execDisplayHit_Parms DisplayHit_Parms;
	memcpy ( &DisplayHit_Parms.HitDir, &HitDir, 0xC );
	DisplayHit_Parms.Damage = Damage;
	DisplayHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDisplayHit, &DisplayHit_Parms, NULL );
};

// Function UTGame.UTHUD.GetTeamColor
// [0x00426102] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )
// struct FLinearColor            ImageColor                     ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// struct FColor                  TextColor                      ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void AUTHUD::GetTeamColor ( int TeamIndex, struct FLinearColor* ImageColor, struct FColor* TextColor )
{
	static UFunction* pFnGetTeamColor = NULL;

	if ( ! pFnGetTeamColor )
		pFnGetTeamColor = (UFunction*) UObject::GObjObjects()->Data[ 54448 ];

	AUTHUD_execGetTeamColor_Parms GetTeamColor_Parms;
	GetTeamColor_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetTeamColor, &GetTeamColor_Parms, NULL );

	if ( ImageColor )
		memcpy ( ImageColor, &GetTeamColor_Parms.ImageColor, 0x10 );

	if ( TextColor )
		memcpy ( TextColor, &GetTeamColor_Parms.TextColor, 0x4 );
};

// Function UTGame.UTHUD.StartMusic
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUD::StartMusic ( )
{
	static UFunction* pFnStartMusic = NULL;

	if ( ! pFnStartMusic )
		pFnStartMusic = (UFunction*) UObject::GObjObjects()->Data[ 54447 ];

	AUTHUD_execStartMusic_Parms StartMusic_Parms;

	this->ProcessEvent ( pFnStartMusic, &StartMusic_Parms, NULL );
};

// Function UTGame.UTHUD.GetUIController
// [0x00424002] 
// Parameters infos:
// class UUIInteraction*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ULocalPlayer*            LP                             ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

class UUIInteraction* AUTHUD::GetUIController ( class ULocalPlayer** LP )
{
	static UFunction* pFnGetUIController = NULL;

	if ( ! pFnGetUIController )
		pFnGetUIController = (UFunction*) UObject::GObjObjects()->Data[ 54444 ];

	AUTHUD_execGetUIController_Parms GetUIController_Parms;

	this->ProcessEvent ( pFnGetUIController, &GetUIController_Parms, NULL );

	if ( LP )
		*LP = GetUIController_Parms.LP;

	return GetUIController_Parms.ReturnValue;
};

// Function UTGame.UTHUD.DrawAIOverlays
// [0x00820002] 
// Parameters infos:

void AUTHUD::DrawAIOverlays ( )
{
	static UFunction* pFnDrawAIOverlays = NULL;

	if ( ! pFnDrawAIOverlays )
		pFnDrawAIOverlays = (UFunction*) UObject::GObjObjects()->Data[ 54436 ];

	AUTHUD_execDrawAIOverlays_Parms DrawAIOverlays_Parms;

	this->ProcessEvent ( pFnDrawAIOverlays, &DrawAIOverlays_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayMap
// [0x00820002] 
// Parameters infos:

void AUTHUD::DisplayMap ( )
{
	static UFunction* pFnDisplayMap = NULL;

	if ( ! pFnDisplayMap )
		pFnDisplayMap = (UFunction*) UObject::GObjObjects()->Data[ 54420 ];

	AUTHUD_execDisplayMap_Parms DisplayMap_Parms;

	this->ProcessEvent ( pFnDisplayMap, &DisplayMap_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayWeaponBar
// [0x00820002] 
// Parameters infos:

void AUTHUD::DisplayWeaponBar ( )
{
	static UFunction* pFnDisplayWeaponBar = NULL;

	if ( ! pFnDisplayWeaponBar )
		pFnDisplayWeaponBar = (UFunction*) UObject::GObjObjects()->Data[ 54395 ];

	AUTHUD_execDisplayWeaponBar_Parms DisplayWeaponBar_Parms;

	this->ProcessEvent ( pFnDisplayWeaponBar, &DisplayWeaponBar_Parms, NULL );
};

// Function UTGame.UTHUD.DrawPostGameHud
// [0x00020002] 
// Parameters infos:

void AUTHUD::DrawPostGameHud ( )
{
	static UFunction* pFnDrawPostGameHud = NULL;

	if ( ! pFnDrawPostGameHud )
		pFnDrawPostGameHud = (UFunction*) UObject::GObjObjects()->Data[ 54393 ];

	AUTHUD_execDrawPostGameHud_Parms DrawPostGameHud_Parms;

	this->ProcessEvent ( pFnDrawPostGameHud, &DrawPostGameHud_Parms, NULL );
};

// Function UTGame.UTHUD.DrawLivingHud
// [0x00020002] 
// Parameters infos:

void AUTHUD::DrawLivingHud ( )
{
	static UFunction* pFnDrawLivingHud = NULL;

	if ( ! pFnDrawLivingHud )
		pFnDrawLivingHud = (UFunction*) UObject::GObjObjects()->Data[ 54389 ];

	AUTHUD_execDrawLivingHud_Parms DrawLivingHud_Parms;

	this->ProcessEvent ( pFnDrawLivingHud, &DrawLivingHud_Parms, NULL );
};

// Function UTGame.UTHUD.DisplayLocalMessages
// [0x00020002] 
// Parameters infos:

void AUTHUD::DisplayLocalMessages ( )
{
	static UFunction* pFnDisplayLocalMessages = NULL;

	if ( ! pFnDisplayLocalMessages )
		pFnDisplayLocalMessages = (UFunction*) UObject::GObjObjects()->Data[ 54388 ];

	AUTHUD_execDisplayLocalMessages_Parms DisplayLocalMessages_Parms;

	this->ProcessEvent ( pFnDisplayLocalMessages, &DisplayLocalMessages_Parms, NULL );
};

// Function UTGame.UTHUD.DrawMicIcon
// [0x00820002] 
// Parameters infos:

void AUTHUD::DrawMicIcon ( )
{
	static UFunction* pFnDrawMicIcon = NULL;

	if ( ! pFnDrawMicIcon )
		pFnDrawMicIcon = (UFunction*) UObject::GObjObjects()->Data[ 54386 ];

	AUTHUD_execDrawMicIcon_Parms DrawMicIcon_Parms;

	this->ProcessEvent ( pFnDrawMicIcon, &DrawMicIcon_Parms, NULL );
};

// Function UTGame.UTHUD.DrawGameHud
// [0x00820002] 
// Parameters infos:

void AUTHUD::DrawGameHud ( )
{
	static UFunction* pFnDrawGameHud = NULL;

	if ( ! pFnDrawGameHud )
		pFnDrawGameHud = (UFunction*) UObject::GObjObjects()->Data[ 54377 ];

	AUTHUD_execDrawGameHud_Parms DrawGameHud_Parms;

	this->ProcessEvent ( pFnDrawGameHud, &DrawGameHud_Parms, NULL );
};

// Function UTGame.UTHUD.ShowSquadRoutes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUD::ShowSquadRoutes ( )
{
	static UFunction* pFnShowSquadRoutes = NULL;

	if ( ! pFnShowSquadRoutes )
		pFnShowSquadRoutes = (UFunction*) UObject::GObjObjects()->Data[ 54370 ];

	AUTHUD_execShowSquadRoutes_Parms ShowSquadRoutes_Parms;

	this->ProcessEvent ( pFnShowSquadRoutes, &ShowSquadRoutes_Parms, NULL );
};

// Function UTGame.UTHUD.ShowAllAI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUD::ShowAllAI ( )
{
	static UFunction* pFnShowAllAI = NULL;

	if ( ! pFnShowAllAI )
		pFnShowAllAI = (UFunction*) UObject::GObjObjects()->Data[ 54369 ];

	AUTHUD_execShowAllAI_Parms ShowAllAI_Parms;

	this->ProcessEvent ( pFnShowAllAI, &ShowAllAI_Parms, NULL );
};

// Function UTGame.UTHUD.DrawHUD
// [0x00820002] 
// Parameters infos:

void AUTHUD::DrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 54358 ];

	AUTHUD_execDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function UTGame.UTHUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 54355 ];

	AUTHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function UTGame.UTHUD.DrawMessageText
// [0x00820002] 
// Parameters infos:
// struct FHudLocalizedMessage    LocalMessage                   ( CPF_Parm | CPF_NeedCtorLink )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )

void AUTHUD::DrawMessageText ( struct FHudLocalizedMessage LocalMessage, float ScreenX, float ScreenY )
{
	static UFunction* pFnDrawMessageText = NULL;

	if ( ! pFnDrawMessageText )
		pFnDrawMessageText = (UFunction*) UObject::GObjObjects()->Data[ 54349 ];

	AUTHUD_execDrawMessageText_Parms DrawMessageText_Parms;
	memcpy ( &DrawMessageText_Parms.LocalMessage, &LocalMessage, 0x40 );
	DrawMessageText_Parms.ScreenX = ScreenX;
	DrawMessageText_Parms.ScreenY = ScreenY;

	this->ProcessEvent ( pFnDrawMessageText, &DrawMessageText_Parms, NULL );
};

// Function UTGame.UTHUD.GetScreenCoords
// [0x00420002] 
// Parameters infos:
// float                          PosY                           ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm | CPF_OutParm )
// float                          ScreenY                        ( CPF_Parm | CPF_OutParm )
// struct FHudLocalizedMessage    InMessage                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTHUD::GetScreenCoords ( float PosY, float* ScreenX, float* ScreenY, struct FHudLocalizedMessage* InMessage )
{
	static UFunction* pFnGetScreenCoords = NULL;

	if ( ! pFnGetScreenCoords )
		pFnGetScreenCoords = (UFunction*) UObject::GObjObjects()->Data[ 54342 ];

	AUTHUD_execGetScreenCoords_Parms GetScreenCoords_Parms;
	GetScreenCoords_Parms.PosY = PosY;

	this->ProcessEvent ( pFnGetScreenCoords, &GetScreenCoords_Parms, NULL );

	if ( ScreenX )
		*ScreenX = GetScreenCoords_Parms.ScreenX;

	if ( ScreenY )
		*ScreenY = GetScreenCoords_Parms.ScreenY;

	if ( InMessage )
		memcpy ( InMessage, &GetScreenCoords_Parms.InMessage, 0x40 );
};

// Function UTGame.UTHUD.ResolveHUDPosition
// [0x00820002] 
// Parameters infos:
// struct FVector2D               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector2D               Position                       ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )

struct FVector2D AUTHUD::ResolveHUDPosition ( struct FVector2D Position, float Width, float Height )
{
	static UFunction* pFnResolveHUDPosition = NULL;

	if ( ! pFnResolveHUDPosition )
		pFnResolveHUDPosition = (UFunction*) UObject::GObjObjects()->Data[ 54336 ];

	AUTHUD_execResolveHUDPosition_Parms ResolveHUDPosition_Parms;
	memcpy ( &ResolveHUDPosition_Parms.Position, &Position, 0x8 );
	ResolveHUDPosition_Parms.Width = Width;
	ResolveHUDPosition_Parms.Height = Height;

	this->ProcessEvent ( pFnResolveHUDPosition, &ResolveHUDPosition_Parms, NULL );

	return ResolveHUDPosition_Parms.ReturnValue;
};

// Function UTGame.UTHUD.Message
// [0x00024002] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// struct FName                   MsgType                        ( CPF_Parm )
// float                          Lifetime                       ( CPF_OptionalParm | CPF_Parm )

void AUTHUD::Message ( class APlayerReplicationInfo* PRI, struct FString msg, struct FName MsgType, float Lifetime )
{
	static UFunction* pFnMessage = NULL;

	if ( ! pFnMessage )
		pFnMessage = (UFunction*) UObject::GObjObjects()->Data[ 54328 ];

	AUTHUD_execMessage_Parms Message_Parms;
	Message_Parms.PRI = PRI;
	memcpy ( &Message_Parms.msg, &msg, 0xC );
	memcpy ( &Message_Parms.MsgType, &MsgType, 0x8 );
	Message_Parms.Lifetime = Lifetime;

	this->ProcessEvent ( pFnMessage, &Message_Parms, NULL );
};

// Function UTGame.UTHUD.NotifyBindPostProcessEffects
// [0x00020002] 
// Parameters infos:

void AUTHUD::NotifyBindPostProcessEffects ( )
{
	static UFunction* pFnNotifyBindPostProcessEffects = NULL;

	if ( ! pFnNotifyBindPostProcessEffects )
		pFnNotifyBindPostProcessEffects = (UFunction*) UObject::GObjObjects()->Data[ 54327 ];

	AUTHUD_execNotifyBindPostProcessEffects_Parms NotifyBindPostProcessEffects_Parms;

	this->ProcessEvent ( pFnNotifyBindPostProcessEffects, &NotifyBindPostProcessEffects_Parms, NULL );
};

// Function UTGame.UTHUD.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTHUD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54325 ];

	AUTHUD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTHUD.ShrinkHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUD::ShrinkHUD ( )
{
	static UFunction* pFnShrinkHUD = NULL;

	if ( ! pFnShrinkHUD )
		pFnShrinkHUD = (UFunction*) UObject::GObjObjects()->Data[ 54324 ];

	AUTHUD_execShrinkHUD_Parms ShrinkHUD_Parms;

	this->ProcessEvent ( pFnShrinkHUD, &ShrinkHUD_Parms, NULL );
};

// Function UTGame.UTHUD.GrowHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTHUD::GrowHUD ( )
{
	static UFunction* pFnGrowHUD = NULL;

	if ( ! pFnGrowHUD )
		pFnGrowHUD = (UFunction*) UObject::GObjObjects()->Data[ 54323 ];

	AUTHUD_execGrowHUD_Parms GrowHUD_Parms;

	this->ProcessEvent ( pFnGrowHUD, &GrowHUD_Parms, NULL );
};

// Function UTGame.UTHUD.SetDisplayedOrders
// [0x00020002] 
// Parameters infos:
// struct FString                 OrderText                      ( CPF_Parm | CPF_NeedCtorLink )

void AUTHUD::SetDisplayedOrders ( struct FString OrderText )
{
	static UFunction* pFnSetDisplayedOrders = NULL;

	if ( ! pFnSetDisplayedOrders )
		pFnSetDisplayedOrders = (UFunction*) UObject::GObjObjects()->Data[ 54321 ];

	AUTHUD_execSetDisplayedOrders_Parms SetDisplayedOrders_Parms;
	memcpy ( &SetDisplayedOrders_Parms.OrderText, &OrderText, 0xC );

	this->ProcessEvent ( pFnSetDisplayedOrders, &SetDisplayedOrders_Parms, NULL );
};

// Function UTGame.UTHUD.DrawTileCentered
// [0x00020002] 
// Parameters infos:
// class UTexture2D*              Tex                            ( CPF_Parm )
// float                          XL                             ( CPF_Parm )
// float                          YL                             ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// struct FLinearColor            C                              ( CPF_Parm )

void AUTHUD::DrawTileCentered ( class UTexture2D* Tex, float XL, float YL, float U, float V, float UL, float VL, struct FLinearColor C )
{
	static UFunction* pFnDrawTileCentered = NULL;

	if ( ! pFnDrawTileCentered )
		pFnDrawTileCentered = (UFunction*) UObject::GObjObjects()->Data[ 54310 ];

	AUTHUD_execDrawTileCentered_Parms DrawTileCentered_Parms;
	DrawTileCentered_Parms.Tex = Tex;
	DrawTileCentered_Parms.XL = XL;
	DrawTileCentered_Parms.YL = YL;
	DrawTileCentered_Parms.U = U;
	DrawTileCentered_Parms.V = V;
	DrawTileCentered_Parms.UL = UL;
	DrawTileCentered_Parms.VL = VL;
	memcpy ( &DrawTileCentered_Parms.C, &C, 0x10 );

	this->ProcessEvent ( pFnDrawTileCentered, &DrawTileCentered_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.NotifyLocalPlayerDead
// [0x00020100] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTWeaponPickupFactory::NotifyLocalPlayerDead ( class APlayerController* PC )
{
	static UFunction* pFnNotifyLocalPlayerDead = NULL;

	if ( ! pFnNotifyLocalPlayerDead )
		pFnNotifyLocalPlayerDead = (UFunction*) UObject::GObjObjects()->Data[ 60769 ];

	AUTWeaponPickupFactory_execNotifyLocalPlayerDead_Parms NotifyLocalPlayerDead_Parms;
	NotifyLocalPlayerDead_Parms.PC = PC;

	this->ProcessEvent ( pFnNotifyLocalPlayerDead, &NotifyLocalPlayerDead_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.ShowHidden
// [0x00020102] 
// Parameters infos:

void AUTWeaponPickupFactory::ShowHidden ( )
{
	static UFunction* pFnShowHidden = NULL;

	if ( ! pFnShowHidden )
		pFnShowHidden = (UFunction*) UObject::GObjObjects()->Data[ 60768 ];

	AUTWeaponPickupFactory_execShowHidden_Parms ShowHidden_Parms;

	this->ProcessEvent ( pFnShowHidden, &ShowHidden_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.ShowActive
// [0x00020100] 
// Parameters infos:

void AUTWeaponPickupFactory::ShowActive ( )
{
	static UFunction* pFnShowActive = NULL;

	if ( ! pFnShowActive )
		pFnShowActive = (UFunction*) UObject::GObjObjects()->Data[ 60767 ];

	AUTWeaponPickupFactory_execShowActive_Parms ShowActive_Parms;

	this->ProcessEvent ( pFnShowActive, &ShowActive_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTWeaponPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 60764 ];

	AUTWeaponPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.PickedUpBy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTWeaponPickupFactory::PickedUpBy ( class APawn* P )
{
	static UFunction* pFnPickedUpBy = NULL;

	if ( ! pFnPickedUpBy )
		pFnPickedUpBy = (UFunction*) UObject::GObjObjects()->Data[ 60762 ];

	AUTWeaponPickupFactory_execPickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;

	this->ProcessEvent ( pFnPickedUpBy, &PickedUpBy_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.AllowPickup
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  Bot                            ( CPF_Parm )

bool AUTWeaponPickupFactory::AllowPickup ( class AUTBot* Bot )
{
	static UFunction* pFnAllowPickup = NULL;

	if ( ! pFnAllowPickup )
		pFnAllowPickup = (UFunction*) UObject::GObjObjects()->Data[ 50531 ];

	AUTWeaponPickupFactory_execAllowPickup_Parms AllowPickup_Parms;
	AllowPickup_Parms.Bot = Bot;

	this->ProcessEvent ( pFnAllowPickup, &AllowPickup_Parms, NULL );

	return AllowPickup_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPickupFactory.HasCustomer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTWeaponPickupFactory::HasCustomer ( class APawn* P )
{
	static UFunction* pFnHasCustomer = NULL;

	if ( ! pFnHasCustomer )
		pFnHasCustomer = (UFunction*) UObject::GObjObjects()->Data[ 60756 ];

	AUTWeaponPickupFactory_execHasCustomer_Parms HasCustomer_Parms;
	HasCustomer_Parms.P = P;

	this->ProcessEvent ( pFnHasCustomer, &HasCustomer_Parms, NULL );

	return HasCustomer_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPickupFactory.AddCustomer
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTWeaponPickupFactory::AddCustomer ( class APawn* P )
{
	static UFunction* pFnAddCustomer = NULL;

	if ( ! pFnAddCustomer )
		pFnAddCustomer = (UFunction*) UObject::GObjObjects()->Data[ 60751 ];

	AUTWeaponPickupFactory_execAddCustomer_Parms AddCustomer_Parms;
	AddCustomer_Parms.P = P;

	this->ProcessEvent ( pFnAddCustomer, &AddCustomer_Parms, NULL );

	return AddCustomer_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPickupFactory.StartSleeping
// [0x00020002] 
// Parameters infos:

void AUTWeaponPickupFactory::StartSleeping ( )
{
	static UFunction* pFnStartSleeping = NULL;

	if ( ! pFnStartSleeping )
		pFnStartSleeping = (UFunction*) UObject::GObjObjects()->Data[ 60750 ];

	AUTWeaponPickupFactory_execStartSleeping_Parms StartSleeping_Parms;

	this->ProcessEvent ( pFnStartSleeping, &StartSleeping_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.SetWeaponStay
// [0x00020002] 
// Parameters infos:

void AUTWeaponPickupFactory::SetWeaponStay ( )
{
	static UFunction* pFnSetWeaponStay = NULL;

	if ( ! pFnSetWeaponStay )
		pFnSetWeaponStay = (UFunction*) UObject::GObjObjects()->Data[ 60749 ];

	AUTWeaponPickupFactory_execSetWeaponStay_Parms SetWeaponStay_Parms;

	this->ProcessEvent ( pFnSetWeaponStay, &SetWeaponStay_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.CheckForErrors
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeaponPickupFactory::CheckForErrors ( )
{
	static UFunction* pFnCheckForErrors = NULL;

	if ( ! pFnCheckForErrors )
		pFnCheckForErrors = (UFunction*) UObject::GObjObjects()->Data[ 60747 ];

	AUTWeaponPickupFactory_execCheckForErrors_Parms CheckForErrors_Parms;

	this->ProcessEvent ( pFnCheckForErrors, &CheckForErrors_Parms, NULL );

	return CheckForErrors_Parms.ReturnValue;
};

// Function UTGame.UTWeaponPickupFactory.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeaponPickupFactory::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60745 ];

	AUTWeaponPickupFactory_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.SetPickupMesh
// [0x00020102] 
// Parameters infos:

void AUTWeaponPickupFactory::SetPickupMesh ( )
{
	static UFunction* pFnSetPickupMesh = NULL;

	if ( ! pFnSetPickupMesh )
		pFnSetPickupMesh = (UFunction*) UObject::GObjObjects()->Data[ 60744 ];

	AUTWeaponPickupFactory_execSetPickupMesh_Parms SetPickupMesh_Parms;

	this->ProcessEvent ( pFnSetPickupMesh, &SetPickupMesh_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.SetPickupHidden
// [0x00020102] 
// Parameters infos:

void AUTWeaponPickupFactory::SetPickupHidden ( )
{
	static UFunction* pFnSetPickupHidden = NULL;

	if ( ! pFnSetPickupHidden )
		pFnSetPickupHidden = (UFunction*) UObject::GObjObjects()->Data[ 60743 ];

	AUTWeaponPickupFactory_execSetPickupHidden_Parms SetPickupHidden_Parms;

	this->ProcessEvent ( pFnSetPickupHidden, &SetPickupHidden_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.SetPickupVisible
// [0x00020102] 
// Parameters infos:

void AUTWeaponPickupFactory::SetPickupVisible ( )
{
	static UFunction* pFnSetPickupVisible = NULL;

	if ( ! pFnSetPickupVisible )
		pFnSetPickupVisible = (UFunction*) UObject::GObjObjects()->Data[ 60742 ];

	AUTWeaponPickupFactory_execSetPickupVisible_Parms SetPickupVisible_Parms;

	this->ProcessEvent ( pFnSetPickupVisible, &SetPickupVisible_Parms, NULL );
};

// Function UTGame.UTWeaponPickupFactory.InitializePickup
// [0x00020102] 
// Parameters infos:

void AUTWeaponPickupFactory::InitializePickup ( )
{
	static UFunction* pFnInitializePickup = NULL;

	if ( ! pFnInitializePickup )
		pFnInitializePickup = (UFunction*) UObject::GObjObjects()->Data[ 60740 ];

	AUTWeaponPickupFactory_execInitializePickup_Parms InitializePickup_Parms;

	this->ProcessEvent ( pFnInitializePickup, &InitializePickup_Parms, NULL );
};

// Function UTGame.UTPickupFactory.PickedUpBy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTPickupFactory::PickedUpBy ( class APawn* P )
{
	static UFunction* pFnPickedUpBy = NULL;

	if ( ! pFnPickedUpBy )
		pFnPickedUpBy = (UFunction*) UObject::GObjObjects()->Data[ 48712 ];

	AUTPickupFactory_execPickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;

	this->ProcessEvent ( pFnPickedUpBy, &PickedUpBy_Parms, NULL );
};

// Function UTGame.UTPickupFactory.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPickupFactory::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 48711 ];

	AUTPickupFactory_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTPickupFactory.SetPickupHidden
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::SetPickupHidden ( )
{
	static UFunction* pFnSetPickupHidden = NULL;

	if ( ! pFnSetPickupHidden )
		pFnSetPickupHidden = (UFunction*) UObject::GObjObjects()->Data[ 48710 ];

	AUTPickupFactory_execSetPickupHidden_Parms SetPickupHidden_Parms;

	this->ProcessEvent ( pFnSetPickupHidden, &SetPickupHidden_Parms, NULL );
};

// Function UTGame.UTPickupFactory.SetPickupVisible
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::SetPickupVisible ( )
{
	static UFunction* pFnSetPickupVisible = NULL;

	if ( ! pFnSetPickupVisible )
		pFnSetPickupVisible = (UFunction*) UObject::GObjObjects()->Data[ 48709 ];

	AUTPickupFactory_execSetPickupVisible_Parms SetPickupVisible_Parms;

	this->ProcessEvent ( pFnSetPickupVisible, &SetPickupVisible_Parms, NULL );
};

// Function UTGame.UTPickupFactory.InitPickupMeshEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTPickupFactory::eventInitPickupMeshEffects ( )
{
	static UFunction* pFnInitPickupMeshEffects = NULL;

	if ( ! pFnInitPickupMeshEffects )
		pFnInitPickupMeshEffects = (UFunction*) UObject::GObjObjects()->Data[ 48708 ];

	AUTPickupFactory_eventInitPickupMeshEffects_Parms InitPickupMeshEffects_Parms;

	this->ProcessEvent ( pFnInitPickupMeshEffects, &InitPickupMeshEffects_Parms, NULL );
};

// Function UTGame.UTPickupFactory.GetPickupStatName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTPickupFactory::GetPickupStatName ( )
{
	static UFunction* pFnGetPickupStatName = NULL;

	if ( ! pFnGetPickupStatName )
		pFnGetPickupStatName = (UFunction*) UObject::GObjObjects()->Data[ 48706 ];

	AUTPickupFactory_execGetPickupStatName_Parms GetPickupStatName_Parms;

	this->ProcessEvent ( pFnGetPickupStatName, &GetPickupStatName_Parms, NULL );

	return GetPickupStatName_Parms.ReturnValue;
};

// Function UTGame.UTPickupFactory.SetPickupMesh
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::SetPickupMesh ( )
{
	static UFunction* pFnSetPickupMesh = NULL;

	if ( ! pFnSetPickupMesh )
		pFnSetPickupMesh = (UFunction*) UObject::GObjObjects()->Data[ 48705 ];

	AUTPickupFactory_execSetPickupMesh_Parms SetPickupMesh_Parms;

	this->ProcessEvent ( pFnSetPickupMesh, &SetPickupMesh_Parms, NULL );
};

// Function UTGame.UTPickupFactory.StartPulse
// [0x00020102] 
// Parameters infos:
// struct FLinearColor            TargetEmissive                 ( CPF_Parm )

void AUTPickupFactory::StartPulse ( struct FLinearColor TargetEmissive )
{
	static UFunction* pFnStartPulse = NULL;

	if ( ! pFnStartPulse )
		pFnStartPulse = (UFunction*) UObject::GObjObjects()->Data[ 48692 ];

	AUTPickupFactory_execStartPulse_Parms StartPulse_Parms;
	memcpy ( &StartPulse_Parms.TargetEmissive, &TargetEmissive, 0x10 );

	this->ProcessEvent ( pFnStartPulse, &StartPulse_Parms, NULL );
};

// Function UTGame.UTPickupFactory.StopsProjectile
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool AUTPickupFactory::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 48686 ];

	AUTPickupFactory_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function UTGame.UTPickupFactory.RespawnEffect
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::RespawnEffect ( )
{
	static UFunction* pFnRespawnEffect = NULL;

	if ( ! pFnRespawnEffect )
		pFnRespawnEffect = (UFunction*) UObject::GObjObjects()->Data[ 48685 ];

	AUTPickupFactory_execRespawnEffect_Parms RespawnEffect_Parms;

	this->ProcessEvent ( pFnRespawnEffect, &RespawnEffect_Parms, NULL );
};

// Function UTGame.UTPickupFactory.UpdateHUD
// [0x00022100] 
// Parameters infos:
// class AUTHUD*                  H                              ( CPF_Parm )

void AUTPickupFactory::UpdateHUD ( class AUTHUD* H )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 48683 ];

	AUTPickupFactory_execUpdateHUD_Parms UpdateHUD_Parms;
	UpdateHUD_Parms.H = H;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function UTGame.UTPickupFactory.ShouldCamp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// float                          MaxWait                        ( CPF_Parm )

bool AUTPickupFactory::ShouldCamp ( class AUTBot* B, float MaxWait )
{
	static UFunction* pFnShouldCamp = NULL;

	if ( ! pFnShouldCamp )
		pFnShouldCamp = (UFunction*) UObject::GObjObjects()->Data[ 48677 ];

	AUTPickupFactory_execShouldCamp_Parms ShouldCamp_Parms;
	ShouldCamp_Parms.B = B;
	ShouldCamp_Parms.MaxWait = MaxWait;

	this->ProcessEvent ( pFnShouldCamp, &ShouldCamp_Parms, NULL );

	return ShouldCamp_Parms.ReturnValue;
};

// Function UTGame.UTPickupFactory.ReplicatedEvent
// [0x00020102] 
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTPickupFactory::ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 48675 ];

	AUTPickupFactory_execReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTPickupFactory.ShutDown
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 48674 ];

	AUTPickupFactory_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function UTGame.UTPickupFactory.DisablePickup
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::DisablePickup ( )
{
	static UFunction* pFnDisablePickup = NULL;

	if ( ! pFnDisablePickup )
		pFnDisablePickup = (UFunction*) UObject::GObjObjects()->Data[ 48673 ];

	AUTPickupFactory_execDisablePickup_Parms DisablePickup_Parms;

	this->ProcessEvent ( pFnDisablePickup, &DisablePickup_Parms, NULL );
};

// Function UTGame.UTPickupFactory.SetResOut
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::SetResOut ( )
{
	static UFunction* pFnSetResOut = NULL;

	if ( ! pFnSetResOut )
		pFnSetResOut = (UFunction*) UObject::GObjObjects()->Data[ 48672 ];

	AUTPickupFactory_execSetResOut_Parms SetResOut_Parms;

	this->ProcessEvent ( pFnSetResOut, &SetResOut_Parms, NULL );
};

// Function UTGame.UTPickupFactory.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48671 ];

	AUTPickupFactory_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.ShowHidden
// [0x00020102] 
// Parameters infos:

void AUTWeaponLocker::ShowHidden ( )
{
	static UFunction* pFnShowHidden = NULL;

	if ( ! pFnShowHidden )
		pFnShowHidden = (UFunction*) UObject::GObjObjects()->Data[ 60693 ];

	AUTWeaponLocker_execShowHidden_Parms ShowHidden_Parms;

	this->ProcessEvent ( pFnShowHidden, &ShowHidden_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.DestroyWeapons
// [0x00020102] 
// Parameters infos:

void AUTWeaponLocker::DestroyWeapons ( )
{
	static UFunction* pFnDestroyWeapons = NULL;

	if ( ! pFnDestroyWeapons )
		pFnDestroyWeapons = (UFunction*) UObject::GObjObjects()->Data[ 60691 ];

	AUTWeaponLocker_execDestroyWeapons_Parms DestroyWeapons_Parms;

	this->ProcessEvent ( pFnDestroyWeapons, &DestroyWeapons_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.SetPlayerNearby
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// unsigned long                  bNewPlayerNearby               ( CPF_Parm )
// unsigned long                  bPlayEffects                   ( CPF_Parm )

void AUTWeaponLocker::eventSetPlayerNearby ( class APlayerController* PC, unsigned long bNewPlayerNearby, unsigned long bPlayEffects )
{
	static UFunction* pFnSetPlayerNearby = NULL;

	if ( ! pFnSetPlayerNearby )
		pFnSetPlayerNearby = (UFunction*) UObject::GObjObjects()->Data[ 60683 ];

	AUTWeaponLocker_eventSetPlayerNearby_Parms SetPlayerNearby_Parms;
	SetPlayerNearby_Parms.PC = PC;
	SetPlayerNearby_Parms.bNewPlayerNearby = bNewPlayerNearby;
	SetPlayerNearby_Parms.bPlayEffects = bPlayEffects;

	this->ProcessEvent ( pFnSetPlayerNearby, &SetPlayerNearby_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.NotifyLocalPlayerDead
// [0x00020100] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTWeaponLocker::NotifyLocalPlayerDead ( class APlayerController* PC )
{
	static UFunction* pFnNotifyLocalPlayerDead = NULL;

	if ( ! pFnNotifyLocalPlayerDead )
		pFnNotifyLocalPlayerDead = (UFunction*) UObject::GObjObjects()->Data[ 60681 ];

	AUTWeaponLocker_execNotifyLocalPlayerDead_Parms NotifyLocalPlayerDead_Parms;
	NotifyLocalPlayerDead_Parms.PC = PC;

	this->ProcessEvent ( pFnNotifyLocalPlayerDead, &NotifyLocalPlayerDead_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.ShowActive
// [0x00020100] 
// Parameters infos:

void AUTWeaponLocker::ShowActive ( )
{
	static UFunction* pFnShowActive = NULL;

	if ( ! pFnShowActive )
		pFnShowActive = (UFunction*) UObject::GObjObjects()->Data[ 60680 ];

	AUTWeaponLocker_execShowActive_Parms ShowActive_Parms;

	this->ProcessEvent ( pFnShowActive, &ShowActive_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.InitializePickup
// [0x00020100] 
// Parameters infos:

void AUTWeaponLocker::InitializePickup ( )
{
	static UFunction* pFnInitializePickup = NULL;

	if ( ! pFnInitializePickup )
		pFnInitializePickup = (UFunction*) UObject::GObjObjects()->Data[ 60679 ];

	AUTWeaponLocker_execInitializePickup_Parms InitializePickup_Parms;

	this->ProcessEvent ( pFnInitializePickup, &InitializePickup_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.DetourWeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )
// float                          PathWeight                     ( CPF_Parm )

float AUTWeaponLocker::DetourWeight ( class APawn* Other, float PathWeight )
{
	static UFunction* pFnDetourWeight = NULL;

	if ( ! pFnDetourWeight )
		pFnDetourWeight = (UFunction*) UObject::GObjObjects()->Data[ 60672 ];

	AUTWeaponLocker_execDetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;

	this->ProcessEvent ( pFnDetourWeight, &DetourWeight_Parms, NULL );

	return DetourWeight_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Bot                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTWeaponLocker::BotDesireability ( class APawn* Bot, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 50529 ];

	AUTWeaponLocker_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.Bot = Bot;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.GetHumanReadableName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString AUTWeaponLocker::GetHumanReadableName ( )
{
	static UFunction* pFnGetHumanReadableName = NULL;

	if ( ! pFnGetHumanReadableName )
		pFnGetHumanReadableName = (UFunction*) UObject::GObjObjects()->Data[ 60665 ];

	AUTWeaponLocker_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

	this->ProcessEvent ( pFnGetHumanReadableName, &GetHumanReadableName_Parms, NULL );

	return GetHumanReadableName_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.Reset
// [0x00020002] 
// Parameters infos:

void AUTWeaponLocker::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 60664 ];

	AUTWeaponLocker_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.ReplaceWeapon
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// class UClass*                  NewWeaponClass                 ( CPF_Parm )

void AUTWeaponLocker::ReplaceWeapon ( int Index, class UClass* NewWeaponClass )
{
	static UFunction* pFnReplaceWeapon = NULL;

	if ( ! pFnReplaceWeapon )
		pFnReplaceWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60661 ];

	AUTWeaponLocker_execReplaceWeapon_Parms ReplaceWeapon_Parms;
	ReplaceWeapon_Parms.Index = Index;
	ReplaceWeapon_Parms.NewWeaponClass = NewWeaponClass;

	this->ProcessEvent ( pFnReplaceWeapon, &ReplaceWeapon_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeaponLocker::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60658 ];

	AUTWeaponLocker_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.InitializeWeapons
// [0x00020102] 
// Parameters infos:

void AUTWeaponLocker::InitializeWeapons ( )
{
	static UFunction* pFnInitializeWeapons = NULL;

	if ( ! pFnInitializeWeapons )
		pFnInitializeWeapons = (UFunction*) UObject::GObjObjects()->Data[ 60656 ];

	AUTWeaponLocker_execInitializeWeapons_Parms InitializeWeapons_Parms;

	this->ProcessEvent ( pFnInitializeWeapons, &InitializeWeapons_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTWeaponLocker::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60655 ];

	AUTWeaponLocker_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTWeaponLocker.HasCustomer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTWeaponLocker::HasCustomer ( class APawn* P )
{
	static UFunction* pFnHasCustomer = NULL;

	if ( ! pFnHasCustomer )
		pFnHasCustomer = (UFunction*) UObject::GObjObjects()->Data[ 60651 ];

	AUTWeaponLocker_execHasCustomer_Parms HasCustomer_Parms;
	HasCustomer_Parms.P = P;

	this->ProcessEvent ( pFnHasCustomer, &HasCustomer_Parms, NULL );

	return HasCustomer_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.AddCustomer
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTWeaponLocker::AddCustomer ( class APawn* P )
{
	static UFunction* pFnAddCustomer = NULL;

	if ( ! pFnAddCustomer )
		pFnAddCustomer = (UFunction*) UObject::GObjObjects()->Data[ 60646 ];

	AUTWeaponLocker_execAddCustomer_Parms AddCustomer_Parms;
	AddCustomer_Parms.P = P;

	this->ProcessEvent ( pFnAddCustomer, &AddCustomer_Parms, NULL );

	return AddCustomer_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.ShouldCamp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// float                          MaxWait                        ( CPF_Parm )

bool AUTWeaponLocker::ShouldCamp ( class AUTBot* B, float MaxWait )
{
	static UFunction* pFnShouldCamp = NULL;

	if ( ! pFnShouldCamp )
		pFnShouldCamp = (UFunction*) UObject::GObjObjects()->Data[ 60642 ];

	AUTWeaponLocker_execShouldCamp_Parms ShouldCamp_Parms;
	ShouldCamp_Parms.B = B;
	ShouldCamp_Parms.MaxWait = MaxWait;

	this->ProcessEvent ( pFnShouldCamp, &ShouldCamp_Parms, NULL );

	return ShouldCamp_Parms.ReturnValue;
};

// Function UTGame.UTWeaponLocker.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeaponLocker::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 60641 ];

	AUTWeaponLocker_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTMusicManager.ChangeTrack
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void AUTMusicManager::ChangeTrack ( unsigned char NewState )
{
	static UFunction* pFnChangeTrack = NULL;

	if ( ! pFnChangeTrack )
		pFnChangeTrack = (UFunction*) UObject::GObjObjects()->Data[ 57485 ];

	AUTMusicManager_execChangeTrack_Parms ChangeTrack_Parms;
	ChangeTrack_Parms.NewState = NewState;

	this->ProcessEvent ( pFnChangeTrack, &ChangeTrack_Parms, NULL );
};

// Function UTGame.UTMusicManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTMusicManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 57480 ];

	AUTMusicManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTMusicManager.ProcessMusicEvent
// [0x00020002] 
// Parameters infos:

void AUTMusicManager::ProcessMusicEvent ( )
{
	static UFunction* pFnProcessMusicEvent = NULL;

	if ( ! pFnProcessMusicEvent )
		pFnProcessMusicEvent = (UFunction*) UObject::GObjObjects()->Data[ 57475 ];

	AUTMusicManager_execProcessMusicEvent_Parms ProcessMusicEvent_Parms;

	this->ProcessEvent ( pFnProcessMusicEvent, &ProcessMusicEvent_Parms, NULL );
};

// Function UTGame.UTMusicManager.AlreadyInActionMusic
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTMusicManager::AlreadyInActionMusic ( )
{
	static UFunction* pFnAlreadyInActionMusic = NULL;

	if ( ! pFnAlreadyInActionMusic )
		pFnAlreadyInActionMusic = (UFunction*) UObject::GObjObjects()->Data[ 44232 ];

	AUTMusicManager_execAlreadyInActionMusic_Parms AlreadyInActionMusic_Parms;

	this->ProcessEvent ( pFnAlreadyInActionMusic, &AlreadyInActionMusic_Parms, NULL );

	return AlreadyInActionMusic_Parms.ReturnValue;
};

// Function UTGame.UTMusicManager.MusicEvent
// [0x00020002] 
// Parameters infos:
// int                            NewEventIndex                  ( CPF_Parm )

void AUTMusicManager::MusicEvent ( int NewEventIndex )
{
	static UFunction* pFnMusicEvent = NULL;

	if ( ! pFnMusicEvent )
		pFnMusicEvent = (UFunction*) UObject::GObjObjects()->Data[ 57468 ];

	AUTMusicManager_execMusicEvent_Parms MusicEvent_Parms;
	MusicEvent_Parms.NewEventIndex = NewEventIndex;

	this->ProcessEvent ( pFnMusicEvent, &MusicEvent_Parms, NULL );
};

// Function UTGame.UTMusicManager.CreateNewTrack
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// class USoundCue*               MusicCue                       ( CPF_Parm )

class UAudioComponent* AUTMusicManager::CreateNewTrack ( class USoundCue* MusicCue )
{
	static UFunction* pFnCreateNewTrack = NULL;

	if ( ! pFnCreateNewTrack )
		pFnCreateNewTrack = (UFunction*) UObject::GObjObjects()->Data[ 57464 ];

	AUTMusicManager_execCreateNewTrack_Parms CreateNewTrack_Parms;
	CreateNewTrack_Parms.MusicCue = MusicCue;

	this->ProcessEvent ( pFnCreateNewTrack, &CreateNewTrack_Parms, NULL );

	return CreateNewTrack_Parms.ReturnValue;
};

// Function UTGame.UTMusicManager.IntroFinished
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void AUTMusicManager::IntroFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnIntroFinished = NULL;

	if ( ! pFnIntroFinished )
		pFnIntroFinished = (UFunction*) UObject::GObjObjects()->Data[ 57461 ];

	AUTMusicManager_execIntroFinished_Parms IntroFinished_Parms;
	IntroFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnIntroFinished, &IntroFinished_Parms, NULL );
};

// Function UTGame.UTMusicManager.StartMusic
// [0x00020002] 
// Parameters infos:

void AUTMusicManager::StartMusic ( )
{
	static UFunction* pFnStartMusic = NULL;

	if ( ! pFnStartMusic )
		pFnStartMusic = (UFunction*) UObject::GObjObjects()->Data[ 57451 ];

	AUTMusicManager_execStartMusic_Parms StartMusic_Parms;

	this->ProcessEvent ( pFnStartMusic, &StartMusic_Parms, NULL );
};

// Function UTGame.UTMusicManager.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTMusicManager::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57450 ];

	AUTMusicManager_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTDamageType.GetDeathCameraEffectVictim
// [0x00022102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPawn*                 UTP                            ( CPF_Parm )

class UClass* UUTDamageType::GetDeathCameraEffectVictim ( class AUTPawn* UTP )
{
	static UFunction* pFnGetDeathCameraEffectVictim = NULL;

	if ( ! pFnGetDeathCameraEffectVictim )
		pFnGetDeathCameraEffectVictim = (UFunction*) UObject::GObjObjects()->Data[ 49414 ];

	UUTDamageType_execGetDeathCameraEffectVictim_Parms GetDeathCameraEffectVictim_Parms;
	GetDeathCameraEffectVictim_Parms.UTP = UTP;

	this->ProcessEvent ( pFnGetDeathCameraEffectVictim, &GetDeathCameraEffectVictim_Parms, NULL );

	return GetDeathCameraEffectVictim_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.GetDeathCameraEffectInstigator
// [0x00022102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPawn*                 UTP                            ( CPF_Parm )

class UClass* UUTDamageType::GetDeathCameraEffectInstigator ( class AUTPawn* UTP )
{
	static UFunction* pFnGetDeathCameraEffectInstigator = NULL;

	if ( ! pFnGetDeathCameraEffectInstigator )
		pFnGetDeathCameraEffectInstigator = (UFunction*) UObject::GObjObjects()->Data[ 47697 ];

	UUTDamageType_execGetDeathCameraEffectInstigator_Parms GetDeathCameraEffectInstigator_Parms;
	GetDeathCameraEffectInstigator_Parms.UTP = UTP;

	this->ProcessEvent ( pFnGetDeathCameraEffectInstigator, &GetDeathCameraEffectInstigator_Parms, NULL );

	return GetDeathCameraEffectInstigator_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.CalcDeathCamera
// [0x00422100] 
// Parameters infos:
// class AUTPawn*                 P                              ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 CameraLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                CameraRotation                 ( CPF_Parm | CPF_OutParm )
// float                          CameraFOV                      ( CPF_Parm | CPF_OutParm )

void UUTDamageType::CalcDeathCamera ( class AUTPawn* P, float DeltaTime, struct FVector* CameraLocation, struct FRotator* CameraRotation, float* CameraFOV )
{
	static UFunction* pFnCalcDeathCamera = NULL;

	if ( ! pFnCalcDeathCamera )
		pFnCalcDeathCamera = (UFunction*) UObject::GObjObjects()->Data[ 55473 ];

	UUTDamageType_execCalcDeathCamera_Parms CalcDeathCamera_Parms;
	CalcDeathCamera_Parms.P = P;
	CalcDeathCamera_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCalcDeathCamera, &CalcDeathCamera_Parms, NULL );

	if ( CameraLocation )
		memcpy ( CameraLocation, &CalcDeathCamera_Parms.CameraLocation, 0xC );

	if ( CameraRotation )
		memcpy ( CameraRotation, &CalcDeathCamera_Parms.CameraRotation, 0xC );

	if ( CameraFOV )
		*CameraFOV = CalcDeathCamera_Parms.CameraFOV;
};

// Function UTGame.UTDamageType.DrawKillIcon
// [0x00022102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )
// float                          HUDScaleX                      ( CPF_Parm )
// float                          HUDScaleY                      ( CPF_Parm )

void UUTDamageType::DrawKillIcon ( class UCanvas* Canvas, float ScreenX, float ScreenY, float HUDScaleX, float HUDScaleY )
{
	static UFunction* pFnDrawKillIcon = NULL;

	if ( ! pFnDrawKillIcon )
		pFnDrawKillIcon = (UFunction*) UObject::GObjObjects()->Data[ 55467 ];

	UUTDamageType_execDrawKillIcon_Parms DrawKillIcon_Parms;
	DrawKillIcon_Parms.Canvas = Canvas;
	DrawKillIcon_Parms.ScreenX = ScreenX;
	DrawKillIcon_Parms.ScreenY = ScreenY;
	DrawKillIcon_Parms.HUDScaleX = HUDScaleX;
	DrawKillIcon_Parms.HUDScaleY = HUDScaleY;

	this->ProcessEvent ( pFnDrawKillIcon, &DrawKillIcon_Parms, NULL );
};

// Function UTGame.UTDamageType.SpawnExtraGibEffects
// [0x00022100] 
// Parameters infos:
// class AUTGib*                  TheGib                         ( CPF_Parm )

void UUTDamageType::SpawnExtraGibEffects ( class AUTGib* TheGib )
{
	static UFunction* pFnSpawnExtraGibEffects = NULL;

	if ( ! pFnSpawnExtraGibEffects )
		pFnSpawnExtraGibEffects = (UFunction*) UObject::GObjObjects()->Data[ 55465 ];

	UUTDamageType_execSpawnExtraGibEffects_Parms SpawnExtraGibEffects_Parms;
	SpawnExtraGibEffects_Parms.TheGib = TheGib;

	this->ProcessEvent ( pFnSpawnExtraGibEffects, &SpawnExtraGibEffects_Parms, NULL );
};

// Function UTGame.UTDamageType.CreateDeathGoreChunks
// [0x00C22002] 
// Parameters infos:
// class AUTPawn*                 ThePawn                        ( CPF_Parm )
// class UClass*                  TheDamageType                  ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UUTDamageType::CreateDeathGoreChunks ( class AUTPawn* ThePawn, class UClass* TheDamageType, struct FVector HitLocation, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnCreateDeathGoreChunks = NULL;

	if ( ! pFnCreateDeathGoreChunks )
		pFnCreateDeathGoreChunks = (UFunction*) UObject::GObjObjects()->Data[ 55456 ];

	UUTDamageType_execCreateDeathGoreChunks_Parms CreateDeathGoreChunks_Parms;
	CreateDeathGoreChunks_Parms.ThePawn = ThePawn;
	CreateDeathGoreChunks_Parms.TheDamageType = TheDamageType;
	memcpy ( &CreateDeathGoreChunks_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCreateDeathGoreChunks, &CreateDeathGoreChunks_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &CreateDeathGoreChunks_Parms.HitInfo, 0x1C );
};

// Function UTGame.UTDamageType.BoneBreaker
// [0x00022002] 
// Parameters infos:
// class AUTPawn*                 ThePawn                        ( CPF_Parm )
// class USkeletalMeshComponent*  TheMesh                        ( CPF_Parm | CPF_EditInline )
// struct FVector                 Impulse                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )

void UUTDamageType::BoneBreaker ( class AUTPawn* ThePawn, class USkeletalMeshComponent* TheMesh, struct FVector Impulse, struct FVector HitLocation, struct FName BoneName )
{
	static UFunction* pFnBoneBreaker = NULL;

	if ( ! pFnBoneBreaker )
		pFnBoneBreaker = (UFunction*) UObject::GObjObjects()->Data[ 55447 ];

	UUTDamageType_execBoneBreaker_Parms BoneBreaker_Parms;
	BoneBreaker_Parms.ThePawn = ThePawn;
	BoneBreaker_Parms.TheMesh = TheMesh;
	memcpy ( &BoneBreaker_Parms.Impulse, &Impulse, 0xC );
	memcpy ( &BoneBreaker_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &BoneBreaker_Parms.BoneName, &BoneName, 0x8 );

	this->ProcessEvent ( pFnBoneBreaker, &BoneBreaker_Parms, NULL );
};

// Function UTGame.UTDamageType.CreateDeathSkeleton
// [0x00C22002] 
// Parameters infos:
// class AUTPawn*                 ThePawn                        ( CPF_Parm )
// class UClass*                  TheDamageType                  ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UUTDamageType::CreateDeathSkeleton ( class AUTPawn* ThePawn, class UClass* TheDamageType, struct FVector HitLocation, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnCreateDeathSkeleton = NULL;

	if ( ! pFnCreateDeathSkeleton )
		pFnCreateDeathSkeleton = (UFunction*) UObject::GObjObjects()->Data[ 55430 ];

	UUTDamageType_execCreateDeathSkeleton_Parms CreateDeathSkeleton_Parms;
	CreateDeathSkeleton_Parms.ThePawn = ThePawn;
	CreateDeathSkeleton_Parms.TheDamageType = TheDamageType;
	memcpy ( &CreateDeathSkeleton_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCreateDeathSkeleton, &CreateDeathSkeleton_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &CreateDeathSkeleton_Parms.HitInfo, 0x1C );
};

// Function UTGame.UTDamageType.DoCustomDamageEffects
// [0x00422002] 
// Parameters infos:
// class AUTPawn*                 ThePawn                        ( CPF_Parm )
// class UClass*                  TheDamageType                  ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UUTDamageType::DoCustomDamageEffects ( class AUTPawn* ThePawn, class UClass* TheDamageType, struct FVector HitLocation, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnDoCustomDamageEffects = NULL;

	if ( ! pFnDoCustomDamageEffects )
		pFnDoCustomDamageEffects = (UFunction*) UObject::GObjObjects()->Data[ 55425 ];

	UUTDamageType_execDoCustomDamageEffects_Parms DoCustomDamageEffects_Parms;
	DoCustomDamageEffects_Parms.ThePawn = ThePawn;
	DoCustomDamageEffects_Parms.TheDamageType = TheDamageType;
	memcpy ( &DoCustomDamageEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDoCustomDamageEffects, &DoCustomDamageEffects_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &DoCustomDamageEffects_Parms.HitInfo, 0x1C );
};

// Function UTGame.UTDamageType.ShouldGib
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPawn*                 DeadPawn                       ( CPF_Parm )

bool UUTDamageType::ShouldGib ( class AUTPawn* DeadPawn )
{
	static UFunction* pFnShouldGib = NULL;

	if ( ! pFnShouldGib )
		pFnShouldGib = (UFunction*) UObject::GObjObjects()->Data[ 49394 ];

	UUTDamageType_execShouldGib_Parms ShouldGib_Parms;
	ShouldGib_Parms.DeadPawn = DeadPawn;

	this->ProcessEvent ( pFnShouldGib, &ShouldGib_Parms, NULL );

	return ShouldGib_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.SpawnGibEffects
// [0x00022002] 
// Parameters infos:
// class AUTGib*                  Gib                            ( CPF_Parm )

void UUTDamageType::SpawnGibEffects ( class AUTGib* Gib )
{
	static UFunction* pFnSpawnGibEffects = NULL;

	if ( ! pFnSpawnGibEffects )
		pFnSpawnGibEffects = (UFunction*) UObject::GObjObjects()->Data[ 55421 ];

	UUTDamageType_execSpawnGibEffects_Parms SpawnGibEffects_Parms;
	SpawnGibEffects_Parms.Gib = Gib;

	this->ProcessEvent ( pFnSpawnGibEffects, &SpawnGibEffects_Parms, NULL );
};

// Function UTGame.UTDamageType.PawnTornOff
// [0x00022000] 
// Parameters infos:
// class AUTPawn*                 DeadPawn                       ( CPF_Parm )

void UUTDamageType::PawnTornOff ( class AUTPawn* DeadPawn )
{
	static UFunction* pFnPawnTornOff = NULL;

	if ( ! pFnPawnTornOff )
		pFnPawnTornOff = (UFunction*) UObject::GObjObjects()->Data[ 55419 ];

	UUTDamageType_execPawnTornOff_Parms PawnTornOff_Parms;
	PawnTornOff_Parms.DeadPawn = DeadPawn;

	this->ProcessEvent ( pFnPawnTornOff, &PawnTornOff_Parms, NULL );
};

// Function UTGame.UTDamageType.ScoreKill
// [0x00022002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )
// class AUTPlayerReplicationInfo* KilledPRI                      ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )

void UUTDamageType::ScoreKill ( class AUTPlayerReplicationInfo* KillerPRI, class AUTPlayerReplicationInfo* KilledPRI, class APawn* KilledPawn )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 55415 ];

	UUTDamageType_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.KillerPRI = KillerPRI;
	ScoreKill_Parms.KilledPRI = KilledPRI;
	ScoreKill_Parms.KilledPawn = KilledPawn;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function UTGame.UTDamageType.GetStatsName
// [0x00022002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   StatType                       ( CPF_Parm )

struct FName UUTDamageType::GetStatsName ( struct FName StatType )
{
	static UFunction* pFnGetStatsName = NULL;

	if ( ! pFnGetStatsName )
		pFnGetStatsName = (UFunction*) UObject::GObjObjects()->Data[ 55412 ];

	UUTDamageType_execGetStatsName_Parms GetStatsName_Parms;
	memcpy ( &GetStatsName_Parms.StatType, &StatType, 0x8 );

	this->ProcessEvent ( pFnGetStatsName, &GetStatsName_Parms, NULL );

	return GetStatsName_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.IncrementSuicides
// [0x00022002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* KilledPRI                      ( CPF_Parm )

void UUTDamageType::IncrementSuicides ( class AUTPlayerReplicationInfo* KilledPRI )
{
	static UFunction* pFnIncrementSuicides = NULL;

	if ( ! pFnIncrementSuicides )
		pFnIncrementSuicides = (UFunction*) UObject::GObjObjects()->Data[ 55410 ];

	UUTDamageType_execIncrementSuicides_Parms IncrementSuicides_Parms;
	IncrementSuicides_Parms.KilledPRI = KilledPRI;

	this->ProcessEvent ( pFnIncrementSuicides, &IncrementSuicides_Parms, NULL );
};

// Function UTGame.UTDamageType.IncrementDeaths
// [0x00022002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* KilledPRI                      ( CPF_Parm )

void UUTDamageType::IncrementDeaths ( class AUTPlayerReplicationInfo* KilledPRI )
{
	static UFunction* pFnIncrementDeaths = NULL;

	if ( ! pFnIncrementDeaths )
		pFnIncrementDeaths = (UFunction*) UObject::GObjObjects()->Data[ 55408 ];

	UUTDamageType_execIncrementDeaths_Parms IncrementDeaths_Parms;
	IncrementDeaths_Parms.KilledPRI = KilledPRI;

	this->ProcessEvent ( pFnIncrementDeaths, &IncrementDeaths_Parms, NULL );
};

// Function UTGame.UTDamageType.IncrementKills
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )

int UUTDamageType::IncrementKills ( class AUTPlayerReplicationInfo* KillerPRI )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 55404 ];

	UUTDamageType_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.KillerPRI = KillerPRI;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );

	return IncrementKills_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.GetHitEffectDuration
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float UUTDamageType::GetHitEffectDuration ( class APawn* P, float Damage )
{
	static UFunction* pFnGetHitEffectDuration = NULL;

	if ( ! pFnGetHitEffectDuration )
		pFnGetHitEffectDuration = (UFunction*) UObject::GObjObjects()->Data[ 48047 ];

	UUTDamageType_execGetHitEffectDuration_Parms GetHitEffectDuration_Parms;
	GetHitEffectDuration_Parms.P = P;
	GetHitEffectDuration_Parms.Damage = Damage;

	this->ProcessEvent ( pFnGetHitEffectDuration, &GetHitEffectDuration_Parms, NULL );

	return GetHitEffectDuration_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.SpawnHitEffect
// [0x00022000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UUTDamageType::SpawnHitEffect ( class APawn* P, float Damage, struct FVector Momentum, struct FName BoneName, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHitEffect = NULL;

	if ( ! pFnSpawnHitEffect )
		pFnSpawnHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 55396 ];

	UUTDamageType_execSpawnHitEffect_Parms SpawnHitEffect_Parms;
	SpawnHitEffect_Parms.P = P;
	SpawnHitEffect_Parms.Damage = Damage;
	memcpy ( &SpawnHitEffect_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &SpawnHitEffect_Parms.BoneName, &BoneName, 0x8 );
	memcpy ( &SpawnHitEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHitEffect, &SpawnHitEffect_Parms, NULL );
};

// Function UTGame.UTDamageType.SuicideMessage
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  Victim                         ( CPF_Parm )

struct FString UUTDamageType::SuicideMessage ( class APlayerReplicationInfo* Victim )
{
	static UFunction* pFnSuicideMessage = NULL;

	if ( ! pFnSuicideMessage )
		pFnSuicideMessage = (UFunction*) UObject::GObjObjects()->Data[ 55393 ];

	UUTDamageType_execSuicideMessage_Parms SuicideMessage_Parms;
	SuicideMessage_Parms.Victim = Victim;

	this->ProcessEvent ( pFnSuicideMessage, &SuicideMessage_Parms, NULL );

	return SuicideMessage_Parms.ReturnValue;
};

// Function UTGame.UTDamageType.DeathMessage
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  Killer                         ( CPF_Parm )
// class APlayerReplicationInfo*  Victim                         ( CPF_Parm )

struct FString UUTDamageType::DeathMessage ( class APlayerReplicationInfo* Killer, class APlayerReplicationInfo* Victim )
{
	static UFunction* pFnDeathMessage = NULL;

	if ( ! pFnDeathMessage )
		pFnDeathMessage = (UFunction*) UObject::GObjObjects()->Data[ 55389 ];

	UUTDamageType_execDeathMessage_Parms DeathMessage_Parms;
	DeathMessage_Parms.Killer = Killer;
	DeathMessage_Parms.Victim = Victim;

	this->ProcessEvent ( pFnDeathMessage, &DeathMessage_Parms, NULL );

	return DeathMessage_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_PlayCameraAnim.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqAct_PlayCameraAnim::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58222 ];

	UUTSeqAct_PlayCameraAnim_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_StopCameraAnim.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqAct_StopCameraAnim::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58261 ];

	UUTSeqAct_StopCameraAnim_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTInventoryManager.SwitchToBestWeapon
// [0x00024102] 
// Parameters infos:
// unsigned long                  bForceADifferentWeapon         ( CPF_OptionalParm | CPF_Parm )

void AUTInventoryManager::SwitchToBestWeapon ( unsigned long bForceADifferentWeapon )
{
	static UFunction* pFnSwitchToBestWeapon = NULL;

	if ( ! pFnSwitchToBestWeapon )
		pFnSwitchToBestWeapon = (UFunction*) UObject::GObjObjects()->Data[ 57042 ];

	AUTInventoryManager_execSwitchToBestWeapon_Parms SwitchToBestWeapon_Parms;
	SwitchToBestWeapon_Parms.bForceADifferentWeapon = bForceADifferentWeapon;

	this->ProcessEvent ( pFnSwitchToBestWeapon, &SwitchToBestWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.DrawHUD
// [0x00020102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void AUTInventoryManager::DrawHUD ( class AHUD* H )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 57040 ];

	AUTInventoryManager_execDrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function UTGame.UTInventoryManager.SwitchToPreviousWeapon
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::SwitchToPreviousWeapon ( )
{
	static UFunction* pFnSwitchToPreviousWeapon = NULL;

	if ( ! pFnSwitchToPreviousWeapon )
		pFnSwitchToPreviousWeapon = (UFunction*) UObject::GObjObjects()->Data[ 57039 ];

	AUTInventoryManager_execSwitchToPreviousWeapon_Parms SwitchToPreviousWeapon_Parms;

	this->ProcessEvent ( pFnSwitchToPreviousWeapon, &SwitchToPreviousWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.ChangedWeapon
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::ChangedWeapon ( )
{
	static UFunction* pFnChangedWeapon = NULL;

	if ( ! pFnChangedWeapon )
		pFnChangedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 57036 ];

	AUTInventoryManager_execChangedWeapon_Parms ChangedWeapon_Parms;

	this->ProcessEvent ( pFnChangedWeapon, &ChangedWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.HasInventoryOfClass
// [0x00020002] 
// Parameters infos:
// class AInventory*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  InvClass                       ( CPF_Parm )

class AInventory* AUTInventoryManager::HasInventoryOfClass ( class UClass* InvClass )
{
	static UFunction* pFnHasInventoryOfClass = NULL;

	if ( ! pFnHasInventoryOfClass )
		pFnHasInventoryOfClass = (UFunction*) UObject::GObjObjects()->Data[ 57032 ];

	AUTInventoryManager_execHasInventoryOfClass_Parms HasInventoryOfClass_Parms;
	HasInventoryOfClass_Parms.InvClass = InvClass;

	this->ProcessEvent ( pFnHasInventoryOfClass, &HasInventoryOfClass_Parms, NULL );

	return HasInventoryOfClass_Parms.ReturnValue;
};

// Function UTGame.UTInventoryManager.AddAmmoToWeapon
// [0x00020002] 
// Parameters infos:
// int                            AmountToAdd                    ( CPF_Parm )
// class UClass*                  WeaponClassToAddTo             ( CPF_Parm )

void AUTInventoryManager::AddAmmoToWeapon ( int AmountToAdd, class UClass* WeaponClassToAddTo )
{
	static UFunction* pFnAddAmmoToWeapon = NULL;

	if ( ! pFnAddAmmoToWeapon )
		pFnAddAmmoToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 57026 ];

	AUTInventoryManager_execAddAmmoToWeapon_Parms AddAmmoToWeapon_Parms;
	AddAmmoToWeapon_Parms.AmountToAdd = AmountToAdd;
	AddAmmoToWeapon_Parms.WeaponClassToAddTo = WeaponClassToAddTo;

	this->ProcessEvent ( pFnAddAmmoToWeapon, &AddAmmoToWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.NeedsAmmo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  TestWeapon                     ( CPF_Parm )

bool AUTInventoryManager::NeedsAmmo ( class UClass* TestWeapon )
{
	static UFunction* pFnNeedsAmmo = NULL;

	if ( ! pFnNeedsAmmo )
		pFnNeedsAmmo = (UFunction*) UObject::GObjObjects()->Data[ 48770 ];

	AUTInventoryManager_execNeedsAmmo_Parms NeedsAmmo_Parms;
	NeedsAmmo_Parms.TestWeapon = TestWeapon;

	this->ProcessEvent ( pFnNeedsAmmo, &NeedsAmmo_Parms, NULL );

	return NeedsAmmo_Parms.ReturnValue;
};

// Function UTGame.UTInventoryManager.RemoveFromInventory
// [0x00020102] 
// Parameters infos:
// class AInventory*              ItemToRemove                   ( CPF_Parm )

void AUTInventoryManager::RemoveFromInventory ( class AInventory* ItemToRemove )
{
	static UFunction* pFnRemoveFromInventory = NULL;

	if ( ! pFnRemoveFromInventory )
		pFnRemoveFromInventory = (UFunction*) UObject::GObjObjects()->Data[ 57020 ];

	AUTInventoryManager_execRemoveFromInventory_Parms RemoveFromInventory_Parms;
	RemoveFromInventory_Parms.ItemToRemove = ItemToRemove;

	this->ProcessEvent ( pFnRemoveFromInventory, &RemoveFromInventory_Parms, NULL );
};

// Function UTGame.UTInventoryManager.DiscardInventory
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::DiscardInventory ( )
{
	static UFunction* pFnDiscardInventory = NULL;

	if ( ! pFnDiscardInventory )
		pFnDiscardInventory = (UFunction*) UObject::GObjObjects()->Data[ 57018 ];

	AUTInventoryManager_execDiscardInventory_Parms DiscardInventory_Parms;

	this->ProcessEvent ( pFnDiscardInventory, &DiscardInventory_Parms, NULL );
};

// Function UTGame.UTInventoryManager.AddInventory
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AInventory*              NewItem                        ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

bool AUTInventoryManager::AddInventory ( class AInventory* NewItem, unsigned long bDoNotActivate )
{
	static UFunction* pFnAddInventory = NULL;

	if ( ! pFnAddInventory )
		pFnAddInventory = (UFunction*) UObject::GObjObjects()->Data[ 57012 ];

	AUTInventoryManager_execAddInventory_Parms AddInventory_Parms;
	AddInventory_Parms.NewItem = NewItem;
	AddInventory_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnAddInventory, &AddInventory_Parms, NULL );

	return AddInventory_Parms.ReturnValue;
};

// Function UTGame.UTInventoryManager.CheckSwitchTo
// [0x00020102] 
// Parameters infos:
// class AUTWeapon*               NewWeapon                      ( CPF_Parm )

void AUTInventoryManager::CheckSwitchTo ( class AUTWeapon* NewWeapon )
{
	static UFunction* pFnCheckSwitchTo = NULL;

	if ( ! pFnCheckSwitchTo )
		pFnCheckSwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 57010 ];

	AUTInventoryManager_execCheckSwitchTo_Parms CheckSwitchTo_Parms;
	CheckSwitchTo_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnCheckSwitchTo, &CheckSwitchTo_Parms, NULL );
};

// Function UTGame.UTInventoryManager.RetrySwitchTo
// [0x00020102] 
// Parameters infos:
// class AUTWeapon*               NewWeapon                      ( CPF_Parm )

void AUTInventoryManager::RetrySwitchTo ( class AUTWeapon* NewWeapon )
{
	static UFunction* pFnRetrySwitchTo = NULL;

	if ( ! pFnRetrySwitchTo )
		pFnRetrySwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 57008 ];

	AUTInventoryManager_execRetrySwitchTo_Parms RetrySwitchTo_Parms;
	RetrySwitchTo_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnRetrySwitchTo, &RetrySwitchTo_Parms, NULL );
};

// Function UTGame.UTInventoryManager.ProcessRetrySwitch
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::ProcessRetrySwitch ( )
{
	static UFunction* pFnProcessRetrySwitch = NULL;

	if ( ! pFnProcessRetrySwitch )
		pFnProcessRetrySwitch = (UFunction*) UObject::GObjObjects()->Data[ 57006 ];

	AUTInventoryManager_execProcessRetrySwitch_Parms ProcessRetrySwitch_Parms;

	this->ProcessEvent ( pFnProcessRetrySwitch, &ProcessRetrySwitch_Parms, NULL );
};

// Function UTGame.UTInventoryManager.CreateInventory
// [0x00024102] 
// Parameters infos:
// class AInventory*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  NewInventoryItemClass          ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

class AInventory* AUTInventoryManager::CreateInventory ( class UClass* NewInventoryItemClass, unsigned long bDoNotActivate )
{
	static UFunction* pFnCreateInventory = NULL;

	if ( ! pFnCreateInventory )
		pFnCreateInventory = (UFunction*) UObject::GObjObjects()->Data[ 57002 ];

	AUTInventoryManager_execCreateInventory_Parms CreateInventory_Parms;
	CreateInventory_Parms.NewInventoryItemClass = NewInventoryItemClass;
	CreateInventory_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnCreateInventory, &CreateInventory_Parms, NULL );

	return CreateInventory_Parms.ReturnValue;
};

// Function UTGame.UTInventoryManager.ClientWeaponSet
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 NewWeapon                      ( CPF_Parm )
// unsigned long                  bOptionalSet                   ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void AUTInventoryManager::ClientWeaponSet ( class AWeapon* NewWeapon, unsigned long bOptionalSet, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientWeaponSet = NULL;

	if ( ! pFnClientWeaponSet )
		pFnClientWeaponSet = (UFunction*) UObject::GObjObjects()->Data[ 56997 ];

	AUTInventoryManager_execClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.NewWeapon = NewWeapon;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL );
};

// Function UTGame.UTInventoryManager.SetPendingWeapon
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 DesiredWeapon                  ( CPF_Parm )

void AUTInventoryManager::SetPendingWeapon ( class AWeapon* DesiredWeapon )
{
	static UFunction* pFnSetPendingWeapon = NULL;

	if ( ! pFnSetPendingWeapon )
		pFnSetPendingWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56992 ];

	AUTInventoryManager_execSetPendingWeapon_Parms SetPendingWeapon_Parms;
	SetPendingWeapon_Parms.DesiredWeapon = DesiredWeapon;

	this->ProcessEvent ( pFnSetPendingWeapon, &SetPendingWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.ServerSetCurrentWeapon
// [0x002200C2] 
// Parameters infos:
// class AWeapon*                 DesiredWeapon                  ( CPF_Parm )

void AUTInventoryManager::ServerSetCurrentWeapon ( class AWeapon* DesiredWeapon )
{
	static UFunction* pFnServerSetCurrentWeapon = NULL;

	if ( ! pFnServerSetCurrentWeapon )
		pFnServerSetCurrentWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56990 ];

	AUTInventoryManager_execServerSetCurrentWeapon_Parms ServerSetCurrentWeapon_Parms;
	ServerSetCurrentWeapon_Parms.DesiredWeapon = DesiredWeapon;

	this->ProcessEvent ( pFnServerSetCurrentWeapon, &ServerSetCurrentWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.ClientSetCurrentWeapon
// [0x010201C2] 
// Parameters infos:
// class AWeapon*                 DesiredWeapon                  ( CPF_Parm )

void AUTInventoryManager::ClientSetCurrentWeapon ( class AWeapon* DesiredWeapon )
{
	static UFunction* pFnClientSetCurrentWeapon = NULL;

	if ( ! pFnClientSetCurrentWeapon )
		pFnClientSetCurrentWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56988 ];

	AUTInventoryManager_execClientSetCurrentWeapon_Parms ClientSetCurrentWeapon_Parms;
	ClientSetCurrentWeapon_Parms.DesiredWeapon = DesiredWeapon;

	this->ProcessEvent ( pFnClientSetCurrentWeapon, &ClientSetCurrentWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.SetCurrentWeapon
// [0x010201C2] 
// Parameters infos:
// class AWeapon*                 DesiredWeapon                  ( CPF_Parm )

void AUTInventoryManager::SetCurrentWeapon ( class AWeapon* DesiredWeapon )
{
	static UFunction* pFnSetCurrentWeapon = NULL;

	if ( ! pFnSetCurrentWeapon )
		pFnSetCurrentWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56986 ];

	AUTInventoryManager_execSetCurrentWeapon_Parms SetCurrentWeapon_Parms;
	SetCurrentWeapon_Parms.DesiredWeapon = DesiredWeapon;

	this->ProcessEvent ( pFnSetCurrentWeapon, &SetCurrentWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.AllAmmo
// [0x00024002] 
// Parameters infos:
// unsigned long                  bAmmoForSuperWeapons           ( CPF_OptionalParm | CPF_Parm )

void AUTInventoryManager::AllAmmo ( unsigned long bAmmoForSuperWeapons )
{
	static UFunction* pFnAllAmmo = NULL;

	if ( ! pFnAllAmmo )
		pFnAllAmmo = (UFunction*) UObject::GObjObjects()->Data[ 56983 ];

	AUTInventoryManager_execAllAmmo_Parms AllAmmo_Parms;
	AllAmmo_Parms.bAmmoForSuperWeapons = bAmmoForSuperWeapons;

	this->ProcessEvent ( pFnAllAmmo, &AllAmmo_Parms, NULL );
};

// Function UTGame.UTInventoryManager.NextWeapon
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56982 ];

	AUTInventoryManager_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.PrevWeapon
// [0x00020102] 
// Parameters infos:

void AUTInventoryManager::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56981 ];

	AUTInventoryManager_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.AdjustWeapon
// [0x00020102] 
// Parameters infos:
// int                            NewOffset                      ( CPF_Parm )

void AUTInventoryManager::AdjustWeapon ( int NewOffset )
{
	static UFunction* pFnAdjustWeapon = NULL;

	if ( ! pFnAdjustWeapon )
		pFnAdjustWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56974 ];

	AUTInventoryManager_execAdjustWeapon_Parms AdjustWeapon_Parms;
	AdjustWeapon_Parms.NewOffset = NewOffset;

	this->ProcessEvent ( pFnAdjustWeapon, &AdjustWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.SwitchWeapon
// [0x00020102] 
// Parameters infos:
// unsigned char                  NewGroup                       ( CPF_Parm )

void AUTInventoryManager::SwitchWeapon ( unsigned char NewGroup )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56968 ];

	AUTInventoryManager_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.NewGroup = NewGroup;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function UTGame.UTInventoryManager.GetWeaponList
// [0x00424102] 
// Parameters infos:
// unsigned long                  bFilter                        ( CPF_OptionalParm | CPF_Parm )
// int                            GroupFilter                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNoEmpty                       ( CPF_OptionalParm | CPF_Parm )
// TArray< class AUTWeapon* >     WeaponList                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTInventoryManager::GetWeaponList ( unsigned long bFilter, int GroupFilter, unsigned long bNoEmpty, TArray< class AUTWeapon* >* WeaponList )
{
	static UFunction* pFnGetWeaponList = NULL;

	if ( ! pFnGetWeaponList )
		pFnGetWeaponList = (UFunction*) UObject::GObjObjects()->Data[ 56960 ];

	AUTInventoryManager_execGetWeaponList_Parms GetWeaponList_Parms;
	GetWeaponList_Parms.bFilter = bFilter;
	GetWeaponList_Parms.GroupFilter = GroupFilter;
	GetWeaponList_Parms.bNoEmpty = bNoEmpty;

	this->ProcessEvent ( pFnGetWeaponList, &GetWeaponList_Parms, NULL );

	if ( WeaponList )
		memcpy ( WeaponList, &GetWeaponList_Parms.WeaponList, 0xC );
};

// Function UTGame.UTInventoryManager.OwnerEvent
// [0x00020102] 
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )

void AUTInventoryManager::OwnerEvent ( struct FName EventName )
{
	static UFunction* pFnOwnerEvent = NULL;

	if ( ! pFnOwnerEvent )
		pFnOwnerEvent = (UFunction*) UObject::GObjObjects()->Data[ 56957 ];

	AUTInventoryManager_execOwnerEvent_Parms OwnerEvent_Parms;
	memcpy ( &OwnerEvent_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnOwnerEvent, &OwnerEvent_Parms, NULL );
};

// Function UTGame.UTInventoryManager.ClientSyncWeapon
// [0x010201C2] 
// Parameters infos:
// class AWeapon*                 NewWeapon                      ( CPF_Parm )

void AUTInventoryManager::ClientSyncWeapon ( class AWeapon* NewWeapon )
{
	static UFunction* pFnClientSyncWeapon = NULL;

	if ( ! pFnClientSyncWeapon )
		pFnClientSyncWeapon = (UFunction*) UObject::GObjObjects()->Data[ 56954 ];

	AUTInventoryManager_execClientSyncWeapon_Parms ClientSyncWeapon_Parms;
	ClientSyncWeapon_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnClientSyncWeapon, &ClientSyncWeapon_Parms, NULL );
};

// Function UTGame.UTCTFHUD.GetDirectionalDest
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

class AActor* AUTCTFHUD::GetDirectionalDest ( unsigned char TeamIndex )
{
	static UFunction* pFnGetDirectionalDest = NULL;

	if ( ! pFnGetDirectionalDest )
		pFnGetDirectionalDest = (UFunction*) UObject::GObjObjects()->Data[ 54729 ];

	AUTCTFHUD_execGetDirectionalDest_Parms GetDirectionalDest_Parms;
	GetDirectionalDest_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetDirectionalDest, &GetDirectionalDest_Parms, NULL );

	return GetDirectionalDest_Parms.ReturnValue;
};

// Function UTGame.UTCTFHUD.DisplayTeamLogos
// [0x00824002] 
// Parameters infos:
// unsigned char                  TeamIndex                      ( CPF_Parm )
// struct FVector2D               pos                            ( CPF_Parm )
// float                          DestScale                      ( CPF_OptionalParm | CPF_Parm )

void AUTCTFHUD::DisplayTeamLogos ( unsigned char TeamIndex, struct FVector2D pos, float DestScale )
{
	static UFunction* pFnDisplayTeamLogos = NULL;

	if ( ! pFnDisplayTeamLogos )
		pFnDisplayTeamLogos = (UFunction*) UObject::GObjObjects()->Data[ 54720 ];

	AUTCTFHUD_execDisplayTeamLogos_Parms DisplayTeamLogos_Parms;
	DisplayTeamLogos_Parms.TeamIndex = TeamIndex;
	memcpy ( &DisplayTeamLogos_Parms.pos, &pos, 0x8 );
	DisplayTeamLogos_Parms.DestScale = DestScale;

	this->ProcessEvent ( pFnDisplayTeamLogos, &DisplayTeamLogos_Parms, NULL );
};

// Function UTGame.UTCTFHUD.Timer
// [0x00020102] 
// Parameters infos:

void AUTCTFHUD::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 54717 ];

	AUTCTFHUD_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTCTFHUD.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTCTFHUD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54715 ];

	AUTCTFHUD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTTeamHUD.DisplayDirectionIndicator
// [0x00820002] 
// Parameters infos:
// unsigned char                  TeamIndex                      ( CPF_Parm )
// struct FVector2D               pos                            ( CPF_Parm )
// class AActor*                  destActor                      ( CPF_Parm )
// float                          DestScale                      ( CPF_Parm )

void AUTTeamHUD::DisplayDirectionIndicator ( unsigned char TeamIndex, struct FVector2D pos, class AActor* destActor, float DestScale )
{
	static UFunction* pFnDisplayDirectionIndicator = NULL;

	if ( ! pFnDisplayDirectionIndicator )
		pFnDisplayDirectionIndicator = (UFunction*) UObject::GObjObjects()->Data[ 54641 ];

	AUTTeamHUD_execDisplayDirectionIndicator_Parms DisplayDirectionIndicator_Parms;
	DisplayDirectionIndicator_Parms.TeamIndex = TeamIndex;
	memcpy ( &DisplayDirectionIndicator_Parms.pos, &pos, 0x8 );
	DisplayDirectionIndicator_Parms.destActor = destActor;
	DisplayDirectionIndicator_Parms.DestScale = DestScale;

	this->ProcessEvent ( pFnDisplayDirectionIndicator, &DisplayDirectionIndicator_Parms, NULL );
};

// Function UTGame.UTTeamHUD.DisplayTeamLogos
// [0x00024002] 
// Parameters infos:
// unsigned char                  TeamIndex                      ( CPF_Parm )
// struct FVector2D               pos                            ( CPF_Parm )
// float                          DestScale                      ( CPF_OptionalParm | CPF_Parm )

void AUTTeamHUD::DisplayTeamLogos ( unsigned char TeamIndex, struct FVector2D pos, float DestScale )
{
	static UFunction* pFnDisplayTeamLogos = NULL;

	if ( ! pFnDisplayTeamLogos )
		pFnDisplayTeamLogos = (UFunction*) UObject::GObjObjects()->Data[ 54637 ];

	AUTTeamHUD_execDisplayTeamLogos_Parms DisplayTeamLogos_Parms;
	DisplayTeamLogos_Parms.TeamIndex = TeamIndex;
	memcpy ( &DisplayTeamLogos_Parms.pos, &pos, 0x8 );
	DisplayTeamLogos_Parms.DestScale = DestScale;

	this->ProcessEvent ( pFnDisplayTeamLogos, &DisplayTeamLogos_Parms, NULL );
};

// Function UTGame.UTTeamHUD.GetDirectionalDest
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

class AActor* AUTTeamHUD::GetDirectionalDest ( unsigned char TeamIndex )
{
	static UFunction* pFnGetDirectionalDest = NULL;

	if ( ! pFnGetDirectionalDest )
		pFnGetDirectionalDest = (UFunction*) UObject::GObjObjects()->Data[ 54634 ];

	AUTTeamHUD_execGetDirectionalDest_Parms GetDirectionalDest_Parms;
	GetDirectionalDest_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetDirectionalDest, &GetDirectionalDest_Parms, NULL );

	return GetDirectionalDest_Parms.ReturnValue;
};

// Function UTGame.UTTeamHUD.GetTeamScore
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamIndex                      ( CPF_Parm )

int AUTTeamHUD::GetTeamScore ( unsigned char TeamIndex )
{
	static UFunction* pFnGetTeamScore = NULL;

	if ( ! pFnGetTeamScore )
		pFnGetTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 54631 ];

	AUTTeamHUD_execGetTeamScore_Parms GetTeamScore_Parms;
	GetTeamScore_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetTeamScore, &GetTeamScore_Parms, NULL );

	return GetTeamScore_Parms.ReturnValue;
};

// Function UTGame.UTTeamHUD.DisplayTeamScore
// [0x00820002] 
// Parameters infos:

void AUTTeamHUD::DisplayTeamScore ( )
{
	static UFunction* pFnDisplayTeamScore = NULL;

	if ( ! pFnDisplayTeamScore )
		pFnDisplayTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 54621 ];

	AUTTeamHUD_execDisplayTeamScore_Parms DisplayTeamScore_Parms;

	this->ProcessEvent ( pFnDisplayTeamScore, &DisplayTeamScore_Parms, NULL );
};

// Function UTGame.UTTeamHUD.DisplayScoring
// [0x00020002] 
// Parameters infos:

void AUTTeamHUD::DisplayScoring ( )
{
	static UFunction* pFnDisplayScoring = NULL;

	if ( ! pFnDisplayScoring )
		pFnDisplayScoring = (UFunction*) UObject::GObjObjects()->Data[ 54620 ];

	AUTTeamHUD_execDisplayScoring_Parms DisplayScoring_Parms;

	this->ProcessEvent ( pFnDisplayScoring, &DisplayScoring_Parms, NULL );
};

// Function UTGame.UTWeaponKillRewardMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTWeaponKillRewardMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 60606 ];

	UUTWeaponKillRewardMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTWeaponKillRewardMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTWeaponKillRewardMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 60600 ];

	UUTWeaponKillRewardMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTWeaponKillRewardMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTWeaponKillRewardMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 60593 ];

	UUTWeaponKillRewardMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTAchievements.UpdateSpiceOfLife
// [0x00020002] 
// Parameters infos:
// int                            MutatorBitMask                 ( CPF_Parm )

void UUTAchievements::UpdateSpiceOfLife ( int MutatorBitMask )
{
	static UFunction* pFnUpdateSpiceOfLife = NULL;

	if ( ! pFnUpdateSpiceOfLife )
		pFnUpdateSpiceOfLife = (UFunction*) UObject::GObjObjects()->Data[ 47359 ];

	UUTAchievements_execUpdateSpiceOfLife_Parms UpdateSpiceOfLife_Parms;
	UpdateSpiceOfLife_Parms.MutatorBitMask = MutatorBitMask;

	this->ProcessEvent ( pFnUpdateSpiceOfLife, &UpdateSpiceOfLife_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.FlushAchievementStatsComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UUTAchievementsBase::FlushAchievementStatsComplete ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnFlushAchievementStatsComplete = NULL;

	if ( ! pFnFlushAchievementStatsComplete )
		pFnFlushAchievementStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 47354 ];

	UUTAchievementsBase_execFlushAchievementStatsComplete_Parms FlushAchievementStatsComplete_Parms;
	memcpy ( &FlushAchievementStatsComplete_Parms.SessionName, &SessionName, 0x8 );
	FlushAchievementStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnFlushAchievementStatsComplete, &FlushAchievementStatsComplete_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.WriteAchievementStats
// [0x00020002] 
// Parameters infos:

void UUTAchievementsBase::WriteAchievementStats ( )
{
	static UFunction* pFnWriteAchievementStats = NULL;

	if ( ! pFnWriteAchievementStats )
		pFnWriteAchievementStats = (UFunction*) UObject::GObjObjects()->Data[ 47351 ];

	UUTAchievementsBase_execWriteAchievementStats_Parms WriteAchievementStats_Parms;

	this->ProcessEvent ( pFnWriteAchievementStats, &WriteAchievementStats_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.ReadAchievementStatsComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UUTAchievementsBase::ReadAchievementStatsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnReadAchievementStatsComplete = NULL;

	if ( ! pFnReadAchievementStatsComplete )
		pFnReadAchievementStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 47346 ];

	UUTAchievementsBase_execReadAchievementStatsComplete_Parms ReadAchievementStatsComplete_Parms;
	ReadAchievementStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnReadAchievementStatsComplete, &ReadAchievementStatsComplete_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.ReadAchievementStats
// [0x00020002] 
// Parameters infos:

void UUTAchievementsBase::ReadAchievementStats ( )
{
	static UFunction* pFnReadAchievementStats = NULL;

	if ( ! pFnReadAchievementStats )
		pFnReadAchievementStats = (UFunction*) UObject::GObjObjects()->Data[ 47343 ];

	UUTAchievementsBase_execReadAchievementStats_Parms ReadAchievementStats_Parms;

	this->ProcessEvent ( pFnReadAchievementStats, &ReadAchievementStats_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.GetAchievementUnlockType
// [0x00424003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            UnlockType                     ( CPF_Parm | CPF_OutParm )
// unsigned char                  bUnlockEnabled                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::GetAchievementUnlockType ( int AchievementId, int* UnlockType, unsigned char* bUnlockEnabled )
{
	static UFunction* pFnGetAchievementUnlockType = NULL;

	if ( ! pFnGetAchievementUnlockType )
		pFnGetAchievementUnlockType = (UFunction*) UObject::GObjObjects()->Data[ 47266 ];

	UUTAchievementsBase_execGetAchievementUnlockType_Parms GetAchievementUnlockType_Parms;
	GetAchievementUnlockType_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnGetAchievementUnlockType, &GetAchievementUnlockType_Parms, NULL );

	if ( UnlockType )
		*UnlockType = GetAchievementUnlockType_Parms.UnlockType;

	if ( bUnlockEnabled )
		*bUnlockEnabled = GetAchievementUnlockType_Parms.bUnlockEnabled;

	return GetAchievementUnlockType_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.GetAchievementProgressCriteria
// [0x00424003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            ProgressCriteria               ( CPF_Parm | CPF_OutParm )
// unsigned char                  bProgressEnabled               ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::GetAchievementProgressCriteria ( int AchievementId, int* ProgressCriteria, unsigned char* bProgressEnabled )
{
	static UFunction* pFnGetAchievementProgressCriteria = NULL;

	if ( ! pFnGetAchievementProgressCriteria )
		pFnGetAchievementProgressCriteria = (UFunction*) UObject::GObjObjects()->Data[ 47291 ];

	UUTAchievementsBase_execGetAchievementProgressCriteria_Parms GetAchievementProgressCriteria_Parms;
	GetAchievementProgressCriteria_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnGetAchievementProgressCriteria, &GetAchievementProgressCriteria_Parms, NULL );

	if ( ProgressCriteria )
		*ProgressCriteria = GetAchievementProgressCriteria_Parms.ProgressCriteria;

	if ( bProgressEnabled )
		*bProgressEnabled = GetAchievementProgressCriteria_Parms.bProgressEnabled;

	return GetAchievementProgressCriteria_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.GetAchievementUnlockCriteria
// [0x00420003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            UnlockCriteria                 ( CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::GetAchievementUnlockCriteria ( int AchievementId, int* UnlockCriteria )
{
	static UFunction* pFnGetAchievementUnlockCriteria = NULL;

	if ( ! pFnGetAchievementUnlockCriteria )
		pFnGetAchievementUnlockCriteria = (UFunction*) UObject::GObjObjects()->Data[ 47290 ];

	UUTAchievementsBase_execGetAchievementUnlockCriteria_Parms GetAchievementUnlockCriteria_Parms;
	GetAchievementUnlockCriteria_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnGetAchievementUnlockCriteria, &GetAchievementUnlockCriteria_Parms, NULL );

	if ( UnlockCriteria )
		*UnlockCriteria = GetAchievementUnlockCriteria_Parms.UnlockCriteria;

	return GetAchievementUnlockCriteria_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.SetAchievementValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            Value                          ( CPF_Parm )

bool UUTAchievementsBase::SetAchievementValue ( int AchievementId, int Value )
{
	static UFunction* pFnSetAchievementValue = NULL;

	if ( ! pFnSetAchievementValue )
		pFnSetAchievementValue = (UFunction*) UObject::GObjObjects()->Data[ 47320 ];

	UUTAchievementsBase_execSetAchievementValue_Parms SetAchievementValue_Parms;
	SetAchievementValue_Parms.AchievementId = AchievementId;
	SetAchievementValue_Parms.Value = Value;

	this->ProcessEvent ( pFnSetAchievementValue, &SetAchievementValue_Parms, NULL );

	return SetAchievementValue_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.GetAchievementValue
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            Value                          ( CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::GetAchievementValue ( int AchievementId, int* Value )
{
	static UFunction* pFnGetAchievementValue = NULL;

	if ( ! pFnGetAchievementValue )
		pFnGetAchievementValue = (UFunction*) UObject::GObjObjects()->Data[ 47314 ];

	UUTAchievementsBase_execGetAchievementValue_Parms GetAchievementValue_Parms;
	GetAchievementValue_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnGetAchievementValue, &GetAchievementValue_Parms, NULL );

	if ( Value )
		*Value = GetAchievementValue_Parms.Value;

	return GetAchievementValue_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.UpdateAchievementByteCount
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            Counter                        ( CPF_Parm )

bool UUTAchievementsBase::UpdateAchievementByteCount ( int AchievementId, int Counter )
{
	static UFunction* pFnUpdateAchievementByteCount = NULL;

	if ( ! pFnUpdateAchievementByteCount )
		pFnUpdateAchievementByteCount = (UFunction*) UObject::GObjObjects()->Data[ 47303 ];

	UUTAchievementsBase_execUpdateAchievementByteCount_Parms UpdateAchievementByteCount_Parms;
	UpdateAchievementByteCount_Parms.AchievementId = AchievementId;
	UpdateAchievementByteCount_Parms.Counter = Counter;

	this->ProcessEvent ( pFnUpdateAchievementByteCount, &UpdateAchievementByteCount_Parms, NULL );

	return UpdateAchievementByteCount_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.UpdateAchievementCount
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            Count                          ( CPF_OptionalParm | CPF_Parm )
// int                            Progress                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// int                            MaxProgress                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// unsigned char                  bProgressEnabled               ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::UpdateAchievementCount ( int AchievementId, int Count, int* Progress, int* MaxProgress, unsigned char* bProgressEnabled )
{
	static UFunction* pFnUpdateAchievementCount = NULL;

	if ( ! pFnUpdateAchievementCount )
		pFnUpdateAchievementCount = (UFunction*) UObject::GObjObjects()->Data[ 47292 ];

	UUTAchievementsBase_execUpdateAchievementCount_Parms UpdateAchievementCount_Parms;
	UpdateAchievementCount_Parms.AchievementId = AchievementId;
	UpdateAchievementCount_Parms.Count = Count;

	this->ProcessEvent ( pFnUpdateAchievementCount, &UpdateAchievementCount_Parms, NULL );

	if ( Progress )
		*Progress = UpdateAchievementCount_Parms.Progress;

	if ( MaxProgress )
		*MaxProgress = UpdateAchievementCount_Parms.MaxProgress;

	if ( bProgressEnabled )
		*bProgressEnabled = UpdateAchievementCount_Parms.bProgressEnabled;

	return UpdateAchievementCount_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.UpdateAchievementBitMask
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AchievementId                  ( CPF_Parm )
// int                            BitMask                        ( CPF_Parm )
// int                            Progress                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// int                            MaxProgress                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// unsigned char                  bProgressEnabled               ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool UUTAchievementsBase::UpdateAchievementBitMask ( int AchievementId, int BitMask, int* Progress, int* MaxProgress, unsigned char* bProgressEnabled )
{
	static UFunction* pFnUpdateAchievementBitMask = NULL;

	if ( ! pFnUpdateAchievementBitMask )
		pFnUpdateAchievementBitMask = (UFunction*) UObject::GObjObjects()->Data[ 47275 ];

	UUTAchievementsBase_execUpdateAchievementBitMask_Parms UpdateAchievementBitMask_Parms;
	UpdateAchievementBitMask_Parms.AchievementId = AchievementId;
	UpdateAchievementBitMask_Parms.BitMask = BitMask;

	this->ProcessEvent ( pFnUpdateAchievementBitMask, &UpdateAchievementBitMask_Parms, NULL );

	if ( Progress )
		*Progress = UpdateAchievementBitMask_Parms.Progress;

	if ( MaxProgress )
		*MaxProgress = UpdateAchievementBitMask_Parms.MaxProgress;

	if ( bProgressEnabled )
		*bProgressEnabled = UpdateAchievementBitMask_Parms.bProgressEnabled;

	return UpdateAchievementBitMask_Parms.ReturnValue;
};

// Function UTGame.UTAchievementsBase.DisplayAchievementProgress
// [0x00020000] 
// Parameters infos:
// int                            AchievementId                  ( CPF_Parm )
// int                            Progress                       ( CPF_Parm )
// int                            MaxProgress                    ( CPF_Parm )

void UUTAchievementsBase::DisplayAchievementProgress ( int AchievementId, int Progress, int MaxProgress )
{
	static UFunction* pFnDisplayAchievementProgress = NULL;

	if ( ! pFnDisplayAchievementProgress )
		pFnDisplayAchievementProgress = (UFunction*) UObject::GObjObjects()->Data[ 47271 ];

	UUTAchievementsBase_execDisplayAchievementProgress_Parms DisplayAchievementProgress_Parms;
	DisplayAchievementProgress_Parms.AchievementId = AchievementId;
	DisplayAchievementProgress_Parms.Progress = Progress;
	DisplayAchievementProgress_Parms.MaxProgress = MaxProgress;

	this->ProcessEvent ( pFnDisplayAchievementProgress, &DisplayAchievementProgress_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.AchievementDone
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UUTAchievementsBase::AchievementDone ( unsigned long bWasSuccessful )
{
	static UFunction* pFnAchievementDone = NULL;

	if ( ! pFnAchievementDone )
		pFnAchievementDone = (UFunction*) UObject::GObjObjects()->Data[ 47269 ];

	UUTAchievementsBase_execAchievementDone_Parms AchievementDone_Parms;
	AchievementDone_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnAchievementDone, &AchievementDone_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.UnlockAchievement
// [0x00020002] 
// Parameters infos:
// int                            AchievementId                  ( CPF_Parm )

void UUTAchievementsBase::UnlockAchievement ( int AchievementId )
{
	static UFunction* pFnUnlockAchievement = NULL;

	if ( ! pFnUnlockAchievement )
		pFnUnlockAchievement = (UFunction*) UObject::GObjObjects()->Data[ 47267 ];

	UUTAchievementsBase_execUnlockAchievement_Parms UnlockAchievement_Parms;
	UnlockAchievement_Parms.AchievementId = AchievementId;

	this->ProcessEvent ( pFnUnlockAchievement, &UnlockAchievement_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.UpdateAchievement
// [0x00024002] 
// Parameters infos:
// int                            AchievementId                  ( CPF_Parm )
// int                            Value                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bSkipCommit                    ( CPF_OptionalParm | CPF_Parm )

void UUTAchievementsBase::UpdateAchievement ( int AchievementId, int Value, unsigned long bSkipCommit )
{
	static UFunction* pFnUpdateAchievement = NULL;

	if ( ! pFnUpdateAchievement )
		pFnUpdateAchievement = (UFunction*) UObject::GObjObjects()->Data[ 47255 ];

	UUTAchievementsBase_execUpdateAchievement_Parms UpdateAchievement_Parms;
	UpdateAchievement_Parms.AchievementId = AchievementId;
	UpdateAchievement_Parms.Value = Value;
	UpdateAchievement_Parms.bSkipCommit = bSkipCommit;

	this->ProcessEvent ( pFnUpdateAchievement, &UpdateAchievement_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.Cleanup
// [0x00020002] 
// Parameters infos:

void UUTAchievementsBase::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 47254 ];

	UUTAchievementsBase_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function UTGame.UTAchievementsBase.Initialize
// [0x00020002] 
// Parameters infos:

void UUTAchievementsBase::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 47253 ];

	UUTAchievementsBase_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function UTGame.UTLeaderboardRead.GetScore
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUniqueNetId            Player                         ( CPF_Parm )

int UUTLeaderboardRead::GetScore ( struct FUniqueNetId Player )
{
	static UFunction* pFnGetScore = NULL;

	if ( ! pFnGetScore )
		pFnGetScore = (UFunction*) UObject::GObjObjects()->Data[ 44582 ];

	UUTLeaderboardRead_execGetScore_Parms GetScore_Parms;
	memcpy ( &GetScore_Parms.Player, &Player, 0x8 );

	this->ProcessEvent ( pFnGetScore, &GetScore_Parms, NULL );

	return GetScore_Parms.ReturnValue;
};

// Function UTGame.UTAnnouncer.PlayAnnouncement
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void AUTAnnouncer::PlayAnnouncement ( class UClass* InMessageClass, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnPlayAnnouncement = NULL;

	if ( ! pFnPlayAnnouncement )
		pFnPlayAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 48904 ];

	AUTAnnouncer_execPlayAnnouncement_Parms PlayAnnouncement_Parms;
	PlayAnnouncement_Parms.InMessageClass = InMessageClass;
	PlayAnnouncement_Parms.MessageIndex = MessageIndex;
	PlayAnnouncement_Parms.PRI = PRI;
	PlayAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnPlayAnnouncement, &PlayAnnouncement_Parms, NULL );
};

// Function UTGame.UTAnnouncer.AnnouncementFinished
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void AUTAnnouncer::AnnouncementFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnAnnouncementFinished = NULL;

	if ( ! pFnAnnouncementFinished )
		pFnAnnouncementFinished = (UFunction*) UObject::GObjObjects()->Data[ 48902 ];

	AUTAnnouncer_execAnnouncementFinished_Parms AnnouncementFinished_Parms;
	AnnouncementFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnAnnouncementFinished, &AnnouncementFinished_Parms, NULL );
};

// Function UTGame.UTAnnouncer.PlayAnnouncementNow
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void AUTAnnouncer::PlayAnnouncementNow ( class UClass* InMessageClass, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnPlayAnnouncementNow = NULL;

	if ( ! pFnPlayAnnouncementNow )
		pFnPlayAnnouncementNow = (UFunction*) UObject::GObjObjects()->Data[ 48889 ];

	AUTAnnouncer_execPlayAnnouncementNow_Parms PlayAnnouncementNow_Parms;
	PlayAnnouncementNow_Parms.InMessageClass = InMessageClass;
	PlayAnnouncementNow_Parms.MessageIndex = MessageIndex;
	PlayAnnouncementNow_Parms.PRI = PRI;
	PlayAnnouncementNow_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnPlayAnnouncementNow, &PlayAnnouncementNow_Parms, NULL );
};

// Function UTGame.UTAnnouncer.PlayNextAnnouncement
// [0x00020002] 
// Parameters infos:

void AUTAnnouncer::PlayNextAnnouncement ( )
{
	static UFunction* pFnPlayNextAnnouncement = NULL;

	if ( ! pFnPlayNextAnnouncement )
		pFnPlayNextAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 48883 ];

	AUTAnnouncer_execPlayNextAnnouncement_Parms PlayNextAnnouncement_Parms;

	this->ProcessEvent ( pFnPlayNextAnnouncement, &PlayNextAnnouncement_Parms, NULL );
};

// Function UTGame.UTAnnouncer.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTAnnouncer::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48882 ];

	AUTAnnouncer_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTAnnouncer.Destroyed
// [0x00020002] 
// Parameters infos:

void AUTAnnouncer::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 48879 ];

	AUTAnnouncer_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTCheatManager.KillAllPawns
// [0x00020002] 
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )

void UUTCheatManager::KillAllPawns ( class UClass* aClass )
{
	static UFunction* pFnKillAllPawns = NULL;

	if ( ! pFnKillAllPawns )
		pFnKillAllPawns = (UFunction*) UObject::GObjObjects()->Data[ 52478 ];

	UUTCheatManager_execKillAllPawns_Parms KillAllPawns_Parms;
	KillAllPawns_Parms.aClass = aClass;

	this->ProcessEvent ( pFnKillAllPawns, &KillAllPawns_Parms, NULL );
};

// Function UTGame.UTCheatManager.TestUploadGameStats
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::TestUploadGameStats ( )
{
	static UFunction* pFnTestUploadGameStats = NULL;

	if ( ! pFnTestUploadGameStats )
		pFnTestUploadGameStats = (UFunction*) UObject::GObjObjects()->Data[ 52474 ];

	UUTCheatManager_execTestUploadGameStats_Parms TestUploadGameStats_Parms;

	this->ProcessEvent ( pFnTestUploadGameStats, &TestUploadGameStats_Parms, NULL );
};

// Function UTGame.UTCheatManager.KillAll
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )

void UUTCheatManager::KillAll ( class UClass* aClass )
{
	static UFunction* pFnKillAll = NULL;

	if ( ! pFnKillAll )
		pFnKillAll = (UFunction*) UObject::GObjObjects()->Data[ 52470 ];

	UUTCheatManager_execKillAll_Parms KillAll_Parms;
	KillAll_Parms.aClass = aClass;

	this->ProcessEvent ( pFnKillAll, &KillAll_Parms, NULL );
};

// Function UTGame.UTCheatManager.SetStickBind
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          val                            ( CPF_Parm )

void UUTCheatManager::SetStickBind ( float val )
{
	static UFunction* pFnSetStickBind = NULL;

	if ( ! pFnSetStickBind )
		pFnSetStickBind = (UFunction*) UObject::GObjObjects()->Data[ 52466 ];

	UUTCheatManager_execSetStickBind_Parms SetStickBind_Parms;
	SetStickBind_Parms.val = val;

	this->ProcessEvent ( pFnSetStickBind, &SetStickBind_Parms, NULL );
};

// Function UTGame.UTCheatManager.ShowStickBindings
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::ShowStickBindings ( )
{
	static UFunction* pFnShowStickBindings = NULL;

	if ( ! pFnShowStickBindings )
		pFnShowStickBindings = (UFunction*) UObject::GObjObjects()->Data[ 52464 ];

	UUTCheatManager_execShowStickBindings_Parms ShowStickBindings_Parms;

	this->ProcessEvent ( pFnShowStickBindings, &ShowStickBindings_Parms, NULL );
};

// Function UTGame.UTCheatManager.TiltIt
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void UUTCheatManager::TiltIt ( unsigned long bActive )
{
	static UFunction* pFnTiltIt = NULL;

	if ( ! pFnTiltIt )
		pFnTiltIt = (UFunction*) UObject::GObjObjects()->Data[ 52462 ];

	UUTCheatManager_execTiltIt_Parms TiltIt_Parms;
	TiltIt_Parms.bActive = bActive;

	this->ProcessEvent ( pFnTiltIt, &TiltIt_Parms, NULL );
};

// Function UTGame.UTCheatManager.LeaveADecal
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )

void UUTCheatManager::LeaveADecal ( struct FVector HitLoc, struct FVector HitNorm )
{
	static UFunction* pFnLeaveADecal = NULL;

	if ( ! pFnLeaveADecal )
		pFnLeaveADecal = (UFunction*) UObject::GObjObjects()->Data[ 52448 ];

	UUTCheatManager_execLeaveADecal_Parms LeaveADecal_Parms;
	memcpy ( &LeaveADecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveADecal_Parms.HitNorm, &HitNorm, 0xC );

	this->ProcessEvent ( pFnLeaveADecal, &LeaveADecal_Parms, NULL );
};

// Function UTGame.UTCheatManager.SpawnABloodDecal
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::SpawnABloodDecal ( )
{
	static UFunction* pFnSpawnABloodDecal = NULL;

	if ( ! pFnSpawnABloodDecal )
		pFnSpawnABloodDecal = (UFunction*) UObject::GObjObjects()->Data[ 52447 ];

	UUTCheatManager_execSpawnABloodDecal_Parms SpawnABloodDecal_Parms;

	this->ProcessEvent ( pFnSpawnABloodDecal, &SpawnABloodDecal_Parms, NULL );
};

// Function UTGame.UTCheatManager.KillOtherBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::KillOtherBots ( )
{
	static UFunction* pFnKillOtherBots = NULL;

	if ( ! pFnKillOtherBots )
		pFnKillOtherBots = (UFunction*) UObject::GObjObjects()->Data[ 52445 ];

	UUTCheatManager_execKillOtherBots_Parms KillOtherBots_Parms;

	this->ProcessEvent ( pFnKillOtherBots, &KillOtherBots_Parms, NULL );
};

// Function UTGame.UTCheatManager.EditWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 WhichWeapon                    ( CPF_Parm | CPF_NeedCtorLink )

void UUTCheatManager::EditWeapon ( struct FString WhichWeapon )
{
	static UFunction* pFnEditWeapon = NULL;

	if ( ! pFnEditWeapon )
		pFnEditWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52438 ];

	UUTCheatManager_execEditWeapon_Parms EditWeapon_Parms;
	memcpy ( &EditWeapon_Parms.WhichWeapon, &WhichWeapon, 0xC );

	this->ProcessEvent ( pFnEditWeapon, &EditWeapon_Parms, NULL );
};

// Function UTGame.UTCheatManager.SuicideBy
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            DeathHealth                    ( CPF_OptionalParm | CPF_Parm )

void UUTCheatManager::SuicideBy ( struct FString Type, int DeathHealth )
{
	static UFunction* pFnSuicideBy = NULL;

	if ( ! pFnSuicideBy )
		pFnSuicideBy = (UFunction*) UObject::GObjObjects()->Data[ 52434 ];

	UUTCheatManager_execSuicideBy_Parms SuicideBy_Parms;
	memcpy ( &SuicideBy_Parms.Type, &Type, 0xC );
	SuicideBy_Parms.DeathHealth = DeathHealth;

	this->ProcessEvent ( pFnSuicideBy, &SuicideBy_Parms, NULL );
};

// Function UTGame.UTCheatManager.RBGrav
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          NewGravityScaling              ( CPF_Parm )

void UUTCheatManager::RBGrav ( float NewGravityScaling )
{
	static UFunction* pFnRBGrav = NULL;

	if ( ! pFnRBGrav )
		pFnRBGrav = (UFunction*) UObject::GObjObjects()->Data[ 52432 ];

	UUTCheatManager_execRBGrav_Parms RBGrav_Parms;
	RBGrav_Parms.NewGravityScaling = NewGravityScaling;

	this->ProcessEvent ( pFnRBGrav, &RBGrav_Parms, NULL );
};

// Function UTGame.UTCheatManager.KillBadGuys
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::KillBadGuys ( )
{
	static UFunction* pFnKillBadGuys = NULL;

	if ( ! pFnKillBadGuys )
		pFnKillBadGuys = (UFunction*) UObject::GObjObjects()->Data[ 52428 ];

	UUTCheatManager_execKillBadGuys_Parms KillBadGuys_Parms;

	this->ProcessEvent ( pFnKillBadGuys, &KillBadGuys_Parms, NULL );
};

// Function UTGame.UTCheatManager.ViewBot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::ViewBot ( )
{
	static UFunction* pFnViewBot = NULL;

	if ( ! pFnViewBot )
		pFnViewBot = (UFunction*) UObject::GObjObjects()->Data[ 52424 ];

	UUTCheatManager_execViewBot_Parms ViewBot_Parms;

	this->ProcessEvent ( pFnViewBot, &ViewBot_Parms, NULL );
};

// Function UTGame.UTCheatManager.FreeCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::FreeCamera ( )
{
	static UFunction* pFnFreeCamera = NULL;

	if ( ! pFnFreeCamera )
		pFnFreeCamera = (UFunction*) UObject::GObjObjects()->Data[ 52423 ];

	UUTCheatManager_execFreeCamera_Parms FreeCamera_Parms;

	this->ProcessEvent ( pFnFreeCamera, &FreeCamera_Parms, NULL );
};

// Function UTGame.UTCheatManager.Invisible
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  B                              ( CPF_Parm )

void UUTCheatManager::Invisible ( unsigned long B )
{
	static UFunction* pFnInvisible = NULL;

	if ( ! pFnInvisible )
		pFnInvisible = (UFunction*) UObject::GObjObjects()->Data[ 52421 ];

	UUTCheatManager_execInvisible_Parms Invisible_Parms;
	Invisible_Parms.B = B;

	this->ProcessEvent ( pFnInvisible, &Invisible_Parms, NULL );
};

// Function UTGame.UTCheatManager.AllAmmo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::AllAmmo ( )
{
	static UFunction* pFnAllAmmo = NULL;

	if ( ! pFnAllAmmo )
		pFnAllAmmo = (UFunction*) UObject::GObjObjects()->Data[ 52420 ];

	UUTCheatManager_execAllAmmo_Parms AllAmmo_Parms;

	this->ProcessEvent ( pFnAllAmmo, &AllAmmo_Parms, NULL );
};

// Function UTGame.UTCheatManager.PhysicsGun
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::PhysicsGun ( )
{
	static UFunction* pFnPhysicsGun = NULL;

	if ( ! pFnPhysicsGun )
		pFnPhysicsGun = (UFunction*) UObject::GObjObjects()->Data[ 52419 ];

	UUTCheatManager_execPhysicsGun_Parms PhysicsGun_Parms;

	this->ProcessEvent ( pFnPhysicsGun, &PhysicsGun_Parms, NULL );
};

// Function UTGame.UTCheatManager.DoubleUp
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::DoubleUp ( )
{
	static UFunction* pFnDoubleUp = NULL;

	if ( ! pFnDoubleUp )
		pFnDoubleUp = (UFunction*) UObject::GObjObjects()->Data[ 52418 ];

	UUTCheatManager_execDoubleUp_Parms DoubleUp_Parms;

	this->ProcessEvent ( pFnDoubleUp, &DoubleUp_Parms, NULL );
};

// Function UTGame.UTCheatManager.AllWeapons
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::AllWeapons ( )
{
	static UFunction* pFnAllWeapons = NULL;

	if ( ! pFnAllWeapons )
		pFnAllWeapons = (UFunction*) UObject::GObjObjects()->Data[ 52417 ];

	UUTCheatManager_execAllWeapons_Parms AllWeapons_Parms;

	this->ProcessEvent ( pFnAllWeapons, &AllWeapons_Parms, NULL );
};

// Function UTGame.UTCheatManager.SummonV
// [0x00820202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

void UUTCheatManager::SummonV ( struct FString ClassName )
{
	static UFunction* pFnSummonV = NULL;

	if ( ! pFnSummonV )
		pFnSummonV = (UFunction*) UObject::GObjObjects()->Data[ 52413 ];

	UUTCheatManager_execSummonV_Parms SummonV_Parms;
	memcpy ( &SummonV_Parms.ClassName, &ClassName, 0xC );

	this->ProcessEvent ( pFnSummonV, &SummonV_Parms, NULL );
};

// Function UTGame.UTCheatManager.LMS
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Switch                         ( CPF_Parm )

void UUTCheatManager::LMS ( int Switch )
{
	static UFunction* pFnLMS = NULL;

	if ( ! pFnLMS )
		pFnLMS = (UFunction*) UObject::GObjObjects()->Data[ 52411 ];

	UUTCheatManager_execLMS_Parms LMS_Parms;
	LMS_Parms.Switch = Switch;

	this->ProcessEvent ( pFnLMS, &LMS_Parms, NULL );
};

// Function UTGame.UTCheatManager.LM
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 MessageClassName               ( CPF_Parm | CPF_NeedCtorLink )

void UUTCheatManager::LM ( struct FString MessageClassName )
{
	static UFunction* pFnLM = NULL;

	if ( ! pFnLM )
		pFnLM = (UFunction*) UObject::GObjObjects()->Data[ 52409 ];

	UUTCheatManager_execLM_Parms LM_Parms;
	memcpy ( &LM_Parms.MessageClassName, &MessageClassName, 0xC );

	this->ProcessEvent ( pFnLM, &LM_Parms, NULL );
};

// Function UTGame.UTCheatManager.Glow
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void UUTCheatManager::Glow ( float F )
{
	static UFunction* pFnGlow = NULL;

	if ( ! pFnGlow )
		pFnGlow = (UFunction*) UObject::GObjObjects()->Data[ 52406 ];

	UUTCheatManager_execGlow_Parms Glow_Parms;
	Glow_Parms.F = F;

	this->ProcessEvent ( pFnGlow, &Glow_Parms, NULL );
};

// Function UTGame.UTCheatManager.ViewFlag
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTCheatManager::ViewFlag ( )
{
	static UFunction* pFnViewFlag = NULL;

	if ( ! pFnViewFlag )
		pFnViewFlag = (UFunction*) UObject::GObjObjects()->Data[ 52404 ];

	UUTCheatManager_execViewFlag_Parms ViewFlag_Parms;

	this->ProcessEvent ( pFnViewFlag, &ViewFlag_Parms, NULL );
};

// Function UTGame.UTPlayerInput.Jump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTPlayerInput::Jump ( )
{
	static UFunction* pFnJump = NULL;

	if ( ! pFnJump )
		pFnJump = (UFunction*) UObject::GObjObjects()->Data[ 52673 ];

	UUTPlayerInput_execJump_Parms Jump_Parms;

	this->ProcessEvent ( pFnJump, &Jump_Parms, NULL );
};

// Function UTGame.UTPlayerInput.UnDuck
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void UUTPlayerInput::UnDuck ( )
{
	static UFunction* pFnUnDuck = NULL;

	if ( ! pFnUnDuck )
		pFnUnDuck = (UFunction*) UObject::GObjObjects()->Data[ 52672 ];

	UUTPlayerInput_execUnDuck_Parms UnDuck_Parms;

	this->ProcessEvent ( pFnUnDuck, &UnDuck_Parms, NULL );
};

// Function UTGame.UTPlayerInput.Duck
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void UUTPlayerInput::Duck ( )
{
	static UFunction* pFnDuck = NULL;

	if ( ! pFnDuck )
		pFnDuck = (UFunction*) UObject::GObjObjects()->Data[ 52671 ];

	UUTPlayerInput_execDuck_Parms Duck_Parms;

	this->ProcessEvent ( pFnDuck, &Duck_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ADemoRecSpectator::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 44762 ];

	ADemoRecSpectator_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 CameraLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                CameraRotation                 ( CPF_Parm | CPF_OutParm )

void ADemoRecSpectator::eventGetPlayerViewPoint ( struct FVector* CameraLocation, struct FRotator* CameraRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 44759 ];

	ADemoRecSpectator_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( CameraLocation )
		memcpy ( CameraLocation, &GetPlayerViewPoint_Parms.CameraLocation, 0xC );

	if ( CameraRotation )
		memcpy ( CameraRotation, &GetPlayerViewPoint_Parms.CameraRotation, 0xC );
};

// Function UTGame.DemoRecSpectator.Pause
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ADemoRecSpectator::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 44744 ];

	ADemoRecSpectator_execPause_Parms Pause_Parms;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.SetPause
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPause                         ( CPF_Parm )
// struct FScriptDelegate         CanUnpauseDelegate             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ADemoRecSpectator::SetPause ( unsigned long bPause, struct FScriptDelegate CanUnpauseDelegate )
{
	static UFunction* pFnSetPause = NULL;

	if ( ! pFnSetPause )
		pFnSetPause = (UFunction*) UObject::GObjObjects()->Data[ 44740 ];

	ADemoRecSpectator_execSetPause_Parms SetPause_Parms;
	SetPause_Parms.bPause = bPause;
	memcpy ( &SetPause_Parms.CanUnpauseDelegate, &CanUnpauseDelegate, 0xC );

	this->ProcessEvent ( pFnSetPause, &SetPause_Parms, NULL );

	return SetPause_Parms.ReturnValue;
};

// Function UTGame.DemoRecSpectator.ClientSetRealViewTarget
// [0x010201C2] 
// Parameters infos:
// class APlayerReplicationInfo*  NewTarget                      ( CPF_Parm )

void ADemoRecSpectator::ClientSetRealViewTarget ( class APlayerReplicationInfo* NewTarget )
{
	static UFunction* pFnClientSetRealViewTarget = NULL;

	if ( ! pFnClientSetRealViewTarget )
		pFnClientSetRealViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 44738 ];

	ADemoRecSpectator_execClientSetRealViewTarget_Parms ClientSetRealViewTarget_Parms;
	ClientSetRealViewTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnClientSetRealViewTarget, &ClientSetRealViewTarget_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.ServerViewSelf
// [0x00224042] 
// Parameters infos:
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ADemoRecSpectator::ServerViewSelf ( struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnServerViewSelf = NULL;

	if ( ! pFnServerViewSelf )
		pFnServerViewSelf = (UFunction*) UObject::GObjObjects()->Data[ 44736 ];

	ADemoRecSpectator_execServerViewSelf_Parms ServerViewSelf_Parms;
	memcpy ( &ServerViewSelf_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnServerViewSelf, &ServerViewSelf_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.SetViewTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ADemoRecSpectator::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 44733 ];

	ADemoRecSpectator_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.DemoViewNextPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ADemoRecSpectator::DemoViewNextPlayer ( )
{
	static UFunction* pFnDemoViewNextPlayer = NULL;

	if ( ! pFnDemoViewNextPlayer )
		pFnDemoViewNextPlayer = (UFunction*) UObject::GObjObjects()->Data[ 44729 ];

	ADemoRecSpectator_execDemoViewNextPlayer_Parms DemoViewNextPlayer_Parms;

	this->ProcessEvent ( pFnDemoViewNextPlayer, &DemoViewNextPlayer_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.ViewClass
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )
// unsigned long                  bQuiet                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCheat                         ( CPF_OptionalParm | CPF_Parm )

void ADemoRecSpectator::ViewClass ( class UClass* aClass, unsigned long bQuiet, unsigned long bCheat )
{
	static UFunction* pFnViewClass = NULL;

	if ( ! pFnViewClass )
		pFnViewClass = (UFunction*) UObject::GObjObjects()->Data[ 44722 ];

	ADemoRecSpectator_execViewClass_Parms ViewClass_Parms;
	ViewClass_Parms.aClass = aClass;
	ViewClass_Parms.bQuiet = bQuiet;
	ViewClass_Parms.bCheat = bCheat;

	this->ProcessEvent ( pFnViewClass, &ViewClass_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.Slomo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          NewTimeDilation                ( CPF_Parm )

void ADemoRecSpectator::Slomo ( float NewTimeDilation )
{
	static UFunction* pFnSlomo = NULL;

	if ( ! pFnSlomo )
		pFnSlomo = (UFunction*) UObject::GObjObjects()->Data[ 44720 ];

	ADemoRecSpectator_execSlomo_Parms Slomo_Parms;
	Slomo_Parms.NewTimeDilation = NewTimeDilation;

	this->ProcessEvent ( pFnSlomo, &Slomo_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.InitPlayerReplicationInfo
// [0x00020002] 
// Parameters infos:

void ADemoRecSpectator::InitPlayerReplicationInfo ( )
{
	static UFunction* pFnInitPlayerReplicationInfo = NULL;

	if ( ! pFnInitPlayerReplicationInfo )
		pFnInitPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 44719 ];

	ADemoRecSpectator_execInitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;

	this->ProcessEvent ( pFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADemoRecSpectator::eventReceivedPlayer ( )
{
	static UFunction* pFnReceivedPlayer = NULL;

	if ( ! pFnReceivedPlayer )
		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 44718 ];

	ADemoRecSpectator_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
};

// Function UTGame.DemoRecSpectator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADemoRecSpectator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 44717 ];

	ADemoRecSpectator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.GFxMinimap.Update
// [0x00820002] 
// Parameters infos:
// float                          Scale                          ( CPF_Parm )

void UGFxMinimap::Update ( float Scale )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 44849 ];

	UGFxMinimap_execUpdate_Parms Update_Parms;
	Update_Parms.Scale = Scale;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function UTGame.GFxMinimap.UpdateIcons
// [0x00C20002] 
// Parameters infos:
// unsigned long                  bIsRedIconType                 ( CPF_Parm )
// TArray< class AActor* >        Actors                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< class UGFxObject* >    ActorIcons                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UGFxMinimap::UpdateIcons ( unsigned long bIsRedIconType, TArray< class AActor* >* Actors, TArray< class UGFxObject* >* ActorIcons )
{
	static UFunction* pFnUpdateIcons = NULL;

	if ( ! pFnUpdateIcons )
		pFnUpdateIcons = (UFunction*) UObject::GObjObjects()->Data[ 44836 ];

	UGFxMinimap_execUpdateIcons_Parms UpdateIcons_Parms;
	UpdateIcons_Parms.bIsRedIconType = bIsRedIconType;

	this->ProcessEvent ( pFnUpdateIcons, &UpdateIcons_Parms, NULL );

	if ( Actors )
		memcpy ( Actors, &UpdateIcons_Parms.Actors, 0xC );

	if ( ActorIcons )
		memcpy ( ActorIcons, &UpdateIcons_Parms.ActorIcons, 0xC );
};

// Function UTGame.GFxMinimap.GenFlagIcons
// [0x00020002] 
// Parameters infos:
// TArray< class UGFxObject* >    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            N                              ( CPF_Parm )

TArray< class UGFxObject* > UGFxMinimap::GenFlagIcons ( int N )
{
	static UFunction* pFnGenFlagIcons = NULL;

	if ( ! pFnGenFlagIcons )
		pFnGenFlagIcons = (UFunction*) UObject::GObjObjects()->Data[ 44828 ];

	UGFxMinimap_execGenFlagIcons_Parms GenFlagIcons_Parms;
	GenFlagIcons_Parms.N = N;

	this->ProcessEvent ( pFnGenFlagIcons, &GenFlagIcons_Parms, NULL );

	return GenFlagIcons_Parms.ReturnValue;
};

// Function UTGame.GFxMinimap.GenEnemyIcons
// [0x00020002] 
// Parameters infos:
// TArray< class UGFxObject* >    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            N                              ( CPF_Parm )

TArray< class UGFxObject* > UGFxMinimap::GenEnemyIcons ( int N )
{
	static UFunction* pFnGenEnemyIcons = NULL;

	if ( ! pFnGenEnemyIcons )
		pFnGenEnemyIcons = (UFunction*) UObject::GObjObjects()->Data[ 44820 ];

	UGFxMinimap_execGenEnemyIcons_Parms GenEnemyIcons_Parms;
	GenEnemyIcons_Parms.N = N;

	this->ProcessEvent ( pFnGenEnemyIcons, &GenEnemyIcons_Parms, NULL );

	return GenEnemyIcons_Parms.ReturnValue;
};

// Function UTGame.GFxMinimap.GenFriendIcons
// [0x00020002] 
// Parameters infos:
// TArray< class UGFxObject* >    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            N                              ( CPF_Parm )

TArray< class UGFxObject* > UGFxMinimap::GenFriendIcons ( int N )
{
	static UFunction* pFnGenFriendIcons = NULL;

	if ( ! pFnGenFriendIcons )
		pFnGenFriendIcons = (UFunction*) UObject::GObjObjects()->Data[ 44812 ];

	UGFxMinimap_execGenFriendIcons_Parms GenFriendIcons_Parms;
	GenFriendIcons_Parms.N = N;

	this->ProcessEvent ( pFnGenFriendIcons, &GenFriendIcons_Parms, NULL );

	return GenFriendIcons_Parms.ReturnValue;
};

// Function UTGame.GFxMinimap.UpdateData
// [0x00020002] 
// Parameters infos:

void UGFxMinimap::UpdateData ( )
{
	static UFunction* pFnUpdateData = NULL;

	if ( ! pFnUpdateData )
		pFnUpdateData = (UFunction*) UObject::GObjObjects()->Data[ 44811 ];

	UGFxMinimap_execUpdateData_Parms UpdateData_Parms;

	this->ProcessEvent ( pFnUpdateData, &UpdateData_Parms, NULL );
};

// Function UTGame.GFxMinimap.Init
// [0x00820002] 
// Parameters infos:
// class UGFxMinimapHud*          H                              ( CPF_Parm )

void UGFxMinimap::Init ( class UGFxMinimapHud* H )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 44800 ];

	UGFxMinimap_execInit_Parms Init_Parms;
	Init_Parms.H = H;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function UTGame.UTMapInfo.GetActorHudLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  CActor                         ( CPF_Parm )

struct FVector UUTMapInfo::GetActorHudLocation ( class AActor* CActor )
{
	static UFunction* pFnGetActorHudLocation = NULL;

	if ( ! pFnGetActorHudLocation )
		pFnGetActorHudLocation = (UFunction*) UObject::GObjObjects()->Data[ 57403 ];

	UUTMapInfo_execGetActorHudLocation_Parms GetActorHudLocation_Parms;
	GetActorHudLocation_Parms.CActor = CActor;

	this->ProcessEvent ( pFnGetActorHudLocation, &GetActorHudLocation_Parms, NULL );

	return GetActorHudLocation_Parms.ReturnValue;
};

// Function UTGame.UTMapInfo.DrawMapImage
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          W                              ( CPF_Parm )
// float                          H                              ( CPF_Parm )
// float                          PlayerYaw                      ( CPF_Parm )
// float                          BkgImgScaling                  ( CPF_Parm )

void UUTMapInfo::DrawMapImage ( class UCanvas* Canvas, float X, float Y, float W, float H, float PlayerYaw, float BkgImgScaling )
{
	static UFunction* pFnDrawMapImage = NULL;

	if ( ! pFnDrawMapImage )
		pFnDrawMapImage = (UFunction*) UObject::GObjObjects()->Data[ 57393 ];

	UUTMapInfo_execDrawMapImage_Parms DrawMapImage_Parms;
	DrawMapImage_Parms.Canvas = Canvas;
	DrawMapImage_Parms.X = X;
	DrawMapImage_Parms.Y = Y;
	DrawMapImage_Parms.W = W;
	DrawMapImage_Parms.H = H;
	DrawMapImage_Parms.PlayerYaw = PlayerYaw;
	DrawMapImage_Parms.BkgImgScaling = BkgImgScaling;

	this->ProcessEvent ( pFnDrawMapImage, &DrawMapImage_Parms, NULL );
};

// Function UTGame.UTMapInfo.ChangeMapRotation
// [0x00820002] 
// Parameters infos:
// struct FRotator                NewMapRotation                 ( CPF_Parm )

void UUTMapInfo::ChangeMapRotation ( struct FRotator NewMapRotation )
{
	static UFunction* pFnChangeMapRotation = NULL;

	if ( ! pFnChangeMapRotation )
		pFnChangeMapRotation = (UFunction*) UObject::GObjObjects()->Data[ 57390 ];

	UUTMapInfo_execChangeMapRotation_Parms ChangeMapRotation_Parms;
	memcpy ( &ChangeMapRotation_Parms.NewMapRotation, &NewMapRotation, 0xC );

	this->ProcessEvent ( pFnChangeMapRotation, &ChangeMapRotation_Parms, NULL );
};

// Function UTGame.UTMapInfo.UpdateHUDLocation
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 InLocation                     ( CPF_Parm )

struct FVector UUTMapInfo::UpdateHUDLocation ( struct FVector InLocation )
{
	static UFunction* pFnUpdateHUDLocation = NULL;

	if ( ! pFnUpdateHUDLocation )
		pFnUpdateHUDLocation = (UFunction*) UObject::GObjObjects()->Data[ 57384 ];

	UUTMapInfo_execUpdateHUDLocation_Parms UpdateHUDLocation_Parms;
	memcpy ( &UpdateHUDLocation_Parms.InLocation, &InLocation, 0xC );

	this->ProcessEvent ( pFnUpdateHUDLocation, &UpdateHUDLocation_Parms, NULL );

	return UpdateHUDLocation_Parms.ReturnValue;
};

// Function UTGame.UTMapInfo.DrawRotatedMaterialTile
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class UMaterialInstanceConstant* M                              ( CPF_Parm )
// struct FVector                 MapLocation                    ( CPF_Parm )
// int                            InYaw                          ( CPF_Parm )
// float                          XWidth                         ( CPF_Parm )
// float                          YWidth                         ( CPF_Parm )
// float                          XStart                         ( CPF_Parm )
// float                          YStart                         ( CPF_Parm )
// float                          XLength                        ( CPF_Parm )
// float                          YLength                        ( CPF_Parm )

void UUTMapInfo::DrawRotatedMaterialTile ( class UCanvas* Canvas, class UMaterialInstanceConstant* M, struct FVector MapLocation, int InYaw, float XWidth, float YWidth, float XStart, float YStart, float XLength, float YLength )
{
	static UFunction* pFnDrawRotatedMaterialTile = NULL;

	if ( ! pFnDrawRotatedMaterialTile )
		pFnDrawRotatedMaterialTile = (UFunction*) UObject::GObjObjects()->Data[ 57372 ];

	UUTMapInfo_execDrawRotatedMaterialTile_Parms DrawRotatedMaterialTile_Parms;
	DrawRotatedMaterialTile_Parms.Canvas = Canvas;
	DrawRotatedMaterialTile_Parms.M = M;
	memcpy ( &DrawRotatedMaterialTile_Parms.MapLocation, &MapLocation, 0xC );
	DrawRotatedMaterialTile_Parms.InYaw = InYaw;
	DrawRotatedMaterialTile_Parms.XWidth = XWidth;
	DrawRotatedMaterialTile_Parms.YWidth = YWidth;
	DrawRotatedMaterialTile_Parms.XStart = XStart;
	DrawRotatedMaterialTile_Parms.YStart = YStart;
	DrawRotatedMaterialTile_Parms.XLength = XLength;
	DrawRotatedMaterialTile_Parms.YLength = YLength;

	this->ProcessEvent ( pFnDrawRotatedMaterialTile, &DrawRotatedMaterialTile_Parms, NULL );
};

// Function UTGame.UTMapInfo.DrawRotatedTile
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class UTexture2D*              T                              ( CPF_Parm )
// struct FVector                 MapLocation                    ( CPF_Parm )
// int                            InYaw                          ( CPF_Parm )
// float                          IconScale                      ( CPF_Parm )
// struct FTextureCoordinates     TexCoords                      ( CPF_Parm )
// struct FLinearColor            DrawColor                      ( CPF_Parm )

void UUTMapInfo::DrawRotatedTile ( class UCanvas* Canvas, class UTexture2D* T, struct FVector MapLocation, int InYaw, float IconScale, struct FTextureCoordinates TexCoords, struct FLinearColor DrawColor )
{
	static UFunction* pFnDrawRotatedTile = NULL;

	if ( ! pFnDrawRotatedTile )
		pFnDrawRotatedTile = (UFunction*) UObject::GObjObjects()->Data[ 57361 ];

	UUTMapInfo_execDrawRotatedTile_Parms DrawRotatedTile_Parms;
	DrawRotatedTile_Parms.Canvas = Canvas;
	DrawRotatedTile_Parms.T = T;
	memcpy ( &DrawRotatedTile_Parms.MapLocation, &MapLocation, 0xC );
	DrawRotatedTile_Parms.InYaw = InYaw;
	DrawRotatedTile_Parms.IconScale = IconScale;
	memcpy ( &DrawRotatedTile_Parms.TexCoords, &TexCoords, 0x10 );
	memcpy ( &DrawRotatedTile_Parms.DrawColor, &DrawColor, 0x10 );

	this->ProcessEvent ( pFnDrawRotatedTile, &DrawRotatedTile_Parms, NULL );
};

// Function UTGame.UTMapInfo.AddKeyVehicle
// [0x00020102] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void UUTMapInfo::AddKeyVehicle ( class AUTVehicle* V )
{
	static UFunction* pFnAddKeyVehicle = NULL;

	if ( ! pFnAddKeyVehicle )
		pFnAddKeyVehicle = (UFunction*) UObject::GObjObjects()->Data[ 57358 ];

	UUTMapInfo_execAddKeyVehicle_Parms AddKeyVehicle_Parms;
	AddKeyVehicle_Parms.V = V;

	this->ProcessEvent ( pFnAddKeyVehicle, &AddKeyVehicle_Parms, NULL );
};

// Function UTGame.UTMapInfo.DrawMap
// [0x00820102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// float                          XPos                           ( CPF_Parm )
// float                          YPos                           ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )
// unsigned long                  bFullDetail                    ( CPF_Parm )
// float                          AspectRatio                    ( CPF_Parm )

void UUTMapInfo::DrawMap ( class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, float XPos, float YPos, float Width, float Height, unsigned long bFullDetail, float AspectRatio )
{
	static UFunction* pFnDrawMap = NULL;

	if ( ! pFnDrawMap )
		pFnDrawMap = (UFunction*) UObject::GObjObjects()->Data[ 57318 ];

	UUTMapInfo_execDrawMap_Parms DrawMap_Parms;
	DrawMap_Parms.Canvas = Canvas;
	DrawMap_Parms.PlayerOwner = PlayerOwner;
	DrawMap_Parms.XPos = XPos;
	DrawMap_Parms.YPos = YPos;
	DrawMap_Parms.Width = Width;
	DrawMap_Parms.Height = Height;
	DrawMap_Parms.bFullDetail = bFullDetail;
	DrawMap_Parms.AspectRatio = AspectRatio;

	this->ProcessEvent ( pFnDrawMap, &DrawMap_Parms, NULL );
};

// Function UTGame.UTMapInfo.UpdateNodes
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )

void UUTMapInfo::UpdateNodes ( class AUTPlayerController* PlayerOwner )
{
	static UFunction* pFnUpdateNodes = NULL;

	if ( ! pFnUpdateNodes )
		pFnUpdateNodes = (UFunction*) UObject::GObjObjects()->Data[ 57315 ];

	UUTMapInfo_execUpdateNodes_Parms UpdateNodes_Parms;
	UpdateNodes_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnUpdateNodes, &UpdateNodes_Parms, NULL );
};

// Function UTGame.UTMapInfo.RenderAdditionalInformation
// [0x00020102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )

void UUTMapInfo::RenderAdditionalInformation ( class UCanvas* Canvas, class AUTPlayerController* PlayerOwner )
{
	static UFunction* pFnRenderAdditionalInformation = NULL;

	if ( ! pFnRenderAdditionalInformation )
		pFnRenderAdditionalInformation = (UFunction*) UObject::GObjObjects()->Data[ 57311 ];

	UUTMapInfo_execRenderAdditionalInformation_Parms RenderAdditionalInformation_Parms;
	RenderAdditionalInformation_Parms.Canvas = Canvas;
	RenderAdditionalInformation_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnRenderAdditionalInformation, &RenderAdditionalInformation_Parms, NULL );
};

// Function UTGame.UTMapInfo.RenderLinks
// [0x00820102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )

void UUTMapInfo::RenderLinks ( class UCanvas* Canvas, class AUTPlayerController* PlayerOwner )
{
	static UFunction* pFnRenderLinks = NULL;

	if ( ! pFnRenderLinks )
		pFnRenderLinks = (UFunction*) UObject::GObjObjects()->Data[ 57304 ];

	UUTMapInfo_execRenderLinks_Parms RenderLinks_Parms;
	RenderLinks_Parms.Canvas = Canvas;
	RenderLinks_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnRenderLinks, &RenderLinks_Parms, NULL );
};

// Function UTGame.UTMapInfo.FindObjectives
// [0x00020002] 
// Parameters infos:

void UUTMapInfo::FindObjectives ( )
{
	static UFunction* pFnFindObjectives = NULL;

	if ( ! pFnFindObjectives )
		pFnFindObjectives = (UFunction*) UObject::GObjObjects()->Data[ 57302 ];

	UUTMapInfo_execFindObjectives_Parms FindObjectives_Parms;

	this->ProcessEvent ( pFnFindObjectives, &FindObjectives_Parms, NULL );
};

// Function UTGame.UTMapInfo.VerifyMapExtent
// [0x00020102] 
// Parameters infos:

void UUTMapInfo::VerifyMapExtent ( )
{
	static UFunction* pFnVerifyMapExtent = NULL;

	if ( ! pFnVerifyMapExtent )
		pFnVerifyMapExtent = (UFunction*) UObject::GObjObjects()->Data[ 57298 ];

	UUTMapInfo_execVerifyMapExtent_Parms VerifyMapExtent_Parms;

	this->ProcessEvent ( pFnVerifyMapExtent, &VerifyMapExtent_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.AddDeathMessage
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Killer                         ( CPF_Parm )
// class APlayerReplicationInfo*  Killed                         ( CPF_Parm )
// class UClass*                  Dmg                            ( CPF_Parm )

void UGFxMinimapHud::AddDeathMessage ( class APlayerReplicationInfo* Killer, class APlayerReplicationInfo* Killed, class UClass* Dmg )
{
	static UFunction* pFnAddDeathMessage = NULL;

	if ( ! pFnAddDeathMessage )
		pFnAddDeathMessage = (UFunction*) UObject::GObjObjects()->Data[ 45015 ];

	UGFxMinimapHud_execAddDeathMessage_Parms AddDeathMessage_Parms;
	AddDeathMessage_Parms.Killer = Killer;
	AddDeathMessage_Parms.Killed = Killed;
	AddDeathMessage_Parms.Dmg = Dmg;

	this->ProcessEvent ( pFnAddDeathMessage, &AddDeathMessage_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.GetRank
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

struct FString UGFxMinimapHud::GetRank ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetRank = NULL;

	if ( ! pFnGetRank )
		pFnGetRank = (UFunction*) UObject::GObjObjects()->Data[ 45010 ];

	UGFxMinimapHud_execGetRank_Parms GetRank_Parms;
	GetRank_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetRank, &GetRank_Parms, NULL );

	return GetRank_Parms.ReturnValue;
};

// Function UTGame.GFxMinimapHud.SetCenterText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UGFxMinimapHud::SetCenterText ( struct FString Text )
{
	static UFunction* pFnSetCenterText = NULL;

	if ( ! pFnSetCenterText )
		pFnSetCenterText = (UFunction*) UObject::GObjObjects()->Data[ 45008 ];

	UGFxMinimapHud_execSetCenterText_Parms SetCenterText_Parms;
	memcpy ( &SetCenterText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnSetCenterText, &SetCenterText_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.ShowMultiKill
// [0x00020002] 
// Parameters infos:
// int                            N                              ( CPF_Parm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UGFxMinimapHud::ShowMultiKill ( int N, struct FString msg )
{
	static UFunction* pFnShowMultiKill = NULL;

	if ( ! pFnShowMultiKill )
		pFnShowMultiKill = (UFunction*) UObject::GObjObjects()->Data[ 45005 ];

	UGFxMinimapHud_execShowMultiKill_Parms ShowMultiKill_Parms;
	ShowMultiKill_Parms.N = N;
	memcpy ( &ShowMultiKill_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnShowMultiKill, &ShowMultiKill_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.DisplayHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 HitDir                         ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void UGFxMinimapHud::DisplayHit ( struct FVector HitDir, int Damage, class UClass* DamageType )
{
	static UFunction* pFnDisplayHit = NULL;

	if ( ! pFnDisplayHit )
		pFnDisplayHit = (UFunction*) UObject::GObjObjects()->Data[ 44991 ];

	UGFxMinimapHud_execDisplayHit_Parms DisplayHit_Parms;
	memcpy ( &DisplayHit_Parms.HitDir, &HitDir, 0xC );
	DisplayHit_Parms.Damage = Damage;
	DisplayHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDisplayHit, &DisplayHit_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.MinimapZoomIn
// [0x00020002] 
// Parameters infos:

void UGFxMinimapHud::MinimapZoomIn ( )
{
	static UFunction* pFnMinimapZoomIn = NULL;

	if ( ! pFnMinimapZoomIn )
		pFnMinimapZoomIn = (UFunction*) UObject::GObjObjects()->Data[ 44990 ];

	UGFxMinimapHud_execMinimapZoomIn_Parms MinimapZoomIn_Parms;

	this->ProcessEvent ( pFnMinimapZoomIn, &MinimapZoomIn_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.MinimapZoomOut
// [0x00020002] 
// Parameters infos:

void UGFxMinimapHud::MinimapZoomOut ( )
{
	static UFunction* pFnMinimapZoomOut = NULL;

	if ( ! pFnMinimapZoomOut )
		pFnMinimapZoomOut = (UFunction*) UObject::GObjObjects()->Data[ 44989 ];

	UGFxMinimapHud_execMinimapZoomOut_Parms MinimapZoomOut_Parms;

	this->ProcessEvent ( pFnMinimapZoomOut, &MinimapZoomOut_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.ToggleCrosshair
// [0x00020002] 
// Parameters infos:
// unsigned long                  bToggle                        ( CPF_Parm )

void UGFxMinimapHud::ToggleCrosshair ( unsigned long bToggle )
{
	static UFunction* pFnToggleCrosshair = NULL;

	if ( ! pFnToggleCrosshair )
		pFnToggleCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 44987 ];

	UGFxMinimapHud_execToggleCrosshair_Parms ToggleCrosshair_Parms;
	ToggleCrosshair_Parms.bToggle = bToggle;

	this->ProcessEvent ( pFnToggleCrosshair, &ToggleCrosshair_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.TickHud
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGFxMinimapHud::TickHud ( float DeltaTime )
{
	static UFunction* pFnTickHud = NULL;

	if ( ! pFnTickHud )
		pFnTickHud = (UFunction*) UObject::GObjObjects()->Data[ 44966 ];

	UGFxMinimapHud_execTickHud_Parms TickHud_Parms;
	TickHud_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickHud, &TickHud_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.UpdateGameHUD
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UGFxMinimapHud::UpdateGameHUD ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateGameHUD = NULL;

	if ( ! pFnUpdateGameHUD )
		pFnUpdateGameHUD = (UFunction*) UObject::GObjObjects()->Data[ 44961 ];

	UGFxMinimapHud_execUpdateGameHUD_Parms UpdateGameHUD_Parms;
	UpdateGameHUD_Parms.PRI = PRI;

	this->ProcessEvent ( pFnUpdateGameHUD, &UpdateGameHUD_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.AddMessage
// [0x00820002] 
// Parameters infos:
// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UGFxMinimapHud::AddMessage ( struct FString Type, struct FString msg )
{
	static UFunction* pFnAddMessage = NULL;

	if ( ! pFnAddMessage )
		pFnAddMessage = (UFunction*) UObject::GObjObjects()->Data[ 44955 ];

	UGFxMinimapHud_execAddMessage_Parms AddMessage_Parms;
	memcpy ( &AddMessage_Parms.Type, &Type, 0xC );
	memcpy ( &AddMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAddMessage, &AddMessage_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.RemoveMessage
// [0x00020000] 
// Parameters infos:

void UGFxMinimapHud::RemoveMessage ( )
{
	static UFunction* pFnRemoveMessage = NULL;

	if ( ! pFnRemoveMessage )
		pFnRemoveMessage = (UFunction*) UObject::GObjObjects()->Data[ 44954 ];

	UGFxMinimapHud_execRemoveMessage_Parms RemoveMessage_Parms;

	this->ProcessEvent ( pFnRemoveMessage, &RemoveMessage_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.ClearStats
// [0x00824002] 
// Parameters infos:
// unsigned long                  clearScores                    ( CPF_OptionalParm | CPF_Parm )

void UGFxMinimapHud::ClearStats ( unsigned long clearScores )
{
	static UFunction* pFnClearStats = NULL;

	if ( ! pFnClearStats )
		pFnClearStats = (UFunction*) UObject::GObjObjects()->Data[ 44951 ];

	UGFxMinimapHud_execClearStats_Parms ClearStats_Parms;
	ClearStats_Parms.clearScores = clearScores;

	this->ProcessEvent ( pFnClearStats, &ClearStats_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.FormatTime
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UGFxMinimapHud::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 44945 ];

	UGFxMinimapHud_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function UTGame.GFxMinimapHud.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            Player                         ( CPF_OptionalParm | CPF_Parm )

void UGFxMinimapHud::Init ( class ULocalPlayer* Player )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 44941 ];

	UGFxMinimapHud_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function UTGame.GFxMinimapHud.InitMessageRow
// [0x00820002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxMinimapHud::InitMessageRow ( )
{
	static UFunction* pFnInitMessageRow = NULL;

	if ( ! pFnInitMessageRow )
		pFnInitMessageRow = (UFunction*) UObject::GObjObjects()->Data[ 44938 ];

	UGFxMinimapHud_execInitMessageRow_Parms InitMessageRow_Parms;

	this->ProcessEvent ( pFnInitMessageRow, &InitMessageRow_Parms, NULL );

	return InitMessageRow_Parms.ReturnValue;
};

// Function UTGame.GFxMinimapHud.CreateMessageRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxMinimapHud::CreateMessageRow ( )
{
	static UFunction* pFnCreateMessageRow = NULL;

	if ( ! pFnCreateMessageRow )
		pFnCreateMessageRow = (UFunction*) UObject::GObjObjects()->Data[ 44936 ];

	UGFxMinimapHud_execCreateMessageRow_Parms CreateMessageRow_Parms;

	this->ProcessEvent ( pFnCreateMessageRow, &CreateMessageRow_Parms, NULL );

	return CreateMessageRow_Parms.ReturnValue;
};

// Function UTGame.GFxMinimapHud.registerMiniMapView
// [0x00020002] 
// Parameters infos:
// class UGFxMinimap*             MC                             ( CPF_Parm )
// float                          R                              ( CPF_Parm )

void UGFxMinimapHud::registerMiniMapView ( class UGFxMinimap* MC, float R )
{
	static UFunction* pFnregisterMiniMapView = NULL;

	if ( ! pFnregisterMiniMapView )
		pFnregisterMiniMapView = (UFunction*) UObject::GObjObjects()->Data[ 44933 ];

	UGFxMinimapHud_execregisterMiniMapView_Parms registerMiniMapView_Parms;
	registerMiniMapView_Parms.MC = MC;
	registerMiniMapView_Parms.R = R;

	this->ProcessEvent ( pFnregisterMiniMapView, &registerMiniMapView_Parms, NULL );
};

// Function UTGame.UTGFxTeamHUD.GetRank
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

struct FString UUTGFxTeamHUD::GetRank ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetRank = NULL;

	if ( ! pFnGetRank )
		pFnGetRank = (UFunction*) UObject::GObjObjects()->Data[ 56720 ];

	UUTGFxTeamHUD_execGetRank_Parms GetRank_Parms;
	GetRank_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetRank, &GetRank_Parms, NULL );

	return GetRank_Parms.ReturnValue;
};

// Function UTGame.UTGFxTeamHUD.UpdateGameHUD
// [0x00820002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UUTGFxTeamHUD::UpdateGameHUD ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateGameHUD = NULL;

	if ( ! pFnUpdateGameHUD )
		pFnUpdateGameHUD = (UFunction*) UObject::GObjObjects()->Data[ 56713 ];

	UUTGFxTeamHUD_execUpdateGameHUD_Parms UpdateGameHUD_Parms;
	UpdateGameHUD_Parms.PRI = PRI;

	this->ProcessEvent ( pFnUpdateGameHUD, &UpdateGameHUD_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ContinueOnFoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Hoverboard::eventContinueOnFoot ( )
{
	static UFunction* pFnContinueOnFoot = NULL;

	if ( ! pFnContinueOnFoot )
		pFnContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 59149 ];

	AUTVehicle_Hoverboard_eventContinueOnFoot_Parms ContinueOnFoot_Parms;

	this->ProcessEvent ( pFnContinueOnFoot, &ContinueOnFoot_Parms, NULL );

	return ContinueOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.BelowSpeedThreshold
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventBelowSpeedThreshold ( )
{
	static UFunction* pFnBelowSpeedThreshold = NULL;

	if ( ! pFnBelowSpeedThreshold )
		pFnBelowSpeedThreshold = (UFunction*) UObject::GObjObjects()->Data[ 59147 ];

	AUTVehicle_Hoverboard_eventBelowSpeedThreshold_Parms BelowSpeedThreshold_Parms;

	this->ProcessEvent ( pFnBelowSpeedThreshold, &BelowSpeedThreshold_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle_Hoverboard::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 59144 ];

	AUTVehicle_Hoverboard_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.SpawnRoosterEffect
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventSpawnRoosterEffect ( )
{
	static UFunction* pFnSpawnRoosterEffect = NULL;

	if ( ! pFnSpawnRoosterEffect )
		pFnSpawnRoosterEffect = (UFunction*) UObject::GObjObjects()->Data[ 59142 ];

	AUTVehicle_Hoverboard_eventSpawnRoosterEffect_Parms SpawnRoosterEffect_Parms;

	this->ProcessEvent ( pFnSpawnRoosterEffect, &SpawnRoosterEffect_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.OnTouchForcedDirVolume
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUDKForcedDirectionVolume* Vol                            ( CPF_Parm )

bool AUTVehicle_Hoverboard::OnTouchForcedDirVolume ( class AUDKForcedDirectionVolume* Vol )
{
	static UFunction* pFnOnTouchForcedDirVolume = NULL;

	if ( ! pFnOnTouchForcedDirVolume )
		pFnOnTouchForcedDirVolume = (UFunction*) UObject::GObjObjects()->Data[ 59139 ];

	AUTVehicle_Hoverboard_execOnTouchForcedDirVolume_Parms OnTouchForcedDirVolume_Parms;
	OnTouchForcedDirVolume_Parms.Vol = Vol;

	this->ProcessEvent ( pFnOnTouchForcedDirVolume, &OnTouchForcedDirVolume_Parms, NULL );

	return OnTouchForcedDirVolume_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.HoverboardLanded
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventHoverboardLanded ( )
{
	static UFunction* pFnHoverboardLanded = NULL;

	if ( ! pFnHoverboardLanded )
		pFnHoverboardLanded = (UFunction*) UObject::GObjObjects()->Data[ 59137 ];

	AUTVehicle_Hoverboard_eventHoverboardLanded_Parms HoverboardLanded_Parms;

	this->ProcessEvent ( pFnHoverboardLanded, &HoverboardLanded_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.HideBoard
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventHideBoard ( )
{
	static UFunction* pFnHideBoard = NULL;

	if ( ! pFnHideBoard )
		pFnHideBoard = (UFunction*) UObject::GObjObjects()->Data[ 59136 ];

	AUTVehicle_Hoverboard_eventHideBoard_Parms HideBoard_Parms;

	this->ProcessEvent ( pFnHideBoard, &HideBoard_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ToggleAnimBoard
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAnimBoard                     ( CPF_Parm )
// float                          Delay                          ( CPF_Parm )

void AUTVehicle_Hoverboard::eventToggleAnimBoard ( unsigned long bAnimBoard, float Delay )
{
	static UFunction* pFnToggleAnimBoard = NULL;

	if ( ! pFnToggleAnimBoard )
		pFnToggleAnimBoard = (UFunction*) UObject::GObjObjects()->Data[ 59132 ];

	AUTVehicle_Hoverboard_eventToggleAnimBoard_Parms ToggleAnimBoard_Parms;
	ToggleAnimBoard_Parms.bAnimBoard = bAnimBoard;
	ToggleAnimBoard_Parms.Delay = Delay;

	this->ProcessEvent ( pFnToggleAnimBoard, &ToggleAnimBoard_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.StopVehicleSounds
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Hoverboard::StopVehicleSounds ( )
{
	static UFunction* pFnStopVehicleSounds = NULL;

	if ( ! pFnStopVehicleSounds )
		pFnStopVehicleSounds = (UFunction*) UObject::GObjObjects()->Data[ 59131 ];

	AUTVehicle_Hoverboard_execStopVehicleSounds_Parms StopVehicleSounds_Parms;

	this->ProcessEvent ( pFnStopVehicleSounds, &StopVehicleSounds_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.RBPenetrationDestroy
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventRBPenetrationDestroy ( )
{
	static UFunction* pFnRBPenetrationDestroy = NULL;

	if ( ! pFnRBPenetrationDestroy )
		pFnRBPenetrationDestroy = (UFunction*) UObject::GObjObjects()->Data[ 59130 ];

	AUTVehicle_Hoverboard_eventRBPenetrationDestroy_Parms RBPenetrationDestroy_Parms;

	this->ProcessEvent ( pFnRBPenetrationDestroy, &RBPenetrationDestroy_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle_Hoverboard::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 59122 ];

	AUTVehicle_Hoverboard_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTVehicle_Hoverboard.RanInto
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTVehicle_Hoverboard::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 59120 ];

	AUTVehicle_Hoverboard_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle_Hoverboard::eventEncroachingOn ( class AActor* Other )
{
	static UFunction* pFnEncroachingOn = NULL;

	if ( ! pFnEncroachingOn )
		pFnEncroachingOn = (UFunction*) UObject::GObjObjects()->Data[ 59117 ];

	AUTVehicle_Hoverboard_eventEncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachingOn, &EncroachingOn_Parms, NULL );

	return EncroachingOn_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.RagdollDriver
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Hoverboard::RagdollDriver ( )
{
	static UFunction* pFnRagdollDriver = NULL;

	if ( ! pFnRagdollDriver )
		pFnRagdollDriver = (UFunction*) UObject::GObjObjects()->Data[ 59115 ];

	AUTVehicle_Hoverboard_execRagdollDriver_Parms RagdollDriver_Parms;

	this->ProcessEvent ( pFnRagdollDriver, &RagdollDriver_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DisableVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Hoverboard::DisableVehicle ( )
{
	static UFunction* pFnDisableVehicle = NULL;

	if ( ! pFnDisableVehicle )
		pFnDisableVehicle = (UFunction*) UObject::GObjObjects()->Data[ 59113 ];

	AUTVehicle_Hoverboard_execDisableVehicle_Parms DisableVehicle_Parms;

	this->ProcessEvent ( pFnDisableVehicle, &DisableVehicle_Parms, NULL );

	return DisableVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.ReplicatedEvent
// [0x00020102] 
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTVehicle_Hoverboard::ReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 59111 ];

	AUTVehicle_Hoverboard_execReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.SetOnlyControllableByTilt
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void AUTVehicle_Hoverboard::SetOnlyControllableByTilt ( unsigned long bActive )
{
	static UFunction* pFnSetOnlyControllableByTilt = NULL;

	if ( ! pFnSetOnlyControllableByTilt )
		pFnSetOnlyControllableByTilt = (UFunction*) UObject::GObjObjects()->Data[ 59108 ];

	AUTVehicle_Hoverboard_execSetOnlyControllableByTilt_Parms SetOnlyControllableByTilt_Parms;
	SetOnlyControllableByTilt_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetOnlyControllableByTilt, &SetOnlyControllableByTilt_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Hoverboard::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 59107 ];

	AUTVehicle_Hoverboard_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DriverLeft
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Hoverboard::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 59106 ];

	AUTVehicle_Hoverboard_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool AUTVehicle_Hoverboard::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 59102 ];

	AUTVehicle_Hoverboard_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.IncomingMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void AUTVehicle_Hoverboard::IncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 59099 ];

	AUTVehicle_Hoverboard_execIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  InDoubleClickMove              ( CPF_Parm )

bool AUTVehicle_Hoverboard::Dodge ( unsigned char InDoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 59096 ];

	AUTVehicle_Hoverboard_execDodge_Parms Dodge_Parms;
	Dodge_Parms.InDoubleClickMove = InDoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.ChooseFireMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTVehicle_Hoverboard::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 59094 ];

	AUTVehicle_Hoverboard_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.GetChargePower
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle_Hoverboard::GetChargePower ( )
{
	static UFunction* pFnGetChargePower = NULL;

	if ( ! pFnGetChargePower )
		pFnGetChargePower = (UFunction*) UObject::GObjObjects()->Data[ 59092 ];

	AUTVehicle_Hoverboard_execGetChargePower_Parms GetChargePower_Parms;

	this->ProcessEvent ( pFnGetChargePower, &GetChargePower_Parms, NULL );

	return GetChargePower_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.NotifyDriverTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void AUTVehicle_Hoverboard::NotifyDriverTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyDriverTakeHit = NULL;

	if ( ! pFnNotifyDriverTakeHit )
		pFnNotifyDriverTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 59085 ];

	AUTVehicle_Hoverboard_execNotifyDriverTakeHit_Parms NotifyDriverTakeHit_Parms;
	NotifyDriverTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyDriverTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyDriverTakeHit_Parms.Damage = Damage;
	NotifyDriverTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyDriverTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyDriverTakeHit, &NotifyDriverTakeHit_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DriverRadiusDamage
// [0x00024000] 
// Parameters infos:
// float                          DamageAmount                   ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExp               ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle_Hoverboard::DriverRadiusDamage ( float DamageAmount, float DamageRadius, class AController* EventInstigator, class UClass* DamageType, float Momentum, struct FVector HitLocation, class AActor* DamageCauser, float DamageFalloffExp )
{
	static UFunction* pFnDriverRadiusDamage = NULL;

	if ( ! pFnDriverRadiusDamage )
		pFnDriverRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 59076 ];

	AUTVehicle_Hoverboard_execDriverRadiusDamage_Parms DriverRadiusDamage_Parms;
	DriverRadiusDamage_Parms.DamageAmount = DamageAmount;
	DriverRadiusDamage_Parms.DamageRadius = DamageRadius;
	DriverRadiusDamage_Parms.EventInstigator = EventInstigator;
	DriverRadiusDamage_Parms.DamageType = DamageType;
	DriverRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &DriverRadiusDamage_Parms.HitLocation, &HitLocation, 0xC );
	DriverRadiusDamage_Parms.DamageCauser = DamageCauser;
	DriverRadiusDamage_Parms.DamageFalloffExp = DamageFalloffExp;

	this->ProcessEvent ( pFnDriverRadiusDamage, &DriverRadiusDamage_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool AUTVehicle_Hoverboard::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 59071 ];

	AUTVehicle_Hoverboard_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle_Hoverboard::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 59063 ];

	AUTVehicle_Hoverboard_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.OnHoverboardSpinJump
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_HoverboardSpinJump* Action                         ( CPF_Parm )

void AUTVehicle_Hoverboard::OnHoverboardSpinJump ( class UUTSeqAct_HoverboardSpinJump* Action )
{
	static UFunction* pFnOnHoverboardSpinJump = NULL;

	if ( ! pFnOnHoverboardSpinJump )
		pFnOnHoverboardSpinJump = (UFunction*) UObject::GObjObjects()->Data[ 59061 ];

	AUTVehicle_Hoverboard_execOnHoverboardSpinJump_Parms OnHoverboardSpinJump_Parms;
	OnHoverboardSpinJump_Parms.Action = Action;

	this->ProcessEvent ( pFnOnHoverboardSpinJump, &OnHoverboardSpinJump_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ClientForceSpinWarmup
// [0x010201C2] 
// Parameters infos:

void AUTVehicle_Hoverboard::ClientForceSpinWarmup ( )
{
	static UFunction* pFnClientForceSpinWarmup = NULL;

	if ( ! pFnClientForceSpinWarmup )
		pFnClientForceSpinWarmup = (UFunction*) UObject::GObjObjects()->Data[ 59060 ];

	AUTVehicle_Hoverboard_execClientForceSpinWarmup_Parms ClientForceSpinWarmup_Parms;

	this->ProcessEvent ( pFnClientForceSpinWarmup, &ClientForceSpinWarmup_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ServerSpin
// [0x002200C0] 
// Parameters infos:
// float                          Direction                      ( CPF_Parm )

void AUTVehicle_Hoverboard::ServerSpin ( float Direction )
{
	static UFunction* pFnServerSpin = NULL;

	if ( ! pFnServerSpin )
		pFnServerSpin = (UFunction*) UObject::GObjObjects()->Data[ 59058 ];

	AUTVehicle_Hoverboard_execServerSpin_Parms ServerSpin_Parms;
	ServerSpin_Parms.Direction = Direction;

	this->ProcessEvent ( pFnServerSpin, &ServerSpin_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ForceSpinJump
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Hoverboard::ForceSpinJump ( )
{
	static UFunction* pFnForceSpinJump = NULL;

	if ( ! pFnForceSpinJump )
		pFnForceSpinJump = (UFunction*) UObject::GObjObjects()->Data[ 59057 ];

	AUTVehicle_Hoverboard_execForceSpinJump_Parms ForceSpinJump_Parms;

	this->ProcessEvent ( pFnForceSpinJump, &ForceSpinJump_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void AUTVehicle_Hoverboard::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 59053 ];

	AUTVehicle_Hoverboard_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.BoardJumpEffect
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventBoardJumpEffect ( )
{
	static UFunction* pFnBoardJumpEffect = NULL;

	if ( ! pFnBoardJumpEffect )
		pFnBoardJumpEffect = (UFunction*) UObject::GObjObjects()->Data[ 59052 ];

	AUTVehicle_Hoverboard_eventBoardJumpEffect_Parms BoardJumpEffect_Parms;

	this->ProcessEvent ( pFnBoardJumpEffect, &BoardJumpEffect_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ServerChangeSeat
// [0x002200C2] 
// Parameters infos:
// int                            RequestedSeat                  ( CPF_Parm )

void AUTVehicle_Hoverboard::ServerChangeSeat ( int RequestedSeat )
{
	static UFunction* pFnServerChangeSeat = NULL;

	if ( ! pFnServerChangeSeat )
		pFnServerChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 59050 ];

	AUTVehicle_Hoverboard_execServerChangeSeat_Parms ServerChangeSeat_Parms;
	ServerChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnServerChangeSeat, &ServerChangeSeat_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTVehicle_Hoverboard::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 59047 ];

	AUTVehicle_Hoverboard_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTVehicle_Hoverboard::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 59042 ];

	AUTVehicle_Hoverboard_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.InitPhysicsAnimPawn
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Hoverboard::InitPhysicsAnimPawn ( )
{
	static UFunction* pFnInitPhysicsAnimPawn = NULL;

	if ( ! pFnInitPhysicsAnimPawn )
		pFnInitPhysicsAnimPawn = (UFunction*) UObject::GObjObjects()->Data[ 59040 ];

	AUTVehicle_Hoverboard_execInitPhysicsAnimPawn_Parms InitPhysicsAnimPawn_Parms;

	this->ProcessEvent ( pFnInitPhysicsAnimPawn, &InitPhysicsAnimPawn_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.OnDriverPhysicsAssetChanged
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )

void AUTVehicle_Hoverboard::OnDriverPhysicsAssetChanged ( class AUTPawn* UTP )
{
	static UFunction* pFnOnDriverPhysicsAssetChanged = NULL;

	if ( ! pFnOnDriverPhysicsAssetChanged )
		pFnOnDriverPhysicsAssetChanged = (UFunction*) UObject::GObjObjects()->Data[ 59038 ];

	AUTVehicle_Hoverboard_execOnDriverPhysicsAssetChanged_Parms OnDriverPhysicsAssetChanged_Parms;
	OnDriverPhysicsAssetChanged_Parms.UTP = UTP;

	this->ProcessEvent ( pFnOnDriverPhysicsAssetChanged, &OnDriverPhysicsAssetChanged_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.IsHumanDriver
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicle_Hoverboard*   HB                             ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Hoverboard::IsHumanDriver ( class AUTVehicle_Hoverboard* HB, class APawn* P )
{
	static UFunction* pFnIsHumanDriver = NULL;

	if ( ! pFnIsHumanDriver )
		pFnIsHumanDriver = (UFunction*) UObject::GObjObjects()->Data[ 59034 ];

	AUTVehicle_Hoverboard_execIsHumanDriver_Parms IsHumanDriver_Parms;
	IsHumanDriver_Parms.HB = HB;
	IsHumanDriver_Parms.P = P;

	this->ProcessEvent ( pFnIsHumanDriver, &IsHumanDriver_Parms, NULL );

	return IsHumanDriver_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.TestResetPhys
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void AUTVehicle_Hoverboard::TestResetPhys ( )
{
	static UFunction* pFnTestResetPhys = NULL;

	if ( ! pFnTestResetPhys )
		pFnTestResetPhys = (UFunction*) UObject::GObjObjects()->Data[ 59033 ];

	AUTVehicle_Hoverboard_execTestResetPhys_Parms TestResetPhys_Parms;

	this->ProcessEvent ( pFnTestResetPhys, &TestResetPhys_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.HandDamp
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinDamp                        ( CPF_Parm )

void AUTVehicle_Hoverboard::HandDamp ( float LinDamp )
{
	static UFunction* pFnHandDamp = NULL;

	if ( ! pFnHandDamp )
		pFnHandDamp = (UFunction*) UObject::GObjObjects()->Data[ 59030 ];

	AUTVehicle_Hoverboard_execHandDamp_Parms HandDamp_Parms;
	HandDamp_Parms.LinDamp = LinDamp;

	this->ProcessEvent ( pFnHandDamp, &HandDamp_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.HandSpring
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinSpring                      ( CPF_Parm )

void AUTVehicle_Hoverboard::HandSpring ( float LinSpring )
{
	static UFunction* pFnHandSpring = NULL;

	if ( ! pFnHandSpring )
		pFnHandSpring = (UFunction*) UObject::GObjObjects()->Data[ 59027 ];

	AUTVehicle_Hoverboard_execHandSpring_Parms HandSpring_Parms;
	HandSpring_Parms.LinSpring = LinSpring;

	this->ProcessEvent ( pFnHandSpring, &HandSpring_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.BackDamp
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinDamp                        ( CPF_Parm )

void AUTVehicle_Hoverboard::BackDamp ( float LinDamp )
{
	static UFunction* pFnBackDamp = NULL;

	if ( ! pFnBackDamp )
		pFnBackDamp = (UFunction*) UObject::GObjObjects()->Data[ 59024 ];

	AUTVehicle_Hoverboard_execBackDamp_Parms BackDamp_Parms;
	BackDamp_Parms.LinDamp = LinDamp;

	this->ProcessEvent ( pFnBackDamp, &BackDamp_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.BackSpring
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          LinSpring                      ( CPF_Parm )

void AUTVehicle_Hoverboard::BackSpring ( float LinSpring )
{
	static UFunction* pFnBackSpring = NULL;

	if ( ! pFnBackSpring )
		pFnBackSpring = (UFunction*) UObject::GObjObjects()->Data[ 59021 ];

	AUTVehicle_Hoverboard_execBackSpring_Parms BackSpring_Parms;
	BackSpring_Parms.LinSpring = LinSpring;

	this->ProcessEvent ( pFnBackSpring, &BackSpring_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.SetHoverboardRiderPhysics
// [0x00820102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )

void AUTVehicle_Hoverboard::SetHoverboardRiderPhysics ( class AUTPawn* UTP )
{
	static UFunction* pFnSetHoverboardRiderPhysics = NULL;

	if ( ! pFnSetHoverboardRiderPhysics )
		pFnSetHoverboardRiderPhysics = (UFunction*) UObject::GObjObjects()->Data[ 59012 ];

	AUTVehicle_Hoverboard_execSetHoverboardRiderPhysics_Parms SetHoverboardRiderPhysics_Parms;
	SetHoverboardRiderPhysics_Parms.UTP = UTP;

	this->ProcessEvent ( pFnSetHoverboardRiderPhysics, &SetHoverboardRiderPhysics_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTVehicle_Hoverboard::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 59006 ];

	AUTVehicle_Hoverboard_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTVehicle_Hoverboard.SetFlagAttachToBody
// [0x00022102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// unsigned long                  bAttached                      ( CPF_Parm )

void AUTVehicle_Hoverboard::SetFlagAttachToBody ( class AUTPawn* UTP, unsigned long bAttached )
{
	static UFunction* pFnSetFlagAttachToBody = NULL;

	if ( ! pFnSetFlagAttachToBody )
		pFnSetFlagAttachToBody = (UFunction*) UObject::GObjObjects()->Data[ 59001 ];

	AUTVehicle_Hoverboard_execSetFlagAttachToBody_Parms SetFlagAttachToBody_Parms;
	SetFlagAttachToBody_Parms.UTP = UTP;
	SetFlagAttachToBody_Parms.bAttached = bAttached;

	this->ProcessEvent ( pFnSetFlagAttachToBody, &SetFlagAttachToBody_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Hoverboard::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 58998 ];

	AUTVehicle_Hoverboard_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTVehicle_Hoverboard::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 58995 ];

	AUTVehicle_Hoverboard_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void AUTVehicle_Hoverboard::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 58979 ];

	AUTVehicle_Hoverboard_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function UTGame.UTVehicle_Hoverboard.GetCameraStart
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle_Hoverboard::GetCameraStart ( int SeatIndex )
{
	static UFunction* pFnGetCameraStart = NULL;

	if ( ! pFnGetCameraStart )
		pFnGetCameraStart = (UFunction*) UObject::GObjObjects()->Data[ 58974 ];

	AUTVehicle_Hoverboard_execGetCameraStart_Parms GetCameraStart_Parms;
	GetCameraStart_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraStart, &GetCameraStart_Parms, NULL );

	return GetCameraStart_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Hoverboard::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 58968 ];

	AUTVehicle_Hoverboard_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.AttachHoverboardEffects
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Hoverboard::AttachHoverboardEffects ( )
{
	static UFunction* pFnAttachHoverboardEffects = NULL;

	if ( ! pFnAttachHoverboardEffects )
		pFnAttachHoverboardEffects = (UFunction*) UObject::GObjObjects()->Data[ 58967 ];

	AUTVehicle_Hoverboard_execAttachHoverboardEffects_Parms AttachHoverboardEffects_Parms;

	this->ProcessEvent ( pFnAttachHoverboardEffects, &AttachHoverboardEffects_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.InitializeEffects
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Hoverboard::InitializeEffects ( )
{
	static UFunction* pFnInitializeEffects = NULL;

	if ( ! pFnInitializeEffects )
		pFnInitializeEffects = (UFunction*) UObject::GObjObjects()->Data[ 58964 ];

	AUTVehicle_Hoverboard_execInitializeEffects_Parms InitializeEffects_Parms;

	this->ProcessEvent ( pFnInitializeEffects, &InitializeEffects_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.DriverDied
// [0x00020002] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTVehicle_Hoverboard::DriverDied ( class UClass* DamageType )
{
	static UFunction* pFnDriverDied = NULL;

	if ( ! pFnDriverDied )
		pFnDriverDied = (UFunction*) UObject::GObjObjects()->Data[ 58962 ];

	AUTVehicle_Hoverboard_execDriverDied_Parms DriverDied_Parms;
	DriverDied_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDriverDied, &DriverDied_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.WeaponRotationChanged
// [0x00020102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Hoverboard::WeaponRotationChanged ( int SeatIndex )
{
	static UFunction* pFnWeaponRotationChanged = NULL;

	if ( ! pFnWeaponRotationChanged )
		pFnWeaponRotationChanged = (UFunction*) UObject::GObjObjects()->Data[ 58960 ];

	AUTVehicle_Hoverboard_execWeaponRotationChanged_Parms WeaponRotationChanged_Parms;
	WeaponRotationChanged_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnWeaponRotationChanged, &WeaponRotationChanged_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.Tick
// [0x00820102] 
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void AUTVehicle_Hoverboard::Tick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58932 ];

	AUTVehicle_Hoverboard_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.UpdateHoverboardDustEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DustHeight                     ( CPF_Parm )

void AUTVehicle_Hoverboard::eventUpdateHoverboardDustEffect ( float DustHeight )
{
	static UFunction* pFnUpdateHoverboardDustEffect = NULL;

	if ( ! pFnUpdateHoverboardDustEffect )
		pFnUpdateHoverboardDustEffect = (UFunction*) UObject::GObjObjects()->Data[ 58930 ];

	AUTVehicle_Hoverboard_eventUpdateHoverboardDustEffect_Parms UpdateHoverboardDustEffect_Parms;
	UpdateHoverboardDustEffect_Parms.DustHeight = DustHeight;

	this->ProcessEvent ( pFnUpdateHoverboardDustEffect, &UpdateHoverboardDustEffect_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.ServerRequestDodge
// [0x00A20042] 
// Parameters infos:
// unsigned long                  bDodgeLeft                     ( CPF_Parm )

void AUTVehicle_Hoverboard::ServerRequestDodge ( unsigned long bDodgeLeft )
{
	static UFunction* pFnServerRequestDodge = NULL;

	if ( ! pFnServerRequestDodge )
		pFnServerRequestDodge = (UFunction*) UObject::GObjObjects()->Data[ 58925 ];

	AUTVehicle_Hoverboard_execServerRequestDodge_Parms ServerRequestDodge_Parms;
	ServerRequestDodge_Parms.bDodgeLeft = bDodgeLeft;

	this->ProcessEvent ( pFnServerRequestDodge, &ServerRequestDodge_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.RequestDodge
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Hoverboard::eventRequestDodge ( )
{
	static UFunction* pFnRequestDodge = NULL;

	if ( ! pFnRequestDodge )
		pFnRequestDodge = (UFunction*) UObject::GObjObjects()->Data[ 58924 ];

	AUTVehicle_Hoverboard_eventRequestDodge_Parms RequestDodge_Parms;

	this->ProcessEvent ( pFnRequestDodge, &RequestDodge_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.KickOutBot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Hoverboard::KickOutBot ( )
{
	static UFunction* pFnKickOutBot = NULL;

	if ( ! pFnKickOutBot )
		pFnKickOutBot = (UFunction*) UObject::GObjObjects()->Data[ 58922 ];

	AUTVehicle_Hoverboard_execKickOutBot_Parms KickOutBot_Parms;

	this->ProcessEvent ( pFnKickOutBot, &KickOutBot_Parms, NULL );

	return KickOutBot_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.ShouldShowUseable
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )

bool AUTVehicle_Hoverboard::ShouldShowUseable ( class APlayerController* PC, float Dist )
{
	static UFunction* pFnShouldShowUseable = NULL;

	if ( ! pFnShouldShowUseable )
		pFnShouldShowUseable = (UFunction*) UObject::GObjObjects()->Data[ 58918 ];

	AUTVehicle_Hoverboard_execShouldShowUseable_Parms ShouldShowUseable_Parms;
	ShouldShowUseable_Parms.PC = PC;
	ShouldShowUseable_Parms.Dist = Dist;

	this->ProcessEvent ( pFnShouldShowUseable, &ShouldShowUseable_Parms, NULL );

	return ShouldShowUseable_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.AnySeatAvailable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Hoverboard::AnySeatAvailable ( )
{
	static UFunction* pFnAnySeatAvailable = NULL;

	if ( ! pFnAnySeatAvailable )
		pFnAnySeatAvailable = (UFunction*) UObject::GObjObjects()->Data[ 58916 ];

	AUTVehicle_Hoverboard_execAnySeatAvailable_Parms AnySeatAvailable_Parms;

	this->ProcessEvent ( pFnAnySeatAvailable, &AnySeatAvailable_Parms, NULL );

	return AnySeatAvailable_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.GetCameraFocus
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle_Hoverboard::GetCameraFocus ( int SeatIndex )
{
	static UFunction* pFnGetCameraFocus = NULL;

	if ( ! pFnGetCameraFocus )
		pFnGetCameraFocus = (UFunction*) UObject::GObjObjects()->Data[ 58913 ];

	AUTVehicle_Hoverboard_execGetCameraFocus_Parms GetCameraFocus_Parms;
	GetCameraFocus_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraFocus, &GetCameraFocus_Parms, NULL );

	return GetCameraFocus_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.DisplayHud
// [0x00024100] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector2D               HudPOS                         ( CPF_Parm )
// int                            SeatIndex                      ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle_Hoverboard::DisplayHud ( class AUTHUD* HUD, class UCanvas* Canvas, struct FVector2D HudPOS, int SeatIndex )
{
	static UFunction* pFnDisplayHud = NULL;

	if ( ! pFnDisplayHud )
		pFnDisplayHud = (UFunction*) UObject::GObjObjects()->Data[ 58908 ];

	AUTVehicle_Hoverboard_execDisplayHud_Parms DisplayHud_Parms;
	DisplayHud_Parms.HUD = HUD;
	DisplayHud_Parms.Canvas = Canvas;
	memcpy ( &DisplayHud_Parms.HudPOS, &HudPOS, 0x8 );
	DisplayHud_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnDisplayHud, &DisplayHud_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.GetDisplayedHealth
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle_Hoverboard::GetDisplayedHealth ( )
{
	static UFunction* pFnGetDisplayedHealth = NULL;

	if ( ! pFnGetDisplayedHealth )
		pFnGetDisplayedHealth = (UFunction*) UObject::GObjObjects()->Data[ 58906 ];

	AUTVehicle_Hoverboard_execGetDisplayedHealth_Parms GetDisplayedHealth_Parms;

	this->ProcessEvent ( pFnGetDisplayedHealth, &GetDisplayedHealth_Parms, NULL );

	return GetDisplayedHealth_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.PlayHorn
// [0x00020000] 
// Parameters infos:

void AUTVehicle_Hoverboard::PlayHorn ( )
{
	static UFunction* pFnPlayHorn = NULL;

	if ( ! pFnPlayHorn )
		pFnPlayHorn = (UFunction*) UObject::GObjObjects()->Data[ 58905 ];

	AUTVehicle_Hoverboard_execPlayHorn_Parms PlayHorn_Parms;

	this->ProcessEvent ( pFnPlayHorn, &PlayHorn_Parms, NULL );
};

// Function UTGame.UTVehicle_Hoverboard.CoversScreenSpace
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ScreenLoc                      ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )

bool AUTVehicle_Hoverboard::CoversScreenSpace ( struct FVector ScreenLoc, class UCanvas* Canvas )
{
	static UFunction* pFnCoversScreenSpace = NULL;

	if ( ! pFnCoversScreenSpace )
		pFnCoversScreenSpace = (UFunction*) UObject::GObjObjects()->Data[ 47873 ];

	AUTVehicle_Hoverboard_execCoversScreenSpace_Parms CoversScreenSpace_Parms;
	memcpy ( &CoversScreenSpace_Parms.ScreenLoc, &ScreenLoc, 0xC );
	CoversScreenSpace_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnCoversScreenSpace, &CoversScreenSpace_Parms, NULL );

	return CoversScreenSpace_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Hoverboard.FindGoodEndView
// [0x00420102] 
// Parameters infos:
// class APlayerController*       InPC                           ( CPF_Parm )
// struct FRotator                GoodRotation                   ( CPF_Parm | CPF_OutParm )

void AUTVehicle_Hoverboard::FindGoodEndView ( class APlayerController* InPC, struct FRotator* GoodRotation )
{
	static UFunction* pFnFindGoodEndView = NULL;

	if ( ! pFnFindGoodEndView )
		pFnFindGoodEndView = (UFunction*) UObject::GObjObjects()->Data[ 58900 ];

	AUTVehicle_Hoverboard_execFindGoodEndView_Parms FindGoodEndView_Parms;
	FindGoodEndView_Parms.InPC = InPC;

	this->ProcessEvent ( pFnFindGoodEndView, &FindGoodEndView_Parms, NULL );

	if ( GoodRotation )
		memcpy ( GoodRotation, &FindGoodEndView_Parms.GoodRotation, 0xC );
};

// Function UTGame.UTVehicle_Hoverboard.PostInitRigidBody
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     PrimComp                       ( CPF_Parm | CPF_EditInline )

void AUTVehicle_Hoverboard::eventPostInitRigidBody ( class UPrimitiveComponent* PrimComp )
{
	static UFunction* pFnPostInitRigidBody = NULL;

	if ( ! pFnPostInitRigidBody )
		pFnPostInitRigidBody = (UFunction*) UObject::GObjObjects()->Data[ 58897 ];

	AUTVehicle_Hoverboard_eventPostInitRigidBody_Parms PostInitRigidBody_Parms;
	PostInitRigidBody_Parms.PrimComp = PrimComp;

	this->ProcessEvent ( pFnPostInitRigidBody, &PostInitRigidBody_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.BoostPower
// [0x00020102] 
// Parameters infos:

void AUTWeap_LinkGun::BoostPower ( )
{
	static UFunction* pFnBoostPower = NULL;

	if ( ! pFnBoostPower )
		pFnBoostPower = (UFunction*) UObject::GObjObjects()->Data[ 60270 ];

	AUTWeap_LinkGun_execBoostPower_Parms BoostPower_Parms;

	this->ProcessEvent ( pFnBoostPower, &BoostPower_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool AUTWeap_LinkGun::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 60266 ];

	AUTWeap_LinkGun_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.SuggestDefenseStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeap_LinkGun::SuggestDefenseStyle ( )
{
	static UFunction* pFnSuggestDefenseStyle = NULL;

	if ( ! pFnSuggestDefenseStyle )
		pFnSuggestDefenseStyle = (UFunction*) UObject::GObjObjects()->Data[ 60264 ];

	AUTWeap_LinkGun_execSuggestDefenseStyle_Parms SuggestDefenseStyle_Parms;

	this->ProcessEvent ( pFnSuggestDefenseStyle, &SuggestDefenseStyle_Parms, NULL );

	return SuggestDefenseStyle_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.SuggestAttackStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeap_LinkGun::SuggestAttackStyle ( )
{
	static UFunction* pFnSuggestAttackStyle = NULL;

	if ( ! pFnSuggestAttackStyle )
		pFnSuggestAttackStyle = (UFunction*) UObject::GObjObjects()->Data[ 60262 ];

	AUTWeap_LinkGun_execSuggestAttackStyle_Parms SuggestAttackStyle_Parms;

	this->ProcessEvent ( pFnSuggestAttackStyle, &SuggestAttackStyle_Parms, NULL );

	return SuggestAttackStyle_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.GetOptimalRangeFor
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

float AUTWeap_LinkGun::GetOptimalRangeFor ( class AActor* Target )
{
	static UFunction* pFnGetOptimalRangeFor = NULL;

	if ( ! pFnGetOptimalRangeFor )
		pFnGetOptimalRangeFor = (UFunction*) UObject::GObjObjects()->Data[ 60259 ];

	AUTWeap_LinkGun_execGetOptimalRangeFor_Parms GetOptimalRangeFor_Parms;
	GetOptimalRangeFor_Parms.Target = Target;

	this->ProcessEvent ( pFnGetOptimalRangeFor, &GetOptimalRangeFor_Parms, NULL );

	return GetOptimalRangeFor_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.CanHeal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTWeap_LinkGun::CanHeal ( class AActor* Other )
{
	static UFunction* pFnCanHeal = NULL;

	if ( ! pFnCanHeal )
		pFnCanHeal = (UFunction*) UObject::GObjObjects()->Data[ 60256 ];

	AUTWeap_LinkGun_execCanHeal_Parms CanHeal_Parms;
	CanHeal_Parms.Other = Other;

	this->ProcessEvent ( pFnCanHeal, &CanHeal_Parms, NULL );

	return CanHeal_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTWeap_LinkGun::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 60250 ];

	AUTWeap_LinkGun_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.FocusOnLeader
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLeaderFiring                  ( CPF_Parm )

bool AUTWeap_LinkGun::FocusOnLeader ( unsigned long bLeaderFiring )
{
	static UFunction* pFnFocusOnLeader = NULL;

	if ( ! pFnFocusOnLeader )
		pFnFocusOnLeader = (UFunction*) UObject::GObjObjects()->Data[ 60240 ];

	AUTWeap_LinkGun_execFocusOnLeader_Parms FocusOnLeader_Parms;
	FocusOnLeader_Parms.bLeaderFiring = bLeaderFiring;

	this->ProcessEvent ( pFnFocusOnLeader, &FocusOnLeader_Parms, NULL );

	return FocusOnLeader_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.GetAIRating
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeap_LinkGun::GetAIRating ( )
{
	static UFunction* pFnGetAIRating = NULL;

	if ( ! pFnGetAIRating )
		pFnGetAIRating = (UFunction*) UObject::GObjObjects()->Data[ 60234 ];

	AUTWeap_LinkGun_execGetAIRating_Parms GetAIRating_Parms;

	this->ProcessEvent ( pFnGetAIRating, &GetAIRating_Parms, NULL );

	return GetAIRating_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeap_LinkGun::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60212 ];

	AUTWeap_LinkGun_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void AUTWeap_LinkGun::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 60210 ];

	AUTWeap_LinkGun_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.CalcLinkStrength
// [0x00020002] 
// Parameters infos:

void AUTWeap_LinkGun::CalcLinkStrength ( )
{
	static UFunction* pFnCalcLinkStrength = NULL;

	if ( ! pFnCalcLinkStrength )
		pFnCalcLinkStrength = (UFunction*) UObject::GObjObjects()->Data[ 60207 ];

	AUTWeap_LinkGun_execCalcLinkStrength_Parms CalcLinkStrength_Parms;

	this->ProcessEvent ( pFnCalcLinkStrength, &CalcLinkStrength_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.GetLinkedWeapons
// [0x00420002] 
// Parameters infos:
// TArray< class AUTWeap_LinkGun* > LinkedWeapons                  ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTWeap_LinkGun::GetLinkedWeapons ( TArray< class AUTWeap_LinkGun* >* LinkedWeapons )
{
	static UFunction* pFnGetLinkedWeapons = NULL;

	if ( ! pFnGetLinkedWeapons )
		pFnGetLinkedWeapons = (UFunction*) UObject::GObjObjects()->Data[ 60203 ];

	AUTWeap_LinkGun_execGetLinkedWeapons_Parms GetLinkedWeapons_Parms;

	this->ProcessEvent ( pFnGetLinkedWeapons, &GetLinkedWeapons_Parms, NULL );

	if ( LinkedWeapons )
		memcpy ( LinkedWeapons, &GetLinkedWeapons_Parms.LinkedWeapons, 0xC );
};

// Function UTGame.UTWeap_LinkGun.FindLinkedWeapons
// [0x00020002] 
// Parameters infos:

void AUTWeap_LinkGun::FindLinkedWeapons ( )
{
	static UFunction* pFnFindLinkedWeapons = NULL;

	if ( ! pFnFindLinkedWeapons )
		pFnFindLinkedWeapons = (UFunction*) UObject::GObjObjects()->Data[ 60200 ];

	AUTWeap_LinkGun_execFindLinkedWeapons_Parms FindLinkedWeapons_Parms;

	this->ProcessEvent ( pFnFindLinkedWeapons, &FindLinkedWeapons_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.UnLink
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDelayed                       ( CPF_OptionalParm | CPF_Parm )

void AUTWeap_LinkGun::UnLink ( unsigned long bDelayed )
{
	static UFunction* pFnUnLink = NULL;

	if ( ! pFnUnLink )
		pFnUnLink = (UFunction*) UObject::GObjObjects()->Data[ 60197 ];

	AUTWeap_LinkGun_execUnLink_Parms UnLink_Parms;
	UnLink_Parms.bDelayed = bDelayed;

	this->ProcessEvent ( pFnUnLink, &UnLink_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.AttemptLinkTo
// [0x00820002] 
// Parameters infos:
// class AActor*                  Who                            ( CPF_Parm )
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )

void AUTWeap_LinkGun::AttemptLinkTo ( class AActor* Who, class UPrimitiveComponent* HitComponent )
{
	static UFunction* pFnAttemptLinkTo = NULL;

	if ( ! pFnAttemptLinkTo )
		pFnAttemptLinkTo = (UFunction*) UObject::GObjObjects()->Data[ 60187 ];

	AUTWeap_LinkGun_execAttemptLinkTo_Parms AttemptLinkTo_Parms;
	AttemptLinkTo_Parms.Who = Who;
	AttemptLinkTo_Parms.HitComponent = HitComponent;

	this->ProcessEvent ( pFnAttemptLinkTo, &AttemptLinkTo_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.GetLinkedToLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTWeap_LinkGun::GetLinkedToLocation ( )
{
	static UFunction* pFnGetLinkedToLocation = NULL;

	if ( ! pFnGetLinkedToLocation )
		pFnGetLinkedToLocation = (UFunction*) UObject::GObjObjects()->Data[ 60179 ];

	AUTWeap_LinkGun_execGetLinkedToLocation_Parms GetLinkedToLocation_Parms;

	this->ProcessEvent ( pFnGetLinkedToLocation, &GetLinkedToLocation_Parms, NULL );

	return GetLinkedToLocation_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.ProcessBeamHit
// [0x00C20102] 
// Parameters infos:
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 AimDir                         ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FImpactInfo             TestImpact                     ( CPF_Parm | CPF_OutParm )

void AUTWeap_LinkGun::ProcessBeamHit ( struct FVector StartTrace, struct FVector AimDir, float DeltaTime, struct FImpactInfo* TestImpact )
{
	static UFunction* pFnProcessBeamHit = NULL;

	if ( ! pFnProcessBeamHit )
		pFnProcessBeamHit = (UFunction*) UObject::GObjObjects()->Data[ 60169 ];

	AUTWeap_LinkGun_execProcessBeamHit_Parms ProcessBeamHit_Parms;
	memcpy ( &ProcessBeamHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &ProcessBeamHit_Parms.AimDir, &AimDir, 0xC );
	ProcessBeamHit_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessBeamHit, &ProcessBeamHit_Parms, NULL );

	if ( TestImpact )
		memcpy ( TestImpact, &ProcessBeamHit_Parms.TestImpact, 0x50 );
};

// Function UTGame.UTWeap_LinkGun.RechargeAmmo
// [0x00020002] 
// Parameters infos:

void AUTWeap_LinkGun::RechargeAmmo ( )
{
	static UFunction* pFnRechargeAmmo = NULL;

	if ( ! pFnRechargeAmmo )
		pFnRechargeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60168 ];

	AUTWeap_LinkGun_execRechargeAmmo_Parms RechargeAmmo_Parms;

	this->ProcessEvent ( pFnRechargeAmmo, &RechargeAmmo_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.ConsumeBeamAmmo
// [0x00020002] 
// Parameters infos:
// float                          Amount                         ( CPF_Parm )

void AUTWeap_LinkGun::ConsumeBeamAmmo ( float Amount )
{
	static UFunction* pFnConsumeBeamAmmo = NULL;

	if ( ! pFnConsumeBeamAmmo )
		pFnConsumeBeamAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60166 ];

	AUTWeap_LinkGun_execConsumeBeamAmmo_Parms ConsumeBeamAmmo_Parms;
	ConsumeBeamAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnConsumeBeamAmmo, &ConsumeBeamAmmo_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.ConsumeAmmo
// [0x00020002] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeap_LinkGun::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60164 ];

	AUTWeap_LinkGun_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.KillEndpointEffect
// [0x00020102] 
// Parameters infos:

void AUTWeap_LinkGun::KillEndpointEffect ( )
{
	static UFunction* pFnKillEndpointEffect = NULL;

	if ( ! pFnKillEndpointEffect )
		pFnKillEndpointEffect = (UFunction*) UObject::GObjObjects()->Data[ 60163 ];

	AUTWeap_LinkGun_execKillEndpointEffect_Parms KillEndpointEffect_Parms;

	this->ProcessEvent ( pFnKillEndpointEffect, &KillEndpointEffect_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.KillBeamEmitter
// [0x00020102] 
// Parameters infos:

void AUTWeap_LinkGun::KillBeamEmitter ( )
{
	static UFunction* pFnKillBeamEmitter = NULL;

	if ( ! pFnKillBeamEmitter )
		pFnKillBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 60162 ];

	AUTWeap_LinkGun_execKillBeamEmitter_Parms KillBeamEmitter_Parms;

	this->ProcessEvent ( pFnKillBeamEmitter, &KillBeamEmitter_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.SetBeamEmitterHidden
// [0x00020102] 
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void AUTWeap_LinkGun::SetBeamEmitterHidden ( unsigned long bHide )
{
	static UFunction* pFnSetBeamEmitterHidden = NULL;

	if ( ! pFnSetBeamEmitterHidden )
		pFnSetBeamEmitterHidden = (UFunction*) UObject::GObjObjects()->Data[ 60160 ];

	AUTWeap_LinkGun_execSetBeamEmitterHidden_Parms SetBeamEmitterHidden_Parms;
	SetBeamEmitterHidden_Parms.bHide = bHide;

	this->ProcessEvent ( pFnSetBeamEmitterHidden, &SetBeamEmitterHidden_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_LinkGun::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 60159 ];

	AUTWeap_LinkGun_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.GetProjectileClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* AUTWeap_LinkGun::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 60157 ];

	AUTWeap_LinkGun_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.UpdateBeamEmitter
// [0x00820102] 
// Parameters infos:
// struct FVector                 FlashLocation                  ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void AUTWeap_LinkGun::UpdateBeamEmitter ( struct FVector FlashLocation, struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnUpdateBeamEmitter = NULL;

	if ( ! pFnUpdateBeamEmitter )
		pFnUpdateBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 60147 ];

	AUTWeap_LinkGun_execUpdateBeamEmitter_Parms UpdateBeamEmitter_Parms;
	memcpy ( &UpdateBeamEmitter_Parms.FlashLocation, &FlashLocation, 0xC );
	memcpy ( &UpdateBeamEmitter_Parms.HitNormal, &HitNormal, 0xC );
	UpdateBeamEmitter_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnUpdateBeamEmitter, &UpdateBeamEmitter_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.AttachWeaponTo
// [0x00024102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void AUTWeap_LinkGun::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 60144 ];

	AUTWeap_LinkGun_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.SetSkin
// [0x00020102] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void AUTWeap_LinkGun::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 60142 ];

	AUTWeap_LinkGun_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.DrawWeaponCrosshair
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTWeap_LinkGun::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 60132 ];

	AUTWeap_LinkGun_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function UTGame.UTWeap_LinkGun.GetTeamMuzzleFlashTemplate
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamNum                        ( CPF_Parm )

class UParticleSystem* AUTWeap_LinkGun::GetTeamMuzzleFlashTemplate ( unsigned char TeamNum )
{
	static UFunction* pFnGetTeamMuzzleFlashTemplate = NULL;

	if ( ! pFnGetTeamMuzzleFlashTemplate )
		pFnGetTeamMuzzleFlashTemplate = (UFunction*) UObject::GObjObjects()->Data[ 60129 ];

	AUTWeap_LinkGun_execGetTeamMuzzleFlashTemplate_Parms GetTeamMuzzleFlashTemplate_Parms;
	GetTeamMuzzleFlashTemplate_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetTeamMuzzleFlashTemplate, &GetTeamMuzzleFlashTemplate_Parms, NULL );

	return GetTeamMuzzleFlashTemplate_Parms.ReturnValue;
};

// Function UTGame.UTWeap_LinkGun.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AUTWeap_LinkGun::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60125 ];

	AUTWeap_LinkGun_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTBeamWeapon.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTBeamWeapon::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 50923 ];

	AUTBeamWeapon_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTBeamWeapon.UpdateBeam
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTBeamWeapon::UpdateBeam ( float DeltaTime )
{
	static UFunction* pFnUpdateBeam = NULL;

	if ( ! pFnUpdateBeam )
		pFnUpdateBeam = (UFunction*) UObject::GObjObjects()->Data[ 50889 ];

	AUTBeamWeapon_execUpdateBeam_Parms UpdateBeam_Parms;
	UpdateBeam_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateBeam, &UpdateBeam_Parms, NULL );
};

// Function UTGame.UTBeamWeapon.ProcessBeamHit
// [0x00420100] 
// Parameters infos:
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 AimDir                         ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FImpactInfo             TestImpact                     ( CPF_Parm | CPF_OutParm )

void AUTBeamWeapon::ProcessBeamHit ( struct FVector StartTrace, struct FVector AimDir, float DeltaTime, struct FImpactInfo* TestImpact )
{
	static UFunction* pFnProcessBeamHit = NULL;

	if ( ! pFnProcessBeamHit )
		pFnProcessBeamHit = (UFunction*) UObject::GObjObjects()->Data[ 50884 ];

	AUTBeamWeapon_execProcessBeamHit_Parms ProcessBeamHit_Parms;
	memcpy ( &ProcessBeamHit_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &ProcessBeamHit_Parms.AimDir, &AimDir, 0xC );
	ProcessBeamHit_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessBeamHit, &ProcessBeamHit_Parms, NULL );

	if ( TestImpact )
		memcpy ( TestImpact, &ProcessBeamHit_Parms.TestImpact, 0x50 );
};

// Function UTGame.UTBeamWeapon.UpdateBeamEmitter
// [0x00020102] 
// Parameters infos:
// struct FVector                 FlashLocation                  ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void AUTBeamWeapon::UpdateBeamEmitter ( struct FVector FlashLocation, struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnUpdateBeamEmitter = NULL;

	if ( ! pFnUpdateBeamEmitter )
		pFnUpdateBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50880 ];

	AUTBeamWeapon_execUpdateBeamEmitter_Parms UpdateBeamEmitter_Parms;
	memcpy ( &UpdateBeamEmitter_Parms.FlashLocation, &FlashLocation, 0xC );
	memcpy ( &UpdateBeamEmitter_Parms.HitNormal, &HitNormal, 0xC );
	UpdateBeamEmitter_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnUpdateBeamEmitter, &UpdateBeamEmitter_Parms, NULL );
};

// Function UTGame.UTBeamWeapon.SetBeamEmitterHidden
// [0x00020102] 
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void AUTBeamWeapon::SetBeamEmitterHidden ( unsigned long bHide )
{
	static UFunction* pFnSetBeamEmitterHidden = NULL;

	if ( ! pFnSetBeamEmitterHidden )
		pFnSetBeamEmitterHidden = (UFunction*) UObject::GObjObjects()->Data[ 50878 ];

	AUTBeamWeapon_execSetBeamEmitterHidden_Parms SetBeamEmitterHidden_Parms;
	SetBeamEmitterHidden_Parms.bHide = bHide;

	this->ProcessEvent ( pFnSetBeamEmitterHidden, &SetBeamEmitterHidden_Parms, NULL );
};

// Function UTGame.UTBeamWeapon.KillBeamEmitter
// [0x00020102] 
// Parameters infos:

void AUTBeamWeapon::KillBeamEmitter ( )
{
	static UFunction* pFnKillBeamEmitter = NULL;

	if ( ! pFnKillBeamEmitter )
		pFnKillBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50877 ];

	AUTBeamWeapon_execKillBeamEmitter_Parms KillBeamEmitter_Parms;

	this->ProcessEvent ( pFnKillBeamEmitter, &KillBeamEmitter_Parms, NULL );
};

// Function UTGame.UTBeamWeapon.AddBeamEmitter
// [0x00020102] 
// Parameters infos:

void AUTBeamWeapon::AddBeamEmitter ( )
{
	static UFunction* pFnAddBeamEmitter = NULL;

	if ( ! pFnAddBeamEmitter )
		pFnAddBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50876 ];

	AUTBeamWeapon_execAddBeamEmitter_Parms AddBeamEmitter_Parms;

	this->ProcessEvent ( pFnAddBeamEmitter, &AddBeamEmitter_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.TweenComplete
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UUTGFxTweenableMoviePlayer::TweenComplete ( int Index )
{
	static UFunction* pFnTweenComplete = NULL;

	if ( ! pFnTweenComplete )
		pFnTweenComplete = (UFunction*) UObject::GObjObjects()->Data[ 45066 ];

	UUTGFxTweenableMoviePlayer_execTweenComplete_Parms TweenComplete_Parms;
	TweenComplete_Parms.Index = Index;

	this->ProcessEvent ( pFnTweenComplete, &TweenComplete_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.PrintTweensToLog
// [0x00020002] 
// Parameters infos:

void UUTGFxTweenableMoviePlayer::PrintTweensToLog ( )
{
	static UFunction* pFnPrintTweensToLog = NULL;

	if ( ! pFnPrintTweensToLog )
		pFnPrintTweensToLog = (UFunction*) UObject::GObjObjects()->Data[ 45064 ];

	UUTGFxTweenableMoviePlayer_execPrintTweensToLog_Parms PrintTweensToLog_Parms;

	this->ProcessEvent ( pFnPrintTweensToLog, &PrintTweensToLog_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.ClearsTweensOnMovieClip
// [0x00824002] 
// Parameters infos:
// class UGFxObject*              MC                             ( CPF_Parm )
// unsigned long                  bReset                         ( CPF_OptionalParm | CPF_Parm )

void UUTGFxTweenableMoviePlayer::ClearsTweensOnMovieClip ( class UGFxObject* MC, unsigned long bReset )
{
	static UFunction* pFnClearsTweensOnMovieClip = NULL;

	if ( ! pFnClearsTweensOnMovieClip )
		pFnClearsTweensOnMovieClip = (UFunction*) UObject::GObjObjects()->Data[ 45059 ];

	UUTGFxTweenableMoviePlayer_execClearsTweensOnMovieClip_Parms ClearsTweensOnMovieClip_Parms;
	ClearsTweensOnMovieClip_Parms.MC = MC;
	ClearsTweensOnMovieClip_Parms.bReset = bReset;

	this->ProcessEvent ( pFnClearsTweensOnMovieClip, &ClearsTweensOnMovieClip_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUTGFxTweenableMoviePlayer::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 45054 ];

	UUTGFxTweenableMoviePlayer_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.ProcessTweenCallback
// [0x00020000] 
// Parameters infos:
// struct FString                 Callback                       ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              TargetMC                       ( CPF_Parm )

void UUTGFxTweenableMoviePlayer::ProcessTweenCallback ( struct FString Callback, class UGFxObject* TargetMC )
{
	static UFunction* pFnProcessTweenCallback = NULL;

	if ( ! pFnProcessTweenCallback )
		pFnProcessTweenCallback = (UFunction*) UObject::GObjObjects()->Data[ 45051 ];

	UUTGFxTweenableMoviePlayer_execProcessTweenCallback_Parms ProcessTweenCallback_Parms;
	memcpy ( &ProcessTweenCallback_Parms.Callback, &Callback, 0xC );
	ProcessTweenCallback_Parms.TargetMC = TargetMC;

	this->ProcessEvent ( pFnProcessTweenCallback, &ProcessTweenCallback_Parms, NULL );
};

// Function UTGame.UTGFxTweenableMoviePlayer.TweenTo
// [0x00824002] 
// Parameters infos:
// class UGFxObject*              MC                             ( CPF_Parm )
// float                          Duration                       ( CPF_Parm )
// struct FString                 Member                         ( CPF_Parm | CPF_NeedCtorLink )
// float                          Target                         ( CPF_Parm )
// unsigned char                  NewTweenType                   ( CPF_Parm )
// struct FString                 Callback                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUTGFxTweenableMoviePlayer::TweenTo ( class UGFxObject* MC, float Duration, struct FString Member, float Target, unsigned char NewTweenType, struct FString Callback )
{
	static UFunction* pFnTweenTo = NULL;

	if ( ! pFnTweenTo )
		pFnTweenTo = (UFunction*) UObject::GObjObjects()->Data[ 45043 ];

	UUTGFxTweenableMoviePlayer_execTweenTo_Parms TweenTo_Parms;
	TweenTo_Parms.MC = MC;
	TweenTo_Parms.Duration = Duration;
	memcpy ( &TweenTo_Parms.Member, &Member, 0xC );
	TweenTo_Parms.Target = Target;
	TweenTo_Parms.NewTweenType = NewTweenType;
	memcpy ( &TweenTo_Parms.Callback, &Callback, 0xC );

	this->ProcessEvent ( pFnTweenTo, &TweenTo_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.CreateItemData
// [0x00820002] 
// Parameters infos:

void UGFxProjectedUI::CreateItemData ( )
{
	static UFunction* pFnCreateItemData = NULL;

	if ( ! pFnCreateItemData )
		pFnCreateItemData = (UFunction*) UObject::GObjObjects()->Data[ 45200 ];

	UGFxProjectedUI_execCreateItemData_Parms CreateItemData_Parms;

	this->ProcessEvent ( pFnCreateItemData, &CreateItemData_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.UpdatePos
// [0x00820002] 
// Parameters infos:

void UGFxProjectedUI::UpdatePos ( )
{
	static UFunction* pFnUpdatePos = NULL;

	if ( ! pFnUpdatePos )
		pFnUpdatePos = (UFunction*) UObject::GObjObjects()->Data[ 45193 ];

	UGFxProjectedUI_execUpdatePos_Parms UpdatePos_Parms;

	this->ProcessEvent ( pFnUpdatePos, &UpdatePos_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.FloatSelectionDown
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ButtonIconMC                   ( CPF_Parm )

void UGFxProjectedUI::FloatSelectionDown ( class UGFxObject* ButtonIconMC )
{
	static UFunction* pFnFloatSelectionDown = NULL;

	if ( ! pFnFloatSelectionDown )
		pFnFloatSelectionDown = (UFunction*) UObject::GObjObjects()->Data[ 45191 ];

	UGFxProjectedUI_execFloatSelectionDown_Parms FloatSelectionDown_Parms;
	FloatSelectionDown_Parms.ButtonIconMC = ButtonIconMC;

	this->ProcessEvent ( pFnFloatSelectionDown, &FloatSelectionDown_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.FloatSelectionUp
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ButtonIconMC                   ( CPF_Parm )

void UGFxProjectedUI::FloatSelectionUp ( class UGFxObject* ButtonIconMC )
{
	static UFunction* pFnFloatSelectionUp = NULL;

	if ( ! pFnFloatSelectionUp )
		pFnFloatSelectionUp = (UFunction*) UObject::GObjObjects()->Data[ 45189 ];

	UGFxProjectedUI_execFloatSelectionUp_Parms FloatSelectionUp_Parms;
	FloatSelectionUp_Parms.ButtonIconMC = ButtonIconMC;

	this->ProcessEvent ( pFnFloatSelectionUp, &FloatSelectionUp_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.TweenTurbines
// [0x00020002] 
// Parameters infos:
// unsigned long                  Toggle                         ( CPF_Parm )

void UGFxProjectedUI::TweenTurbines ( unsigned long Toggle )
{
	static UFunction* pFnTweenTurbines = NULL;

	if ( ! pFnTweenTurbines )
		pFnTweenTurbines = (UFunction*) UObject::GObjObjects()->Data[ 45187 ];

	UGFxProjectedUI_execTweenTurbines_Parms TweenTurbines_Parms;
	TweenTurbines_Parms.Toggle = Toggle;

	this->ProcessEvent ( pFnTweenTurbines, &TweenTurbines_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.ProcessTweenCallback
// [0x00020002] 
// Parameters infos:
// struct FString                 Callback                       ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              TargetMC                       ( CPF_Parm )

void UGFxProjectedUI::ProcessTweenCallback ( struct FString Callback, class UGFxObject* TargetMC )
{
	static UFunction* pFnProcessTweenCallback = NULL;

	if ( ! pFnProcessTweenCallback )
		pFnProcessTweenCallback = (UFunction*) UObject::GObjObjects()->Data[ 45184 ];

	UGFxProjectedUI_execProcessTweenCallback_Parms ProcessTweenCallback_Parms;
	memcpy ( &ProcessTweenCallback_Parms.Callback, &Callback, 0xC );
	ProcessTweenCallback_Parms.TargetMC = TargetMC;

	this->ProcessEvent ( pFnProcessTweenCallback, &ProcessTweenCallback_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.UpdateEquippedWeapon
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::UpdateEquippedWeapon ( )
{
	static UFunction* pFnUpdateEquippedWeapon = NULL;

	if ( ! pFnUpdateEquippedWeapon )
		pFnUpdateEquippedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45181 ];

	UGFxProjectedUI_execUpdateEquippedWeapon_Parms UpdateEquippedWeapon_Parms;

	this->ProcessEvent ( pFnUpdateEquippedWeapon, &UpdateEquippedWeapon_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.FakeUpdateEquippedWeapon
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UGFxProjectedUI::FakeUpdateEquippedWeapon ( int Index )
{
	static UFunction* pFnFakeUpdateEquippedWeapon = NULL;

	if ( ! pFnFakeUpdateEquippedWeapon )
		pFnFakeUpdateEquippedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45178 ];

	UGFxProjectedUI_execFakeUpdateEquippedWeapon_Parms FakeUpdateEquippedWeapon_Parms;
	FakeUpdateEquippedWeapon_Parms.Index = Index;

	this->ProcessEvent ( pFnFakeUpdateEquippedWeapon, &FakeUpdateEquippedWeapon_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.PopulateArsenal
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::PopulateArsenal ( )
{
	static UFunction* pFnPopulateArsenal = NULL;

	if ( ! pFnPopulateArsenal )
		pFnPopulateArsenal = (UFunction*) UObject::GObjObjects()->Data[ 45176 ];

	UGFxProjectedUI_execPopulateArsenal_Parms PopulateArsenal_Parms;

	this->ProcessEvent ( pFnPopulateArsenal, &PopulateArsenal_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetInfo
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UGFxProjectedUI::SetInfo ( int Index )
{
	static UFunction* pFnSetInfo = NULL;

	if ( ! pFnSetInfo )
		pFnSetInfo = (UFunction*) UObject::GObjObjects()->Data[ 45173 ];

	UGFxProjectedUI_execSetInfo_Parms SetInfo_Parms;
	SetInfo_Parms.Index = Index;

	this->ProcessEvent ( pFnSetInfo, &SetInfo_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnClickFakeItem
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnClickFakeItem ( struct FEventData ev )
{
	static UFunction* pFnOnClickFakeItem = NULL;

	if ( ! pFnOnClickFakeItem )
		pFnOnClickFakeItem = (UFunction*) UObject::GObjObjects()->Data[ 45169 ];

	UGFxProjectedUI_execOnClickFakeItem_Parms OnClickFakeItem_Parms;
	memcpy ( &OnClickFakeItem_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnClickFakeItem, &OnClickFakeItem_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnFocusBackpackTab
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnFocusBackpackTab ( struct FEventData ev )
{
	static UFunction* pFnOnFocusBackpackTab = NULL;

	if ( ! pFnOnFocusBackpackTab )
		pFnOnFocusBackpackTab = (UFunction*) UObject::GObjObjects()->Data[ 45167 ];

	UGFxProjectedUI_execOnFocusBackpackTab_Parms OnFocusBackpackTab_Parms;
	memcpy ( &OnFocusBackpackTab_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFocusBackpackTab, &OnFocusBackpackTab_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnFocusArsenalTab
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnFocusArsenalTab ( struct FEventData ev )
{
	static UFunction* pFnOnFocusArsenalTab = NULL;

	if ( ! pFnOnFocusArsenalTab )
		pFnOnFocusArsenalTab = (UFunction*) UObject::GObjObjects()->Data[ 45165 ];

	UGFxProjectedUI_execOnFocusArsenalTab_Parms OnFocusArsenalTab_Parms;
	memcpy ( &OnFocusArsenalTab_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFocusArsenalTab, &OnFocusArsenalTab_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnFocusUpdateInfo
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnFocusUpdateInfo ( struct FEventData ev )
{
	static UFunction* pFnOnFocusUpdateInfo = NULL;

	if ( ! pFnOnFocusUpdateInfo )
		pFnOnFocusUpdateInfo = (UFunction*) UObject::GObjObjects()->Data[ 45162 ];

	UGFxProjectedUI_execOnFocusUpdateInfo_Parms OnFocusUpdateInfo_Parms;
	memcpy ( &OnFocusUpdateInfo_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFocusUpdateInfo, &OnFocusUpdateInfo_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnClickWeaponButton
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnClickWeaponButton ( struct FEventData ev )
{
	static UFunction* pFnOnClickWeaponButton = NULL;

	if ( ! pFnOnClickWeaponButton )
		pFnOnClickWeaponButton = (UFunction*) UObject::GObjObjects()->Data[ 45159 ];

	UGFxProjectedUI_execOnClickWeaponButton_Parms OnClickWeaponButton_Parms;
	memcpy ( &OnClickWeaponButton_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnClickWeaponButton, &OnClickWeaponButton_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnFocusOutSelection
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnFocusOutSelection ( struct FEventData ev )
{
	static UFunction* pFnOnFocusOutSelection = NULL;

	if ( ! pFnOnFocusOutSelection )
		pFnOnFocusOutSelection = (UFunction*) UObject::GObjObjects()->Data[ 45156 ];

	UGFxProjectedUI_execOnFocusOutSelection_Parms OnFocusOutSelection_Parms;
	memcpy ( &OnFocusOutSelection_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFocusOutSelection, &OnFocusOutSelection_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnFocusInSelection
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxProjectedUI::OnFocusInSelection ( struct FEventData ev )
{
	static UFunction* pFnOnFocusInSelection = NULL;

	if ( ! pFnOnFocusInSelection )
		pFnOnFocusInSelection = (UFunction*) UObject::GObjObjects()->Data[ 45153 ];

	UGFxProjectedUI_execOnFocusInSelection_Parms OnFocusInSelection_Parms;
	memcpy ( &OnFocusInSelection_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFocusInSelection, &OnFocusInSelection_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SwitchWeapon
// [0x00020002] 
// Parameters infos:
// unsigned char                  Index                          ( CPF_Parm )

void UGFxProjectedUI::SwitchWeapon ( unsigned char Index )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 45151 ];

	UGFxProjectedUI_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.Index = Index;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupBackpackButtons
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupBackpackButtons ( )
{
	static UFunction* pFnSetupBackpackButtons = NULL;

	if ( ! pFnSetupBackpackButtons )
		pFnSetupBackpackButtons = (UFunction*) UObject::GObjObjects()->Data[ 45149 ];

	UGFxProjectedUI_execSetupBackpackButtons_Parms SetupBackpackButtons_Parms;

	this->ProcessEvent ( pFnSetupBackpackButtons, &SetupBackpackButtons_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupArsenalButtons
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupArsenalButtons ( )
{
	static UFunction* pFnSetupArsenalButtons = NULL;

	if ( ! pFnSetupArsenalButtons )
		pFnSetupArsenalButtons = (UFunction*) UObject::GObjObjects()->Data[ 45147 ];

	UGFxProjectedUI_execSetupArsenalButtons_Parms SetupArsenalButtons_Parms;

	this->ProcessEvent ( pFnSetupArsenalButtons, &SetupArsenalButtons_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.PopulateBackpackFake
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::PopulateBackpackFake ( )
{
	static UFunction* pFnPopulateBackpackFake = NULL;

	if ( ! pFnPopulateBackpackFake )
		pFnPopulateBackpackFake = (UFunction*) UObject::GObjObjects()->Data[ 45145 ];

	UGFxProjectedUI_execPopulateBackpackFake_Parms PopulateBackpackFake_Parms;

	this->ProcessEvent ( pFnPopulateBackpackFake, &PopulateBackpackFake_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupInfo
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupInfo ( )
{
	static UFunction* pFnSetupInfo = NULL;

	if ( ! pFnSetupInfo )
		pFnSetupInfo = (UFunction*) UObject::GObjObjects()->Data[ 45144 ];

	UGFxProjectedUI_execSetupInfo_Parms SetupInfo_Parms;

	this->ProcessEvent ( pFnSetupInfo, &SetupInfo_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupBackpack
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupBackpack ( )
{
	static UFunction* pFnSetupBackpack = NULL;

	if ( ! pFnSetupBackpack )
		pFnSetupBackpack = (UFunction*) UObject::GObjObjects()->Data[ 45142 ];

	UGFxProjectedUI_execSetupBackpack_Parms SetupBackpack_Parms;

	this->ProcessEvent ( pFnSetupBackpack, &SetupBackpack_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupArsenal
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupArsenal ( )
{
	static UFunction* pFnSetupArsenal = NULL;

	if ( ! pFnSetupArsenal )
		pFnSetupArsenal = (UFunction*) UObject::GObjObjects()->Data[ 45139 ];

	UGFxProjectedUI_execSetupArsenal_Parms SetupArsenal_Parms;

	this->ProcessEvent ( pFnSetupArsenal, &SetupArsenal_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupBorder
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupBorder ( )
{
	static UFunction* pFnSetupBorder = NULL;

	if ( ! pFnSetupBorder )
		pFnSetupBorder = (UFunction*) UObject::GObjObjects()->Data[ 45138 ];

	UGFxProjectedUI_execSetupBorder_Parms SetupBorder_Parms;

	this->ProcessEvent ( pFnSetupBorder, &SetupBorder_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.SetupBG
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::SetupBG ( )
{
	static UFunction* pFnSetupBG = NULL;

	if ( ! pFnSetupBG )
		pFnSetupBG = (UFunction*) UObject::GObjObjects()->Data[ 45137 ];

	UGFxProjectedUI_execSetupBG_Parms SetupBG_Parms;

	this->ProcessEvent ( pFnSetupBG, &SetupBG_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.OnCloseAnimComplete
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::OnCloseAnimComplete ( )
{
	static UFunction* pFnOnCloseAnimComplete = NULL;

	if ( ! pFnOnCloseAnimComplete )
		pFnOnCloseAnimComplete = (UFunction*) UObject::GObjObjects()->Data[ 45136 ];

	UGFxProjectedUI_execOnCloseAnimComplete_Parms OnCloseAnimComplete_Parms;

	this->ProcessEvent ( pFnOnCloseAnimComplete, &OnCloseAnimComplete_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.StartCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::StartCloseAnimation ( )
{
	static UFunction* pFnStartCloseAnimation = NULL;

	if ( ! pFnStartCloseAnimation )
		pFnStartCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45135 ];

	UGFxProjectedUI_execStartCloseAnimation_Parms StartCloseAnimation_Parms;

	this->ProcessEvent ( pFnStartCloseAnimation, &StartCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.AddCaptureKeys
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::AddCaptureKeys ( )
{
	static UFunction* pFnAddCaptureKeys = NULL;

	if ( ! pFnAddCaptureKeys )
		pFnAddCaptureKeys = (UFunction*) UObject::GObjObjects()->Data[ 45134 ];

	UGFxProjectedUI_execAddCaptureKeys_Parms AddCaptureKeys_Parms;

	this->ProcessEvent ( pFnAddCaptureKeys, &AddCaptureKeys_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.ConfigureInventory
// [0x00020002] 
// Parameters infos:

void UGFxProjectedUI::ConfigureInventory ( )
{
	static UFunction* pFnConfigureInventory = NULL;

	if ( ! pFnConfigureInventory )
		pFnConfigureInventory = (UFunction*) UObject::GObjObjects()->Data[ 45129 ];

	UGFxProjectedUI_execConfigureInventory_Parms ConfigureInventory_Parms;

	this->ProcessEvent ( pFnConfigureInventory, &ConfigureInventory_Parms, NULL );
};

// Function UTGame.GFxProjectedUI.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxProjectedUI::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 45126 ];

	UGFxProjectedUI_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUI_InventoryButton.SetIconMC
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              iconClip                       ( CPF_Parm )

void UGFxUI_InventoryButton::SetIconMC ( class UGFxObject* iconClip )
{
	static UFunction* pFnSetIconMC = NULL;

	if ( ! pFnSetIconMC )
		pFnSetIconMC = (UFunction*) UObject::GObjObjects()->Data[ 46647 ];

	UGFxUI_InventoryButton_execSetIconMC_Parms SetIconMC_Parms;
	SetIconMC_Parms.iconClip = iconClip;

	this->ProcessEvent ( pFnSetIconMC, &SetIconMC_Parms, NULL );
};

// Function UTGame.GFxUI_InventoryButton.SetContent
// [0x00020002] 
// Parameters infos:
// struct FString                 newContent                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUI_InventoryButton::SetContent ( struct FString newContent )
{
	static UFunction* pFnSetContent = NULL;

	if ( ! pFnSetContent )
		pFnSetContent = (UFunction*) UObject::GObjObjects()->Data[ 46645 ];

	UGFxUI_InventoryButton_execSetContent_Parms SetContent_Parms;
	memcpy ( &SetContent_Parms.newContent, &newContent, 0xC );

	this->ProcessEvent ( pFnSetContent, &SetContent_Parms, NULL );
};

// Function UTGame.UTHealthPickupFactory.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTHealthPickupFactory::BotDesireability ( class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 56892 ];

	AUTHealthPickupFactory_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTHealthPickupFactory.HealAmount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Recipient                      ( CPF_Parm )

int AUTHealthPickupFactory::HealAmount ( class APawn* Recipient )
{
	static UFunction* pFnHealAmount = NULL;

	if ( ! pFnHealAmount )
		pFnHealAmount = (UFunction*) UObject::GObjObjects()->Data[ 56879 ];

	AUTHealthPickupFactory_execHealAmount_Parms HealAmount_Parms;
	HealAmount_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnHealAmount, &HealAmount_Parms, NULL );

	return HealAmount_Parms.ReturnValue;
};

// Function UTGame.UTHealthPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTHealthPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 56877 ];

	AUTHealthPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTHealthPickupFactory.UpdateHUD
// [0x00022102] 
// Parameters infos:
// class AUTHUD*                  H                              ( CPF_Parm )

void AUTHealthPickupFactory::UpdateHUD ( class AUTHUD* H )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 56875 ];

	AUTHealthPickupFactory_execUpdateHUD_Parms UpdateHUD_Parms;
	UpdateHUD_Parms.H = H;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function UTGame.UTItemPickupFactory.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTItemPickupFactory::BotDesireability ( class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 48743 ];

	AUTItemPickupFactory_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTItemPickupFactory.GetRespawnTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTItemPickupFactory::GetRespawnTime ( )
{
	static UFunction* pFnGetRespawnTime = NULL;

	if ( ! pFnGetRespawnTime )
		pFnGetRespawnTime = (UFunction*) UObject::GObjObjects()->Data[ 48741 ];

	AUTItemPickupFactory_execGetRespawnTime_Parms GetRespawnTime_Parms;

	this->ProcessEvent ( pFnGetRespawnTime, &GetRespawnTime_Parms, NULL );

	return GetRespawnTime_Parms.ReturnValue;
};

// Function UTGame.UTItemPickupFactory.SetRespawn
// [0x00020002] 
// Parameters infos:

void AUTItemPickupFactory::SetRespawn ( )
{
	static UFunction* pFnSetRespawn = NULL;

	if ( ! pFnSetRespawn )
		pFnSetRespawn = (UFunction*) UObject::GObjObjects()->Data[ 48740 ];

	AUTItemPickupFactory_execSetRespawn_Parms SetRespawn_Parms;

	this->ProcessEvent ( pFnSetRespawn, &SetRespawn_Parms, NULL );
};

// Function UTGame.UTItemPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTItemPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 48738 ];

	AUTItemPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTItemPickupFactory.GetLocalString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )

struct FString AUTItemPickupFactory::GetLocalString ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01 )
{
	static UFunction* pFnGetLocalString = NULL;

	if ( ! pFnGetLocalString )
		pFnGetLocalString = (UFunction*) UObject::GObjObjects()->Data[ 48733 ];

	AUTItemPickupFactory_execGetLocalString_Parms GetLocalString_Parms;
	GetLocalString_Parms.Switch = Switch;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	GetLocalString_Parms.RelatedPRI01 = RelatedPRI01;

	this->ProcessEvent ( pFnGetLocalString, &GetLocalString_Parms, NULL );

	return GetLocalString_Parms.ReturnValue;
};

// Function UTGame.UTItemPickupFactory.InitializePickup
// [0x00020102] 
// Parameters infos:

void AUTItemPickupFactory::InitializePickup ( )
{
	static UFunction* pFnInitializePickup = NULL;

	if ( ! pFnInitializePickup )
		pFnInitializePickup = (UFunction*) UObject::GObjObjects()->Data[ 48732 ];

	AUTItemPickupFactory_execInitializePickup_Parms InitializePickup_Parms;

	this->ProcessEvent ( pFnInitializePickup, &InitializePickup_Parms, NULL );
};

// Function UTGame.UTArmorPickupFactory.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Bot                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTArmorPickupFactory::BotDesireability ( class APawn* Bot, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 48948 ];

	AUTArmorPickupFactory_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.Bot = Bot;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTArmorPickupFactory.AddShieldStrength
// [0x00020000] 
// Parameters infos:
// class AUTPawn*                 P                              ( CPF_Parm )

void AUTArmorPickupFactory::AddShieldStrength ( class AUTPawn* P )
{
	static UFunction* pFnAddShieldStrength = NULL;

	if ( ! pFnAddShieldStrength )
		pFnAddShieldStrength = (UFunction*) UObject::GObjObjects()->Data[ 48934 ];

	AUTArmorPickupFactory_execAddShieldStrength_Parms AddShieldStrength_Parms;
	AddShieldStrength_Parms.P = P;

	this->ProcessEvent ( pFnAddShieldStrength, &AddShieldStrength_Parms, NULL );
};

// Function UTGame.UTArmorPickupFactory.CanUseShield
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPawn*                 P                              ( CPF_Parm )

int AUTArmorPickupFactory::CanUseShield ( class AUTPawn* P )
{
	static UFunction* pFnCanUseShield = NULL;

	if ( ! pFnCanUseShield )
		pFnCanUseShield = (UFunction*) UObject::GObjObjects()->Data[ 48931 ];

	AUTArmorPickupFactory_execCanUseShield_Parms CanUseShield_Parms;
	CanUseShield_Parms.P = P;

	this->ProcessEvent ( pFnCanUseShield, &CanUseShield_Parms, NULL );

	return CanUseShield_Parms.ReturnValue;
};

// Function UTGame.UTArmorPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTArmorPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 48927 ];

	AUTArmorPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTArmorPickupFactory.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTArmorPickupFactory::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 48926 ];

	AUTArmorPickupFactory_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTArmorPickupFactory.UpdateHUD
// [0x00022102] 
// Parameters infos:
// class AUTHUD*                  H                              ( CPF_Parm )

void AUTArmorPickupFactory::UpdateHUD ( class AUTHUD* H )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 48923 ];

	AUTArmorPickupFactory_execUpdateHUD_Parms UpdateHUD_Parms;
	UpdateHUD_Parms.H = H;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTWeap_RocketLauncher::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60519 ];

	AUTWeap_RocketLauncher_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.AddAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int AUTWeap_RocketLauncher::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60515 ];

	AUTWeap_RocketLauncher_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.UpdateAmmoVisibility
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::UpdateAmmoVisibility ( )
{
	static UFunction* pFnUpdateAmmoVisibility = NULL;

	if ( ! pFnUpdateAmmoVisibility )
		pFnUpdateAmmoVisibility = (UFunction*) UObject::GObjObjects()->Data[ 60514 ];

	AUTWeap_RocketLauncher_execUpdateAmmoVisibility_Parms UpdateAmmoVisibility_Parms;

	this->ProcessEvent ( pFnUpdateAmmoVisibility, &UpdateAmmoVisibility_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.HideRocket
// [0x00020102] 
// Parameters infos:
// struct FName                   RocketName                     ( CPF_Parm )
// unsigned long                  ShouldHide                     ( CPF_Parm )

void AUTWeap_RocketLauncher::HideRocket ( struct FName RocketName, unsigned long ShouldHide )
{
	static UFunction* pFnHideRocket = NULL;

	if ( ! pFnHideRocket )
		pFnHideRocket = (UFunction*) UObject::GObjObjects()->Data[ 60510 ];

	AUTWeap_RocketLauncher_execHideRocket_Parms HideRocket_Parms;
	memcpy ( &HideRocket_Parms.RocketName, &RocketName, 0x8 );
	HideRocket_Parms.ShouldHide = ShouldHide;

	this->ProcessEvent ( pFnHideRocket, &HideRocket_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.HideRocketAmmo
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::HideRocketAmmo ( )
{
	static UFunction* pFnHideRocketAmmo = NULL;

	if ( ! pFnHideRocketAmmo )
		pFnHideRocketAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60509 ];

	AUTWeap_RocketLauncher_execHideRocketAmmo_Parms HideRocketAmmo_Parms;

	this->ProcessEvent ( pFnHideRocketAmmo, &HideRocketAmmo_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.PlayFiringSound
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 60508 ];

	AUTWeap_RocketLauncher_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.GetProjectileClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* AUTWeap_RocketLauncher::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 60506 ];

	AUTWeap_RocketLauncher_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* AUTWeap_RocketLauncher::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 60503 ];

	AUTWeap_RocketLauncher_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.FireLoad
// [0x00820002] 
// Parameters infos:

void AUTWeap_RocketLauncher::FireLoad ( )
{
	static UFunction* pFnFireLoad = NULL;

	if ( ! pFnFireLoad )
		pFnFireLoad = (UFunction*) UObject::GObjObjects()->Data[ 60487 ];

	AUTWeap_RocketLauncher_execFireLoad_Parms FireLoad_Parms;

	this->ProcessEvent ( pFnFireLoad, &FireLoad_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.WeaponFireLoad
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::WeaponFireLoad ( )
{
	static UFunction* pFnWeaponFireLoad = NULL;

	if ( ! pFnWeaponFireLoad )
		pFnWeaponFireLoad = (UFunction*) UObject::GObjObjects()->Data[ 60486 ];

	AUTWeap_RocketLauncher_execWeaponFireLoad_Parms WeaponFireLoad_Parms;

	this->ProcessEvent ( pFnWeaponFireLoad, &WeaponFireLoad_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.GetSpreadDist
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTWeap_RocketLauncher::GetSpreadDist ( )
{
	static UFunction* pFnGetSpreadDist = NULL;

	if ( ! pFnGetSpreadDist )
		pFnGetSpreadDist = (UFunction*) UObject::GObjObjects()->Data[ 60484 ];

	AUTWeap_RocketLauncher_execGetSpreadDist_Parms GetSpreadDist_Parms;

	this->ProcessEvent ( pFnGetSpreadDist, &GetSpreadDist_Parms, NULL );

	return GetSpreadDist_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTWeap_RocketLauncher::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 60481 ];

	AUTWeap_RocketLauncher_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.GetAIRating
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeap_RocketLauncher::GetAIRating ( )
{
	static UFunction* pFnGetAIRating = NULL;

	if ( ! pFnGetAIRating )
		pFnGetAIRating = (UFunction*) UObject::GObjObjects()->Data[ 60474 ];

	AUTWeap_RocketLauncher_execGetAIRating_Parms GetAIRating_Parms;

	this->ProcessEvent ( pFnGetAIRating, &GetAIRating_Parms, NULL );

	return GetAIRating_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.SuggestAttackStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTWeap_RocketLauncher::SuggestAttackStyle ( )
{
	static UFunction* pFnSuggestAttackStyle = NULL;

	if ( ! pFnSuggestAttackStyle )
		pFnSuggestAttackStyle = (UFunction*) UObject::GObjObjects()->Data[ 60471 ];

	AUTWeap_RocketLauncher_execSuggestAttackStyle_Parms SuggestAttackStyle_Parms;

	this->ProcessEvent ( pFnSuggestAttackStyle, &SuggestAttackStyle_Parms, NULL );

	return SuggestAttackStyle_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.DrawLFMData
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTWeap_RocketLauncher::DrawLFMData ( class AHUD* HUD )
{
	static UFunction* pFnDrawLFMData = NULL;

	if ( ! pFnDrawLFMData )
		pFnDrawLFMData = (UFunction*) UObject::GObjObjects()->Data[ 60455 ];

	AUTWeap_RocketLauncher_execDrawLFMData_Parms DrawLFMData_Parms;
	DrawLFMData_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawLFMData, &DrawLFMData_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.CauseMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_RocketLauncher::eventCauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60452 ];

	AUTWeap_RocketLauncher_eventCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.DetachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::DetachMuzzleFlash ( )
{
	static UFunction* pFnDetachMuzzleFlash = NULL;

	if ( ! pFnDetachMuzzleFlash )
		pFnDetachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60449 ];

	AUTWeap_RocketLauncher_execDetachMuzzleFlash_Parms DetachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnDetachMuzzleFlash, &DetachMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60446 ];

	AUTWeap_RocketLauncher_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.CauseMuzzleFlashLight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_RocketLauncher::eventCauseMuzzleFlashLight ( )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 60444 ];

	AUTWeap_RocketLauncher_eventCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.StopMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_RocketLauncher::eventStopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60443 ];

	AUTWeap_RocketLauncher_eventStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.MuzzleFlashTimer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_RocketLauncher::eventMuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 60440 ];

	AUTWeap_RocketLauncher_eventMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.ActiveRenderOverlays
// [0x00020102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void AUTWeap_RocketLauncher::ActiveRenderOverlays ( class AHUD* H )
{
	static UFunction* pFnActiveRenderOverlays = NULL;

	if ( ! pFnActiveRenderOverlays )
		pFnActiveRenderOverlays = (UFunction*) UObject::GObjObjects()->Data[ 60437 ];

	AUTWeap_RocketLauncher_execActiveRenderOverlays_Parms ActiveRenderOverlays_Parms;
	ActiveRenderOverlays_Parms.H = H;

	this->ProcessEvent ( pFnActiveRenderOverlays, &ActiveRenderOverlays_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeap_RocketLauncher::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 60436 ];

	AUTWeap_RocketLauncher_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.CheckTargetLock
// [0x00820002] 
// Parameters infos:

void AUTWeap_RocketLauncher::CheckTargetLock ( )
{
	static UFunction* pFnCheckTargetLock = NULL;

	if ( ! pFnCheckTargetLock )
		pFnCheckTargetLock = (UFunction*) UObject::GObjObjects()->Data[ 60414 ];

	AUTWeap_RocketLauncher_execCheckTargetLock_Parms CheckTargetLock_Parms;

	this->ProcessEvent ( pFnCheckTargetLock, &CheckTargetLock_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTWeap_RocketLauncher::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60412 ];

	AUTWeap_RocketLauncher_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.CanLockOnTo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TA                             ( CPF_Parm )

bool AUTWeap_RocketLauncher::CanLockOnTo ( class AActor* TA )
{
	static UFunction* pFnCanLockOnTo = NULL;

	if ( ! pFnCanLockOnTo )
		pFnCanLockOnTo = (UFunction*) UObject::GObjObjects()->Data[ 60409 ];

	AUTWeap_RocketLauncher_execCanLockOnTo_Parms CanLockOnTo_Parms;
	CanLockOnTo_Parms.TA = TA;

	this->ProcessEvent ( pFnCanLockOnTo, &CanLockOnTo_Parms, NULL );

	return CanLockOnTo_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.AdjustLockTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewLockTarget                  ( CPF_Parm )

void AUTWeap_RocketLauncher::AdjustLockTarget ( class AActor* NewLockTarget )
{
	static UFunction* pFnAdjustLockTarget = NULL;

	if ( ! pFnAdjustLockTarget )
		pFnAdjustLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 60407 ];

	AUTWeap_RocketLauncher_execAdjustLockTarget_Parms AdjustLockTarget_Parms;
	AdjustLockTarget_Parms.NewLockTarget = NewLockTarget;

	this->ProcessEvent ( pFnAdjustLockTarget, &AdjustLockTarget_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.FireAmmunition
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 60406 ];

	AUTWeap_RocketLauncher_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function UTGame.UTWeap_RocketLauncher.GetWeaponDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTWeap_RocketLauncher::GetWeaponDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetWeaponDebug = NULL;

	if ( ! pFnGetWeaponDebug )
		pFnGetWeaponDebug = (UFunction*) UObject::GObjObjects()->Data[ 60403 ];

	AUTWeap_RocketLauncher_execGetWeaponDebug_Parms GetWeaponDebug_Parms;

	this->ProcessEvent ( pFnGetWeaponDebug, &GetWeaponDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetWeaponDebug_Parms.DebugInfo, 0xC );
};

// Function UTGame.UTWeap_RocketLauncher.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float AUTWeap_RocketLauncher::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 60400 ];

	AUTWeap_RocketLauncher_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function UTGame.UTWeap_RocketLauncher.AdjustWeaponTimingForConsole
// [0x00020102] 
// Parameters infos:

void AUTWeap_RocketLauncher::AdjustWeaponTimingForConsole ( )
{
	static UFunction* pFnAdjustWeaponTimingForConsole = NULL;

	if ( ! pFnAdjustWeaponTimingForConsole )
		pFnAdjustWeaponTimingForConsole = (UFunction*) UObject::GObjObjects()->Data[ 60398 ];

	AUTWeap_RocketLauncher_execAdjustWeaponTimingForConsole_Parms AdjustWeaponTimingForConsole_Parms;

	this->ProcessEvent ( pFnAdjustWeaponTimingForConsole, &AdjustWeaponTimingForConsole_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.FilterButtonInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool UGFxUDKFrontEnd::FilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 45346 ];

	UGFxUDKFrontEnd_execFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.DestroyDependantViews
// [0x00020001] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void UGFxUDKFrontEnd::DestroyDependantViews ( struct FName InViewName )
{
	static UFunction* pFnDestroyDependantViews = NULL;

	if ( ! pFnDestroyDependantViews )
		pFnDestroyDependantViews = (UFunction*) UObject::GObjObjects()->Data[ 45344 ];

	UGFxUDKFrontEnd_execDestroyDependantViews_Parms DestroyDependantViews_Parms;
	memcpy ( &DestroyDependantViews_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnDestroyDependantViews, &DestroyDependantViews_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.LoadDependantViews
// [0x00020001] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void UGFxUDKFrontEnd::LoadDependantViews ( struct FName InViewName )
{
	static UFunction* pFnLoadDependantViews = NULL;

	if ( ! pFnLoadDependantViews )
		pFnLoadDependantViews = (UFunction*) UObject::GObjObjects()->Data[ 45342 ];

	UGFxUDKFrontEnd_execLoadDependantViews_Parms LoadDependantViews_Parms;
	memcpy ( &LoadDependantViews_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnLoadDependantViews, &LoadDependantViews_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45335 ];

	UGFxUDKFrontEnd_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.CheckLinkConnectionAndError
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 AlternateTitle                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 AlternateMessage               ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool UGFxUDKFrontEnd::CheckLinkConnectionAndError ( struct FString AlternateTitle, struct FString AlternateMessage )
{
	static UFunction* pFnCheckLinkConnectionAndError = NULL;

	if ( ! pFnCheckLinkConnectionAndError )
		pFnCheckLinkConnectionAndError = (UFunction*) UObject::GObjObjects()->Data[ 45327 ];

	UGFxUDKFrontEnd_execCheckLinkConnectionAndError_Parms CheckLinkConnectionAndError_Parms;
	memcpy ( &CheckLinkConnectionAndError_Parms.AlternateTitle, &AlternateTitle, 0xC );
	memcpy ( &CheckLinkConnectionAndError_Parms.AlternateMessage, &AlternateMessage, 0xC );

	this->ProcessEvent ( pFnCheckLinkConnectionAndError, &CheckLinkConnectionAndError_Parms, NULL );

	return CheckLinkConnectionAndError_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.PostWidgetInit
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd::PostWidgetInit ( )
{
	static UFunction* pFnPostWidgetInit = NULL;

	if ( ! pFnPostWidgetInit )
		pFnPostWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 45326 ];

	UGFxUDKFrontEnd_execPostWidgetInit_Parms PostWidgetInit_Parms;

	this->ProcessEvent ( pFnPostWidgetInit, &PostWidgetInit_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.ASShowCursor
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bShowCursor                    ( CPF_Parm )

void UGFxUDKFrontEnd::ASShowCursor ( unsigned long bShowCursor )
{
	static UFunction* pFnASShowCursor = NULL;

	if ( ! pFnASShowCursor )
		pFnASShowCursor = (UFunction*) UObject::GObjObjects()->Data[ 45270 ];

	UGFxUDKFrontEnd_execASShowCursor_Parms ASShowCursor_Parms;
	ASShowCursor_Parms.bShowCursor = bShowCursor;

	this->ProcessEvent ( pFnASShowCursor, &ASShowCursor_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.ConfigureView
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxUDKFrontEnd_View*    InView                         ( CPF_Parm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )

void UGFxUDKFrontEnd::ConfigureView ( class UGFxUDKFrontEnd_View* InView, struct FName WidgetName, struct FName WidgetPath )
{
	static UFunction* pFnConfigureView = NULL;

	if ( ! pFnConfigureView )
		pFnConfigureView = (UFunction*) UObject::GObjObjects()->Data[ 45320 ];

	UGFxUDKFrontEnd_execConfigureView_Parms ConfigureView_Parms;
	ConfigureView_Parms.InView = InView;
	memcpy ( &ConfigureView_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &ConfigureView_Parms.WidgetPath, &WidgetPath, 0x8 );

	this->ProcessEvent ( pFnConfigureView, &ConfigureView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.UpdateViewLayout
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd::UpdateViewLayout ( )
{
	static UFunction* pFnUpdateViewLayout = NULL;

	if ( ! pFnUpdateViewLayout )
		pFnUpdateViewLayout = (UFunction*) UObject::GObjObjects()->Data[ 45319 ];

	UGFxUDKFrontEnd_execUpdateViewLayout_Parms UpdateViewLayout_Parms;

	this->ProcessEvent ( pFnUpdateViewLayout, &UpdateViewLayout_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.PopViewStub
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxUDKFrontEnd::PopViewStub ( )
{
	static UFunction* pFnPopViewStub = NULL;

	if ( ! pFnPopViewStub )
		pFnPopViewStub = (UFunction*) UObject::GObjObjects()->Data[ 45317 ];

	UGFxUDKFrontEnd_execPopViewStub_Parms PopViewStub_Parms;

	this->ProcessEvent ( pFnPopViewStub, &PopViewStub_Parms, NULL );

	return PopViewStub_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.PopView
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxUDKFrontEnd::PopView ( )
{
	static UFunction* pFnPopView = NULL;

	if ( ! pFnPopView )
		pFnPopView = (UFunction*) UObject::GObjObjects()->Data[ 45315 ];

	UGFxUDKFrontEnd_execPopView_Parms PopView_Parms;

	this->ProcessEvent ( pFnPopView, &PopView_Parms, NULL );

	return PopView_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.ASSetSelectionFocus
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              MovieClip                      ( CPF_Parm )

void UGFxUDKFrontEnd::ASSetSelectionFocus ( class UGFxObject* MovieClip )
{
	static UFunction* pFnASSetSelectionFocus = NULL;

	if ( ! pFnASSetSelectionFocus )
		pFnASSetSelectionFocus = (UFunction*) UObject::GObjObjects()->Data[ 45313 ];

	UGFxUDKFrontEnd_execASSetSelectionFocus_Parms ASSetSelectionFocus_Parms;
	ASSetSelectionFocus_Parms.MovieClip = MovieClip;

	this->ProcessEvent ( pFnASSetSelectionFocus, &ASSetSelectionFocus_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.SetSelectionFocus
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              MovieClip                      ( CPF_Parm | CPF_CoerceParm )

void UGFxUDKFrontEnd::SetSelectionFocus ( class UGFxObject* MovieClip )
{
	static UFunction* pFnSetSelectionFocus = NULL;

	if ( ! pFnSetSelectionFocus )
		pFnSetSelectionFocus = (UFunction*) UObject::GObjObjects()->Data[ 45311 ];

	UGFxUDKFrontEnd_execSetSelectionFocus_Parms SetSelectionFocus_Parms;
	SetSelectionFocus_Parms.MovieClip = MovieClip;

	this->ProcessEvent ( pFnSetSelectionFocus, &SetSelectionFocus_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.PushDialogView
// [0x00020002] 
// Parameters infos:
// class UGFxUDKFrontEnd_View*    dialogView                     ( CPF_Parm | CPF_CoerceParm )

void UGFxUDKFrontEnd::PushDialogView ( class UGFxUDKFrontEnd_View* dialogView )
{
	static UFunction* pFnPushDialogView = NULL;

	if ( ! pFnPushDialogView )
		pFnPushDialogView = (UFunction*) UObject::GObjObjects()->Data[ 45309 ];

	UGFxUDKFrontEnd_execPushDialogView_Parms PushDialogView_Parms;
	PushDialogView_Parms.dialogView = dialogView;

	this->ProcessEvent ( pFnPushDialogView, &PushDialogView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.PushView
// [0x00020002] 
// Parameters infos:
// class UGFxUDKFrontEnd_View*    TargetView                     ( CPF_Parm | CPF_CoerceParm )

void UGFxUDKFrontEnd::PushView ( class UGFxUDKFrontEnd_View* TargetView )
{
	static UFunction* pFnPushView = NULL;

	if ( ! pFnPushView )
		pFnPushView = (UFunction*) UObject::GObjObjects()->Data[ 45307 ];

	UGFxUDKFrontEnd_execPushView_Parms PushView_Parms;
	PushView_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnPushView, &PushView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.IsViewAllowed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxUDKFrontEnd_View*    TargetView                     ( CPF_Parm )

bool UGFxUDKFrontEnd::IsViewAllowed ( class UGFxUDKFrontEnd_View* TargetView )
{
	static UFunction* pFnIsViewAllowed = NULL;

	if ( ! pFnIsViewAllowed )
		pFnIsViewAllowed = (UFunction*) UObject::GObjObjects()->Data[ 45301 ];

	UGFxUDKFrontEnd_execIsViewAllowed_Parms IsViewAllowed_Parms;
	IsViewAllowed_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnIsViewAllowed, &IsViewAllowed_Parms, NULL );

	return IsViewAllowed_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.ConfigureTargetView
// [0x00020002] 
// Parameters infos:
// class UGFxUDKFrontEnd_View*    TargetView                     ( CPF_Parm )

void UGFxUDKFrontEnd::ConfigureTargetView ( class UGFxUDKFrontEnd_View* TargetView )
{
	static UFunction* pFnConfigureTargetView = NULL;

	if ( ! pFnConfigureTargetView )
		pFnConfigureTargetView = (UFunction*) UObject::GObjObjects()->Data[ 45299 ];

	UGFxUDKFrontEnd_execConfigureTargetView_Parms ConfigureTargetView_Parms;
	ConfigureTargetView_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnConfigureTargetView, &ConfigureTargetView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.ConfigureTargetDialog
// [0x00020002] 
// Parameters infos:
// class UGFxUDKFrontEnd_View*    TargetDialog                   ( CPF_Parm | CPF_CoerceParm )

void UGFxUDKFrontEnd::ConfigureTargetDialog ( class UGFxUDKFrontEnd_View* TargetDialog )
{
	static UFunction* pFnConfigureTargetDialog = NULL;

	if ( ! pFnConfigureTargetDialog )
		pFnConfigureTargetDialog = (UFunction*) UObject::GObjObjects()->Data[ 45297 ];

	UGFxUDKFrontEnd_execConfigureTargetDialog_Parms ConfigureTargetDialog_Parms;
	ConfigureTargetDialog_Parms.TargetDialog = TargetDialog;

	this->ProcessEvent ( pFnConfigureTargetDialog, &ConfigureTargetDialog_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.SpawnDialog
// [0x00024002] 
// Parameters infos:
// class UGFxUDKFrontEnd_Dialog*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   TargetDialogName               ( CPF_Parm )
// class UGFxUDKFrontEnd_Screen*  ParentView                     ( CPF_OptionalParm | CPF_Parm )

class UGFxUDKFrontEnd_Dialog* UGFxUDKFrontEnd::SpawnDialog ( struct FName TargetDialogName, class UGFxUDKFrontEnd_Screen* ParentView )
{
	static UFunction* pFnSpawnDialog = NULL;

	if ( ! pFnSpawnDialog )
		pFnSpawnDialog = (UFunction*) UObject::GObjObjects()->Data[ 45293 ];

	UGFxUDKFrontEnd_execSpawnDialog_Parms SpawnDialog_Parms;
	memcpy ( &SpawnDialog_Parms.TargetDialogName, &TargetDialogName, 0x8 );
	SpawnDialog_Parms.ParentView = ParentView;

	this->ProcessEvent ( pFnSpawnDialog, &SpawnDialog_Parms, NULL );

	return SpawnDialog_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.PushViewByName
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FName                   TargetViewName                 ( CPF_Parm )
// class UGFxUDKFrontEnd_Screen*  ParentView                     ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd::PushViewByName ( struct FName TargetViewName, class UGFxUDKFrontEnd_Screen* ParentView )
{
	static UFunction* pFnPushViewByName = NULL;

	if ( ! pFnPushViewByName )
		pFnPushViewByName = (UFunction*) UObject::GObjObjects()->Data[ 45290 ];

	UGFxUDKFrontEnd_execPushViewByName_Parms PushViewByName_Parms;
	memcpy ( &PushViewByName_Parms.TargetViewName, &TargetViewName, 0x8 );
	PushViewByName_Parms.ParentView = ParentView;

	this->ProcessEvent ( pFnPushViewByName, &PushViewByName_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.SetEscapeDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd::SetEscapeDelegate ( struct FScriptDelegate InDelegate )
{
	static UFunction* pFnSetEscapeDelegate = NULL;

	if ( ! pFnSetEscapeDelegate )
		pFnSetEscapeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 45287 ];

	UGFxUDKFrontEnd_execSetEscapeDelegate_Parms SetEscapeDelegate_Parms;
	memcpy ( &SetEscapeDelegate_Parms.InDelegate, &InDelegate, 0xC );

	this->ProcessEvent ( pFnSetEscapeDelegate, &SetEscapeDelegate_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.IsViewLoaded
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   InViewName                     ( CPF_Parm )

bool UGFxUDKFrontEnd::IsViewLoaded ( struct FName InViewName )
{
	static UFunction* pFnIsViewLoaded = NULL;

	if ( ! pFnIsViewLoaded )
		pFnIsViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45283 ];

	UGFxUDKFrontEnd_execIsViewLoaded_Parms IsViewLoaded_Parms;
	memcpy ( &IsViewLoaded_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnIsViewLoaded, &IsViewLoaded_Parms, NULL );

	return IsViewLoaded_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.LoadViewByName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void UGFxUDKFrontEnd::LoadViewByName ( struct FName InViewName )
{
	static UFunction* pFnLoadViewByName = NULL;

	if ( ! pFnLoadViewByName )
		pFnLoadViewByName = (UFunction*) UObject::GObjObjects()->Data[ 45280 ];

	UGFxUDKFrontEnd_execLoadViewByName_Parms LoadViewByName_Parms;
	memcpy ( &LoadViewByName_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnLoadViewByName, &LoadViewByName_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.LoadView
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct UGFxUDKFrontEnd_FViewInfo InViewInfo                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd::LoadView ( struct UGFxUDKFrontEnd_FViewInfo InViewInfo )
{
	static UFunction* pFnLoadView = NULL;

	if ( ! pFnLoadView )
		pFnLoadView = (UFunction*) UObject::GObjObjects()->Data[ 45273 ];

	UGFxUDKFrontEnd_execLoadView_Parms LoadView_Parms;
	memcpy ( &LoadView_Parms.InViewInfo, &InViewInfo, 0x20 );

	this->ProcessEvent ( pFnLoadView, &LoadView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.LoadViews
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd::LoadViews ( )
{
	static UFunction* pFnLoadViews = NULL;

	if ( ! pFnLoadViews )
		pFnLoadViews = (UFunction*) UObject::GObjObjects()->Data[ 45271 ];

	UGFxUDKFrontEnd_execLoadViews_Parms LoadViews_Parms;

	this->ProcessEvent ( pFnLoadViews, &LoadViews_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.ConfigFrontEnd
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd::ConfigFrontEnd ( )
{
	static UFunction* pFnConfigFrontEnd = NULL;

	if ( ! pFnConfigFrontEnd )
		pFnConfigFrontEnd = (UFunction*) UObject::GObjObjects()->Data[ 45269 ];

	UGFxUDKFrontEnd_execConfigFrontEnd_Parms ConfigFrontEnd_Parms;

	this->ProcessEvent ( pFnConfigFrontEnd, &ConfigFrontEnd_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxUDKFrontEnd::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 45266 ];

	UGFxUDKFrontEnd_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd.EscapeDelegate
// [0x00120000] 
// Parameters infos:

void UGFxUDKFrontEnd::EscapeDelegate ( )
{
	static UFunction* pFnEscapeDelegate = NULL;

	if ( ! pFnEscapeDelegate )
		pFnEscapeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 45224 ];

	UGFxUDKFrontEnd_execEscapeDelegate_Parms EscapeDelegate_Parms;

	this->ProcessEvent ( pFnEscapeDelegate, &EscapeDelegate_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_View::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45502 ];

	UGFxUDKFrontEnd_View_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_View.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_View::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 45501 ];

	UGFxUDKFrontEnd_View_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.MoveBackImpl
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_View::MoveBackImpl ( )
{
	static UFunction* pFnMoveBackImpl = NULL;

	if ( ! pFnMoveBackImpl )
		pFnMoveBackImpl = (UFunction*) UObject::GObjObjects()->Data[ 45500 ];

	UGFxUDKFrontEnd_View_execMoveBackImpl_Parms MoveBackImpl_Parms;

	this->ProcessEvent ( pFnMoveBackImpl, &MoveBackImpl_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_View::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 45498 ];

	UGFxUDKFrontEnd_View_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_View::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45497 ];

	UGFxUDKFrontEnd_View_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.PlayOpenAnimation
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_View::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45496 ];

	UGFxUDKFrontEnd_View_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.DisableSubComponents
// [0x00020000] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_View::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45494 ];

	UGFxUDKFrontEnd_View_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_View::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45493 ];

	UGFxUDKFrontEnd_View_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.OnViewActivated
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_View::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 45492 ];

	UGFxUDKFrontEnd_View_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_View::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45490 ];

	UGFxUDKFrontEnd_View_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_View.OnViewLoaded
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_View::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45489 ];

	UGFxUDKFrontEnd_View_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUIView.ConsoleCommand
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWriteToLog                    ( CPF_OptionalParm | CPF_Parm )

void UGFxUIView::ConsoleCommand ( struct FString Cmd, unsigned long bWriteToLog )
{
	static UFunction* pFnConsoleCommand = NULL;

	if ( ! pFnConsoleCommand )
		pFnConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 45484 ];

	UGFxUIView_execConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy ( &ConsoleCommand_Parms.Cmd, &Cmd, 0xC );
	ConsoleCommand_Parms.bWriteToLog = bWriteToLog;

	this->ProcessEvent ( pFnConsoleCommand, &ConsoleCommand_Parms, NULL );
};

// Function UTGame.GFxUIView.GetPlayerControllerId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_Parm )

int UGFxUIView::GetPlayerControllerId ( int PlayerIndex )
{
	static UFunction* pFnGetPlayerControllerId = NULL;

	if ( ! pFnGetPlayerControllerId )
		pFnGetPlayerControllerId = (UFunction*) UObject::GObjObjects()->Data[ 45481 ];

	UGFxUIView_execGetPlayerControllerId_Parms GetPlayerControllerId_Parms;
	GetPlayerControllerId_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetPlayerControllerId, &GetPlayerControllerId_Parms, NULL );

	return GetPlayerControllerId_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.GetPlayerIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxUIView::GetPlayerIndex ( )
{
	static UFunction* pFnGetPlayerIndex = NULL;

	if ( ! pFnGetPlayerIndex )
		pFnGetPlayerIndex = (UFunction*) UObject::GObjObjects()->Data[ 45477 ];

	UGFxUIView_execGetPlayerIndex_Parms GetPlayerIndex_Parms;

	this->ProcessEvent ( pFnGetPlayerIndex, &GetPlayerIndex_Parms, NULL );

	return GetPlayerIndex_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.GetCommonOptionsURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUIView::GetCommonOptionsURL ( )
{
	static UFunction* pFnGetCommonOptionsURL = NULL;

	if ( ! pFnGetCommonOptionsURL )
		pFnGetCommonOptionsURL = (UFunction*) UObject::GObjObjects()->Data[ 45474 ];

	UGFxUIView_execGetCommonOptionsURL_Parms GetCommonOptionsURL_Parms;

	this->ProcessEvent ( pFnGetCommonOptionsURL, &GetCommonOptionsURL_Parms, NULL );

	return GetCommonOptionsURL_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.IsLoggedIn
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRequireOnlineLogin            ( CPF_OptionalParm | CPF_Parm )

bool UGFxUIView::eventIsLoggedIn ( int ControllerId, unsigned long bRequireOnlineLogin )
{
	static UFunction* pFnIsLoggedIn = NULL;

	if ( ! pFnIsLoggedIn )
		pFnIsLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 45470 ];

	UGFxUIView_eventIsLoggedIn_Parms IsLoggedIn_Parms;
	IsLoggedIn_Parms.ControllerId = ControllerId;
	IsLoggedIn_Parms.bRequireOnlineLogin = bRequireOnlineLogin;

	this->ProcessEvent ( pFnIsLoggedIn, &IsLoggedIn_Parms, NULL );

	return IsLoggedIn_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.GetPlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUIView::GetPlayerName ( )
{
	static UFunction* pFnGetPlayerName = NULL;

	if ( ! pFnGetPlayerName )
		pFnGetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 45468 ];

	UGFxUIView_execGetPlayerName_Parms GetPlayerName_Parms;

	this->ProcessEvent ( pFnGetPlayerName, &GetPlayerName_Parms, NULL );

	return GetPlayerName_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.HasLinkConnection
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxUIView::HasLinkConnection ( )
{
	static UFunction* pFnHasLinkConnection = NULL;

	if ( ! pFnHasLinkConnection )
		pFnHasLinkConnection = (UFunction*) UObject::GObjObjects()->Data[ 45333 ];

	UGFxUIView_execHasLinkConnection_Parms HasLinkConnection_Parms;

	this->ProcessEvent ( pFnHasLinkConnection, &HasLinkConnection_Parms, NULL );

	return HasLinkConnection_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.GetUDKPlayerOwner
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// class AUDKPlayerController*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

class AUDKPlayerController* UGFxUIView::GetUDKPlayerOwner ( int PlayerIndex )
{
	static UFunction* pFnGetUDKPlayerOwner = NULL;

	if ( ! pFnGetUDKPlayerOwner )
		pFnGetUDKPlayerOwner = (UFunction*) UObject::GObjObjects()->Data[ 45465 ];

	UGFxUIView_execGetUDKPlayerOwner_Parms GetUDKPlayerOwner_Parms;
	GetUDKPlayerOwner_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetUDKPlayerOwner, &GetUDKPlayerOwner_Parms, NULL );

	return GetUDKPlayerOwner_Parms.ReturnValue;
};

// Function UTGame.GFxUIView.GetPlayerOwner
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// class ULocalPlayer*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

class ULocalPlayer* UGFxUIView::GetPlayerOwner ( int PlayerIndex )
{
	static UFunction* pFnGetPlayerOwner = NULL;

	if ( ! pFnGetPlayerOwner )
		pFnGetPlayerOwner = (UFunction*) UObject::GObjObjects()->Data[ 45462 ];

	UGFxUIView_execGetPlayerOwner_Parms GetPlayerOwner_Parms;
	GetPlayerOwner_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetPlayerOwner, &GetPlayerOwner_Parms, NULL );

	return GetPlayerOwner_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_PasswordDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46498 ];

	UGFxUDKFrontEnd_PasswordDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.ClearPasswordRenderer
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_PasswordDialog::ClearPasswordRenderer ( )
{
	static UFunction* pFnClearPasswordRenderer = NULL;

	if ( ! pFnClearPasswordRenderer )
		pFnClearPasswordRenderer = (UFunction*) UObject::GObjObjects()->Data[ 46490 ];

	UGFxUDKFrontEnd_PasswordDialog_execClearPasswordRenderer_Parms ClearPasswordRenderer_Parms;

	this->ProcessEvent ( pFnClearPasswordRenderer, &ClearPasswordRenderer_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.GetPassword
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_PasswordDialog::GetPassword ( )
{
	static UFunction* pFnGetPassword = NULL;

	if ( ! pFnGetPassword )
		pFnGetPassword = (UFunction*) UObject::GObjObjects()->Data[ 45987 ];

	UGFxUDKFrontEnd_PasswordDialog_execGetPassword_Parms GetPassword_Parms;

	this->ProcessEvent ( pFnGetPassword, &GetPassword_Parms, NULL );

	return GetPassword_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.SetOKButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_PasswordDialog::SetOKButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetOKButtonListener = NULL;

	if ( ! pFnSetOKButtonListener )
		pFnSetOKButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 46496 ];

	UGFxUDKFrontEnd_PasswordDialog_execSetOKButtonListener_Parms SetOKButtonListener_Parms;
	memcpy ( &SetOKButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetOKButtonListener, &SetOKButtonListener_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.SetBackButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_PasswordDialog::SetBackButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetBackButtonListener = NULL;

	if ( ! pFnSetBackButtonListener )
		pFnSetBackButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 46494 ];

	UGFxUDKFrontEnd_PasswordDialog_execSetBackButtonListener_Parms SetBackButtonListener_Parms;
	memcpy ( &SetBackButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetBackButtonListener, &SetBackButtonListener_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnableComponents              ( CPF_Parm )

void UGFxUDKFrontEnd_PasswordDialog::DisableSubComponents ( unsigned long bEnableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46492 ];

	UGFxUDKFrontEnd_PasswordDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bEnableComponents = bEnableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_PasswordDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 46491 ];

	UGFxUDKFrontEnd_PasswordDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_PasswordDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_PasswordDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46488 ];

	UGFxUDKFrontEnd_PasswordDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_Dialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45529 ];

	UGFxUDKFrontEnd_Dialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Dialog.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Dialog::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 45527 ];

	UGFxUDKFrontEnd_Dialog_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.SetBackButton_OnPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         EventListener                  ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Dialog::SetBackButton_OnPress ( struct FScriptDelegate EventListener )
{
	static UFunction* pFnSetBackButton_OnPress = NULL;

	if ( ! pFnSetBackButton_OnPress )
		pFnSetBackButton_OnPress = (UFunction*) UObject::GObjObjects()->Data[ 45525 ];

	UGFxUDKFrontEnd_Dialog_execSetBackButton_OnPress_Parms SetBackButton_OnPress_Parms;
	memcpy ( &SetBackButton_OnPress_Parms.EventListener, &EventListener, 0xC );

	this->ProcessEvent ( pFnSetBackButton_OnPress, &SetBackButton_OnPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.SetBackButton
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              InBackButton                   ( CPF_Parm )

void UGFxUDKFrontEnd_Dialog::SetBackButton ( class UGFxObject* InBackButton )
{
	static UFunction* pFnSetBackButton = NULL;

	if ( ! pFnSetBackButton )
		pFnSetBackButton = (UFunction*) UObject::GObjObjects()->Data[ 45523 ];

	UGFxUDKFrontEnd_Dialog_execSetBackButton_Parms SetBackButton_Parms;
	SetBackButton_Parms.InBackButton = InBackButton;

	this->ProcessEvent ( pFnSetBackButton, &SetBackButton_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_Dialog::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45522 ];

	UGFxUDKFrontEnd_Dialog_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.PlayOpenAnimation
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_Dialog::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45521 ];

	UGFxUDKFrontEnd_Dialog_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_Dialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45519 ];

	UGFxUDKFrontEnd_Dialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.DisableSubComponents
// [0x00020000] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_Dialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45517 ];

	UGFxUDKFrontEnd_Dialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.OnViewClosed
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_Dialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45516 ];

	UGFxUDKFrontEnd_Dialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Dialog.AcceptDelegate
// [0x00120000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Dialog::AcceptDelegate ( struct FEventData ev )
{
	static UFunction* pFnAcceptDelegate = NULL;

	if ( ! pFnAcceptDelegate )
		pFnAcceptDelegate = (UFunction*) UObject::GObjObjects()->Data[ 45509 ];

	UGFxUDKFrontEnd_Dialog_execAcceptDelegate_Parms AcceptDelegate_Parms;
	memcpy ( &AcceptDelegate_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnAcceptDelegate, &AcceptDelegate_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_ErrorDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45545 ];

	UGFxUDKFrontEnd_ErrorDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_ErrorDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45544 ];

	UGFxUDKFrontEnd_ErrorDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.SetButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 ButtonLabel                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_ErrorDialog::SetButtonLabel ( struct FString ButtonLabel )
{
	static UFunction* pFnSetButtonLabel = NULL;

	if ( ! pFnSetButtonLabel )
		pFnSetButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 45542 ];

	UGFxUDKFrontEnd_ErrorDialog_execSetButtonLabel_Parms SetButtonLabel_Parms;
	memcpy ( &SetButtonLabel_Parms.ButtonLabel, &ButtonLabel, 0xC );

	this->ProcessEvent ( pFnSetButtonLabel, &SetButtonLabel_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.SetInfo
// [0x00020002] 
// Parameters infos:
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_ErrorDialog::SetInfo ( struct FString Info )
{
	static UFunction* pFnSetInfo = NULL;

	if ( ! pFnSetInfo )
		pFnSetInfo = (UFunction*) UObject::GObjObjects()->Data[ 45540 ];

	UGFxUDKFrontEnd_ErrorDialog_execSetInfo_Parms SetInfo_Parms;
	memcpy ( &SetInfo_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSetInfo, &SetInfo_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.SetTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_ErrorDialog::SetTitle ( struct FString Title )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 45538 ];

	UGFxUDKFrontEnd_ErrorDialog_execSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ErrorDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_ErrorDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45536 ];

	UGFxUDKFrontEnd_ErrorDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_JoinDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45928 ];

	UGFxUDKFrontEnd_JoinDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.SetSpectateButtonPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         SpectateButtonListener         ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinDialog::SetSpectateButtonPress ( struct FScriptDelegate SpectateButtonListener )
{
	static UFunction* pFnSetSpectateButtonPress = NULL;

	if ( ! pFnSetSpectateButtonPress )
		pFnSetSpectateButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 45926 ];

	UGFxUDKFrontEnd_JoinDialog_execSetSpectateButtonPress_Parms SetSpectateButtonPress_Parms;
	memcpy ( &SetSpectateButtonPress_Parms.SpectateButtonListener, &SpectateButtonListener, 0xC );

	this->ProcessEvent ( pFnSetSpectateButtonPress, &SetSpectateButtonPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.SetJoinButtonPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         JoinButtonListener             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinDialog::SetJoinButtonPress ( struct FScriptDelegate JoinButtonListener )
{
	static UFunction* pFnSetJoinButtonPress = NULL;

	if ( ! pFnSetJoinButtonPress )
		pFnSetJoinButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 45924 ];

	UGFxUDKFrontEnd_JoinDialog_execSetJoinButtonPress_Parms SetJoinButtonPress_Parms;
	memcpy ( &SetJoinButtonPress_Parms.JoinButtonListener, &JoinButtonListener, 0xC );

	this->ProcessEvent ( pFnSetJoinButtonPress, &SetJoinButtonPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.PopulateServerInfo
// [0x00820002] 
// Parameters infos:
// class UOnlineGameSettings*     GameSettings                   ( CPF_Parm )

void UGFxUDKFrontEnd_JoinDialog::PopulateServerInfo ( class UOnlineGameSettings* GameSettings )
{
	static UFunction* pFnPopulateServerInfo = NULL;

	if ( ! pFnPopulateServerInfo )
		pFnPopulateServerInfo = (UFunction*) UObject::GObjObjects()->Data[ 45904 ];

	UGFxUDKFrontEnd_JoinDialog_execPopulateServerInfo_Parms PopulateServerInfo_Parms;
	PopulateServerInfo_Parms.GameSettings = GameSettings;

	this->ProcessEvent ( pFnPopulateServerInfo, &PopulateServerInfo_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_JoinDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45902 ];

	UGFxUDKFrontEnd_JoinDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_JoinDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45900 ];

	UGFxUDKFrontEnd_JoinDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_FilterDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45613 ];

	UGFxUDKFrontEnd_FilterDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.PushFilterListUpdate
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::PushFilterListUpdate ( )
{
	static UFunction* pFnPushFilterListUpdate = NULL;

	if ( ! pFnPushFilterListUpdate )
		pFnPushFilterListUpdate = (UFunction*) UObject::GObjObjects()->Data[ 45612 ];

	UGFxUDKFrontEnd_FilterDialog_execPushFilterListUpdate_Parms PushFilterListUpdate_Parms;

	this->ProcessEvent ( pFnPushFilterListUpdate, &PushFilterListUpdate_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.SetupListDataProvider
// [0x00820002] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::SetupListDataProvider ( )
{
	static UFunction* pFnSetupListDataProvider = NULL;

	if ( ! pFnSetupListDataProvider )
		pFnSetupListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 45604 ];

	UGFxUDKFrontEnd_FilterDialog_execSetupListDataProvider_Parms SetupListDataProvider_Parms;

	this->ProcessEvent ( pFnSetupListDataProvider, &SetupListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.SetFilterNetworkType
// [0x00024002] 
// Parameters infos:
// unsigned long                  bLAN                           ( CPF_Parm )
// unsigned long                  bSkipUIUpdate                  ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_FilterDialog::SetFilterNetworkType ( unsigned long bLAN, unsigned long bSkipUIUpdate )
{
	static UFunction* pFnSetFilterNetworkType = NULL;

	if ( ! pFnSetFilterNetworkType )
		pFnSetFilterNetworkType = (UFunction*) UObject::GObjObjects()->Data[ 45594 ];

	UGFxUDKFrontEnd_FilterDialog_execSetFilterNetworkType_Parms SetFilterNetworkType_Parms;
	SetFilterNetworkType_Parms.bLAN = bLAN;
	SetFilterNetworkType_Parms.bSkipUIUpdate = bSkipUIUpdate;

	this->ProcessEvent ( pFnSetFilterNetworkType, &SetFilterNetworkType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.OnFilterList_OptionChanged
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_FilterDialog::OnFilterList_OptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnFilterList_OptionChanged = NULL;

	if ( ! pFnOnFilterList_OptionChanged )
		pFnOnFilterList_OptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 45583 ];

	UGFxUDKFrontEnd_FilterDialog_execOnFilterList_OptionChanged_Parms OnFilterList_OptionChanged_Parms;
	memcpy ( &OnFilterList_OptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFilterList_OptionChanged, &OnFilterList_OptionChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.GetGameClassByFriendlyName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 FriendlyName                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_FilterDialog::GetGameClassByFriendlyName ( struct FString FriendlyName )
{
	static UFunction* pFnGetGameClassByFriendlyName = NULL;

	if ( ! pFnGetGameClassByFriendlyName )
		pFnGetGameClassByFriendlyName = (UFunction*) UObject::GObjObjects()->Data[ 45580 ];

	UGFxUDKFrontEnd_FilterDialog_execGetGameClassByFriendlyName_Parms GetGameClassByFriendlyName_Parms;
	memcpy ( &GetGameClassByFriendlyName_Parms.FriendlyName, &FriendlyName, 0xC );

	this->ProcessEvent ( pFnGetGameClassByFriendlyName, &GetGameClassByFriendlyName_Parms, NULL );

	return GetGameClassByFriendlyName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.ValidateServerType
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 45574 ];

	UGFxUDKFrontEnd_FilterDialog_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.SetBackButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_FilterDialog::SetBackButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetBackButtonListener = NULL;

	if ( ! pFnSetBackButtonListener )
		pFnSetBackButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 45572 ];

	UGFxUDKFrontEnd_FilterDialog_execSetBackButtonListener_Parms SetBackButtonListener_Parms;
	memcpy ( &SetBackButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetBackButtonListener, &SetBackButtonListener_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnableComponents              ( CPF_Parm )

void UGFxUDKFrontEnd_FilterDialog::DisableSubComponents ( unsigned long bEnableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45570 ];

	UGFxUDKFrontEnd_FilterDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bEnableComponents = bEnableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45569 ];

	UGFxUDKFrontEnd_FilterDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_FilterDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45567 ];

	UGFxUDKFrontEnd_FilterDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45566 ];

	UGFxUDKFrontEnd_FilterDialog_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_FilterDialog.OnSwitchedGameType
// [0x00120000] 
// Parameters infos:

void UGFxUDKFrontEnd_FilterDialog::OnSwitchedGameType ( )
{
	static UFunction* pFnOnSwitchedGameType = NULL;

	if ( ! pFnOnSwitchedGameType )
		pFnOnSwitchedGameType = (UFunction*) UObject::GObjObjects()->Data[ 45552 ];

	UGFxUDKFrontEnd_FilterDialog_execOnSwitchedGameType_Parms OnSwitchedGameType_Parms;

	this->ProcessEvent ( pFnOnSwitchedGameType, &OnSwitchedGameType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.SetAcceptButton_OnPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         EventListener                  ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_InfoDialog::SetAcceptButton_OnPress ( struct FScriptDelegate EventListener )
{
	static UFunction* pFnSetAcceptButton_OnPress = NULL;

	if ( ! pFnSetAcceptButton_OnPress )
		pFnSetAcceptButton_OnPress = (UFunction*) UObject::GObjObjects()->Data[ 45881 ];

	UGFxUDKFrontEnd_InfoDialog_execSetAcceptButton_OnPress_Parms SetAcceptButton_OnPress_Parms;
	memcpy ( &SetAcceptButton_OnPress_Parms.EventListener, &EventListener, 0xC );

	this->ProcessEvent ( pFnSetAcceptButton_OnPress, &SetAcceptButton_OnPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.SetBackButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_InfoDialog::SetBackButtonLabel ( struct FString Label )
{
	static UFunction* pFnSetBackButtonLabel = NULL;

	if ( ! pFnSetBackButtonLabel )
		pFnSetBackButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 45879 ];

	UGFxUDKFrontEnd_InfoDialog_execSetBackButtonLabel_Parms SetBackButtonLabel_Parms;
	memcpy ( &SetBackButtonLabel_Parms.Label, &Label, 0xC );

	this->ProcessEvent ( pFnSetBackButtonLabel, &SetBackButtonLabel_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.SetAcceptButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_InfoDialog::SetAcceptButtonLabel ( struct FString Label )
{
	static UFunction* pFnSetAcceptButtonLabel = NULL;

	if ( ! pFnSetAcceptButtonLabel )
		pFnSetAcceptButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 45877 ];

	UGFxUDKFrontEnd_InfoDialog_execSetAcceptButtonLabel_Parms SetAcceptButtonLabel_Parms;
	memcpy ( &SetAcceptButtonLabel_Parms.Label, &Label, 0xC );

	this->ProcessEvent ( pFnSetAcceptButtonLabel, &SetAcceptButtonLabel_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.SetInfo
// [0x00020002] 
// Parameters infos:
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_InfoDialog::SetInfo ( struct FString Info )
{
	static UFunction* pFnSetInfo = NULL;

	if ( ! pFnSetInfo )
		pFnSetInfo = (UFunction*) UObject::GObjObjects()->Data[ 45875 ];

	UGFxUDKFrontEnd_InfoDialog_execSetInfo_Parms SetInfo_Parms;
	memcpy ( &SetInfo_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSetInfo, &SetInfo_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.SetTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_InfoDialog::SetTitle ( struct FString Title )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 45873 ];

	UGFxUDKFrontEnd_InfoDialog_execSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_InfoDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45871 ];

	UGFxUDKFrontEnd_InfoDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_InfoDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45869 ];

	UGFxUDKFrontEnd_InfoDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InfoDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_InfoDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45868 ];

	UGFxUDKFrontEnd_InfoDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnGameTypeChanged
// [0x00024002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnGameTypeChanged ( int PlayerIndex )
{
	static UFunction* pFnOnGameTypeChanged = NULL;

	if ( ! pFnOnGameTypeChanged )
		pFnOnGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 46099 ];

	UGFxUDKFrontEnd_JoinGame_execOnGameTypeChanged_Parms OnGameTypeChanged_Parms;
	OnGameTypeChanged_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGameTypeChanged, &OnGameTypeChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.ForceLANOption
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::ForceLANOption ( )
{
	static UFunction* pFnForceLANOption = NULL;

	if ( ! pFnForceLANOption )
		pFnForceLANOption = (UFunction*) UObject::GObjObjects()->Data[ 45579 ];

	UGFxUDKFrontEnd_JoinGame_execForceLANOption_Parms ForceLANOption_Parms;

	this->ProcessEvent ( pFnForceLANOption, &ForceLANOption_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnFilterButtonInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool UGFxUDKFrontEnd_JoinGame::OnFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnOnFilterButtonInput = NULL;

	if ( ! pFnOnFilterButtonInput )
		pFnOnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 45351 ];

	UGFxUDKFrontEnd_JoinGame_execOnFilterButtonInput_Parms OnFilterButtonInput_Parms;
	OnFilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &OnFilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	OnFilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnOnFilterButtonInput, &OnFilterButtonInput_Parms, NULL );

	return OnFilterButtonInput_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_JoinGame::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46079 ];

	UGFxUDKFrontEnd_JoinGame_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.NotifyGameTypeChanged
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::NotifyGameTypeChanged ( )
{
	static UFunction* pFnNotifyGameTypeChanged = NULL;

	if ( ! pFnNotifyGameTypeChanged )
		pFnNotifyGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 46078 ];

	UGFxUDKFrontEnd_JoinGame_execNotifyGameTypeChanged_Parms NotifyGameTypeChanged_Parms;

	this->ProcessEvent ( pFnNotifyGameTypeChanged, &NotifyGameTypeChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnCancelSearchComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnCancelSearchComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnCancelSearchComplete = NULL;

	if ( ! pFnOnCancelSearchComplete )
		pFnOnCancelSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 46074 ];

	UGFxUDKFrontEnd_JoinGame_execOnCancelSearchComplete_Parms OnCancelSearchComplete_Parms;
	OnCancelSearchComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnCancelSearchComplete, &OnCancelSearchComplete_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.SetRefreshing
// [0x00020002] 
// Parameters infos:
// unsigned long                  IsRefreshing                   ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::SetRefreshing ( unsigned long IsRefreshing )
{
	static UFunction* pFnSetRefreshing = NULL;

	if ( ! pFnSetRefreshing )
		pFnSetRefreshing = (UFunction*) UObject::GObjObjects()->Data[ 46071 ];

	UGFxUDKFrontEnd_JoinGame_execSetRefreshing_Parms SetRefreshing_Parms;
	SetRefreshing_Parms.IsRefreshing = IsRefreshing;

	this->ProcessEvent ( pFnSetRefreshing, &SetRefreshing_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.CancelQuery
// [0x00024002] 
// Parameters infos:
// unsigned char                  DesiredCancelAction            ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::CancelQuery ( unsigned char DesiredCancelAction )
{
	static UFunction* pFnCancelQuery = NULL;

	if ( ! pFnCancelQuery )
		pFnCancelQuery = (UFunction*) UObject::GObjObjects()->Data[ 46069 ];

	UGFxUDKFrontEnd_JoinGame_execCancelQuery_Parms CancelQuery_Parms;
	CancelQuery_Parms.DesiredCancelAction = DesiredCancelAction;

	this->ProcessEvent ( pFnCancelQuery, &CancelQuery_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.AllowJoinServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxUDKFrontEnd_JoinGame::AllowJoinServer ( )
{
	static UFunction* pFnAllowJoinServer = NULL;

	if ( ! pFnAllowJoinServer )
		pFnAllowJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 46066 ];

	UGFxUDKFrontEnd_JoinGame_execAllowJoinServer_Parms AllowJoinServer_Parms;

	this->ProcessEvent ( pFnAllowJoinServer, &AllowJoinServer_Parms, NULL );

	return AllowJoinServer_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnJoinGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bSuccessful                    ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnJoinGameComplete ( struct FName SessionName, unsigned long bSuccessful )
{
	static UFunction* pFnOnJoinGameComplete = NULL;

	if ( ! pFnOnJoinGameComplete )
		pFnOnJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 46059 ];

	UGFxUDKFrontEnd_JoinGame_execOnJoinGameComplete_Parms OnJoinGameComplete_Parms;
	memcpy ( &OnJoinGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnJoinGameComplete_Parms.bSuccessful = bSuccessful;

	this->ProcessEvent ( pFnOnJoinGameComplete, &OnJoinGameComplete_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.ProcessJoin
// [0x00840003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::ProcessJoin ( )
{
	static UFunction* pFnProcessJoin = NULL;

	if ( ! pFnProcessJoin )
		pFnProcessJoin = (UFunction*) UObject::GObjObjects()->Data[ 45990 ];

	UGFxUDKFrontEnd_JoinGame_execProcessJoin_Parms ProcessJoin_Parms;

	this->ProcessEvent ( pFnProcessJoin, &ProcessJoin_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.JoinServer
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::JoinServer ( )
{
	static UFunction* pFnJoinServer = NULL;

	if ( ! pFnJoinServer )
		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 46053 ];

	UGFxUDKFrontEnd_JoinGame_execJoinServer_Parms JoinServer_Parms;

	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.JoinServerClikListener
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::JoinServerClikListener ( struct FEventData ev )
{
	static UFunction* pFnJoinServerClikListener = NULL;

	if ( ! pFnJoinServerClikListener )
		pFnJoinServerClikListener = (UFunction*) UObject::GObjObjects()->Data[ 46051 ];

	UGFxUDKFrontEnd_JoinGame_execJoinServerClikListener_Parms JoinServerClikListener_Parms;
	memcpy ( &JoinServerClikListener_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnJoinServerClikListener, &JoinServerClikListener_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.SpectateServer
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::SpectateServer ( struct FEventData ev )
{
	static UFunction* pFnSpectateServer = NULL;

	if ( ! pFnSpectateServer )
		pFnSpectateServer = (UFunction*) UObject::GObjObjects()->Data[ 46049 ];

	UGFxUDKFrontEnd_JoinGame_execSpectateServer_Parms SpectateServer_Parms;
	memcpy ( &SpectateServer_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSpectateServer, &SpectateServer_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnServerListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnServerListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerListItemPress = NULL;

	if ( ! pFnOnServerListItemPress )
		pFnOnServerListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 46042 ];

	UGFxUDKFrontEnd_JoinGame_execOnServerListItemPress_Parms OnServerListItemPress_Parms;
	memcpy ( &OnServerListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerListItemPress, &OnServerListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnPingHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnPingHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPingHeaderPress = NULL;

	if ( ! pFnOnPingHeaderPress )
		pFnOnPingHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 46040 ];

	UGFxUDKFrontEnd_JoinGame_execOnPingHeaderPress_Parms OnPingHeaderPress_Parms;
	memcpy ( &OnPingHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPingHeaderPress, &OnPingHeaderPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnPlayersHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnPlayersHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPlayersHeaderPress = NULL;

	if ( ! pFnOnPlayersHeaderPress )
		pFnOnPlayersHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 46038 ];

	UGFxUDKFrontEnd_JoinGame_execOnPlayersHeaderPress_Parms OnPlayersHeaderPress_Parms;
	memcpy ( &OnPlayersHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPlayersHeaderPress, &OnPlayersHeaderPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnMapHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnMapHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnMapHeaderPress = NULL;

	if ( ! pFnOnMapHeaderPress )
		pFnOnMapHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 46036 ];

	UGFxUDKFrontEnd_JoinGame_execOnMapHeaderPress_Parms OnMapHeaderPress_Parms;
	memcpy ( &OnMapHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnMapHeaderPress, &OnMapHeaderPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnServerHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnServerHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerHeaderPress = NULL;

	if ( ! pFnOnServerHeaderPress )
		pFnOnServerHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 46034 ];

	UGFxUDKFrontEnd_JoinGame_execOnServerHeaderPress_Parms OnServerHeaderPress_Parms;
	memcpy ( &OnServerHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerHeaderPress, &OnServerHeaderPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.UpdateListDataProvider
// [0x00820002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46023 ];

	UGFxUDKFrontEnd_JoinGame_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.ServerFilterChangedGameType
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::ServerFilterChangedGameType ( )
{
	static UFunction* pFnServerFilterChangedGameType = NULL;

	if ( ! pFnServerFilterChangedGameType )
		pFnServerFilterChangedGameType = (UFunction*) UObject::GObjObjects()->Data[ 46022 ];

	UGFxUDKFrontEnd_JoinGame_execServerFilterChangedGameType_Parms ServerFilterChangedGameType_Parms;

	this->ProcessEvent ( pFnServerFilterChangedGameType, &ServerFilterChangedGameType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnFilterButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnFilterButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnFilterButtonPress = NULL;

	if ( ! pFnOnFilterButtonPress )
		pFnOnFilterButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 46019 ];

	UGFxUDKFrontEnd_JoinGame_execOnFilterButtonPress_Parms OnFilterButtonPress_Parms;
	memcpy ( &OnFilterButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFilterButtonPress, &OnFilterButtonPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnRefreshButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnRefreshButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnRefreshButtonPress = NULL;

	if ( ! pFnOnRefreshButtonPress )
		pFnOnRefreshButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 46017 ];

	UGFxUDKFrontEnd_JoinGame_execOnRefreshButtonPress_Parms OnRefreshButtonPress_Parms;
	memcpy ( &OnRefreshButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnRefreshButtonPress, &OnRefreshButtonPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.GetDesiredMatchType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxUDKFrontEnd_JoinGame::GetDesiredMatchType ( )
{
	static UFunction* pFnGetDesiredMatchType = NULL;

	if ( ! pFnGetDesiredMatchType )
		pFnGetDesiredMatchType = (UFunction*) UObject::GObjObjects()->Data[ 46015 ];

	UGFxUDKFrontEnd_JoinGame_execGetDesiredMatchType_Parms GetDesiredMatchType_Parms;

	this->ProcessEvent ( pFnGetDesiredMatchType, &GetDesiredMatchType_Parms, NULL );

	return GetDesiredMatchType_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnFindOnlineGamesComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnFindOnlineGamesComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesComplete = NULL;

	if ( ! pFnOnFindOnlineGamesComplete )
		pFnOnFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 46011 ];

	UGFxUDKFrontEnd_JoinGame_execOnFindOnlineGamesComplete_Parms OnFindOnlineGamesComplete_Parms;
	OnFindOnlineGamesComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesComplete, &OnFindOnlineGamesComplete_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnFindOnlineGamesCompleteDelegate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnFindOnlineGamesCompleteDelegate ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnOnFindOnlineGamesCompleteDelegate )
		pFnOnFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 46008 ];

	UGFxUDKFrontEnd_JoinGame_execOnFindOnlineGamesCompleteDelegate_Parms OnFindOnlineGamesCompleteDelegate_Parms;
	OnFindOnlineGamesCompleteDelegate_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesCompleteDelegate, &OnFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.SubmitServerListQuery
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::SubmitServerListQuery ( int PlayerIndex )
{
	static UFunction* pFnSubmitServerListQuery = NULL;

	if ( ! pFnSubmitServerListQuery )
		pFnSubmitServerListQuery = (UFunction*) UObject::GObjObjects()->Data[ 46006 ];

	UGFxUDKFrontEnd_JoinGame_execSubmitServerListQuery_Parms SubmitServerListQuery_Parms;
	SubmitServerListQuery_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSubmitServerListQuery, &SubmitServerListQuery_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.RefreshServerList
// [0x00024002] 
// Parameters infos:
// int                            InPlayerIndex                  ( CPF_Parm )
// int                            MaxResults                     ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::RefreshServerList ( int InPlayerIndex, int MaxResults )
{
	static UFunction* pFnRefreshServerList = NULL;

	if ( ! pFnRefreshServerList )
		pFnRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 46001 ];

	UGFxUDKFrontEnd_JoinGame_execRefreshServerList_Parms RefreshServerList_Parms;
	RefreshServerList_Parms.InPlayerIndex = InPlayerIndex;
	RefreshServerList_Parms.MaxResults = MaxResults;

	this->ProcessEvent ( pFnRefreshServerList, &RefreshServerList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.BuildJoinURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ResolvedConnectionURL          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_JoinGame::BuildJoinURL ( struct FString ResolvedConnectionURL )
{
	static UFunction* pFnBuildJoinURL = NULL;

	if ( ! pFnBuildJoinURL )
		pFnBuildJoinURL = (UFunction*) UObject::GObjObjects()->Data[ 45996 ];

	UGFxUDKFrontEnd_JoinGame_execBuildJoinURL_Parms BuildJoinURL_Parms;
	memcpy ( &BuildJoinURL_Parms.ResolvedConnectionURL, &ResolvedConnectionURL, 0xC );

	this->ProcessEvent ( pFnBuildJoinURL, &BuildJoinURL_Parms, NULL );

	return BuildJoinURL_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.UpdateServerCount
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::UpdateServerCount ( )
{
	static UFunction* pFnUpdateServerCount = NULL;

	if ( ! pFnUpdateServerCount )
		pFnUpdateServerCount = (UFunction*) UObject::GObjObjects()->Data[ 45991 ];

	UGFxUDKFrontEnd_JoinGame_execUpdateServerCount_Parms UpdateServerCount_Parms;

	this->ProcessEvent ( pFnUpdateServerCount, &UpdateServerCount_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnPasswordDialog_OK
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_JoinGame::OnPasswordDialog_OK ( struct FEventData ev )
{
	static UFunction* pFnOnPasswordDialog_OK = NULL;

	if ( ! pFnOnPasswordDialog_OK )
		pFnOnPasswordDialog_OK = (UFunction*) UObject::GObjObjects()->Data[ 45984 ];

	UGFxUDKFrontEnd_JoinGame_execOnPasswordDialog_OK_Parms OnPasswordDialog_OK_Parms;
	memcpy ( &OnPasswordDialog_OK_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPasswordDialog_OK, &OnPasswordDialog_OK_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.StripInvalidPasswordCharacters
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 PasswordString                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InvalidChars                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_JoinGame::StripInvalidPasswordCharacters ( struct FString PasswordString, struct FString InvalidChars )
{
	static UFunction* pFnStripInvalidPasswordCharacters = NULL;

	if ( ! pFnStripInvalidPasswordCharacters )
		pFnStripInvalidPasswordCharacters = (UFunction*) UObject::GObjObjects()->Data[ 45979 ];

	UGFxUDKFrontEnd_JoinGame_execStripInvalidPasswordCharacters_Parms StripInvalidPasswordCharacters_Parms;
	memcpy ( &StripInvalidPasswordCharacters_Parms.PasswordString, &PasswordString, 0xC );
	memcpy ( &StripInvalidPasswordCharacters_Parms.InvalidChars, &InvalidChars, 0xC );

	this->ProcessEvent ( pFnStripInvalidPasswordCharacters, &StripInvalidPasswordCharacters_Parms, NULL );

	return StripInvalidPasswordCharacters_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.PromptForServerPassword
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::PromptForServerPassword ( )
{
	static UFunction* pFnPromptForServerPassword = NULL;

	if ( ! pFnPromptForServerPassword )
		pFnPromptForServerPassword = (UFunction*) UObject::GObjObjects()->Data[ 45977 ];

	UGFxUDKFrontEnd_JoinGame_execPromptForServerPassword_Parms PromptForServerPassword_Parms;

	this->ProcessEvent ( pFnPromptForServerPassword, &PromptForServerPassword_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.UpdateButtonStates
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::UpdateButtonStates ( )
{
	static UFunction* pFnUpdateButtonStates = NULL;

	if ( ! pFnUpdateButtonStates )
		pFnUpdateButtonStates = (UFunction*) UObject::GObjObjects()->Data[ 45975 ];

	UGFxUDKFrontEnd_JoinGame_execUpdateButtonStates_Parms UpdateButtonStates_Parms;

	this->ProcessEvent ( pFnUpdateButtonStates, &UpdateButtonStates_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.ConditionalRefreshServerList
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::ConditionalRefreshServerList ( int PlayerIndex )
{
	static UFunction* pFnConditionalRefreshServerList = NULL;

	if ( ! pFnConditionalRefreshServerList )
		pFnConditionalRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 45971 ];

	UGFxUDKFrontEnd_JoinGame_execConditionalRefreshServerList_Parms ConditionalRefreshServerList_Parms;
	ConditionalRefreshServerList_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConditionalRefreshServerList, &ConditionalRefreshServerList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.UpdateFilterButton
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::UpdateFilterButton ( )
{
	static UFunction* pFnUpdateFilterButton = NULL;

	if ( ! pFnUpdateFilterButton )
		pFnUpdateFilterButton = (UFunction*) UObject::GObjObjects()->Data[ 45952 ];

	UGFxUDKFrontEnd_JoinGame_execUpdateFilterButton_Parms UpdateFilterButton_Parms;

	this->ProcessEvent ( pFnUpdateFilterButton, &UpdateFilterButton_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.Cleanup
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 45963 ];

	UGFxUDKFrontEnd_JoinGame_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.ValidateServerType
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 45960 ];

	UGFxUDKFrontEnd_JoinGame_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45957 ];

	UGFxUDKFrontEnd_JoinGame_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnViewClosed
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 45956 ];

	UGFxUDKFrontEnd_JoinGame_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_JoinGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45953 ];

	UGFxUDKFrontEnd_JoinGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 45943 ];

	UGFxUDKFrontEnd_JoinGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_JoinGame.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_JoinGame::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45937 ];

	UGFxUDKFrontEnd_JoinGame_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Screen.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_Screen::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45634 ];

	UGFxUDKFrontEnd_Screen_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Screen.UpdateHelpButtonImages
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Screen::UpdateHelpButtonImages ( )
{
	static UFunction* pFnUpdateHelpButtonImages = NULL;

	if ( ! pFnUpdateHelpButtonImages )
		pFnUpdateHelpButtonImages = (UFunction*) UObject::GObjObjects()->Data[ 45633 ];

	UGFxUDKFrontEnd_Screen_execUpdateHelpButtonImages_Parms UpdateHelpButtonImages_Parms;

	this->ProcessEvent ( pFnUpdateHelpButtonImages, &UpdateHelpButtonImages_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Screen.FocusIn_BackButton
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Screen::FocusIn_BackButton ( struct FEventData ev )
{
	static UFunction* pFnFocusIn_BackButton = NULL;

	if ( ! pFnFocusIn_BackButton )
		pFnFocusIn_BackButton = (UFunction*) UObject::GObjObjects()->Data[ 45631 ];

	UGFxUDKFrontEnd_Screen_execFocusIn_BackButton_Parms FocusIn_BackButton_Parms;
	memcpy ( &FocusIn_BackButton_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnFocusIn_BackButton, &FocusIn_BackButton_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.FindControlByUTClassName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  UTUIControlClass               ( CPF_Parm )

struct FString UGFxUDKFrontEnd_ServerSettings::FindControlByUTClassName ( unsigned char UTUIControlClass )
{
	static UFunction* pFnFindControlByUTClassName = NULL;

	if ( ! pFnFindControlByUTClassName )
		pFnFindControlByUTClassName = (UFunction*) UObject::GObjObjects()->Data[ 46622 ];

	UGFxUDKFrontEnd_ServerSettings_execFindControlByUTClassName_Parms FindControlByUTClassName_Parms;
	FindControlByUTClassName_Parms.UTUIControlClass = UTUIControlClass;

	this->ProcessEvent ( pFnFindControlByUTClassName, &FindControlByUTClassName_Parms, NULL );

	return FindControlByUTClassName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.PopulateOptionDataProviderForIndex
// [0x00420002] 
// Parameters infos:
// int                            Index                          ( CPF_Const | CPF_Parm )
// class UGFxObject*              OutDataProvider                ( CPF_Parm | CPF_OutParm )
// struct FString                 OutDefaultValue                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            OutDefaultIndex                ( CPF_Parm | CPF_OutParm )

void UGFxUDKFrontEnd_ServerSettings::PopulateOptionDataProviderForIndex ( int Index, class UGFxObject** OutDataProvider, struct FString* OutDefaultValue, int* OutDefaultIndex )
{
	static UFunction* pFnPopulateOptionDataProviderForIndex = NULL;

	if ( ! pFnPopulateOptionDataProviderForIndex )
		pFnPopulateOptionDataProviderForIndex = (UFunction*) UObject::GObjObjects()->Data[ 46612 ];

	UGFxUDKFrontEnd_ServerSettings_execPopulateOptionDataProviderForIndex_Parms PopulateOptionDataProviderForIndex_Parms;
	PopulateOptionDataProviderForIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnPopulateOptionDataProviderForIndex, &PopulateOptionDataProviderForIndex_Parms, NULL );

	if ( OutDataProvider )
		*OutDataProvider = PopulateOptionDataProviderForIndex_Parms.OutDataProvider;

	if ( OutDefaultValue )
		memcpy ( OutDefaultValue, &PopulateOptionDataProviderForIndex_Parms.OutDefaultValue, 0xC );

	if ( OutDefaultIndex )
		*OutDefaultIndex = PopulateOptionDataProviderForIndex_Parms.OutDefaultIndex;
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_ServerSettings::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46592 ];

	UGFxUDKFrontEnd_ServerSettings_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.SaveState
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_ServerSettings::SaveState ( )
{
	static UFunction* pFnSaveState = NULL;

	if ( ! pFnSaveState )
		pFnSaveState = (UFunction*) UObject::GObjObjects()->Data[ 46578 ];

	UGFxUDKFrontEnd_ServerSettings_execSaveState_Parms SaveState_Parms;

	this->ProcessEvent ( pFnSaveState, &SaveState_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.OnOptionChanged
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_ServerSettings::OnOptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnOptionChanged = NULL;

	if ( ! pFnOnOptionChanged )
		pFnOnOptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 46573 ];

	UGFxUDKFrontEnd_ServerSettings_execOnOptionChanged_Parms OnOptionChanged_Parms;
	memcpy ( &OnOptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnOptionChanged, &OnOptionChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_ServerSettings.SetSelectedOptionSet
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_ServerSettings::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 46572 ];

	UGFxUDKFrontEnd_ServerSettings_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_SettingsBase::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46564 ];

	UGFxUDKFrontEnd_SettingsBase_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.FindPropertyIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InPropertyName                 ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

int UGFxUDKFrontEnd_SettingsBase::FindPropertyIndexByName ( struct FString InPropertyName )
{
	static UFunction* pFnFindPropertyIndexByName = NULL;

	if ( ! pFnFindPropertyIndexByName )
		pFnFindPropertyIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 46558 ];

	UGFxUDKFrontEnd_SettingsBase_execFindPropertyIndexByName_Parms FindPropertyIndexByName_Parms;
	memcpy ( &FindPropertyIndexByName_Parms.InPropertyName, &InPropertyName, 0xC );

	this->ProcessEvent ( pFnFindPropertyIndexByName, &FindPropertyIndexByName_Parms, NULL );

	return FindPropertyIndexByName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.Select_BackImpl
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::Select_BackImpl ( )
{
	static UFunction* pFnSelect_BackImpl = NULL;

	if ( ! pFnSelect_BackImpl )
		pFnSelect_BackImpl = (UFunction*) UObject::GObjObjects()->Data[ 46557 ];

	UGFxUDKFrontEnd_SettingsBase_execSelect_BackImpl_Parms Select_BackImpl_Parms;

	this->ProcessEvent ( pFnSelect_BackImpl, &Select_BackImpl_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 46556 ];

	UGFxUDKFrontEnd_SettingsBase_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.FindLocalizedSettingIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InSettingName                  ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

int UGFxUDKFrontEnd_SettingsBase::FindLocalizedSettingIndexByName ( struct FString InSettingName )
{
	static UFunction* pFnFindLocalizedSettingIndexByName = NULL;

	if ( ! pFnFindLocalizedSettingIndexByName )
		pFnFindLocalizedSettingIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 46550 ];

	UGFxUDKFrontEnd_SettingsBase_execFindLocalizedSettingIndexByName_Parms FindLocalizedSettingIndexByName_Parms;
	memcpy ( &FindLocalizedSettingIndexByName_Parms.InSettingName, &InSettingName, 0xC );

	this->ProcessEvent ( pFnFindLocalizedSettingIndexByName, &FindLocalizedSettingIndexByName_Parms, NULL );

	return FindLocalizedSettingIndexByName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.UpdateListDataProvider
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46549 ];

	UGFxUDKFrontEnd_SettingsBase_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 46546 ];

	UGFxUDKFrontEnd_SettingsBase_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnOptionChanged
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_SettingsBase::OnOptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnOptionChanged = NULL;

	if ( ! pFnOnOptionChanged )
		pFnOnOptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 46544 ];

	UGFxUDKFrontEnd_SettingsBase_execOnOptionChanged_Parms OnOptionChanged_Parms;
	memcpy ( &OnOptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnOptionChanged, &OnOptionChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_SettingsBase::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 46542 ];

	UGFxUDKFrontEnd_SettingsBase_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxUDKFrontEnd_SettingsBase::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 46540 ];

	UGFxUDKFrontEnd_SettingsBase_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.SaveState
// [0x00820002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::SaveState ( )
{
	static UFunction* pFnSaveState = NULL;

	if ( ! pFnSaveState )
		pFnSaveState = (UFunction*) UObject::GObjObjects()->Data[ 46532 ];

	UGFxUDKFrontEnd_SettingsBase_execSaveState_Parms SaveState_Parms;

	this->ProcessEvent ( pFnSaveState, &SaveState_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_SettingsBase::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 46530 ];

	UGFxUDKFrontEnd_SettingsBase_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.LoadDataFromStore
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::LoadDataFromStore ( )
{
	static UFunction* pFnLoadDataFromStore = NULL;

	if ( ! pFnLoadDataFromStore )
		pFnLoadDataFromStore = (UFunction*) UObject::GObjObjects()->Data[ 46520 ];

	UGFxUDKFrontEnd_SettingsBase_execLoadDataFromStore_Parms LoadDataFromStore_Parms;

	this->ProcessEvent ( pFnLoadDataFromStore, &LoadDataFromStore_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.SetSelectedOptionSet
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 46519 ];

	UGFxUDKFrontEnd_SettingsBase_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_SettingsBase::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46517 ];

	UGFxUDKFrontEnd_SettingsBase_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_SettingsBase::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46515 ];

	UGFxUDKFrontEnd_SettingsBase_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 46514 ];

	UGFxUDKFrontEnd_SettingsBase_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_SettingsBase.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_SettingsBase::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 46513 ];

	UGFxUDKFrontEnd_SettingsBase_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Settings.PopulateOptionDataProviderForIndex
// [0x00420002] 
// Parameters infos:
// int                            Index                          ( CPF_Const | CPF_Parm )
// class UGFxObject*              OutDataProvider                ( CPF_Parm | CPF_OutParm )
// struct FString                 OutDefaultValue                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            OutDefaultIndex                ( CPF_Parm | CPF_OutParm )

void UGFxUDKFrontEnd_Settings::PopulateOptionDataProviderForIndex ( int Index, class UGFxObject** OutDataProvider, struct FString* OutDefaultValue, int* OutDefaultIndex )
{
	static UFunction* pFnPopulateOptionDataProviderForIndex = NULL;

	if ( ! pFnPopulateOptionDataProviderForIndex )
		pFnPopulateOptionDataProviderForIndex = (UFunction*) UObject::GObjObjects()->Data[ 46635 ];

	UGFxUDKFrontEnd_Settings_execPopulateOptionDataProviderForIndex_Parms PopulateOptionDataProviderForIndex_Parms;
	PopulateOptionDataProviderForIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnPopulateOptionDataProviderForIndex, &PopulateOptionDataProviderForIndex_Parms, NULL );

	if ( OutDataProvider )
		*OutDataProvider = PopulateOptionDataProviderForIndex_Parms.OutDataProvider;

	if ( OutDefaultValue )
		memcpy ( OutDefaultValue, &PopulateOptionDataProviderForIndex_Parms.OutDefaultValue, 0xC );

	if ( OutDefaultIndex )
		*OutDefaultIndex = PopulateOptionDataProviderForIndex_Parms.OutDefaultIndex;
};

// Function UTGame.GFxUDKFrontEnd_Settings.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Settings::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46628 ];

	UGFxUDKFrontEnd_Settings_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Settings.SetSelectedOptionSet
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Settings::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 46626 ];

	UGFxUDKFrontEnd_Settings_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_Mutators::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46478 ];

	UGFxUDKFrontEnd_Mutators_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Mutators.SetConfigList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ConfigList                     ( CPF_Parm )

void UGFxUDKFrontEnd_Mutators::SetConfigList ( class UGFxObject* ConfigList )
{
	static UFunction* pFnSetConfigList = NULL;

	if ( ! pFnSetConfigList )
		pFnSetConfigList = (UFunction*) UObject::GObjObjects()->Data[ 46476 ];

	UGFxUDKFrontEnd_Mutators_execSetConfigList_Parms SetConfigList_Parms;
	SetConfigList_Parms.ConfigList = ConfigList;

	this->ProcessEvent ( pFnSetConfigList, &SetConfigList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxUDKFrontEnd_Mutators::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 46474 ];

	UGFxUDKFrontEnd_Mutators_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.IsCurrentMutatorConfigurable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxUDKFrontEnd_Mutators::IsCurrentMutatorConfigurable ( )
{
	static UFunction* pFnIsCurrentMutatorConfigurable = NULL;

	if ( ! pFnIsCurrentMutatorConfigurable )
		pFnIsCurrentMutatorConfigurable = (UFunction*) UObject::GObjObjects()->Data[ 46472 ];

	UGFxUDKFrontEnd_Mutators_execIsCurrentMutatorConfigurable_Parms IsCurrentMutatorConfigurable_Parms;

	this->ProcessEvent ( pFnIsCurrentMutatorConfigurable, &IsCurrentMutatorConfigurable_Parms, NULL );

	return IsCurrentMutatorConfigurable_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Mutators.ApplyGameModeFilter
// [0x00022002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::ApplyGameModeFilter ( )
{
	static UFunction* pFnApplyGameModeFilter = NULL;

	if ( ! pFnApplyGameModeFilter )
		pFnApplyGameModeFilter = (UFunction*) UObject::GObjObjects()->Data[ 46464 ];

	UGFxUDKFrontEnd_Mutators_execApplyGameModeFilter_Parms ApplyGameModeFilter_Parms;

	this->ProcessEvent ( pFnApplyGameModeFilter, &ApplyGameModeFilter_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.GetNumEnabledMutators
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxUDKFrontEnd_Mutators::GetNumEnabledMutators ( )
{
	static UFunction* pFnGetNumEnabledMutators = NULL;

	if ( ! pFnGetNumEnabledMutators )
		pFnGetNumEnabledMutators = (UFunction*) UObject::GObjObjects()->Data[ 45773 ];

	UGFxUDKFrontEnd_Mutators_execGetNumEnabledMutators_Parms GetNumEnabledMutators_Parms;

	this->ProcessEvent ( pFnGetNumEnabledMutators, &GetNumEnabledMutators_Parms, NULL );

	return GetNumEnabledMutators_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Mutators.GetEnabledMutators
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_Mutators::GetEnabledMutators ( )
{
	static UFunction* pFnGetEnabledMutators = NULL;

	if ( ! pFnGetEnabledMutators )
		pFnGetEnabledMutators = (UFunction*) UObject::GObjObjects()->Data[ 45855 ];

	UGFxUDKFrontEnd_Mutators_execGetEnabledMutators_Parms GetEnabledMutators_Parms;

	this->ProcessEvent ( pFnGetEnabledMutators, &GetEnabledMutators_Parms, NULL );

	return GetEnabledMutators_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Mutators.AddMutatorAndFilterList
// [0x00020002] 
// Parameters infos:
// int                            NewMutator                     ( CPF_Parm )

void UGFxUDKFrontEnd_Mutators::AddMutatorAndFilterList ( int NewMutator )
{
	static UFunction* pFnAddMutatorAndFilterList = NULL;

	if ( ! pFnAddMutatorAndFilterList )
		pFnAddMutatorAndFilterList = (UFunction*) UObject::GObjObjects()->Data[ 46442 ];

	UGFxUDKFrontEnd_Mutators_execAddMutatorAndFilterList_Parms AddMutatorAndFilterList_Parms;
	AddMutatorAndFilterList_Parms.NewMutator = NewMutator;

	this->ProcessEvent ( pFnAddMutatorAndFilterList, &AddMutatorAndFilterList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.SetMutatorEnabled
// [0x00020002] 
// Parameters infos:
// int                            MutatorId                      ( CPF_Parm )

void UGFxUDKFrontEnd_Mutators::SetMutatorEnabled ( int MutatorId )
{
	static UFunction* pFnSetMutatorEnabled = NULL;

	if ( ! pFnSetMutatorEnabled )
		pFnSetMutatorEnabled = (UFunction*) UObject::GObjObjects()->Data[ 46440 ];

	UGFxUDKFrontEnd_Mutators_execSetMutatorEnabled_Parms SetMutatorEnabled_Parms;
	SetMutatorEnabled_Parms.MutatorId = MutatorId;

	this->ProcessEvent ( pFnSetMutatorEnabled, &SetMutatorEnabled_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.UpdateConfigListDataProvider
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::UpdateConfigListDataProvider ( )
{
	static UFunction* pFnUpdateConfigListDataProvider = NULL;

	if ( ! pFnUpdateConfigListDataProvider )
		pFnUpdateConfigListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46439 ];

	UGFxUDKFrontEnd_Mutators_execUpdateConfigListDataProvider_Parms UpdateConfigListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateConfigListDataProvider, &UpdateConfigListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46430 ];

	UGFxUDKFrontEnd_Mutators_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 46425 ];

	UGFxUDKFrontEnd_Mutators_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Mutators::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 46423 ];

	UGFxUDKFrontEnd_Mutators_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.FindMutatorIndexByClass
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MutatorClass                   ( CPF_Parm | CPF_NeedCtorLink )

unsigned char UGFxUDKFrontEnd_Mutators::FindMutatorIndexByClass ( struct FString MutatorClass )
{
	static UFunction* pFnFindMutatorIndexByClass = NULL;

	if ( ! pFnFindMutatorIndexByClass )
		pFnFindMutatorIndexByClass = (UFunction*) UObject::GObjObjects()->Data[ 46419 ];

	UGFxUDKFrontEnd_Mutators_execFindMutatorIndexByClass_Parms FindMutatorIndexByClass_Parms;
	memcpy ( &FindMutatorIndexByClass_Parms.MutatorClass, &MutatorClass, 0xC );

	this->ProcessEvent ( pFnFindMutatorIndexByClass, &FindMutatorIndexByClass_Parms, NULL );

	return FindMutatorIndexByClass_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Mutators.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Mutators::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 46414 ];

	UGFxUDKFrontEnd_Mutators_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46413 ];

	UGFxUDKFrontEnd_Mutators_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_Mutators::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46411 ];

	UGFxUDKFrontEnd_Mutators_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_Mutators::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46409 ];

	UGFxUDKFrontEnd_Mutators_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.SortAllMutatorsBasedOnOfficialArray
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::SortAllMutatorsBasedOnOfficialArray ( )
{
	static UFunction* pFnSortAllMutatorsBasedOnOfficialArray = NULL;

	if ( ! pFnSortAllMutatorsBasedOnOfficialArray )
		pFnSortAllMutatorsBasedOnOfficialArray = (UFunction*) UObject::GObjObjects()->Data[ 46398 ];

	UGFxUDKFrontEnd_Mutators_execSortAllMutatorsBasedOnOfficialArray_Parms SortAllMutatorsBasedOnOfficialArray_Parms;

	this->ProcessEvent ( pFnSortAllMutatorsBasedOnOfficialArray, &SortAllMutatorsBasedOnOfficialArray_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 46397 ];

	UGFxUDKFrontEnd_Mutators_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Mutators.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Mutators::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 46396 ];

	UGFxUDKFrontEnd_Mutators_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_GameMode::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45703 ];

	UGFxUDKFrontEnd_GameMode_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_GameMode.ASSetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxUDKFrontEnd_GameMode::ASSetList ( class UGFxObject* List )
{
	static UFunction* pFnASSetList = NULL;

	if ( ! pFnASSetList )
		pFnASSetList = (UFunction*) UObject::GObjObjects()->Data[ 45701 ];

	UGFxUDKFrontEnd_GameMode_execASSetList_Parms ASSetList_Parms;
	ASSetList_Parms.List = List;

	this->ProcessEvent ( pFnASSetList, &ASSetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.SetImgScroller
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxClikWidget*          InImgScroller                  ( CPF_Parm )

void UGFxUDKFrontEnd_GameMode::SetImgScroller ( class UGFxClikWidget* InImgScroller )
{
	static UFunction* pFnSetImgScroller = NULL;

	if ( ! pFnSetImgScroller )
		pFnSetImgScroller = (UFunction*) UObject::GObjObjects()->Data[ 45699 ];

	UGFxUDKFrontEnd_GameMode_execSetImgScroller_Parms SetImgScroller_Parms;
	SetImgScroller_Parms.InImgScroller = InImgScroller;

	this->ProcessEvent ( pFnSetImgScroller, &SetImgScroller_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_GameMode::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 45691 ];

	UGFxUDKFrontEnd_GameMode_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_GameMode::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 45687 ];

	UGFxUDKFrontEnd_GameMode_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_GameMode::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 45685 ];

	UGFxUDKFrontEnd_GameMode_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_GameMode::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 45682 ];

	UGFxUDKFrontEnd_GameMode_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnGameModeChange
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            SelectedIndex                  ( CPF_Parm )

void UGFxUDKFrontEnd_GameMode::OnGameModeChange ( int SelectedIndex )
{
	static UFunction* pFnOnGameModeChange = NULL;

	if ( ! pFnOnGameModeChange )
		pFnOnGameModeChange = (UFunction*) UObject::GObjObjects()->Data[ 45671 ];

	UGFxUDKFrontEnd_GameMode_execOnGameModeChange_Parms OnGameModeChange_Parms;
	OnGameModeChange_Parms.SelectedIndex = SelectedIndex;

	this->ProcessEvent ( pFnOnGameModeChange, &OnGameModeChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnGameModeSelected
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 InGameMode                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InDefaultMap                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InGameSettingsClass            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_GameMode::OnGameModeSelected ( struct FString InGameMode, struct FString InDefaultMap, struct FString InGameSettingsClass )
{
	static UFunction* pFnOnGameModeSelected = NULL;

	if ( ! pFnOnGameModeSelected )
		pFnOnGameModeSelected = (UFunction*) UObject::GObjObjects()->Data[ 45663 ];

	UGFxUDKFrontEnd_GameMode_execOnGameModeSelected_Parms OnGameModeSelected_Parms;
	memcpy ( &OnGameModeSelected_Parms.InGameMode, &InGameMode, 0xC );
	memcpy ( &OnGameModeSelected_Parms.InDefaultMap, &InDefaultMap, 0xC );
	memcpy ( &OnGameModeSelected_Parms.InGameSettingsClass, &InGameSettingsClass, 0xC );

	this->ProcessEvent ( pFnOnGameModeSelected, &OnGameModeSelected_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_GameMode::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45661 ];

	UGFxUDKFrontEnd_GameMode_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_GameMode::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45659 ];

	UGFxUDKFrontEnd_GameMode_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_GameMode.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_GameMode::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45653 ];

	UGFxUDKFrontEnd_GameMode_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_MapSelect::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46338 ];

	UGFxUDKFrontEnd_MapSelect_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.GetMapFriendlyName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_MapSelect::GetMapFriendlyName ( struct FString Map )
{
	static UFunction* pFnGetMapFriendlyName = NULL;

	if ( ! pFnGetMapFriendlyName )
		pFnGetMapFriendlyName = (UFunction*) UObject::GObjObjects()->Data[ 46201 ];

	UGFxUDKFrontEnd_MapSelect_execGetMapFriendlyName_Parms GetMapFriendlyName_Parms;
	memcpy ( &GetMapFriendlyName_Parms.Map, &Map, 0xC );

	this->ProcessEvent ( pFnGetMapFriendlyName, &GetMapFriendlyName_Parms, NULL );

	return GetMapFriendlyName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.GetSelectedMap
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_MapSelect::GetSelectedMap ( )
{
	static UFunction* pFnGetSelectedMap = NULL;

	if ( ! pFnGetSelectedMap )
		pFnGetSelectedMap = (UFunction*) UObject::GObjObjects()->Data[ 46326 ];

	UGFxUDKFrontEnd_MapSelect_execGetSelectedMap_Parms GetSelectedMap_Parms;

	this->ProcessEvent ( pFnGetSelectedMap, &GetSelectedMap_Parms, NULL );

	return GetSelectedMap_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.SetupMapCycle
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct FString                 SelectedMap                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MapSelect::SetupMapCycle ( struct FString SelectedMap )
{
	static UFunction* pFnSetupMapCycle = NULL;

	if ( ! pFnSetupMapCycle )
		pFnSetupMapCycle = (UFunction*) UObject::GObjObjects()->Data[ 46321 ];

	UGFxUDKFrontEnd_MapSelect_execSetupMapCycle_Parms SetupMapCycle_Parms;
	memcpy ( &SetupMapCycle_Parms.SelectedMap, &SelectedMap, 0xC );

	this->ProcessEvent ( pFnSetupMapCycle, &SetupMapCycle_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.GetCurrentGameMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UGFxUDKFrontEnd_MapSelect::GetCurrentGameMode ( )
{
	static UFunction* pFnGetCurrentGameMode = NULL;

	if ( ! pFnGetCurrentGameMode )
		pFnGetCurrentGameMode = (UFunction*) UObject::GObjObjects()->Data[ 46211 ];

	UGFxUDKFrontEnd_MapSelect_execGetCurrentGameMode_Parms GetCurrentGameMode_Parms;

	this->ProcessEvent ( pFnGetCurrentGameMode, &GetCurrentGameMode_Parms, NULL );

	return GetCurrentGameMode_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.GetImageMarkupByMapName
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InMapName                      ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_MapSelect::GetImageMarkupByMapName ( struct FString InMapName )
{
	static UFunction* pFnGetImageMarkupByMapName = NULL;

	if ( ! pFnGetImageMarkupByMapName )
		pFnGetImageMarkupByMapName = (UFunction*) UObject::GObjObjects()->Data[ 45669 ];

	UGFxUDKFrontEnd_MapSelect_execGetImageMarkupByMapName_Parms GetImageMarkupByMapName_Parms;
	memcpy ( &GetImageMarkupByMapName_Parms.InMapName, &InMapName, 0xC );

	this->ProcessEvent ( pFnGetImageMarkupByMapName, &GetImageMarkupByMapName_Parms, NULL );

	return GetImageMarkupByMapName_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.SetImgScroller
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxClikWidget*          InImgScroller                  ( CPF_Parm )

void UGFxUDKFrontEnd_MapSelect::SetImgScroller ( class UGFxClikWidget* InImgScroller )
{
	static UFunction* pFnSetImgScroller = NULL;

	if ( ! pFnSetImgScroller )
		pFnSetImgScroller = (UFunction*) UObject::GObjObjects()->Data[ 46202 ];

	UGFxUDKFrontEnd_MapSelect_execSetImgScroller_Parms SetImgScroller_Parms;
	SetImgScroller_Parms.InImgScroller = InImgScroller;

	this->ProcessEvent ( pFnSetImgScroller, &SetImgScroller_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MapSelect::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46190 ];

	UGFxUDKFrontEnd_MapSelect_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MapSelect::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 46185 ];

	UGFxUDKFrontEnd_MapSelect_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxUDKFrontEnd_MapSelect::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 46183 ];

	UGFxUDKFrontEnd_MapSelect_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.OnMapList_ValueChanged
// [0x00024002] 
// Parameters infos:
// struct FString                 InMapSelected                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InMapImageSelected             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MapSelect::OnMapList_ValueChanged ( struct FString InMapSelected, struct FString InMapImageSelected )
{
	static UFunction* pFnOnMapList_ValueChanged = NULL;

	if ( ! pFnOnMapList_ValueChanged )
		pFnOnMapList_ValueChanged = (UFunction*) UObject::GObjObjects()->Data[ 46179 ];

	UGFxUDKFrontEnd_MapSelect_execOnMapList_ValueChanged_Parms OnMapList_ValueChanged_Parms;
	memcpy ( &OnMapList_ValueChanged_Parms.InMapSelected, &InMapSelected, 0xC );
	memcpy ( &OnMapList_ValueChanged_Parms.InMapImageSelected, &InMapImageSelected, 0xC );

	this->ProcessEvent ( pFnOnMapList_ValueChanged, &OnMapList_ValueChanged_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_MapSelect::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46177 ];

	UGFxUDKFrontEnd_MapSelect_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_MapSelect::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46175 ];

	UGFxUDKFrontEnd_MapSelect_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MapSelect.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MapSelect::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 46174 ];

	UGFxUDKFrontEnd_MapSelect_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.OnStartGame_Confirm
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_HostGame::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 45865 ];

	UGFxUDKFrontEnd_HostGame_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.FinishStartDedicated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_HostGame::FinishStartDedicated ( )
{
	static UFunction* pFnFinishStartDedicated = NULL;

	if ( ! pFnFinishStartDedicated )
		pFnFinishStartDedicated = (UFunction*) UObject::GObjObjects()->Data[ 45857 ];

	UGFxUDKFrontEnd_HostGame_execFinishStartDedicated_Parms FinishStartDedicated_Parms;

	this->ProcessEvent ( pFnFinishStartDedicated, &FinishStartDedicated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.OnGameCreated
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UGFxUDKFrontEnd_HostGame::OnGameCreated ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnGameCreated = NULL;

	if ( ! pFnOnGameCreated )
		pFnOnGameCreated = (UFunction*) UObject::GObjObjects()->Data[ 45844 ];

	UGFxUDKFrontEnd_HostGame_execOnGameCreated_Parms OnGameCreated_Parms;
	memcpy ( &OnGameCreated_Parms.SessionName, &SessionName, 0x8 );
	OnGameCreated_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnGameCreated, &OnGameCreated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.CreateOnlineGame
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void UGFxUDKFrontEnd_HostGame::CreateOnlineGame ( int PlayerIndex )
{
	static UFunction* pFnCreateOnlineGame = NULL;

	if ( ! pFnCreateOnlineGame )
		pFnCreateOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 45840 ];

	UGFxUDKFrontEnd_HostGame_execCreateOnlineGame_Parms CreateOnlineGame_Parms;
	CreateOnlineGame_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateOnlineGame, &CreateOnlineGame_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.SetupGameSettings
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_HostGame::SetupGameSettings ( )
{
	static UFunction* pFnSetupGameSettings = NULL;

	if ( ! pFnSetupGameSettings )
		pFnSetupGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 45832 ];

	UGFxUDKFrontEnd_HostGame_execSetupGameSettings_Parms SetupGameSettings_Parms;

	this->ProcessEvent ( pFnSetupGameSettings, &SetupGameSettings_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.GenerateMutatorURLString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_HostGame::GenerateMutatorURLString ( )
{
	static UFunction* pFnGenerateMutatorURLString = NULL;

	if ( ! pFnGenerateMutatorURLString )
		pFnGenerateMutatorURLString = (UFunction*) UObject::GObjObjects()->Data[ 45818 ];

	UGFxUDKFrontEnd_HostGame_execGenerateMutatorURLString_Parms GenerateMutatorURLString_Parms;

	this->ProcessEvent ( pFnGenerateMutatorURLString, &GenerateMutatorURLString_Parms, NULL );

	return GenerateMutatorURLString_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_HostGame.ValidateServerType
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_HostGame::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 45813 ];

	UGFxUDKFrontEnd_HostGame_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.StripInvalidPasswordCharacters
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 PasswordString                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InvalidChars                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_HostGame::StripInvalidPasswordCharacters ( struct FString PasswordString, struct FString InvalidChars )
{
	static UFunction* pFnStripInvalidPasswordCharacters = NULL;

	if ( ! pFnStripInvalidPasswordCharacters )
		pFnStripInvalidPasswordCharacters = (UFunction*) UObject::GObjObjects()->Data[ 45808 ];

	UGFxUDKFrontEnd_HostGame_execStripInvalidPasswordCharacters_Parms StripInvalidPasswordCharacters_Parms;
	memcpy ( &StripInvalidPasswordCharacters_Parms.PasswordString, &PasswordString, 0xC );
	memcpy ( &StripInvalidPasswordCharacters_Parms.InvalidChars, &InvalidChars, 0xC );

	this->ProcessEvent ( pFnStripInvalidPasswordCharacters, &StripInvalidPasswordCharacters_Parms, NULL );

	return StripInvalidPasswordCharacters_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_HostGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_HostGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45806 ];

	UGFxUDKFrontEnd_HostGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_HostGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_HostGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 45801 ];

	UGFxUDKFrontEnd_HostGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_LaunchGame::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 45790 ];

	UGFxUDKFrontEnd_LaunchGame_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.GetGameModeFriendlyString
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InGameMode                     ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxUDKFrontEnd_LaunchGame::GetGameModeFriendlyString ( struct FString InGameMode )
{
	static UFunction* pFnGetGameModeFriendlyString = NULL;

	if ( ! pFnGetGameModeFriendlyString )
		pFnGetGameModeFriendlyString = (UFunction*) UObject::GObjObjects()->Data[ 45696 ];

	UGFxUDKFrontEnd_LaunchGame_execGetGameModeFriendlyString_Parms GetGameModeFriendlyString_Parms;
	memcpy ( &GetGameModeFriendlyString_Parms.InGameMode, &InGameMode, 0xC );

	this->ProcessEvent ( pFnGetGameModeFriendlyString, &GetGameModeFriendlyString_Parms, NULL );

	return GetGameModeFriendlyString_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 45784 ];

	UGFxUDKFrontEnd_LaunchGame_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 45781 ];

	UGFxUDKFrontEnd_LaunchGame_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_LaunchGame::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 45779 ];

	UGFxUDKFrontEnd_LaunchGame_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_LaunchGame::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 45775 ];

	UGFxUDKFrontEnd_LaunchGame_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.UpdateGameSettingsPanel
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::UpdateGameSettingsPanel ( )
{
	static UFunction* pFnUpdateGameSettingsPanel = NULL;

	if ( ! pFnUpdateGameSettingsPanel )
		pFnUpdateGameSettingsPanel = (UFunction*) UObject::GObjObjects()->Data[ 45756 ];

	UGFxUDKFrontEnd_LaunchGame_execUpdateGameSettingsPanel_Parms UpdateGameSettingsPanel_Parms;

	this->ProcessEvent ( pFnUpdateGameSettingsPanel, &UpdateGameSettingsPanel_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnStartGame_Confirm
// [0x00020000] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 45759 ];

	UGFxUDKFrontEnd_LaunchGame_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45758 ];

	UGFxUDKFrontEnd_LaunchGame_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 45757 ];

	UGFxUDKFrontEnd_LaunchGame_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_LaunchGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 45754 ];

	UGFxUDKFrontEnd_LaunchGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_LaunchGame::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 45752 ];

	UGFxUDKFrontEnd_LaunchGame_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 45745 ];

	UGFxUDKFrontEnd_LaunchGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_LaunchGame.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_LaunchGame::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 45743 ];

	UGFxUDKFrontEnd_LaunchGame_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_Multiplayer::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46376 ];

	UGFxUDKFrontEnd_Multiplayer_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              InList                         ( CPF_Parm )

void UGFxUDKFrontEnd_Multiplayer::SetList ( class UGFxObject* InList )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 46374 ];

	UGFxUDKFrontEnd_Multiplayer_execSetList_Parms SetList_Parms;
	SetList_Parms.InList = InList;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Multiplayer::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46370 ];

	UGFxUDKFrontEnd_Multiplayer_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Multiplayer::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 46367 ];

	UGFxUDKFrontEnd_Multiplayer_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Multiplayer::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 46365 ];

	UGFxUDKFrontEnd_Multiplayer_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_Multiplayer::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 46361 ];

	UGFxUDKFrontEnd_Multiplayer_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.Select_HostGame
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Multiplayer::Select_HostGame ( )
{
	static UFunction* pFnSelect_HostGame = NULL;

	if ( ! pFnSelect_HostGame )
		pFnSelect_HostGame = (UFunction*) UObject::GObjObjects()->Data[ 46360 ];

	UGFxUDKFrontEnd_Multiplayer_execSelect_HostGame_Parms Select_HostGame_Parms;

	this->ProcessEvent ( pFnSelect_HostGame, &Select_HostGame_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.Select_JoinGame
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Multiplayer::Select_JoinGame ( )
{
	static UFunction* pFnSelect_JoinGame = NULL;

	if ( ! pFnSelect_JoinGame )
		pFnSelect_JoinGame = (UFunction*) UObject::GObjObjects()->Data[ 46359 ];

	UGFxUDKFrontEnd_Multiplayer_execSelect_JoinGame_Parms Select_JoinGame_Parms;

	this->ProcessEvent ( pFnSelect_JoinGame, &Select_JoinGame_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_Multiplayer::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46357 ];

	UGFxUDKFrontEnd_Multiplayer_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_Multiplayer::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46355 ];

	UGFxUDKFrontEnd_Multiplayer_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_Multiplayer.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_Multiplayer::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 46354 ];

	UGFxUDKFrontEnd_Multiplayer_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InstantAction.OnStartGame_Confirm
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_InstantAction::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 45886 ];

	UGFxUDKFrontEnd_InstantAction_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_InstantAction.OnViewActivated
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_InstantAction::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 45884 ];

	UGFxUDKFrontEnd_InstantAction_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUDKFrontEnd_MainMenu::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46160 ];

	UGFxUDKFrontEnd_MainMenu_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 46159 ];

	UGFxUDKFrontEnd_MainMenu_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              InList                         ( CPF_Parm )

void UGFxUDKFrontEnd_MainMenu::SetList ( class UGFxObject* InList )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 46157 ];

	UGFxUDKFrontEnd_MainMenu_execSetList_Parms SetList_Parms;
	SetList_Parms.InList = InList;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 46153 ];

	UGFxUDKFrontEnd_MainMenu_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.UpdateDescription
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 46150 ];

	UGFxUDKFrontEnd_MainMenu_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.OnListChange
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MainMenu::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 46148 ];

	UGFxUDKFrontEnd_MainMenu_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.OnListItemPress
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MainMenu::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 46144 ];

	UGFxUDKFrontEnd_MainMenu_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.ExitDialog_SelectBack
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MainMenu::ExitDialog_SelectBack ( struct FEventData ev )
{
	static UFunction* pFnExitDialog_SelectBack = NULL;

	if ( ! pFnExitDialog_SelectBack )
		pFnExitDialog_SelectBack = (UFunction*) UObject::GObjObjects()->Data[ 46142 ];

	UGFxUDKFrontEnd_MainMenu_execExitDialog_SelectBack_Parms ExitDialog_SelectBack_Parms;
	memcpy ( &ExitDialog_SelectBack_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnExitDialog_SelectBack, &ExitDialog_SelectBack_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.ExitDialog_SelectOK
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUDKFrontEnd_MainMenu::ExitDialog_SelectOK ( struct FEventData ev )
{
	static UFunction* pFnExitDialog_SelectOK = NULL;

	if ( ! pFnExitDialog_SelectOK )
		pFnExitDialog_SelectOK = (UFunction*) UObject::GObjObjects()->Data[ 46140 ];

	UGFxUDKFrontEnd_MainMenu_execExitDialog_SelectOK_Parms ExitDialog_SelectOK_Parms;
	memcpy ( &ExitDialog_SelectOK_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnExitDialog_SelectOK, &ExitDialog_SelectOK_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.Select_ExitGame
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::Select_ExitGame ( )
{
	static UFunction* pFnSelect_ExitGame = NULL;

	if ( ! pFnSelect_ExitGame )
		pFnSelect_ExitGame = (UFunction*) UObject::GObjObjects()->Data[ 46138 ];

	UGFxUDKFrontEnd_MainMenu_execSelect_ExitGame_Parms Select_ExitGame_Parms;

	this->ProcessEvent ( pFnSelect_ExitGame, &Select_ExitGame_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.Select_Multiplayer
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::Select_Multiplayer ( )
{
	static UFunction* pFnSelect_Multiplayer = NULL;

	if ( ! pFnSelect_Multiplayer )
		pFnSelect_Multiplayer = (UFunction*) UObject::GObjObjects()->Data[ 46137 ];

	UGFxUDKFrontEnd_MainMenu_execSelect_Multiplayer_Parms Select_Multiplayer_Parms;

	this->ProcessEvent ( pFnSelect_Multiplayer, &Select_Multiplayer_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.Select_InstantAction
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::Select_InstantAction ( )
{
	static UFunction* pFnSelect_InstantAction = NULL;

	if ( ! pFnSelect_InstantAction )
		pFnSelect_InstantAction = (UFunction*) UObject::GObjObjects()->Data[ 46136 ];

	UGFxUDKFrontEnd_MainMenu_execSelect_InstantAction_Parms Select_InstantAction_Parms;

	this->ProcessEvent ( pFnSelect_InstantAction, &Select_InstantAction_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void UGFxUDKFrontEnd_MainMenu::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 46134 ];

	UGFxUDKFrontEnd_MainMenu_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void UGFxUDKFrontEnd_MainMenu::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 46132 ];

	UGFxUDKFrontEnd_MainMenu_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function UTGame.GFxUDKFrontEnd_MainMenu.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void UGFxUDKFrontEnd_MainMenu::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 46131 ];

	UGFxUDKFrontEnd_MainMenu_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function UTGame.UTDataStore_GameSearchDM.SaveGameSearchParameters
// [0x00020002] 
// Parameters infos:

void UUTDataStore_GameSearchDM::SaveGameSearchParameters ( )
{
	static UFunction* pFnSaveGameSearchParameters = NULL;

	if ( ! pFnSaveGameSearchParameters )
		pFnSaveGameSearchParameters = (UFunction*) UObject::GObjObjects()->Data[ 55540 ];

	UUTDataStore_GameSearchDM_execSaveGameSearchParameters_Parms SaveGameSearchParameters_Parms;

	this->ProcessEvent ( pFnSaveGameSearchParameters, &SaveGameSearchParameters_Parms, NULL );
};

// Function UTGame.UTDataStore_GameSearchDM.LoadGameSearchParameters
// [0x00020002] 
// Parameters infos:

void UUTDataStore_GameSearchDM::LoadGameSearchParameters ( )
{
	static UFunction* pFnLoadGameSearchParameters = NULL;

	if ( ! pFnLoadGameSearchParameters )
		pFnLoadGameSearchParameters = (UFunction*) UObject::GObjObjects()->Data[ 55532 ];

	UUTDataStore_GameSearchDM_execLoadGameSearchParameters_Parms LoadGameSearchParameters_Parms;

	this->ProcessEvent ( pFnLoadGameSearchParameters, &LoadGameSearchParameters_Parms, NULL );
};

// Function UTGame.UTDataStore_GameSearchDM.FindStoredSettingValueIndex
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            StoredGameSearchIndex          ( CPF_Parm )
// int                            LocalizedSettingId             ( CPF_Parm )
// unsigned long                  bAddIfNecessary                ( CPF_OptionalParm | CPF_Parm )

int UUTDataStore_GameSearchDM::FindStoredSettingValueIndex ( int StoredGameSearchIndex, int LocalizedSettingId, unsigned long bAddIfNecessary )
{
	static UFunction* pFnFindStoredSettingValueIndex = NULL;

	if ( ! pFnFindStoredSettingValueIndex )
		pFnFindStoredSettingValueIndex = (UFunction*) UObject::GObjObjects()->Data[ 55525 ];

	UUTDataStore_GameSearchDM_execFindStoredSettingValueIndex_Parms FindStoredSettingValueIndex_Parms;
	FindStoredSettingValueIndex_Parms.StoredGameSearchIndex = StoredGameSearchIndex;
	FindStoredSettingValueIndex_Parms.LocalizedSettingId = LocalizedSettingId;
	FindStoredSettingValueIndex_Parms.bAddIfNecessary = bAddIfNecessary;

	this->ProcessEvent ( pFnFindStoredSettingValueIndex, &FindStoredSettingValueIndex_Parms, NULL );

	return FindStoredSettingValueIndex_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchDM.FindStoredSearchIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   GameSearchName                 ( CPF_Parm )

int UUTDataStore_GameSearchDM::FindStoredSearchIndex ( struct FName GameSearchName )
{
	static UFunction* pFnFindStoredSearchIndex = NULL;

	if ( ! pFnFindStoredSearchIndex )
		pFnFindStoredSearchIndex = (UFunction*) UObject::GObjObjects()->Data[ 55520 ];

	UUTDataStore_GameSearchDM_execFindStoredSearchIndex_Parms FindStoredSearchIndex_Parms;
	memcpy ( &FindStoredSearchIndex_Parms.GameSearchName, &GameSearchName, 0x8 );

	this->ProcessEvent ( pFnFindStoredSearchIndex, &FindStoredSearchIndex_Parms, NULL );

	return FindStoredSearchIndex_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchDM.HasOutstandingQueries
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bRestrictCheckToSelf           ( CPF_OptionalParm | CPF_Parm )

bool UUTDataStore_GameSearchDM::HasOutstandingQueries ( unsigned long bRestrictCheckToSelf )
{
	static UFunction* pFnHasOutstandingQueries = NULL;

	if ( ! pFnHasOutstandingQueries )
		pFnHasOutstandingQueries = (UFunction*) UObject::GObjObjects()->Data[ 55509 ];

	UUTDataStore_GameSearchDM_execHasOutstandingQueries_Parms HasOutstandingQueries_Parms;
	HasOutstandingQueries_Parms.bRestrictCheckToSelf = bRestrictCheckToSelf;

	this->ProcessEvent ( pFnHasOutstandingQueries, &HasOutstandingQueries_Parms, NULL );

	return HasOutstandingQueries_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchDM.SubmitGameSearch
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ControllerIndex                ( CPF_Parm )
// unsigned long                  bInvalidateExistingSearchResults ( CPF_OptionalParm | CPF_Parm )

bool UUTDataStore_GameSearchDM::eventSubmitGameSearch ( unsigned char ControllerIndex, unsigned long bInvalidateExistingSearchResults )
{
	static UFunction* pFnSubmitGameSearch = NULL;

	if ( ! pFnSubmitGameSearch )
		pFnSubmitGameSearch = (UFunction*) UObject::GObjObjects()->Data[ 55505 ];

	UUTDataStore_GameSearchDM_eventSubmitGameSearch_Parms SubmitGameSearch_Parms;
	SubmitGameSearch_Parms.ControllerIndex = ControllerIndex;
	SubmitGameSearch_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;

	this->ProcessEvent ( pFnSubmitGameSearch, &SubmitGameSearch_Parms, NULL );

	return SubmitGameSearch_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchDM.Registered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ULocalPlayer*            PlayerOwner                    ( CPF_Parm )

void UUTDataStore_GameSearchDM::eventRegistered ( class ULocalPlayer* PlayerOwner )
{
	static UFunction* pFnRegistered = NULL;

	if ( ! pFnRegistered )
		pFnRegistered = (UFunction*) UObject::GObjObjects()->Data[ 55501 ];

	UUTDataStore_GameSearchDM_eventRegistered_Parms Registered_Parms;
	Registered_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnRegistered, &Registered_Parms, NULL );
};

// Function UTGame.UTGameSettingsCommon.SetCustomMutators
// [0x00420002] 
// Parameters infos:
// class UUTUIDataStore_MenuItems* MenuDataStore                  ( CPF_Parm )
// TArray< struct FString >       MutatorClassNames              ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTGameSettingsCommon::SetCustomMutators ( class UUTUIDataStore_MenuItems* MenuDataStore, TArray< struct FString >* MutatorClassNames )
{
	static UFunction* pFnSetCustomMutators = NULL;

	if ( ! pFnSetCustomMutators )
		pFnSetCustomMutators = (UFunction*) UObject::GObjObjects()->Data[ 56614 ];

	UUTGameSettingsCommon_execSetCustomMutators_Parms SetCustomMutators_Parms;
	SetCustomMutators_Parms.MenuDataStore = MenuDataStore;

	this->ProcessEvent ( pFnSetCustomMutators, &SetCustomMutators_Parms, NULL );

	if ( MutatorClassNames )
		memcpy ( MutatorClassNames, &SetCustomMutators_Parms.MutatorClassNames, 0xC );
};

// Function UTGame.UTGameSettingsCommon.GenerateMutatorBitmaskFromURL
// [0x00420002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UUTUIDataStore_MenuItems* MenuDataStore                  ( CPF_Parm )
// TArray< struct FString >       MutatorClassNames              ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

int UUTGameSettingsCommon::GenerateMutatorBitmaskFromURL ( class UUTUIDataStore_MenuItems* MenuDataStore, TArray< struct FString >* MutatorClassNames )
{
	static UFunction* pFnGenerateMutatorBitmaskFromURL = NULL;

	if ( ! pFnGenerateMutatorBitmaskFromURL )
		pFnGenerateMutatorBitmaskFromURL = (UFunction*) UObject::GObjObjects()->Data[ 56601 ];

	UUTGameSettingsCommon_execGenerateMutatorBitmaskFromURL_Parms GenerateMutatorBitmaskFromURL_Parms;
	GenerateMutatorBitmaskFromURL_Parms.MenuDataStore = MenuDataStore;

	this->ProcessEvent ( pFnGenerateMutatorBitmaskFromURL, &GenerateMutatorBitmaskFromURL_Parms, NULL );

	if ( MutatorClassNames )
		memcpy ( MutatorClassNames, &GenerateMutatorBitmaskFromURL_Parms.MutatorClassNames, 0xC );

	return GenerateMutatorBitmaskFromURL_Parms.ReturnValue;
};

// Function UTGame.UTGameSettingsCommon.SetMutators
// [0x00420002] 
// Parameters infos:
// struct FString                 URL                            ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTGameSettingsCommon::SetMutators ( struct FString* URL )
{
	static UFunction* pFnSetMutators = NULL;

	if ( ! pFnSetMutators )
		pFnSetMutators = (UFunction*) UObject::GObjObjects()->Data[ 56594 ];

	UUTGameSettingsCommon_execSetMutators_Parms SetMutators_Parms;

	this->ProcessEvent ( pFnSetMutators, &SetMutators_Parms, NULL );

	if ( URL )
		memcpy ( URL, &SetMutators_Parms.URL, 0xC );
};

// Function UTGame.UTGameSettingsCommon.UpdateFromURL
// [0x00420002] 
// Parameters infos:
// class AGameInfo*               Game                           ( CPF_Parm )
// struct FString                 URL                            ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTGameSettingsCommon::UpdateFromURL ( class AGameInfo* Game, struct FString* URL )
{
	static UFunction* pFnUpdateFromURL = NULL;

	if ( ! pFnUpdateFromURL )
		pFnUpdateFromURL = (UFunction*) UObject::GObjObjects()->Data[ 56587 ];

	UUTGameSettingsCommon_execUpdateFromURL_Parms UpdateFromURL_Parms;
	UpdateFromURL_Parms.Game = Game;

	this->ProcessEvent ( pFnUpdateFromURL, &UpdateFromURL_Parms, NULL );

	if ( URL )
		memcpy ( URL, &UpdateFromURL_Parms.URL, 0xC );
};

// Function UTGame.UTGameSettingsCommon.BuildURL
// [0x00420002] 
// Parameters infos:
// struct FString                 OutURL                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTGameSettingsCommon::BuildURL ( struct FString* OutURL )
{
	static UFunction* pFnBuildURL = NULL;

	if ( ! pFnBuildURL )
		pFnBuildURL = (UFunction*) UObject::GObjObjects()->Data[ 56579 ];

	UUTGameSettingsCommon_execBuildURL_Parms BuildURL_Parms;

	this->ProcessEvent ( pFnBuildURL, &BuildURL_Parms, NULL );

	if ( OutURL )
		memcpy ( OutURL, &BuildURL_Parms.OutURL, 0xC );
};

// Function UTGame.UTGameSettingsCommon.SetOfficialMutatorBitmask
// [0x00020002] 
// Parameters infos:
// int                            MutatorBitMask                 ( CPF_Parm )

void UUTGameSettingsCommon::SetOfficialMutatorBitmask ( int MutatorBitMask )
{
	static UFunction* pFnSetOfficialMutatorBitmask = NULL;

	if ( ! pFnSetOfficialMutatorBitmask )
		pFnSetOfficialMutatorBitmask = (UFunction*) UObject::GObjObjects()->Data[ 56577 ];

	UUTGameSettingsCommon_execSetOfficialMutatorBitmask_Parms SetOfficialMutatorBitmask_Parms;
	SetOfficialMutatorBitmask_Parms.MutatorBitMask = MutatorBitMask;

	this->ProcessEvent ( pFnSetOfficialMutatorBitmask, &SetOfficialMutatorBitmask_Parms, NULL );
};

// Function UTGame.UTGameSearchCustom.GetFilterPropertyName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 FilterId                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  FilterType                     ( CPF_Parm )

struct FString UUTGameSearchCustom::GetFilterPropertyName ( struct FString FilterId, unsigned char FilterType )
{
	static UFunction* pFnGetFilterPropertyName = NULL;

	if ( ! pFnGetFilterPropertyName )
		pFnGetFilterPropertyName = (UFunction*) UObject::GObjObjects()->Data[ 56466 ];

	UUTGameSearchCustom_execGetFilterPropertyName_Parms GetFilterPropertyName_Parms;
	memcpy ( &GetFilterPropertyName_Parms.FilterId, &FilterId, 0xC );
	GetFilterPropertyName_Parms.FilterType = FilterType;

	this->ProcessEvent ( pFnGetFilterPropertyName, &GetFilterPropertyName_Parms, NULL );

	return GetFilterPropertyName_Parms.ReturnValue;
};

// Function UTGame.UTGameSearchCustom.ResetFilters
// [0x00020002] 
// Parameters infos:

void UUTGameSearchCustom::ResetFilters ( )
{
	static UFunction* pFnResetFilters = NULL;

	if ( ! pFnResetFilters )
		pFnResetFilters = (UFunction*) UObject::GObjObjects()->Data[ 56465 ];

	UUTGameSearchCustom_execResetFilters_Parms ResetFilters_Parms;

	this->ProcessEvent ( pFnResetFilters, &ResetFilters_Parms, NULL );
};

// Function UTGame.UTGameSearchCustom.CommitFilters
// [0x00820002] 
// Parameters infos:

void UUTGameSearchCustom::CommitFilters ( )
{
	static UFunction* pFnCommitFilters = NULL;

	if ( ! pFnCommitFilters )
		pFnCommitFilters = (UFunction*) UObject::GObjObjects()->Data[ 56461 ];

	UUTGameSearchCustom_execCommitFilters_Parms CommitFilters_Parms;

	this->ProcessEvent ( pFnCommitFilters, &CommitFilters_Parms, NULL );
};

// Function UTGame.UTGameSearchCustom.AddRawORFilter
// [0x00020002] 
// Parameters infos:
// struct FName                   GroupName                      ( CPF_Parm )
// struct FString                 FilterKey                      ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned char                  FilterOperator                 ( CPF_Parm )
// struct FString                 FilterValue                    ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UUTGameSearchCustom::AddRawORFilter ( struct FName GroupName, struct FString FilterKey, unsigned char FilterOperator, struct FString FilterValue )
{
	static UFunction* pFnAddRawORFilter = NULL;

	if ( ! pFnAddRawORFilter )
		pFnAddRawORFilter = (UFunction*) UObject::GObjObjects()->Data[ 56454 ];

	UUTGameSearchCustom_execAddRawORFilter_Parms AddRawORFilter_Parms;
	memcpy ( &AddRawORFilter_Parms.GroupName, &GroupName, 0x8 );
	memcpy ( &AddRawORFilter_Parms.FilterKey, &FilterKey, 0xC );
	AddRawORFilter_Parms.FilterOperator = FilterOperator;
	memcpy ( &AddRawORFilter_Parms.FilterValue, &FilterValue, 0xC );

	this->ProcessEvent ( pFnAddRawORFilter, &AddRawORFilter_Parms, NULL );
};

// Function UTGame.UTGameSearchCustom.AddORFilter
// [0x00020002] 
// Parameters infos:
// struct FName                   GroupName                      ( CPF_Parm )
// struct FString                 FilterId                       ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned char                  FilterType                     ( CPF_Parm )
// unsigned char                  FilterOperator                 ( CPF_Parm )
// struct FString                 FilterValue                    ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UUTGameSearchCustom::AddORFilter ( struct FName GroupName, struct FString FilterId, unsigned char FilterType, unsigned char FilterOperator, struct FString FilterValue )
{
	static UFunction* pFnAddORFilter = NULL;

	if ( ! pFnAddORFilter )
		pFnAddORFilter = (UFunction*) UObject::GObjObjects()->Data[ 56446 ];

	UUTGameSearchCustom_execAddORFilter_Parms AddORFilter_Parms;
	memcpy ( &AddORFilter_Parms.GroupName, &GroupName, 0x8 );
	memcpy ( &AddORFilter_Parms.FilterId, &FilterId, 0xC );
	AddORFilter_Parms.FilterType = FilterType;
	AddORFilter_Parms.FilterOperator = FilterOperator;
	memcpy ( &AddORFilter_Parms.FilterValue, &FilterValue, 0xC );

	this->ProcessEvent ( pFnAddORFilter, &AddORFilter_Parms, NULL );
};

// Function UTGame.UTGameSearchCustom.AddANDFilter
// [0x00024002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   GroupName                      ( CPF_OptionalParm | CPF_Parm )

struct FName UUTGameSearchCustom::AddANDFilter ( struct FName GroupName )
{
	static UFunction* pFnAddANDFilter = NULL;

	if ( ! pFnAddANDFilter )
		pFnAddANDFilter = (UFunction*) UObject::GObjObjects()->Data[ 46112 ];

	UUTGameSearchCustom_execAddANDFilter_Parms AddANDFilter_Parms;
	memcpy ( &AddANDFilter_Parms.GroupName, &GroupName, 0x8 );

	this->ProcessEvent ( pFnAddANDFilter, &AddANDFilter_Parms, NULL );

	return AddANDFilter_Parms.ReturnValue;
};

// Function UTGame.UTGameSearchCommon.InitFilters
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTGameSearchCommon::eventInitFilters ( )
{
	static UFunction* pFnInitFilters = NULL;

	if ( ! pFnInitFilters )
		pFnInitFilters = (UFunction*) UObject::GObjObjects()->Data[ 56325 ];

	UUTGameSearchCommon_eventInitFilters_Parms InitFilters_Parms;

	this->ProcessEvent ( pFnInitFilters, &InitFilters_Parms, NULL );
};

// Function UTGame.UTUIDataProvider_MapInfo.SupportedByCurrentGameMode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_MapInfo::SupportedByCurrentGameMode ( )
{
	static UFunction* pFnSupportedByCurrentGameMode = NULL;

	if ( ! pFnSupportedByCurrentGameMode )
		pFnSupportedByCurrentGameMode = (UFunction*) UObject::GObjObjects()->Data[ 58706 ];

	UUTUIDataProvider_MapInfo_execSupportedByCurrentGameMode_Parms SupportedByCurrentGameMode_Parms;

	this->ProcessEvent ( pFnSupportedByCurrentGameMode, &SupportedByCurrentGameMode_Parms, NULL );

	return SupportedByCurrentGameMode_Parms.ReturnValue;
};

// Function UTGame.UTUIDataProvider_MapInfo.ShouldBeFiltered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_MapInfo::eventShouldBeFiltered ( )
{
	static UFunction* pFnShouldBeFiltered = NULL;

	if ( ! pFnShouldBeFiltered )
		pFnShouldBeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 46199 ];

	UUTUIDataProvider_MapInfo_eventShouldBeFiltered_Parms ShouldBeFiltered_Parms;

	this->ProcessEvent ( pFnShouldBeFiltered, &ShouldBeFiltered_Parms, NULL );

	return ShouldBeFiltered_Parms.ReturnValue;
};

// Function UTGame.UTUIDataProvider_Mutator.SupportsCurrentGameMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_Mutator::eventSupportsCurrentGameMode ( )
{
	static UFunction* pFnSupportsCurrentGameMode = NULL;

	if ( ! pFnSupportsCurrentGameMode )
		pFnSupportsCurrentGameMode = (UFunction*) UObject::GObjObjects()->Data[ 58729 ];

	UUTUIDataProvider_Mutator_eventSupportsCurrentGameMode_Parms SupportsCurrentGameMode_Parms;

	this->ProcessEvent ( pFnSupportsCurrentGameMode, &SupportsCurrentGameMode_Parms, NULL );

	return SupportsCurrentGameMode_Parms.ReturnValue;
};

// Function UTGame.UTUIDataProvider_Mutator.ShouldBeFiltered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_Mutator::eventShouldBeFiltered ( )
{
	static UFunction* pFnShouldBeFiltered = NULL;

	if ( ! pFnShouldBeFiltered )
		pFnShouldBeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 46407 ];

	UUTUIDataProvider_Mutator_eventShouldBeFiltered_Parms ShouldBeFiltered_Parms;

	this->ProcessEvent ( pFnShouldBeFiltered, &ShouldBeFiltered_Parms, NULL );

	return ShouldBeFiltered_Parms.ReturnValue;
};

// Function UTGame.UTBot.HandlePathObstruction
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  BlockedBy                      ( CPF_Parm )

bool AUTBot::eventHandlePathObstruction ( class AActor* BlockedBy )
{
	static UFunction* pFnHandlePathObstruction = NULL;

	if ( ! pFnHandlePathObstruction )
		pFnHandlePathObstruction = (UFunction*) UObject::GObjObjects()->Data[ 52048 ];

	AUTBot_eventHandlePathObstruction_Parms HandlePathObstruction_Parms;
	HandlePathObstruction_Parms.BlockedBy = BlockedBy;

	this->ProcessEvent ( pFnHandlePathObstruction, &HandlePathObstruction_Parms, NULL );

	return HandlePathObstruction_Parms.ReturnValue;
};

// Function UTGame.UTBot.UnderLift
// [0x00020002] 
// Parameters infos:
// class ALiftCenter*             M                              ( CPF_Parm )

void AUTBot::UnderLift ( class ALiftCenter* M )
{
	static UFunction* pFnUnderLift = NULL;

	if ( ! pFnUnderLift )
		pFnUnderLift = (UFunction*) UObject::GObjObjects()->Data[ 52045 ];

	AUTBot_execUnderLift_Parms UnderLift_Parms;
	UnderLift_Parms.M = M;

	this->ProcessEvent ( pFnUnderLift, &UnderLift_Parms, NULL );
};

// Function UTGame.UTBot.PerformCustomAction
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         ActionFunc                     ( CPF_Parm | CPF_NeedCtorLink )

void AUTBot::PerformCustomAction ( struct FScriptDelegate ActionFunc )
{
	static UFunction* pFnPerformCustomAction = NULL;

	if ( ! pFnPerformCustomAction )
		pFnPerformCustomAction = (UFunction*) UObject::GObjObjects()->Data[ 52040 ];

	AUTBot_execPerformCustomAction_Parms PerformCustomAction_Parms;
	memcpy ( &PerformCustomAction_Parms.ActionFunc, &ActionFunc, 0xC );

	this->ProcessEvent ( pFnPerformCustomAction, &PerformCustomAction_Parms, NULL );
};

// Function UTGame.UTBot.CustomActionFunc
// [0x00120002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTBot::CustomActionFunc ( class AUTBot* B )
{
	static UFunction* pFnCustomActionFunc = NULL;

	if ( ! pFnCustomActionFunc )
		pFnCustomActionFunc = (UFunction*) UObject::GObjObjects()->Data[ 50958 ];

	AUTBot_execCustomActionFunc_Parms CustomActionFunc_Parms;
	CustomActionFunc_Parms.B = B;

	this->ProcessEvent ( pFnCustomActionFunc, &CustomActionFunc_Parms, NULL );

	return CustomActionFunc_Parms.ReturnValue;
};

// Function UTGame.UTBot.StopMovement
// [0x00020002] 
// Parameters infos:

void AUTBot::StopMovement ( )
{
	static UFunction* pFnStopMovement = NULL;

	if ( ! pFnStopMovement )
		pFnStopMovement = (UFunction*) UObject::GObjObjects()->Data[ 51878 ];

	AUTBot_execStopMovement_Parms StopMovement_Parms;

	this->ProcessEvent ( pFnStopMovement, &StopMovement_Parms, NULL );
};

// Function UTGame.UTBot.FocusOnLeader
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bLeaderFiring                  ( CPF_Parm )

bool AUTBot::FocusOnLeader ( unsigned long bLeaderFiring )
{
	static UFunction* pFnFocusOnLeader = NULL;

	if ( ! pFnFocusOnLeader )
		pFnFocusOnLeader = (UFunction*) UObject::GObjObjects()->Data[ 51875 ];

	AUTBot_execFocusOnLeader_Parms FocusOnLeader_Parms;
	FocusOnLeader_Parms.bLeaderFiring = bLeaderFiring;

	this->ProcessEvent ( pFnFocusOnLeader, &FocusOnLeader_Parms, NULL );

	return FocusOnLeader_Parms.ReturnValue;
};

// Function UTGame.UTBot.IsShootingObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsShootingObjective ( )
{
	static UFunction* pFnIsShootingObjective = NULL;

	if ( ! pFnIsShootingObjective )
		pFnIsShootingObjective = (UFunction*) UObject::GObjObjects()->Data[ 51873 ];

	AUTBot_execIsShootingObjective_Parms IsShootingObjective_Parms;

	this->ProcessEvent ( pFnIsShootingObjective, &IsShootingObjective_Parms, NULL );

	return IsShootingObjective_Parms.ReturnValue;
};

// Function UTGame.UTBot.Stopped
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::Stopped ( )
{
	static UFunction* pFnStopped = NULL;

	if ( ! pFnStopped )
		pFnStopped = (UFunction*) UObject::GObjObjects()->Data[ 51871 ];

	AUTBot_execStopped_Parms Stopped_Parms;

	this->ProcessEvent ( pFnStopped, &Stopped_Parms, NULL );

	return Stopped_Parms.ReturnValue;
};

// Function UTGame.UTBot.FindViewSpot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::FindViewSpot ( )
{
	static UFunction* pFnFindViewSpot = NULL;

	if ( ! pFnFindViewSpot )
		pFnFindViewSpot = (UFunction*) UObject::GObjObjects()->Data[ 51791 ];

	AUTBot_execFindViewSpot_Parms FindViewSpot_Parms;

	this->ProcessEvent ( pFnFindViewSpot, &FindViewSpot_Parms, NULL );

	return FindViewSpot_Parms.ReturnValue;
};

// Function UTGame.UTBot.IsHunting
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsHunting ( )
{
	static UFunction* pFnIsHunting = NULL;

	if ( ! pFnIsHunting )
		pFnIsHunting = (UFunction*) UObject::GObjObjects()->Data[ 51789 ];

	AUTBot_execIsHunting_Parms IsHunting_Parms;

	this->ProcessEvent ( pFnIsHunting, &IsHunting_Parms, NULL );

	return IsHunting_Parms.ReturnValue;
};

// Function UTGame.UTBot.EngageDirection
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StrafeDir                      ( CPF_Parm )
// unsigned long                  bForced                        ( CPF_Parm )

bool AUTBot::EngageDirection ( struct FVector StrafeDir, unsigned long bForced )
{
	static UFunction* pFnEngageDirection = NULL;

	if ( ! pFnEngageDirection )
		pFnEngageDirection = (UFunction*) UObject::GObjObjects()->Data[ 51740 ];

	AUTBot_execEngageDirection_Parms EngageDirection_Parms;
	memcpy ( &EngageDirection_Parms.StrafeDir, &StrafeDir, 0xC );
	EngageDirection_Parms.bForced = bForced;

	this->ProcessEvent ( pFnEngageDirection, &EngageDirection_Parms, NULL );

	return EngageDirection_Parms.ReturnValue;
};

// Function UTGame.UTBot.IsStrafing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsStrafing ( )
{
	static UFunction* pFnIsStrafing = NULL;

	if ( ! pFnIsStrafing )
		pFnIsStrafing = (UFunction*) UObject::GObjObjects()->Data[ 51738 ];

	AUTBot_execIsStrafing_Parms IsStrafing_Parms;

	this->ProcessEvent ( pFnIsStrafing, &IsStrafing_Parms, NULL );

	return IsStrafing_Parms.ReturnValue;
};

// Function UTGame.UTBot.DefendMelee
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Dist                           ( CPF_Parm )

bool AUTBot::DefendMelee ( float Dist )
{
	static UFunction* pFnDefendMelee = NULL;

	if ( ! pFnDefendMelee )
		pFnDefendMelee = (UFunction*) UObject::GObjObjects()->Data[ 51669 ];

	AUTBot_execDefendMelee_Parms DefendMelee_Parms;
	DefendMelee_Parms.Dist = Dist;

	this->ProcessEvent ( pFnDefendMelee, &DefendMelee_Parms, NULL );

	return DefendMelee_Parms.ReturnValue;
};

// Function UTGame.UTBot.DoRetreat
// [0x00020002] 
// Parameters infos:

void AUTBot::DoRetreat ( )
{
	static UFunction* pFnDoRetreat = NULL;

	if ( ! pFnDoRetreat )
		pFnDoRetreat = (UFunction*) UObject::GObjObjects()->Data[ 51666 ];

	AUTBot_execDoRetreat_Parms DoRetreat_Parms;

	this->ProcessEvent ( pFnDoRetreat, &DoRetreat_Parms, NULL );
};

// Function UTGame.UTBot.DoTacticalMove
// [0x00020002] 
// Parameters infos:

void AUTBot::DoTacticalMove ( )
{
	static UFunction* pFnDoTacticalMove = NULL;

	if ( ! pFnDoTacticalMove )
		pFnDoTacticalMove = (UFunction*) UObject::GObjObjects()->Data[ 51665 ];

	AUTBot_execDoTacticalMove_Parms DoTacticalMove_Parms;

	this->ProcessEvent ( pFnDoTacticalMove, &DoTacticalMove_Parms, NULL );
};

// Function UTGame.UTBot.DoCharge
// [0x00020002] 
// Parameters infos:

void AUTBot::DoCharge ( )
{
	static UFunction* pFnDoCharge = NULL;

	if ( ! pFnDoCharge )
		pFnDoCharge = (UFunction*) UObject::GObjObjects()->Data[ 51664 ];

	AUTBot_execDoCharge_Parms DoCharge_Parms;

	this->ProcessEvent ( pFnDoCharge, &DoCharge_Parms, NULL );
};

// Function UTGame.UTBot.DoStakeOut
// [0x00020002] 
// Parameters infos:

void AUTBot::DoStakeOut ( )
{
	static UFunction* pFnDoStakeOut = NULL;

	if ( ! pFnDoStakeOut )
		pFnDoStakeOut = (UFunction*) UObject::GObjObjects()->Data[ 51663 ];

	AUTBot_execDoStakeOut_Parms DoStakeOut_Parms;

	this->ProcessEvent ( pFnDoStakeOut, &DoStakeOut_Parms, NULL );
};

// Function UTGame.UTBot.LoseEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::LoseEnemy ( )
{
	static UFunction* pFnLoseEnemy = NULL;

	if ( ! pFnLoseEnemy )
		pFnLoseEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51659 ];

	AUTBot_execLoseEnemy_Parms LoseEnemy_Parms;

	this->ProcessEvent ( pFnLoseEnemy, &LoseEnemy_Parms, NULL );

	return LoseEnemy_Parms.ReturnValue;
};

// Function UTGame.UTBot.LostContact
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          MaxTime                        ( CPF_Parm )

bool AUTBot::LostContact ( float MaxTime )
{
	static UFunction* pFnLostContact = NULL;

	if ( ! pFnLostContact )
		pFnLostContact = (UFunction*) UObject::GObjObjects()->Data[ 51656 ];

	AUTBot_execLostContact_Parms LostContact_Parms;
	LostContact_Parms.MaxTime = MaxTime;

	this->ProcessEvent ( pFnLostContact, &LostContact_Parms, NULL );

	return LostContact_Parms.ReturnValue;
};

// Function UTGame.UTBot.GetDesiredOffset
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTBot::GetDesiredOffset ( )
{
	static UFunction* pFnGetDesiredOffset = NULL;

	if ( ! pFnGetDesiredOffset )
		pFnGetDesiredOffset = (UFunction*) UObject::GObjObjects()->Data[ 51630 ];

	AUTBot_execGetDesiredOffset_Parms GetDesiredOffset_Parms;

	this->ProcessEvent ( pFnGetDesiredOffset, &GetDesiredOffset_Parms, NULL );

	return GetDesiredOffset_Parms.ReturnValue;
};

// Function UTGame.UTBot.ForceGiveWeapon
// [0x00820002] 
// Parameters infos:

void AUTBot::ForceGiveWeapon ( )
{
	static UFunction* pFnForceGiveWeapon = NULL;

	if ( ! pFnForceGiveWeapon )
		pFnForceGiveWeapon = (UFunction*) UObject::GObjObjects()->Data[ 51599 ];

	AUTBot_execForceGiveWeapon_Parms ForceGiveWeapon_Parms;

	this->ProcessEvent ( pFnForceGiveWeapon, &ForceGiveWeapon_Parms, NULL );
};

// Function UTGame.UTBot.Celebrate
// [0x00020002] 
// Parameters infos:

void AUTBot::Celebrate ( )
{
	static UFunction* pFnCelebrate = NULL;

	if ( ! pFnCelebrate )
		pFnCelebrate = (UFunction*) UObject::GObjObjects()->Data[ 51598 ];

	AUTBot_execCelebrate_Parms Celebrate_Parms;

	this->ProcessEvent ( pFnCelebrate, &Celebrate_Parms, NULL );
};

// Function UTGame.UTBot.EnableBumps
// [0x00020000] 
// Parameters infos:

void AUTBot::EnableBumps ( )
{
	static UFunction* pFnEnableBumps = NULL;

	if ( ! pFnEnableBumps )
		pFnEnableBumps = (UFunction*) UObject::GObjObjects()->Data[ 51557 ];

	AUTBot_execEnableBumps_Parms EnableBumps_Parms;

	this->ProcessEvent ( pFnEnableBumps, &EnableBumps_Parms, NULL );
};

// Function UTGame.UTBot.WanderOrCamp
// [0x00020002] 
// Parameters infos:

void AUTBot::WanderOrCamp ( )
{
	static UFunction* pFnWanderOrCamp = NULL;

	if ( ! pFnWanderOrCamp )
		pFnWanderOrCamp = (UFunction*) UObject::GObjObjects()->Data[ 51556 ];

	AUTBot_execWanderOrCamp_Parms WanderOrCamp_Parms;

	this->ProcessEvent ( pFnWanderOrCamp, &WanderOrCamp_Parms, NULL );
};

// Function UTGame.UTBot.MoveAwayFrom
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTBot::MoveAwayFrom ( class AController* C )
{
	static UFunction* pFnMoveAwayFrom = NULL;

	if ( ! pFnMoveAwayFrom )
		pFnMoveAwayFrom = (UFunction*) UObject::GObjObjects()->Data[ 51554 ];

	AUTBot_execMoveAwayFrom_Parms MoveAwayFrom_Parms;
	MoveAwayFrom_Parms.C = C;

	this->ProcessEvent ( pFnMoveAwayFrom, &MoveAwayFrom_Parms, NULL );
};

// Function UTGame.UTBot.MoveToDefensePoint
// [0x00020002] 
// Parameters infos:

void AUTBot::MoveToDefensePoint ( )
{
	static UFunction* pFnMoveToDefensePoint = NULL;

	if ( ! pFnMoveToDefensePoint )
		pFnMoveToDefensePoint = (UFunction*) UObject::GObjObjects()->Data[ 51553 ];

	AUTBot_execMoveToDefensePoint_Parms MoveToDefensePoint_Parms;

	this->ProcessEvent ( pFnMoveToDefensePoint, &MoveToDefensePoint_Parms, NULL );
};

// Function UTGame.UTBot.ShouldDefendPosition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::ShouldDefendPosition ( )
{
	static UFunction* pFnShouldDefendPosition = NULL;

	if ( ! pFnShouldDefendPosition )
		pFnShouldDefendPosition = (UFunction*) UObject::GObjObjects()->Data[ 51551 ];

	AUTBot_execShouldDefendPosition_Parms ShouldDefendPosition_Parms;

	this->ProcessEvent ( pFnShouldDefendPosition, &ShouldDefendPosition_Parms, NULL );

	return ShouldDefendPosition_Parms.ReturnValue;
};

// Function UTGame.UTBot.IsDefending
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsDefending ( )
{
	static UFunction* pFnIsDefending = NULL;

	if ( ! pFnIsDefending )
		pFnIsDefending = (UFunction*) UObject::GObjObjects()->Data[ 51549 ];

	AUTBot_execIsDefending_Parms IsDefending_Parms;

	this->ProcessEvent ( pFnIsDefending, &IsDefending_Parms, NULL );

	return IsDefending_Parms.ReturnValue;
};

// Function UTGame.UTBot.OnAIFreeze
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_AIFreeze*      FreezeAction                   ( CPF_Parm )

void AUTBot::OnAIFreeze ( class UUTSeqAct_AIFreeze* FreezeAction )
{
	static UFunction* pFnOnAIFreeze = NULL;

	if ( ! pFnOnAIFreeze )
		pFnOnAIFreeze = (UFunction*) UObject::GObjObjects()->Data[ 51545 ];

	AUTBot_execOnAIFreeze_Parms OnAIFreeze_Parms;
	OnAIFreeze_Parms.FreezeAction = FreezeAction;

	this->ProcessEvent ( pFnOnAIFreeze, &OnAIFreeze_Parms, NULL );
};

// Function UTGame.UTBot.IsRetreating
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsRetreating ( )
{
	static UFunction* pFnIsRetreating = NULL;

	if ( ! pFnIsRetreating )
		pFnIsRetreating = (UFunction*) UObject::GObjObjects()->Data[ 51543 ];

	AUTBot_execIsRetreating_Parms IsRetreating_Parms;

	this->ProcessEvent ( pFnIsRetreating, &IsRetreating_Parms, NULL );

	return IsRetreating_Parms.ReturnValue;
};

// Function UTGame.UTBot.DamageAttitudeTo
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

void AUTBot::DamageAttitudeTo ( class AController* Other, float Damage )
{
	static UFunction* pFnDamageAttitudeTo = NULL;

	if ( ! pFnDamageAttitudeTo )
		pFnDamageAttitudeTo = (UFunction*) UObject::GObjObjects()->Data[ 51540 ];

	AUTBot_execDamageAttitudeTo_Parms DamageAttitudeTo_Parms;
	DamageAttitudeTo_Parms.Other = Other;
	DamageAttitudeTo_Parms.Damage = Damage;

	this->ProcessEvent ( pFnDamageAttitudeTo, &DamageAttitudeTo_Parms, NULL );
};

// Function UTGame.UTBot.SuperPickupNotSpokenFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPickupFactory*        P                              ( CPF_Parm )

bool AUTBot::SuperPickupNotSpokenFor ( class AUTPickupFactory* P )
{
	static UFunction* pFnSuperPickupNotSpokenFor = NULL;

	if ( ! pFnSuperPickupNotSpokenFor )
		pFnSuperPickupNotSpokenFor = (UFunction*) UObject::GObjObjects()->Data[ 51536 ];

	AUTBot_execSuperPickupNotSpokenFor_Parms SuperPickupNotSpokenFor_Parms;
	SuperPickupNotSpokenFor_Parms.P = P;

	this->ProcessEvent ( pFnSuperPickupNotSpokenFor, &SuperPickupNotSpokenFor_Parms, NULL );

	return SuperPickupNotSpokenFor_Parms.ReturnValue;
};

// Function UTGame.UTBot.SuperDesireability
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APickupFactory*          P                              ( CPF_Parm )

float AUTBot::eventSuperDesireability ( class APickupFactory* P )
{
	static UFunction* pFnSuperDesireability = NULL;

	if ( ! pFnSuperDesireability )
		pFnSuperDesireability = (UFunction*) UObject::GObjObjects()->Data[ 51533 ];

	AUTBot_eventSuperDesireability_Parms SuperDesireability_Parms;
	SuperDesireability_Parms.P = P;

	this->ProcessEvent ( pFnSuperDesireability, &SuperDesireability_Parms, NULL );

	return SuperDesireability_Parms.ReturnValue;
};

// Function UTGame.UTBot.RatePickup
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  PickupHolder                   ( CPF_Parm )
// class UClass*                  InvClass                       ( CPF_Parm )

float AUTBot::eventRatePickup ( class AActor* PickupHolder, class UClass* InvClass )
{
	static UFunction* pFnRatePickup = NULL;

	if ( ! pFnRatePickup )
		pFnRatePickup = (UFunction*) UObject::GObjObjects()->Data[ 48681 ];

	AUTBot_eventRatePickup_Parms RatePickup_Parms;
	RatePickup_Parms.PickupHolder = PickupHolder;
	RatePickup_Parms.InvClass = InvClass;

	this->ProcessEvent ( pFnRatePickup, &RatePickup_Parms, NULL );

	return RatePickup_Parms.ReturnValue;
};

// Function UTGame.UTBot.NeedWeapon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::NeedWeapon ( )
{
	static UFunction* pFnNeedWeapon = NULL;

	if ( ! pFnNeedWeapon )
		pFnNeedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50771 ];

	AUTBot_execNeedWeapon_Parms NeedWeapon_Parms;

	this->ProcessEvent ( pFnNeedWeapon, &NeedWeapon_Parms, NULL );

	return NeedWeapon_Parms.ReturnValue;
};

// Function UTGame.UTBot.FaceActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          StrafingModifier               ( CPF_Parm )

class AActor* AUTBot::FaceActor ( float StrafingModifier )
{
	static UFunction* pFnFaceActor = NULL;

	if ( ! pFnFaceActor )
		pFnFaceActor = (UFunction*) UObject::GObjObjects()->Data[ 51521 ];

	AUTBot_execFaceActor_Parms FaceActor_Parms;
	FaceActor_Parms.StrafingModifier = StrafingModifier;

	this->ProcessEvent ( pFnFaceActor, &FaceActor_Parms, NULL );

	return FaceActor_Parms.ReturnValue;
};

// Function UTGame.UTBot.ShouldStrafeTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  WayPoint                       ( CPF_Parm )

bool AUTBot::ShouldStrafeTo ( class AActor* WayPoint )
{
	static UFunction* pFnShouldStrafeTo = NULL;

	if ( ! pFnShouldStrafeTo )
		pFnShouldStrafeTo = (UFunction*) UObject::GObjObjects()->Data[ 51517 ];

	AUTBot_execShouldStrafeTo_Parms ShouldStrafeTo_Parms;
	ShouldStrafeTo_Parms.WayPoint = WayPoint;

	this->ProcessEvent ( pFnShouldStrafeTo, &ShouldStrafeTo_Parms, NULL );

	return ShouldStrafeTo_Parms.ReturnValue;
};

// Function UTGame.UTBot.FaceMoveTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTBot::FaceMoveTarget ( )
{
	static UFunction* pFnFaceMoveTarget = NULL;

	if ( ! pFnFaceMoveTarget )
		pFnFaceMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 51515 ];

	AUTBot_execFaceMoveTarget_Parms FaceMoveTarget_Parms;

	this->ProcessEvent ( pFnFaceMoveTarget, &FaceMoveTarget_Parms, NULL );

	return FaceMoveTarget_Parms.ReturnValue;
};

// Function UTGame.UTBot.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Killed                         ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTBot::NotifyKilled ( class AController* Killer, class AController* Killed, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 51510 ];

	AUTBot_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function UTGame.UTBot.TryToDuck
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 duckDir                        ( CPF_Parm )
// unsigned long                  bReversed                      ( CPF_Parm )

bool AUTBot::TryToDuck ( struct FVector duckDir, unsigned long bReversed )
{
	static UFunction* pFnTryToDuck = NULL;

	if ( ! pFnTryToDuck )
		pFnTryToDuck = (UFunction*) UObject::GObjObjects()->Data[ 51495 ];

	AUTBot_execTryToDuck_Parms TryToDuck_Parms;
	memcpy ( &TryToDuck_Parms.duckDir, &duckDir, 0xC );
	TryToDuck_Parms.bReversed = bReversed;

	this->ProcessEvent ( pFnTryToDuck, &TryToDuck_Parms, NULL );

	return TryToDuck_Parms.ReturnValue;
};

// Function UTGame.UTBot.ChangeStrafe
// [0x00020000] 
// Parameters infos:

void AUTBot::ChangeStrafe ( )
{
	static UFunction* pFnChangeStrafe = NULL;

	if ( ! pFnChangeStrafe )
		pFnChangeStrafe = (UFunction*) UObject::GObjObjects()->Data[ 51494 ];

	AUTBot_execChangeStrafe_Parms ChangeStrafe_Parms;

	this->ProcessEvent ( pFnChangeStrafe, &ChangeStrafe_Parms, NULL );
};

// Function UTGame.UTBot.TryWallDodge
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

bool AUTBot::TryWallDodge ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnTryWallDodge = NULL;

	if ( ! pFnTryWallDodge )
		pFnTryWallDodge = (UFunction*) UObject::GObjObjects()->Data[ 51480 ];

	AUTBot_execTryWallDodge_Parms TryWallDodge_Parms;
	memcpy ( &TryWallDodge_Parms.HitNormal, &HitNormal, 0xC );
	TryWallDodge_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnTryWallDodge, &TryWallDodge_Parms, NULL );

	return TryWallDodge_Parms.ReturnValue;
};

// Function UTGame.UTBot.MissedDodge
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventMissedDodge ( )
{
	static UFunction* pFnMissedDodge = NULL;

	if ( ! pFnMissedDodge )
		pFnMissedDodge = (UFunction*) UObject::GObjObjects()->Data[ 51474 ];

	AUTBot_eventMissedDodge_Parms MissedDodge_Parms;

	this->ProcessEvent ( pFnMissedDodge, &MissedDodge_Parms, NULL );
};

// Function UTGame.UTBot.NotifyFallingHitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

void AUTBot::eventNotifyFallingHitWall ( struct FVector HitNormal, class AActor* HitActor )
{
	static UFunction* pFnNotifyFallingHitWall = NULL;

	if ( ! pFnNotifyFallingHitWall )
		pFnNotifyFallingHitWall = (UFunction*) UObject::GObjObjects()->Data[ 51471 ];

	AUTBot_eventNotifyFallingHitWall_Parms NotifyFallingHitWall_Parms;
	memcpy ( &NotifyFallingHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyFallingHitWall_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnNotifyFallingHitWall, &NotifyFallingHitWall_Parms, NULL );
};

// Function UTGame.UTBot.ReceiveRunOverWarning
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AUDKVehicle*             V                              ( CPF_Parm )
// float                          projSpeed                      ( CPF_Parm )
// struct FVector                 VehicleDir                     ( CPF_Parm )

void AUTBot::eventReceiveRunOverWarning ( class AUDKVehicle* V, float projSpeed, struct FVector VehicleDir )
{
	static UFunction* pFnReceiveRunOverWarning = NULL;

	if ( ! pFnReceiveRunOverWarning )
		pFnReceiveRunOverWarning = (UFunction*) UObject::GObjObjects()->Data[ 51467 ];

	AUTBot_eventReceiveRunOverWarning_Parms ReceiveRunOverWarning_Parms;
	ReceiveRunOverWarning_Parms.V = V;
	ReceiveRunOverWarning_Parms.projSpeed = projSpeed;
	memcpy ( &ReceiveRunOverWarning_Parms.VehicleDir, &VehicleDir, 0xC );

	this->ProcessEvent ( pFnReceiveRunOverWarning, &ReceiveRunOverWarning_Parms, NULL );
};

// Function UTGame.UTBot.ReceiveWarning
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   shooter                        ( CPF_Parm )
// float                          projSpeed                      ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )

void AUTBot::eventReceiveWarning ( class APawn* shooter, float projSpeed, struct FVector FireDir )
{
	static UFunction* pFnReceiveWarning = NULL;

	if ( ! pFnReceiveWarning )
		pFnReceiveWarning = (UFunction*) UObject::GObjObjects()->Data[ 51456 ];

	AUTBot_eventReceiveWarning_Parms ReceiveWarning_Parms;
	ReceiveWarning_Parms.shooter = shooter;
	ReceiveWarning_Parms.projSpeed = projSpeed;
	memcpy ( &ReceiveWarning_Parms.FireDir, &FireDir, 0xC );

	this->ProcessEvent ( pFnReceiveWarning, &ReceiveWarning_Parms, NULL );
};

// Function UTGame.UTBot.DelayedInstantWarning
// [0x00820002] 
// Parameters infos:

void AUTBot::DelayedInstantWarning ( )
{
	static UFunction* pFnDelayedInstantWarning = NULL;

	if ( ! pFnDelayedInstantWarning )
		pFnDelayedInstantWarning = (UFunction*) UObject::GObjObjects()->Data[ 51451 ];

	AUTBot_execDelayedInstantWarning_Parms DelayedInstantWarning_Parms;

	this->ProcessEvent ( pFnDelayedInstantWarning, &DelayedInstantWarning_Parms, NULL );
};

// Function UTGame.UTBot.NotifyTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void AUTBot::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 51445 ];

	AUTBot_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function UTGame.UTBot.ReceiveProjectileWarning
// [0x00820002] 
// Parameters infos:
// class AProjectile*             Proj                           ( CPF_Parm )

void AUTBot::ReceiveProjectileWarning ( class AProjectile* Proj )
{
	static UFunction* pFnReceiveProjectileWarning = NULL;

	if ( ! pFnReceiveProjectileWarning )
		pFnReceiveProjectileWarning = (UFunction*) UObject::GObjObjects()->Data[ 51438 ];

	AUTBot_execReceiveProjectileWarning_Parms ReceiveProjectileWarning_Parms;
	ReceiveProjectileWarning_Parms.Proj = Proj;

	this->ProcessEvent ( pFnReceiveProjectileWarning, &ReceiveProjectileWarning_Parms, NULL );
};

// Function UTGame.UTBot.DelayedWarning
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventDelayedWarning ( )
{
	static UFunction* pFnDelayedWarning = NULL;

	if ( ! pFnDelayedWarning )
		pFnDelayedWarning = (UFunction*) UObject::GObjObjects()->Data[ 51427 ];

	AUTBot_eventDelayedWarning_Parms DelayedWarning_Parms;

	this->ProcessEvent ( pFnDelayedWarning, &DelayedWarning_Parms, NULL );
};

// Function UTGame.UTBot.TryDuckTowardsMoveTarget
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Dir                            ( CPF_Parm )
// struct FVector                 Y                              ( CPF_Parm )

bool AUTBot::TryDuckTowardsMoveTarget ( struct FVector Dir, struct FVector Y )
{
	static UFunction* pFnTryDuckTowardsMoveTarget = NULL;

	if ( ! pFnTryDuckTowardsMoveTarget )
		pFnTryDuckTowardsMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 51422 ];

	AUTBot_execTryDuckTowardsMoveTarget_Parms TryDuckTowardsMoveTarget_Parms;
	memcpy ( &TryDuckTowardsMoveTarget_Parms.Dir, &Dir, 0xC );
	memcpy ( &TryDuckTowardsMoveTarget_Parms.Y, &Y, 0xC );

	this->ProcessEvent ( pFnTryDuckTowardsMoveTarget, &TryDuckTowardsMoveTarget_Parms, NULL );

	return TryDuckTowardsMoveTarget_Parms.ReturnValue;
};

// Function UTGame.UTBot.GetAdjustedAimFor
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 projStart                      ( CPF_Parm )

struct FRotator AUTBot::GetAdjustedAimFor ( class AWeapon* InWeapon, struct FVector projStart )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 51404 ];

	AUTBot_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.InWeapon = InWeapon;
	memcpy ( &GetAdjustedAimFor_Parms.projStart, &projStart, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function UTGame.UTBot.AdjustAimError
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          TargetDist                     ( CPF_Parm )
// unsigned long                  bInstantProj                   ( CPF_Parm )

float AUTBot::eventAdjustAimError ( float TargetDist, unsigned long bInstantProj )
{
	static UFunction* pFnAdjustAimError = NULL;

	if ( ! pFnAdjustAimError )
		pFnAdjustAimError = (UFunction*) UObject::GObjObjects()->Data[ 51389 ];

	AUTBot_eventAdjustAimError_Parms AdjustAimError_Parms;
	AdjustAimError_Parms.TargetDist = TargetDist;
	AdjustAimError_Parms.bInstantProj = bInstantProj;

	this->ProcessEvent ( pFnAdjustAimError, &AdjustAimError_Parms, NULL );

	return AdjustAimError_Parms.ReturnValue;
};

// Function UTGame.UTBot.CheckFutureSight
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool AUTBot::CheckFutureSight ( float DeltaTime )
{
	static UFunction* pFnCheckFutureSight = NULL;

	if ( ! pFnCheckFutureSight )
		pFnCheckFutureSight = (UFunction*) UObject::GObjObjects()->Data[ 51385 ];

	AUTBot_execCheckFutureSight_Parms CheckFutureSight_Parms;
	CheckFutureSight_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckFutureSight, &CheckFutureSight_Parms, NULL );

	return CheckFutureSight_Parms.ReturnValue;
};

// Function UTGame.UTBot.GetDirectionHint
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTBot::GetDirectionHint ( )
{
	static UFunction* pFnGetDirectionHint = NULL;

	if ( ! pFnGetDirectionHint )
		pFnGetDirectionHint = (UFunction*) UObject::GObjObjects()->Data[ 47690 ];

	AUTBot_execGetDirectionHint_Parms GetDirectionHint_Parms;

	this->ProcessEvent ( pFnGetDirectionHint, &GetDirectionHint_Parms, NULL );

	return GetDirectionHint_Parms.ReturnValue;
};

// Function UTGame.UTBot.FindBestPathToward
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// unsigned long                  bCheckedReach                  ( CPF_Parm )
// unsigned long                  bAllowDetour                   ( CPF_Parm )

bool AUTBot::FindBestPathToward ( class AActor* A, unsigned long bCheckedReach, unsigned long bAllowDetour )
{
	static UFunction* pFnFindBestPathToward = NULL;

	if ( ! pFnFindBestPathToward )
		pFnFindBestPathToward = (UFunction*) UObject::GObjObjects()->Data[ 51379 ];

	AUTBot_execFindBestPathToward_Parms FindBestPathToward_Parms;
	FindBestPathToward_Parms.A = A;
	FindBestPathToward_Parms.bCheckedReach = bCheckedReach;
	FindBestPathToward_Parms.bAllowDetour = bAllowDetour;

	this->ProcessEvent ( pFnFindBestPathToward, &FindBestPathToward_Parms, NULL );

	return FindBestPathToward_Parms.ReturnValue;
};

// Function UTGame.UTBot.AllowDetourTo
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        N                              ( CPF_Parm )

bool AUTBot::eventAllowDetourTo ( class ANavigationPoint* N )
{
	static UFunction* pFnAllowDetourTo = NULL;

	if ( ! pFnAllowDetourTo )
		pFnAllowDetourTo = (UFunction*) UObject::GObjObjects()->Data[ 51374 ];

	AUTBot_eventAllowDetourTo_Parms AllowDetourTo_Parms;
	AllowDetourTo_Parms.N = N;

	this->ProcessEvent ( pFnAllowDetourTo, &AllowDetourTo_Parms, NULL );

	return AllowDetourTo_Parms.ReturnValue;
};

// Function UTGame.UTBot.SetRouteToGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool AUTBot::SetRouteToGoal ( class AActor* A )
{
	static UFunction* pFnSetRouteToGoal = NULL;

	if ( ! pFnSetRouteToGoal )
		pFnSetRouteToGoal = (UFunction*) UObject::GObjObjects()->Data[ 51371 ];

	AUTBot_execSetRouteToGoal_Parms SetRouteToGoal_Parms;
	SetRouteToGoal_Parms.A = A;

	this->ProcessEvent ( pFnSetRouteToGoal, &SetRouteToGoal_Parms, NULL );

	return SetRouteToGoal_Parms.ReturnValue;
};

// Function UTGame.UTBot.StartMoveToward
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )

bool AUTBot::StartMoveToward ( class AActor* O )
{
	static UFunction* pFnStartMoveToward = NULL;

	if ( ! pFnStartMoveToward )
		pFnStartMoveToward = (UFunction*) UObject::GObjObjects()->Data[ 51368 ];

	AUTBot_execStartMoveToward_Parms StartMoveToward_Parms;
	StartMoveToward_Parms.O = O;

	this->ProcessEvent ( pFnStartMoveToward, &StartMoveToward_Parms, NULL );

	return StartMoveToward_Parms.ReturnValue;
};

// Function UTGame.UTBot.TimedDodgeToMoveTarget
// [0x00020002] 
// Parameters infos:

void AUTBot::TimedDodgeToMoveTarget ( )
{
	static UFunction* pFnTimedDodgeToMoveTarget = NULL;

	if ( ! pFnTimedDodgeToMoveTarget )
		pFnTimedDodgeToMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 51367 ];

	AUTBot_execTimedDodgeToMoveTarget_Parms TimedDodgeToMoveTarget_Parms;

	this->ProcessEvent ( pFnTimedDodgeToMoveTarget, &TimedDodgeToMoveTarget_Parms, NULL );
};

// Function UTGame.UTBot.NotifyPostLanded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventNotifyPostLanded ( )
{
	static UFunction* pFnNotifyPostLanded = NULL;

	if ( ! pFnNotifyPostLanded )
		pFnNotifyPostLanded = (UFunction*) UObject::GObjObjects()->Data[ 51366 ];

	AUTBot_eventNotifyPostLanded_Parms NotifyPostLanded_Parms;

	this->ProcessEvent ( pFnNotifyPostLanded, &NotifyPostLanded_Parms, NULL );
};

// Function UTGame.UTBot.NotifyLanded
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

bool AUTBot::eventNotifyLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnNotifyLanded = NULL;

	if ( ! pFnNotifyLanded )
		pFnNotifyLanded = (UFunction*) UObject::GObjObjects()->Data[ 50939 ];

	AUTBot_eventNotifyLanded_Parms NotifyLanded_Parms;
	memcpy ( &NotifyLanded_Parms.HitNormal, &HitNormal, 0xC );
	NotifyLanded_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnNotifyLanded, &NotifyLanded_Parms, NULL );

	return NotifyLanded_Parms.ReturnValue;
};

// Function UTGame.UTBot.SetFall
// [0x00820002] 
// Parameters infos:

void AUTBot::SetFall ( )
{
	static UFunction* pFnSetFall = NULL;

	if ( ! pFnSetFall )
		pFnSetFall = (UFunction*) UObject::GObjObjects()->Data[ 50943 ];

	AUTBot_execSetFall_Parms SetFall_Parms;

	this->ProcessEvent ( pFnSetFall, &SetFall_Parms, NULL );
};

// Function UTGame.UTBot.PriorityObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::PriorityObjective ( )
{
	static UFunction* pFnPriorityObjective = NULL;

	if ( ! pFnPriorityObjective )
		pFnPriorityObjective = (UFunction*) UObject::GObjObjects()->Data[ 48943 ];

	AUTBot_execPriorityObjective_Parms PriorityObjective_Parms;

	this->ProcessEvent ( pFnPriorityObjective, &PriorityObjective_Parms, NULL );

	return PriorityObjective_Parms.ReturnValue;
};

// Function UTGame.UTBot.NotifyBump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool AUTBot::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 51355 ];

	AUTBot_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function UTGame.UTBot.AdjustAround
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTBot::AdjustAround ( class APawn* Other )
{
	static UFunction* pFnAdjustAround = NULL;

	if ( ! pFnAdjustAround )
		pFnAdjustAround = (UFunction*) UObject::GObjObjects()->Data[ 51346 ];

	AUTBot_execAdjustAround_Parms AdjustAround_Parms;
	AdjustAround_Parms.Other = Other;

	this->ProcessEvent ( pFnAdjustAround, &AdjustAround_Parms, NULL );

	return AdjustAround_Parms.ReturnValue;
};

// Function UTGame.UTBot.ClearPathFor
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTBot::ClearPathFor ( class AController* C )
{
	static UFunction* pFnClearPathFor = NULL;

	if ( ! pFnClearPathFor )
		pFnClearPathFor = (UFunction*) UObject::GObjObjects()->Data[ 51344 ];

	AUTBot_execClearPathFor_Parms ClearPathFor_Parms;
	ClearPathFor_Parms.C = C;

	this->ProcessEvent ( pFnClearPathFor, &ClearPathFor_Parms, NULL );
};

// Function UTGame.UTBot.CheckPathToGoalAround
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTBot::CheckPathToGoalAround ( class APawn* P )
{
	static UFunction* pFnCheckPathToGoalAround = NULL;

	if ( ! pFnCheckPathToGoalAround )
		pFnCheckPathToGoalAround = (UFunction*) UObject::GObjObjects()->Data[ 51341 ];

	AUTBot_execCheckPathToGoalAround_Parms CheckPathToGoalAround_Parms;
	CheckPathToGoalAround_Parms.P = P;

	this->ProcessEvent ( pFnCheckPathToGoalAround, &CheckPathToGoalAround_Parms, NULL );

	return CheckPathToGoalAround_Parms.ReturnValue;
};

// Function UTGame.UTBot.Restart
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTBot::Restart ( unsigned long bVehicleTransition )
{
	static UFunction* pFnRestart = NULL;

	if ( ! pFnRestart )
		pFnRestart = (UFunction*) UObject::GObjObjects()->Data[ 51339 ];

	AUTBot_execRestart_Parms Restart_Parms;
	Restart_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnRestart, &Restart_Parms, NULL );
};

// Function UTGame.UTBot.FindRoamDest
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::FindRoamDest ( )
{
	static UFunction* pFnFindRoamDest = NULL;

	if ( ! pFnFindRoamDest )
		pFnFindRoamDest = (UFunction*) UObject::GObjObjects()->Data[ 51336 ];

	AUTBot_execFindRoamDest_Parms FindRoamDest_Parms;

	this->ProcessEvent ( pFnFindRoamDest, &FindRoamDest_Parms, NULL );

	return FindRoamDest_Parms.ReturnValue;
};

// Function UTGame.UTBot.SoakStop
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 problem                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void AUTBot::eventSoakStop ( struct FString problem )
{
	static UFunction* pFnSoakStop = NULL;

	if ( ! pFnSoakStop )
		pFnSoakStop = (UFunction*) UObject::GObjObjects()->Data[ 51333 ];

	AUTBot_eventSoakStop_Parms SoakStop_Parms;
	memcpy ( &SoakStop_Parms.problem, &problem, 0xC );

	this->ProcessEvent ( pFnSoakStop, &SoakStop_Parms, NULL );
};

// Function UTGame.UTBot.PickRetreatDestination
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::PickRetreatDestination ( )
{
	static UFunction* pFnPickRetreatDestination = NULL;

	if ( ! pFnPickRetreatDestination )
		pFnPickRetreatDestination = (UFunction*) UObject::GObjObjects()->Data[ 51330 ];

	AUTBot_execPickRetreatDestination_Parms PickRetreatDestination_Parms;

	this->ProcessEvent ( pFnPickRetreatDestination, &PickRetreatDestination_Parms, NULL );

	return PickRetreatDestination_Parms.ReturnValue;
};

// Function UTGame.UTBot.TossFlagToPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             OrderGiver                     ( CPF_Parm )

void AUTBot::TossFlagToPlayer ( class AController* OrderGiver )
{
	static UFunction* pFnTossFlagToPlayer = NULL;

	if ( ! pFnTossFlagToPlayer )
		pFnTossFlagToPlayer = (UFunction*) UObject::GObjObjects()->Data[ 51324 ];

	AUTBot_execTossFlagToPlayer_Parms TossFlagToPlayer_Parms;
	TossFlagToPlayer_Parms.OrderGiver = OrderGiver;

	this->ProcessEvent ( pFnTossFlagToPlayer, &TossFlagToPlayer_Parms, NULL );
};

// Function UTGame.UTBot.FindInventoryGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          BestWeight                     ( CPF_Parm )

bool AUTBot::FindInventoryGoal ( float BestWeight )
{
	static UFunction* pFnFindInventoryGoal = NULL;

	if ( ! pFnFindInventoryGoal )
		pFnFindInventoryGoal = (UFunction*) UObject::GObjObjects()->Data[ 51319 ];

	AUTBot_execFindInventoryGoal_Parms FindInventoryGoal_Parms;
	FindInventoryGoal_Parms.BestWeight = BestWeight;

	this->ProcessEvent ( pFnFindInventoryGoal, &FindInventoryGoal_Parms, NULL );

	return FindInventoryGoal_Parms.ReturnValue;
};

// Function UTGame.UTBot.FindSuperPickup
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          MaxDist                        ( CPF_Parm )

bool AUTBot::FindSuperPickup ( float MaxDist )
{
	static UFunction* pFnFindSuperPickup = NULL;

	if ( ! pFnFindSuperPickup )
		pFnFindSuperPickup = (UFunction*) UObject::GObjObjects()->Data[ 51311 ];

	AUTBot_execFindSuperPickup_Parms FindSuperPickup_Parms;
	FindSuperPickup_Parms.MaxDist = MaxDist;

	this->ProcessEvent ( pFnFindSuperPickup, &FindSuperPickup_Parms, NULL );

	return FindSuperPickup_Parms.ReturnValue;
};

// Function UTGame.UTBot.ChooseAttackMode
// [0x00020002] 
// Parameters infos:

void AUTBot::ChooseAttackMode ( )
{
	static UFunction* pFnChooseAttackMode = NULL;

	if ( ! pFnChooseAttackMode )
		pFnChooseAttackMode = (UFunction*) UObject::GObjObjects()->Data[ 51305 ];

	AUTBot_execChooseAttackMode_Parms ChooseAttackMode_Parms;

	this->ProcessEvent ( pFnChooseAttackMode, &ChooseAttackMode_Parms, NULL );
};

// Function UTGame.UTBot.DoRangedAttackOn
// [0x00020002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )

void AUTBot::DoRangedAttackOn ( class AActor* A )
{
	static UFunction* pFnDoRangedAttackOn = NULL;

	if ( ! pFnDoRangedAttackOn )
		pFnDoRangedAttackOn = (UFunction*) UObject::GObjObjects()->Data[ 51302 ];

	AUTBot_execDoRangedAttackOn_Parms DoRangedAttackOn_Parms;
	DoRangedAttackOn_Parms.A = A;

	this->ProcessEvent ( pFnDoRangedAttackOn, &DoRangedAttackOn_Parms, NULL );
};

// Function UTGame.UTBot.FightEnemy
// [0x00820002] 
// Parameters infos:
// unsigned long                  bCanCharge                     ( CPF_Parm )
// float                          EnemyStrength                  ( CPF_Parm )

void AUTBot::FightEnemy ( unsigned long bCanCharge, float EnemyStrength )
{
	static UFunction* pFnFightEnemy = NULL;

	if ( ! pFnFightEnemy )
		pFnFightEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51290 ];

	AUTBot_execFightEnemy_Parms FightEnemy_Parms;
	FightEnemy_Parms.bCanCharge = bCanCharge;
	FightEnemy_Parms.EnemyStrength = EnemyStrength;

	this->ProcessEvent ( pFnFightEnemy, &FightEnemy_Parms, NULL );
};

// Function UTGame.UTBot.VehicleFightEnemy
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCanCharge                     ( CPF_Parm )
// float                          EnemyStrength                  ( CPF_Parm )

void AUTBot::VehicleFightEnemy ( unsigned long bCanCharge, float EnemyStrength )
{
	static UFunction* pFnVehicleFightEnemy = NULL;

	if ( ! pFnVehicleFightEnemy )
		pFnVehicleFightEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51286 ];

	AUTBot_execVehicleFightEnemy_Parms VehicleFightEnemy_Parms;
	VehicleFightEnemy_Parms.bCanCharge = bCanCharge;
	VehicleFightEnemy_Parms.EnemyStrength = EnemyStrength;

	this->ProcessEvent ( pFnVehicleFightEnemy, &VehicleFightEnemy_Parms, NULL );
};

// Function UTGame.UTBot.DoWaitForLanding
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::DoWaitForLanding ( )
{
	static UFunction* pFnDoWaitForLanding = NULL;

	if ( ! pFnDoWaitForLanding )
		pFnDoWaitForLanding = (UFunction*) UObject::GObjObjects()->Data[ 50933 ];

	AUTBot_execDoWaitForLanding_Parms DoWaitForLanding_Parms;

	this->ProcessEvent ( pFnDoWaitForLanding, &DoWaitForLanding_Parms, NULL );

	return DoWaitForLanding_Parms.ReturnValue;
};

// Function UTGame.UTBot.DelayedLeaveVehicle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventDelayedLeaveVehicle ( )
{
	static UFunction* pFnDelayedLeaveVehicle = NULL;

	if ( ! pFnDelayedLeaveVehicle )
		pFnDelayedLeaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 50935 ];

	AUTBot_eventDelayedLeaveVehicle_Parms DelayedLeaveVehicle_Parms;

	this->ProcessEvent ( pFnDelayedLeaveVehicle, &DelayedLeaveVehicle_Parms, NULL );
};

// Function UTGame.UTBot.LeaveVehicle
// [0x00020002] 
// Parameters infos:
// unsigned long                  bBlocking                      ( CPF_Parm )

void AUTBot::LeaveVehicle ( unsigned long bBlocking )
{
	static UFunction* pFnLeaveVehicle = NULL;

	if ( ! pFnLeaveVehicle )
		pFnLeaveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 51283 ];

	AUTBot_execLeaveVehicle_Parms LeaveVehicle_Parms;
	LeaveVehicle_Parms.bBlocking = bBlocking;

	this->ProcessEvent ( pFnLeaveVehicle, &LeaveVehicle_Parms, NULL );
};

// Function UTGame.UTBot.EnterVehicle
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void AUTBot::EnterVehicle ( class AVehicle* V )
{
	static UFunction* pFnEnterVehicle = NULL;

	if ( ! pFnEnterVehicle )
		pFnEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 51281 ];

	AUTBot_execEnterVehicle_Parms EnterVehicle_Parms;
	EnterVehicle_Parms.V = V;

	this->ProcessEvent ( pFnEnterVehicle, &EnterVehicle_Parms, NULL );
};

// Function UTGame.UTBot.ExecuteWhatToDoNext
// [0x00080802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventExecuteWhatToDoNext ( )
{
	static UFunction* pFnExecuteWhatToDoNext = NULL;

	if ( ! pFnExecuteWhatToDoNext )
		pFnExecuteWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 51272 ];

	AUTBot_eventExecuteWhatToDoNext_Parms ExecuteWhatToDoNext_Parms;

	this->ProcessEvent ( pFnExecuteWhatToDoNext, &ExecuteWhatToDoNext_Parms, NULL );
};

// Function UTGame.UTBot.WhatToDoNext
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventWhatToDoNext ( )
{
	static UFunction* pFnWhatToDoNext = NULL;

	if ( ! pFnWhatToDoNext )
		pFnWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 51269 ];

	AUTBot_eventWhatToDoNext_Parms WhatToDoNext_Parms;

	this->ProcessEvent ( pFnWhatToDoNext, &WhatToDoNext_Parms, NULL );
};

// Function UTGame.UTBot.SetAlertness
// [0x00020002] 
// Parameters infos:
// float                          NewAlertness                   ( CPF_Parm )

void AUTBot::SetAlertness ( float NewAlertness )
{
	static UFunction* pFnSetAlertness = NULL;

	if ( ! pFnSetAlertness )
		pFnSetAlertness = (UFunction*) UObject::GObjObjects()->Data[ 51267 ];

	AUTBot_execSetAlertness_Parms SetAlertness_Parms;
	SetAlertness_Parms.NewAlertness = NewAlertness;

	this->ProcessEvent ( pFnSetAlertness, &SetAlertness_Parms, NULL );
};

// Function UTGame.UTBot.SetPeripheralVision
// [0x00020002] 
// Parameters infos:

void AUTBot::SetPeripheralVision ( )
{
	static UFunction* pFnSetPeripheralVision = NULL;

	if ( ! pFnSetPeripheralVision )
		pFnSetPeripheralVision = (UFunction*) UObject::GObjObjects()->Data[ 51266 ];

	AUTBot_execSetPeripheralVision_Parms SetPeripheralVision_Parms;

	this->ProcessEvent ( pFnSetPeripheralVision, &SetPeripheralVision_Parms, NULL );
};

// Function UTGame.UTBot.SetMaxDesiredSpeed
// [0x00020002] 
// Parameters infos:

void AUTBot::SetMaxDesiredSpeed ( )
{
	static UFunction* pFnSetMaxDesiredSpeed = NULL;

	if ( ! pFnSetMaxDesiredSpeed )
		pFnSetMaxDesiredSpeed = (UFunction*) UObject::GObjObjects()->Data[ 51265 ];

	AUTBot_execSetMaxDesiredSpeed_Parms SetMaxDesiredSpeed_Parms;

	this->ProcessEvent ( pFnSetMaxDesiredSpeed, &SetMaxDesiredSpeed_Parms, NULL );
};

// Function UTGame.UTBot.ResetSkill
// [0x00020002] 
// Parameters infos:

void AUTBot::ResetSkill ( )
{
	static UFunction* pFnResetSkill = NULL;

	if ( ! pFnResetSkill )
		pFnResetSkill = (UFunction*) UObject::GObjObjects()->Data[ 51264 ];

	AUTBot_execResetSkill_Parms ResetSkill_Parms;

	this->ProcessEvent ( pFnResetSkill, &ResetSkill_Parms, NULL );
};

// Function UTGame.UTBot.Initialize
// [0x00420002] 
// Parameters infos:
// float                          InSkill                        ( CPF_Parm )
// struct FCharacterInfo          BotInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTBot::Initialize ( float InSkill, struct FCharacterInfo* BotInfo )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 51258 ];

	AUTBot_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.InSkill = InSkill;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	if ( BotInfo )
		memcpy ( BotInfo, &Initialize_Parms.BotInfo, 0x70 );
};

// Function UTGame.UTBot.Possess
// [0x00020002] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTBot::Possess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 51255 ];

	AUTBot_execPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function UTGame.UTBot.Reset
// [0x00020002] 
// Parameters infos:

void AUTBot::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 51254 ];

	AUTBot_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTBot.NotifyMissedJump
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventNotifyMissedJump ( )
{
	static UFunction* pFnNotifyMissedJump = NULL;

	if ( ! pFnNotifyMissedJump )
		pFnNotifyMissedJump = (UFunction*) UObject::GObjObjects()->Data[ 51247 ];

	AUTBot_eventNotifyMissedJump_Parms NotifyMissedJump_Parms;

	this->ProcessEvent ( pFnNotifyMissedJump, &NotifyMissedJump_Parms, NULL );
};

// Function UTGame.UTBot.NotifyJumpApex
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventNotifyJumpApex ( )
{
	static UFunction* pFnNotifyJumpApex = NULL;

	if ( ! pFnNotifyJumpApex )
		pFnNotifyJumpApex = (UFunction*) UObject::GObjObjects()->Data[ 51241 ];

	AUTBot_eventNotifyJumpApex_Parms NotifyJumpApex_Parms;

	this->ProcessEvent ( pFnNotifyJumpApex, &NotifyJumpApex_Parms, NULL );
};

// Function UTGame.UTBot.MayDodgeToMoveTarget
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventMayDodgeToMoveTarget ( )
{
	static UFunction* pFnMayDodgeToMoveTarget = NULL;

	if ( ! pFnMayDodgeToMoveTarget )
		pFnMayDodgeToMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 51229 ];

	AUTBot_eventMayDodgeToMoveTarget_Parms MayDodgeToMoveTarget_Parms;

	this->ProcessEvent ( pFnMayDodgeToMoveTarget, &MayDodgeToMoveTarget_Parms, NULL );
};

// Function UTGame.UTBot.NotifyPhysicsVolumeChange
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void AUTBot::eventNotifyPhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnNotifyPhysicsVolumeChange = NULL;

	if ( ! pFnNotifyPhysicsVolumeChange )
		pFnNotifyPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 51226 ];

	AUTBot_eventNotifyPhysicsVolumeChange_Parms NotifyPhysicsVolumeChange_Parms;
	NotifyPhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnNotifyPhysicsVolumeChange, &NotifyPhysicsVolumeChange_Parms, NULL );
};

// Function UTGame.UTBot.StrafeFromDamage
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// unsigned long                  bFindDest                      ( CPF_Parm )

bool AUTBot::StrafeFromDamage ( float Damage, class UClass* DamageType, unsigned long bFindDest )
{
	static UFunction* pFnStrafeFromDamage = NULL;

	if ( ! pFnStrafeFromDamage )
		pFnStrafeFromDamage = (UFunction*) UObject::GObjObjects()->Data[ 51221 ];

	AUTBot_execStrafeFromDamage_Parms StrafeFromDamage_Parms;
	StrafeFromDamage_Parms.Damage = Damage;
	StrafeFromDamage_Parms.DamageType = DamageType;
	StrafeFromDamage_Parms.bFindDest = bFindDest;

	this->ProcessEvent ( pFnStrafeFromDamage, &StrafeFromDamage_Parms, NULL );

	return StrafeFromDamage_Parms.ReturnValue;
};

// Function UTGame.UTBot.EnemyChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewEnemyVisible               ( CPF_Parm )

void AUTBot::EnemyChanged ( unsigned long bNewEnemyVisible )
{
	static UFunction* pFnEnemyChanged = NULL;

	if ( ! pFnEnemyChanged )
		pFnEnemyChanged = (UFunction*) UObject::GObjObjects()->Data[ 51219 ];

	AUTBot_execEnemyChanged_Parms EnemyChanged_Parms;
	EnemyChanged_Parms.bNewEnemyVisible = bNewEnemyVisible;

	this->ProcessEvent ( pFnEnemyChanged, &EnemyChanged_Parms, NULL );
};

// Function UTGame.UTBot.SetEnemyInfo
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewEnemyVisible               ( CPF_Parm )

void AUTBot::SetEnemyInfo ( unsigned long bNewEnemyVisible )
{
	static UFunction* pFnSetEnemyInfo = NULL;

	if ( ! pFnSetEnemyInfo )
		pFnSetEnemyInfo = (UFunction*) UObject::GObjObjects()->Data[ 51214 ];

	AUTBot_execSetEnemyInfo_Parms SetEnemyInfo_Parms;
	SetEnemyInfo_Parms.bNewEnemyVisible = bNewEnemyVisible;

	this->ProcessEvent ( pFnSetEnemyInfo, &SetEnemyInfo_Parms, NULL );
};

// Function UTGame.UTBot.RelativeStrength
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

float AUTBot::RelativeStrength ( class APawn* Other )
{
	static UFunction* pFnRelativeStrength = NULL;

	if ( ! pFnRelativeStrength )
		pFnRelativeStrength = (UFunction*) UObject::GObjObjects()->Data[ 51209 ];

	AUTBot_execRelativeStrength_Parms RelativeStrength_Parms;
	RelativeStrength_Parms.Other = Other;

	this->ProcessEvent ( pFnRelativeStrength, &RelativeStrength_Parms, NULL );

	return RelativeStrength_Parms.ReturnValue;
};

// Function UTGame.UTBot.AssignSquadResponsibility
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::AssignSquadResponsibility ( )
{
	static UFunction* pFnAssignSquadResponsibility = NULL;

	if ( ! pFnAssignSquadResponsibility )
		pFnAssignSquadResponsibility = (UFunction*) UObject::GObjObjects()->Data[ 51205 ];

	AUTBot_execAssignSquadResponsibility_Parms AssignSquadResponsibility_Parms;

	this->ProcessEvent ( pFnAssignSquadResponsibility, &AssignSquadResponsibility_Parms, NULL );

	return AssignSquadResponsibility_Parms.ReturnValue;
};

// Function UTGame.UTBot.FreePoint
// [0x00020002] 
// Parameters infos:

void AUTBot::FreePoint ( )
{
	static UFunction* pFnFreePoint = NULL;

	if ( ! pFnFreePoint )
		pFnFreePoint = (UFunction*) UObject::GObjObjects()->Data[ 51204 ];

	AUTBot_execFreePoint_Parms FreePoint_Parms;

	this->ProcessEvent ( pFnFreePoint, &FreePoint_Parms, NULL );
};

// Function UTGame.UTBot.IsSniping
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::IsSniping ( )
{
	static UFunction* pFnIsSniping = NULL;

	if ( ! pFnIsSniping )
		pFnIsSniping = (UFunction*) UObject::GObjObjects()->Data[ 51201 ];

	AUTBot_execIsSniping_Parms IsSniping_Parms;

	this->ProcessEvent ( pFnIsSniping, &IsSniping_Parms, NULL );

	return IsSniping_Parms.ReturnValue;
};

// Function UTGame.UTBot.CheckIfShouldCrouch
// [0x00820002] 
// Parameters infos:
// struct FVector                 StartPosition                  ( CPF_Parm )
// struct FVector                 TargetPosition                 ( CPF_Parm )
// float                          probability                    ( CPF_Parm )

void AUTBot::CheckIfShouldCrouch ( struct FVector StartPosition, struct FVector TargetPosition, float probability )
{
	static UFunction* pFnCheckIfShouldCrouch = NULL;

	if ( ! pFnCheckIfShouldCrouch )
		pFnCheckIfShouldCrouch = (UFunction*) UObject::GObjObjects()->Data[ 51193 ];

	AUTBot_execCheckIfShouldCrouch_Parms CheckIfShouldCrouch_Parms;
	memcpy ( &CheckIfShouldCrouch_Parms.StartPosition, &StartPosition, 0xC );
	memcpy ( &CheckIfShouldCrouch_Parms.TargetPosition, &TargetPosition, 0xC );
	CheckIfShouldCrouch_Parms.probability = probability;

	this->ProcessEvent ( pFnCheckIfShouldCrouch, &CheckIfShouldCrouch_Parms, NULL );
};

// Function UTGame.UTBot.CanStakeOut
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::CanStakeOut ( )
{
	static UFunction* pFnCanStakeOut = NULL;

	if ( ! pFnCanStakeOut )
		pFnCanStakeOut = (UFunction*) UObject::GObjObjects()->Data[ 51190 ];

	AUTBot_execCanStakeOut_Parms CanStakeOut_Parms;

	this->ProcessEvent ( pFnCanStakeOut, &CanStakeOut_Parms, NULL );

	return CanStakeOut_Parms.ReturnValue;
};

// Function UTGame.UTBot.ClearShot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 TargetLoc                      ( CPF_Parm )
// unsigned long                  bImmediateFire                 ( CPF_Parm )

bool AUTBot::ClearShot ( struct FVector TargetLoc, unsigned long bImmediateFire )
{
	static UFunction* pFnClearShot = NULL;

	if ( ! pFnClearShot )
		pFnClearShot = (UFunction*) UObject::GObjObjects()->Data[ 51185 ];

	AUTBot_execClearShot_Parms ClearShot_Parms;
	memcpy ( &ClearShot_Parms.TargetLoc, &TargetLoc, 0xC );
	ClearShot_Parms.bImmediateFire = bImmediateFire;

	this->ProcessEvent ( pFnClearShot, &ClearShot_Parms, NULL );

	return ClearShot_Parms.ReturnValue;
};

// Function UTGame.UTBot.SetAttractionState
// [0x00020002] 
// Parameters infos:

void AUTBot::SetAttractionState ( )
{
	static UFunction* pFnSetAttractionState = NULL;

	if ( ! pFnSetAttractionState )
		pFnSetAttractionState = (UFunction*) UObject::GObjObjects()->Data[ 51184 ];

	AUTBot_execSetAttractionState_Parms SetAttractionState_Parms;

	this->ProcessEvent ( pFnSetAttractionState, &SetAttractionState_Parms, NULL );
};

// Function UTGame.UTBot.SeePlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   SeenPlayer                     ( CPF_Parm )

void AUTBot::eventSeePlayer ( class APawn* SeenPlayer )
{
	static UFunction* pFnSeePlayer = NULL;

	if ( ! pFnSeePlayer )
		pFnSeePlayer = (UFunction*) UObject::GObjObjects()->Data[ 51182 ];

	AUTBot_eventSeePlayer_Parms SeePlayer_Parms;
	SeePlayer_Parms.SeenPlayer = SeenPlayer;

	this->ProcessEvent ( pFnSeePlayer, &SeePlayer_Parms, NULL );
};

// Function UTGame.UTBot.HearNoise
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void AUTBot::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 51176 ];

	AUTBot_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function UTGame.UTBot.ClearTemporaryOrders
// [0x00020002] 
// Parameters infos:

void AUTBot::ClearTemporaryOrders ( )
{
	static UFunction* pFnClearTemporaryOrders = NULL;

	if ( ! pFnClearTemporaryOrders )
		pFnClearTemporaryOrders = (UFunction*) UObject::GObjObjects()->Data[ 51175 ];

	AUTBot_execClearTemporaryOrders_Parms ClearTemporaryOrders_Parms;

	this->ProcessEvent ( pFnClearTemporaryOrders, &ClearTemporaryOrders_Parms, NULL );
};

// Function UTGame.UTBot.SetTemporaryOrders
// [0x00020002] 
// Parameters infos:
// struct FName                   NewOrders                      ( CPF_Parm )
// class AController*             OrderGiver                     ( CPF_Parm )

void AUTBot::SetTemporaryOrders ( struct FName NewOrders, class AController* OrderGiver )
{
	static UFunction* pFnSetTemporaryOrders = NULL;

	if ( ! pFnSetTemporaryOrders )
		pFnSetTemporaryOrders = (UFunction*) UObject::GObjObjects()->Data[ 51172 ];

	AUTBot_execSetTemporaryOrders_Parms SetTemporaryOrders_Parms;
	memcpy ( &SetTemporaryOrders_Parms.NewOrders, &NewOrders, 0x8 );
	SetTemporaryOrders_Parms.OrderGiver = OrderGiver;

	this->ProcessEvent ( pFnSetTemporaryOrders, &SetTemporaryOrders_Parms, NULL );
};

// Function UTGame.UTBot.SetBotOrders
// [0x00020002] 
// Parameters infos:
// struct FName                   NewOrders                      ( CPF_Parm )
// class AController*             OrderGiver                     ( CPF_Parm )
// unsigned long                  bShouldAck                     ( CPF_Parm )

void AUTBot::SetBotOrders ( struct FName NewOrders, class AController* OrderGiver, unsigned long bShouldAck )
{
	static UFunction* pFnSetBotOrders = NULL;

	if ( ! pFnSetBotOrders )
		pFnSetBotOrders = (UFunction*) UObject::GObjObjects()->Data[ 51167 ];

	AUTBot_execSetBotOrders_Parms SetBotOrders_Parms;
	memcpy ( &SetBotOrders_Parms.NewOrders, &NewOrders, 0x8 );
	SetBotOrders_Parms.OrderGiver = OrderGiver;
	SetBotOrders_Parms.bShouldAck = bShouldAck;

	this->ProcessEvent ( pFnSetBotOrders, &SetBotOrders_Parms, NULL );
};

// Function UTGame.UTBot.SendMessage
// [0x00024002] 
// Parameters infos:
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// float                          Wait                           ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_OptionalParm | CPF_Parm )

void AUTBot::SendMessage ( class APlayerReplicationInfo* Recipient, struct FName MessageType, float Wait, class UClass* DamageType )
{
	static UFunction* pFnSendMessage = NULL;

	if ( ! pFnSendMessage )
		pFnSendMessage = (UFunction*) UObject::GObjObjects()->Data[ 51162 ];

	AUTBot_execSendMessage_Parms SendMessage_Parms;
	SendMessage_Parms.Recipient = Recipient;
	memcpy ( &SendMessage_Parms.MessageType, &MessageType, 0x8 );
	SendMessage_Parms.Wait = Wait;
	SendMessage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnSendMessage, &SendMessage_Parms, NULL );
};

// Function UTGame.UTBot.YellAt
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Moron                          ( CPF_Parm )

void AUTBot::YellAt ( class APlayerReplicationInfo* Moron )
{
	static UFunction* pFnYellAt = NULL;

	if ( ! pFnYellAt )
		pFnYellAt = (UFunction*) UObject::GObjObjects()->Data[ 51159 ];

	AUTBot_execYellAt_Parms YellAt_Parms;
	YellAt_Parms.Moron = Moron;

	this->ProcessEvent ( pFnYellAt, &YellAt_Parms, NULL );
};

// Function UTGame.UTBot.GetOrders
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTBot::GetOrders ( )
{
	static UFunction* pFnGetOrders = NULL;

	if ( ! pFnGetOrders )
		pFnGetOrders = (UFunction*) UObject::GObjObjects()->Data[ 51152 ];

	AUTBot_execGetOrders_Parms GetOrders_Parms;

	this->ProcessEvent ( pFnGetOrders, &GetOrders_Parms, NULL );

	return GetOrders_Parms.ReturnValue;
};

// Function UTGame.UTBot.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void AUTBot::DisplayDebug ( class AHUD* HUD, float* YL, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 51140 ];

	AUTBot_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( YL )
		*YL = DisplayDebug_Parms.YL;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function UTGame.UTBot.CanCombo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::CanCombo ( )
{
	static UFunction* pFnCanCombo = NULL;

	if ( ! pFnCanCombo )
		pFnCanCombo = (UFunction*) UObject::GObjObjects()->Data[ 51138 ];

	AUTBot_execCanCombo_Parms CanCombo_Parms;

	this->ProcessEvent ( pFnCanCombo, &CanCombo_Parms, NULL );

	return CanCombo_Parms.ReturnValue;
};

// Function UTGame.UTBot.CanComboMoving
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::CanComboMoving ( )
{
	static UFunction* pFnCanComboMoving = NULL;

	if ( ! pFnCanComboMoving )
		pFnCanComboMoving = (UFunction*) UObject::GObjObjects()->Data[ 51136 ];

	AUTBot_execCanComboMoving_Parms CanComboMoving_Parms;

	this->ProcessEvent ( pFnCanComboMoving, &CanComboMoving_Parms, NULL );

	return CanComboMoving_Parms.ReturnValue;
};

// Function UTGame.UTBot.ProficientWithWeapon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::ProficientWithWeapon ( )
{
	static UFunction* pFnProficientWithWeapon = NULL;

	if ( ! pFnProficientWithWeapon )
		pFnProficientWithWeapon = (UFunction*) UObject::GObjObjects()->Data[ 51133 ];

	AUTBot_execProficientWithWeapon_Parms ProficientWithWeapon_Parms;

	this->ProcessEvent ( pFnProficientWithWeapon, &ProficientWithWeapon_Parms, NULL );

	return ProficientWithWeapon_Parms.ReturnValue;
};

// Function UTGame.UTBot.WeaponPreference
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )

float AUTBot::WeaponPreference ( class AWeapon* W )
{
	static UFunction* pFnWeaponPreference = NULL;

	if ( ! pFnWeaponPreference )
		pFnWeaponPreference = (UFunction*) UObject::GObjObjects()->Data[ 51127 ];

	AUTBot_execWeaponPreference_Parms WeaponPreference_Parms;
	WeaponPreference_Parms.W = W;

	this->ProcessEvent ( pFnWeaponPreference, &WeaponPreference_Parms, NULL );

	return WeaponPreference_Parms.ReturnValue;
};

// Function UTGame.UTBot.RateWeapon
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )

float AUTBot::RateWeapon ( class AWeapon* W )
{
	static UFunction* pFnRateWeapon = NULL;

	if ( ! pFnRateWeapon )
		pFnRateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50504 ];

	AUTBot_execRateWeapon_Parms RateWeapon_Parms;
	RateWeapon_Parms.W = W;

	this->ProcessEvent ( pFnRateWeapon, &RateWeapon_Parms, NULL );

	return RateWeapon_Parms.ReturnValue;
};

// Function UTGame.UTBot.OnAIStopFire
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_AIStopFire*    FireAction                     ( CPF_Parm )

void AUTBot::OnAIStopFire ( class UUTSeqAct_AIStopFire* FireAction )
{
	static UFunction* pFnOnAIStopFire = NULL;

	if ( ! pFnOnAIStopFire )
		pFnOnAIStopFire = (UFunction*) UObject::GObjObjects()->Data[ 51122 ];

	AUTBot_execOnAIStopFire_Parms OnAIStopFire_Parms;
	OnAIStopFire_Parms.FireAction = FireAction;

	this->ProcessEvent ( pFnOnAIStopFire, &OnAIStopFire_Parms, NULL );
};

// Function UTGame.UTBot.StopFiring
// [0x00020002] 
// Parameters infos:

void AUTBot::StopFiring ( )
{
	static UFunction* pFnStopFiring = NULL;

	if ( ! pFnStopFiring )
		pFnStopFiring = (UFunction*) UObject::GObjObjects()->Data[ 51121 ];

	AUTBot_execStopFiring_Parms StopFiring_Parms;

	this->ProcessEvent ( pFnStopFiring, &StopFiring_Parms, NULL );
};

// Function UTGame.UTBot.TimedFireWeaponAtScriptedTarget
// [0x00020002] 
// Parameters infos:

void AUTBot::TimedFireWeaponAtScriptedTarget ( )
{
	static UFunction* pFnTimedFireWeaponAtScriptedTarget = NULL;

	if ( ! pFnTimedFireWeaponAtScriptedTarget )
		pFnTimedFireWeaponAtScriptedTarget = (UFunction*) UObject::GObjObjects()->Data[ 51120 ];

	AUTBot_execTimedFireWeaponAtScriptedTarget_Parms TimedFireWeaponAtScriptedTarget_Parms;

	this->ProcessEvent ( pFnTimedFireWeaponAtScriptedTarget, &TimedFireWeaponAtScriptedTarget_Parms, NULL );
};

// Function UTGame.UTBot.OnAIStartFireAt
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_AIStartFireAt* FireAction                     ( CPF_Parm )

void AUTBot::OnAIStartFireAt ( class UUTSeqAct_AIStartFireAt* FireAction )
{
	static UFunction* pFnOnAIStartFireAt = NULL;

	if ( ! pFnOnAIStartFireAt )
		pFnOnAIStartFireAt = (UFunction*) UObject::GObjObjects()->Data[ 51115 ];

	AUTBot_execOnAIStartFireAt_Parms OnAIStartFireAt_Parms;
	OnAIStartFireAt_Parms.FireAction = FireAction;

	this->ProcessEvent ( pFnOnAIStartFireAt, &OnAIStartFireAt_Parms, NULL );
};

// Function UTGame.UTBot.CanAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTBot::CanAttack ( class AActor* Other )
{
	static UFunction* pFnCanAttack = NULL;

	if ( ! pFnCanAttack )
		pFnCanAttack = (UFunction*) UObject::GObjObjects()->Data[ 51111 ];

	AUTBot_execCanAttack_Parms CanAttack_Parms;
	CanAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnCanAttack, &CanAttack_Parms, NULL );

	return CanAttack_Parms.ReturnValue;
};

// Function UTGame.UTBot.FireWeaponAt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool AUTBot::FireWeaponAt ( class AActor* A )
{
	static UFunction* pFnFireWeaponAt = NULL;

	if ( ! pFnFireWeaponAt )
		pFnFireWeaponAt = (UFunction*) UObject::GObjObjects()->Data[ 51108 ];

	AUTBot_execFireWeaponAt_Parms FireWeaponAt_Parms;
	FireWeaponAt_Parms.A = A;

	this->ProcessEvent ( pFnFireWeaponAt, &FireWeaponAt_Parms, NULL );

	return FireWeaponAt_Parms.ReturnValue;
};

// Function UTGame.UTBot.TimedFireWeaponAtEnemy
// [0x00020002] 
// Parameters infos:

void AUTBot::TimedFireWeaponAtEnemy ( )
{
	static UFunction* pFnTimedFireWeaponAtEnemy = NULL;

	if ( ! pFnTimedFireWeaponAtEnemy )
		pFnTimedFireWeaponAtEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51107 ];

	AUTBot_execTimedFireWeaponAtEnemy_Parms TimedFireWeaponAtEnemy_Parms;

	this->ProcessEvent ( pFnTimedFireWeaponAtEnemy, &TimedFireWeaponAtEnemy_Parms, NULL );
};

// Function UTGame.UTBot.ShouldFireAgain
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::ShouldFireAgain ( )
{
	static UFunction* pFnShouldFireAgain = NULL;

	if ( ! pFnShouldFireAgain )
		pFnShouldFireAgain = (UFunction*) UObject::GObjObjects()->Data[ 51098 ];

	AUTBot_execShouldFireAgain_Parms ShouldFireAgain_Parms;

	this->ProcessEvent ( pFnShouldFireAgain, &ShouldFireAgain_Parms, NULL );

	return ShouldFireAgain_Parms.ReturnValue;
};

// Function UTGame.UTBot.WeaponFireAgain
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bFinishedFire                  ( CPF_Parm )

bool AUTBot::WeaponFireAgain ( unsigned long bFinishedFire )
{
	static UFunction* pFnWeaponFireAgain = NULL;

	if ( ! pFnWeaponFireAgain )
		pFnWeaponFireAgain = (UFunction*) UObject::GObjObjects()->Data[ 50569 ];

	AUTBot_execWeaponFireAgain_Parms WeaponFireAgain_Parms;
	WeaponFireAgain_Parms.bFinishedFire = bFinishedFire;

	this->ProcessEvent ( pFnWeaponFireAgain, &WeaponFireAgain_Parms, NULL );

	return WeaponFireAgain_Parms.ReturnValue;
};

// Function UTGame.UTBot.ReadyForLift
// [0x00020002] 
// Parameters infos:

void AUTBot::ReadyForLift ( )
{
	static UFunction* pFnReadyForLift = NULL;

	if ( ! pFnReadyForLift )
		pFnReadyForLift = (UFunction*) UObject::GObjObjects()->Data[ 51095 ];

	AUTBot_execReadyForLift_Parms ReadyForLift_Parms;

	this->ProcessEvent ( pFnReadyForLift, &ReadyForLift_Parms, NULL );
};

// Function UTGame.UTBot.WaitForMover
// [0x00020002] 
// Parameters infos:
// class AInterpActor*            M                              ( CPF_Parm )

void AUTBot::WaitForMover ( class AInterpActor* M )
{
	static UFunction* pFnWaitForMover = NULL;

	if ( ! pFnWaitForMover )
		pFnWaitForMover = (UFunction*) UObject::GObjObjects()->Data[ 51093 ];

	AUTBot_execWaitForMover_Parms WaitForMover_Parms;
	WaitForMover_Parms.M = M;

	this->ProcessEvent ( pFnWaitForMover, &WaitForMover_Parms, NULL );
};

// Function UTGame.UTBot.ResetDoubleJump
// [0x00020002] 
// Parameters infos:

void AUTBot::ResetDoubleJump ( )
{
	static UFunction* pFnResetDoubleJump = NULL;

	if ( ! pFnResetDoubleJump )
		pFnResetDoubleJump = (UFunction*) UObject::GObjObjects()->Data[ 51091 ];

	AUTBot_execResetDoubleJump_Parms ResetDoubleJump_Parms;

	this->ProcessEvent ( pFnResetDoubleJump, &ResetDoubleJump_Parms, NULL );
};

// Function UTGame.UTBot.TimeDJReset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventTimeDJReset ( )
{
	static UFunction* pFnTimeDJReset = NULL;

	if ( ! pFnTimeDJReset )
		pFnTimeDJReset = (UFunction*) UObject::GObjObjects()->Data[ 51090 ];

	AUTBot_eventTimeDJReset_Parms TimeDJReset_Parms;

	this->ProcessEvent ( pFnTimeDJReset, &TimeDJReset_Parms, NULL );
};

// Function UTGame.UTBot.CanImpactJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::CanImpactJump ( )
{
	static UFunction* pFnCanImpactJump = NULL;

	if ( ! pFnCanImpactJump )
		pFnCanImpactJump = (UFunction*) UObject::GObjObjects()->Data[ 51086 ];

	AUTBot_execCanImpactJump_Parms CanImpactJump_Parms;

	this->ProcessEvent ( pFnCanImpactJump, &CanImpactJump_Parms, NULL );

	return CanImpactJump_Parms.ReturnValue;
};

// Function UTGame.UTBot.SetCombatTimer
// [0x00020002] 
// Parameters infos:

void AUTBot::SetCombatTimer ( )
{
	static UFunction* pFnSetCombatTimer = NULL;

	if ( ! pFnSetCombatTimer )
		pFnSetCombatTimer = (UFunction*) UObject::GObjObjects()->Data[ 51085 ];

	AUTBot_execSetCombatTimer_Parms SetCombatTimer_Parms;

	this->ProcessEvent ( pFnSetCombatTimer, &SetCombatTimer_Parms, NULL );
};

// Function UTGame.UTBot.Startle
// [0x00020002] 
// Parameters infos:
// class AActor*                  Feared                         ( CPF_Parm )

void AUTBot::Startle ( class AActor* Feared )
{
	static UFunction* pFnStartle = NULL;

	if ( ! pFnStartle )
		pFnStartle = (UFunction*) UObject::GObjObjects()->Data[ 51083 ];

	AUTBot_execStartle_Parms Startle_Parms;
	Startle_Parms.Feared = Feared;

	this->ProcessEvent ( pFnStartle, &Startle_Parms, NULL );
};

// Function UTGame.UTBot.FearThisSpot
// [0x00020002] 
// Parameters infos:
// class AUTAvoidMarker*          aSpot                          ( CPF_Parm )

void AUTBot::FearThisSpot ( class AUTAvoidMarker* aSpot )
{
	static UFunction* pFnFearThisSpot = NULL;

	if ( ! pFnFearThisSpot )
		pFnFearThisSpot = (UFunction*) UObject::GObjObjects()->Data[ 51080 ];

	AUTBot_execFearThisSpot_Parms FearThisSpot_Parms;
	FearThisSpot_Parms.aSpot = aSpot;

	this->ProcessEvent ( pFnFearThisSpot, &FearThisSpot_Parms, NULL );
};

// Function UTGame.UTBot.NotifyHitWall
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

bool AUTBot::eventNotifyHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyHitWall = NULL;

	if ( ! pFnNotifyHitWall )
		pFnNotifyHitWall = (UFunction*) UObject::GObjObjects()->Data[ 51072 ];

	AUTBot_eventNotifyHitWall_Parms NotifyHitWall_Parms;
	memcpy ( &NotifyHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyHitWall, &NotifyHitWall_Parms, NULL );

	return NotifyHitWall_Parms.ReturnValue;
};

// Function UTGame.UTBot.SetupSpecialPathAbilities
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventSetupSpecialPathAbilities ( )
{
	static UFunction* pFnSetupSpecialPathAbilities = NULL;

	if ( ! pFnSetupSpecialPathAbilities )
		pFnSetupSpecialPathAbilities = (UFunction*) UObject::GObjObjects()->Data[ 51071 ];

	AUTBot_eventSetupSpecialPathAbilities_Parms SetupSpecialPathAbilities_Parms;

	this->ProcessEvent ( pFnSetupSpecialPathAbilities, &SetupSpecialPathAbilities_Parms, NULL );
};

// Function UTGame.UTBot.NotifyAddInventory
// [0x00020002] 
// Parameters infos:
// class AInventory*              NewItem                        ( CPF_Parm )

void AUTBot::NotifyAddInventory ( class AInventory* NewItem )
{
	static UFunction* pFnNotifyAddInventory = NULL;

	if ( ! pFnNotifyAddInventory )
		pFnNotifyAddInventory = (UFunction*) UObject::GObjObjects()->Data[ 51069 ];

	AUTBot_execNotifyAddInventory_Parms NotifyAddInventory_Parms;
	NotifyAddInventory_Parms.NewItem = NewItem;

	this->ProcessEvent ( pFnNotifyAddInventory, &NotifyAddInventory_Parms, NULL );
};

// Function UTGame.UTBot.HasTimedPowerup
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::HasTimedPowerup ( )
{
	static UFunction* pFnHasTimedPowerup = NULL;

	if ( ! pFnHasTimedPowerup )
		pFnHasTimedPowerup = (UFunction*) UObject::GObjObjects()->Data[ 51065 ];

	AUTBot_execHasTimedPowerup_Parms HasTimedPowerup_Parms;

	this->ProcessEvent ( pFnHasTimedPowerup, &HasTimedPowerup_Parms, NULL );

	return HasTimedPowerup_Parms.ReturnValue;
};

// Function UTGame.UTBot.LandingShake
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTBot::LandingShake ( )
{
	static UFunction* pFnLandingShake = NULL;

	if ( ! pFnLandingShake )
		pFnLandingShake = (UFunction*) UObject::GObjObjects()->Data[ 51063 ];

	AUTBot_execLandingShake_Parms LandingShake_Parms;

	this->ProcessEvent ( pFnLandingShake, &LandingShake_Parms, NULL );

	return LandingShake_Parms.ReturnValue;
};

// Function UTGame.UTBot.SpawnedByKismet
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTBot::eventSpawnedByKismet ( )
{
	static UFunction* pFnSpawnedByKismet = NULL;

	if ( ! pFnSpawnedByKismet )
		pFnSpawnedByKismet = (UFunction*) UObject::GObjObjects()->Data[ 51062 ];

	AUTBot_eventSpawnedByKismet_Parms SpawnedByKismet_Parms;

	this->ProcessEvent ( pFnSpawnedByKismet, &SpawnedByKismet_Parms, NULL );
};

// Function UTGame.UTBot.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTBot::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51061 ];

	AUTBot_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTBot.Destroyed
// [0x00020002] 
// Parameters infos:

void AUTBot::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 51060 ];

	AUTBot_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTBot.PawnDied
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTBot::PawnDied ( class APawn* P )
{
	static UFunction* pFnPawnDied = NULL;

	if ( ! pFnPawnDied )
		pFnPawnDied = (UFunction*) UObject::GObjObjects()->Data[ 51058 ];

	AUTBot_execPawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.P = P;

	this->ProcessEvent ( pFnPawnDied, &PawnDied_Parms, NULL );
};

// Function UTGame.UTBot.StartMonitoring
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          MaxDist                        ( CPF_Parm )

void AUTBot::StartMonitoring ( class APawn* P, float MaxDist )
{
	static UFunction* pFnStartMonitoring = NULL;

	if ( ! pFnStartMonitoring )
		pFnStartMonitoring = (UFunction*) UObject::GObjObjects()->Data[ 51055 ];

	AUTBot_execStartMonitoring_Parms StartMonitoring_Parms;
	StartMonitoring_Parms.P = P;
	StartMonitoring_Parms.MaxDist = MaxDist;

	this->ProcessEvent ( pFnStartMonitoring, &StartMonitoring_Parms, NULL );
};

// Function UTGame.UTBot.WasKilledBy
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )

void AUTBot::WasKilledBy ( class AController* Other )
{
	static UFunction* pFnWasKilledBy = NULL;

	if ( ! pFnWasKilledBy )
		pFnWasKilledBy = (UFunction*) UObject::GObjObjects()->Data[ 51053 ];

	AUTBot_execWasKilledBy_Parms WasKilledBy_Parms;
	WasKilledBy_Parms.Other = Other;

	this->ProcessEvent ( pFnWasKilledBy, &WasKilledBy_Parms, NULL );
};

// Function UTGame.UTBot.EnemyJustTeleported
// [0x00820002] 
// Parameters infos:

void AUTBot::EnemyJustTeleported ( )
{
	static UFunction* pFnEnemyJustTeleported = NULL;

	if ( ! pFnEnemyJustTeleported )
		pFnEnemyJustTeleported = (UFunction*) UObject::GObjObjects()->Data[ 51051 ];

	AUTBot_execEnemyJustTeleported_Parms EnemyJustTeleported_Parms;

	this->ProcessEvent ( pFnEnemyJustTeleported, &EnemyJustTeleported_Parms, NULL );
};

// Function UTGame.UTVictoryMessage.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTVictoryMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 59855 ];

	UUTVictoryMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTVictoryMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVictoryMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59848 ];

	UUTVictoryMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTVictoryMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTVictoryMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59843 ];

	UUTVictoryMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTVictoryMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTVictoryMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 59840 ];

	UUTVictoryMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.GFxUI_PauseMenu.UT_ConsoleCommand
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWriteToLog                    ( CPF_OptionalParm | CPF_Parm )

void UGFxUI_PauseMenu::UT_ConsoleCommand ( struct FString Cmd, unsigned long bWriteToLog )
{
	static UFunction* pFnUT_ConsoleCommand = NULL;

	if ( ! pFnUT_ConsoleCommand )
		pFnUT_ConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 46671 ];

	UGFxUI_PauseMenu_execUT_ConsoleCommand_Parms UT_ConsoleCommand_Parms;
	memcpy ( &UT_ConsoleCommand_Parms.Cmd, &Cmd, 0xC );
	UT_ConsoleCommand_Parms.bWriteToLog = bWriteToLog;

	this->ProcessEvent ( pFnUT_ConsoleCommand, &UT_ConsoleCommand_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.OnCloseAnimationComplete
// [0x00020002] 
// Parameters infos:

void UGFxUI_PauseMenu::OnCloseAnimationComplete ( )
{
	static UFunction* pFnOnCloseAnimationComplete = NULL;

	if ( ! pFnOnCloseAnimationComplete )
		pFnOnCloseAnimationComplete = (UFunction*) UObject::GObjObjects()->Data[ 46670 ];

	UGFxUI_PauseMenu_execOnCloseAnimationComplete_Parms OnCloseAnimationComplete_Parms;

	this->ProcessEvent ( pFnOnCloseAnimationComplete, &OnCloseAnimationComplete_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.OnPlayAnimationComplete
// [0x00020000] 
// Parameters infos:

void UGFxUI_PauseMenu::OnPlayAnimationComplete ( )
{
	static UFunction* pFnOnPlayAnimationComplete = NULL;

	if ( ! pFnOnPlayAnimationComplete )
		pFnOnPlayAnimationComplete = (UFunction*) UObject::GObjObjects()->Data[ 46669 ];

	UGFxUI_PauseMenu_execOnPlayAnimationComplete_Parms OnPlayAnimationComplete_Parms;

	this->ProcessEvent ( pFnOnPlayAnimationComplete, &OnPlayAnimationComplete_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUI_PauseMenu::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46668 ];

	UGFxUI_PauseMenu_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUI_PauseMenu::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46667 ];

	UGFxUI_PauseMenu_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.OnPressExitButton
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUI_PauseMenu::OnPressExitButton ( struct FEventData ev )
{
	static UFunction* pFnOnPressExitButton = NULL;

	if ( ! pFnOnPressExitButton )
		pFnOnPressExitButton = (UFunction*) UObject::GObjObjects()->Data[ 46665 ];

	UGFxUI_PauseMenu_execOnPressExitButton_Parms OnPressExitButton_Parms;
	memcpy ( &OnPressExitButton_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPressExitButton, &OnPressExitButton_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.OnPressResumeButton
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUI_PauseMenu::OnPressResumeButton ( struct FEventData ev )
{
	static UFunction* pFnOnPressResumeButton = NULL;

	if ( ! pFnOnPressResumeButton )
		pFnOnPressResumeButton = (UFunction*) UObject::GObjObjects()->Data[ 46663 ];

	UGFxUI_PauseMenu_execOnPressResumeButton_Parms OnPressResumeButton_Parms;
	memcpy ( &OnPressResumeButton_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPressResumeButton, &OnPressResumeButton_Parms, NULL );
};

// Function UTGame.GFxUI_PauseMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxUI_PauseMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 46660 ];

	UGFxUI_PauseMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.UT_ConsoleCommand
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWriteToLog                    ( CPF_OptionalParm | CPF_Parm )

void UGFxUIFrontEnd_TitleScreen::UT_ConsoleCommand ( struct FString Cmd, unsigned long bWriteToLog )
{
	static UFunction* pFnUT_ConsoleCommand = NULL;

	if ( ! pFnUT_ConsoleCommand )
		pFnUT_ConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 46702 ];

	UGFxUIFrontEnd_TitleScreen_execUT_ConsoleCommand_Parms UT_ConsoleCommand_Parms;
	memcpy ( &UT_ConsoleCommand_Parms.Cmd, &Cmd, 0xC );
	UT_ConsoleCommand_Parms.bWriteToLog = bWriteToLog;

	this->ProcessEvent ( pFnUT_ConsoleCommand, &UT_ConsoleCommand_Parms, NULL );
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.OnCloseAnimationComplete
// [0x00020002] 
// Parameters infos:

void UGFxUIFrontEnd_TitleScreen::OnCloseAnimationComplete ( )
{
	static UFunction* pFnOnCloseAnimationComplete = NULL;

	if ( ! pFnOnCloseAnimationComplete )
		pFnOnCloseAnimationComplete = (UFunction*) UObject::GObjObjects()->Data[ 46701 ];

	UGFxUIFrontEnd_TitleScreen_execOnCloseAnimationComplete_Parms OnCloseAnimationComplete_Parms;

	this->ProcessEvent ( pFnOnCloseAnimationComplete, &OnCloseAnimationComplete_Parms, NULL );
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUIFrontEnd_TitleScreen::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46700 ];

	UGFxUIFrontEnd_TitleScreen_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.OnMenuButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUIFrontEnd_TitleScreen::OnMenuButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnMenuButtonPress = NULL;

	if ( ! pFnOnMenuButtonPress )
		pFnOnMenuButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 46698 ];

	UGFxUIFrontEnd_TitleScreen_execOnMenuButtonPress_Parms OnMenuButtonPress_Parms;
	memcpy ( &OnMenuButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnMenuButtonPress, &OnMenuButtonPress_Parms, NULL );
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool UGFxUIFrontEnd_TitleScreen::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 46693 ];

	UGFxUIFrontEnd_TitleScreen_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function UTGame.GFxUIFrontEnd_TitleScreen.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxUIFrontEnd_TitleScreen::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 46690 ];

	UGFxUIFrontEnd_TitleScreen_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUILeaderboard.ReadOnlineStatsComplete
// [0x00820002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UGFxUILeaderboard::ReadOnlineStatsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnReadOnlineStatsComplete = NULL;

	if ( ! pFnReadOnlineStatsComplete )
		pFnReadOnlineStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 46798 ];

	UGFxUILeaderboard_execReadOnlineStatsComplete_Parms ReadOnlineStatsComplete_Parms;
	ReadOnlineStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnReadOnlineStatsComplete, &ReadOnlineStatsComplete_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.OnlineCleanup
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::OnlineCleanup ( )
{
	static UFunction* pFnOnlineCleanup = NULL;

	if ( ! pFnOnlineCleanup )
		pFnOnlineCleanup = (UFunction*) UObject::GObjObjects()->Data[ 46797 ];

	UGFxUILeaderboard_execOnlineCleanup_Parms OnlineCleanup_Parms;

	this->ProcessEvent ( pFnOnlineCleanup, &OnlineCleanup_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGFxUILeaderboard::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46794 ];

	UGFxUILeaderboard_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.DoInitialLeaderboardRead
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::DoInitialLeaderboardRead ( )
{
	static UFunction* pFnDoInitialLeaderboardRead = NULL;

	if ( ! pFnDoInitialLeaderboardRead )
		pFnDoInitialLeaderboardRead = (UFunction*) UObject::GObjObjects()->Data[ 46793 ];

	UGFxUILeaderboard_execDoInitialLeaderboardRead_Parms DoInitialLeaderboardRead_Parms;

	this->ProcessEvent ( pFnDoInitialLeaderboardRead, &DoInitialLeaderboardRead_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.OnlineInit
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::OnlineInit ( )
{
	static UFunction* pFnOnlineInit = NULL;

	if ( ! pFnOnlineInit )
		pFnOnlineInit = (UFunction*) UObject::GObjObjects()->Data[ 46791 ];

	UGFxUILeaderboard_execOnlineInit_Parms OnlineInit_Parms;

	this->ProcessEvent ( pFnOnlineInit, &OnlineInit_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.OnOpenAnimComplete
// [0x00020000] 
// Parameters infos:

void UGFxUILeaderboard::OnOpenAnimComplete ( )
{
	static UFunction* pFnOnOpenAnimComplete = NULL;

	if ( ! pFnOnOpenAnimComplete )
		pFnOnOpenAnimComplete = (UFunction*) UObject::GObjObjects()->Data[ 46790 ];

	UGFxUILeaderboard_execOnOpenAnimComplete_Parms OnOpenAnimComplete_Parms;

	this->ProcessEvent ( pFnOnOpenAnimComplete, &OnOpenAnimComplete_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.OnCloseAnimComplete
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::OnCloseAnimComplete ( )
{
	static UFunction* pFnOnCloseAnimComplete = NULL;

	if ( ! pFnOnCloseAnimComplete )
		pFnOnCloseAnimComplete = (UFunction*) UObject::GObjObjects()->Data[ 46789 ];

	UGFxUILeaderboard_execOnCloseAnimComplete_Parms OnCloseAnimComplete_Parms;

	this->ProcessEvent ( pFnOnCloseAnimComplete, &OnCloseAnimComplete_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.ProcessTweenCallback
// [0x00020002] 
// Parameters infos:
// struct FString                 Callback                       ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              TargetMC                       ( CPF_Parm )

void UGFxUILeaderboard::ProcessTweenCallback ( struct FString Callback, class UGFxObject* TargetMC )
{
	static UFunction* pFnProcessTweenCallback = NULL;

	if ( ! pFnProcessTweenCallback )
		pFnProcessTweenCallback = (UFunction*) UObject::GObjObjects()->Data[ 46786 ];

	UGFxUILeaderboard_execProcessTweenCallback_Parms ProcessTweenCallback_Parms;
	memcpy ( &ProcessTweenCallback_Parms.Callback, &Callback, 0xC );
	ProcessTweenCallback_Parms.TargetMC = TargetMC;

	this->ProcessEvent ( pFnProcessTweenCallback, &ProcessTweenCallback_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.TweenPlayerRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              RowMC                          ( CPF_Parm )

void UGFxUILeaderboard::TweenPlayerRow ( class UGFxObject* RowMC )
{
	static UFunction* pFnTweenPlayerRow = NULL;

	if ( ! pFnTweenPlayerRow )
		pFnTweenPlayerRow = (UFunction*) UObject::GObjObjects()->Data[ 46784 ];

	UGFxUILeaderboard_execTweenPlayerRow_Parms TweenPlayerRow_Parms;
	TweenPlayerRow_Parms.RowMC = RowMC;

	this->ProcessEvent ( pFnTweenPlayerRow, &TweenPlayerRow_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.FloatLeaderboardAnimationY
// [0x00020002] 
// Parameters infos:
// unsigned long                  Direction                      ( CPF_Parm )

void UGFxUILeaderboard::FloatLeaderboardAnimationY ( unsigned long Direction )
{
	static UFunction* pFnFloatLeaderboardAnimationY = NULL;

	if ( ! pFnFloatLeaderboardAnimationY )
		pFnFloatLeaderboardAnimationY = (UFunction*) UObject::GObjObjects()->Data[ 46782 ];

	UGFxUILeaderboard_execFloatLeaderboardAnimationY_Parms FloatLeaderboardAnimationY_Parms;
	FloatLeaderboardAnimationY_Parms.Direction = Direction;

	this->ProcessEvent ( pFnFloatLeaderboardAnimationY, &FloatLeaderboardAnimationY_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.FloatLeaderboardAnimationX
// [0x00020002] 
// Parameters infos:
// unsigned long                  Direction                      ( CPF_Parm )

void UGFxUILeaderboard::FloatLeaderboardAnimationX ( unsigned long Direction )
{
	static UFunction* pFnFloatLeaderboardAnimationX = NULL;

	if ( ! pFnFloatLeaderboardAnimationX )
		pFnFloatLeaderboardAnimationX = (UFunction*) UObject::GObjObjects()->Data[ 46780 ];

	UGFxUILeaderboard_execFloatLeaderboardAnimationX_Parms FloatLeaderboardAnimationX_Parms;
	FloatLeaderboardAnimationX_Parms.Direction = Direction;

	this->ProcessEvent ( pFnFloatLeaderboardAnimationX, &FloatLeaderboardAnimationX_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.UpdateFooter
// [0x00020002] 
// Parameters infos:
// struct UGFxUILeaderboard_FUILeaderboardEntry FooterData                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUILeaderboard::UpdateFooter ( struct UGFxUILeaderboard_FUILeaderboardEntry FooterData )
{
	static UFunction* pFnUpdateFooter = NULL;

	if ( ! pFnUpdateFooter )
		pFnUpdateFooter = (UFunction*) UObject::GObjObjects()->Data[ 46778 ];

	UGFxUILeaderboard_execUpdateFooter_Parms UpdateFooter_Parms;
	memcpy ( &UpdateFooter_Parms.FooterData, &FooterData, 0x18 );

	this->ProcessEvent ( pFnUpdateFooter, &UpdateFooter_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.UpdateHeaders
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::UpdateHeaders ( )
{
	static UFunction* pFnUpdateHeaders = NULL;

	if ( ! pFnUpdateHeaders )
		pFnUpdateHeaders = (UFunction*) UObject::GObjObjects()->Data[ 46776 ];

	UGFxUILeaderboard_execUpdateHeaders_Parms UpdateHeaders_Parms;

	this->ProcessEvent ( pFnUpdateHeaders, &UpdateHeaders_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.SetPlayerRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              UpdatedPlayerRow               ( CPF_Parm )

void UGFxUILeaderboard::SetPlayerRow ( class UGFxObject* UpdatedPlayerRow )
{
	static UFunction* pFnSetPlayerRow = NULL;

	if ( ! pFnSetPlayerRow )
		pFnSetPlayerRow = (UFunction*) UObject::GObjObjects()->Data[ 46774 ];

	UGFxUILeaderboard_execSetPlayerRow_Parms SetPlayerRow_Parms;
	SetPlayerRow_Parms.UpdatedPlayerRow = UpdatedPlayerRow;

	this->ProcessEvent ( pFnSetPlayerRow, &SetPlayerRow_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.UpdateRow
// [0x00820002] 
// Parameters infos:
// struct UGFxUILeaderboard_FListRow CurRow                         ( CPF_Parm )
// struct UGFxUILeaderboard_FUILeaderboardEntry CurData                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUILeaderboard::UpdateRow ( struct UGFxUILeaderboard_FListRow CurRow, struct UGFxUILeaderboard_FUILeaderboardEntry CurData )
{
	static UFunction* pFnUpdateRow = NULL;

	if ( ! pFnUpdateRow )
		pFnUpdateRow = (UFunction*) UObject::GObjObjects()->Data[ 46766 ];

	UGFxUILeaderboard_execUpdateRow_Parms UpdateRow_Parms;
	memcpy ( &UpdateRow_Parms.CurRow, &CurRow, 0x14 );
	memcpy ( &UpdateRow_Parms.CurData, &CurData, 0x18 );

	this->ProcessEvent ( pFnUpdateRow, &UpdateRow_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.UpdateLeaderboardLists
// [0x00820002] 
// Parameters infos:

void UGFxUILeaderboard::UpdateLeaderboardLists ( )
{
	static UFunction* pFnUpdateLeaderboardLists = NULL;

	if ( ! pFnUpdateLeaderboardLists )
		pFnUpdateLeaderboardLists = (UFunction*) UObject::GObjObjects()->Data[ 46763 ];

	UGFxUILeaderboard_execUpdateLeaderboardLists_Parms UpdateLeaderboardLists_Parms;

	this->ProcessEvent ( pFnUpdateLeaderboardLists, &UpdateLeaderboardLists_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.Draw
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::Draw ( )
{
	static UFunction* pFnDraw = NULL;

	if ( ! pFnDraw )
		pFnDraw = (UFunction*) UObject::GObjObjects()->Data[ 46762 ];

	UGFxUILeaderboard_execDraw_Parms Draw_Parms;

	this->ProcessEvent ( pFnDraw, &Draw_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.SetupList
// [0x00820002] 
// Parameters infos:

void UGFxUILeaderboard::SetupList ( )
{
	static UFunction* pFnSetupList = NULL;

	if ( ! pFnSetupList )
		pFnSetupList = (UFunction*) UObject::GObjObjects()->Data[ 46757 ];

	UGFxUILeaderboard_execSetupList_Parms SetupList_Parms;

	this->ProcessEvent ( pFnSetupList, &SetupList_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.ConfigLeaderboard
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::ConfigLeaderboard ( )
{
	static UFunction* pFnConfigLeaderboard = NULL;

	if ( ! pFnConfigLeaderboard )
		pFnConfigLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 46756 ];

	UGFxUILeaderboard_execConfigLeaderboard_Parms ConfigLeaderboard_Parms;

	this->ProcessEvent ( pFnConfigLeaderboard, &ConfigLeaderboard_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46755 ];

	UGFxUILeaderboard_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUILeaderboard::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46754 ];

	UGFxUILeaderboard_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUILeaderboard.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxUILeaderboard::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 46751 ];

	UGFxUILeaderboard_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUIScoreboard.GetTimeOnline
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

struct FString UGFxUIScoreboard::GetTimeOnline ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetTimeOnline = NULL;

	if ( ! pFnGetTimeOnline )
		pFnGetTimeOnline = (UFunction*) UObject::GObjObjects()->Data[ 46939 ];

	UGFxUIScoreboard_execGetTimeOnline_Parms GetTimeOnline_Parms;
	GetTimeOnline_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetTimeOnline, &GetTimeOnline_Parms, NULL );

	return GetTimeOnline_Parms.ReturnValue;
};

// Function UTGame.GFxUIScoreboard.IsValidScoreboardPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

bool UGFxUIScoreboard::IsValidScoreboardPlayer ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnIsValidScoreboardPlayer = NULL;

	if ( ! pFnIsValidScoreboardPlayer )
		pFnIsValidScoreboardPlayer = (UFunction*) UObject::GObjObjects()->Data[ 46936 ];

	UGFxUIScoreboard_execIsValidScoreboardPlayer_Parms IsValidScoreboardPlayer_Parms;
	IsValidScoreboardPlayer_Parms.PRI = PRI;

	this->ProcessEvent ( pFnIsValidScoreboardPlayer, &IsValidScoreboardPlayer_Parms, NULL );

	return IsValidScoreboardPlayer_Parms.ReturnValue;
};

// Function UTGame.GFxUIScoreboard.ProcessTweenCallback
// [0x00020002] 
// Parameters infos:
// struct FString                 Callback                       ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              TargetMC                       ( CPF_Parm )

void UGFxUIScoreboard::ProcessTweenCallback ( struct FString Callback, class UGFxObject* TargetMC )
{
	static UFunction* pFnProcessTweenCallback = NULL;

	if ( ! pFnProcessTweenCallback )
		pFnProcessTweenCallback = (UFunction*) UObject::GObjObjects()->Data[ 46933 ];

	UGFxUIScoreboard_execProcessTweenCallback_Parms ProcessTweenCallback_Parms;
	memcpy ( &ProcessTweenCallback_Parms.Callback, &Callback, 0xC );
	ProcessTweenCallback_Parms.TargetMC = TargetMC;

	this->ProcessEvent ( pFnProcessTweenCallback, &ProcessTweenCallback_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.TweenPlayerRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              RowMC                          ( CPF_Parm )

void UGFxUIScoreboard::TweenPlayerRow ( class UGFxObject* RowMC )
{
	static UFunction* pFnTweenPlayerRow = NULL;

	if ( ! pFnTweenPlayerRow )
		pFnTweenPlayerRow = (UFunction*) UObject::GObjObjects()->Data[ 46931 ];

	UGFxUIScoreboard_execTweenPlayerRow_Parms TweenPlayerRow_Parms;
	TweenPlayerRow_Parms.RowMC = RowMC;

	this->ProcessEvent ( pFnTweenPlayerRow, &TweenPlayerRow_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.FloatScoreboardAnimationY
// [0x00020002] 
// Parameters infos:
// unsigned long                  Direction                      ( CPF_Parm )

void UGFxUIScoreboard::FloatScoreboardAnimationY ( unsigned long Direction )
{
	static UFunction* pFnFloatScoreboardAnimationY = NULL;

	if ( ! pFnFloatScoreboardAnimationY )
		pFnFloatScoreboardAnimationY = (UFunction*) UObject::GObjObjects()->Data[ 46929 ];

	UGFxUIScoreboard_execFloatScoreboardAnimationY_Parms FloatScoreboardAnimationY_Parms;
	FloatScoreboardAnimationY_Parms.Direction = Direction;

	this->ProcessEvent ( pFnFloatScoreboardAnimationY, &FloatScoreboardAnimationY_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.FloatScoreboardAnimationX
// [0x00020002] 
// Parameters infos:
// unsigned long                  Direction                      ( CPF_Parm )

void UGFxUIScoreboard::FloatScoreboardAnimationX ( unsigned long Direction )
{
	static UFunction* pFnFloatScoreboardAnimationX = NULL;

	if ( ! pFnFloatScoreboardAnimationX )
		pFnFloatScoreboardAnimationX = (UFunction*) UObject::GObjObjects()->Data[ 46927 ];

	UGFxUIScoreboard_execFloatScoreboardAnimationX_Parms FloatScoreboardAnimationX_Parms;
	FloatScoreboardAnimationX_Parms.Direction = Direction;

	this->ProcessEvent ( pFnFloatScoreboardAnimationX, &FloatScoreboardAnimationX_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.UpdateFooter
// [0x00024002] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )
// class AUTPlayerReplicationInfo* LocalPlayerPRI                 ( CPF_Parm )
// unsigned char                  PRIIndex                       ( CPF_OptionalParm | CPF_Parm )

void UGFxUIScoreboard::UpdateFooter ( class AUTGameReplicationInfo* GRI, class AUTPlayerReplicationInfo* LocalPlayerPRI, unsigned char PRIIndex )
{
	static UFunction* pFnUpdateFooter = NULL;

	if ( ! pFnUpdateFooter )
		pFnUpdateFooter = (UFunction*) UObject::GObjObjects()->Data[ 46921 ];

	UGFxUIScoreboard_execUpdateFooter_Parms UpdateFooter_Parms;
	UpdateFooter_Parms.GRI = GRI;
	UpdateFooter_Parms.LocalPlayerPRI = LocalPlayerPRI;
	UpdateFooter_Parms.PRIIndex = PRIIndex;

	this->ProcessEvent ( pFnUpdateFooter, &UpdateFooter_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.UpdateHeaders
// [0x00020002] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )

void UGFxUIScoreboard::UpdateHeaders ( class AUTGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateHeaders = NULL;

	if ( ! pFnUpdateHeaders )
		pFnUpdateHeaders = (UFunction*) UObject::GObjObjects()->Data[ 46919 ];

	UGFxUIScoreboard_execUpdateHeaders_Parms UpdateHeaders_Parms;
	UpdateHeaders_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateHeaders, &UpdateHeaders_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.FormatTime
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UGFxUIScoreboard::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 46913 ];

	UGFxUIScoreboard_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function UTGame.GFxUIScoreboard.UpdatePreviousState
// [0x00020002] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )

void UGFxUIScoreboard::UpdatePreviousState ( class AUTGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdatePreviousState = NULL;

	if ( ! pFnUpdatePreviousState )
		pFnUpdatePreviousState = (UFunction*) UObject::GObjObjects()->Data[ 46911 ];

	UGFxUIScoreboard_execUpdatePreviousState_Parms UpdatePreviousState_Parms;
	UpdatePreviousState_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdatePreviousState, &UpdatePreviousState_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.SetPlayerRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              UpdatedPlayerRow               ( CPF_Parm )

void UGFxUIScoreboard::SetPlayerRow ( class UGFxObject* UpdatedPlayerRow )
{
	static UFunction* pFnSetPlayerRow = NULL;

	if ( ! pFnSetPlayerRow )
		pFnSetPlayerRow = (UFunction*) UObject::GObjObjects()->Data[ 46909 ];

	UGFxUIScoreboard_execSetPlayerRow_Parms SetPlayerRow_Parms;
	SetPlayerRow_Parms.UpdatedPlayerRow = UpdatedPlayerRow;

	this->ProcessEvent ( pFnSetPlayerRow, &SetPlayerRow_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGFxUIScoreboard::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 46906 ];

	UGFxUIScoreboard_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.UpdateRow
// [0x00C20002] 
// Parameters infos:
// struct FScoreRow               ThisRow                        ( CPF_Parm )
// class AUTPlayerReplicationInfo* ThisPRI                        ( CPF_Parm )
// struct FScoreEntry             ThisEntry                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UGFxUIScoreboard::UpdateRow ( struct FScoreRow ThisRow, class AUTPlayerReplicationInfo* ThisPRI, struct FScoreEntry* ThisEntry )
{
	static UFunction* pFnUpdateRow = NULL;

	if ( ! pFnUpdateRow )
		pFnUpdateRow = (UFunction*) UObject::GObjObjects()->Data[ 46897 ];

	UGFxUIScoreboard_execUpdateRow_Parms UpdateRow_Parms;
	memcpy ( &UpdateRow_Parms.ThisRow, &ThisRow, 0x14 );
	UpdateRow_Parms.ThisPRI = ThisPRI;

	this->ProcessEvent ( pFnUpdateRow, &UpdateRow_Parms, NULL );

	if ( ThisEntry )
		memcpy ( ThisEntry, &UpdateRow_Parms.ThisEntry, 0x18 );
};

// Function UTGame.GFxUIScoreboard.ClearRow
// [0x00820002] 
// Parameters infos:
// struct FScoreRow               ThisRow                        ( CPF_Parm )

void UGFxUIScoreboard::ClearRow ( struct FScoreRow ThisRow )
{
	static UFunction* pFnClearRow = NULL;

	if ( ! pFnClearRow )
		pFnClearRow = (UFunction*) UObject::GObjObjects()->Data[ 46894 ];

	UGFxUIScoreboard_execClearRow_Parms ClearRow_Parms;
	memcpy ( &ClearRow_Parms.ThisRow, &ThisRow, 0x14 );

	this->ProcessEvent ( pFnClearRow, &ClearRow_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.UpdatePRILists
// [0x00020002] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )

void UGFxUIScoreboard::UpdatePRILists ( class AUTGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdatePRILists = NULL;

	if ( ! pFnUpdatePRILists )
		pFnUpdatePRILists = (UFunction*) UObject::GObjObjects()->Data[ 46885 ];

	UGFxUIScoreboard_execUpdatePRILists_Parms UpdatePRILists_Parms;
	UpdatePRILists_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdatePRILists, &UpdatePRILists_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.Draw
// [0x00020002] 
// Parameters infos:

void UGFxUIScoreboard::Draw ( )
{
	static UFunction* pFnDraw = NULL;

	if ( ! pFnDraw )
		pFnDraw = (UFunction*) UObject::GObjObjects()->Data[ 46882 ];

	UGFxUIScoreboard_execDraw_Parms Draw_Parms;

	this->ProcessEvent ( pFnDraw, &Draw_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.SetupRedTeam
// [0x00820002] 
// Parameters infos:

void UGFxUIScoreboard::SetupRedTeam ( )
{
	static UFunction* pFnSetupRedTeam = NULL;

	if ( ! pFnSetupRedTeam )
		pFnSetupRedTeam = (UFunction*) UObject::GObjObjects()->Data[ 46878 ];

	UGFxUIScoreboard_execSetupRedTeam_Parms SetupRedTeam_Parms;

	this->ProcessEvent ( pFnSetupRedTeam, &SetupRedTeam_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.SetupBlueTeam
// [0x00820002] 
// Parameters infos:

void UGFxUIScoreboard::SetupBlueTeam ( )
{
	static UFunction* pFnSetupBlueTeam = NULL;

	if ( ! pFnSetupBlueTeam )
		pFnSetupBlueTeam = (UFunction*) UObject::GObjObjects()->Data[ 46874 ];

	UGFxUIScoreboard_execSetupBlueTeam_Parms SetupBlueTeam_Parms;

	this->ProcessEvent ( pFnSetupBlueTeam, &SetupBlueTeam_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.ConfigScoreboard
// [0x00020002] 
// Parameters infos:

void UGFxUIScoreboard::ConfigScoreboard ( )
{
	static UFunction* pFnConfigScoreboard = NULL;

	if ( ! pFnConfigScoreboard )
		pFnConfigScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 46872 ];

	UGFxUIScoreboard_execConfigScoreboard_Parms ConfigScoreboard_Parms;

	this->ProcessEvent ( pFnConfigScoreboard, &ConfigScoreboard_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUIScoreboard::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46871 ];

	UGFxUIScoreboard_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void UGFxUIScoreboard::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 46870 ];

	UGFxUIScoreboard_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function UTGame.GFxUIScoreboard.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxUIScoreboard::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 46867 ];

	UGFxUIScoreboard_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_RunUnrealScriptTests
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxUnitTest_ActionScriptThree::Callback_RunUnrealScriptTests ( )
{
	static UFunction* pFnCallback_RunUnrealScriptTests = NULL;

	if ( ! pFnCallback_RunUnrealScriptTests )
		pFnCallback_RunUnrealScriptTests = (UFunction*) UObject::GObjObjects()->Data[ 47002 ];

	UGFxUnitTest_ActionScriptThree_execCallback_RunUnrealScriptTests_Parms Callback_RunUnrealScriptTests_Parms;

	this->ProcessEvent ( pFnCallback_RunUnrealScriptTests, &Callback_RunUnrealScriptTests_Parms, NULL );

	return Callback_RunUnrealScriptTests_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_StructParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUnitTestMultiMemberStruct StructParam                    ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxUnitTest_ActionScriptThree::Callback_StructParam ( struct FUnitTestMultiMemberStruct StructParam )
{
	static UFunction* pFnCallback_StructParam = NULL;

	if ( ! pFnCallback_StructParam )
		pFnCallback_StructParam = (UFunction*) UObject::GObjObjects()->Data[ 46997 ];

	UGFxUnitTest_ActionScriptThree_execCallback_StructParam_Parms Callback_StructParam_Parms;
	memcpy ( &Callback_StructParam_Parms.StructParam, &StructParam, 0x20 );

	this->ProcessEvent ( pFnCallback_StructParam, &Callback_StructParam_Parms, NULL );

	return Callback_StructParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_ArrayParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< float >                ArrayParam                     ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxUnitTest_ActionScriptThree::Callback_ArrayParam ( TArray< float > ArrayParam )
{
	static UFunction* pFnCallback_ArrayParam = NULL;

	if ( ! pFnCallback_ArrayParam )
		pFnCallback_ArrayParam = (UFunction*) UObject::GObjObjects()->Data[ 46982 ];

	UGFxUnitTest_ActionScriptThree_execCallback_ArrayParam_Parms Callback_ArrayParam_Parms;
	memcpy ( &Callback_ArrayParam_Parms.ArrayParam, &ArrayParam, 0xC );

	this->ProcessEvent ( pFnCallback_ArrayParam, &Callback_ArrayParam_Parms, NULL );

	return Callback_ArrayParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_MixedParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          NumParam                       ( CPF_Parm )
// unsigned long                  BoolParam                      ( CPF_Parm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxUnitTest_ActionScriptThree::Callback_MixedParam ( float NumParam, unsigned long BoolParam, struct FString StringParam )
{
	static UFunction* pFnCallback_MixedParam = NULL;

	if ( ! pFnCallback_MixedParam )
		pFnCallback_MixedParam = (UFunction*) UObject::GObjObjects()->Data[ 46977 ];

	UGFxUnitTest_ActionScriptThree_execCallback_MixedParam_Parms Callback_MixedParam_Parms;
	Callback_MixedParam_Parms.NumParam = NumParam;
	Callback_MixedParam_Parms.BoolParam = BoolParam;
	memcpy ( &Callback_MixedParam_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnCallback_MixedParam, &Callback_MixedParam_Parms, NULL );

	return Callback_MixedParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_StringParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxUnitTest_ActionScriptThree::Callback_StringParam ( struct FString StringParam )
{
	static UFunction* pFnCallback_StringParam = NULL;

	if ( ! pFnCallback_StringParam )
		pFnCallback_StringParam = (UFunction*) UObject::GObjObjects()->Data[ 46973 ];

	UGFxUnitTest_ActionScriptThree_execCallback_StringParam_Parms Callback_StringParam_Parms;
	memcpy ( &Callback_StringParam_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnCallback_StringParam, &Callback_StringParam_Parms, NULL );

	return Callback_StringParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_BoolParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  BoolParam                      ( CPF_Parm )

bool UGFxUnitTest_ActionScriptThree::Callback_BoolParam ( unsigned long BoolParam )
{
	static UFunction* pFnCallback_BoolParam = NULL;

	if ( ! pFnCallback_BoolParam )
		pFnCallback_BoolParam = (UFunction*) UObject::GObjObjects()->Data[ 46969 ];

	UGFxUnitTest_ActionScriptThree_execCallback_BoolParam_Parms Callback_BoolParam_Parms;
	Callback_BoolParam_Parms.BoolParam = BoolParam;

	this->ProcessEvent ( pFnCallback_BoolParam, &Callback_BoolParam_Parms, NULL );

	return Callback_BoolParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_NumParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          NumParam                       ( CPF_Parm )

bool UGFxUnitTest_ActionScriptThree::Callback_NumParam ( float NumParam )
{
	static UFunction* pFnCallback_NumParam = NULL;

	if ( ! pFnCallback_NumParam )
		pFnCallback_NumParam = (UFunction*) UObject::GObjObjects()->Data[ 46965 ];

	UGFxUnitTest_ActionScriptThree_execCallback_NumParam_Parms Callback_NumParam_Parms;
	Callback_NumParam_Parms.NumParam = NumParam;

	this->ProcessEvent ( pFnCallback_NumParam, &Callback_NumParam_Parms, NULL );

	return Callback_NumParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_UIntParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            UIntParam                      ( CPF_Parm )

bool UGFxUnitTest_ActionScriptThree::Callback_UIntParam ( int UIntParam )
{
	static UFunction* pFnCallback_UIntParam = NULL;

	if ( ! pFnCallback_UIntParam )
		pFnCallback_UIntParam = (UFunction*) UObject::GObjObjects()->Data[ 46961 ];

	UGFxUnitTest_ActionScriptThree_execCallback_UIntParam_Parms Callback_UIntParam_Parms;
	Callback_UIntParam_Parms.UIntParam = UIntParam;

	this->ProcessEvent ( pFnCallback_UIntParam, &Callback_UIntParam_Parms, NULL );

	return Callback_UIntParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.Callback_IntParam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            IntParam                       ( CPF_Parm )

bool UGFxUnitTest_ActionScriptThree::Callback_IntParam ( int IntParam )
{
	static UFunction* pFnCallback_IntParam = NULL;

	if ( ! pFnCallback_IntParam )
		pFnCallback_IntParam = (UFunction*) UObject::GObjObjects()->Data[ 46957 ];

	UGFxUnitTest_ActionScriptThree_execCallback_IntParam_Parms Callback_IntParam_Parms;
	Callback_IntParam_Parms.IntParam = IntParam;

	this->ProcessEvent ( pFnCallback_IntParam, &Callback_IntParam_Parms, NULL );

	return Callback_IntParam_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxUnitTest_ActionScriptThree::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 46951 ];

	UGFxUnitTest_ActionScriptThree_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThree.PostWidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxUnitTest_ActionScriptThree::eventPostWidgetInit ( )
{
	static UFunction* pFnPostWidgetInit = NULL;

	if ( ! pFnPostWidgetInit )
		pFnPostWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 46948 ];

	UGFxUnitTest_ActionScriptThree_eventPostWidgetInit_Parms PostWidgetInit_Parms;

	this->ProcessEvent ( pFnPostWidgetInit, &PostWidgetInit_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_NonExistantFunctionInvoke
// [0x00820002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )
// unsigned long                  BoolParam                      ( CPF_Parm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_NonExistantFunctionInvoke ( float NumParam, unsigned long BoolParam, struct FString StringParam )
{
	static UFunction* pFnAS_NonExistantFunctionInvoke = NULL;

	if ( ! pFnAS_NonExistantFunctionInvoke )
		pFnAS_NonExistantFunctionInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47102 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_NonExistantFunctionInvoke_Parms AS_NonExistantFunctionInvoke_Parms;
	AS_NonExistantFunctionInvoke_Parms.NumParam = NumParam;
	AS_NonExistantFunctionInvoke_Parms.BoolParam = BoolParam;
	memcpy ( &AS_NonExistantFunctionInvoke_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_NonExistantFunctionInvoke, &AS_NonExistantFunctionInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_NonExistantFunction
// [0x00020002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )
// unsigned long                  BoolParam                      ( CPF_Parm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_NonExistantFunction ( float NumParam, unsigned long BoolParam, struct FString StringParam )
{
	static UFunction* pFnAS_NonExistantFunction = NULL;

	if ( ! pFnAS_NonExistantFunction )
		pFnAS_NonExistantFunction = (UFunction*) UObject::GObjObjects()->Data[ 47098 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_NonExistantFunction_Parms AS_NonExistantFunction_Parms;
	AS_NonExistantFunction_Parms.NumParam = NumParam;
	AS_NonExistantFunction_Parms.BoolParam = BoolParam;
	memcpy ( &AS_NonExistantFunction_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_NonExistantFunction, &AS_NonExistantFunction_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ForceCallDelegate
// [0x00020002] 
// Parameters infos:

void UGFxUnitTest_ActionScriptThreeWidget::AS_ForceCallDelegate ( )
{
	static UFunction* pFnAS_ForceCallDelegate = NULL;

	if ( ! pFnAS_ForceCallDelegate )
		pFnAS_ForceCallDelegate = (UFunction*) UObject::GObjObjects()->Data[ 47097 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ForceCallDelegate_Parms AS_ForceCallDelegate_Parms;

	this->ProcessEvent ( pFnAS_ForceCallDelegate, &AS_ForceCallDelegate_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.Callback_Delegate
// [0x00020002] 
// Parameters infos:

void UGFxUnitTest_ActionScriptThreeWidget::Callback_Delegate ( )
{
	static UFunction* pFnCallback_Delegate = NULL;

	if ( ! pFnCallback_Delegate )
		pFnCallback_Delegate = (UFunction*) UObject::GObjObjects()->Data[ 47096 ];

	UGFxUnitTest_ActionScriptThreeWidget_execCallback_Delegate_Parms Callback_Delegate_Parms;

	this->ProcessEvent ( pFnCallback_Delegate, &Callback_Delegate_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_SetDelegateTest
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         Callback                       ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_SetDelegateTest ( struct FScriptDelegate Callback )
{
	static UFunction* pFnAS_SetDelegateTest = NULL;

	if ( ! pFnAS_SetDelegateTest )
		pFnAS_SetDelegateTest = (UFunction*) UObject::GObjObjects()->Data[ 47094 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_SetDelegateTest_Parms AS_SetDelegateTest_Parms;
	memcpy ( &AS_SetDelegateTest_Parms.Callback, &Callback, 0xC );

	this->ProcessEvent ( pFnAS_SetDelegateTest, &AS_SetDelegateTest_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueArrayAsObjVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueArrayAsObjVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueArrayAsObjVerification = NULL;

	if ( ! pFnAS_ReturnValueArrayAsObjVerification )
		pFnAS_ReturnValueArrayAsObjVerification = (UFunction*) UObject::GObjObjects()->Data[ 47092 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueArrayAsObjVerification_Parms AS_ReturnValueArrayAsObjVerification_Parms;
	AS_ReturnValueArrayAsObjVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueArrayAsObjVerification, &AS_ReturnValueArrayAsObjVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueArrayAsObjTest
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueArrayAsObjTest ( )
{
	static UFunction* pFnAS_ReturnValueArrayAsObjTest = NULL;

	if ( ! pFnAS_ReturnValueArrayAsObjTest )
		pFnAS_ReturnValueArrayAsObjTest = (UFunction*) UObject::GObjObjects()->Data[ 47090 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueArrayAsObjTest_Parms AS_ReturnValueArrayAsObjTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueArrayAsObjTest, &AS_ReturnValueArrayAsObjTest_Parms, NULL );

	return AS_ReturnValueArrayAsObjTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueObjArrayVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueObjArrayVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueObjArrayVerification = NULL;

	if ( ! pFnAS_ReturnValueObjArrayVerification )
		pFnAS_ReturnValueObjArrayVerification = (UFunction*) UObject::GObjObjects()->Data[ 47088 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueObjArrayVerification_Parms AS_ReturnValueObjArrayVerification_Parms;
	AS_ReturnValueObjArrayVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueObjArrayVerification, &AS_ReturnValueObjArrayVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueObjArrayTest
// [0x00020002] 
// Parameters infos:
// TArray< class UGFxObject* >    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

TArray< class UGFxObject* > UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueObjArrayTest ( )
{
	static UFunction* pFnAS_ReturnValueObjArrayTest = NULL;

	if ( ! pFnAS_ReturnValueObjArrayTest )
		pFnAS_ReturnValueObjArrayTest = (UFunction*) UObject::GObjObjects()->Data[ 47085 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueObjArrayTest_Parms AS_ReturnValueObjArrayTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueObjArrayTest, &AS_ReturnValueObjArrayTest_Parms, NULL );

	return AS_ReturnValueObjArrayTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueGFxObjectVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueGFxObjectVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueGFxObjectVerification = NULL;

	if ( ! pFnAS_ReturnValueGFxObjectVerification )
		pFnAS_ReturnValueGFxObjectVerification = (UFunction*) UObject::GObjObjects()->Data[ 47083 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueGFxObjectVerification_Parms AS_ReturnValueGFxObjectVerification_Parms;
	AS_ReturnValueGFxObjectVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueGFxObjectVerification, &AS_ReturnValueGFxObjectVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueGFxObjectTest
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueGFxObjectTest ( )
{
	static UFunction* pFnAS_ReturnValueGFxObjectTest = NULL;

	if ( ! pFnAS_ReturnValueGFxObjectTest )
		pFnAS_ReturnValueGFxObjectTest = (UFunction*) UObject::GObjObjects()->Data[ 47081 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueGFxObjectTest_Parms AS_ReturnValueGFxObjectTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueGFxObjectTest, &AS_ReturnValueGFxObjectTest_Parms, NULL );

	return AS_ReturnValueGFxObjectTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueStringVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueStringVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueStringVerification = NULL;

	if ( ! pFnAS_ReturnValueStringVerification )
		pFnAS_ReturnValueStringVerification = (UFunction*) UObject::GObjObjects()->Data[ 47079 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueStringVerification_Parms AS_ReturnValueStringVerification_Parms;
	AS_ReturnValueStringVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueStringVerification, &AS_ReturnValueStringVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueStringTest
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueStringTest ( )
{
	static UFunction* pFnAS_ReturnValueStringTest = NULL;

	if ( ! pFnAS_ReturnValueStringTest )
		pFnAS_ReturnValueStringTest = (UFunction*) UObject::GObjObjects()->Data[ 47077 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueStringTest_Parms AS_ReturnValueStringTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueStringTest, &AS_ReturnValueStringTest_Parms, NULL );

	return AS_ReturnValueStringTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueNumberVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueNumberVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueNumberVerification = NULL;

	if ( ! pFnAS_ReturnValueNumberVerification )
		pFnAS_ReturnValueNumberVerification = (UFunction*) UObject::GObjObjects()->Data[ 47075 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueNumberVerification_Parms AS_ReturnValueNumberVerification_Parms;
	AS_ReturnValueNumberVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueNumberVerification, &AS_ReturnValueNumberVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueNumberTest
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueNumberTest ( )
{
	static UFunction* pFnAS_ReturnValueNumberTest = NULL;

	if ( ! pFnAS_ReturnValueNumberTest )
		pFnAS_ReturnValueNumberTest = (UFunction*) UObject::GObjObjects()->Data[ 47073 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueNumberTest_Parms AS_ReturnValueNumberTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueNumberTest, &AS_ReturnValueNumberTest_Parms, NULL );

	return AS_ReturnValueNumberTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueIntVerification
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVerified                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueIntVerification ( unsigned long bVerified )
{
	static UFunction* pFnAS_ReturnValueIntVerification = NULL;

	if ( ! pFnAS_ReturnValueIntVerification )
		pFnAS_ReturnValueIntVerification = (UFunction*) UObject::GObjObjects()->Data[ 47071 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueIntVerification_Parms AS_ReturnValueIntVerification_Parms;
	AS_ReturnValueIntVerification_Parms.bVerified = bVerified;

	this->ProcessEvent ( pFnAS_ReturnValueIntVerification, &AS_ReturnValueIntVerification_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ReturnValueIntTest
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxUnitTest_ActionScriptThreeWidget::AS_ReturnValueIntTest ( )
{
	static UFunction* pFnAS_ReturnValueIntTest = NULL;

	if ( ! pFnAS_ReturnValueIntTest )
		pFnAS_ReturnValueIntTest = (UFunction*) UObject::GObjObjects()->Data[ 47069 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ReturnValueIntTest_Parms AS_ReturnValueIntTest_Parms;

	this->ProcessEvent ( pFnAS_ReturnValueIntTest, &AS_ReturnValueIntTest_Parms, NULL );

	return AS_ReturnValueIntTest_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_StructParam
// [0x00020002] 
// Parameters infos:
// struct FUnitTestMultiMemberStruct StructParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_StructParam ( struct FUnitTestMultiMemberStruct StructParam )
{
	static UFunction* pFnAS_StructParam = NULL;

	if ( ! pFnAS_StructParam )
		pFnAS_StructParam = (UFunction*) UObject::GObjObjects()->Data[ 47067 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_StructParam_Parms AS_StructParam_Parms;
	memcpy ( &AS_StructParam_Parms.StructParam, &StructParam, 0x20 );

	this->ProcessEvent ( pFnAS_StructParam, &AS_StructParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_ArrayParam
// [0x00020002] 
// Parameters infos:
// TArray< float >                ArrayParam                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_ArrayParam ( TArray< float > ArrayParam )
{
	static UFunction* pFnAS_ArrayParam = NULL;

	if ( ! pFnAS_ArrayParam )
		pFnAS_ArrayParam = (UFunction*) UObject::GObjObjects()->Data[ 47064 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_ArrayParam_Parms AS_ArrayParam_Parms;
	memcpy ( &AS_ArrayParam_Parms.ArrayParam, &ArrayParam, 0xC );

	this->ProcessEvent ( pFnAS_ArrayParam, &AS_ArrayParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_MixedParamInvoke
// [0x00820002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )
// unsigned long                  BoolParam                      ( CPF_Parm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_MixedParamInvoke ( float NumParam, unsigned long BoolParam, struct FString StringParam )
{
	static UFunction* pFnAS_MixedParamInvoke = NULL;

	if ( ! pFnAS_MixedParamInvoke )
		pFnAS_MixedParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47057 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_MixedParamInvoke_Parms AS_MixedParamInvoke_Parms;
	AS_MixedParamInvoke_Parms.NumParam = NumParam;
	AS_MixedParamInvoke_Parms.BoolParam = BoolParam;
	memcpy ( &AS_MixedParamInvoke_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_MixedParamInvoke, &AS_MixedParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_MixedParam
// [0x00020002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )
// unsigned long                  BoolParam                      ( CPF_Parm )
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_MixedParam ( float NumParam, unsigned long BoolParam, struct FString StringParam )
{
	static UFunction* pFnAS_MixedParam = NULL;

	if ( ! pFnAS_MixedParam )
		pFnAS_MixedParam = (UFunction*) UObject::GObjObjects()->Data[ 47053 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_MixedParam_Parms AS_MixedParam_Parms;
	AS_MixedParam_Parms.NumParam = NumParam;
	AS_MixedParam_Parms.BoolParam = BoolParam;
	memcpy ( &AS_MixedParam_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_MixedParam, &AS_MixedParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_StringParamInvoke
// [0x00820002] 
// Parameters infos:
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_StringParamInvoke ( struct FString StringParam )
{
	static UFunction* pFnAS_StringParamInvoke = NULL;

	if ( ! pFnAS_StringParamInvoke )
		pFnAS_StringParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47048 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_StringParamInvoke_Parms AS_StringParamInvoke_Parms;
	memcpy ( &AS_StringParamInvoke_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_StringParamInvoke, &AS_StringParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_StringParam
// [0x00020002] 
// Parameters infos:
// struct FString                 StringParam                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxUnitTest_ActionScriptThreeWidget::AS_StringParam ( struct FString StringParam )
{
	static UFunction* pFnAS_StringParam = NULL;

	if ( ! pFnAS_StringParam )
		pFnAS_StringParam = (UFunction*) UObject::GObjObjects()->Data[ 47046 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_StringParam_Parms AS_StringParam_Parms;
	memcpy ( &AS_StringParam_Parms.StringParam, &StringParam, 0xC );

	this->ProcessEvent ( pFnAS_StringParam, &AS_StringParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_BoolParamInvoke
// [0x00820002] 
// Parameters infos:
// unsigned long                  BoolParam                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_BoolParamInvoke ( unsigned long BoolParam )
{
	static UFunction* pFnAS_BoolParamInvoke = NULL;

	if ( ! pFnAS_BoolParamInvoke )
		pFnAS_BoolParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47041 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_BoolParamInvoke_Parms AS_BoolParamInvoke_Parms;
	AS_BoolParamInvoke_Parms.BoolParam = BoolParam;

	this->ProcessEvent ( pFnAS_BoolParamInvoke, &AS_BoolParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_BoolParam
// [0x00020002] 
// Parameters infos:
// unsigned long                  BoolParam                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_BoolParam ( unsigned long BoolParam )
{
	static UFunction* pFnAS_BoolParam = NULL;

	if ( ! pFnAS_BoolParam )
		pFnAS_BoolParam = (UFunction*) UObject::GObjObjects()->Data[ 47039 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_BoolParam_Parms AS_BoolParam_Parms;
	AS_BoolParam_Parms.BoolParam = BoolParam;

	this->ProcessEvent ( pFnAS_BoolParam, &AS_BoolParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_NumberParamInvoke
// [0x00820002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_NumberParamInvoke ( float NumParam )
{
	static UFunction* pFnAS_NumberParamInvoke = NULL;

	if ( ! pFnAS_NumberParamInvoke )
		pFnAS_NumberParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47034 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_NumberParamInvoke_Parms AS_NumberParamInvoke_Parms;
	AS_NumberParamInvoke_Parms.NumParam = NumParam;

	this->ProcessEvent ( pFnAS_NumberParamInvoke, &AS_NumberParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_NumberParam
// [0x00020002] 
// Parameters infos:
// float                          NumParam                       ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_NumberParam ( float NumParam )
{
	static UFunction* pFnAS_NumberParam = NULL;

	if ( ! pFnAS_NumberParam )
		pFnAS_NumberParam = (UFunction*) UObject::GObjObjects()->Data[ 47032 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_NumberParam_Parms AS_NumberParam_Parms;
	AS_NumberParam_Parms.NumParam = NumParam;

	this->ProcessEvent ( pFnAS_NumberParam, &AS_NumberParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_UIntParamInvoke
// [0x00820002] 
// Parameters infos:
// int                            UIntParam                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_UIntParamInvoke ( int UIntParam )
{
	static UFunction* pFnAS_UIntParamInvoke = NULL;

	if ( ! pFnAS_UIntParamInvoke )
		pFnAS_UIntParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47027 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_UIntParamInvoke_Parms AS_UIntParamInvoke_Parms;
	AS_UIntParamInvoke_Parms.UIntParam = UIntParam;

	this->ProcessEvent ( pFnAS_UIntParamInvoke, &AS_UIntParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_UIntParam
// [0x00020002] 
// Parameters infos:
// int                            UIntParam                      ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_UIntParam ( int UIntParam )
{
	static UFunction* pFnAS_UIntParam = NULL;

	if ( ! pFnAS_UIntParam )
		pFnAS_UIntParam = (UFunction*) UObject::GObjObjects()->Data[ 47025 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_UIntParam_Parms AS_UIntParam_Parms;
	AS_UIntParam_Parms.UIntParam = UIntParam;

	this->ProcessEvent ( pFnAS_UIntParam, &AS_UIntParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_IntParamInvoke
// [0x00820002] 
// Parameters infos:
// int                            IntParam                       ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_IntParamInvoke ( int IntParam )
{
	static UFunction* pFnAS_IntParamInvoke = NULL;

	if ( ! pFnAS_IntParamInvoke )
		pFnAS_IntParamInvoke = (UFunction*) UObject::GObjObjects()->Data[ 47020 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_IntParamInvoke_Parms AS_IntParamInvoke_Parms;
	AS_IntParamInvoke_Parms.IntParam = IntParam;

	this->ProcessEvent ( pFnAS_IntParamInvoke, &AS_IntParamInvoke_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_IntParam
// [0x00020002] 
// Parameters infos:
// int                            IntParam                       ( CPF_Parm )

void UGFxUnitTest_ActionScriptThreeWidget::AS_IntParam ( int IntParam )
{
	static UFunction* pFnAS_IntParam = NULL;

	if ( ! pFnAS_IntParam )
		pFnAS_IntParam = (UFunction*) UObject::GObjObjects()->Data[ 47018 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_IntParam_Parms AS_IntParam_Parms;
	AS_IntParam_Parms.IntParam = IntParam;

	this->ProcessEvent ( pFnAS_IntParam, &AS_IntParam_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.AS_EndUnrealScriptTests
// [0x00020002] 
// Parameters infos:

void UGFxUnitTest_ActionScriptThreeWidget::AS_EndUnrealScriptTests ( )
{
	static UFunction* pFnAS_EndUnrealScriptTests = NULL;

	if ( ! pFnAS_EndUnrealScriptTests )
		pFnAS_EndUnrealScriptTests = (UFunction*) UObject::GObjObjects()->Data[ 47017 ];

	UGFxUnitTest_ActionScriptThreeWidget_execAS_EndUnrealScriptTests_Parms AS_EndUnrealScriptTests_Parms;

	this->ProcessEvent ( pFnAS_EndUnrealScriptTests, &AS_EndUnrealScriptTests_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.IsSameAsTestStruct
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FUnitTestMultiMemberStruct InStruct                       ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UGFxUnitTest_ActionScriptThreeWidget::IsSameAsTestStruct ( struct FUnitTestMultiMemberStruct* InStruct )
{
	static UFunction* pFnIsSameAsTestStruct = NULL;

	if ( ! pFnIsSameAsTestStruct )
		pFnIsSameAsTestStruct = (UFunction*) UObject::GObjObjects()->Data[ 47000 ];

	UGFxUnitTest_ActionScriptThreeWidget_execIsSameAsTestStruct_Parms IsSameAsTestStruct_Parms;

	this->ProcessEvent ( pFnIsSameAsTestStruct, &IsSameAsTestStruct_Parms, NULL );

	if ( InStruct )
		memcpy ( InStruct, &IsSameAsTestStruct_Parms.InStruct, 0x20 );

	return IsSameAsTestStruct_Parms.ReturnValue;
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.RunUnrealScriptTests
// [0x00820002] 
// Parameters infos:

void UGFxUnitTest_ActionScriptThreeWidget::RunUnrealScriptTests ( )
{
	static UFunction* pFnRunUnrealScriptTests = NULL;

	if ( ! pFnRunUnrealScriptTests )
		pFnRunUnrealScriptTests = (UFunction*) UObject::GObjObjects()->Data[ 47009 ];

	UGFxUnitTest_ActionScriptThreeWidget_execRunUnrealScriptTests_Parms RunUnrealScriptTests_Parms;

	this->ProcessEvent ( pFnRunUnrealScriptTests, &RunUnrealScriptTests_Parms, NULL );
};

// Function UTGame.GFxUnitTest_ActionScriptThreeWidget.DelegateTest
// [0x00120000] 
// Parameters infos:

void UGFxUnitTest_ActionScriptThreeWidget::DelegateTest ( )
{
	static UFunction* pFnDelegateTest = NULL;

	if ( ! pFnDelegateTest )
		pFnDelegateTest = (UFunction*) UObject::GObjObjects()->Data[ 47007 ];

	UGFxUnitTest_ActionScriptThreeWidget_execDelegateTest_Parms DelegateTest_Parms;

	this->ProcessEvent ( pFnDelegateTest, &DelegateTest_Parms, NULL );
};

// Function UTGame.MorphTestActor.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void AMorphTestActor::eventTick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47114 ];

	AMorphTestActor_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.OnAnimEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       InSeqNode                      ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void APhysAnimTestActor::eventOnAnimEnd ( class UAnimNodeSequence* InSeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 47215 ];

	APhysAnimTestActor_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.InSeqNode = InSeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void APhysAnimTestActor::Tick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 47203 ];

	APhysAnimTestActor_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.RecoverFromRagdoll
// [0x00820002] 
// Parameters infos:

void APhysAnimTestActor::RecoverFromRagdoll ( )
{
	static UFunction* pFnRecoverFromRagdoll = NULL;

	if ( ! pFnRecoverFromRagdoll )
		pFnRecoverFromRagdoll = (UFunction*) UObject::GObjObjects()->Data[ 47192 ];

	APhysAnimTestActor_execRecoverFromRagdoll_Parms RecoverFromRagdoll_Parms;

	this->ProcessEvent ( pFnRecoverFromRagdoll, &RecoverFromRagdoll_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.SetBoneSprings
// [0x00820002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void APhysAnimTestActor::SetBoneSprings ( unsigned long bEnabled )
{
	static UFunction* pFnSetBoneSprings = NULL;

	if ( ! pFnSetBoneSprings )
		pFnSetBoneSprings = (UFunction*) UObject::GObjObjects()->Data[ 47183 ];

	APhysAnimTestActor_execSetBoneSprings_Parms SetBoneSprings_Parms;
	SetBoneSprings_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetBoneSprings, &SetBoneSprings_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.IsAngularBoneSpringName
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   InName                         ( CPF_Parm )

bool APhysAnimTestActor::IsAngularBoneSpringName ( struct FName InName )
{
	static UFunction* pFnIsAngularBoneSpringName = NULL;

	if ( ! pFnIsAngularBoneSpringName )
		pFnIsAngularBoneSpringName = (UFunction*) UObject::GObjObjects()->Data[ 47178 ];

	APhysAnimTestActor_execIsAngularBoneSpringName_Parms IsAngularBoneSpringName_Parms;
	memcpy ( &IsAngularBoneSpringName_Parms.InName, &InName, 0x8 );

	this->ProcessEvent ( pFnIsAngularBoneSpringName, &IsAngularBoneSpringName_Parms, NULL );

	return IsAngularBoneSpringName_Parms.ReturnValue;
};

// Function UTGame.PhysAnimTestActor.IsLinearBoneSpringName
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   InName                         ( CPF_Parm )

bool APhysAnimTestActor::IsLinearBoneSpringName ( struct FName InName )
{
	static UFunction* pFnIsLinearBoneSpringName = NULL;

	if ( ! pFnIsLinearBoneSpringName )
		pFnIsLinearBoneSpringName = (UFunction*) UObject::GObjObjects()->Data[ 47173 ];

	APhysAnimTestActor_execIsLinearBoneSpringName_Parms IsLinearBoneSpringName_Parms;
	memcpy ( &IsLinearBoneSpringName_Parms.InName, &InName, 0x8 );

	this->ProcessEvent ( pFnIsLinearBoneSpringName, &IsLinearBoneSpringName_Parms, NULL );

	return IsLinearBoneSpringName_Parms.ReturnValue;
};

// Function UTGame.PhysAnimTestActor.SetLowerFixed
// [0x00020002] 
// Parameters infos:

void APhysAnimTestActor::SetLowerFixed ( )
{
	static UFunction* pFnSetLowerFixed = NULL;

	if ( ! pFnSetLowerFixed )
		pFnSetLowerFixed = (UFunction*) UObject::GObjObjects()->Data[ 47169 ];

	APhysAnimTestActor_execSetLowerFixed_Parms SetLowerFixed_Parms;

	this->ProcessEvent ( pFnSetLowerFixed, &SetLowerFixed_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.DetachAttachments
// [0x00020002] 
// Parameters infos:

void APhysAnimTestActor::DetachAttachments ( )
{
	static UFunction* pFnDetachAttachments = NULL;

	if ( ! pFnDetachAttachments )
		pFnDetachAttachments = (UFunction*) UObject::GObjObjects()->Data[ 47164 ];

	APhysAnimTestActor_execDetachAttachments_Parms DetachAttachments_Parms;

	this->ProcessEvent ( pFnDetachAttachments, &DetachAttachments_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.IsLowerBodyName
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   InName                         ( CPF_Parm )

bool APhysAnimTestActor::IsLowerBodyName ( struct FName InName )
{
	static UFunction* pFnIsLowerBodyName = NULL;

	if ( ! pFnIsLowerBodyName )
		pFnIsLowerBodyName = (UFunction*) UObject::GObjObjects()->Data[ 47160 ];

	APhysAnimTestActor_execIsLowerBodyName_Parms IsLowerBodyName_Parms;
	memcpy ( &IsLowerBodyName_Parms.InName, &InName, 0x8 );

	this->ProcessEvent ( pFnIsLowerBodyName, &IsLowerBodyName_Parms, NULL );

	return IsLowerBodyName_Parms.ReturnValue;
};

// Function UTGame.PhysAnimTestActor.SetBodiesFixed
// [0x00020002] 
// Parameters infos:
// unsigned long                  InFixed                        ( CPF_Parm )

void APhysAnimTestActor::SetBodiesFixed ( unsigned long InFixed )
{
	static UFunction* pFnSetBodiesFixed = NULL;

	if ( ! pFnSetBodiesFixed )
		pFnSetBodiesFixed = (UFunction*) UObject::GObjObjects()->Data[ 47158 ];

	APhysAnimTestActor_execSetBodiesFixed_Parms SetBodiesFixed_Parms;
	SetBodiesFixed_Parms.InFixed = InFixed;

	this->ProcessEvent ( pFnSetBodiesFixed, &SetBodiesFixed_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.EnableMotors
// [0x00020002] 
// Parameters infos:
// unsigned long                  InEnabled                      ( CPF_Parm )

void APhysAnimTestActor::EnableMotors ( unsigned long InEnabled )
{
	static UFunction* pFnEnableMotors = NULL;

	if ( ! pFnEnableMotors )
		pFnEnableMotors = (UFunction*) UObject::GObjObjects()->Data[ 47156 ];

	APhysAnimTestActor_execEnableMotors_Parms EnableMotors_Parms;
	EnableMotors_Parms.InEnabled = InEnabled;

	this->ProcessEvent ( pFnEnableMotors, &EnableMotors_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.OnSetPATAState
// [0x00020002] 
// Parameters infos:
// class USeqAct_SetPATAState*    Action                         ( CPF_Parm )

void APhysAnimTestActor::OnSetPATAState ( class USeqAct_SetPATAState* Action )
{
	static UFunction* pFnOnSetPATAState = NULL;

	if ( ! pFnOnSetPATAState )
		pFnOnSetPATAState = (UFunction*) UObject::GObjObjects()->Data[ 47152 ];

	APhysAnimTestActor_execOnSetPATAState_Parms OnSetPATAState_Parms;
	OnSetPATAState_Parms.Action = Action;

	this->ProcessEvent ( pFnOnSetPATAState, &OnSetPATAState_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.SetPATAState
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void APhysAnimTestActor::SetPATAState ( unsigned char NewState )
{
	static UFunction* pFnSetPATAState = NULL;

	if ( ! pFnSetPATAState )
		pFnSetPATAState = (UFunction*) UObject::GObjObjects()->Data[ 47150 ];

	APhysAnimTestActor_execSetPATAState_Parms SetPATAState_Parms;
	SetPATAState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetPATAState, &SetPATAState_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.EndGrab
// [0x00020002] 
// Parameters infos:

void APhysAnimTestActor::EndGrab ( )
{
	static UFunction* pFnEndGrab = NULL;

	if ( ! pFnEndGrab )
		pFnEndGrab = (UFunction*) UObject::GObjObjects()->Data[ 47149 ];

	APhysAnimTestActor_execEndGrab_Parms EndGrab_Parms;

	this->ProcessEvent ( pFnEndGrab, &EndGrab_Parms, NULL );
};

// Function UTGame.PhysAnimTestActor.PreGrab
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool APhysAnimTestActor::PreGrab ( )
{
	static UFunction* pFnPreGrab = NULL;

	if ( ! pFnPreGrab )
		pFnPreGrab = (UFunction*) UObject::GObjObjects()->Data[ 47147 ];

	APhysAnimTestActor_execPreGrab_Parms PreGrab_Parms;

	this->ProcessEvent ( pFnPreGrab, &PreGrab_Parms, NULL );

	return PreGrab_Parms.ReturnValue;
};

// Function UTGame.PhysAnimTestActor.PrePokeActor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 PokeDir                        ( CPF_Parm )

bool APhysAnimTestActor::PrePokeActor ( struct FVector PokeDir )
{
	static UFunction* pFnPrePokeActor = NULL;

	if ( ! pFnPrePokeActor )
		pFnPrePokeActor = (UFunction*) UObject::GObjObjects()->Data[ 47133 ];

	APhysAnimTestActor_execPrePokeActor_Parms PrePokeActor_Parms;
	memcpy ( &PrePokeActor_Parms.PokeDir, &PokeDir, 0xC );

	this->ProcessEvent ( pFnPrePokeActor, &PrePokeActor_Parms, NULL );

	return PrePokeActor_Parms.ReturnValue;
};

// Function UTGame.PhysAnimTestActor.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void APhysAnimTestActor::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 47127 ];

	APhysAnimTestActor_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTActorFactoryAI.PostCreateActor
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )
// class USeqAct_ActorFactory*    ActorFactoryData               ( CPF_OptionalParm | CPF_Parm )

void UUTActorFactoryAI::eventPostCreateActor ( class AActor* NewActor, class USeqAct_ActorFactory* ActorFactoryData )
{
	static UFunction* pFnPostCreateActor = NULL;

	if ( ! pFnPostCreateActor )
		pFnPostCreateActor = (UFunction*) UObject::GObjObjects()->Data[ 47370 ];

	UUTActorFactoryAI_eventPostCreateActor_Parms PostCreateActor_Parms;
	PostCreateActor_Parms.NewActor = NewActor;
	PostCreateActor_Parms.ActorFactoryData = ActorFactoryData;

	this->ProcessEvent ( pFnPostCreateActor, &PostCreateActor_Parms, NULL );
};

// Function UTGame.UTSquadAI.HasOtherVisibleEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::HasOtherVisibleEnemy ( class AUTBot* B )
{
	static UFunction* pFnHasOtherVisibleEnemy = NULL;

	if ( ! pFnHasOtherVisibleEnemy )
		pFnHasOtherVisibleEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51300 ];

	AUTSquadAI_execHasOtherVisibleEnemy_Parms HasOtherVisibleEnemy_Parms;
	HasOtherVisibleEnemy_Parms.B = B;

	this->ProcessEvent ( pFnHasOtherVisibleEnemy, &HasOtherVisibleEnemy_Parms, NULL );

	return HasOtherVisibleEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ModifyAggression
// [0x00420002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )
// float                          Aggression                     ( CPF_Parm | CPF_OutParm )

void AUTSquadAI::ModifyAggression ( class AUTBot* B, float* Aggression )
{
	static UFunction* pFnModifyAggression = NULL;

	if ( ! pFnModifyAggression )
		pFnModifyAggression = (UFunction*) UObject::GObjObjects()->Data[ 55150 ];

	AUTSquadAI_execModifyAggression_Parms ModifyAggression_Parms;
	ModifyAggression_Parms.B = B;

	this->ProcessEvent ( pFnModifyAggression, &ModifyAggression_Parms, NULL );

	if ( Aggression )
		*Aggression = ModifyAggression_Parms.Aggression;
};

// Function UTGame.UTSquadAI.MarkHuntingSpots
// [0x00020000] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::MarkHuntingSpots ( class AUTBot* B )
{
	static UFunction* pFnMarkHuntingSpots = NULL;

	if ( ! pFnMarkHuntingSpots )
		pFnMarkHuntingSpots = (UFunction*) UObject::GObjObjects()->Data[ 55148 ];

	AUTSquadAI_execMarkHuntingSpots_Parms MarkHuntingSpots_Parms;
	MarkHuntingSpots_Parms.B = B;

	this->ProcessEvent ( pFnMarkHuntingSpots, &MarkHuntingSpots_Parms, NULL );
};

// Function UTGame.UTSquadAI.HandlePathObstruction
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  BlockedBy                      ( CPF_Parm )

bool AUTSquadAI::HandlePathObstruction ( class AUTBot* B, class AActor* BlockedBy )
{
	static UFunction* pFnHandlePathObstruction = NULL;

	if ( ! pFnHandlePathObstruction )
		pFnHandlePathObstruction = (UFunction*) UObject::GObjObjects()->Data[ 52057 ];

	AUTSquadAI_execHandlePathObstruction_Parms HandlePathObstruction_Parms;
	HandlePathObstruction_Parms.B = B;
	HandlePathObstruction_Parms.BlockedBy = BlockedBy;

	this->ProcessEvent ( pFnHandlePathObstruction, &HandlePathObstruction_Parms, NULL );

	return HandlePathObstruction_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AcceptableDefensivePosition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        N                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::AcceptableDefensivePosition ( class ANavigationPoint* N, class AUTBot* B )
{
	static UFunction* pFnAcceptableDefensivePosition = NULL;

	if ( ! pFnAcceptableDefensivePosition )
		pFnAcceptableDefensivePosition = (UFunction*) UObject::GObjObjects()->Data[ 51588 ];

	AUTSquadAI_execAcceptableDefensivePosition_Parms AcceptableDefensivePosition_Parms;
	AcceptableDefensivePosition_Parms.N = N;
	AcceptableDefensivePosition_Parms.B = B;

	this->ProcessEvent ( pFnAcceptableDefensivePosition, &AcceptableDefensivePosition_Parms, NULL );

	return AcceptableDefensivePosition_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.RateDefensivePosition
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ANavigationPoint*        N                              ( CPF_Parm )
// class AUTBot*                  CurrentBot                     ( CPF_Parm )
// class AActor*                  Center                         ( CPF_Parm )

float AUTSquadAI::RateDefensivePosition ( class ANavigationPoint* N, class AUTBot* CurrentBot, class AActor* Center )
{
	static UFunction* pFnRateDefensivePosition = NULL;

	if ( ! pFnRateDefensivePosition )
		pFnRateDefensivePosition = (UFunction*) UObject::GObjObjects()->Data[ 55129 ];

	AUTSquadAI_execRateDefensivePosition_Parms RateDefensivePosition_Parms;
	RateDefensivePosition_Parms.N = N;
	RateDefensivePosition_Parms.CurrentBot = CurrentBot;
	RateDefensivePosition_Parms.Center = Center;

	this->ProcessEvent ( pFnRateDefensivePosition, &RateDefensivePosition_Parms, NULL );

	return RateDefensivePosition_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.FindDefensivePositionFor
// [0x00020002] 
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

class ANavigationPoint* AUTSquadAI::FindDefensivePositionFor ( class AUTBot* B )
{
	static UFunction* pFnFindDefensivePositionFor = NULL;

	if ( ! pFnFindDefensivePositionFor )
		pFnFindDefensivePositionFor = (UFunction*) UObject::GObjObjects()->Data[ 51590 ];

	AUTSquadAI_execFindDefensivePositionFor_Parms FindDefensivePositionFor_Parms;
	FindDefensivePositionFor_Parms.B = B;

	this->ProcessEvent ( pFnFindDefensivePositionFor, &FindDefensivePositionFor_Parms, NULL );

	return FindDefensivePositionFor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetMaxDefenseDistanceFrom
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Center                         ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTSquadAI::GetMaxDefenseDistanceFrom ( class AActor* Center, class AUTBot* B )
{
	static UFunction* pFnGetMaxDefenseDistanceFrom = NULL;

	if ( ! pFnGetMaxDefenseDistanceFrom )
		pFnGetMaxDefenseDistanceFrom = (UFunction*) UObject::GObjObjects()->Data[ 55118 ];

	AUTSquadAI_execGetMaxDefenseDistanceFrom_Parms GetMaxDefenseDistanceFrom_Parms;
	GetMaxDefenseDistanceFrom_Parms.Center = Center;
	GetMaxDefenseDistanceFrom_Parms.B = B;

	this->ProcessEvent ( pFnGetMaxDefenseDistanceFrom, &GetMaxDefenseDistanceFrom_Parms, NULL );

	return GetMaxDefenseDistanceFrom_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.FriendlyToward
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTSquadAI::FriendlyToward ( class APawn* Other )
{
	static UFunction* pFnFriendlyToward = NULL;

	if ( ! pFnFriendlyToward )
		pFnFriendlyToward = (UFunction*) UObject::GObjObjects()->Data[ 55112 ];

	AUTSquadAI_execFriendlyToward_Parms FriendlyToward_Parms;
	FriendlyToward_Parms.Other = Other;

	this->ProcessEvent ( pFnFriendlyToward, &FriendlyToward_Parms, NULL );

	return FriendlyToward_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.IsDefending
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::IsDefending ( class AUTBot* B )
{
	static UFunction* pFnIsDefending = NULL;

	if ( ! pFnIsDefending )
		pFnIsDefending = (UFunction*) UObject::GObjObjects()->Data[ 51279 ];

	AUTSquadAI_execIsDefending_Parms IsDefending_Parms;
	IsDefending_Parms.B = B;

	this->ProcessEvent ( pFnIsDefending, &IsDefending_Parms, NULL );

	return IsDefending_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ClearPathFor
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTSquadAI::ClearPathFor ( class AController* C )
{
	static UFunction* pFnClearPathFor = NULL;

	if ( ! pFnClearPathFor )
		pFnClearPathFor = (UFunction*) UObject::GObjObjects()->Data[ 51621 ];

	AUTSquadAI_execClearPathFor_Parms ClearPathFor_Parms;
	ClearPathFor_Parms.C = C;

	this->ProcessEvent ( pFnClearPathFor, &ClearPathFor_Parms, NULL );

	return ClearPathFor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.PickRetreatDestination
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::PickRetreatDestination ( class AUTBot* B )
{
	static UFunction* pFnPickRetreatDestination = NULL;

	if ( ! pFnPickRetreatDestination )
		pFnPickRetreatDestination = (UFunction*) UObject::GObjObjects()->Data[ 51667 ];

	AUTSquadAI_execPickRetreatDestination_Parms PickRetreatDestination_Parms;
	PickRetreatDestination_Parms.B = B;

	this->ProcessEvent ( pFnPickRetreatDestination, &PickRetreatDestination_Parms, NULL );

	return PickRetreatDestination_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.BeDevious
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTSquadAI::BeDevious ( class APawn* Enemy )
{
	static UFunction* pFnBeDevious = NULL;

	if ( ! pFnBeDevious )
		pFnBeDevious = (UFunction*) UObject::GObjObjects()->Data[ 51816 ];

	AUTSquadAI_execBeDevious_Parms BeDevious_Parms;
	BeDevious_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnBeDevious, &BeDevious_Parms, NULL );

	return BeDevious_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void AUTSquadAI::DisplayDebug ( class AHUD* HUD, float* YL, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 55098 ];

	AUTSquadAI_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( YL )
		*YL = DisplayDebug_Parms.YL;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function UTGame.UTSquadAI.PickBotToReassign
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTBot* AUTSquadAI::PickBotToReassign ( )
{
	static UFunction* pFnPickBotToReassign = NULL;

	if ( ! pFnPickBotToReassign )
		pFnPickBotToReassign = (UFunction*) UObject::GObjObjects()->Data[ 55090 ];

	AUTSquadAI_execPickBotToReassign_Parms PickBotToReassign_Parms;

	this->ProcessEvent ( pFnPickBotToReassign, &PickBotToReassign_Parms, NULL );

	return PickBotToReassign_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.BotSuitability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTSquadAI::BotSuitability ( class AUTBot* B )
{
	static UFunction* pFnBotSuitability = NULL;

	if ( ! pFnBotSuitability )
		pFnBotSuitability = (UFunction*) UObject::GObjObjects()->Data[ 55087 ];

	AUTSquadAI_execBotSuitability_Parms BotSuitability_Parms;
	BotSuitability_Parms.B = B;

	this->ProcessEvent ( pFnBotSuitability, &BotSuitability_Parms, NULL );

	return BotSuitability_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CheckSquadObjectives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::CheckSquadObjectives ( class AUTBot* B )
{
	static UFunction* pFnCheckSquadObjectives = NULL;

	if ( ! pFnCheckSquadObjectives )
		pFnCheckSquadObjectives = (UFunction*) UObject::GObjObjects()->Data[ 55076 ];

	AUTSquadAI_execCheckSquadObjectives_Parms CheckSquadObjectives_Parms;
	CheckSquadObjectives_Parms.B = B;

	this->ProcessEvent ( pFnCheckSquadObjectives, &CheckSquadObjectives_Parms, NULL );

	return CheckSquadObjectives_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CheckSuperItem
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// float                          SuperDist                      ( CPF_Parm )

bool AUTSquadAI::CheckSuperItem ( class AUTBot* B, float SuperDist )
{
	static UFunction* pFnCheckSuperItem = NULL;

	if ( ! pFnCheckSuperItem )
		pFnCheckSuperItem = (UFunction*) UObject::GObjObjects()->Data[ 55059 ];

	AUTSquadAI_execCheckSuperItem_Parms CheckSuperItem_Parms;
	CheckSuperItem_Parms.B = B;
	CheckSuperItem_Parms.SuperDist = SuperDist;

	this->ProcessEvent ( pFnCheckSuperItem, &CheckSuperItem_Parms, NULL );

	return CheckSuperItem_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ShouldCheckSuperVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::ShouldCheckSuperVehicle ( class AUTBot* B )
{
	static UFunction* pFnShouldCheckSuperVehicle = NULL;

	if ( ! pFnShouldCheckSuperVehicle )
		pFnShouldCheckSuperVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55055 ];

	AUTSquadAI_execShouldCheckSuperVehicle_Parms ShouldCheckSuperVehicle_Parms;
	ShouldCheckSuperVehicle_Parms.B = B;

	this->ProcessEvent ( pFnShouldCheckSuperVehicle, &ShouldCheckSuperVehicle_Parms, NULL );

	return ShouldCheckSuperVehicle_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.OverrideFollowPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::OverrideFollowPlayer ( class AUTBot* B )
{
	static UFunction* pFnOverrideFollowPlayer = NULL;

	if ( ! pFnOverrideFollowPlayer )
		pFnOverrideFollowPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55050 ];

	AUTSquadAI_execOverrideFollowPlayer_Parms OverrideFollowPlayer_Parms;
	OverrideFollowPlayer_Parms.B = B;

	this->ProcessEvent ( pFnOverrideFollowPlayer, &OverrideFollowPlayer_Parms, NULL );

	return OverrideFollowPlayer_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.VehicleDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicle*              V                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTSquadAI::VehicleDesireability ( class AUTVehicle* V, class AUTBot* B )
{
	static UFunction* pFnVehicleDesireability = NULL;

	if ( ! pFnVehicleDesireability )
		pFnVehicleDesireability = (UFunction*) UObject::GObjObjects()->Data[ 52055 ];

	AUTSquadAI_execVehicleDesireability_Parms VehicleDesireability_Parms;
	VehicleDesireability_Parms.V = V;
	VehicleDesireability_Parms.B = B;

	this->ProcessEvent ( pFnVehicleDesireability, &VehicleDesireability_Parms, NULL );

	return VehicleDesireability_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ShouldUseHoverboard
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::ShouldUseHoverboard ( class AUTBot* B )
{
	static UFunction* pFnShouldUseHoverboard = NULL;

	if ( ! pFnShouldUseHoverboard )
		pFnShouldUseHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 55043 ];

	AUTSquadAI_execShouldUseHoverboard_Parms ShouldUseHoverboard_Parms;
	ShouldUseHoverboard_Parms.B = B;

	this->ProcessEvent ( pFnShouldUseHoverboard, &ShouldUseHoverboard_Parms, NULL );

	return ShouldUseHoverboard_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CheckHoverboard
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::CheckHoverboard ( class AUTBot* B )
{
	static UFunction* pFnCheckHoverboard = NULL;

	if ( ! pFnCheckHoverboard )
		pFnCheckHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 55039 ];

	AUTSquadAI_execCheckHoverboard_Parms CheckHoverboard_Parms;
	CheckHoverboard_Parms.B = B;

	this->ProcessEvent ( pFnCheckHoverboard, &CheckHoverboard_Parms, NULL );

	return CheckHoverboard_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CheckVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::CheckVehicle ( class AUTBot* B )
{
	static UFunction* pFnCheckVehicle = NULL;

	if ( ! pFnCheckVehicle )
		pFnCheckVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55022 ];

	AUTSquadAI_execCheckVehicle_Parms CheckVehicle_Parms;
	CheckVehicle_Parms.B = B;

	this->ProcessEvent ( pFnCheckVehicle, &CheckVehicle_Parms, NULL );

	return CheckVehicle_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GotoVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicle*              SquadVehicle                   ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::GotoVehicle ( class AUTVehicle* SquadVehicle, class AUTBot* B )
{
	static UFunction* pFnGotoVehicle = NULL;

	if ( ! pFnGotoVehicle )
		pFnGotoVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55016 ];

	AUTSquadAI_execGotoVehicle_Parms GotoVehicle_Parms;
	GotoVehicle_Parms.SquadVehicle = SquadVehicle;
	GotoVehicle_Parms.B = B;

	this->ProcessEvent ( pFnGotoVehicle, &GotoVehicle_Parms, NULL );

	return GotoVehicle_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.EnterAndExitVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::EnterAndExitVehicle ( class AUTBot* B )
{
	static UFunction* pFnEnterAndExitVehicle = NULL;

	if ( ! pFnEnterAndExitVehicle )
		pFnEnterAndExitVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55012 ];

	AUTSquadAI_execEnterAndExitVehicle_Parms EnterAndExitVehicle_Parms;
	EnterAndExitVehicle_Parms.B = B;

	this->ProcessEvent ( pFnEnterAndExitVehicle, &EnterAndExitVehicle_Parms, NULL );

	return EnterAndExitVehicle_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetOnHoverboard
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::GetOnHoverboard ( class AUTBot* B )
{
	static UFunction* pFnGetOnHoverboard = NULL;

	if ( ! pFnGetOnHoverboard )
		pFnGetOnHoverboard = (UFunction*) UObject::GObjObjects()->Data[ 55008 ];

	AUTSquadAI_execGetOnHoverboard_Parms GetOnHoverboard_Parms;
	GetOnHoverboard_Parms.B = B;

	this->ProcessEvent ( pFnGetOnHoverboard, &GetOnHoverboard_Parms, NULL );

	return GetOnHoverboard_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.IsOnPathToSquadObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Goal                           ( CPF_Parm )

bool AUTSquadAI::IsOnPathToSquadObjective ( class AActor* Goal )
{
	static UFunction* pFnIsOnPathToSquadObjective = NULL;

	if ( ! pFnIsOnPathToSquadObjective )
		pFnIsOnPathToSquadObjective = (UFunction*) UObject::GObjObjects()->Data[ 55003 ];

	AUTSquadAI_execIsOnPathToSquadObjective_Parms IsOnPathToSquadObjective_Parms;
	IsOnPathToSquadObjective_Parms.Goal = Goal;

	this->ProcessEvent ( pFnIsOnPathToSquadObjective, &IsOnPathToSquadObjective_Parms, NULL );

	return IsOnPathToSquadObjective_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.BotEnteredVehicle
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::BotEnteredVehicle ( class AUTBot* B )
{
	static UFunction* pFnBotEnteredVehicle = NULL;

	if ( ! pFnBotEnteredVehicle )
		pFnBotEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55001 ];

	AUTSquadAI_execBotEnteredVehicle_Parms BotEnteredVehicle_Parms;
	BotEnteredVehicle_Parms.B = B;

	this->ProcessEvent ( pFnBotEnteredVehicle, &BotEnteredVehicle_Parms, NULL );
};

// Function UTGame.UTSquadAI.NeverBail
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTSquadAI::NeverBail ( class APawn* P )
{
	static UFunction* pFnNeverBail = NULL;

	if ( ! pFnNeverBail )
		pFnNeverBail = (UFunction*) UObject::GObjObjects()->Data[ 54998 ];

	AUTSquadAI_execNeverBail_Parms NeverBail_Parms;
	NeverBail_Parms.P = P;

	this->ProcessEvent ( pFnNeverBail, &NeverBail_Parms, NULL );

	return NeverBail_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AllowContinueOnFoot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AUTVehicle*              V                              ( CPF_Parm )

bool AUTSquadAI::AllowContinueOnFoot ( class AUTBot* B, class AUTVehicle* V )
{
	static UFunction* pFnAllowContinueOnFoot = NULL;

	if ( ! pFnAllowContinueOnFoot )
		pFnAllowContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 47643 ];

	AUTSquadAI_execAllowContinueOnFoot_Parms AllowContinueOnFoot_Parms;
	AllowContinueOnFoot_Parms.B = B;
	AllowContinueOnFoot_Parms.V = V;

	this->ProcessEvent ( pFnAllowContinueOnFoot, &AllowContinueOnFoot_Parms, NULL );

	return AllowContinueOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.MaxVehicleDist
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

float AUTSquadAI::MaxVehicleDist ( class APawn* P )
{
	static UFunction* pFnMaxVehicleDist = NULL;

	if ( ! pFnMaxVehicleDist )
		pFnMaxVehicleDist = (UFunction*) UObject::GObjObjects()->Data[ 54988 ];

	AUTSquadAI_execMaxVehicleDist_Parms MaxVehicleDist_Parms;
	MaxVehicleDist_Parms.P = P;

	this->ProcessEvent ( pFnMaxVehicleDist, &MaxVehicleDist_Parms, NULL );

	return MaxVehicleDist_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AssignSquadResponsibility
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::AssignSquadResponsibility ( class AUTBot* B )
{
	static UFunction* pFnAssignSquadResponsibility = NULL;

	if ( ! pFnAssignSquadResponsibility )
		pFnAssignSquadResponsibility = (UFunction*) UObject::GObjObjects()->Data[ 51207 ];

	AUTSquadAI_execAssignSquadResponsibility_Parms AssignSquadResponsibility_Parms;
	AssignSquadResponsibility_Parms.B = B;

	this->ProcessEvent ( pFnAssignSquadResponsibility, &AssignSquadResponsibility_Parms, NULL );

	return AssignSquadResponsibility_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AddTransientCosts
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )
// float                          F                              ( CPF_Parm )

void AUTSquadAI::AddTransientCosts ( class AUTBot* B, float F )
{
	static UFunction* pFnAddTransientCosts = NULL;

	if ( ! pFnAddTransientCosts )
		pFnAddTransientCosts = (UFunction*) UObject::GObjObjects()->Data[ 54983 ];

	AUTSquadAI_execAddTransientCosts_Parms AddTransientCosts_Parms;
	AddTransientCosts_Parms.B = B;
	AddTransientCosts_Parms.F = F;

	this->ProcessEvent ( pFnAddTransientCosts, &AddTransientCosts_Parms, NULL );
};

// Function UTGame.UTSquadAI.AllowTaunt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::AllowTaunt ( class AUTBot* B )
{
	static UFunction* pFnAllowTaunt = NULL;

	if ( ! pFnAllowTaunt )
		pFnAllowTaunt = (UFunction*) UObject::GObjObjects()->Data[ 54980 ];

	AUTSquadAI_execAllowTaunt_Parms AllowTaunt_Parms;
	AllowTaunt_Parms.B = B;

	this->ProcessEvent ( pFnAllowTaunt, &AllowTaunt_Parms, NULL );

	return AllowTaunt_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.TellBotToFollow
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

bool AUTSquadAI::TellBotToFollow ( class AUTBot* B, class AController* C )
{
	static UFunction* pFnTellBotToFollow = NULL;

	if ( ! pFnTellBotToFollow )
		pFnTellBotToFollow = (UFunction*) UObject::GObjObjects()->Data[ 54970 ];

	AUTSquadAI_execTellBotToFollow_Parms TellBotToFollow_Parms;
	TellBotToFollow_Parms.B = B;
	TellBotToFollow_Parms.C = C;

	this->ProcessEvent ( pFnTellBotToFollow, &TellBotToFollow_Parms, NULL );

	return TellBotToFollow_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.PickNewLeader
// [0x00020002] 
// Parameters infos:

void AUTSquadAI::PickNewLeader ( )
{
	static UFunction* pFnPickNewLeader = NULL;

	if ( ! pFnPickNewLeader )
		pFnPickNewLeader = (UFunction*) UObject::GObjObjects()->Data[ 54968 ];

	AUTSquadAI_execPickNewLeader_Parms PickNewLeader_Parms;

	this->ProcessEvent ( pFnPickNewLeader, &PickNewLeader_Parms, NULL );
};

// Function UTGame.UTSquadAI.GetSize
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTSquadAI::GetSize ( )
{
	static UFunction* pFnGetSize = NULL;

	if ( ! pFnGetSize )
		pFnGetSize = (UFunction*) UObject::GObjObjects()->Data[ 52959 ];

	AUTSquadAI_execGetSize_Parms GetSize_Parms;

	this->ProcessEvent ( pFnGetSize, &GetSize_Parms, NULL );

	return GetSize_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetShortOrderStringFor
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

struct FString AUTSquadAI::GetShortOrderStringFor ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetShortOrderStringFor = NULL;

	if ( ! pFnGetShortOrderStringFor )
		pFnGetShortOrderStringFor = (UFunction*) UObject::GObjObjects()->Data[ 54965 ];

	AUTSquadAI_execGetShortOrderStringFor_Parms GetShortOrderStringFor_Parms;
	GetShortOrderStringFor_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetShortOrderStringFor, &GetShortOrderStringFor_Parms, NULL );

	return GetShortOrderStringFor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetOrderStringFor
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

struct FString AUTSquadAI::GetOrderStringFor ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetOrderStringFor = NULL;

	if ( ! pFnGetOrderStringFor )
		pFnGetOrderStringFor = (UFunction*) UObject::GObjObjects()->Data[ 54961 ];

	AUTSquadAI_execGetOrderStringFor_Parms GetOrderStringFor_Parms;
	GetOrderStringFor_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetOrderStringFor, &GetOrderStringFor_Parms, NULL );

	return GetOrderStringFor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetOrders
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTSquadAI::GetOrders ( )
{
	static UFunction* pFnGetOrders = NULL;

	if ( ! pFnGetOrders )
		pFnGetOrders = (UFunction*) UObject::GObjObjects()->Data[ 51157 ];

	AUTSquadAI_execGetOrders_Parms GetOrders_Parms;

	this->ProcessEvent ( pFnGetOrders, &GetOrders_Parms, NULL );

	return GetOrders_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.Retask
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::Retask ( class AUTBot* B )
{
	static UFunction* pFnRetask = NULL;

	if ( ! pFnRetask )
		pFnRetask = (UFunction*) UObject::GObjObjects()->Data[ 54953 ];

	AUTSquadAI_execRetask_Parms Retask_Parms;
	Retask_Parms.B = B;

	this->ProcessEvent ( pFnRetask, &Retask_Parms, NULL );
};

// Function UTGame.UTSquadAI.SetObjective
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        O                              ( CPF_Parm )
// unsigned long                  bForceUpdate                   ( CPF_Parm )

void AUTSquadAI::SetObjective ( class AUTGameObjective* O, unsigned long bForceUpdate )
{
	static UFunction* pFnSetObjective = NULL;

	if ( ! pFnSetObjective )
		pFnSetObjective = (UFunction*) UObject::GObjObjects()->Data[ 54948 ];

	AUTSquadAI_execSetObjective_Parms SetObjective_Parms;
	SetObjective_Parms.O = O;
	SetObjective_Parms.bForceUpdate = bForceUpdate;

	this->ProcessEvent ( pFnSetObjective, &SetObjective_Parms, NULL );
};

// Function UTGame.UTSquadAI.SetDefenseScriptFor
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::SetDefenseScriptFor ( class AUTBot* B )
{
	static UFunction* pFnSetDefenseScriptFor = NULL;

	if ( ! pFnSetDefenseScriptFor )
		pFnSetDefenseScriptFor = (UFunction*) UObject::GObjObjects()->Data[ 54930 ];

	AUTSquadAI_execSetDefenseScriptFor_Parms SetDefenseScriptFor_Parms;
	SetDefenseScriptFor_Parms.B = B;

	this->ProcessEvent ( pFnSetDefenseScriptFor, &SetDefenseScriptFor_Parms, NULL );
};

// Function UTGame.UTSquadAI.AddBot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::AddBot ( class AUTBot* B )
{
	static UFunction* pFnAddBot = NULL;

	if ( ! pFnAddBot )
		pFnAddBot = (UFunction*) UObject::GObjObjects()->Data[ 54927 ];

	AUTSquadAI_execAddBot_Parms AddBot_Parms;
	AddBot_Parms.B = B;

	this->ProcessEvent ( pFnAddBot, &AddBot_Parms, NULL );
};

// Function UTGame.UTSquadAI.RemoveBot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTSquadAI::RemoveBot ( class AUTBot* B )
{
	static UFunction* pFnRemoveBot = NULL;

	if ( ! pFnRemoveBot )
		pFnRemoveBot = (UFunction*) UObject::GObjObjects()->Data[ 54924 ];

	AUTSquadAI_execRemoveBot_Parms RemoveBot_Parms;
	RemoveBot_Parms.B = B;

	this->ProcessEvent ( pFnRemoveBot, &RemoveBot_Parms, NULL );
};

// Function UTGame.UTSquadAI.RemovePlayer
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )

void AUTSquadAI::RemovePlayer ( class APlayerController* P )
{
	static UFunction* pFnRemovePlayer = NULL;

	if ( ! pFnRemovePlayer )
		pFnRemovePlayer = (UFunction*) UObject::GObjObjects()->Data[ 54919 ];

	AUTSquadAI_execRemovePlayer_Parms RemovePlayer_Parms;
	RemovePlayer_Parms.P = P;

	this->ProcessEvent ( pFnRemovePlayer, &RemovePlayer_Parms, NULL );
};

// Function UTGame.UTSquadAI.SetLeader
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTSquadAI::eventSetLeader ( class AController* C )
{
	static UFunction* pFnSetLeader = NULL;

	if ( ! pFnSetLeader )
		pFnSetLeader = (UFunction*) UObject::GObjObjects()->Data[ 54917 ];

	AUTSquadAI_eventSetLeader_Parms SetLeader_Parms;
	SetLeader_Parms.C = C;

	this->ProcessEvent ( pFnSetLeader, &SetLeader_Parms, NULL );
};

// Function UTGame.UTSquadAI.FindPathToObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  O                              ( CPF_Parm )

bool AUTSquadAI::FindPathToObjective ( class AUTBot* B, class AActor* O )
{
	static UFunction* pFnFindPathToObjective = NULL;

	if ( ! pFnFindPathToObjective )
		pFnFindPathToObjective = (UFunction*) UObject::GObjObjects()->Data[ 52955 ];

	AUTSquadAI_execFindPathToObjective_Parms FindPathToObjective_Parms;
	FindPathToObjective_Parms.B = B;
	FindPathToObjective_Parms.O = O;

	this->ProcessEvent ( pFnFindPathToObjective, &FindPathToObjective_Parms, NULL );

	return FindPathToObjective_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.LeaveVehicleAtParkingSpot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  O                              ( CPF_Parm )

void AUTSquadAI::LeaveVehicleAtParkingSpot ( class AUTBot* B, class AActor* O )
{
	static UFunction* pFnLeaveVehicleAtParkingSpot = NULL;

	if ( ! pFnLeaveVehicleAtParkingSpot )
		pFnLeaveVehicleAtParkingSpot = (UFunction*) UObject::GObjObjects()->Data[ 54904 ];

	AUTSquadAI_execLeaveVehicleAtParkingSpot_Parms LeaveVehicleAtParkingSpot_Parms;
	LeaveVehicleAtParkingSpot_Parms.B = B;
	LeaveVehicleAtParkingSpot_Parms.O = O;

	this->ProcessEvent ( pFnLeaveVehicleAtParkingSpot, &LeaveVehicleAtParkingSpot_Parms, NULL );
};

// Function UTGame.UTSquadAI.MustCompleteOnFoot
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  O                              ( CPF_Parm )
// class APawn*                   P                              ( CPF_OptionalParm | CPF_Parm )

bool AUTSquadAI::MustCompleteOnFoot ( class AActor* O, class APawn* P )
{
	static UFunction* pFnMustCompleteOnFoot = NULL;

	if ( ! pFnMustCompleteOnFoot )
		pFnMustCompleteOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 54899 ];

	AUTSquadAI_execMustCompleteOnFoot_Parms MustCompleteOnFoot_Parms;
	MustCompleteOnFoot_Parms.O = O;
	MustCompleteOnFoot_Parms.P = P;

	this->ProcessEvent ( pFnMustCompleteOnFoot, &MustCompleteOnFoot_Parms, NULL );

	return MustCompleteOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.LeaveVehicleToReachObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  O                              ( CPF_Parm )

bool AUTSquadAI::LeaveVehicleToReachObjective ( class AUTBot* B, class AActor* O )
{
	static UFunction* pFnLeaveVehicleToReachObjective = NULL;

	if ( ! pFnLeaveVehicleToReachObjective )
		pFnLeaveVehicleToReachObjective = (UFunction*) UObject::GObjObjects()->Data[ 54894 ];

	AUTSquadAI_execLeaveVehicleToReachObjective_Parms LeaveVehicleToReachObjective_Parms;
	LeaveVehicleToReachObjective_Parms.B = B;
	LeaveVehicleToReachObjective_Parms.O = O;

	this->ProcessEvent ( pFnLeaveVehicleToReachObjective, &LeaveVehicleToReachObjective_Parms, NULL );

	return LeaveVehicleToReachObjective_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CloseEnoughToObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  O                              ( CPF_Parm )

bool AUTSquadAI::CloseEnoughToObjective ( class AUTBot* B, class AActor* O )
{
	static UFunction* pFnCloseEnoughToObjective = NULL;

	if ( ! pFnCloseEnoughToObjective )
		pFnCloseEnoughToObjective = (UFunction*) UObject::GObjObjects()->Data[ 54890 ];

	AUTSquadAI_execCloseEnoughToObjective_Parms CloseEnoughToObjective_Parms;
	CloseEnoughToObjective_Parms.B = B;
	CloseEnoughToObjective_Parms.O = O;

	this->ProcessEvent ( pFnCloseEnoughToObjective, &CloseEnoughToObjective_Parms, NULL );

	return CloseEnoughToObjective_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.TryToIntercept
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )
// class AActor*                  RouteGoal                      ( CPF_Parm )

bool AUTSquadAI::TryToIntercept ( class AUTBot* B, class APawn* P, class AActor* RouteGoal )
{
	static UFunction* pFnTryToIntercept = NULL;

	if ( ! pFnTryToIntercept )
		pFnTryToIntercept = (UFunction*) UObject::GObjObjects()->Data[ 54885 ];

	AUTSquadAI_execTryToIntercept_Parms TryToIntercept_Parms;
	TryToIntercept_Parms.B = B;
	TryToIntercept_Parms.P = P;
	TryToIntercept_Parms.RouteGoal = RouteGoal;

	this->ProcessEvent ( pFnTryToIntercept, &TryToIntercept_Parms, NULL );

	return TryToIntercept_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.SetAlternatePathTo
// [0x00020002] 
// Parameters infos:
// class ANavigationPoint*        NewRouteObjective              ( CPF_Parm )
// class AUTBot*                  RouteMaker                     ( CPF_Parm )

void AUTSquadAI::SetAlternatePathTo ( class ANavigationPoint* NewRouteObjective, class AUTBot* RouteMaker )
{
	static UFunction* pFnSetAlternatePathTo = NULL;

	if ( ! pFnSetAlternatePathTo )
		pFnSetAlternatePathTo = (UFunction*) UObject::GObjObjects()->Data[ 54881 ];

	AUTSquadAI_execSetAlternatePathTo_Parms SetAlternatePathTo_Parms;
	SetAlternatePathTo_Parms.NewRouteObjective = NewRouteObjective;
	SetAlternatePathTo_Parms.RouteMaker = RouteMaker;

	this->ProcessEvent ( pFnSetAlternatePathTo, &SetAlternatePathTo_Parms, NULL );
};

// Function UTGame.UTSquadAI.ShouldUseAlternatePaths
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTSquadAI::ShouldUseAlternatePaths ( )
{
	static UFunction* pFnShouldUseAlternatePaths = NULL;

	if ( ! pFnShouldUseAlternatePaths )
		pFnShouldUseAlternatePaths = (UFunction*) UObject::GObjObjects()->Data[ 54879 ];

	AUTSquadAI_execShouldUseAlternatePaths_Parms ShouldUseAlternatePaths_Parms;

	this->ProcessEvent ( pFnShouldUseAlternatePaths, &ShouldUseAlternatePaths_Parms, NULL );

	return ShouldUseAlternatePaths_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.Initialize
// [0x00020002] 
// Parameters infos:
// class AUTTeamInfo*             T                              ( CPF_Parm )
// class AUTGameObjective*        O                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

void AUTSquadAI::Initialize ( class AUTTeamInfo* T, class AUTGameObjective* O, class AController* C )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 54875 ];

	AUTSquadAI_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.T = T;
	Initialize_Parms.O = O;
	Initialize_Parms.C = C;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function UTGame.UTSquadAI.MergeWith
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              S                              ( CPF_Parm )

void AUTSquadAI::MergeWith ( class AUTSquadAI* S )
{
	static UFunction* pFnMergeWith = NULL;

	if ( ! pFnMergeWith )
		pFnMergeWith = (UFunction*) UObject::GObjObjects()->Data[ 54873 ];

	AUTSquadAI_execMergeWith_Parms MergeWith_Parms;
	MergeWith_Parms.S = S;

	this->ProcessEvent ( pFnMergeWith, &MergeWith_Parms, NULL );
};

// Function UTGame.UTSquadAI.CloseToLeader
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTSquadAI::CloseToLeader ( class APawn* P )
{
	static UFunction* pFnCloseToLeader = NULL;

	if ( ! pFnCloseToLeader )
		pFnCloseToLeader = (UFunction*) UObject::GObjObjects()->Data[ 54869 ];

	AUTSquadAI_execCloseToLeader_Parms CloseToLeader_Parms;
	CloseToLeader_Parms.P = P;

	this->ProcessEvent ( pFnCloseToLeader, &CloseToLeader_Parms, NULL );

	return CloseToLeader_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.NearFormationCenter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTSquadAI::NearFormationCenter ( class APawn* P )
{
	static UFunction* pFnNearFormationCenter = NULL;

	if ( ! pFnNearFormationCenter )
		pFnNearFormationCenter = (UFunction*) UObject::GObjObjects()->Data[ 54865 ];

	AUTSquadAI_execNearFormationCenter_Parms NearFormationCenter_Parms;
	NearFormationCenter_Parms.P = P;

	this->ProcessEvent ( pFnNearFormationCenter, &NearFormationCenter_Parms, NULL );

	return NearFormationCenter_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.WanderNearLeader
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::WanderNearLeader ( class AUTBot* B )
{
	static UFunction* pFnWanderNearLeader = NULL;

	if ( ! pFnWanderNearLeader )
		pFnWanderNearLeader = (UFunction*) UObject::GObjObjects()->Data[ 54862 ];

	AUTSquadAI_execWanderNearLeader_Parms WanderNearLeader_Parms;
	WanderNearLeader_Parms.B = B;

	this->ProcessEvent ( pFnWanderNearLeader, &WanderNearLeader_Parms, NULL );

	return WanderNearLeader_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.WaitAtThisPosition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTSquadAI::WaitAtThisPosition ( class APawn* P )
{
	static UFunction* pFnWaitAtThisPosition = NULL;

	if ( ! pFnWaitAtThisPosition )
		pFnWaitAtThisPosition = (UFunction*) UObject::GObjObjects()->Data[ 54859 ];

	AUTSquadAI_execWaitAtThisPosition_Parms WaitAtThisPosition_Parms;
	WaitAtThisPosition_Parms.P = P;

	this->ProcessEvent ( pFnWaitAtThisPosition, &WaitAtThisPosition_Parms, NULL );

	return WaitAtThisPosition_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ShouldDeferTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTSquadAI::ShouldDeferTo ( class AController* C )
{
	static UFunction* pFnShouldDeferTo = NULL;

	if ( ! pFnShouldDeferTo )
		pFnShouldDeferTo = (UFunction*) UObject::GObjObjects()->Data[ 54856 ];

	AUTSquadAI_execShouldDeferTo_Parms ShouldDeferTo_Parms;
	ShouldDeferTo_Parms.C = C;

	this->ProcessEvent ( pFnShouldDeferTo, &ShouldDeferTo_Parms, NULL );

	return ShouldDeferTo_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AssessThreat
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   NewThreat                      ( CPF_Parm )
// unsigned long                  bThreatVisible                 ( CPF_Parm )

float AUTSquadAI::AssessThreat ( class AUTBot* B, class APawn* NewThreat, unsigned long bThreatVisible )
{
	static UFunction* pFnAssessThreat = NULL;

	if ( ! pFnAssessThreat )
		pFnAssessThreat = (UFunction*) UObject::GObjObjects()->Data[ 54848 ];

	AUTSquadAI_execAssessThreat_Parms AssessThreat_Parms;
	AssessThreat_Parms.B = B;
	AssessThreat_Parms.NewThreat = NewThreat;
	AssessThreat_Parms.bThreatVisible = bThreatVisible;

	this->ProcessEvent ( pFnAssessThreat, &AssessThreat_Parms, NULL );

	return AssessThreat_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.UnderFire
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   NewThreat                      ( CPF_Parm )
// class AUTBot*                  Ignored                        ( CPF_Parm )

bool AUTSquadAI::UnderFire ( class APawn* NewThreat, class AUTBot* Ignored )
{
	static UFunction* pFnUnderFire = NULL;

	if ( ! pFnUnderFire )
		pFnUnderFire = (UFunction*) UObject::GObjObjects()->Data[ 54843 ];

	AUTSquadAI_execUnderFire_Parms UnderFire_Parms;
	UnderFire_Parms.NewThreat = NewThreat;
	UnderFire_Parms.Ignored = Ignored;

	this->ProcessEvent ( pFnUnderFire, &UnderFire_Parms, NULL );

	return UnderFire_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ModifyThreat
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Current                        ( CPF_Parm )
// class APawn*                   NewThreat                      ( CPF_Parm )
// unsigned long                  bThreatVisible                 ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTSquadAI::ModifyThreat ( float Current, class APawn* NewThreat, unsigned long bThreatVisible, class AUTBot* B )
{
	static UFunction* pFnModifyThreat = NULL;

	if ( ! pFnModifyThreat )
		pFnModifyThreat = (UFunction*) UObject::GObjObjects()->Data[ 54837 ];

	AUTSquadAI_execModifyThreat_Parms ModifyThreat_Parms;
	ModifyThreat_Parms.Current = Current;
	ModifyThreat_Parms.NewThreat = NewThreat;
	ModifyThreat_Parms.bThreatVisible = bThreatVisible;
	ModifyThreat_Parms.B = B;

	this->ProcessEvent ( pFnModifyThreat, &ModifyThreat_Parms, NULL );

	return ModifyThreat_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.FindNewEnemyFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// unsigned long                  bSeeEnemy                      ( CPF_Parm )

bool AUTSquadAI::FindNewEnemyFor ( class AUTBot* B, unsigned long bSeeEnemy )
{
	static UFunction* pFnFindNewEnemyFor = NULL;

	if ( ! pFnFindNewEnemyFor )
		pFnFindNewEnemyFor = (UFunction*) UObject::GObjObjects()->Data[ 51275 ];

	AUTSquadAI_execFindNewEnemyFor_Parms FindNewEnemyFor_Parms;
	FindNewEnemyFor_Parms.B = B;
	FindNewEnemyFor_Parms.bSeeEnemy = bSeeEnemy;

	this->ProcessEvent ( pFnFindNewEnemyFor, &FindNewEnemyFor_Parms, NULL );

	return FindNewEnemyFor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Killed                         ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTSquadAI::NotifyKilled ( class AController* Killer, class AController* Killed, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 54822 ];

	AUTSquadAI_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function UTGame.UTSquadAI.RemoveEnemy
// [0x00020002] 
// Parameters infos:
// class APawn*                   E                              ( CPF_Parm )

void AUTSquadAI::RemoveEnemy ( class APawn* E )
{
	static UFunction* pFnRemoveEnemy = NULL;

	if ( ! pFnRemoveEnemy )
		pFnRemoveEnemy = (UFunction*) UObject::GObjObjects()->Data[ 54818 ];

	AUTSquadAI_execRemoveEnemy_Parms RemoveEnemy_Parms;
	RemoveEnemy_Parms.E = E;

	this->ProcessEvent ( pFnRemoveEnemy, &RemoveEnemy_Parms, NULL );
};

// Function UTGame.UTSquadAI.IsOnSquad
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTSquadAI::IsOnSquad ( class AController* C )
{
	static UFunction* pFnIsOnSquad = NULL;

	if ( ! pFnIsOnSquad )
		pFnIsOnSquad = (UFunction*) UObject::GObjObjects()->Data[ 54815 ];

	AUTSquadAI_execIsOnSquad_Parms IsOnSquad_Parms;
	IsOnSquad_Parms.C = C;

	this->ProcessEvent ( pFnIsOnSquad, &IsOnSquad_Parms, NULL );

	return IsOnSquad_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.PriorityObjective
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

unsigned char AUTSquadAI::PriorityObjective ( class AUTBot* B )
{
	static UFunction* pFnPriorityObjective = NULL;

	if ( ! pFnPriorityObjective )
		pFnPriorityObjective = (UFunction*) UObject::GObjObjects()->Data[ 51309 ];

	AUTSquadAI_execPriorityObjective_Parms PriorityObjective_Parms;
	PriorityObjective_Parms.B = B;

	this->ProcessEvent ( pFnPriorityObjective, &PriorityObjective_Parms, NULL );

	return PriorityObjective_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.SetEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   NewEnemy                       ( CPF_Parm )

bool AUTSquadAI::SetEnemy ( class AUTBot* B, class APawn* NewEnemy )
{
	static UFunction* pFnSetEnemy = NULL;

	if ( ! pFnSetEnemy )
		pFnSetEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51180 ];

	AUTSquadAI_execSetEnemy_Parms SetEnemy_Parms;
	SetEnemy_Parms.B = B;
	SetEnemy_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnSetEnemy, &SetEnemy_Parms, NULL );

	return SetEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ValidEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   NewEnemy                       ( CPF_Parm )

bool AUTSquadAI::ValidEnemy ( class APawn* NewEnemy )
{
	static UFunction* pFnValidEnemy = NULL;

	if ( ! pFnValidEnemy )
		pFnValidEnemy = (UFunction*) UObject::GObjObjects()->Data[ 54807 ];

	AUTSquadAI_execValidEnemy_Parms ValidEnemy_Parms;
	ValidEnemy_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnValidEnemy, &ValidEnemy_Parms, NULL );

	return ValidEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AddEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   NewEnemy                       ( CPF_Parm )

bool AUTSquadAI::AddEnemy ( class APawn* NewEnemy )
{
	static UFunction* pFnAddEnemy = NULL;

	if ( ! pFnAddEnemy )
		pFnAddEnemy = (UFunction*) UObject::GObjObjects()->Data[ 54801 ];

	AUTSquadAI_execAddEnemy_Parms AddEnemy_Parms;
	AddEnemy_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnAddEnemy, &AddEnemy_Parms, NULL );

	return AddEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.MustKeepEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   E                              ( CPF_Parm )

bool AUTSquadAI::MustKeepEnemy ( class APawn* E )
{
	static UFunction* pFnMustKeepEnemy = NULL;

	if ( ! pFnMustKeepEnemy )
		pFnMustKeepEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51277 ];

	AUTSquadAI_execMustKeepEnemy_Parms MustKeepEnemy_Parms;
	MustKeepEnemy_Parms.E = E;

	this->ProcessEvent ( pFnMustKeepEnemy, &MustKeepEnemy_Parms, NULL );

	return MustKeepEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.LostEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::LostEnemy ( class AUTBot* B )
{
	static UFunction* pFnLostEnemy = NULL;

	if ( ! pFnLostEnemy )
		pFnLostEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51661 ];

	AUTSquadAI_execLostEnemy_Parms LostEnemy_Parms;
	LostEnemy_Parms.B = B;

	this->ProcessEvent ( pFnLostEnemy, &LostEnemy_Parms, NULL );

	return LostEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.FormationCenter
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class AActor* AUTSquadAI::FormationCenter ( class AController* C )
{
	static UFunction* pFnFormationCenter = NULL;

	if ( ! pFnFormationCenter )
		pFnFormationCenter = (UFunction*) UObject::GObjObjects()->Data[ 51582 ];

	AUTSquadAI_execFormationCenter_Parms FormationCenter_Parms;
	FormationCenter_Parms.C = C;

	this->ProcessEvent ( pFnFormationCenter, &FormationCenter_Parms, NULL );

	return FormationCenter_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetFacingRotation
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTSquadAI::GetFacingRotation ( )
{
	static UFunction* pFnGetFacingRotation = NULL;

	if ( ! pFnGetFacingRotation )
		pFnGetFacingRotation = (UFunction*) UObject::GObjObjects()->Data[ 54792 ];

	AUTSquadAI_execGetFacingRotation_Parms GetFacingRotation_Parms;

	this->ProcessEvent ( pFnGetFacingRotation, &GetFacingRotation_Parms, NULL );

	return GetFacingRotation_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.GetLinkVehicle
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

class AUTVehicle* AUTSquadAI::GetLinkVehicle ( class AUTBot* B )
{
	static UFunction* pFnGetLinkVehicle = NULL;

	if ( ! pFnGetLinkVehicle )
		pFnGetLinkVehicle = (UFunction*) UObject::GObjObjects()->Data[ 54788 ];

	AUTSquadAI_execGetLinkVehicle_Parms GetLinkVehicle_Parms;
	GetLinkVehicle_Parms.B = B;

	this->ProcessEvent ( pFnGetLinkVehicle, &GetLinkVehicle_Parms, NULL );

	return GetLinkVehicle_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.SetFacingActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

class AActor* AUTSquadAI::SetFacingActor ( class AUTBot* B )
{
	static UFunction* pFnSetFacingActor = NULL;

	if ( ! pFnSetFacingActor )
		pFnSetFacingActor = (UFunction*) UObject::GObjObjects()->Data[ 51528 ];

	AUTSquadAI_execSetFacingActor_Parms SetFacingActor_Parms;
	SetFacingActor_Parms.B = B;

	this->ProcessEvent ( pFnSetFacingActor, &SetFacingActor_Parms, NULL );

	return SetFacingActor_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.AllowImpactJumpBy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::AllowImpactJumpBy ( class AUTBot* B )
{
	static UFunction* pFnAllowImpactJumpBy = NULL;

	if ( ! pFnAllowImpactJumpBy )
		pFnAllowImpactJumpBy = (UFunction*) UObject::GObjObjects()->Data[ 51088 ];

	AUTSquadAI_execAllowImpactJumpBy_Parms AllowImpactJumpBy_Parms;
	AllowImpactJumpBy_Parms.B = B;

	this->ProcessEvent ( pFnAllowImpactJumpBy, &AllowImpactJumpBy_Parms, NULL );

	return AllowImpactJumpBy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.Destroyed
// [0x00020002] 
// Parameters infos:

void AUTSquadAI::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 54785 ];

	AUTSquadAI_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTSquadAI.AllowDetourTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class ANavigationPoint*        N                              ( CPF_Parm )

bool AUTSquadAI::AllowDetourTo ( class AUTBot* B, class ANavigationPoint* N )
{
	static UFunction* pFnAllowDetourTo = NULL;

	if ( ! pFnAllowDetourTo )
		pFnAllowDetourTo = (UFunction*) UObject::GObjObjects()->Data[ 51377 ];

	AUTSquadAI_execAllowDetourTo_Parms AllowDetourTo_Parms;
	AllowDetourTo_Parms.B = B;
	AllowDetourTo_Parms.N = N;

	this->ProcessEvent ( pFnAllowDetourTo, &AllowDetourTo_Parms, NULL );

	return AllowDetourTo_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.ShouldSuppressEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTSquadAI::ShouldSuppressEnemy ( class AUTBot* B )
{
	static UFunction* pFnShouldSuppressEnemy = NULL;

	if ( ! pFnShouldSuppressEnemy )
		pFnShouldSuppressEnemy = (UFunction*) UObject::GObjObjects()->Data[ 51869 ];

	AUTSquadAI_execShouldSuppressEnemy_Parms ShouldSuppressEnemy_Parms;
	ShouldSuppressEnemy_Parms.B = B;

	this->ProcessEvent ( pFnShouldSuppressEnemy, &ShouldSuppressEnemy_Parms, NULL );

	return ShouldSuppressEnemy_Parms.ReturnValue;
};

// Function UTGame.UTSquadAI.CriticalObjectiveWarning
// [0x00020002] 
// Parameters infos:
// class APawn*                   NewEnemy                       ( CPF_Parm )

void AUTSquadAI::CriticalObjectiveWarning ( class APawn* NewEnemy )
{
	static UFunction* pFnCriticalObjectiveWarning = NULL;

	if ( ! pFnCriticalObjectiveWarning )
		pFnCriticalObjectiveWarning = (UFunction*) UObject::GObjObjects()->Data[ 54779 ];

	AUTSquadAI_execCriticalObjectiveWarning_Parms CriticalObjectiveWarning_Parms;
	CriticalObjectiveWarning_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnCriticalObjectiveWarning, &CriticalObjectiveWarning_Parms, NULL );
};

// Function UTGame.UTSquadAI.Reset
// [0x00020002] 
// Parameters infos:

void AUTSquadAI::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 54777 ];

	AUTSquadAI_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTActorFactoryPickup.PostCreateActor
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )
// class USeqAct_ActorFactory*    ActorFactoryData               ( CPF_OptionalParm | CPF_Parm )

void UUTActorFactoryPickup::eventPostCreateActor ( class AActor* NewActor, class USeqAct_ActorFactory* ActorFactoryData )
{
	static UFunction* pFnPostCreateActor = NULL;

	if ( ! pFnPostCreateActor )
		pFnPostCreateActor = (UFunction*) UObject::GObjObjects()->Data[ 47380 ];

	UUTActorFactoryPickup_eventPostCreateActor_Parms PostCreateActor_Parms;
	PostCreateActor_Parms.NewActor = NewActor;
	PostCreateActor_Parms.ActorFactoryData = ActorFactoryData;

	this->ProcessEvent ( pFnPostCreateActor, &PostCreateActor_Parms, NULL );
};

// Function UTGame.UTDroppedPickup.Landed
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void AUTDroppedPickup::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 55935 ];

	AUTDroppedPickup_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function UTGame.UTDroppedPickup.SetPickupParticles
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UParticleSystemComponent* NewPickupParticles             ( CPF_Parm | CPF_EditInline )

void AUTDroppedPickup::eventSetPickupParticles ( class UParticleSystemComponent* NewPickupParticles )
{
	static UFunction* pFnSetPickupParticles = NULL;

	if ( ! pFnSetPickupParticles )
		pFnSetPickupParticles = (UFunction*) UObject::GObjObjects()->Data[ 55933 ];

	AUTDroppedPickup_eventSetPickupParticles_Parms SetPickupParticles_Parms;
	SetPickupParticles_Parms.NewPickupParticles = NewPickupParticles;

	this->ProcessEvent ( pFnSetPickupParticles, &SetPickupParticles_Parms, NULL );
};

// Function UTGame.UTDroppedPickup.SetPickupMesh
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     NewPickupMesh                  ( CPF_Parm | CPF_EditInline )

void AUTDroppedPickup::eventSetPickupMesh ( class UPrimitiveComponent* NewPickupMesh )
{
	static UFunction* pFnSetPickupMesh = NULL;

	if ( ! pFnSetPickupMesh )
		pFnSetPickupMesh = (UFunction*) UObject::GObjObjects()->Data[ 55931 ];

	AUTDroppedPickup_eventSetPickupMesh_Parms SetPickupMesh_Parms;
	SetPickupMesh_Parms.NewPickupMesh = NewPickupMesh;

	this->ProcessEvent ( pFnSetPickupMesh, &SetPickupMesh_Parms, NULL );
};

// Function UTGame.UTDroppedPickup.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTDroppedPickup::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55930 ];

	AUTDroppedPickup_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTTeamStaticMesh.SetTeamNum
// [0x00020102] 
// Parameters infos:
// unsigned char                  NewTeam                        ( CPF_Parm )

void AUTTeamStaticMesh::SetTeamNum ( unsigned char NewTeam )
{
	static UFunction* pFnSetTeamNum = NULL;

	if ( ! pFnSetTeamNum )
		pFnSetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 58581 ];

	AUTTeamStaticMesh_execSetTeamNum_Parms SetTeamNum_Parms;
	SetTeamNum_Parms.NewTeam = NewTeam;

	this->ProcessEvent ( pFnSetTeamNum, &SetTeamNum_Parms, NULL );
};

// Function UTGame.UTTeamStaticMesh.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTTeamStaticMesh::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58576 ];

	AUTTeamStaticMesh_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTActorFactoryVehicle.PostCreateActor
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )
// class USeqAct_ActorFactory*    ActorFactoryData               ( CPF_OptionalParm | CPF_Parm )

void UUTActorFactoryVehicle::eventPostCreateActor ( class AActor* NewActor, class USeqAct_ActorFactory* ActorFactoryData )
{
	static UFunction* pFnPostCreateActor = NULL;

	if ( ! pFnPostCreateActor )
		pFnPostCreateActor = (UFunction*) UObject::GObjObjects()->Data[ 47397 ];

	UUTActorFactoryVehicle_eventPostCreateActor_Parms PostCreateActor_Parms;
	PostCreateActor_Parms.NewActor = NewActor;
	PostCreateActor_Parms.ActorFactoryData = ActorFactoryData;

	this->ProcessEvent ( pFnPostCreateActor, &PostCreateActor_Parms, NULL );
};

// Function UTGame.UTVehicleDeathPiece.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicleDeathPiece::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59559 ];

	AUTVehicleDeathPiece_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTGib_Vehicle.ActivateGibExplosionEffect
// [0x00020102] 
// Parameters infos:

void AUTGib_Vehicle::ActivateGibExplosionEffect ( )
{
	static UFunction* pFnActivateGibExplosionEffect = NULL;

	if ( ! pFnActivateGibExplosionEffect )
		pFnActivateGibExplosionEffect = (UFunction*) UObject::GObjObjects()->Data[ 56858 ];

	AUTGib_Vehicle_execActivateGibExplosionEffect_Parms ActivateGibExplosionEffect_Parms;

	this->ProcessEvent ( pFnActivateGibExplosionEffect, &ActivateGibExplosionEffect_Parms, NULL );
};

// Function UTGame.UTGib_Vehicle.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTGib_Vehicle::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56857 ];

	AUTGib_Vehicle_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTGib.HitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void AUTGib::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 56804 ];

	AUTGib_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function UTGame.UTGib.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void AUTGib::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 56801 ];

	AUTGib_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function UTGame.UTGib.TurnOnCollision
// [0x00020102] 
// Parameters infos:

void AUTGib::TurnOnCollision ( )
{
	static UFunction* pFnTurnOnCollision = NULL;

	if ( ! pFnTurnOnCollision )
		pFnTurnOnCollision = (UFunction*) UObject::GObjObjects()->Data[ 56800 ];

	AUTGib_execTurnOnCollision_Parms TurnOnCollision_Parms;

	this->ProcessEvent ( pFnTurnOnCollision, &TurnOnCollision_Parms, NULL );
};

// Function UTGame.UTGib.LeaveADecal
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )

void AUTGib::LeaveADecal ( struct FVector HitLoc, struct FVector HitNorm )
{
	static UFunction* pFnLeaveADecal = NULL;

	if ( ! pFnLeaveADecal )
		pFnLeaveADecal = (UFunction*) UObject::GObjObjects()->Data[ 56790 ];

	AUTGib_execLeaveADecal_Parms LeaveADecal_Parms;
	memcpy ( &LeaveADecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveADecal_Parms.HitNorm, &HitNorm, 0xC );

	this->ProcessEvent ( pFnLeaveADecal, &LeaveADecal_Parms, NULL );
};

// Function UTGame.UTGib.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTGib::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 56785 ];

	AUTGib_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTGib.CalcCamera
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTGib::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 56775 ];

	AUTGib_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTGib.BecomeViewTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTGib::eventBecomeViewTarget ( class APlayerController* PC )
{
	static UFunction* pFnBecomeViewTarget = NULL;

	if ( ! pFnBecomeViewTarget )
		pFnBecomeViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 56773 ];

	AUTGib_eventBecomeViewTarget_Parms BecomeViewTarget_Parms;
	BecomeViewTarget_Parms.PC = PC;

	this->ProcessEvent ( pFnBecomeViewTarget, &BecomeViewTarget_Parms, NULL );
};

// Function UTGame.UTGib.Timer
// [0x00020002] 
// Parameters infos:

void AUTGib::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 56771 ];

	AUTGib_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTGib.DoCustomGibEffects
// [0x00020100] 
// Parameters infos:

void AUTGib::DoCustomGibEffects ( )
{
	static UFunction* pFnDoCustomGibEffects = NULL;

	if ( ! pFnDoCustomGibEffects )
		pFnDoCustomGibEffects = (UFunction*) UObject::GObjObjects()->Data[ 56770 ];

	AUTGib_execDoCustomGibEffects_Parms DoCustomGibEffects_Parms;

	this->ProcessEvent ( pFnDoCustomGibEffects, &DoCustomGibEffects_Parms, NULL );
};

// Function UTGame.UTGib.ChooseGib
// [0x00820102] 
// Parameters infos:

void AUTGib::ChooseGib ( )
{
	static UFunction* pFnChooseGib = NULL;

	if ( ! pFnChooseGib )
		pFnChooseGib = (UFunction*) UObject::GObjObjects()->Data[ 56761 ];

	AUTGib_execChooseGib_Parms ChooseGib_Parms;

	this->ProcessEvent ( pFnChooseGib, &ChooseGib_Parms, NULL );
};

// Function UTGame.UTGib.SetGibStaticMesh
// [0x00020102] 
// Parameters infos:
// class UStaticMesh*             NewStaticMesh                  ( CPF_Parm )

void AUTGib::SetGibStaticMesh ( class UStaticMesh* NewStaticMesh )
{
	static UFunction* pFnSetGibStaticMesh = NULL;

	if ( ! pFnSetGibStaticMesh )
		pFnSetGibStaticMesh = (UFunction*) UObject::GObjObjects()->Data[ 56757 ];

	AUTGib_execSetGibStaticMesh_Parms SetGibStaticMesh_Parms;
	SetGibStaticMesh_Parms.NewStaticMesh = NewStaticMesh;

	this->ProcessEvent ( pFnSetGibStaticMesh, &SetGibStaticMesh_Parms, NULL );
};

// Function UTGame.UTGib.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void AUTGib::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 56753 ];

	AUTGib_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function UTGame.UTGib.SetTexturesToBeResident
// [0x00020102] 
// Parameters infos:
// float                          TimeToBeResident               ( CPF_Parm )

void AUTGib::SetTexturesToBeResident ( float TimeToBeResident )
{
	static UFunction* pFnSetTexturesToBeResident = NULL;

	if ( ! pFnSetTexturesToBeResident )
		pFnSetTexturesToBeResident = (UFunction*) UObject::GObjObjects()->Data[ 56750 ];

	AUTGib_execSetTexturesToBeResident_Parms SetTexturesToBeResident_Parms;
	SetTexturesToBeResident_Parms.TimeToBeResident = TimeToBeResident;

	this->ProcessEvent ( pFnSetTexturesToBeResident, &SetTexturesToBeResident_Parms, NULL );
};

// Function UTGame.UTGib.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTGib::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56749 ];

	AUTGib_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.GetSpawnRotation
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator AUTVehicleFactory::GetSpawnRotation ( )
{
	static UFunction* pFnGetSpawnRotation = NULL;

	if ( ! pFnGetSpawnRotation )
		pFnGetSpawnRotation = (UFunction*) UObject::GObjObjects()->Data[ 59596 ];

	AUTVehicleFactory_execGetSpawnRotation_Parms GetSpawnRotation_Parms;

	this->ProcessEvent ( pFnGetSpawnRotation, &GetSpawnRotation_Parms, NULL );

	return GetSpawnRotation_Parms.ReturnValue;
};

// Function UTGame.UTVehicleFactory.OnToggle
// [0x00020002] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void AUTVehicleFactory::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 59593 ];

	AUTVehicleFactory_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.TriggerSpawnedEvent
// [0x00020002] 
// Parameters infos:

void AUTVehicleFactory::TriggerSpawnedEvent ( )
{
	static UFunction* pFnTriggerSpawnedEvent = NULL;

	if ( ! pFnTriggerSpawnedEvent )
		pFnTriggerSpawnedEvent = (UFunction*) UObject::GObjObjects()->Data[ 59592 ];

	AUTVehicleFactory_execTriggerSpawnedEvent_Parms TriggerSpawnedEvent_Parms;

	this->ProcessEvent ( pFnTriggerSpawnedEvent, &TriggerSpawnedEvent_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void AUTVehicleFactory::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 59590 ];

	AUTVehicleFactory_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.VehicleTaken
// [0x00020002] 
// Parameters infos:

void AUTVehicleFactory::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 59589 ];

	AUTVehicleFactory_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.Deactivate
// [0x00820002] 
// Parameters infos:

void AUTVehicleFactory::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 59586 ];

	AUTVehicleFactory_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.Activate
// [0x00020002] 
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void AUTVehicleFactory::Activate ( unsigned char T )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 59584 ];

	AUTVehicleFactory_execActivate_Parms Activate_Parms;
	Activate_Parms.T = T;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.RenderMapIcon
// [0x00820102] 
// Parameters infos:
// class UUTMapInfo*              MP                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTPlayerController*     PlayerOwner                    ( CPF_Parm )
// struct FLinearColor            FinalColor                     ( CPF_Parm )

void AUTVehicleFactory::RenderMapIcon ( class UUTMapInfo* MP, class UCanvas* Canvas, class AUTPlayerController* PlayerOwner, struct FLinearColor FinalColor )
{
	static UFunction* pFnRenderMapIcon = NULL;

	if ( ! pFnRenderMapIcon )
		pFnRenderMapIcon = (UFunction*) UObject::GObjObjects()->Data[ 59578 ];

	AUTVehicleFactory_execRenderMapIcon_Parms RenderMapIcon_Parms;
	RenderMapIcon_Parms.MP = MP;
	RenderMapIcon_Parms.Canvas = Canvas;
	RenderMapIcon_Parms.PlayerOwner = PlayerOwner;
	memcpy ( &RenderMapIcon_Parms.FinalColor, &FinalColor, 0x10 );

	this->ProcessEvent ( pFnRenderMapIcon, &RenderMapIcon_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicleFactory::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 59577 ];

	AUTVehicleFactory_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.AddToClosestObjective
// [0x00020102] 
// Parameters infos:

void AUTVehicleFactory::AddToClosestObjective ( )
{
	static UFunction* pFnAddToClosestObjective = NULL;

	if ( ! pFnAddToClosestObjective )
		pFnAddToClosestObjective = (UFunction*) UObject::GObjObjects()->Data[ 59572 ];

	AUTVehicleFactory_execAddToClosestObjective_Parms AddToClosestObjective_Parms;

	this->ProcessEvent ( pFnAddToClosestObjective, &AddToClosestObjective_Parms, NULL );
};

// Function UTGame.UTVehicleFactory.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTVehicleFactory::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59571 ];

	AUTVehicleFactory_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.ResetPlayerMovementInput
// [0x00020002] 
// Parameters infos:

void AUTConsolePlayerController::ResetPlayerMovementInput ( )
{
	static UFunction* pFnResetPlayerMovementInput = NULL;

	if ( ! pFnResetPlayerMovementInput )
		pFnResetPlayerMovementInput = (UFunction*) UObject::GObjObjects()->Data[ 52646 ];

	AUTConsolePlayerController_execResetPlayerMovementInput_Parms ResetPlayerMovementInput_Parms;

	this->ProcessEvent ( pFnResetPlayerMovementInput, &ResetPlayerMovementInput_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTConsolePlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52645 ];

	AUTConsolePlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AUTConsolePlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52644 ];

	AUTConsolePlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.ClientRestart
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )

void AUTConsolePlayerController::ClientRestart ( class APawn* NewPawn )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 52642 ];

	AUTConsolePlayerController_execClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.ClientSmartUse
// [0x01020142] 
// Parameters infos:

void AUTConsolePlayerController::ClientSmartUse ( )
{
	static UFunction* pFnClientSmartUse = NULL;

	if ( ! pFnClientSmartUse )
		pFnClientSmartUse = (UFunction*) UObject::GObjObjects()->Data[ 52641 ];

	AUTConsolePlayerController_execClientSmartUse_Parms ClientSmartUse_Parms;

	this->ProcessEvent ( pFnClientSmartUse, &ClientSmartUse_Parms, NULL );
};

// Function UTGame.UTConsolePlayerController.PerformedUseAction
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTConsolePlayerController::PerformedUseAction ( )
{
	static UFunction* pFnPerformedUseAction = NULL;

	if ( ! pFnPerformedUseAction )
		pFnPerformedUseAction = (UFunction*) UObject::GObjObjects()->Data[ 52639 ];

	AUTConsolePlayerController_execPerformedUseAction_Parms PerformedUseAction_Parms;

	this->ProcessEvent ( pFnPerformedUseAction, &PerformedUseAction_Parms, NULL );

	return PerformedUseAction_Parms.ReturnValue;
};

// Function UTGame.UTConsolePlayerController.AimHelpModifier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTConsolePlayerController::AimHelpModifier ( )
{
	static UFunction* pFnAimHelpModifier = NULL;

	if ( ! pFnAimHelpModifier )
		pFnAimHelpModifier = (UFunction*) UObject::GObjObjects()->Data[ 52637 ];

	AUTConsolePlayerController_execAimHelpModifier_Parms AimHelpModifier_Parms;

	this->ProcessEvent ( pFnAimHelpModifier, &AimHelpModifier_Parms, NULL );

	return AimHelpModifier_Parms.ReturnValue;
};

// Function UTGame.UTConsolePlayerController.AimingHelp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInstantHit                    ( CPF_Parm )

bool AUTConsolePlayerController::AimingHelp ( unsigned long bInstantHit )
{
	static UFunction* pFnAimingHelp = NULL;

	if ( ! pFnAimingHelp )
		pFnAimingHelp = (UFunction*) UObject::GObjObjects()->Data[ 52634 ];

	AUTConsolePlayerController_execAimingHelp_Parms AimingHelp_Parms;
	AimingHelp_Parms.bInstantHit = bInstantHit;

	this->ProcessEvent ( pFnAimingHelp, &AimingHelp_Parms, NULL );

	return AimingHelp_Parms.ReturnValue;
};

// Function UTGame.UTConsolePlayerController.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTConsolePlayerController::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 52628 ];

	AUTConsolePlayerController_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.EndZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void AUTVehicleWeapon::EndZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 59817 ];

	AUTVehicleWeapon_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.StartZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void AUTVehicleWeapon::StartZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 59815 ];

	AUTVehicleWeapon_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.ServerSetZoom
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bNowZoomed                     ( CPF_Parm )

void AUTVehicleWeapon::ServerSetZoom ( unsigned long bNowZoomed )
{
	static UFunction* pFnServerSetZoom = NULL;

	if ( ! pFnServerSetZoom )
		pFnServerSetZoom = (UFunction*) UObject::GObjObjects()->Data[ 59813 ];

	AUTVehicleWeapon_execServerSetZoom_Parms ServerSetZoom_Parms;
	ServerSetZoom_Parms.bNowZoomed = bNowZoomed;

	this->ProcessEvent ( pFnServerSetZoom, &ServerSetZoom_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.GetZoomedState
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTVehicleWeapon::GetZoomedState ( )
{
	static UFunction* pFnGetZoomedState = NULL;

	if ( ! pFnGetZoomedState )
		pFnGetZoomedState = (UFunction*) UObject::GObjObjects()->Data[ 59811 ];

	AUTVehicleWeapon_execGetZoomedState_Parms GetZoomedState_Parms;

	this->ProcessEvent ( pFnGetZoomedState, &GetZoomedState_Parms, NULL );

	return GetZoomedState_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.WeaponPlaySound
// [0x00824102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )

void AUTVehicleWeapon::WeaponPlaySound ( class USoundCue* Sound, float NoiseLoudness )
{
	static UFunction* pFnWeaponPlaySound = NULL;

	if ( ! pFnWeaponPlaySound )
		pFnWeaponPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 59804 ];

	AUTVehicleWeapon_execWeaponPlaySound_Parms WeaponPlaySound_Parms;
	WeaponPlaySound_Parms.Sound = Sound;
	WeaponPlaySound_Parms.NoiseLoudness = NoiseLoudness;

	this->ProcessEvent ( pFnWeaponPlaySound, &WeaponPlaySound_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.NotifyVehicleUndeployed
// [0x00020100] 
// Parameters infos:

void AUTVehicleWeapon::NotifyVehicleUndeployed ( )
{
	static UFunction* pFnNotifyVehicleUndeployed = NULL;

	if ( ! pFnNotifyVehicleUndeployed )
		pFnNotifyVehicleUndeployed = (UFunction*) UObject::GObjObjects()->Data[ 59803 ];

	AUTVehicleWeapon_execNotifyVehicleUndeployed_Parms NotifyVehicleUndeployed_Parms;

	this->ProcessEvent ( pFnNotifyVehicleUndeployed, &NotifyVehicleUndeployed_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.NotifyVehicleDeployed
// [0x00020100] 
// Parameters infos:

void AUTVehicleWeapon::NotifyVehicleDeployed ( )
{
	static UFunction* pFnNotifyVehicleDeployed = NULL;

	if ( ! pFnNotifyVehicleDeployed )
		pFnNotifyVehicleDeployed = (UFunction*) UObject::GObjObjects()->Data[ 59802 ];

	AUTVehicleWeapon_execNotifyVehicleDeployed_Parms NotifyVehicleDeployed_Parms;

	this->ProcessEvent ( pFnNotifyVehicleDeployed, &NotifyVehicleDeployed_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.GetMaxFinalAimAdjustment
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicleWeapon::GetMaxFinalAimAdjustment ( )
{
	static UFunction* pFnGetMaxFinalAimAdjustment = NULL;

	if ( ! pFnGetMaxFinalAimAdjustment )
		pFnGetMaxFinalAimAdjustment = (UFunction*) UObject::GObjObjects()->Data[ 47750 ];

	AUTVehicleWeapon_execGetMaxFinalAimAdjustment_Parms GetMaxFinalAimAdjustment_Parms;

	this->ProcessEvent ( pFnGetMaxFinalAimAdjustment, &GetMaxFinalAimAdjustment_Parms, NULL );

	return GetMaxFinalAimAdjustment_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.GetTraceOwner
// [0x00020102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTVehicleWeapon::GetTraceOwner ( )
{
	static UFunction* pFnGetTraceOwner = NULL;

	if ( ! pFnGetTraceOwner )
		pFnGetTraceOwner = (UFunction*) UObject::GObjObjects()->Data[ 59800 ];

	AUTVehicleWeapon_execGetTraceOwner_Parms GetTraceOwner_Parms;

	this->ProcessEvent ( pFnGetTraceOwner, &GetTraceOwner_Parms, NULL );

	return GetTraceOwner_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.InstantFireEndTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )

struct FVector AUTVehicleWeapon::InstantFireEndTrace ( struct FVector StartTrace )
{
	static UFunction* pFnInstantFireEndTrace = NULL;

	if ( ! pFnInstantFireEndTrace )
		pFnInstantFireEndTrace = (UFunction*) UObject::GObjObjects()->Data[ 59797 ];

	AUTVehicleWeapon_execInstantFireEndTrace_Parms InstantFireEndTrace_Parms;
	memcpy ( &InstantFireEndTrace_Parms.StartTrace, &StartTrace, 0xC );

	this->ProcessEvent ( pFnInstantFireEndTrace, &InstantFireEndTrace_Parms, NULL );

	return InstantFireEndTrace_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.InstantFireStartTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTVehicleWeapon::InstantFireStartTrace ( )
{
	static UFunction* pFnInstantFireStartTrace = NULL;

	if ( ! pFnInstantFireStartTrace )
		pFnInstantFireStartTrace = (UFunction*) UObject::GObjObjects()->Data[ 59795 ];

	AUTVehicleWeapon_execInstantFireStartTrace_Parms InstantFireStartTrace_Parms;

	this->ProcessEvent ( pFnInstantFireStartTrace, &InstantFireStartTrace_Parms, NULL );

	return InstantFireStartTrace_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* AUTVehicleWeapon::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 59792 ];

	AUTVehicleWeapon_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.GetAdjustedAim
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator AUTVehicleWeapon::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 48146 ];

	AUTVehicleWeapon_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTVehicleWeapon::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 59788 ];

	AUTVehicleWeapon_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTVehicleWeapon::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 59785 ];

	AUTVehicleWeapon_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.GetPhysicalFireStartLoc
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector AUTVehicleWeapon::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 59782 ];

	AUTVehicleWeapon_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.PutDownWeapon
// [0x00020102] 
// Parameters infos:

void AUTVehicleWeapon::PutDownWeapon ( )
{
	static UFunction* pFnPutDownWeapon = NULL;

	if ( ! pFnPutDownWeapon )
		pFnPutDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59781 ];

	AUTVehicleWeapon_execPutDownWeapon_Parms PutDownWeapon_Parms;

	this->ProcessEvent ( pFnPutDownWeapon, &PutDownWeapon_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.Activate
// [0x00020102] 
// Parameters infos:

void AUTVehicleWeapon::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 59780 ];

	AUTVehicleWeapon_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.DetachWeapon
// [0x00020100] 
// Parameters infos:

void AUTVehicleWeapon::DetachWeapon ( )
{
	static UFunction* pFnDetachWeapon = NULL;

	if ( ! pFnDetachWeapon )
		pFnDetachWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59779 ];

	AUTVehicleWeapon_execDetachWeapon_Parms DetachWeapon_Parms;

	this->ProcessEvent ( pFnDetachWeapon, &DetachWeapon_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.AttachWeaponTo
// [0x00024100] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void AUTVehicleWeapon::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 59776 ];

	AUTVehicleWeapon_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.GetImpactEffect
// [0x00022102] 
// Parameters infos:
// struct FMaterialImpactEffect   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class AActor*                  HitActor                       ( CPF_Parm )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

struct FMaterialImpactEffect AUTVehicleWeapon::GetImpactEffect ( class AActor* HitActor, class UPhysicalMaterial* HitMaterial, unsigned char FireModeNum )
{
	static UFunction* pFnGetImpactEffect = NULL;

	if ( ! pFnGetImpactEffect )
		pFnGetImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 48203 ];

	AUTVehicleWeapon_execGetImpactEffect_Parms GetImpactEffect_Parms;
	GetImpactEffect_Parms.HitActor = HitActor;
	GetImpactEffect_Parms.HitMaterial = HitMaterial;
	GetImpactEffect_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetImpactEffect, &GetImpactEffect_Parms, NULL );

	return GetImpactEffect_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float AUTVehicleWeapon::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 59767 ];

	AUTVehicleWeapon_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.GetFireTriggerTag
// [0x00022102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BarrelIndex                    ( CPF_Parm )
// int                            FireMode                       ( CPF_Parm )

struct FName AUTVehicleWeapon::GetFireTriggerTag ( int BarrelIndex, int FireMode )
{
	static UFunction* pFnGetFireTriggerTag = NULL;

	if ( ! pFnGetFireTriggerTag )
		pFnGetFireTriggerTag = (UFunction*) UObject::GObjObjects()->Data[ 48176 ];

	AUTVehicleWeapon_execGetFireTriggerTag_Parms GetFireTriggerTag_Parms;
	GetFireTriggerTag_Parms.BarrelIndex = BarrelIndex;
	GetFireTriggerTag_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnGetFireTriggerTag, &GetFireTriggerTag_Parms, NULL );

	return GetFireTriggerTag_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.IsAimCorrect
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicleWeapon::eventIsAimCorrect ( )
{
	static UFunction* pFnIsAimCorrect = NULL;

	if ( ! pFnIsAimCorrect )
		pFnIsAimCorrect = (UFunction*) UObject::GObjObjects()->Data[ 59759 ];

	AUTVehicleWeapon_eventIsAimCorrect_Parms IsAimCorrect_Parms;

	this->ProcessEvent ( pFnIsAimCorrect, &IsAimCorrect_Parms, NULL );

	return IsAimCorrect_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.GetFireStartLocationAndRotation
// [0x00420102] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm | CPF_OutParm )
// struct FRotator                StartRotation                  ( CPF_Parm | CPF_OutParm )

void AUTVehicleWeapon::GetFireStartLocationAndRotation ( struct FVector* StartLocation, struct FRotator* StartRotation )
{
	static UFunction* pFnGetFireStartLocationAndRotation = NULL;

	if ( ! pFnGetFireStartLocationAndRotation )
		pFnGetFireStartLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 59756 ];

	AUTVehicleWeapon_execGetFireStartLocationAndRotation_Parms GetFireStartLocationAndRotation_Parms;

	this->ProcessEvent ( pFnGetFireStartLocationAndRotation, &GetFireStartLocationAndRotation_Parms, NULL );

	if ( StartLocation )
		memcpy ( StartLocation, &GetFireStartLocationAndRotation_Parms.StartLocation, 0xC );

	if ( StartRotation )
		memcpy ( StartRotation, &GetFireStartLocationAndRotation_Parms.StartRotation, 0xC );
};

// Function UTGame.UTVehicleWeapon.GetDesiredAimPoint
// [0x00C24902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TargetActor                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

struct FVector AUTVehicleWeapon::eventGetDesiredAimPoint ( class AActor** TargetActor )
{
	static UFunction* pFnGetDesiredAimPoint = NULL;

	if ( ! pFnGetDesiredAimPoint )
		pFnGetDesiredAimPoint = (UFunction*) UObject::GObjObjects()->Data[ 59746 ];

	AUTVehicleWeapon_eventGetDesiredAimPoint_Parms GetDesiredAimPoint_Parms;

	this->ProcessEvent ( pFnGetDesiredAimPoint, &GetDesiredAimPoint_Parms, NULL );

	if ( TargetActor )
		*TargetActor = GetDesiredAimPoint_Parms.TargetActor;

	return GetDesiredAimPoint_Parms.ReturnValue;
};

// Function UTGame.UTVehicleWeapon.DrawWeaponCrosshair
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTVehicleWeapon::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 59736 ];

	AUTVehicleWeapon_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.GetCrosshairScaling
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTVehicleWeapon::GetCrosshairScaling ( class AHUD* HUD )
{
	static UFunction* pFnGetCrosshairScaling = NULL;

	if ( ! pFnGetCrosshairScaling )
		pFnGetCrosshairScaling = (UFunction*) UObject::GObjObjects()->Data[ 59734 ];

	AUTVehicleWeapon_execGetCrosshairScaling_Parms GetCrosshairScaling_Parms;
	GetCrosshairScaling_Parms.HUD = HUD;

	this->ProcessEvent ( pFnGetCrosshairScaling, &GetCrosshairScaling_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.DrawKillIcon
// [0x00022102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )
// float                          HUDScaleX                      ( CPF_Parm )
// float                          HUDScaleY                      ( CPF_Parm )

void AUTVehicleWeapon::DrawKillIcon ( class UCanvas* Canvas, float ScreenX, float ScreenY, float HUDScaleX, float HUDScaleY )
{
	static UFunction* pFnDrawKillIcon = NULL;

	if ( ! pFnDrawKillIcon )
		pFnDrawKillIcon = (UFunction*) UObject::GObjObjects()->Data[ 59728 ];

	AUTVehicleWeapon_execDrawKillIcon_Parms DrawKillIcon_Parms;
	DrawKillIcon_Parms.Canvas = Canvas;
	DrawKillIcon_Parms.ScreenX = ScreenX;
	DrawKillIcon_Parms.ScreenY = ScreenY;
	DrawKillIcon_Parms.HUDScaleX = HUDScaleX;
	DrawKillIcon_Parms.HUDScaleY = HUDScaleY;

	this->ProcessEvent ( pFnDrawKillIcon, &DrawKillIcon_Parms, NULL );
};

// Function UTGame.UTVehicleWeapon.CanHitDesiredTarget
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SocketLocation                 ( CPF_Parm )
// struct FRotator                SocketRotation                 ( CPF_Parm )
// struct FVector                 DesiredAimPoint                ( CPF_Parm )
// class AActor*                  TargetActor                    ( CPF_Parm )
// struct FVector                 RealAimPoint                   ( CPF_Parm | CPF_OutParm )

bool AUTVehicleWeapon::CanHitDesiredTarget ( struct FVector SocketLocation, struct FRotator SocketRotation, struct FVector DesiredAimPoint, class AActor* TargetActor, struct FVector* RealAimPoint )
{
	static UFunction* pFnCanHitDesiredTarget = NULL;

	if ( ! pFnCanHitDesiredTarget )
		pFnCanHitDesiredTarget = (UFunction*) UObject::GObjObjects()->Data[ 59714 ];

	AUTVehicleWeapon_execCanHitDesiredTarget_Parms CanHitDesiredTarget_Parms;
	memcpy ( &CanHitDesiredTarget_Parms.SocketLocation, &SocketLocation, 0xC );
	memcpy ( &CanHitDesiredTarget_Parms.SocketRotation, &SocketRotation, 0xC );
	memcpy ( &CanHitDesiredTarget_Parms.DesiredAimPoint, &DesiredAimPoint, 0xC );
	CanHitDesiredTarget_Parms.TargetActor = TargetActor;

	this->ProcessEvent ( pFnCanHitDesiredTarget, &CanHitDesiredTarget_Parms, NULL );

	if ( RealAimPoint )
		memcpy ( RealAimPoint, &CanHitDesiredTarget_Parms.RealAimPoint, 0xC );

	return CanHitDesiredTarget_Parms.ReturnValue;
};

// Function UTGame.UTVehicleMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTVehicleMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59671 ];

	UUTVehicleMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTVehicleMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UUTVehicleMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 59665 ];

	UUTVehicleMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function UTGame.UTVehicleMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTVehicleMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59658 ];

	UUTVehicleMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTVehicleMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTVehicleMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 59655 ];

	UUTVehicleMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTVehicleMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVehicleMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59649 ];

	UUTVehicleMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTLockWarningMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UUTLockWarningMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 57262 ];

	UUTLockWarningMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function UTGame.UTLockWarningMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTLockWarningMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57255 ];

	UUTLockWarningMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTLockWarningMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTLockWarningMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 57252 ];

	UUTLockWarningMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTSeqEvent_VehicleFactory.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqEvent_VehicleFactory::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58337 ];

	UUTSeqEvent_VehicleFactory_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTDmgType_ScorpionSelfDestruct.IncrementKills
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )

int UUTDmgType_ScorpionSelfDestruct::IncrementKills ( class AUTPlayerReplicationInfo* KillerPRI )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 55788 ];

	UUTDmgType_ScorpionSelfDestruct_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.KillerPRI = KillerPRI;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );

	return IncrementKills_Parms.ReturnValue;
};

// Function UTGame.UTDmgType_Burning.GetHitEffectDuration
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float UUTDmgType_Burning::GetHitEffectDuration ( class APawn* P, float Damage )
{
	static UFunction* pFnGetHitEffectDuration = NULL;

	if ( ! pFnGetHitEffectDuration )
		pFnGetHitEffectDuration = (UFunction*) UObject::GObjObjects()->Data[ 55697 ];

	UUTDmgType_Burning_execGetHitEffectDuration_Parms GetHitEffectDuration_Parms;
	GetHitEffectDuration_Parms.P = P;
	GetHitEffectDuration_Parms.Damage = Damage;

	this->ProcessEvent ( pFnGetHitEffectDuration, &GetHitEffectDuration_Parms, NULL );

	return GetHitEffectDuration_Parms.ReturnValue;
};

// Function UTGame.UTDmgType_Burning.SpawnHitEffect
// [0x00822002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UUTDmgType_Burning::SpawnHitEffect ( class APawn* P, float Damage, struct FVector Momentum, struct FName BoneName, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHitEffect = NULL;

	if ( ! pFnSpawnHitEffect )
		pFnSpawnHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 55686 ];

	UUTDmgType_Burning_execSpawnHitEffect_Parms SpawnHitEffect_Parms;
	SpawnHitEffect_Parms.P = P;
	SpawnHitEffect_Parms.Damage = Damage;
	memcpy ( &SpawnHitEffect_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &SpawnHitEffect_Parms.BoneName, &BoneName, 0x8 );
	memcpy ( &SpawnHitEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHitEffect, &SpawnHitEffect_Parms, NULL );
};

// Function UTGame.UTProjectile.GetRange
// [0x00022102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTProjectile::GetRange ( )
{
	static UFunction* pFnGetRange = NULL;

	if ( ! pFnGetRange )
		pFnGetRange = (UFunction*) UObject::GObjObjects()->Data[ 58008 ];

	AUTProjectile_execGetRange_Parms GetRange_Parms;

	this->ProcessEvent ( pFnGetRange, &GetRange_Parms, NULL );

	return GetRange_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.GetTimeToLocation
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 TargetLoc                      ( CPF_Parm )

float AUTProjectile::GetTimeToLocation ( struct FVector TargetLoc )
{
	static UFunction* pFnGetTimeToLocation = NULL;

	if ( ! pFnGetTimeToLocation )
		pFnGetTimeToLocation = (UFunction*) UObject::GObjObjects()->Data[ 58005 ];

	AUTProjectile_execGetTimeToLocation_Parms GetTimeToLocation_Parms;
	memcpy ( &GetTimeToLocation_Parms.TargetLoc, &TargetLoc, 0xC );

	this->ProcessEvent ( pFnGetTimeToLocation, &GetTimeToLocation_Parms, NULL );

	return GetTimeToLocation_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.StaticGetTimeToLocation
// [0x00022102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 TargetLoc                      ( CPF_Parm )
// struct FVector                 StartLoc                       ( CPF_Parm )
// class AController*             RequestedBy                    ( CPF_Parm )

float AUTProjectile::StaticGetTimeToLocation ( struct FVector TargetLoc, struct FVector StartLoc, class AController* RequestedBy )
{
	static UFunction* pFnStaticGetTimeToLocation = NULL;

	if ( ! pFnStaticGetTimeToLocation )
		pFnStaticGetTimeToLocation = (UFunction*) UObject::GObjObjects()->Data[ 58000 ];

	AUTProjectile_execStaticGetTimeToLocation_Parms StaticGetTimeToLocation_Parms;
	memcpy ( &StaticGetTimeToLocation_Parms.TargetLoc, &TargetLoc, 0xC );
	memcpy ( &StaticGetTimeToLocation_Parms.StartLoc, &StartLoc, 0xC );
	StaticGetTimeToLocation_Parms.RequestedBy = RequestedBy;

	this->ProcessEvent ( pFnStaticGetTimeToLocation, &StaticGetTimeToLocation_Parms, NULL );

	return StaticGetTimeToLocation_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.CalculateTravelTime
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Dist                           ( CPF_Parm )
// float                          MoveSpeed                      ( CPF_Parm )
// float                          MaxMoveSpeed                   ( CPF_Parm )
// float                          AccelMag                       ( CPF_Parm )

float AUTProjectile::CalculateTravelTime ( float Dist, float MoveSpeed, float MaxMoveSpeed, float AccelMag )
{
	static UFunction* pFnCalculateTravelTime = NULL;

	if ( ! pFnCalculateTravelTime )
		pFnCalculateTravelTime = (UFunction*) UObject::GObjObjects()->Data[ 57991 ];

	AUTProjectile_execCalculateTravelTime_Parms CalculateTravelTime_Parms;
	CalculateTravelTime_Parms.Dist = Dist;
	CalculateTravelTime_Parms.MoveSpeed = MoveSpeed;
	CalculateTravelTime_Parms.MaxMoveSpeed = MaxMoveSpeed;
	CalculateTravelTime_Parms.AccelMag = AccelMag;

	this->ProcessEvent ( pFnCalculateTravelTime, &CalculateTravelTime_Parms, NULL );

	return CalculateTravelTime_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.GetPawnOwner
// [0x00020100] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APawn* AUTProjectile::GetPawnOwner ( )
{
	static UFunction* pFnGetPawnOwner = NULL;

	if ( ! pFnGetPawnOwner )
		pFnGetPawnOwner = (UFunction*) UObject::GObjObjects()->Data[ 57989 ];

	AUTProjectile_execGetPawnOwner_Parms GetPawnOwner_Parms;

	this->ProcessEvent ( pFnGetPawnOwner, &GetPawnOwner_Parms, NULL );

	return GetPawnOwner_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.GetHomingTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTProjectile*           Seeker                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )

class AActor* AUTProjectile::eventGetHomingTarget ( class AUTProjectile* Seeker, class AController* InstigatedBy )
{
	static UFunction* pFnGetHomingTarget = NULL;

	if ( ! pFnGetHomingTarget )
		pFnGetHomingTarget = (UFunction*) UObject::GObjObjects()->Data[ 57985 ];

	AUTProjectile_eventGetHomingTarget_Parms GetHomingTarget_Parms;
	GetHomingTarget_Parms.Seeker = Seeker;
	GetHomingTarget_Parms.InstigatedBy = InstigatedBy;

	this->ProcessEvent ( pFnGetHomingTarget, &GetHomingTarget_Parms, NULL );

	return GetHomingTarget_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.CalcCamera
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool AUTProjectile::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 57979 ];

	AUTProjectile_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.MyOnParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void AUTProjectile::MyOnParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnMyOnParticleSystemFinished = NULL;

	if ( ! pFnMyOnParticleSystemFinished )
		pFnMyOnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 57974 ];

	AUTProjectile_execMyOnParticleSystemFinished_Parms MyOnParticleSystemFinished_Parms;
	MyOnParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnMyOnParticleSystemFinished, &MyOnParticleSystemFinished_Parms, NULL );
};

// Function UTGame.UTProjectile.Destroyed
// [0x00020102] 
// Parameters infos:

void AUTProjectile::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 57973 ];

	AUTProjectile_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTProjectile.HideProjectile
// [0x00020102] 
// Parameters infos:

void AUTProjectile::HideProjectile ( )
{
	static UFunction* pFnHideProjectile = NULL;

	if ( ! pFnHideProjectile )
		pFnHideProjectile = (UFunction*) UObject::GObjObjects()->Data[ 57971 ];

	AUTProjectile_execHideProjectile_Parms HideProjectile_Parms;

	this->ProcessEvent ( pFnHideProjectile, &HideProjectile_Parms, NULL );
};

// Function UTGame.UTProjectile.TornOff
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTProjectile::eventTornOff ( )
{
	static UFunction* pFnTornOff = NULL;

	if ( ! pFnTornOff )
		pFnTornOff = (UFunction*) UObject::GObjObjects()->Data[ 57970 ];

	AUTProjectile_eventTornOff_Parms TornOff_Parms;

	this->ProcessEvent ( pFnTornOff, &TornOff_Parms, NULL );
};

// Function UTGame.UTProjectile.ShutDown
// [0x00820102] 
// Parameters infos:

void AUTProjectile::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 57967 ];

	AUTProjectile_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function UTGame.UTProjectile.ShouldSpawnExplosionLight
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool AUTProjectile::ShouldSpawnExplosionLight ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnShouldSpawnExplosionLight = NULL;

	if ( ! pFnShouldSpawnExplosionLight )
		pFnShouldSpawnExplosionLight = (UFunction*) UObject::GObjObjects()->Data[ 57961 ];

	AUTProjectile_execShouldSpawnExplosionLight_Parms ShouldSpawnExplosionLight_Parms;
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnShouldSpawnExplosionLight, &ShouldSpawnExplosionLight_Parms, NULL );

	return ShouldSpawnExplosionLight_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.SpawnExplosionEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTProjectile::SpawnExplosionEffects ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnSpawnExplosionEffects = NULL;

	if ( ! pFnSpawnExplosionEffects )
		pFnSpawnExplosionEffects = (UFunction*) UObject::GObjObjects()->Data[ 57951 ];

	AUTProjectile_execSpawnExplosionEffects_Parms SpawnExplosionEffects_Parms;
	memcpy ( &SpawnExplosionEffects_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnExplosionEffects_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnSpawnExplosionEffects, &SpawnExplosionEffects_Parms, NULL );
};

// Function UTGame.UTProjectile.SetExplosionEffectParameters
// [0x00020100] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void AUTProjectile::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 57949 ];

	AUTProjectile_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function UTGame.UTProjectile.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void AUTProjectile::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 57948 ];

	AUTProjectile_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function UTGame.UTProjectile.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTProjectile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 57945 ];

	AUTProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function UTGame.UTProjectile.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTProjectile::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 57941 ];

	AUTProjectile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function UTGame.UTProjectile.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void AUTProjectile::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 57939 ];

	AUTProjectile_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function UTGame.UTProjectile.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTProjectile::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 57938 ];

	AUTProjectile_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTProjectile.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTProjectile::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57936 ];

	AUTProjectile_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTProjectile.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTProjectile::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57934 ];

	AUTProjectile_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTProjectile.CanSplash
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTProjectile::CanSplash ( )
{
	static UFunction* pFnCanSplash = NULL;

	if ( ! pFnCanSplash )
		pFnCanSplash = (UFunction*) UObject::GObjObjects()->Data[ 57932 ];

	AUTProjectile_execCanSplash_Parms CanSplash_Parms;

	this->ProcessEvent ( pFnCanSplash, &CanSplash_Parms, NULL );

	return CanSplash_Parms.ReturnValue;
};

// Function UTGame.UTProjectile.Landed
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void AUTProjectile::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 57929 ];

	AUTProjectile_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function UTGame.UTProjectile.CreateProjectileLight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTProjectile::eventCreateProjectileLight ( )
{
	static UFunction* pFnCreateProjectileLight = NULL;

	if ( ! pFnCreateProjectileLight )
		pFnCreateProjectileLight = (UFunction*) UObject::GObjObjects()->Data[ 57928 ];

	AUTProjectile_eventCreateProjectileLight_Parms CreateProjectileLight_Parms;

	this->ProcessEvent ( pFnCreateProjectileLight, &CreateProjectileLight_Parms, NULL );
};

// Function UTGame.UTSkelControl_Damage.BreakApartOnDeath
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_Damage::eventBreakApartOnDeath ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApartOnDeath = NULL;

	if ( ! pFnBreakApartOnDeath )
		pFnBreakApartOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 58421 ];

	UUTSkelControl_Damage_eventBreakApartOnDeath_Parms BreakApartOnDeath_Parms;
	memcpy ( &BreakApartOnDeath_Parms.PartLocation, &PartLocation, 0xC );
	BreakApartOnDeath_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApartOnDeath, &BreakApartOnDeath_Parms, NULL );
};

// Function UTGame.UTSkelControl_Damage.BreakApart
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_Damage::eventBreakApart ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApart = NULL;

	if ( ! pFnBreakApart )
		pFnBreakApart = (UFunction*) UObject::GObjObjects()->Data[ 58417 ];

	UUTSkelControl_Damage_eventBreakApart_Parms BreakApart_Parms;
	memcpy ( &BreakApart_Parms.PartLocation, &PartLocation, 0xC );
	BreakApart_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApart, &BreakApart_Parms, NULL );
};

// Function UTGame.UTDmgType_RanOver.SpawnHitEffect
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UUTDmgType_RanOver::SpawnHitEffect ( class APawn* P, float Damage, struct FVector Momentum, struct FName BoneName, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHitEffect = NULL;

	if ( ! pFnSpawnHitEffect )
		pFnSpawnHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 55773 ];

	UUTDmgType_RanOver_execSpawnHitEffect_Parms SpawnHitEffect_Parms;
	SpawnHitEffect_Parms.P = P;
	SpawnHitEffect_Parms.Damage = Damage;
	memcpy ( &SpawnHitEffect_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &SpawnHitEffect_Parms.BoneName, &BoneName, 0x8 );
	memcpy ( &SpawnHitEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHitEffect, &SpawnHitEffect_Parms, NULL );
};

// Function UTGame.UTDmgType_RanOver.SmallReward
// [0x00022002] 
// Parameters infos:
// class AUTPlayerController*     Killer                         ( CPF_Parm )
// int                            KillCount                      ( CPF_Parm )

void UUTDmgType_RanOver::SmallReward ( class AUTPlayerController* Killer, int KillCount )
{
	static UFunction* pFnSmallReward = NULL;

	if ( ! pFnSmallReward )
		pFnSmallReward = (UFunction*) UObject::GObjObjects()->Data[ 55769 ];

	UUTDmgType_RanOver_execSmallReward_Parms SmallReward_Parms;
	SmallReward_Parms.Killer = Killer;
	SmallReward_Parms.KillCount = KillCount;

	this->ProcessEvent ( pFnSmallReward, &SmallReward_Parms, NULL );
};

// Function UTGame.UTDmgType_RanOver.IncrementKills
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )

int UUTDmgType_RanOver::IncrementKills ( class AUTPlayerReplicationInfo* KillerPRI )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 55765 ];

	UUTDmgType_RanOver_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.KillerPRI = KillerPRI;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );

	return IncrementKills_Parms.ReturnValue;
};

// Function UTGame.UTGib_VehiclePiece.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTGib_VehiclePiece::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56866 ];

	AUTGib_VehiclePiece_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTDmgType_Pancake.SmallReward
// [0x00022002] 
// Parameters infos:
// class AUTPlayerController*     Killer                         ( CPF_Parm )
// int                            KillCount                      ( CPF_Parm )

void UUTDmgType_Pancake::SmallReward ( class AUTPlayerController* Killer, int KillCount )
{
	static UFunction* pFnSmallReward = NULL;

	if ( ! pFnSmallReward )
		pFnSmallReward = (UFunction*) UObject::GObjObjects()->Data[ 55782 ];

	UUTDmgType_Pancake_execSmallReward_Parms SmallReward_Parms;
	SmallReward_Parms.Killer = Killer;
	SmallReward_Parms.KillCount = KillCount;

	this->ProcessEvent ( pFnSmallReward, &SmallReward_Parms, NULL );
};

// Function UTGame.UTAirVehicle.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool AUTAirVehicle::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 48648 ];

	AUTAirVehicle_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function UTGame.UTAirVehicle.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTAirVehicle::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 48646 ];

	AUTAirVehicle_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function UTGame.UTAirVehicle.SetDriving
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewDriving                    ( CPF_Parm )

void AUTAirVehicle::SetDriving ( unsigned long bNewDriving )
{
	static UFunction* pFnSetDriving = NULL;

	if ( ! pFnSetDriving )
		pFnSetDriving = (UFunction*) UObject::GObjObjects()->Data[ 48631 ];

	AUTAirVehicle_execSetDriving_Parms SetDriving_Parms;
	SetDriving_Parms.bNewDriving = bNewDriving;

	this->ProcessEvent ( pFnSetDriving, &SetDriving_Parms, NULL );
};

// Function UTGame.UTAirVehicle.LockOnWarning
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKProjectile*          IncomingMissile                ( CPF_Parm )

void AUTAirVehicle::eventLockOnWarning ( class AUDKProjectile* IncomingMissile )
{
	static UFunction* pFnLockOnWarning = NULL;

	if ( ! pFnLockOnWarning )
		pFnLockOnWarning = (UFunction*) UObject::GObjObjects()->Data[ 48629 ];

	AUTAirVehicle_eventLockOnWarning_Parms LockOnWarning_Parms;
	LockOnWarning_Parms.IncomingMissile = IncomingMissile;

	this->ProcessEvent ( pFnLockOnWarning, &LockOnWarning_Parms, NULL );
};

// Function UTGame.UTAmbientSoundComponent.OcclusionChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bNowOccluded                   ( CPF_Parm )

void UUTAmbientSoundComponent::eventOcclusionChanged ( unsigned long bNowOccluded )
{
	static UFunction* pFnOcclusionChanged = NULL;

	if ( ! pFnOcclusionChanged )
		pFnOcclusionChanged = (UFunction*) UObject::GObjObjects()->Data[ 48658 ];

	UUTAmbientSoundComponent_eventOcclusionChanged_Parms OcclusionChanged_Parms;
	OcclusionChanged_Parms.bNowOccluded = bNowOccluded;

	this->ProcessEvent ( pFnOcclusionChanged, &OcclusionChanged_Parms, NULL );
};

// Function UTGame.UTPickupInventory.BotDesireability
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  PickupHolder                   ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTPickupInventory::BotDesireability ( class AActor* PickupHolder, class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 57763 ];

	AUTPickupInventory_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.PickupHolder = PickupHolder;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTInventory.OwnerEvent
// [0x00020000] 
// Parameters infos:
// struct FName                   EventName                      ( CPF_Parm )

void AUTInventory::OwnerEvent ( struct FName EventName )
{
	static UFunction* pFnOwnerEvent = NULL;

	if ( ! pFnOwnerEvent )
		pFnOwnerEvent = (UFunction*) UObject::GObjObjects()->Data[ 56942 ];

	AUTInventory_execOwnerEvent_Parms OwnerEvent_Parms;
	memcpy ( &OwnerEvent_Parms.EventName, &EventName, 0x8 );

	this->ProcessEvent ( pFnOwnerEvent, &OwnerEvent_Parms, NULL );
};

// Function UTGame.UTInventory.DropFrom
// [0x00020002] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void AUTInventory::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 56939 ];

	AUTInventory_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );
};

// Function UTGame.UTInventory.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTInventory::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 56937 ];

	AUTInventory_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTInventory.ClientLostItem
// [0x010201C2] 
// Parameters infos:

void AUTInventory::ClientLostItem ( )
{
	static UFunction* pFnClientLostItem = NULL;

	if ( ! pFnClientLostItem )
		pFnClientLostItem = (UFunction*) UObject::GObjObjects()->Data[ 56936 ];

	AUTInventory_execClientLostItem_Parms ClientLostItem_Parms;

	this->ProcessEvent ( pFnClientLostItem, &ClientLostItem_Parms, NULL );
};

// Function UTGame.UTInventory.AddWeaponOverlay
// [0x00022100] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )

void AUTInventory::AddWeaponOverlay ( class AUTGameReplicationInfo* GRI )
{
	static UFunction* pFnAddWeaponOverlay = NULL;

	if ( ! pFnAddWeaponOverlay )
		pFnAddWeaponOverlay = (UFunction*) UObject::GObjObjects()->Data[ 56934 ];

	AUTInventory_execAddWeaponOverlay_Parms AddWeaponOverlay_Parms;
	AddWeaponOverlay_Parms.GRI = GRI;

	this->ProcessEvent ( pFnAddWeaponOverlay, &AddWeaponOverlay_Parms, NULL );
};

// Function UTGame.UTPickupMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTPickupMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57771 ];

	UUTPickupMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTAmmoPickupFactory.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTAmmoPickupFactory::BotDesireability ( class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 48779 ];

	AUTAmmoPickupFactory_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTAmmoPickupFactory.UpdateHUD
// [0x00022102] 
// Parameters infos:
// class AUTHUD*                  H                              ( CPF_Parm )

void AUTAmmoPickupFactory::UpdateHUD ( class AUTHUD* H )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 48760 ];

	AUTAmmoPickupFactory_execUpdateHUD_Parms UpdateHUD_Parms;
	UpdateHUD_Parms.H = H;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function UTGame.UTAmmoPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTAmmoPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 48758 ];

	AUTAmmoPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTVoice.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTVoice::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 60052 ];

	UUTVoice_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTVoice.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTVoice::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 60044 ];

	UUTVoice_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function UTGame.UTVoice.SendInPositionMessage
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::SendInPositionMessage ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnSendInPositionMessage = NULL;

	if ( ! pFnSendInPositionMessage )
		pFnSendInPositionMessage = (UFunction*) UObject::GObjObjects()->Data[ 60040 ];

	UUTVoice_execSendInPositionMessage_Parms SendInPositionMessage_Parms;
	SendInPositionMessage_Parms.Sender = Sender;
	SendInPositionMessage_Parms.Recipient = Recipient;
	memcpy ( &SendInPositionMessage_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnSendInPositionMessage, &SendInPositionMessage_Parms, NULL );
};

// Function UTGame.UTVoice.SendLocationUpdate
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// class AUTGame*                 G                              ( CPF_Parm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// unsigned long                  bDontSendMidfield              ( CPF_OptionalParm | CPF_Parm )

bool UUTVoice::SendLocationUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType, class AUTGame* G, class APawn* StatusPawn, unsigned long bDontSendMidfield )
{
	static UFunction* pFnSendLocationUpdate = NULL;

	if ( ! pFnSendLocationUpdate )
		pFnSendLocationUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60030 ];

	UUTVoice_execSendLocationUpdate_Parms SendLocationUpdate_Parms;
	SendLocationUpdate_Parms.Sender = Sender;
	SendLocationUpdate_Parms.Recipient = Recipient;
	memcpy ( &SendLocationUpdate_Parms.MessageType, &MessageType, 0x8 );
	SendLocationUpdate_Parms.G = G;
	SendLocationUpdate_Parms.StatusPawn = StatusPawn;
	SendLocationUpdate_Parms.bDontSendMidfield = bDontSendMidfield;

	this->ProcessEvent ( pFnSendLocationUpdate, &SendLocationUpdate_Parms, NULL );

	return SendLocationUpdate_Parms.ReturnValue;
};

// Function UTGame.UTVoice.KilledVehicleSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )

class USoundNodeWave* UUTVoice::KilledVehicleSound ( class APlayerController* PC, class UObject* OptionalObject )
{
	static UFunction* pFnKilledVehicleSound = NULL;

	if ( ! pFnKilledVehicleSound )
		pFnKilledVehicleSound = (UFunction*) UObject::GObjObjects()->Data[ 60025 ];

	UUTVoice_execKilledVehicleSound_Parms KilledVehicleSound_Parms;
	KilledVehicleSound_Parms.PC = PC;
	KilledVehicleSound_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnKilledVehicleSound, &KilledVehicleSound_Parms, NULL );

	return KilledVehicleSound_Parms.ReturnValue;
};

// Function UTGame.UTVoice.SendKilledVehicleMessage
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::SendKilledVehicleMessage ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnSendKilledVehicleMessage = NULL;

	if ( ! pFnSendKilledVehicleMessage )
		pFnSendKilledVehicleMessage = (UFunction*) UObject::GObjObjects()->Data[ 60020 ];

	UUTVoice_execSendKilledVehicleMessage_Parms SendKilledVehicleMessage_Parms;
	SendKilledVehicleMessage_Parms.Sender = Sender;
	SendKilledVehicleMessage_Parms.Recipient = Recipient;
	memcpy ( &SendKilledVehicleMessage_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnSendKilledVehicleMessage, &SendKilledVehicleMessage_Parms, NULL );
};

// Function UTGame.UTVoice.SendEnemyStatusUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::SendEnemyStatusUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnSendEnemyStatusUpdate = NULL;

	if ( ! pFnSendEnemyStatusUpdate )
		pFnSendEnemyStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60012 ];

	UUTVoice_execSendEnemyStatusUpdate_Parms SendEnemyStatusUpdate_Parms;
	SendEnemyStatusUpdate_Parms.Sender = Sender;
	SendEnemyStatusUpdate_Parms.Recipient = Recipient;
	memcpy ( &SendEnemyStatusUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnSendEnemyStatusUpdate, &SendEnemyStatusUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.InitSniperUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::InitSniperUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnInitSniperUpdate = NULL;

	if ( ! pFnInitSniperUpdate )
		pFnInitSniperUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60006 ];

	UUTVoice_execInitSniperUpdate_Parms InitSniperUpdate_Parms;
	InitSniperUpdate_Parms.Sender = Sender;
	InitSniperUpdate_Parms.Recipient = Recipient;
	memcpy ( &InitSniperUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnInitSniperUpdate, &InitSniperUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.SendEnemyFlagCarrierHereUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::SendEnemyFlagCarrierHereUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnSendEnemyFlagCarrierHereUpdate = NULL;

	if ( ! pFnSendEnemyFlagCarrierHereUpdate )
		pFnSendEnemyFlagCarrierHereUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59997 ];

	UUTVoice_execSendEnemyFlagCarrierHereUpdate_Parms SendEnemyFlagCarrierHereUpdate_Parms;
	SendEnemyFlagCarrierHereUpdate_Parms.Sender = Sender;
	SendEnemyFlagCarrierHereUpdate_Parms.Recipient = Recipient;
	memcpy ( &SendEnemyFlagCarrierHereUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnSendEnemyFlagCarrierHereUpdate, &SendEnemyFlagCarrierHereUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.SendLocalizedMessage
// [0x00026002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 LocationObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVoice::SendLocalizedMessage ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType, int MessageIndex, class UObject* LocationObject )
{
	static UFunction* pFnSendLocalizedMessage = NULL;

	if ( ! pFnSendLocalizedMessage )
		pFnSendLocalizedMessage = (UFunction*) UObject::GObjObjects()->Data[ 59989 ];

	UUTVoice_execSendLocalizedMessage_Parms SendLocalizedMessage_Parms;
	SendLocalizedMessage_Parms.Sender = Sender;
	SendLocalizedMessage_Parms.Recipient = Recipient;
	memcpy ( &SendLocalizedMessage_Parms.MessageType, &MessageType, 0x8 );
	SendLocalizedMessage_Parms.MessageIndex = MessageIndex;
	SendLocalizedMessage_Parms.LocationObject = LocationObject;

	this->ProcessEvent ( pFnSendLocalizedMessage, &SendLocalizedMessage_Parms, NULL );
};

// Function UTGame.UTVoice.SetHoldingFlagUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::SetHoldingFlagUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnSetHoldingFlagUpdate = NULL;

	if ( ! pFnSetHoldingFlagUpdate )
		pFnSetHoldingFlagUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59984 ];

	UUTVoice_execSetHoldingFlagUpdate_Parms SetHoldingFlagUpdate_Parms;
	SetHoldingFlagUpdate_Parms.Sender = Sender;
	SetHoldingFlagUpdate_Parms.Recipient = Recipient;
	memcpy ( &SetHoldingFlagUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnSetHoldingFlagUpdate, &SetHoldingFlagUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.InitCombatUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::InitCombatUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnInitCombatUpdate = NULL;

	if ( ! pFnInitCombatUpdate )
		pFnInitCombatUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59979 ];

	UUTVoice_execInitCombatUpdate_Parms InitCombatUpdate_Parms;
	InitCombatUpdate_Parms.Sender = Sender;
	InitCombatUpdate_Parms.Recipient = Recipient;
	memcpy ( &InitCombatUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnInitCombatUpdate, &InitCombatUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.InitStatusUpdate
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

void UUTVoice::InitStatusUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnInitStatusUpdate = NULL;

	if ( ! pFnInitStatusUpdate )
		pFnInitStatusUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59973 ];

	UUTVoice_execInitStatusUpdate_Parms InitStatusUpdate_Parms;
	InitStatusUpdate_Parms.Sender = Sender;
	InitStatusUpdate_Parms.Recipient = Recipient;
	memcpy ( &InitStatusUpdate_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnInitStatusUpdate, &InitStatusUpdate_Parms, NULL );
};

// Function UTGame.UTVoice.GetMessageIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

int UUTVoice::GetMessageIndex ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType, class UClass* DamageType )
{
	static UFunction* pFnGetMessageIndex = NULL;

	if ( ! pFnGetMessageIndex )
		pFnGetMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 59967 ];

	UUTVoice_execGetMessageIndex_Parms GetMessageIndex_Parms;
	GetMessageIndex_Parms.Sender = Sender;
	GetMessageIndex_Parms.Recipient = Recipient;
	memcpy ( &GetMessageIndex_Parms.MessageType, &MessageType, 0x8 );
	GetMessageIndex_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnGetMessageIndex, &GetMessageIndex_Parms, NULL );

	return GetMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTVoice.SendVoiceMessage
// [0x00022002] 
// Parameters infos:
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void UUTVoice::SendVoiceMessage ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType, class UClass* DamageType )
{
	static UFunction* pFnSendVoiceMessage = NULL;

	if ( ! pFnSendVoiceMessage )
		pFnSendVoiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 59956 ];

	UUTVoice_execSendVoiceMessage_Parms SendVoiceMessage_Parms;
	SendVoiceMessage_Parms.Sender = Sender;
	SendVoiceMessage_Parms.Recipient = Recipient;
	memcpy ( &SendVoiceMessage_Parms.MessageType, &MessageType, 0x8 );
	SendVoiceMessage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnSendVoiceMessage, &SendVoiceMessage_Parms, NULL );
};

// Function UTGame.UTVoice.AllowVoiceMessage
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   MessageType                    ( CPF_Parm )
// class AUTPlayerController*     PC                             ( CPF_Parm )
// class APlayerController*       Recipient                      ( CPF_Parm )

bool UUTVoice::AllowVoiceMessage ( struct FName MessageType, class AUTPlayerController* PC, class APlayerController* Recipient )
{
	static UFunction* pFnAllowVoiceMessage = NULL;

	if ( ! pFnAllowVoiceMessage )
		pFnAllowVoiceMessage = (UFunction*) UObject::GObjObjects()->Data[ 59950 ];

	UUTVoice_execAllowVoiceMessage_Parms AllowVoiceMessage_Parms;
	memcpy ( &AllowVoiceMessage_Parms.MessageType, &MessageType, 0x8 );
	AllowVoiceMessage_Parms.PC = PC;
	AllowVoiceMessage_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnAllowVoiceMessage, &AllowVoiceMessage_Parms, NULL );

	return AllowVoiceMessage_Parms.ReturnValue;
};

// Function UTGame.UTVoice.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTVoice::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59943 ];

	UUTVoice_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTVoice.EnemySound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )

class USoundNodeWave* UUTVoice::EnemySound ( class APlayerController* PC, class UObject* OptionalObject )
{
	static UFunction* pFnEnemySound = NULL;

	if ( ! pFnEnemySound )
		pFnEnemySound = (UFunction*) UObject::GObjObjects()->Data[ 59935 ];

	UUTVoice_execEnemySound_Parms EnemySound_Parms;
	EnemySound_Parms.PC = PC;
	EnemySound_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnEnemySound, &EnemySound_Parms, NULL );

	return EnemySound_Parms.ReturnValue;
};

// Function UTGame.UTVoice.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTVoice::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59927 ];

	UUTVoice_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTVoice.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVoice::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59921 ];

	UUTVoice_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTVoice.GetNeedOurFlagMessageIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

int UUTVoice::GetNeedOurFlagMessageIndex ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnGetNeedOurFlagMessageIndex = NULL;

	if ( ! pFnGetNeedOurFlagMessageIndex )
		pFnGetNeedOurFlagMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 59916 ];

	UUTVoice_execGetNeedOurFlagMessageIndex_Parms GetNeedOurFlagMessageIndex_Parms;
	GetNeedOurFlagMessageIndex_Parms.Sender = Sender;
	GetNeedOurFlagMessageIndex_Parms.Recipient = Recipient;
	memcpy ( &GetNeedOurFlagMessageIndex_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnGetNeedOurFlagMessageIndex, &GetNeedOurFlagMessageIndex_Parms, NULL );

	return GetNeedOurFlagMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTVoice.GetGotYourBackMessageIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

int UUTVoice::GetGotYourBackMessageIndex ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnGetGotYourBackMessageIndex = NULL;

	if ( ! pFnGetGotYourBackMessageIndex )
		pFnGetGotYourBackMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 59911 ];

	UUTVoice_execGetGotYourBackMessageIndex_Parms GetGotYourBackMessageIndex_Parms;
	GetGotYourBackMessageIndex_Parms.Sender = Sender;
	GetGotYourBackMessageIndex_Parms.Recipient = Recipient;
	memcpy ( &GetGotYourBackMessageIndex_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnGetGotYourBackMessageIndex, &GetGotYourBackMessageIndex_Parms, NULL );

	return GetGotYourBackMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTVoice.GetFriendlyFireMessageIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

int UUTVoice::GetFriendlyFireMessageIndex ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnGetFriendlyFireMessageIndex = NULL;

	if ( ! pFnGetFriendlyFireMessageIndex )
		pFnGetFriendlyFireMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 59906 ];

	UUTVoice_execGetFriendlyFireMessageIndex_Parms GetFriendlyFireMessageIndex_Parms;
	GetFriendlyFireMessageIndex_Parms.Sender = Sender;
	GetFriendlyFireMessageIndex_Parms.Recipient = Recipient;
	memcpy ( &GetFriendlyFireMessageIndex_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnGetFriendlyFireMessageIndex, &GetFriendlyFireMessageIndex_Parms, NULL );

	return GetFriendlyFireMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTVoice.GetAckMessageIndex
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )

int UUTVoice::GetAckMessageIndex ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType )
{
	static UFunction* pFnGetAckMessageIndex = NULL;

	if ( ! pFnGetAckMessageIndex )
		pFnGetAckMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 59901 ];

	UUTVoice_execGetAckMessageIndex_Parms GetAckMessageIndex_Parms;
	GetAckMessageIndex_Parms.Sender = Sender;
	GetAckMessageIndex_Parms.Recipient = Recipient;
	memcpy ( &GetAckMessageIndex_Parms.MessageType, &MessageType, 0x8 );

	this->ProcessEvent ( pFnGetAckMessageIndex, &GetAckMessageIndex_Parms, NULL );

	return GetAckMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTScriptedVoiceMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTScriptedVoiceMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 58156 ];

	UUTScriptedVoiceMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTScriptedVoiceMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTScriptedVoiceMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 58149 ];

	UUTScriptedVoiceMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTScriptedVoiceMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTScriptedVoiceMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 58143 ];

	UUTScriptedVoiceMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTScriptedVoiceMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTScriptedVoiceMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 58138 ];

	UUTScriptedVoiceMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTWeaponAttachment.GetEffectLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTWeaponAttachment::GetEffectLocation ( )
{
	static UFunction* pFnGetEffectLocation = NULL;

	if ( ! pFnGetEffectLocation )
		pFnGetEffectLocation = (UFunction*) UObject::GObjObjects()->Data[ 50097 ];

	AUTWeaponAttachment_execGetEffectLocation_Parms GetEffectLocation_Parms;

	this->ProcessEvent ( pFnGetEffectLocation, &GetEffectLocation_Parms, NULL );

	return GetEffectLocation_Parms.ReturnValue;
};

// Function UTGame.UTWeaponAttachment.FireModeUpdated
// [0x00020100] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void AUTWeaponAttachment::FireModeUpdated ( unsigned char FiringMode, unsigned long bViaReplication )
{
	static UFunction* pFnFireModeUpdated = NULL;

	if ( ! pFnFireModeUpdated )
		pFnFireModeUpdated = (UFunction*) UObject::GObjObjects()->Data[ 50094 ];

	AUTWeaponAttachment_execFireModeUpdated_Parms FireModeUpdated_Parms;
	FireModeUpdated_Parms.FiringMode = FiringMode;
	FireModeUpdated_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnFireModeUpdated, &FireModeUpdated_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void AUTWeaponAttachment::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 50092 ];

	AUTWeaponAttachment_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.SetWeaponOverlayFlags
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 OwnerPawn                      ( CPF_Parm )

void AUTWeaponAttachment::SetWeaponOverlayFlags ( class AUTPawn* OwnerPawn )
{
	static UFunction* pFnSetWeaponOverlayFlags = NULL;

	if ( ! pFnSetWeaponOverlayFlags )
		pFnSetWeaponOverlayFlags = (UFunction*) UObject::GObjObjects()->Data[ 50085 ];

	AUTWeaponAttachment_execSetWeaponOverlayFlags_Parms SetWeaponOverlayFlags_Parms;
	SetWeaponOverlayFlags_Parms.OwnerPawn = OwnerPawn;

	this->ProcessEvent ( pFnSetWeaponOverlayFlags, &SetWeaponOverlayFlags_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.CheckBulletWhip
// [0x00020102] 
// Parameters infos:
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTWeaponAttachment::CheckBulletWhip ( struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnCheckBulletWhip = NULL;

	if ( ! pFnCheckBulletWhip )
		pFnCheckBulletWhip = (UFunction*) UObject::GObjObjects()->Data[ 50080 ];

	AUTWeaponAttachment_execCheckBulletWhip_Parms CheckBulletWhip_Parms;
	memcpy ( &CheckBulletWhip_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &CheckBulletWhip_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCheckBulletWhip, &CheckBulletWhip_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.PlayImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTWeaponAttachment::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 50063 ];

	AUTWeaponAttachment_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.SetImpactedActor
// [0x00020100] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void AUTWeaponAttachment::SetImpactedActor ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnSetImpactedActor = NULL;

	if ( ! pFnSetImpactedActor )
		pFnSetImpactedActor = (UFunction*) UObject::GObjObjects()->Data[ 50058 ];

	AUTWeaponAttachment_execSetImpactedActor_Parms SetImpactedActor_Parms;
	SetImpactedActor_Parms.HitActor = HitActor;
	memcpy ( &SetImpactedActor_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SetImpactedActor_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &SetImpactedActor_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnSetImpactedActor, &SetImpactedActor_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.AllowImpactEffects
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool AUTWeaponAttachment::AllowImpactEffects ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnAllowImpactEffects = NULL;

	if ( ! pFnAllowImpactEffects )
		pFnAllowImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 50053 ];

	AUTWeaponAttachment_execAllowImpactEffects_Parms AllowImpactEffects_Parms;
	AllowImpactEffects_Parms.HitActor = HitActor;
	memcpy ( &AllowImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &AllowImpactEffects_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnAllowImpactEffects, &AllowImpactEffects_Parms, NULL );

	return AllowImpactEffects_Parms.ReturnValue;
};

// Function UTGame.UTWeaponAttachment.GetImpactEffect
// [0x00020102] 
// Parameters infos:
// struct FMaterialImpactEffect   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )

struct FMaterialImpactEffect AUTWeaponAttachment::GetImpactEffect ( class UPhysicalMaterial* HitMaterial )
{
	static UFunction* pFnGetImpactEffect = NULL;

	if ( ! pFnGetImpactEffect )
		pFnGetImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 50048 ];

	AUTWeaponAttachment_execGetImpactEffect_Parms GetImpactEffect_Parms;
	GetImpactEffect_Parms.HitMaterial = HitMaterial;

	this->ProcessEvent ( pFnGetImpactEffect, &GetImpactEffect_Parms, NULL );

	return GetImpactEffect_Parms.ReturnValue;
};

// Function UTGame.UTWeaponAttachment.StopThirdPersonFireEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeaponAttachment::eventStopThirdPersonFireEffects ( )
{
	static UFunction* pFnStopThirdPersonFireEffects = NULL;

	if ( ! pFnStopThirdPersonFireEffects )
		pFnStopThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50047 ];

	AUTWeaponAttachment_eventStopThirdPersonFireEffects_Parms StopThirdPersonFireEffects_Parms;

	this->ProcessEvent ( pFnStopThirdPersonFireEffects, &StopThirdPersonFireEffects_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.WeapAttach_ActorEffectIsRelevant
// [0x00824102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   EffectInstigator               ( CPF_Parm )
// float                          VisibleCullDistance            ( CPF_OptionalParm | CPF_Parm )
// float                          HiddenCullDistance             ( CPF_OptionalParm | CPF_Parm )

bool AUTWeaponAttachment::WeapAttach_ActorEffectIsRelevant ( class APawn* EffectInstigator, float VisibleCullDistance, float HiddenCullDistance )
{
	static UFunction* pFnWeapAttach_ActorEffectIsRelevant = NULL;

	if ( ! pFnWeapAttach_ActorEffectIsRelevant )
		pFnWeapAttach_ActorEffectIsRelevant = (UFunction*) UObject::GObjObjects()->Data[ 50038 ];

	AUTWeaponAttachment_execWeapAttach_ActorEffectIsRelevant_Parms WeapAttach_ActorEffectIsRelevant_Parms;
	WeapAttach_ActorEffectIsRelevant_Parms.EffectInstigator = EffectInstigator;
	WeapAttach_ActorEffectIsRelevant_Parms.VisibleCullDistance = VisibleCullDistance;
	WeapAttach_ActorEffectIsRelevant_Parms.HiddenCullDistance = HiddenCullDistance;

	this->ProcessEvent ( pFnWeapAttach_ActorEffectIsRelevant, &WeapAttach_ActorEffectIsRelevant_Parms, NULL );

	return WeapAttach_ActorEffectIsRelevant_Parms.ReturnValue;
};

// Function UTGame.UTWeaponAttachment.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTWeaponAttachment::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50035 ];

	AUTWeaponAttachment_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.StopFirstPersonFireEffects
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 PawnWeapon                     ( CPF_Parm )

void AUTWeaponAttachment::StopFirstPersonFireEffects ( class AWeapon* PawnWeapon )
{
	static UFunction* pFnStopFirstPersonFireEffects = NULL;

	if ( ! pFnStopFirstPersonFireEffects )
		pFnStopFirstPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50033 ];

	AUTWeaponAttachment_execStopFirstPersonFireEffects_Parms StopFirstPersonFireEffects_Parms;
	StopFirstPersonFireEffects_Parms.PawnWeapon = PawnWeapon;

	this->ProcessEvent ( pFnStopFirstPersonFireEffects, &StopFirstPersonFireEffects_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.FirstPersonFireEffects
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 PawnWeapon                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void AUTWeaponAttachment::FirstPersonFireEffects ( class AWeapon* PawnWeapon, struct FVector HitLocation )
{
	static UFunction* pFnFirstPersonFireEffects = NULL;

	if ( ! pFnFirstPersonFireEffects )
		pFnFirstPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50030 ];

	AUTWeaponAttachment_execFirstPersonFireEffects_Parms FirstPersonFireEffects_Parms;
	FirstPersonFireEffects_Parms.PawnWeapon = PawnWeapon;
	memcpy ( &FirstPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnFirstPersonFireEffects, &FirstPersonFireEffects_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.StopMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeaponAttachment::StopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50029 ];

	AUTWeaponAttachment_execStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.CauseMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTWeaponAttachment::CauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50027 ];

	AUTWeaponAttachment_execCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.MuzzleFlashTimer
// [0x00020102] 
// Parameters infos:

void AUTWeaponAttachment::MuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 50026 ];

	AUTWeaponAttachment_execMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.DetachFrom
// [0x00020102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )

void AUTWeaponAttachment::DetachFrom ( class USkeletalMeshComponent* MeshCpnt )
{
	static UFunction* pFnDetachFrom = NULL;

	if ( ! pFnDetachFrom )
		pFnDetachFrom = (UFunction*) UObject::GObjObjects()->Data[ 50024 ];

	AUTWeaponAttachment_execDetachFrom_Parms DetachFrom_Parms;
	DetachFrom_Parms.MeshCpnt = MeshCpnt;

	this->ProcessEvent ( pFnDetachFrom, &DetachFrom_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.SetPuttingDownWeapon
// [0x00020100] 
// Parameters infos:
// unsigned long                  bNowPuttingDown                ( CPF_Parm )

void AUTWeaponAttachment::SetPuttingDownWeapon ( unsigned long bNowPuttingDown )
{
	static UFunction* pFnSetPuttingDownWeapon = NULL;

	if ( ! pFnSetPuttingDownWeapon )
		pFnSetPuttingDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50022 ];

	AUTWeaponAttachment_execSetPuttingDownWeapon_Parms SetPuttingDownWeapon_Parms;
	SetPuttingDownWeapon_Parms.bNowPuttingDown = bNowPuttingDown;

	this->ProcessEvent ( pFnSetPuttingDownWeapon, &SetPuttingDownWeapon_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.AttachTo
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 OwnerPawn                      ( CPF_Parm )

void AUTWeaponAttachment::AttachTo ( class AUTPawn* OwnerPawn )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 50020 ];

	AUTWeaponAttachment_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.OwnerPawn = OwnerPawn;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.SetMuzzleFlashParams
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void AUTWeaponAttachment::SetMuzzleFlashParams ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetMuzzleFlashParams = NULL;

	if ( ! pFnSetMuzzleFlashParams )
		pFnSetMuzzleFlashParams = (UFunction*) UObject::GObjObjects()->Data[ 50018 ];

	AUTWeaponAttachment_execSetMuzzleFlashParams_Parms SetMuzzleFlashParams_Parms;
	SetMuzzleFlashParams_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetMuzzleFlashParams, &SetMuzzleFlashParams_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.SetSkin
// [0x00020002] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void AUTWeaponAttachment::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 50014 ];

	AUTWeaponAttachment_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.CreateOverlayMesh
// [0x00020102] 
// Parameters infos:

void AUTWeaponAttachment::CreateOverlayMesh ( )
{
	static UFunction* pFnCreateOverlayMesh = NULL;

	if ( ! pFnCreateOverlayMesh )
		pFnCreateOverlayMesh = (UFunction*) UObject::GObjObjects()->Data[ 50013 ];

	AUTWeaponAttachment_execCreateOverlayMesh_Parms CreateOverlayMesh_Parms;

	this->ProcessEvent ( pFnCreateOverlayMesh, &CreateOverlayMesh_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.CheckToForceRefPose
// [0x00020102] 
// Parameters infos:

void AUTWeaponAttachment::CheckToForceRefPose ( )
{
	static UFunction* pFnCheckToForceRefPose = NULL;

	if ( ! pFnCheckToForceRefPose )
		pFnCheckToForceRefPose = (UFunction*) UObject::GObjObjects()->Data[ 50012 ];

	AUTWeaponAttachment_execCheckToForceRefPose_Parms CheckToForceRefPose_Parms;

	this->ProcessEvent ( pFnCheckToForceRefPose, &CheckToForceRefPose_Parms, NULL );
};

// Function UTGame.UTWeaponAttachment.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTWeaponAttachment::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50011 ];

	AUTWeaponAttachment_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTCharInfo.GetRandomCharClassName
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UUTCharInfo::GetRandomCharClassName ( )
{
	static UFunction* pFnGetRandomCharClassName = NULL;

	if ( ! pFnGetRandomCharClassName )
		pFnGetRandomCharClassName = (UFunction*) UObject::GObjObjects()->Data[ 52397 ];

	UUTCharInfo_execGetRandomCharClassName_Parms GetRandomCharClassName_Parms;

	this->ProcessEvent ( pFnGetRandomCharClassName, &GetRandomCharClassName_Parms, NULL );

	return GetRandomCharClassName_Parms.ReturnValue;
};

// Function UTGame.UTCharInfo.FindFamilyInfo
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InFamilyID                     ( CPF_Parm | CPF_NeedCtorLink )

class UClass* UUTCharInfo::FindFamilyInfo ( struct FString InFamilyID )
{
	static UFunction* pFnFindFamilyInfo = NULL;

	if ( ! pFnFindFamilyInfo )
		pFnFindFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 51262 ];

	UUTCharInfo_execFindFamilyInfo_Parms FindFamilyInfo_Parms;
	memcpy ( &FindFamilyInfo_Parms.InFamilyID, &InFamilyID, 0xC );

	this->ProcessEvent ( pFnFindFamilyInfo, &FindFamilyInfo_Parms, NULL );

	return FindFamilyInfo_Parms.ReturnValue;
};

// Function UTGame.UTPawnSoundGroup.PlayDrownSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayDrownSound ( class APawn* P )
{
	static UFunction* pFnPlayDrownSound = NULL;

	if ( ! pFnPlayDrownSound )
		pFnPlayDrownSound = (UFunction*) UObject::GObjObjects()->Data[ 57670 ];

	UUTPawnSoundGroup_execPlayDrownSound_Parms PlayDrownSound_Parms;
	PlayDrownSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayDrownSound, &PlayDrownSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayGaspSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayGaspSound ( class APawn* P )
{
	static UFunction* pFnPlayGaspSound = NULL;

	if ( ! pFnPlayGaspSound )
		pFnPlayGaspSound = (UFunction*) UObject::GObjObjects()->Data[ 57668 ];

	UUTPawnSoundGroup_execPlayGaspSound_Parms PlayGaspSound_Parms;
	PlayGaspSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayGaspSound, &PlayGaspSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayGibSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayGibSound ( class APawn* P )
{
	static UFunction* pFnPlayGibSound = NULL;

	if ( ! pFnPlayGibSound )
		pFnPlayGibSound = (UFunction*) UObject::GObjObjects()->Data[ 57666 ];

	UUTPawnSoundGroup_execPlayGibSound_Parms PlayGibSound_Parms;
	PlayGibSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayGibSound, &PlayGibSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayTakeHitSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )

void UUTPawnSoundGroup::PlayTakeHitSound ( class APawn* P, int Damage )
{
	static UFunction* pFnPlayTakeHitSound = NULL;

	if ( ! pFnPlayTakeHitSound )
		pFnPlayTakeHitSound = (UFunction*) UObject::GObjObjects()->Data[ 57662 ];

	UUTPawnSoundGroup_execPlayTakeHitSound_Parms PlayTakeHitSound_Parms;
	PlayTakeHitSound_Parms.P = P;
	PlayTakeHitSound_Parms.Damage = Damage;

	this->ProcessEvent ( pFnPlayTakeHitSound, &PlayTakeHitSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayDyingSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayDyingSound ( class APawn* P )
{
	static UFunction* pFnPlayDyingSound = NULL;

	if ( ! pFnPlayDyingSound )
		pFnPlayDyingSound = (UFunction*) UObject::GObjObjects()->Data[ 57660 ];

	UUTPawnSoundGroup_execPlayDyingSound_Parms PlayDyingSound_Parms;
	PlayDyingSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayDyingSound, &PlayDyingSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.GetLandSound
// [0x00022002] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   MaterialType                   ( CPF_Parm )

class USoundCue* UUTPawnSoundGroup::GetLandSound ( struct FName MaterialType )
{
	static UFunction* pFnGetLandSound = NULL;

	if ( ! pFnGetLandSound )
		pFnGetLandSound = (UFunction*) UObject::GObjObjects()->Data[ 49385 ];

	UUTPawnSoundGroup_execGetLandSound_Parms GetLandSound_Parms;
	memcpy ( &GetLandSound_Parms.MaterialType, &MaterialType, 0x8 );

	this->ProcessEvent ( pFnGetLandSound, &GetLandSound_Parms, NULL );

	return GetLandSound_Parms.ReturnValue;
};

// Function UTGame.UTPawnSoundGroup.GetJumpSound
// [0x00022002] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   MaterialType                   ( CPF_Parm )

class USoundCue* UUTPawnSoundGroup::GetJumpSound ( struct FName MaterialType )
{
	static UFunction* pFnGetJumpSound = NULL;

	if ( ! pFnGetJumpSound )
		pFnGetJumpSound = (UFunction*) UObject::GObjObjects()->Data[ 49389 ];

	UUTPawnSoundGroup_execGetJumpSound_Parms GetJumpSound_Parms;
	memcpy ( &GetJumpSound_Parms.MaterialType, &MaterialType, 0x8 );

	this->ProcessEvent ( pFnGetJumpSound, &GetJumpSound_Parms, NULL );

	return GetJumpSound_Parms.ReturnValue;
};

// Function UTGame.UTPawnSoundGroup.GetFootstepSound
// [0x00022002] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            FootDown                       ( CPF_Parm )
// struct FName                   MaterialType                   ( CPF_Parm )

class USoundCue* UUTPawnSoundGroup::GetFootstepSound ( int FootDown, struct FName MaterialType )
{
	static UFunction* pFnGetFootstepSound = NULL;

	if ( ! pFnGetFootstepSound )
		pFnGetFootstepSound = (UFunction*) UObject::GObjObjects()->Data[ 49370 ];

	UUTPawnSoundGroup_execGetFootstepSound_Parms GetFootstepSound_Parms;
	GetFootstepSound_Parms.FootDown = FootDown;
	memcpy ( &GetFootstepSound_Parms.MaterialType, &MaterialType, 0x8 );

	this->ProcessEvent ( pFnGetFootstepSound, &GetFootstepSound_Parms, NULL );

	return GetFootstepSound_Parms.ReturnValue;
};

// Function UTGame.UTPawnSoundGroup.PlayFallingDamageLandSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayFallingDamageLandSound ( class APawn* P )
{
	static UFunction* pFnPlayFallingDamageLandSound = NULL;

	if ( ! pFnPlayFallingDamageLandSound )
		pFnPlayFallingDamageLandSound = (UFunction*) UObject::GObjObjects()->Data[ 57651 ];

	UUTPawnSoundGroup_execPlayFallingDamageLandSound_Parms PlayFallingDamageLandSound_Parms;
	PlayFallingDamageLandSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayFallingDamageLandSound, &PlayFallingDamageLandSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayLandSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayLandSound ( class APawn* P )
{
	static UFunction* pFnPlayLandSound = NULL;

	if ( ! pFnPlayLandSound )
		pFnPlayLandSound = (UFunction*) UObject::GObjObjects()->Data[ 57649 ];

	UUTPawnSoundGroup_execPlayLandSound_Parms PlayLandSound_Parms;
	PlayLandSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayLandSound, &PlayLandSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayJumpSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayJumpSound ( class APawn* P )
{
	static UFunction* pFnPlayJumpSound = NULL;

	if ( ! pFnPlayJumpSound )
		pFnPlayJumpSound = (UFunction*) UObject::GObjObjects()->Data[ 57647 ];

	UUTPawnSoundGroup_execPlayJumpSound_Parms PlayJumpSound_Parms;
	PlayJumpSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayJumpSound, &PlayJumpSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayDoubleJumpSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayDoubleJumpSound ( class APawn* P )
{
	static UFunction* pFnPlayDoubleJumpSound = NULL;

	if ( ! pFnPlayDoubleJumpSound )
		pFnPlayDoubleJumpSound = (UFunction*) UObject::GObjObjects()->Data[ 57645 ];

	UUTPawnSoundGroup_execPlayDoubleJumpSound_Parms PlayDoubleJumpSound_Parms;
	PlayDoubleJumpSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayDoubleJumpSound, &PlayDoubleJumpSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayDodgeSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayDodgeSound ( class APawn* P )
{
	static UFunction* pFnPlayDodgeSound = NULL;

	if ( ! pFnPlayDodgeSound )
		pFnPlayDodgeSound = (UFunction*) UObject::GObjObjects()->Data[ 57643 ];

	UUTPawnSoundGroup_execPlayDodgeSound_Parms PlayDodgeSound_Parms;
	PlayDodgeSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayDodgeSound, &PlayDodgeSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayBodyExplosion
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayBodyExplosion ( class APawn* P )
{
	static UFunction* pFnPlayBodyExplosion = NULL;

	if ( ! pFnPlayBodyExplosion )
		pFnPlayBodyExplosion = (UFunction*) UObject::GObjObjects()->Data[ 57641 ];

	UUTPawnSoundGroup_execPlayBodyExplosion_Parms PlayBodyExplosion_Parms;
	PlayBodyExplosion_Parms.P = P;

	this->ProcessEvent ( pFnPlayBodyExplosion, &PlayBodyExplosion_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayCrushedSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayCrushedSound ( class APawn* P )
{
	static UFunction* pFnPlayCrushedSound = NULL;

	if ( ! pFnPlayCrushedSound )
		pFnPlayCrushedSound = (UFunction*) UObject::GObjObjects()->Data[ 57639 ];

	UUTPawnSoundGroup_execPlayCrushedSound_Parms PlayCrushedSound_Parms;
	PlayCrushedSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayCrushedSound, &PlayCrushedSound_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayBulletImpact
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayBulletImpact ( class APawn* P )
{
	static UFunction* pFnPlayBulletImpact = NULL;

	if ( ! pFnPlayBulletImpact )
		pFnPlayBulletImpact = (UFunction*) UObject::GObjObjects()->Data[ 57637 ];

	UUTPawnSoundGroup_execPlayBulletImpact_Parms PlayBulletImpact_Parms;
	PlayBulletImpact_Parms.P = P;

	this->ProcessEvent ( pFnPlayBulletImpact, &PlayBulletImpact_Parms, NULL );
};

// Function UTGame.UTPawnSoundGroup.PlayInstagibSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UUTPawnSoundGroup::PlayInstagibSound ( class APawn* P )
{
	static UFunction* pFnPlayInstagibSound = NULL;

	if ( ! pFnPlayInstagibSound )
		pFnPlayInstagibSound = (UFunction*) UObject::GObjObjects()->Data[ 57635 ];

	UUTPawnSoundGroup_execPlayInstagibSound_Parms PlayInstagibSound_Parms;
	PlayInstagibSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayInstagibSound, &PlayInstagibSound_Parms, NULL );
};

// Function UTGame.UTClientSideWeaponPawn.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTClientSideWeaponPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52592 ];

	AUTClientSideWeaponPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTClientSideWeaponPawn.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTClientSideWeaponPawn::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 52590 ];

	AUTClientSideWeaponPawn_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function UTGame.UTClientSideWeaponPawn.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTClientSideWeaponPawn::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 52588 ];

	AUTClientSideWeaponPawn_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function UTGame.UTClientSideWeaponPawn.PreBeginPlay
// [0x00020100] 
// Parameters infos:

void AUTClientSideWeaponPawn::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52587 ];

	AUTClientSideWeaponPawn_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTEmit_HitEffect.PawnBaseDied
// [0x00020102] 
// Parameters infos:

void AUTEmit_HitEffect::PawnBaseDied ( )
{
	static UFunction* pFnPawnBaseDied = NULL;

	if ( ! pFnPawnBaseDied )
		pFnPawnBaseDied = (UFunction*) UObject::GObjObjects()->Data[ 56066 ];

	AUTEmit_HitEffect_execPawnBaseDied_Parms PawnBaseDied_Parms;

	this->ProcessEvent ( pFnPawnBaseDied, &PawnBaseDied_Parms, NULL );
};

// Function UTGame.UTEmit_HitEffect.AttachTo
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// struct FName                   NewBoneName                    ( CPF_Parm )

void AUTEmit_HitEffect::AttachTo ( class APawn* P, struct FName NewBoneName )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 56063 ];

	AUTEmit_HitEffect_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.P = P;
	memcpy ( &AttachTo_Parms.NewBoneName, &NewBoneName, 0x8 );

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function UTGame.UTSeqAct_UseHoverboard.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqAct_UseHoverboard::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58268 ];

	UUTSeqAct_UseHoverboard_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTEmit_TransLocateOut.Timer
// [0x00020102] 
// Parameters infos:

void AUTEmit_TransLocateOut::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 56121 ];

	AUTEmit_TransLocateOut_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTEmit_TransLocateOut.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTEmit_TransLocateOut::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56120 ];

	AUTEmit_TransLocateOut_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTEmit_TransLocateOut.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTEmit_TransLocateOut::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 56112 ];

	AUTEmit_TransLocateOut_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTWaterVolume.PlayEntrySplash
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTWaterVolume::PlayEntrySplash ( class AActor* Other )
{
	static UFunction* pFnPlayEntrySplash = NULL;

	if ( ! pFnPlayEntrySplash )
		pFnPlayEntrySplash = (UFunction*) UObject::GObjObjects()->Data[ 56032 ];

	AUTWaterVolume_execPlayEntrySplash_Parms PlayEntrySplash_Parms;
	PlayEntrySplash_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayEntrySplash, &PlayEntrySplash_Parms, NULL );
};

// Function UTGame.UTWaterVolume.Touch
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTWaterVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 56019 ];

	AUTWaterVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTBeamWeaponAttachment.UpdateBeam
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTBeamWeaponAttachment::UpdateBeam ( unsigned char FireModeNum )
{
	static UFunction* pFnUpdateBeam = NULL;

	if ( ! pFnUpdateBeam )
		pFnUpdateBeam = (UFunction*) UObject::GObjObjects()->Data[ 50114 ];

	AUTBeamWeaponAttachment_execUpdateBeam_Parms UpdateBeam_Parms;
	UpdateBeam_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnUpdateBeam, &UpdateBeam_Parms, NULL );
};

// Function UTGame.UTBeamWeaponAttachment.HideEmitter
// [0x00020102] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bHide                          ( CPF_Parm )

void AUTBeamWeaponAttachment::HideEmitter ( int Index, unsigned long bHide )
{
	static UFunction* pFnHideEmitter = NULL;

	if ( ! pFnHideEmitter )
		pFnHideEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50111 ];

	AUTBeamWeaponAttachment_execHideEmitter_Parms HideEmitter_Parms;
	HideEmitter_Parms.Index = Index;
	HideEmitter_Parms.bHide = bHide;

	this->ProcessEvent ( pFnHideEmitter, &HideEmitter_Parms, NULL );
};

// Function UTGame.UTBeamWeaponAttachment.AddBeamEmitter
// [0x00020102] 
// Parameters infos:

void AUTBeamWeaponAttachment::AddBeamEmitter ( )
{
	static UFunction* pFnAddBeamEmitter = NULL;

	if ( ! pFnAddBeamEmitter )
		pFnAddBeamEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50109 ];

	AUTBeamWeaponAttachment_execAddBeamEmitter_Parms AddBeamEmitter_Parms;

	this->ProcessEvent ( pFnAddBeamEmitter, &AddBeamEmitter_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void AUTAttachment_LinkGun::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 50215 ];

	AUTAttachment_LinkGun_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.CheckPoweredUp
// [0x00020102] 
// Parameters infos:

void AUTAttachment_LinkGun::CheckPoweredUp ( )
{
	static UFunction* pFnCheckPoweredUp = NULL;

	if ( ! pFnCheckPoweredUp )
		pFnCheckPoweredUp = (UFunction*) UObject::GObjObjects()->Data[ 50206 ];

	AUTAttachment_LinkGun_execCheckPoweredUp_Parms CheckPoweredUp_Parms;

	this->ProcessEvent ( pFnCheckPoweredUp, &CheckPoweredUp_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.HideEmitter
// [0x00820102] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bHide                          ( CPF_Parm )

void AUTAttachment_LinkGun::HideEmitter ( int Index, unsigned long bHide )
{
	static UFunction* pFnHideEmitter = NULL;

	if ( ! pFnHideEmitter )
		pFnHideEmitter = (UFunction*) UObject::GObjObjects()->Data[ 50201 ];

	AUTAttachment_LinkGun_execHideEmitter_Parms HideEmitter_Parms;
	HideEmitter_Parms.Index = Index;
	HideEmitter_Parms.bHide = bHide;

	this->ProcessEvent ( pFnHideEmitter, &HideEmitter_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.KillEndpointEffect
// [0x00020102] 
// Parameters infos:

void AUTAttachment_LinkGun::KillEndpointEffect ( )
{
	static UFunction* pFnKillEndpointEffect = NULL;

	if ( ! pFnKillEndpointEffect )
		pFnKillEndpointEffect = (UFunction*) UObject::GObjObjects()->Data[ 50200 ];

	AUTAttachment_LinkGun_execKillEndpointEffect_Parms KillEndpointEffect_Parms;

	this->ProcessEvent ( pFnKillEndpointEffect, &KillEndpointEffect_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.UpdateBeam
// [0x00820102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTAttachment_LinkGun::UpdateBeam ( unsigned char FireModeNum )
{
	static UFunction* pFnUpdateBeam = NULL;

	if ( ! pFnUpdateBeam )
		pFnUpdateBeam = (UFunction*) UObject::GObjObjects()->Data[ 50183 ];

	AUTAttachment_LinkGun_execUpdateBeam_Parms UpdateBeam_Parms;
	UpdateBeam_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnUpdateBeam, &UpdateBeam_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTAttachment_LinkGun::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 50182 ];

	AUTAttachment_LinkGun_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.StopThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:

void AUTAttachment_LinkGun::StopThirdPersonFireEffects ( )
{
	static UFunction* pFnStopThirdPersonFireEffects = NULL;

	if ( ! pFnStopThirdPersonFireEffects )
		pFnStopThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 50181 ];

	AUTAttachment_LinkGun_execStopThirdPersonFireEffects_Parms StopThirdPersonFireEffects_Parms;

	this->ProcessEvent ( pFnStopThirdPersonFireEffects, &StopThirdPersonFireEffects_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.StopMuzzleFlash
// [0x00020102] 
// Parameters infos:

void AUTAttachment_LinkGun::StopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 50180 ];

	AUTAttachment_LinkGun_execStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.SetImpactedActor
// [0x00020102] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void AUTAttachment_LinkGun::SetImpactedActor ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnSetImpactedActor = NULL;

	if ( ! pFnSetImpactedActor )
		pFnSetImpactedActor = (UFunction*) UObject::GObjObjects()->Data[ 50167 ];

	AUTAttachment_LinkGun_execSetImpactedActor_Parms SetImpactedActor_Parms;
	SetImpactedActor_Parms.HitActor = HitActor;
	memcpy ( &SetImpactedActor_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SetImpactedActor_Parms.HitNormal, &HitNormal, 0xC );
	memcpy ( &SetImpactedActor_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnSetImpactedActor, &SetImpactedActor_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.SetSkin
// [0x00020102] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void AUTAttachment_LinkGun::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 50165 ];

	AUTAttachment_LinkGun_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void AUTAttachment_LinkGun::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 50162 ];

	AUTAttachment_LinkGun_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTAttachment_LinkGun.GetTeamMuzzleFlashTemplate
// [0x00020002] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamNum                        ( CPF_Parm )

class UParticleSystem* AUTAttachment_LinkGun::GetTeamMuzzleFlashTemplate ( unsigned char TeamNum )
{
	static UFunction* pFnGetTeamMuzzleFlashTemplate = NULL;

	if ( ! pFnGetTeamMuzzleFlashTemplate )
		pFnGetTeamMuzzleFlashTemplate = (UFunction*) UObject::GObjObjects()->Data[ 50159 ];

	AUTAttachment_LinkGun_execGetTeamMuzzleFlashTemplate_Parms GetTeamMuzzleFlashTemplate_Parms;
	GetTeamMuzzleFlashTemplate_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetTeamMuzzleFlashTemplate, &GetTeamMuzzleFlashTemplate_Parms, NULL );

	return GetTeamMuzzleFlashTemplate_Parms.ReturnValue;
};

// Function UTGame.UTAttachment_LinkGun.GetTeamBeamInfo
// [0x00426002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )
// struct FColor                  BeamColor                      ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// class UParticleSystem*         BeamSystem                     ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// class UParticleSystem*         BeamEndpointTemplate           ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void AUTAttachment_LinkGun::GetTeamBeamInfo ( unsigned char TeamNum, struct FColor* BeamColor, class UParticleSystem** BeamSystem, class UParticleSystem** BeamEndpointTemplate )
{
	static UFunction* pFnGetTeamBeamInfo = NULL;

	if ( ! pFnGetTeamBeamInfo )
		pFnGetTeamBeamInfo = (UFunction*) UObject::GObjObjects()->Data[ 50154 ];

	AUTAttachment_LinkGun_execGetTeamBeamInfo_Parms GetTeamBeamInfo_Parms;
	GetTeamBeamInfo_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetTeamBeamInfo, &GetTeamBeamInfo_Parms, NULL );

	if ( BeamColor )
		memcpy ( BeamColor, &GetTeamBeamInfo_Parms.BeamColor, 0x4 );

	if ( BeamSystem )
		*BeamSystem = GetTeamBeamInfo_Parms.BeamSystem;

	if ( BeamEndpointTemplate )
		*BeamEndpointTemplate = GetTeamBeamInfo_Parms.BeamEndpointTemplate;
};

// Function UTGame.UTLinkGunMuzzleFlashLight.SetTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewTeam                        ( CPF_Parm )

void UUTLinkGunMuzzleFlashLight::SetTeam ( unsigned char NewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 57245 ];

	UUTLinkGunMuzzleFlashLight_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.NewTeam = NewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function UTGame.UTAutoCrouchVolume.CrouchTimer
// [0x00020102] 
// Parameters infos:

void AUTAutoCrouchVolume::CrouchTimer ( )
{
	static UFunction* pFnCrouchTimer = NULL;

	if ( ! pFnCrouchTimer )
		pFnCrouchTimer = (UFunction*) UObject::GObjObjects()->Data[ 50261 ];

	AUTAutoCrouchVolume_execCrouchTimer_Parms CrouchTimer_Parms;

	this->ProcessEvent ( pFnCrouchTimer, &CrouchTimer_Parms, NULL );
};

// Function UTGame.UTAutoCrouchVolume.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTAutoCrouchVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50258 ];

	AUTAutoCrouchVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function UTGame.UTAutoCrouchVolume.SetCrouch
// [0x00820102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// unsigned char                  bCrouch                        ( CPF_Parm )

void AUTAutoCrouchVolume::SetCrouch ( class APawn* P, unsigned char bCrouch )
{
	static UFunction* pFnSetCrouch = NULL;

	if ( ! pFnSetCrouch )
		pFnSetCrouch = (UFunction*) UObject::GObjObjects()->Data[ 50251 ];

	AUTAutoCrouchVolume_execSetCrouch_Parms SetCrouch_Parms;
	SetCrouch_Parms.P = P;
	SetCrouch_Parms.bCrouch = bCrouch;

	this->ProcessEvent ( pFnSetCrouch, &SetCrouch_Parms, NULL );
};

// Function UTGame.UTAutoCrouchVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTAutoCrouchVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50245 ];

	AUTAutoCrouchVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTAvoidMarker.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTAvoidMarker::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 50268 ];

	AUTAvoidMarker_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTDefensePoint.GetMoveTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTDefensePoint::GetMoveTarget ( )
{
	static UFunction* pFnGetMoveTarget = NULL;

	if ( ! pFnGetMoveTarget )
		pFnGetMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 51131 ];

	AUTDefensePoint_execGetMoveTarget_Parms GetMoveTarget_Parms;

	this->ProcessEvent ( pFnGetMoveTarget, &GetMoveTarget_Parms, NULL );

	return GetMoveTarget_Parms.ReturnValue;
};

// Function UTGame.UTDefensePoint.HigherPriorityThan
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTDefensePoint*         S                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )
// unsigned long                  bAutoPointsInUse               ( CPF_Parm )
// unsigned long                  bPrioritizeSameGroup           ( CPF_Parm )
// int                            NumChecked                     ( CPF_Parm | CPF_OutParm )

bool AUTDefensePoint::HigherPriorityThan ( class AUTDefensePoint* S, class AUTBot* B, unsigned long bAutoPointsInUse, unsigned long bPrioritizeSameGroup, int* NumChecked )
{
	static UFunction* pFnHigherPriorityThan = NULL;

	if ( ! pFnHigherPriorityThan )
		pFnHigherPriorityThan = (UFunction*) UObject::GObjObjects()->Data[ 54944 ];

	AUTDefensePoint_execHigherPriorityThan_Parms HigherPriorityThan_Parms;
	HigherPriorityThan_Parms.S = S;
	HigherPriorityThan_Parms.B = B;
	HigherPriorityThan_Parms.bAutoPointsInUse = bAutoPointsInUse;
	HigherPriorityThan_Parms.bPrioritizeSameGroup = bPrioritizeSameGroup;

	this->ProcessEvent ( pFnHigherPriorityThan, &HigherPriorityThan_Parms, NULL );

	if ( NumChecked )
		*NumChecked = HigherPriorityThan_Parms.NumChecked;

	return HigherPriorityThan_Parms.ReturnValue;
};

// Function UTGame.UTDefensePoint.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTDefensePoint::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55676 ];

	AUTDefensePoint_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTDefensePoint.CheckForErrors
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTDefensePoint::CheckForErrors ( )
{
	static UFunction* pFnCheckForErrors = NULL;

	if ( ! pFnCheckForErrors )
		pFnCheckForErrors = (UFunction*) UObject::GObjObjects()->Data[ 55674 ];

	AUTDefensePoint_execCheckForErrors_Parms CheckForErrors_Parms;

	this->ProcessEvent ( pFnCheckForErrors, &CheckForErrors_Parms, NULL );

	return CheckForErrors_Parms.ReturnValue;
};

// Function UTGame.UTDefensePoint.FreePoint
// [0x00020002] 
// Parameters infos:

void AUTDefensePoint::FreePoint ( )
{
	static UFunction* pFnFreePoint = NULL;

	if ( ! pFnFreePoint )
		pFnFreePoint = (UFunction*) UObject::GObjObjects()->Data[ 55673 ];

	AUTDefensePoint_execFreePoint_Parms FreePoint_Parms;

	this->ProcessEvent ( pFnFreePoint, &FreePoint_Parms, NULL );
};

// Function UTGame.UTDefensePoint.Reset
// [0x00020002] 
// Parameters infos:

void AUTDefensePoint::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 55672 ];

	AUTDefensePoint_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.GetPowerupStatName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTTimedPowerup::GetPowerupStatName ( )
{
	static UFunction* pFnGetPowerupStatName = NULL;

	if ( ! pFnGetPowerupStatName )
		pFnGetPowerupStatName = (UFunction*) UObject::GObjObjects()->Data[ 58658 ];

	AUTTimedPowerup_execGetPowerupStatName_Parms GetPowerupStatName_Parms;

	this->ProcessEvent ( pFnGetPowerupStatName, &GetPowerupStatName_Parms, NULL );

	return GetPowerupStatName_Parms.ReturnValue;
};

// Function UTGame.UTTimedPowerup.DetourWeight
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )
// float                          PathWeight                     ( CPF_Parm )

float AUTTimedPowerup::DetourWeight ( class APawn* Other, float PathWeight )
{
	static UFunction* pFnDetourWeight = NULL;

	if ( ! pFnDetourWeight )
		pFnDetourWeight = (UFunction*) UObject::GObjObjects()->Data[ 58654 ];

	AUTTimedPowerup_execDetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;

	this->ProcessEvent ( pFnDetourWeight, &DetourWeight_Parms, NULL );

	return DetourWeight_Parms.ReturnValue;
};

// Function UTGame.UTTimedPowerup.BotDesireability
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  PickupHolder                   ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTTimedPowerup::BotDesireability ( class AActor* PickupHolder, class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 58649 ];

	AUTTimedPowerup_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.PickupHolder = PickupHolder;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTTimedPowerup.TimeExpired
// [0x00020002] 
// Parameters infos:

void AUTTimedPowerup::TimeExpired ( )
{
	static UFunction* pFnTimeExpired = NULL;

	if ( ! pFnTimeExpired )
		pFnTimeExpired = (UFunction*) UObject::GObjObjects()->Data[ 58647 ];

	AUTTimedPowerup_execTimeExpired_Parms TimeExpired_Parms;

	this->ProcessEvent ( pFnTimeExpired, &TimeExpired_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool AUTTimedPowerup::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 58642 ];

	AUTTimedPowerup_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function UTGame.UTTimedPowerup.DisplayPowerup
// [0x00C20102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AUTHUD*                  HUD                            ( CPF_Parm )
// float                          ResolutionScale                ( CPF_Parm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void AUTTimedPowerup::DisplayPowerup ( class UCanvas* Canvas, class AUTHUD* HUD, float ResolutionScale, float* YPos )
{
	static UFunction* pFnDisplayPowerup = NULL;

	if ( ! pFnDisplayPowerup )
		pFnDisplayPowerup = (UFunction*) UObject::GObjObjects()->Data[ 58631 ];

	AUTTimedPowerup_execDisplayPowerup_Parms DisplayPowerup_Parms;
	DisplayPowerup_Parms.Canvas = Canvas;
	DisplayPowerup_Parms.HUD = HUD;
	DisplayPowerup_Parms.ResolutionScale = ResolutionScale;

	this->ProcessEvent ( pFnDisplayPowerup, &DisplayPowerup_Parms, NULL );

	if ( YPos )
		*YPos = DisplayPowerup_Parms.YPos;
};

// Function UTGame.UTTimedPowerup.TimeRemaingUpdated
// [0x00020102] 
// Parameters infos:

void AUTTimedPowerup::TimeRemaingUpdated ( )
{
	static UFunction* pFnTimeRemaingUpdated = NULL;

	if ( ! pFnTimeRemaingUpdated )
		pFnTimeRemaingUpdated = (UFunction*) UObject::GObjObjects()->Data[ 58630 ];

	AUTTimedPowerup_execTimeRemaingUpdated_Parms TimeRemaingUpdated_Parms;

	this->ProcessEvent ( pFnTimeRemaingUpdated, &TimeRemaingUpdated_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.ClientSetTimeRemaining
// [0x010201C2] 
// Parameters infos:
// float                          NewTimeRemaining               ( CPF_Parm )

void AUTTimedPowerup::ClientSetTimeRemaining ( float NewTimeRemaining )
{
	static UFunction* pFnClientSetTimeRemaining = NULL;

	if ( ! pFnClientSetTimeRemaining )
		pFnClientSetTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 58628 ];

	AUTTimedPowerup_execClientSetTimeRemaining_Parms ClientSetTimeRemaining_Parms;
	ClientSetTimeRemaining_Parms.NewTimeRemaining = NewTimeRemaining;

	this->ProcessEvent ( pFnClientSetTimeRemaining, &ClientSetTimeRemaining_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.ClientLostItem
// [0x010201C2] 
// Parameters infos:

void AUTTimedPowerup::ClientLostItem ( )
{
	static UFunction* pFnClientLostItem = NULL;

	if ( ! pFnClientLostItem )
		pFnClientLostItem = (UFunction*) UObject::GObjObjects()->Data[ 58627 ];

	AUTTimedPowerup_execClientLostItem_Parms ClientLostItem_Parms;

	this->ProcessEvent ( pFnClientLostItem, &ClientLostItem_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.AdjustPPEffects
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// unsigned long                  bRemove                        ( CPF_Parm )

void AUTTimedPowerup::AdjustPPEffects ( class APawn* P, unsigned long bRemove )
{
	static UFunction* pFnAdjustPPEffects = NULL;

	if ( ! pFnAdjustPPEffects )
		pFnAdjustPPEffects = (UFunction*) UObject::GObjObjects()->Data[ 58623 ];

	AUTTimedPowerup_execAdjustPPEffects_Parms AdjustPPEffects_Parms;
	AdjustPPEffects_Parms.P = P;
	AdjustPPEffects_Parms.bRemove = bRemove;

	this->ProcessEvent ( pFnAdjustPPEffects, &AdjustPPEffects_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.ClientGivenTo
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_Parm )

void AUTTimedPowerup::ClientGivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientGivenTo = NULL;

	if ( ! pFnClientGivenTo )
		pFnClientGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 58620 ];

	AUTTimedPowerup_execClientGivenTo_Parms ClientGivenTo_Parms;
	ClientGivenTo_Parms.NewOwner = NewOwner;
	ClientGivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientGivenTo, &ClientGivenTo_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.GivenTo
// [0x00024002] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void AUTTimedPowerup::GivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnGivenTo = NULL;

	if ( ! pFnGivenTo )
		pFnGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 58617 ];

	AUTTimedPowerup_execGivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.NewOwner = NewOwner;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnGivenTo, &GivenTo_Parms, NULL );
};

// Function UTGame.UTTimedPowerup.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTTimedPowerup::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58615 ];

	AUTTimedPowerup_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTHoldSpot.NotifyAnchorFindingResult
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        EndAnchor                      ( CPF_Parm )
// class APawn*                   RouteFinder                    ( CPF_Parm )

void AUTHoldSpot::eventNotifyAnchorFindingResult ( class ANavigationPoint* EndAnchor, class APawn* RouteFinder )
{
	static UFunction* pFnNotifyAnchorFindingResult = NULL;

	if ( ! pFnNotifyAnchorFindingResult )
		pFnNotifyAnchorFindingResult = (UFunction*) UObject::GObjObjects()->Data[ 56916 ];

	AUTHoldSpot_eventNotifyAnchorFindingResult_Parms NotifyAnchorFindingResult_Parms;
	NotifyAnchorFindingResult_Parms.EndAnchor = EndAnchor;
	NotifyAnchorFindingResult_Parms.RouteFinder = RouteFinder;

	this->ProcessEvent ( pFnNotifyAnchorFindingResult, &NotifyAnchorFindingResult_Parms, NULL );
};

// Function UTGame.UTHoldSpot.SpecifyEndAnchor
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   RouteFinder                    ( CPF_Parm )

class ANavigationPoint* AUTHoldSpot::eventSpecifyEndAnchor ( class APawn* RouteFinder )
{
	static UFunction* pFnSpecifyEndAnchor = NULL;

	if ( ! pFnSpecifyEndAnchor )
		pFnSpecifyEndAnchor = (UFunction*) UObject::GObjObjects()->Data[ 56913 ];

	AUTHoldSpot_eventSpecifyEndAnchor_Parms SpecifyEndAnchor_Parms;
	SpecifyEndAnchor_Parms.RouteFinder = RouteFinder;

	this->ProcessEvent ( pFnSpecifyEndAnchor, &SpecifyEndAnchor_Parms, NULL );

	return SpecifyEndAnchor_Parms.ReturnValue;
};

// Function UTGame.UTHoldSpot.FreePoint
// [0x00020002] 
// Parameters infos:

void AUTHoldSpot::FreePoint ( )
{
	static UFunction* pFnFreePoint = NULL;

	if ( ! pFnFreePoint )
		pFnFreePoint = (UFunction*) UObject::GObjObjects()->Data[ 56912 ];

	AUTHoldSpot_execFreePoint_Parms FreePoint_Parms;

	this->ProcessEvent ( pFnFreePoint, &FreePoint_Parms, NULL );
};

// Function UTGame.UTHoldSpot.GetMoveTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTHoldSpot::GetMoveTarget ( )
{
	static UFunction* pFnGetMoveTarget = NULL;

	if ( ! pFnGetMoveTarget )
		pFnGetMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 56910 ];

	AUTHoldSpot_execGetMoveTarget_Parms GetMoveTarget_Parms;

	this->ProcessEvent ( pFnGetMoveTarget, &GetMoveTarget_Parms, NULL );

	return GetMoveTarget_Parms.ReturnValue;
};

// Function UTGame.UTHoldSpot.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTHoldSpot::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56909 ];

	AUTHoldSpot_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTDeathmatch.CheckSpiceOfLifeAchievement
// [0x00020002] 
// Parameters infos:

void AUTDeathmatch::CheckSpiceOfLifeAchievement ( )
{
	static UFunction* pFnCheckSpiceOfLifeAchievement = NULL;

	if ( ! pFnCheckSpiceOfLifeAchievement )
		pFnCheckSpiceOfLifeAchievement = (UFunction*) UObject::GObjObjects()->Data[ 53688 ];

	AUTDeathmatch_execCheckSpiceOfLifeAchievement_Parms CheckSpiceOfLifeAchievement_Parms;

	this->ProcessEvent ( pFnCheckSpiceOfLifeAchievement, &CheckSpiceOfLifeAchievement_Parms, NULL );
};

// Function UTGame.UTDeathmatch.CheckAchievements
// [0x00020002] 
// Parameters infos:

void AUTDeathmatch::CheckAchievements ( )
{
	static UFunction* pFnCheckAchievements = NULL;

	if ( ! pFnCheckAchievements )
		pFnCheckAchievements = (UFunction*) UObject::GObjObjects()->Data[ 53687 ];

	AUTDeathmatch_execCheckAchievements_Parms CheckAchievements_Parms;

	this->ProcessEvent ( pFnCheckAchievements, &CheckAchievements_Parms, NULL );
};

// Function UTGame.UTDeathmatch.WriteOnlineStats
// [0x00020002] 
// Parameters infos:

void AUTDeathmatch::WriteOnlineStats ( )
{
	static UFunction* pFnWriteOnlineStats = NULL;

	if ( ! pFnWriteOnlineStats )
		pFnWriteOnlineStats = (UFunction*) UObject::GObjObjects()->Data[ 53686 ];

	AUTDeathmatch_execWriteOnlineStats_Parms WriteOnlineStats_Parms;

	this->ProcessEvent ( pFnWriteOnlineStats, &WriteOnlineStats_Parms, NULL );
};

// Function UTGame.UTDeathmatch.GetHandicapNeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

int AUTDeathmatch::GetHandicapNeed ( class APawn* Other )
{
	static UFunction* pFnGetHandicapNeed = NULL;

	if ( ! pFnGetHandicapNeed )
		pFnGetHandicapNeed = (UFunction*) UObject::GObjObjects()->Data[ 53682 ];

	AUTDeathmatch_execGetHandicapNeed_Parms GetHandicapNeed_Parms;
	GetHandicapNeed_Parms.Other = Other;

	this->ProcessEvent ( pFnGetHandicapNeed, &GetHandicapNeed_Parms, NULL );

	return GetHandicapNeed_Parms.ReturnValue;
};

// Function UTGame.UTDeathmatch.WantsPickups
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTDeathmatch::WantsPickups ( class AUTBot* B )
{
	static UFunction* pFnWantsPickups = NULL;

	if ( ! pFnWantsPickups )
		pFnWantsPickups = (UFunction*) UObject::GObjObjects()->Data[ 51317 ];

	AUTDeathmatch_execWantsPickups_Parms WantsPickups_Parms;
	WantsPickups_Parms.B = B;

	this->ProcessEvent ( pFnWantsPickups, &WantsPickups_Parms, NULL );

	return WantsPickups_Parms.ReturnValue;
};

// Function UTGame.UTLastSecondMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTLastSecondMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 57223 ];

	UUTLastSecondMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTLastSecondMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTLastSecondMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57217 ];

	UUTLastSecondMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTLastSecondMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTLastSecondMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57210 ];

	UUTLastSecondMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.PartiallyDuplicates
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch1                        ( CPF_Parm )
// int                            Switch2                        ( CPF_Parm )
// class UObject*                 OptionalObject1                ( CPF_Parm )
// class UObject*                 OptionalObject2                ( CPF_Parm )

bool UUTCarriedObjectMessage::PartiallyDuplicates ( int Switch1, int Switch2, class UObject* OptionalObject1, class UObject* OptionalObject2 )
{
	static UFunction* pFnPartiallyDuplicates = NULL;

	if ( ! pFnPartiallyDuplicates )
		pFnPartiallyDuplicates = (UFunction*) UObject::GObjObjects()->Data[ 52380 ];

	UUTCarriedObjectMessage_execPartiallyDuplicates_Parms PartiallyDuplicates_Parms;
	PartiallyDuplicates_Parms.Switch1 = Switch1;
	PartiallyDuplicates_Parms.Switch2 = Switch2;
	PartiallyDuplicates_Parms.OptionalObject1 = OptionalObject1;
	PartiallyDuplicates_Parms.OptionalObject2 = OptionalObject2;

	this->ProcessEvent ( pFnPartiallyDuplicates, &PartiallyDuplicates_Parms, NULL );

	return PartiallyDuplicates_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTCarriedObjectMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 52374 ];

	UUTCarriedObjectMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.ShouldRemoveFlagAnnouncement
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MyMessageIndex                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTCarriedObjectMessage::ShouldRemoveFlagAnnouncement ( int MyMessageIndex, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldRemoveFlagAnnouncement = NULL;

	if ( ! pFnShouldRemoveFlagAnnouncement )
		pFnShouldRemoveFlagAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 52369 ];

	UUTCarriedObjectMessage_execShouldRemoveFlagAnnouncement_Parms ShouldRemoveFlagAnnouncement_Parms;
	ShouldRemoveFlagAnnouncement_Parms.MyMessageIndex = MyMessageIndex;
	ShouldRemoveFlagAnnouncement_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldRemoveFlagAnnouncement_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldRemoveFlagAnnouncement, &ShouldRemoveFlagAnnouncement_Parms, NULL );

	return ShouldRemoveFlagAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTCarriedObjectMessage::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 52364 ];

	UUTCarriedObjectMessage_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTCarriedObjectMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 52357 ];

	UUTCarriedObjectMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTCarriedObjectMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 52354 ];

	UUTCarriedObjectMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTCarriedObjectMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 52349 ];

	UUTCarriedObjectMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTCarriedObjectMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTCarriedObjectMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 52340 ];

	UUTCarriedObjectMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTDmgType_Rocket.SpawnHitEffect
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UUTDmgType_Rocket::SpawnHitEffect ( class APawn* P, float Damage, struct FVector Momentum, struct FName BoneName, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHitEffect = NULL;

	if ( ! pFnSpawnHitEffect )
		pFnSpawnHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 55710 ];

	UUTDmgType_Rocket_execSpawnHitEffect_Parms SpawnHitEffect_Parms;
	SpawnHitEffect_Parms.P = P;
	SpawnHitEffect_Parms.Damage = Damage;
	memcpy ( &SpawnHitEffect_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &SpawnHitEffect_Parms.BoneName, &BoneName, 0x8 );
	memcpy ( &SpawnHitEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHitEffect, &SpawnHitEffect_Parms, NULL );
};

// Function UTGame.UTConsole.OutputTextLine
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UUTConsole::OutputTextLine ( struct FString Text )
{
	static UFunction* pFnOutputTextLine = NULL;

	if ( ! pFnOutputTextLine )
		pFnOutputTextLine = (UFunction*) UObject::GObjObjects()->Data[ 52616 ];

	UUTConsole_execOutputTextLine_Parms OutputTextLine_Parms;
	memcpy ( &OutputTextLine_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnOutputTextLine, &OutputTextLine_Parms, NULL );
};

// Function UTGame.UTConsole.InputKey
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   Key                            ( CPF_Parm )
// unsigned char                  Event                          ( CPF_Parm )
// float                          AmountDepressed                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGamepad                       ( CPF_OptionalParm | CPF_Parm )

bool UUTConsole::InputKey ( int ControllerId, struct FName Key, unsigned char Event, float AmountDepressed, unsigned long bGamepad )
{
	static UFunction* pFnInputKey = NULL;

	if ( ! pFnInputKey )
		pFnInputKey = (UFunction*) UObject::GObjObjects()->Data[ 52601 ];

	UUTConsole_execInputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy ( &InputKey_Parms.Key, &Key, 0x8 );
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;

	this->ProcessEvent ( pFnInputKey, &InputKey_Parms, NULL );

	return InputKey_Parms.ReturnValue;
};

// Function UTGame.UTConsolePlayerInput.CheckForDoubleClickMove
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

unsigned char UUTConsolePlayerInput::CheckForDoubleClickMove ( float DeltaTime )
{
	static UFunction* pFnCheckForDoubleClickMove = NULL;

	if ( ! pFnCheckForDoubleClickMove )
		pFnCheckForDoubleClickMove = (UFunction*) UObject::GObjObjects()->Data[ 52807 ];

	UUTConsolePlayerInput_execCheckForDoubleClickMove_Parms CheckForDoubleClickMove_Parms;
	CheckForDoubleClickMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckForDoubleClickMove, &CheckForDoubleClickMove_Parms, NULL );

	return CheckForDoubleClickMove_Parms.ReturnValue;
};

// Function UTGame.UTConsolePlayerInput.Jump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTConsolePlayerInput::Jump ( )
{
	static UFunction* pFnJump = NULL;

	if ( ! pFnJump )
		pFnJump = (UFunction*) UObject::GObjObjects()->Data[ 52806 ];

	UUTConsolePlayerInput_execJump_Parms Jump_Parms;

	this->ProcessEvent ( pFnJump, &Jump_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.SmartJump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTConsolePlayerInput::SmartJump ( )
{
	static UFunction* pFnSmartJump = NULL;

	if ( ! pFnSmartJump )
		pFnSmartJump = (UFunction*) UObject::GObjObjects()->Data[ 52804 ];

	UUTConsolePlayerInput_execSmartJump_Parms SmartJump_Parms;

	this->ProcessEvent ( pFnSmartJump, &SmartJump_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.DebugTargetFriction
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTConsolePlayerInput::DebugTargetFriction ( )
{
	static UFunction* pFnDebugTargetFriction = NULL;

	if ( ! pFnDebugTargetFriction )
		pFnDebugTargetFriction = (UFunction*) UObject::GObjObjects()->Data[ 52803 ];

	UUTConsolePlayerInput_execDebugTargetFriction_Parms DebugTargetFriction_Parms;

	this->ProcessEvent ( pFnDebugTargetFriction, &DebugTargetFriction_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.DebugTargetAdhesion
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTConsolePlayerInput::DebugTargetAdhesion ( )
{
	static UFunction* pFnDebugTargetAdhesion = NULL;

	if ( ! pFnDebugTargetAdhesion )
		pFnDebugTargetAdhesion = (UFunction*) UObject::GObjObjects()->Data[ 52802 ];

	UUTConsolePlayerInput_execDebugTargetAdhesion_Parms DebugTargetAdhesion_Parms;

	this->ProcessEvent ( pFnDebugTargetAdhesion, &DebugTargetAdhesion_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.DebugViewAcceleration
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UUTConsolePlayerInput::DebugViewAcceleration ( )
{
	static UFunction* pFnDebugViewAcceleration = NULL;

	if ( ! pFnDebugViewAcceleration )
		pFnDebugViewAcceleration = (UFunction*) UObject::GObjObjects()->Data[ 52801 ];

	UUTConsolePlayerInput_execDebugViewAcceleration_Parms DebugViewAcceleration_Parms;

	this->ProcessEvent ( pFnDebugViewAcceleration, &DebugViewAcceleration_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.ApplyTargetFriction
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AUTWeapon*               W                              ( CPF_Parm )

void UUTConsolePlayerInput::ApplyTargetFriction ( float DeltaTime, class AUTWeapon* W )
{
	static UFunction* pFnApplyTargetFriction = NULL;

	if ( ! pFnApplyTargetFriction )
		pFnApplyTargetFriction = (UFunction*) UObject::GObjObjects()->Data[ 52781 ];

	UUTConsolePlayerInput_execApplyTargetFriction_Parms ApplyTargetFriction_Parms;
	ApplyTargetFriction_Parms.DeltaTime = DeltaTime;
	ApplyTargetFriction_Parms.W = W;

	this->ProcessEvent ( pFnApplyTargetFriction, &ApplyTargetFriction_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.AdjustMouseSensitivity
// [0x00020002] 
// Parameters infos:
// float                          FOVScale                       ( CPF_Parm )

void UUTConsolePlayerInput::AdjustMouseSensitivity ( float FOVScale )
{
	static UFunction* pFnAdjustMouseSensitivity = NULL;

	if ( ! pFnAdjustMouseSensitivity )
		pFnAdjustMouseSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 52779 ];

	UUTConsolePlayerInput_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;

	this->ProcessEvent ( pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.ApplyTargetAdhesion
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AUTWeapon*               W                              ( CPF_Parm )
// int                            out_YawRot                     ( CPF_Parm | CPF_OutParm )
// int                            out_PitchRot                   ( CPF_Parm | CPF_OutParm )

void UUTConsolePlayerInput::ApplyTargetAdhesion ( float DeltaTime, class AUTWeapon* W, int* out_YawRot, int* out_PitchRot )
{
	static UFunction* pFnApplyTargetAdhesion = NULL;

	if ( ! pFnApplyTargetAdhesion )
		pFnApplyTargetAdhesion = (UFunction*) UObject::GObjObjects()->Data[ 52751 ];

	UUTConsolePlayerInput_execApplyTargetAdhesion_Parms ApplyTargetAdhesion_Parms;
	ApplyTargetAdhesion_Parms.DeltaTime = DeltaTime;
	ApplyTargetAdhesion_Parms.W = W;

	this->ProcessEvent ( pFnApplyTargetAdhesion, &ApplyTargetAdhesion_Parms, NULL );

	if ( out_YawRot )
		*out_YawRot = ApplyTargetAdhesion_Parms.out_YawRot;

	if ( out_PitchRot )
		*out_PitchRot = ApplyTargetAdhesion_Parms.out_PitchRot;
};

// Function UTGame.UTConsolePlayerInput.ApplyViewAcceleration
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUTConsolePlayerInput::ApplyViewAcceleration ( float DeltaTime )
{
	static UFunction* pFnApplyViewAcceleration = NULL;

	if ( ! pFnApplyViewAcceleration )
		pFnApplyViewAcceleration = (UFunction*) UObject::GObjObjects()->Data[ 52747 ];

	UUTConsolePlayerInput_execApplyViewAcceleration_Parms ApplyViewAcceleration_Parms;
	ApplyViewAcceleration_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAcceleration, &ApplyViewAcceleration_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.ApplyViewAutoVehiclePitchCentering
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUTConsolePlayerInput::ApplyViewAutoVehiclePitchCentering ( float DeltaTime )
{
	static UFunction* pFnApplyViewAutoVehiclePitchCentering = NULL;

	if ( ! pFnApplyViewAutoVehiclePitchCentering )
		pFnApplyViewAutoVehiclePitchCentering = (UFunction*) UObject::GObjObjects()->Data[ 52739 ];

	UUTConsolePlayerInput_execApplyViewAutoVehiclePitchCentering_Parms ApplyViewAutoVehiclePitchCentering_Parms;
	ApplyViewAutoVehiclePitchCentering_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAutoVehiclePitchCentering, &ApplyViewAutoVehiclePitchCentering_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.ApplyViewAutoPitchCentering
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUTConsolePlayerInput::ApplyViewAutoPitchCentering ( float DeltaTime )
{
	static UFunction* pFnApplyViewAutoPitchCentering = NULL;

	if ( ! pFnApplyViewAutoPitchCentering )
		pFnApplyViewAutoPitchCentering = (UFunction*) UObject::GObjObjects()->Data[ 52735 ];

	UUTConsolePlayerInput_execApplyViewAutoPitchCentering_Parms ApplyViewAutoPitchCentering_Parms;
	ApplyViewAutoPitchCentering_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAutoPitchCentering, &ApplyViewAutoPitchCentering_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UUTConsolePlayerInput::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 52730 ];

	UUTConsolePlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function UTGame.UTConsolePlayerInput.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void UUTConsolePlayerInput::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52729 ];

	UUTConsolePlayerInput_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTSeqEvent_FlagEvent.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqEvent_FlagEvent::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58322 ];

	UUTSeqEvent_FlagEvent_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTSeqEvent_FlagEvent.Trigger
// [0x00020002] 
// Parameters infos:
// struct FName                   EventType                      ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )

void UUTSeqEvent_FlagEvent::Trigger ( struct FName EventType, class AController* EventInstigator )
{
	static UFunction* pFnTrigger = NULL;

	if ( ! pFnTrigger )
		pFnTrigger = (UFunction*) UObject::GObjObjects()->Data[ 58315 ];

	UUTSeqEvent_FlagEvent_execTrigger_Parms Trigger_Parms;
	memcpy ( &Trigger_Parms.EventType, &EventType, 0x8 );
	Trigger_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnTrigger, &Trigger_Parms, NULL );
};

// Function UTGame.UTCTFBase.IsActive
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTCTFBase::eventIsActive ( )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 53059 ];

	AUTCTFBase_eventIsActive_Parms IsActive_Parms;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	return IsActive_Parms.ReturnValue;
};

// Function UTGame.UTCTFBase.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTCTFBase::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 53057 ];

	AUTCTFBase_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTCTFBase.SetAlarm
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNowOn                         ( CPF_Parm )

void AUTCTFBase::SetAlarm ( unsigned long bNowOn )
{
	static UFunction* pFnSetAlarm = NULL;

	if ( ! pFnSetAlarm )
		pFnSetAlarm = (UFunction*) UObject::GObjObjects()->Data[ 53055 ];

	AUTCTFBase_execSetAlarm_Parms SetAlarm_Parms;
	SetAlarm_Parms.bNowOn = bNowOn;

	this->ProcessEvent ( pFnSetAlarm, &SetAlarm_Parms, NULL );
};

// Function UTGame.UTCTFBase.GetFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTCarriedObject* AUTCTFBase::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = (UFunction*) UObject::GObjObjects()->Data[ 53053 ];

	AUTCTFBase_execGetFlag_Parms GetFlag_Parms;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	return GetFlag_Parms.ReturnValue;
};

// Function UTGame.UTCTFBase.ObjectiveChanged
// [0x00020002] 
// Parameters infos:

void AUTCTFBase::ObjectiveChanged ( )
{
	static UFunction* pFnObjectiveChanged = NULL;

	if ( ! pFnObjectiveChanged )
		pFnObjectiveChanged = (UFunction*) UObject::GObjObjects()->Data[ 53051 ];

	AUTCTFBase_execObjectiveChanged_Parms ObjectiveChanged_Parms;

	this->ProcessEvent ( pFnObjectiveChanged, &ObjectiveChanged_Parms, NULL );
};

// Function UTGame.UTCTFBase.GetLocationSpeechFor
// [0x00020102] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )

class USoundNodeWave* AUTCTFBase::GetLocationSpeechFor ( class APlayerController* PC, int LocationSpeechOffset, int MessageIndex )
{
	static UFunction* pFnGetLocationSpeechFor = NULL;

	if ( ! pFnGetLocationSpeechFor )
		pFnGetLocationSpeechFor = (UFunction*) UObject::GObjObjects()->Data[ 53046 ];

	AUTCTFBase_execGetLocationSpeechFor_Parms GetLocationSpeechFor_Parms;
	GetLocationSpeechFor_Parms.PC = PC;
	GetLocationSpeechFor_Parms.LocationSpeechOffset = LocationSpeechOffset;
	GetLocationSpeechFor_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnGetLocationSpeechFor, &GetLocationSpeechFor_Parms, NULL );

	return GetLocationSpeechFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFBase.GetLocationMessageIndex
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   StatusPawn                     ( CPF_Parm )

int AUTCTFBase::GetLocationMessageIndex ( class AUTBot* B, class APawn* StatusPawn )
{
	static UFunction* pFnGetLocationMessageIndex = NULL;

	if ( ! pFnGetLocationMessageIndex )
		pFnGetLocationMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 53040 ];

	AUTCTFBase_execGetLocationMessageIndex_Parms GetLocationMessageIndex_Parms;
	GetLocationMessageIndex_Parms.B = B;
	GetLocationMessageIndex_Parms.StatusPawn = StatusPawn;

	this->ProcessEvent ( pFnGetLocationMessageIndex, &GetLocationMessageIndex_Parms, NULL );

	return GetLocationMessageIndex_Parms.ReturnValue;
};

// Function UTGame.UTCTFBase.GetBestViewTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* AUTCTFBase::eventGetBestViewTarget ( )
{
	static UFunction* pFnGetBestViewTarget = NULL;

	if ( ! pFnGetBestViewTarget )
		pFnGetBestViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 53038 ];

	AUTCTFBase_eventGetBestViewTarget_Parms GetBestViewTarget_Parms;

	this->ProcessEvent ( pFnGetBestViewTarget, &GetBestViewTarget_Parms, NULL );

	return GetBestViewTarget_Parms.ReturnValue;
};

// Function UTGame.UTCTFBase.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTCTFBase::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53035 ];

	AUTCTFBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTCTFFlag.SetFlagDynamicLightToNotBeDynamic
// [0x00020002] 
// Parameters infos:

void AUTCTFFlag::SetFlagDynamicLightToNotBeDynamic ( )
{
	static UFunction* pFnSetFlagDynamicLightToNotBeDynamic = NULL;

	if ( ! pFnSetFlagDynamicLightToNotBeDynamic )
		pFnSetFlagDynamicLightToNotBeDynamic = (UFunction*) UObject::GObjObjects()->Data[ 53135 ];

	AUTCTFFlag_execSetFlagDynamicLightToNotBeDynamic_Parms SetFlagDynamicLightToNotBeDynamic_Parms;

	this->ProcessEvent ( pFnSetFlagDynamicLightToNotBeDynamic, &SetFlagDynamicLightToNotBeDynamic_Parms, NULL );
};

// Function UTGame.UTCTFFlag.SetFlagPropertiesToStationaryFlagState
// [0x00020002] 
// Parameters infos:

void AUTCTFFlag::SetFlagPropertiesToStationaryFlagState ( )
{
	static UFunction* pFnSetFlagPropertiesToStationaryFlagState = NULL;

	if ( ! pFnSetFlagPropertiesToStationaryFlagState )
		pFnSetFlagPropertiesToStationaryFlagState = (UFunction*) UObject::GObjObjects()->Data[ 53134 ];

	AUTCTFFlag_execSetFlagPropertiesToStationaryFlagState_Parms SetFlagPropertiesToStationaryFlagState_Parms;

	this->ProcessEvent ( pFnSetFlagPropertiesToStationaryFlagState, &SetFlagPropertiesToStationaryFlagState_Parms, NULL );
};

// Function UTGame.UTCTFFlag.Drop
// [0x00024002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void AUTCTFFlag::Drop ( class AController* Killer )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 53132 ];

	AUTCTFFlag_execDrop_Parms Drop_Parms;
	Drop_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );
};

// Function UTGame.UTCTFFlag.CustomFadeOutEffects
// [0x00020102] 
// Parameters infos:

void AUTCTFFlag::CustomFadeOutEffects ( )
{
	static UFunction* pFnCustomFadeOutEffects = NULL;

	if ( ! pFnCustomFadeOutEffects )
		pFnCustomFadeOutEffects = (UFunction*) UObject::GObjObjects()->Data[ 53109 ];

	AUTCTFFlag_execCustomFadeOutEffects_Parms CustomFadeOutEffects_Parms;

	this->ProcessEvent ( pFnCustomFadeOutEffects, &CustomFadeOutEffects_Parms, NULL );
};

// Function UTGame.UTCTFFlag.bringUpBrightOff
// [0x00020102] 
// Parameters infos:

void AUTCTFFlag::bringUpBrightOff ( )
{
	static UFunction* pFnbringUpBrightOff = NULL;

	if ( ! pFnbringUpBrightOff )
		pFnbringUpBrightOff = (UFunction*) UObject::GObjObjects()->Data[ 53107 ];

	AUTCTFFlag_execbringUpBrightOff_Parms bringUpBrightOff_Parms;

	this->ProcessEvent ( pFnbringUpBrightOff, &bringUpBrightOff_Parms, NULL );
};

// Function UTGame.UTCTFFlag.CustomRespawnEffects
// [0x00020102] 
// Parameters infos:

void AUTCTFFlag::CustomRespawnEffects ( )
{
	static UFunction* pFnCustomRespawnEffects = NULL;

	if ( ! pFnCustomRespawnEffects )
		pFnCustomRespawnEffects = (UFunction*) UObject::GObjObjects()->Data[ 53105 ];

	AUTCTFFlag_execCustomRespawnEffects_Parms CustomRespawnEffects_Parms;

	this->ProcessEvent ( pFnCustomRespawnEffects, &CustomRespawnEffects_Parms, NULL );
};

// Function UTGame.UTCTFFlag.SameTeamTouch
// [0x00020000] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTCTFFlag::SameTeamTouch ( class AController* C )
{
	static UFunction* pFnSameTeamTouch = NULL;

	if ( ! pFnSameTeamTouch )
		pFnSameTeamTouch = (UFunction*) UObject::GObjObjects()->Data[ 53103 ];

	AUTCTFFlag_execSameTeamTouch_Parms SameTeamTouch_Parms;
	SameTeamTouch_Parms.C = C;

	this->ProcessEvent ( pFnSameTeamTouch, &SameTeamTouch_Parms, NULL );
};

// Function UTGame.UTCTFFlag.ValidHolder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTCTFFlag::ValidHolder ( class AActor* Other )
{
	static UFunction* pFnValidHolder = NULL;

	if ( ! pFnValidHolder )
		pFnValidHolder = (UFunction*) UObject::GObjObjects()->Data[ 53099 ];

	AUTCTFFlag_execValidHolder_Parms ValidHolder_Parms;
	ValidHolder_Parms.Other = Other;

	this->ProcessEvent ( pFnValidHolder, &ValidHolder_Parms, NULL );

	return ValidHolder_Parms.ReturnValue;
};

// Function UTGame.UTCTFFlag.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTCTFFlag::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 53090 ];

	AUTCTFFlag_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function UTGame.UTCTFFlag.ClientReturnedHome
// [0x00020102] 
// Parameters infos:

void AUTCTFFlag::ClientReturnedHome ( )
{
	static UFunction* pFnClientReturnedHome = NULL;

	if ( ! pFnClientReturnedHome )
		pFnClientReturnedHome = (UFunction*) UObject::GObjObjects()->Data[ 53089 ];

	AUTCTFFlag_execClientReturnedHome_Parms ClientReturnedHome_Parms;

	this->ProcessEvent ( pFnClientReturnedHome, &ClientReturnedHome_Parms, NULL );
};

// Function UTGame.UTCTFFlag.ShouldMinimapRenderFor
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )

bool AUTCTFFlag::ShouldMinimapRenderFor ( class APlayerController* PC )
{
	static UFunction* pFnShouldMinimapRenderFor = NULL;

	if ( ! pFnShouldMinimapRenderFor )
		pFnShouldMinimapRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 53086 ];

	AUTCTFFlag_execShouldMinimapRenderFor_Parms ShouldMinimapRenderFor_Parms;
	ShouldMinimapRenderFor_Parms.PC = PC;

	this->ProcessEvent ( pFnShouldMinimapRenderFor, &ShouldMinimapRenderFor_Parms, NULL );

	return ShouldMinimapRenderFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFFlag.OnBaseChainChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTCTFFlag::eventOnBaseChainChanged ( )
{
	static UFunction* pFnOnBaseChainChanged = NULL;

	if ( ! pFnOnBaseChainChanged )
		pFnOnBaseChainChanged = (UFunction*) UObject::GObjObjects()->Data[ 53084 ];

	AUTCTFFlag_eventOnBaseChainChanged_Parms OnBaseChainChanged_Parms;

	this->ProcessEvent ( pFnOnBaseChainChanged, &OnBaseChainChanged_Parms, NULL );
};

// Function UTGame.UTCTFFlag.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTCTFFlag::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53080 ];

	AUTCTFFlag_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTCTFFlag.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTCTFFlag::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53078 ];

	AUTCTFFlag_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTCTFFlag.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTCTFFlag::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 53076 ];

	AUTCTFFlag_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTCTFGame.GetAutoObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )

class AActor* AUTCTFGame::GetAutoObjectiveFor ( class AUTPlayerController* PC )
{
	static UFunction* pFnGetAutoObjectiveFor = NULL;

	if ( ! pFnGetAutoObjectiveFor )
		pFnGetAutoObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 54007 ];

	AUTCTFGame_execGetAutoObjectiveFor_Parms GetAutoObjectiveFor_Parms;
	GetAutoObjectiveFor_Parms.PC = PC;

	this->ProcessEvent ( pFnGetAutoObjectiveFor, &GetAutoObjectiveFor_Parms, NULL );

	return GetAutoObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.ViewObjective
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void AUTCTFGame::ViewObjective ( class APlayerController* PC )
{
	static UFunction* pFnViewObjective = NULL;

	if ( ! pFnViewObjective )
		pFnViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 54004 ];

	AUTCTFGame_execViewObjective_Parms ViewObjective_Parms;
	ViewObjective_Parms.PC = PC;

	this->ProcessEvent ( pFnViewObjective, &ViewObjective_Parms, NULL );
};

// Function UTGame.UTCTFGame.ScoreFlag
// [0x00820002] 
// Parameters infos:
// class AController*             Scorer                         ( CPF_Parm )
// class AUTCTFFlag*              theFlag                        ( CPF_Parm )

void AUTCTFGame::ScoreFlag ( class AController* Scorer, class AUTCTFFlag* theFlag )
{
	static UFunction* pFnScoreFlag = NULL;

	if ( ! pFnScoreFlag )
		pFnScoreFlag = (UFunction*) UObject::GObjObjects()->Data[ 53986 ];

	AUTCTFGame_execScoreFlag_Parms ScoreFlag_Parms;
	ScoreFlag_Parms.Scorer = Scorer;
	ScoreFlag_Parms.theFlag = theFlag;

	this->ProcessEvent ( pFnScoreFlag, &ScoreFlag_Parms, NULL );
};

// Function UTGame.UTCTFGame.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool AUTCTFGame::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 53979 ];

	AUTCTFGame_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.WantFastSpawnFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           B                              ( CPF_Parm )

bool AUTCTFGame::WantFastSpawnFor ( class AAIController* B )
{
	static UFunction* pFnWantFastSpawnFor = NULL;

	if ( ! pFnWantFastSpawnFor )
		pFnWantFastSpawnFor = (UFunction*) UObject::GObjObjects()->Data[ 53975 ];

	AUTCTFGame_execWantFastSpawnFor_Parms WantFastSpawnFor_Parms;
	WantFastSpawnFor_Parms.B = B;

	this->ProcessEvent ( pFnWantFastSpawnFor, &WantFastSpawnFor_Parms, NULL );

	return WantFastSpawnFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.NearGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTCTFGame::NearGoal ( class AController* C )
{
	static UFunction* pFnNearGoal = NULL;

	if ( ! pFnNearGoal )
		pFnNearGoal = (UFunction*) UObject::GObjObjects()->Data[ 53971 ];

	AUTCTFGame_execNearGoal_Parms NearGoal_Parms;
	NearGoal_Parms.C = C;

	this->ProcessEvent ( pFnNearGoal, &NearGoal_Parms, NULL );

	return NearGoal_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.RegisterFlag
// [0x00020002] 
// Parameters infos:
// class AUTCTFFlag*              F                              ( CPF_Parm )
// int                            TeamIndex                      ( CPF_Parm )

void AUTCTFGame::RegisterFlag ( class AUTCTFFlag* F, int TeamIndex )
{
	static UFunction* pFnRegisterFlag = NULL;

	if ( ! pFnRegisterFlag )
		pFnRegisterFlag = (UFunction*) UObject::GObjObjects()->Data[ 53968 ];

	AUTCTFGame_execRegisterFlag_Parms RegisterFlag_Parms;
	RegisterFlag_Parms.F = F;
	RegisterFlag_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnRegisterFlag, &RegisterFlag_Parms, NULL );
};

// Function UTGame.UTCTFGame.GetLocationFor
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// class AActor*                  LocationObject                 ( CPF_Parm | CPF_OutParm )
// int                            MessageIndex                   ( CPF_Parm | CPF_OutParm )

bool AUTCTFGame::GetLocationFor ( class APawn* StatusPawn, int LocationSpeechOffset, class AActor** LocationObject, int* MessageIndex )
{
	static UFunction* pFnGetLocationFor = NULL;

	if ( ! pFnGetLocationFor )
		pFnGetLocationFor = (UFunction*) UObject::GObjObjects()->Data[ 53959 ];

	AUTCTFGame_execGetLocationFor_Parms GetLocationFor_Parms;
	GetLocationFor_Parms.StatusPawn = StatusPawn;
	GetLocationFor_Parms.LocationSpeechOffset = LocationSpeechOffset;

	this->ProcessEvent ( pFnGetLocationFor, &GetLocationFor_Parms, NULL );

	if ( LocationObject )
		*LocationObject = GetLocationFor_Parms.LocationObject;

	if ( MessageIndex )
		*MessageIndex = GetLocationFor_Parms.MessageIndex;

	return GetLocationFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.GetHandicapNeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

int AUTCTFGame::GetHandicapNeed ( class APawn* Other )
{
	static UFunction* pFnGetHandicapNeed = NULL;

	if ( ! pFnGetHandicapNeed )
		pFnGetHandicapNeed = (UFunction*) UObject::GObjObjects()->Data[ 53956 ];

	AUTCTFGame_execGetHandicapNeed_Parms GetHandicapNeed_Parms;
	GetHandicapNeed_Parms.Other = Other;

	this->ProcessEvent ( pFnGetHandicapNeed, &GetHandicapNeed_Parms, NULL );

	return GetHandicapNeed_Parms.ReturnValue;
};

// Function UTGame.UTCTFGame.SetEndGameFocus
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )

void AUTCTFGame::SetEndGameFocus ( class APlayerReplicationInfo* Winner )
{
	static UFunction* pFnSetEndGameFocus = NULL;

	if ( ! pFnSetEndGameFocus )
		pFnSetEndGameFocus = (UFunction*) UObject::GObjObjects()->Data[ 53953 ];

	AUTCTFGame_execSetEndGameFocus_Parms SetEndGameFocus_Parms;
	SetEndGameFocus_Parms.Winner = Winner;

	this->ProcessEvent ( pFnSetEndGameFocus, &SetEndGameFocus_Parms, NULL );
};

// Function UTGame.UTCTFGame.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTCTFGame::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53947 ];

	AUTCTFGame_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTTeamGame.ProcessSpeechRecognition
// [0x00420002] 
// Parameters infos:
// class AUTPlayerController*     Speaker                        ( CPF_Parm )
// TArray< struct FSpeechRecognizedWord > Words                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamGame::ProcessSpeechRecognition ( class AUTPlayerController* Speaker, TArray< struct FSpeechRecognizedWord >* Words )
{
	static UFunction* pFnProcessSpeechRecognition = NULL;

	if ( ! pFnProcessSpeechRecognition )
		pFnProcessSpeechRecognition = (UFunction*) UObject::GObjObjects()->Data[ 53936 ];

	AUTTeamGame_execProcessSpeechRecognition_Parms ProcessSpeechRecognition_Parms;
	ProcessSpeechRecognition_Parms.Speaker = Speaker;

	this->ProcessEvent ( pFnProcessSpeechRecognition, &ProcessSpeechRecognition_Parms, NULL );

	if ( Words )
		memcpy ( Words, &ProcessSpeechRecognition_Parms.Words, 0xC );
};

// Function UTGame.UTTeamGame.ProcessSpeechOrders
// [0x00420002] 
// Parameters infos:
// class AUTPlayerController*     Speaker                        ( CPF_Parm )
// TArray< struct FSpeechRecognizedWord > Words                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< class AUTBot* >        Recipients                     ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamGame::ProcessSpeechOrders ( class AUTPlayerController* Speaker, TArray< struct FSpeechRecognizedWord >* Words, TArray< class AUTBot* >* Recipients )
{
	static UFunction* pFnProcessSpeechOrders = NULL;

	if ( ! pFnProcessSpeechOrders )
		pFnProcessSpeechOrders = (UFunction*) UObject::GObjObjects()->Data[ 53926 ];

	AUTTeamGame_execProcessSpeechOrders_Parms ProcessSpeechOrders_Parms;
	ProcessSpeechOrders_Parms.Speaker = Speaker;

	this->ProcessEvent ( pFnProcessSpeechOrders, &ProcessSpeechOrders_Parms, NULL );

	if ( Words )
		memcpy ( Words, &ProcessSpeechOrders_Parms.Words, 0xC );

	if ( Recipients )
		memcpy ( Recipients, &ProcessSpeechOrders_Parms.Recipients, 0xC );
};

// Function UTGame.UTTeamGame.ParseSpeechRecipients
// [0x00420002] 
// Parameters infos:
// class AUTPlayerController*     Speaker                        ( CPF_Parm )
// TArray< struct FSpeechRecognizedWord > Words                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// TArray< class AUTBot* >        Recipients                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamGame::ParseSpeechRecipients ( class AUTPlayerController* Speaker, TArray< struct FSpeechRecognizedWord >* Words, TArray< class AUTBot* >* Recipients )
{
	static UFunction* pFnParseSpeechRecipients = NULL;

	if ( ! pFnParseSpeechRecipients )
		pFnParseSpeechRecipients = (UFunction*) UObject::GObjObjects()->Data[ 53914 ];

	AUTTeamGame_execParseSpeechRecipients_Parms ParseSpeechRecipients_Parms;
	ParseSpeechRecipients_Parms.Speaker = Speaker;

	this->ProcessEvent ( pFnParseSpeechRecipients, &ParseSpeechRecipients_Parms, NULL );

	if ( Words )
		memcpy ( Words, &ParseSpeechRecipients_Parms.Words, 0xC );

	if ( Recipients )
		memcpy ( Recipients, &ParseSpeechRecipients_Parms.Recipients, 0xC );
};

// Function UTGame.UTTeamGame.HandleSeamlessTravelPlayer
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void AUTTeamGame::eventHandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

	if ( ! pFnHandleSeamlessTravelPlayer )
		pFnHandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53911 ];

	AUTTeamGame_eventHandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;

	this->ProcessEvent ( pFnHandleSeamlessTravelPlayer, &HandleSeamlessTravelPlayer_Parms, NULL );

	if ( C )
		*C = HandleSeamlessTravelPlayer_Parms.C;
};

// Function UTGame.UTTeamGame.Logout
// [0x00020002] 
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void AUTTeamGame::Logout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 53906 ];

	AUTTeamGame_execLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function UTGame.UTTeamGame.GetSeamlessTravelActorList
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bToEntry                       ( CPF_Parm )
// TArray< class AActor* >        ActorList                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamGame::eventGetSeamlessTravelActorList ( unsigned long bToEntry, TArray< class AActor* >* ActorList )
{
	static UFunction* pFnGetSeamlessTravelActorList = NULL;

	if ( ! pFnGetSeamlessTravelActorList )
		pFnGetSeamlessTravelActorList = (UFunction*) UObject::GObjObjects()->Data[ 53901 ];

	AUTTeamGame_eventGetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;

	this->ProcessEvent ( pFnGetSeamlessTravelActorList, &GetSeamlessTravelActorList_Parms, NULL );

	if ( ActorList )
		memcpy ( ActorList, &GetSeamlessTravelActorList_Parms.ActorList, 0xC );
};

// Function UTGame.UTTeamGame.ShowPathTo
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void AUTTeamGame::ShowPathTo ( class APlayerController* P, int TeamNum )
{
	static UFunction* pFnShowPathTo = NULL;

	if ( ! pFnShowPathTo )
		pFnShowPathTo = (UFunction*) UObject::GObjObjects()->Data[ 53895 ];

	AUTTeamGame_execShowPathTo_Parms ShowPathTo_Parms;
	ShowPathTo_Parms.P = P;
	ShowPathTo_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnShowPathTo, &ShowPathTo_Parms, NULL );
};

// Function UTGame.UTTeamGame.AllowClientToTeleport
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* ClientPRI                      ( CPF_Parm )
// class AActor*                  DestinationActor               ( CPF_Parm )

bool AUTTeamGame::AllowClientToTeleport ( class AUTPlayerReplicationInfo* ClientPRI, class AActor* DestinationActor )
{
	static UFunction* pFnAllowClientToTeleport = NULL;

	if ( ! pFnAllowClientToTeleport )
		pFnAllowClientToTeleport = (UFunction*) UObject::GObjObjects()->Data[ 53891 ];

	AUTTeamGame_execAllowClientToTeleport_Parms AllowClientToTeleport_Parms;
	AllowClientToTeleport_Parms.ClientPRI = ClientPRI;
	AllowClientToTeleport_Parms.DestinationActor = DestinationActor;

	this->ProcessEvent ( pFnAllowClientToTeleport, &AllowClientToTeleport_Parms, NULL );

	return AllowClientToTeleport_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.OverridePRI
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class APlayerReplicationInfo*  OldPRI                         ( CPF_Parm )

void AUTTeamGame::OverridePRI ( class APlayerController* PC, class APlayerReplicationInfo* OldPRI )
{
	static UFunction* pFnOverridePRI = NULL;

	if ( ! pFnOverridePRI )
		pFnOverridePRI = (UFunction*) UObject::GObjObjects()->Data[ 53886 ];

	AUTTeamGame_execOverridePRI_Parms OverridePRI_Parms;
	OverridePRI_Parms.PC = PC;
	OverridePRI_Parms.OldPRI = OldPRI;

	this->ProcessEvent ( pFnOverridePRI, &OverridePRI_Parms, NULL );
};

// Function UTGame.UTTeamGame.AnnounceScore
// [0x00020002] 
// Parameters infos:
// int                            ScoringTeam                    ( CPF_Parm )

void AUTTeamGame::AnnounceScore ( int ScoringTeam )
{
	static UFunction* pFnAnnounceScore = NULL;

	if ( ! pFnAnnounceScore )
		pFnAnnounceScore = (UFunction*) UObject::GObjObjects()->Data[ 53881 ];

	AUTTeamGame_execAnnounceScore_Parms AnnounceScore_Parms;
	AnnounceScore_Parms.ScoringTeam = ScoringTeam;

	this->ProcessEvent ( pFnAnnounceScore, &AnnounceScore_Parms, NULL );
};

// Function UTGame.UTTeamGame.PlayRegularEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void AUTTeamGame::PlayRegularEndOfMatchMessage ( )
{
	static UFunction* pFnPlayRegularEndOfMatchMessage = NULL;

	if ( ! pFnPlayRegularEndOfMatchMessage )
		pFnPlayRegularEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 53878 ];

	AUTTeamGame_execPlayRegularEndOfMatchMessage_Parms PlayRegularEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayRegularEndOfMatchMessage, &PlayRegularEndOfMatchMessage_Parms, NULL );
};

// Function UTGame.UTTeamGame.IsWinningTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATeamInfo*               T                              ( CPF_Parm )

bool AUTTeamGame::IsWinningTeam ( class ATeamInfo* T )
{
	static UFunction* pFnIsWinningTeam = NULL;

	if ( ! pFnIsWinningTeam )
		pFnIsWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 53875 ];

	AUTTeamGame_execIsWinningTeam_Parms IsWinningTeam_Parms;
	IsWinningTeam_Parms.T = T;

	this->ProcessEvent ( pFnIsWinningTeam, &IsWinningTeam_Parms, NULL );

	return IsWinningTeam_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.IsAWinner
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       C                              ( CPF_Parm )

bool AUTTeamGame::IsAWinner ( class APlayerController* C )
{
	static UFunction* pFnIsAWinner = NULL;

	if ( ! pFnIsAWinner )
		pFnIsAWinner = (UFunction*) UObject::GObjObjects()->Data[ 53872 ];

	AUTTeamGame_execIsAWinner_Parms IsAWinner_Parms;
	IsAWinner_Parms.C = C;

	this->ProcessEvent ( pFnIsAWinner, &IsAWinner_Parms, NULL );

	return IsAWinner_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.DominatingVictory
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTTeamGame::DominatingVictory ( )
{
	static UFunction* pFnDominatingVictory = NULL;

	if ( ! pFnDominatingVictory )
		pFnDominatingVictory = (UFunction*) UObject::GObjObjects()->Data[ 53870 ];

	AUTTeamGame_execDominatingVictory_Parms DominatingVictory_Parms;

	this->ProcessEvent ( pFnDominatingVictory, &DominatingVictory_Parms, NULL );

	return DominatingVictory_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.ReduceDamage
// [0x00420002] 
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void AUTTeamGame::ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnReduceDamage = NULL;

	if ( ! pFnReduceDamage )
		pFnReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 53857 ];

	AUTTeamGame_execReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	ReduceDamage_Parms.DamageType = DamageType;
	ReduceDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnReduceDamage, &ReduceDamage_Parms, NULL );

	if ( Damage )
		*Damage = ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &ReduceDamage_Parms.Momentum, 0xC );
};

// Function UTGame.UTTeamGame.SendFlagKillMessage
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AUTPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )

void AUTTeamGame::SendFlagKillMessage ( class AController* Killer, class AUTPlayerReplicationInfo* KillerPRI )
{
	static UFunction* pFnSendFlagKillMessage = NULL;

	if ( ! pFnSendFlagKillMessage )
		pFnSendFlagKillMessage = (UFunction*) UObject::GObjObjects()->Data[ 53854 ];

	AUTTeamGame_execSendFlagKillMessage_Parms SendFlagKillMessage_Parms;
	SendFlagKillMessage_Parms.Killer = Killer;
	SendFlagKillMessage_Parms.KillerPRI = KillerPRI;

	this->ProcessEvent ( pFnSendFlagKillMessage, &SendFlagKillMessage_Parms, NULL );
};

// Function UTGame.UTTeamGame.AdjustSkill
// [0x00020002] 
// Parameters infos:
// class AAIController*           B                              ( CPF_Parm )
// class APlayerController*       P                              ( CPF_Parm )
// unsigned long                  bWinner                        ( CPF_Parm )

void AUTTeamGame::AdjustSkill ( class AAIController* B, class APlayerController* P, unsigned long bWinner )
{
	static UFunction* pFnAdjustSkill = NULL;

	if ( ! pFnAdjustSkill )
		pFnAdjustSkill = (UFunction*) UObject::GObjObjects()->Data[ 53849 ];

	AUTTeamGame_execAdjustSkill_Parms AdjustSkill_Parms;
	AdjustSkill_Parms.B = B;
	AdjustSkill_Parms.P = P;
	AdjustSkill_Parms.bWinner = bWinner;

	this->ProcessEvent ( pFnAdjustSkill, &AdjustSkill_Parms, NULL );
};

// Function UTGame.UTTeamGame.CampaignSkillAdjust
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  aBot                           ( CPF_Parm )

void AUTTeamGame::CampaignSkillAdjust ( class AUTBot* aBot )
{
	static UFunction* pFnCampaignSkillAdjust = NULL;

	if ( ! pFnCampaignSkillAdjust )
		pFnCampaignSkillAdjust = (UFunction*) UObject::GObjObjects()->Data[ 53847 ];

	AUTTeamGame_execCampaignSkillAdjust_Parms CampaignSkillAdjust_Parms;
	CampaignSkillAdjust_Parms.aBot = aBot;

	this->ProcessEvent ( pFnCampaignSkillAdjust, &CampaignSkillAdjust_Parms, NULL );
};

// Function UTGame.UTTeamGame.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void AUTTeamGame::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 53839 ];

	AUTTeamGame_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function UTGame.UTTeamGame.NearGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTTeamGame::NearGoal ( class AController* C )
{
	static UFunction* pFnNearGoal = NULL;

	if ( ! pFnNearGoal )
		pFnNearGoal = (UFunction*) UObject::GObjObjects()->Data[ 53836 ];

	AUTTeamGame_execNearGoal_Parms NearGoal_Parms;
	NearGoal_Parms.C = C;

	this->ProcessEvent ( pFnNearGoal, &NearGoal_Parms, NULL );

	return NearGoal_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.FindVictimsTarget
// [0x00820002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Other                          ( CPF_Parm )

class APawn* AUTTeamGame::FindVictimsTarget ( class AController* Other )
{
	static UFunction* pFnFindVictimsTarget = NULL;

	if ( ! pFnFindVictimsTarget )
		pFnFindVictimsTarget = (UFunction*) UObject::GObjObjects()->Data[ 53826 ];

	AUTTeamGame_execFindVictimsTarget_Parms FindVictimsTarget_Parms;
	FindVictimsTarget_Parms.Other = Other;

	this->ProcessEvent ( pFnFindVictimsTarget, &FindVictimsTarget_Parms, NULL );

	return FindVictimsTarget_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool AUTTeamGame::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 53823 ];

	AUTTeamGame_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float AUTTeamGame::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 53817 ];

	AUTTeamGame_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void AUTTeamGame::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 53812 ];

	AUTTeamGame_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function UTGame.UTTeamGame.ChangeTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

bool AUTTeamGame::ChangeTeam ( class AController* Other, int Num, unsigned long bNewTeam )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 53805 ];

	AUTTeamGame_execChangeTeam_Parms ChangeTeam_Parms;
	ChangeTeam_Parms.Other = Other;
	ChangeTeam_Parms.Num = Num;
	ChangeTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );

	return ChangeTeam_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.PickTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Num                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char AUTTeamGame::PickTeam ( unsigned char Num, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 53795 ];

	AUTTeamGame_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Num = Num;
	PickTeam_Parms.C = C;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	return PickTeam_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.RestartGame
// [0x00020002] 
// Parameters infos:

void AUTTeamGame::RestartGame ( )
{
	static UFunction* pFnRestartGame = NULL;

	if ( ! pFnRestartGame )
		pFnRestartGame = (UFunction*) UObject::GObjObjects()->Data[ 53785 ];

	AUTTeamGame_execRestartGame_Parms RestartGame_Parms;

	this->ProcessEvent ( pFnRestartGame, &RestartGame_Parms, NULL );
};

// Function UTGame.UTTeamGame.CanSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       Viewer                         ( CPF_Parm )
// class APlayerReplicationInfo*  ViewTarget                     ( CPF_Parm )

bool AUTTeamGame::CanSpectate ( class APlayerController* Viewer, class APlayerReplicationInfo* ViewTarget )
{
	static UFunction* pFnCanSpectate = NULL;

	if ( ! pFnCanSpectate )
		pFnCanSpectate = (UFunction*) UObject::GObjObjects()->Data[ 53781 ];

	AUTTeamGame_execCanSpectate_Parms CanSpectate_Parms;
	CanSpectate_Parms.Viewer = Viewer;
	CanSpectate_Parms.ViewTarget = ViewTarget;

	this->ProcessEvent ( pFnCanSpectate, &CanSpectate_Parms, NULL );

	return CanSpectate_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.SetEndGameFocus
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )

void AUTTeamGame::SetEndGameFocus ( class APlayerReplicationInfo* Winner )
{
	static UFunction* pFnSetEndGameFocus = NULL;

	if ( ! pFnSetEndGameFocus )
		pFnSetEndGameFocus = (UFunction*) UObject::GObjObjects()->Data[ 53778 ];

	AUTTeamGame_execSetEndGameFocus_Parms SetEndGameFocus_Parms;
	SetEndGameFocus_Parms.Winner = Winner;

	this->ProcessEvent ( pFnSetEndGameFocus, &SetEndGameFocus_Parms, NULL );
};

// Function UTGame.UTTeamGame.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool AUTTeamGame::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 53772 ];

	AUTTeamGame_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTTeamGame::NotifyKilled ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 53767 ];

	AUTTeamGame_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.KilledPlayer = KilledPlayer;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function UTGame.UTTeamGame.TooManyBots
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             botToRemove                    ( CPF_Parm )

bool AUTTeamGame::TooManyBots ( class AController* botToRemove )
{
	static UFunction* pFnTooManyBots = NULL;

	if ( ! pFnTooManyBots )
		pFnTooManyBots = (UFunction*) UObject::GObjObjects()->Data[ 53762 ];

	AUTTeamGame_execTooManyBots_Parms TooManyBots_Parms;
	TooManyBots_Parms.botToRemove = botToRemove;

	this->ProcessEvent ( pFnTooManyBots, &TooManyBots_Parms, NULL );

	return TooManyBots_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTTeamGame::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 53757 ];

	AUTTeamGame_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTTeamGame.CheckMaxLives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool AUTTeamGame::CheckMaxLives ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckMaxLives = NULL;

	if ( ! pFnCheckMaxLives )
		pFnCheckMaxLives = (UFunction*) UObject::GObjObjects()->Data[ 53751 ];

	AUTTeamGame_execCheckMaxLives_Parms CheckMaxLives_Parms;
	CheckMaxLives_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckMaxLives, &CheckMaxLives_Parms, NULL );

	return CheckMaxLives_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.LevelRecommendedPlayers
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int AUTTeamGame::LevelRecommendedPlayers ( )
{
	static UFunction* pFnLevelRecommendedPlayers = NULL;

	if ( ! pFnLevelRecommendedPlayers )
		pFnLevelRecommendedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 53747 ];

	AUTTeamGame_execLevelRecommendedPlayers_Parms LevelRecommendedPlayers_Parms;

	this->ProcessEvent ( pFnLevelRecommendedPlayers, &LevelRecommendedPlayers_Parms, NULL );

	return LevelRecommendedPlayers_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.GetBotTeam
// [0x00024002] 
// Parameters infos:
// class AUTTeamInfo*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamBots                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTTeamInfo* AUTTeamGame::GetBotTeam ( int TeamBots, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnGetBotTeam = NULL;

	if ( ! pFnGetBotTeam )
		pFnGetBotTeam = (UFunction*) UObject::GObjObjects()->Data[ 53737 ];

	AUTTeamGame_execGetBotTeam_Parms GetBotTeam_Parms;
	GetBotTeam_Parms.TeamBots = TeamBots;
	GetBotTeam_Parms.bUseTeamIndex = bUseTeamIndex;
	GetBotTeam_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetBotTeam, &GetBotTeam_Parms, NULL );

	return GetBotTeam_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.GetHandicapNeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

int AUTTeamGame::GetHandicapNeed ( class APawn* Other )
{
	static UFunction* pFnGetHandicapNeed = NULL;

	if ( ! pFnGetHandicapNeed )
		pFnGetHandicapNeed = (UFunction*) UObject::GObjObjects()->Data[ 53733 ];

	AUTTeamGame_execGetHandicapNeed_Parms GetHandicapNeed_Parms;
	GetHandicapNeed_Parms.Other = Other;

	this->ProcessEvent ( pFnGetHandicapNeed, &GetHandicapNeed_Parms, NULL );

	return GetHandicapNeed_Parms.ReturnValue;
};

// Function UTGame.UTTeamGame.AddBlueBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void AUTTeamGame::AddBlueBots ( int Num )
{
	static UFunction* pFnAddBlueBots = NULL;

	if ( ! pFnAddBlueBots )
		pFnAddBlueBots = (UFunction*) UObject::GObjObjects()->Data[ 53731 ];

	AUTTeamGame_execAddBlueBots_Parms AddBlueBots_Parms;
	AddBlueBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddBlueBots, &AddBlueBots_Parms, NULL );
};

// Function UTGame.UTTeamGame.AddRedBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void AUTTeamGame::AddRedBots ( int Num )
{
	static UFunction* pFnAddRedBots = NULL;

	if ( ! pFnAddRedBots )
		pFnAddRedBots = (UFunction*) UObject::GObjObjects()->Data[ 53729 ];

	AUTTeamGame_execAddRedBots_Parms AddRedBots_Parms;
	AddRedBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddRedBots, &AddRedBots_Parms, NULL );
};

// Function UTGame.UTTeamGame.CreateTeam
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void AUTTeamGame::CreateTeam ( int TeamIndex )
{
	static UFunction* pFnCreateTeam = NULL;

	if ( ! pFnCreateTeam )
		pFnCreateTeam = (UFunction*) UObject::GObjObjects()->Data[ 53727 ];

	AUTTeamGame_execCreateTeam_Parms CreateTeam_Parms;
	CreateTeam_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnCreateTeam, &CreateTeam_Parms, NULL );
};

// Function UTGame.UTTeamGame.FindNewObjectives
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        DisabledObjective              ( CPF_Parm )

void AUTTeamGame::FindNewObjectives ( class AUTGameObjective* DisabledObjective )
{
	static UFunction* pFnFindNewObjectives = NULL;

	if ( ! pFnFindNewObjectives )
		pFnFindNewObjectives = (UFunction*) UObject::GObjObjects()->Data[ 53725 ];

	AUTTeamGame_execFindNewObjectives_Parms FindNewObjectives_Parms;
	FindNewObjectives_Parms.DisabledObjective = DisabledObjective;

	this->ProcessEvent ( pFnFindNewObjectives, &FindNewObjectives_Parms, NULL );
};

// Function UTGame.UTTeamGame.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void AUTTeamGame::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 53722 ];

	AUTTeamGame_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function UTGame.UTTeamGame.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTTeamGame::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53720 ];

	AUTTeamGame_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function UTGame.UTCTFSquadAI.ModifyAggression
// [0x00420000] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )
// float                          Aggression                     ( CPF_Parm | CPF_OutParm )

void AUTCTFSquadAI::ModifyAggression ( class AUTBot* B, float* Aggression )
{
	static UFunction* pFnModifyAggression = NULL;

	if ( ! pFnModifyAggression )
		pFnModifyAggression = (UFunction*) UObject::GObjObjects()->Data[ 55246 ];

	AUTCTFSquadAI_execModifyAggression_Parms ModifyAggression_Parms;
	ModifyAggression_Parms.B = B;

	this->ProcessEvent ( pFnModifyAggression, &ModifyAggression_Parms, NULL );

	if ( Aggression )
		*Aggression = ModifyAggression_Parms.Aggression;
};

// Function UTGame.UTCTFSquadAI.AllowContinueOnFoot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AUTVehicle*              V                              ( CPF_Parm )

bool AUTCTFSquadAI::AllowContinueOnFoot ( class AUTBot* B, class AUTVehicle* V )
{
	static UFunction* pFnAllowContinueOnFoot = NULL;

	if ( ! pFnAllowContinueOnFoot )
		pFnAllowContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 55242 ];

	AUTCTFSquadAI_execAllowContinueOnFoot_Parms AllowContinueOnFoot_Parms;
	AllowContinueOnFoot_Parms.B = B;
	AllowContinueOnFoot_Parms.V = V;

	this->ProcessEvent ( pFnAllowContinueOnFoot, &AllowContinueOnFoot_Parms, NULL );

	return AllowContinueOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.ModifyThreat
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Current                        ( CPF_Parm )
// class APawn*                   NewThreat                      ( CPF_Parm )
// unsigned long                  bThreatVisible                 ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTCTFSquadAI::ModifyThreat ( float Current, class APawn* NewThreat, unsigned long bThreatVisible, class AUTBot* B )
{
	static UFunction* pFnModifyThreat = NULL;

	if ( ! pFnModifyThreat )
		pFnModifyThreat = (UFunction*) UObject::GObjObjects()->Data[ 55236 ];

	AUTCTFSquadAI_execModifyThreat_Parms ModifyThreat_Parms;
	ModifyThreat_Parms.Current = Current;
	ModifyThreat_Parms.NewThreat = NewThreat;
	ModifyThreat_Parms.bThreatVisible = bThreatVisible;
	ModifyThreat_Parms.B = B;

	this->ProcessEvent ( pFnModifyThreat, &ModifyThreat_Parms, NULL );

	return ModifyThreat_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.PriorityObjective
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

unsigned char AUTCTFSquadAI::PriorityObjective ( class AUTBot* B )
{
	static UFunction* pFnPriorityObjective = NULL;

	if ( ! pFnPriorityObjective )
		pFnPriorityObjective = (UFunction*) UObject::GObjObjects()->Data[ 55233 ];

	AUTCTFSquadAI_execPriorityObjective_Parms PriorityObjective_Parms;
	PriorityObjective_Parms.B = B;

	this->ProcessEvent ( pFnPriorityObjective, &PriorityObjective_Parms, NULL );

	return PriorityObjective_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.ShouldDeferTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTCTFSquadAI::ShouldDeferTo ( class AController* C )
{
	static UFunction* pFnShouldDeferTo = NULL;

	if ( ! pFnShouldDeferTo )
		pFnShouldDeferTo = (UFunction*) UObject::GObjObjects()->Data[ 55230 ];

	AUTCTFSquadAI_execShouldDeferTo_Parms ShouldDeferTo_Parms;
	ShouldDeferTo_Parms.C = C;

	this->ProcessEvent ( pFnShouldDeferTo, &ShouldDeferTo_Parms, NULL );

	return ShouldDeferTo_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.AllowTaunt
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::AllowTaunt ( class AUTBot* B )
{
	static UFunction* pFnAllowTaunt = NULL;

	if ( ! pFnAllowTaunt )
		pFnAllowTaunt = (UFunction*) UObject::GObjObjects()->Data[ 55227 ];

	AUTCTFSquadAI_execAllowTaunt_Parms AllowTaunt_Parms;
	AllowTaunt_Parms.B = B;

	this->ProcessEvent ( pFnAllowTaunt, &AllowTaunt_Parms, NULL );

	return AllowTaunt_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.EnemyFlagTakenBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void AUTCTFSquadAI::EnemyFlagTakenBy ( class AController* C )
{
	static UFunction* pFnEnemyFlagTakenBy = NULL;

	if ( ! pFnEnemyFlagTakenBy )
		pFnEnemyFlagTakenBy = (UFunction*) UObject::GObjObjects()->Data[ 55224 ];

	AUTCTFSquadAI_execEnemyFlagTakenBy_Parms EnemyFlagTakenBy_Parms;
	EnemyFlagTakenBy_Parms.C = C;

	this->ProcessEvent ( pFnEnemyFlagTakenBy, &EnemyFlagTakenBy_Parms, NULL );
};

// Function UTGame.UTCTFSquadAI.CheckSquadObjectives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::CheckSquadObjectives ( class AUTBot* B )
{
	static UFunction* pFnCheckSquadObjectives = NULL;

	if ( ! pFnCheckSquadObjectives )
		pFnCheckSquadObjectives = (UFunction*) UObject::GObjObjects()->Data[ 55218 ];

	AUTCTFSquadAI_execCheckSquadObjectives_Parms CheckSquadObjectives_Parms;
	CheckSquadObjectives_Parms.B = B;

	this->ProcessEvent ( pFnCheckSquadObjectives, &CheckSquadObjectives_Parms, NULL );

	return CheckSquadObjectives_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.OverrideFollowPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::OverrideFollowPlayer ( class AUTBot* B )
{
	static UFunction* pFnOverrideFollowPlayer = NULL;

	if ( ! pFnOverrideFollowPlayer )
		pFnOverrideFollowPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55215 ];

	AUTCTFSquadAI_execOverrideFollowPlayer_Parms OverrideFollowPlayer_Parms;
	OverrideFollowPlayer_Parms.B = B;

	this->ProcessEvent ( pFnOverrideFollowPlayer, &OverrideFollowPlayer_Parms, NULL );

	return OverrideFollowPlayer_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.FlagNearBase
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTCTFSquadAI::FlagNearBase ( )
{
	static UFunction* pFnFlagNearBase = NULL;

	if ( ! pFnFlagNearBase )
		pFnFlagNearBase = (UFunction*) UObject::GObjObjects()->Data[ 55213 ];

	AUTCTFSquadAI_execFlagNearBase_Parms FlagNearBase_Parms;

	this->ProcessEvent ( pFnFlagNearBase, &FlagNearBase_Parms, NULL );

	return FlagNearBase_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.NearHomeBase
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::NearHomeBase ( class AUTBot* B )
{
	static UFunction* pFnNearHomeBase = NULL;

	if ( ! pFnNearHomeBase )
		pFnNearHomeBase = (UFunction*) UObject::GObjObjects()->Data[ 55210 ];

	AUTCTFSquadAI_execNearHomeBase_Parms NearHomeBase_Parms;
	NearHomeBase_Parms.B = B;

	this->ProcessEvent ( pFnNearHomeBase, &NearHomeBase_Parms, NULL );

	return NearHomeBase_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.NearEnemyBase
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::NearEnemyBase ( class AUTBot* B )
{
	static UFunction* pFnNearEnemyBase = NULL;

	if ( ! pFnNearEnemyBase )
		pFnNearEnemyBase = (UFunction*) UObject::GObjObjects()->Data[ 55207 ];

	AUTCTFSquadAI_execNearEnemyBase_Parms NearEnemyBase_Parms;
	NearEnemyBase_Parms.B = B;

	this->ProcessEvent ( pFnNearEnemyBase, &NearEnemyBase_Parms, NULL );

	return NearEnemyBase_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.MustKeepEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   E                              ( CPF_Parm )

bool AUTCTFSquadAI::MustKeepEnemy ( class APawn* E )
{
	static UFunction* pFnMustKeepEnemy = NULL;

	if ( ! pFnMustKeepEnemy )
		pFnMustKeepEnemy = (UFunction*) UObject::GObjObjects()->Data[ 55204 ];

	AUTCTFSquadAI_execMustKeepEnemy_Parms MustKeepEnemy_Parms;
	MustKeepEnemy_Parms.E = E;

	this->ProcessEvent ( pFnMustKeepEnemy, &MustKeepEnemy_Parms, NULL );

	return MustKeepEnemy_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.OrdersForFlagCarrier
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::OrdersForFlagCarrier ( class AUTBot* B )
{
	static UFunction* pFnOrdersForFlagCarrier = NULL;

	if ( ! pFnOrdersForFlagCarrier )
		pFnOrdersForFlagCarrier = (UFunction*) UObject::GObjObjects()->Data[ 55200 ];

	AUTCTFSquadAI_execOrdersForFlagCarrier_Parms OrdersForFlagCarrier_Parms;
	OrdersForFlagCarrier_Parms.B = B;

	this->ProcessEvent ( pFnOrdersForFlagCarrier, &OrdersForFlagCarrier_Parms, NULL );

	return OrdersForFlagCarrier_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.CheckVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::CheckVehicle ( class AUTBot* B )
{
	static UFunction* pFnCheckVehicle = NULL;

	if ( ! pFnCheckVehicle )
		pFnCheckVehicle = (UFunction*) UObject::GObjObjects()->Data[ 55197 ];

	AUTCTFSquadAI_execCheckVehicle_Parms CheckVehicle_Parms;
	CheckVehicle_Parms.B = B;

	this->ProcessEvent ( pFnCheckVehicle, &CheckVehicle_Parms, NULL );

	return CheckVehicle_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.FindHidePathFor
// [0x00020002] 
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

class ANavigationPoint* AUTCTFSquadAI::FindHidePathFor ( class AUTBot* B )
{
	static UFunction* pFnFindHidePathFor = NULL;

	if ( ! pFnFindHidePathFor )
		pFnFindHidePathFor = (UFunction*) UObject::GObjObjects()->Data[ 55193 ];

	AUTCTFSquadAI_execFindHidePathFor_Parms FindHidePathFor_Parms;
	FindHidePathFor_Parms.B = B;

	this->ProcessEvent ( pFnFindHidePathFor, &FindHidePathFor_Parms, NULL );

	return FindHidePathFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.VisibleToEnemiesOf
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::VisibleToEnemiesOf ( class AActor* A, class AUTBot* B )
{
	static UFunction* pFnVisibleToEnemiesOf = NULL;

	if ( ! pFnVisibleToEnemiesOf )
		pFnVisibleToEnemiesOf = (UFunction*) UObject::GObjObjects()->Data[ 55189 ];

	AUTCTFSquadAI_execVisibleToEnemiesOf_Parms VisibleToEnemiesOf_Parms;
	VisibleToEnemiesOf_Parms.A = A;
	VisibleToEnemiesOf_Parms.B = B;

	this->ProcessEvent ( pFnVisibleToEnemiesOf, &VisibleToEnemiesOf_Parms, NULL );

	return VisibleToEnemiesOf_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.FormationCenter
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

class AActor* AUTCTFSquadAI::FormationCenter ( class AController* C )
{
	static UFunction* pFnFormationCenter = NULL;

	if ( ! pFnFormationCenter )
		pFnFormationCenter = (UFunction*) UObject::GObjObjects()->Data[ 55186 ];

	AUTCTFSquadAI_execFormationCenter_Parms FormationCenter_Parms;
	FormationCenter_Parms.C = C;

	this->ProcessEvent ( pFnFormationCenter, &FormationCenter_Parms, NULL );

	return FormationCenter_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.GoPickupFlag
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTCTFSquadAI::GoPickupFlag ( class AUTBot* B )
{
	static UFunction* pFnGoPickupFlag = NULL;

	if ( ! pFnGoPickupFlag )
		pFnGoPickupFlag = (UFunction*) UObject::GObjObjects()->Data[ 55181 ];

	AUTCTFSquadAI_execGoPickupFlag_Parms GoPickupFlag_Parms;
	GoPickupFlag_Parms.B = B;

	this->ProcessEvent ( pFnGoPickupFlag, &GoPickupFlag_Parms, NULL );

	return GoPickupFlag_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.FindPathToObjective
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AActor*                  O                              ( CPF_Parm )

bool AUTCTFSquadAI::FindPathToObjective ( class AUTBot* B, class AActor* O )
{
	static UFunction* pFnFindPathToObjective = NULL;

	if ( ! pFnFindPathToObjective )
		pFnFindPathToObjective = (UFunction*) UObject::GObjObjects()->Data[ 55177 ];

	AUTCTFSquadAI_execFindPathToObjective_Parms FindPathToObjective_Parms;
	FindPathToObjective_Parms.B = B;
	FindPathToObjective_Parms.O = O;

	this->ProcessEvent ( pFnFindPathToObjective, &FindPathToObjective_Parms, NULL );

	return FindPathToObjective_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.BeDevious
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTCTFSquadAI::BeDevious ( class APawn* Enemy )
{
	static UFunction* pFnBeDevious = NULL;

	if ( ! pFnBeDevious )
		pFnBeDevious = (UFunction*) UObject::GObjObjects()->Data[ 55174 ];

	AUTCTFSquadAI_execBeDevious_Parms BeDevious_Parms;
	BeDevious_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnBeDevious, &BeDevious_Parms, NULL );

	return BeDevious_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.SetAlternatePathTo
// [0x00020002] 
// Parameters infos:
// class ANavigationPoint*        NewRouteObjective              ( CPF_Parm )
// class AUTBot*                  RouteMaker                     ( CPF_Parm )

void AUTCTFSquadAI::SetAlternatePathTo ( class ANavigationPoint* NewRouteObjective, class AUTBot* RouteMaker )
{
	static UFunction* pFnSetAlternatePathTo = NULL;

	if ( ! pFnSetAlternatePathTo )
		pFnSetAlternatePathTo = (UFunction*) UObject::GObjObjects()->Data[ 55170 ];

	AUTCTFSquadAI_execSetAlternatePathTo_Parms SetAlternatePathTo_Parms;
	SetAlternatePathTo_Parms.NewRouteObjective = NewRouteObjective;
	SetAlternatePathTo_Parms.RouteMaker = RouteMaker;

	this->ProcessEvent ( pFnSetAlternatePathTo, &SetAlternatePathTo_Parms, NULL );
};

// Function UTGame.UTCTFSquadAI.ShouldUseAlternatePaths
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTCTFSquadAI::ShouldUseAlternatePaths ( )
{
	static UFunction* pFnShouldUseAlternatePaths = NULL;

	if ( ! pFnShouldUseAlternatePaths )
		pFnShouldUseAlternatePaths = (UFunction*) UObject::GObjObjects()->Data[ 55168 ];

	AUTCTFSquadAI_execShouldUseAlternatePaths_Parms ShouldUseAlternatePaths_Parms;

	this->ProcessEvent ( pFnShouldUseAlternatePaths, &ShouldUseAlternatePaths_Parms, NULL );

	return ShouldUseAlternatePaths_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.AllowDetourTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class ANavigationPoint*        N                              ( CPF_Parm )

bool AUTCTFSquadAI::AllowDetourTo ( class AUTBot* B, class ANavigationPoint* N )
{
	static UFunction* pFnAllowDetourTo = NULL;

	if ( ! pFnAllowDetourTo )
		pFnAllowDetourTo = (UFunction*) UObject::GObjObjects()->Data[ 55164 ];

	AUTCTFSquadAI_execAllowDetourTo_Parms AllowDetourTo_Parms;
	AllowDetourTo_Parms.B = B;
	AllowDetourTo_Parms.N = N;

	this->ProcessEvent ( pFnAllowDetourTo, &AllowDetourTo_Parms, NULL );

	return AllowDetourTo_Parms.ReturnValue;
};

// Function UTGame.UTCTFSquadAI.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTCTFSquadAI::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55163 ];

	AUTCTFSquadAI_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTTeamAI.RemoveFromTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )

void AUTTeamAI::RemoveFromTeam ( class AController* Other )
{
	static UFunction* pFnRemoveFromTeam = NULL;

	if ( ! pFnRemoveFromTeam )
		pFnRemoveFromTeam = (UFunction*) UObject::GObjObjects()->Data[ 55348 ];

	AUTTeamAI_execRemoveFromTeam_Parms RemoveFromTeam_Parms;
	RemoveFromTeam_Parms.Other = Other;

	this->ProcessEvent ( pFnRemoveFromTeam, &RemoveFromTeam_Parms, NULL );
};

// Function UTGame.UTTeamAI.SetOrders
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )
// struct FName                   NewOrders                      ( CPF_Parm )
// class AController*             OrderGiver                     ( CPF_Parm )

void AUTTeamAI::SetOrders ( class AUTBot* B, struct FName NewOrders, class AController* OrderGiver )
{
	static UFunction* pFnSetOrders = NULL;

	if ( ! pFnSetOrders )
		pFnSetOrders = (UFunction*) UObject::GObjObjects()->Data[ 55343 ];

	AUTTeamAI_execSetOrders_Parms SetOrders_Parms;
	SetOrders_Parms.B = B;
	memcpy ( &SetOrders_Parms.NewOrders, &NewOrders, 0x8 );
	SetOrders_Parms.OrderGiver = OrderGiver;

	this->ProcessEvent ( pFnSetOrders, &SetOrders_Parms, NULL );
};

// Function UTGame.UTTeamAI.SetBotOrders
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  NewBot                         ( CPF_Parm )

void AUTTeamAI::SetBotOrders ( class AUTBot* NewBot )
{
	static UFunction* pFnSetBotOrders = NULL;

	if ( ! pFnSetBotOrders )
		pFnSetBotOrders = (UFunction*) UObject::GObjObjects()->Data[ 55339 ];

	AUTTeamAI_execSetBotOrders_Parms SetBotOrders_Parms;
	SetBotOrders_Parms.NewBot = NewBot;

	this->ProcessEvent ( pFnSetBotOrders, &SetBotOrders_Parms, NULL );
};

// Function UTGame.UTTeamAI.PutOnFreelance
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTTeamAI::PutOnFreelance ( class AUTBot* B )
{
	static UFunction* pFnPutOnFreelance = NULL;

	if ( ! pFnPutOnFreelance )
		pFnPutOnFreelance = (UFunction*) UObject::GObjObjects()->Data[ 55337 ];

	AUTTeamAI_execPutOnFreelance_Parms PutOnFreelance_Parms;
	PutOnFreelance_Parms.B = B;

	this->ProcessEvent ( pFnPutOnFreelance, &PutOnFreelance_Parms, NULL );
};

// Function UTGame.UTTeamAI.PutOnOffense
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTTeamAI::PutOnOffense ( class AUTBot* B )
{
	static UFunction* pFnPutOnOffense = NULL;

	if ( ! pFnPutOnOffense )
		pFnPutOnOffense = (UFunction*) UObject::GObjObjects()->Data[ 55335 ];

	AUTTeamAI_execPutOnOffense_Parms PutOnOffense_Parms;
	PutOnOffense_Parms.B = B;

	this->ProcessEvent ( pFnPutOnOffense, &PutOnOffense_Parms, NULL );
};

// Function UTGame.UTTeamAI.PutOnDefense
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTTeamAI::PutOnDefense ( class AUTBot* B )
{
	static UFunction* pFnPutOnDefense = NULL;

	if ( ! pFnPutOnDefense )
		pFnPutOnDefense = (UFunction*) UObject::GObjObjects()->Data[ 55331 ];

	AUTTeamAI_execPutOnDefense_Parms PutOnDefense_Parms;
	PutOnDefense_Parms.B = B;

	this->ProcessEvent ( pFnPutOnDefense, &PutOnDefense_Parms, NULL );

	return PutOnDefense_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.GetPriorityFreelanceObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTSquadAI*              InFreelanceSquad               ( CPF_Parm )

class AUTGameObjective* AUTTeamAI::GetPriorityFreelanceObjectiveFor ( class AUTSquadAI* InFreelanceSquad )
{
	static UFunction* pFnGetPriorityFreelanceObjectiveFor = NULL;

	if ( ! pFnGetPriorityFreelanceObjectiveFor )
		pFnGetPriorityFreelanceObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 55328 ];

	AUTTeamAI_execGetPriorityFreelanceObjectiveFor_Parms GetPriorityFreelanceObjectiveFor_Parms;
	GetPriorityFreelanceObjectiveFor_Parms.InFreelanceSquad = InFreelanceSquad;

	this->ProcessEvent ( pFnGetPriorityFreelanceObjectiveFor, &GetPriorityFreelanceObjectiveFor_Parms, NULL );

	return GetPriorityFreelanceObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.GetPriorityStandaloneObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTSquadAI*              InAttackSquad                  ( CPF_Parm )
// class AController*             InController                   ( CPF_Parm )

class AUTGameObjective* AUTTeamAI::GetPriorityStandaloneObjectiveFor ( class AUTSquadAI* InAttackSquad, class AController* InController )
{
	static UFunction* pFnGetPriorityStandaloneObjectiveFor = NULL;

	if ( ! pFnGetPriorityStandaloneObjectiveFor )
		pFnGetPriorityStandaloneObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 55320 ];

	AUTTeamAI_execGetPriorityStandaloneObjectiveFor_Parms GetPriorityStandaloneObjectiveFor_Parms;
	GetPriorityStandaloneObjectiveFor_Parms.InAttackSquad = InAttackSquad;
	GetPriorityStandaloneObjectiveFor_Parms.InController = InController;

	this->ProcessEvent ( pFnGetPriorityStandaloneObjectiveFor, &GetPriorityStandaloneObjectiveFor_Parms, NULL );

	return GetPriorityStandaloneObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.GetPriorityAttackObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTSquadAI*              InAttackSquad                  ( CPF_Parm )
// class AController*             InController                   ( CPF_Parm )

class AUTGameObjective* AUTTeamAI::GetPriorityAttackObjectiveFor ( class AUTSquadAI* InAttackSquad, class AController* InController )
{
	static UFunction* pFnGetPriorityAttackObjectiveFor = NULL;

	if ( ! pFnGetPriorityAttackObjectiveFor )
		pFnGetPriorityAttackObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 54922 ];

	AUTTeamAI_execGetPriorityAttackObjectiveFor_Parms GetPriorityAttackObjectiveFor_Parms;
	GetPriorityAttackObjectiveFor_Parms.InAttackSquad = InAttackSquad;
	GetPriorityAttackObjectiveFor_Parms.InController = InController;

	this->ProcessEvent ( pFnGetPriorityAttackObjectiveFor, &GetPriorityAttackObjectiveFor_Parms, NULL );

	return GetPriorityAttackObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.GetLeastDefendedObjective
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             InController                   ( CPF_Parm )

class AUTGameObjective* AUTTeamAI::GetLeastDefendedObjective ( class AController* InController )
{
	static UFunction* pFnGetLeastDefendedObjective = NULL;

	if ( ! pFnGetLeastDefendedObjective )
		pFnGetLeastDefendedObjective = (UFunction*) UObject::GObjObjects()->Data[ 55306 ];

	AUTTeamAI_execGetLeastDefendedObjective_Parms GetLeastDefendedObjective_Parms;
	GetLeastDefendedObjective_Parms.InController = InController;

	this->ProcessEvent ( pFnGetLeastDefendedObjective, &GetLeastDefendedObjective_Parms, NULL );

	return GetLeastDefendedObjective_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.AddSquadWithLeader
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )
// class AUTGameObjective*        O                              ( CPF_Parm )

class AUTSquadAI* AUTTeamAI::AddSquadWithLeader ( class AController* C, class AUTGameObjective* O )
{
	static UFunction* pFnAddSquadWithLeader = NULL;

	if ( ! pFnAddSquadWithLeader )
		pFnAddSquadWithLeader = (UFunction*) UObject::GObjObjects()->Data[ 55301 ];

	AUTTeamAI_execAddSquadWithLeader_Parms AddSquadWithLeader_Parms;
	AddSquadWithLeader_Parms.C = C;
	AddSquadWithLeader_Parms.O = O;

	this->ProcessEvent ( pFnAddSquadWithLeader, &AddSquadWithLeader_Parms, NULL );

	return AddSquadWithLeader_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.PutBotOnSquadLedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

void AUTTeamAI::PutBotOnSquadLedBy ( class AController* C, class AUTBot* B )
{
	static UFunction* pFnPutBotOnSquadLedBy = NULL;

	if ( ! pFnPutBotOnSquadLedBy )
		pFnPutBotOnSquadLedBy = (UFunction*) UObject::GObjObjects()->Data[ 55297 ];

	AUTTeamAI_execPutBotOnSquadLedBy_Parms PutBotOnSquadLedBy_Parms;
	PutBotOnSquadLedBy_Parms.C = C;
	PutBotOnSquadLedBy_Parms.B = B;

	this->ProcessEvent ( pFnPutBotOnSquadLedBy, &PutBotOnSquadLedBy_Parms, NULL );
};

// Function UTGame.UTTeamAI.AddHumanSquad
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTSquadAI* AUTTeamAI::AddHumanSquad ( )
{
	static UFunction* pFnAddHumanSquad = NULL;

	if ( ! pFnAddHumanSquad )
		pFnAddHumanSquad = (UFunction*) UObject::GObjObjects()->Data[ 55293 ];

	AUTTeamAI_execAddHumanSquad_Parms AddHumanSquad_Parms;

	this->ProcessEvent ( pFnAddHumanSquad, &AddHumanSquad_Parms, NULL );

	return AddHumanSquad_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.FindHumanSquad
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTSquadAI* AUTTeamAI::FindHumanSquad ( )
{
	static UFunction* pFnFindHumanSquad = NULL;

	if ( ! pFnFindHumanSquad )
		pFnFindHumanSquad = (UFunction*) UObject::GObjObjects()->Data[ 53097 ];

	AUTTeamAI_execFindHumanSquad_Parms FindHumanSquad_Parms;

	this->ProcessEvent ( pFnFindHumanSquad, &FindHumanSquad_Parms, NULL );

	return FindHumanSquad_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.SetObjectiveLists
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::SetObjectiveLists ( )
{
	static UFunction* pFnSetObjectiveLists = NULL;

	if ( ! pFnSetObjectiveLists )
		pFnSetObjectiveLists = (UFunction*) UObject::GObjObjects()->Data[ 55290 ];

	AUTTeamAI_execSetObjectiveLists_Parms SetObjectiveLists_Parms;

	this->ProcessEvent ( pFnSetObjectiveLists, &SetObjectiveLists_Parms, NULL );
};

// Function UTGame.UTTeamAI.FriendlyToward
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTTeamAI::FriendlyToward ( class APawn* Other )
{
	static UFunction* pFnFriendlyToward = NULL;

	if ( ! pFnFriendlyToward )
		pFnFriendlyToward = (UFunction*) UObject::GObjObjects()->Data[ 55116 ];

	AUTTeamAI_execFriendlyToward_Parms FriendlyToward_Parms;
	FriendlyToward_Parms.Other = Other;

	this->ProcessEvent ( pFnFriendlyToward, &FriendlyToward_Parms, NULL );

	return FriendlyToward_Parms.ReturnValue;
};

// Function UTGame.UTTeamAI.RemoveSquad
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              Squad                          ( CPF_Parm )

void AUTTeamAI::RemoveSquad ( class AUTSquadAI* Squad )
{
	static UFunction* pFnRemoveSquad = NULL;

	if ( ! pFnRemoveSquad )
		pFnRemoveSquad = (UFunction*) UObject::GObjObjects()->Data[ 55286 ];

	AUTTeamAI_execRemoveSquad_Parms RemoveSquad_Parms;
	RemoveSquad_Parms.Squad = Squad;

	this->ProcessEvent ( pFnRemoveSquad, &RemoveSquad_Parms, NULL );
};

// Function UTGame.UTTeamAI.FindNewObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              S                              ( CPF_Parm )
// unsigned long                  bForceUpdate                   ( CPF_Parm )

void AUTTeamAI::FindNewObjectiveFor ( class AUTSquadAI* S, unsigned long bForceUpdate )
{
	static UFunction* pFnFindNewObjectiveFor = NULL;

	if ( ! pFnFindNewObjectiveFor )
		pFnFindNewObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 55282 ];

	AUTTeamAI_execFindNewObjectiveFor_Parms FindNewObjectiveFor_Parms;
	FindNewObjectiveFor_Parms.S = S;
	FindNewObjectiveFor_Parms.bForceUpdate = bForceUpdate;

	this->ProcessEvent ( pFnFindNewObjectiveFor, &FindNewObjectiveFor_Parms, NULL );
};

// Function UTGame.UTTeamAI.FindNewObjectives
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        DisabledObjective              ( CPF_Parm )

void AUTTeamAI::FindNewObjectives ( class AUTGameObjective* DisabledObjective )
{
	static UFunction* pFnFindNewObjectives = NULL;

	if ( ! pFnFindNewObjectives )
		pFnFindNewObjectives = (UFunction*) UObject::GObjObjects()->Data[ 55279 ];

	AUTTeamAI_execFindNewObjectives_Parms FindNewObjectives_Parms;
	FindNewObjectives_Parms.DisabledObjective = DisabledObjective;

	this->ProcessEvent ( pFnFindNewObjectives, &FindNewObjectives_Parms, NULL );
};

// Function UTGame.UTTeamAI.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Killed                         ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void AUTTeamAI::NotifyKilled ( class AController* Killer, class AController* Killed, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 55273 ];

	AUTTeamAI_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function UTGame.UTTeamAI.ReAssessStrategy
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::ReAssessStrategy ( )
{
	static UFunction* pFnReAssessStrategy = NULL;

	if ( ! pFnReAssessStrategy )
		pFnReAssessStrategy = (UFunction*) UObject::GObjObjects()->Data[ 55269 ];

	AUTTeamAI_execReAssessStrategy_Parms ReAssessStrategy_Parms;

	this->ProcessEvent ( pFnReAssessStrategy, &ReAssessStrategy_Parms, NULL );
};

// Function UTGame.UTTeamAI.Reset
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 55268 ];

	AUTTeamAI_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function UTGame.UTTeamAI.FindSuperItems
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::FindSuperItems ( )
{
	static UFunction* pFnFindSuperItems = NULL;

	if ( ! pFnFindSuperItems )
		pFnFindSuperItems = (UFunction*) UObject::GObjObjects()->Data[ 55264 ];

	AUTTeamAI_execFindSuperItems_Parms FindSuperItems_Parms;

	this->ProcessEvent ( pFnFindSuperItems, &FindSuperItems_Parms, NULL );
};

// Function UTGame.UTTeamAI.CriticalObjectiveWarning
// [0x00020000] 
// Parameters infos:
// class AUTGameObjective*        G                              ( CPF_Parm )
// class APawn*                   NewEnemy                       ( CPF_Parm )

void AUTTeamAI::CriticalObjectiveWarning ( class AUTGameObjective* G, class APawn* NewEnemy )
{
	static UFunction* pFnCriticalObjectiveWarning = NULL;

	if ( ! pFnCriticalObjectiveWarning )
		pFnCriticalObjectiveWarning = (UFunction*) UObject::GObjObjects()->Data[ 55261 ];

	AUTTeamAI_execCriticalObjectiveWarning_Parms CriticalObjectiveWarning_Parms;
	CriticalObjectiveWarning_Parms.G = G;
	CriticalObjectiveWarning_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnCriticalObjectiveWarning, &CriticalObjectiveWarning_Parms, NULL );
};

// Function UTGame.UTTeamAI.Timer
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 55260 ];

	AUTTeamAI_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTTeamAI.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTTeamAI::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55259 ];

	AUTTeamAI_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTEntryGame.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTEntryGame::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 56147 ];

	AUTEntryGame_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTEntryGame.StartMatch
// [0x00020000] 
// Parameters infos:

void AUTEntryGame::StartMatch ( )
{
	static UFunction* pFnStartMatch = NULL;

	if ( ! pFnStartMatch )
		pFnStartMatch = (UFunction*) UObject::GObjObjects()->Data[ 56146 ];

	AUTEntryGame_execStartMatch_Parms StartMatch_Parms;

	this->ProcessEvent ( pFnStartMatch, &StartMatch_Parms, NULL );
};

// Function UTGame.UTEntryGame.AddBots
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void AUTEntryGame::AddBots ( int Num )
{
	static UFunction* pFnAddBots = NULL;

	if ( ! pFnAddBots )
		pFnAddBots = (UFunction*) UObject::GObjObjects()->Data[ 56144 ];

	AUTEntryGame_execAddBots_Parms AddBots_Parms;
	AddBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddBots, &AddBots_Parms, NULL );
};

// Function UTGame.UTEntryGame.NeedPlayers
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTEntryGame::NeedPlayers ( )
{
	static UFunction* pFnNeedPlayers = NULL;

	if ( ! pFnNeedPlayers )
		pFnNeedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 56142 ];

	AUTEntryGame_execNeedPlayers_Parms NeedPlayers_Parms;

	this->ProcessEvent ( pFnNeedPlayers, &NeedPlayers_Parms, NULL );

	return NeedPlayers_Parms.ReturnValue;
};

// Function UTGame.UTFirstBloodMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTFirstBloodMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 56317 ];

	UUTFirstBloodMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTFirstBloodMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTFirstBloodMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 56311 ];

	UUTFirstBloodMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTFirstBloodMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTFirstBloodMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 56304 ];

	UUTFirstBloodMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTWeap_Physicsgun.ConsumeAmmo
// [0x00020000] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeap_Physicsgun::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60339 ];

	AUTWeap_Physicsgun_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function UTGame.UTWeap_Physicsgun.Tick
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTWeap_Physicsgun::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60332 ];

	AUTWeap_Physicsgun_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTWeap_Physicsgun.DoOverrideNextWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeap_Physicsgun::DoOverrideNextWeapon ( )
{
	static UFunction* pFnDoOverrideNextWeapon = NULL;

	if ( ! pFnDoOverrideNextWeapon )
		pFnDoOverrideNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60330 ];

	AUTWeap_Physicsgun_execDoOverrideNextWeapon_Parms DoOverrideNextWeapon_Parms;

	this->ProcessEvent ( pFnDoOverrideNextWeapon, &DoOverrideNextWeapon_Parms, NULL );

	return DoOverrideNextWeapon_Parms.ReturnValue;
};

// Function UTGame.UTWeap_Physicsgun.DoOverridePrevWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTWeap_Physicsgun::DoOverridePrevWeapon ( )
{
	static UFunction* pFnDoOverridePrevWeapon = NULL;

	if ( ! pFnDoOverridePrevWeapon )
		pFnDoOverridePrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60328 ];

	AUTWeap_Physicsgun_execDoOverridePrevWeapon_Parms DoOverridePrevWeapon_Parms;

	this->ProcessEvent ( pFnDoOverridePrevWeapon, &DoOverridePrevWeapon_Parms, NULL );

	return DoOverridePrevWeapon_Parms.ReturnValue;
};

// Function UTGame.UTWeap_Physicsgun.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeap_Physicsgun::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 60325 ];

	AUTWeap_Physicsgun_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function UTGame.UTWeap_Physicsgun.StartFire
// [0x00820102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTWeap_Physicsgun::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 60306 ];

	AUTWeap_Physicsgun_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function UTGame.UTWeap_Physicsgun.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void AUTWeap_Physicsgun::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 60304 ];

	AUTWeap_Physicsgun_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function UTGame.UTWeap_Physicsgun.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTWeap_Physicsgun::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60303 ];

	AUTWeap_Physicsgun_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTDMRoster.AddToTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Other                          ( CPF_Parm )

bool AUTDMRoster::AddToTeam ( class AController* Other )
{
	static UFunction* pFnAddToTeam = NULL;

	if ( ! pFnAddToTeam )
		pFnAddToTeam = (UFunction*) UObject::GObjObjects()->Data[ 55863 ];

	AUTDMRoster_execAddToTeam_Parms AddToTeam_Parms;
	AddToTeam_Parms.Other = Other;

	this->ProcessEvent ( pFnAddToTeam, &AddToTeam_Parms, NULL );

	return AddToTeam_Parms.ReturnValue;
};

// Function UTGame.UTMutator.ProcessSpeechRecognition
// [0x00420002] 
// Parameters infos:
// class AUTPlayerController*     Speaker                        ( CPF_Parm )
// TArray< struct FSpeechRecognizedWord > Words                          ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator::ProcessSpeechRecognition ( class AUTPlayerController* Speaker, TArray< struct FSpeechRecognizedWord >* Words )
{
	static UFunction* pFnProcessSpeechRecognition = NULL;

	if ( ! pFnProcessSpeechRecognition )
		pFnProcessSpeechRecognition = (UFunction*) UObject::GObjObjects()->Data[ 57502 ];

	AUTMutator_execProcessSpeechRecognition_Parms ProcessSpeechRecognition_Parms;
	ProcessSpeechRecognition_Parms.Speaker = Speaker;

	this->ProcessEvent ( pFnProcessSpeechRecognition, &ProcessSpeechRecognition_Parms, NULL );

	if ( Words )
		memcpy ( Words, &ProcessSpeechRecognition_Parms.Words, 0xC );
};

// Function UTGame.UTMutator.ReplaceWith
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FString                 aClassName                     ( CPF_Parm | CPF_NeedCtorLink )

bool AUTMutator::ReplaceWith ( class AActor* Other, struct FString aClassName )
{
	static UFunction* pFnReplaceWith = NULL;

	if ( ! pFnReplaceWith )
		pFnReplaceWith = (UFunction*) UObject::GObjObjects()->Data[ 57494 ];

	AUTMutator_execReplaceWith_Parms ReplaceWith_Parms;
	ReplaceWith_Parms.Other = Other;
	memcpy ( &ReplaceWith_Parms.aClassName, &aClassName, 0xC );

	this->ProcessEvent ( pFnReplaceWith, &ReplaceWith_Parms, NULL );

	return ReplaceWith_Parms.ReturnValue;
};

// Function UTGame.UTMutator.GetNextUTMutator
// [0x00020002] 
// Parameters infos:
// class AUTMutator*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTMutator* AUTMutator::GetNextUTMutator ( )
{
	static UFunction* pFnGetNextUTMutator = NULL;

	if ( ! pFnGetNextUTMutator )
		pFnGetNextUTMutator = (UFunction*) UObject::GObjObjects()->Data[ 53374 ];

	AUTMutator_execGetNextUTMutator_Parms GetNextUTMutator_Parms;

	this->ProcessEvent ( pFnGetNextUTMutator, &GetNextUTMutator_Parms, NULL );

	return GetNextUTMutator_Parms.ReturnValue;
};

// Function UTGame.UTMutator.MutatorIsAllowed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTMutator::MutatorIsAllowed ( )
{
	static UFunction* pFnMutatorIsAllowed = NULL;

	if ( ! pFnMutatorIsAllowed )
		pFnMutatorIsAllowed = (UFunction*) UObject::GObjObjects()->Data[ 57490 ];

	AUTMutator_execMutatorIsAllowed_Parms MutatorIsAllowed_Parms;

	this->ProcessEvent ( pFnMutatorIsAllowed, &MutatorIsAllowed_Parms, NULL );

	return MutatorIsAllowed_Parms.ReturnValue;
};

// Function UTGame.UTKillingSpreeMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTKillingSpreeMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 57116 ];

	UUTKillingSpreeMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTKillingSpreeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTKillingSpreeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57110 ];

	UUTKillingSpreeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTKillingSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTKillingSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57103 ];

	UUTKillingSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTKillingSpreeMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UUTKillingSpreeMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 57095 ];

	UUTKillingSpreeMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function UTGame.UTSeqEvent_GameEnded.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqEvent_GameEnded::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58329 ];

	UUTSeqEvent_GameEnded_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTSeqEvent_GameEnded.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqEvent_GameEnded::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58327 ];

	UUTSeqEvent_GameEnded_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTKillsRemainingMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTKillsRemainingMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 57138 ];

	UUTKillsRemainingMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTKillsRemainingMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTKillsRemainingMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57131 ];

	UUTKillsRemainingMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTKillsRemainingMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTKillsRemainingMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57124 ];

	UUTKillsRemainingMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTDeathMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTDeathMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55645 ];

	UUTDeathMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTDeathMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTDeathMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55635 ];

	UUTDeathMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTDeathMessage.GetConsoleColor
// [0x00022002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )

struct FColor UUTDeathMessage::GetConsoleColor ( class APlayerReplicationInfo* RelatedPRI )
{
	static UFunction* pFnGetConsoleColor = NULL;

	if ( ! pFnGetConsoleColor )
		pFnGetConsoleColor = (UFunction*) UObject::GObjObjects()->Data[ 55632 ];

	UUTDeathMessage_execGetConsoleColor_Parms GetConsoleColor_Parms;
	GetConsoleColor_Parms.RelatedPRI = RelatedPRI;

	this->ProcessEvent ( pFnGetConsoleColor, &GetConsoleColor_Parms, NULL );

	return GetConsoleColor_Parms.ReturnValue;
};

// Function UTGame.UTMutator_BigHead.ModifyPlayer
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTMutator_BigHead::ModifyPlayer ( class APawn* P )
{
	static UFunction* pFnModifyPlayer = NULL;

	if ( ! pFnModifyPlayer )
		pFnModifyPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57519 ];

	AUTMutator_BigHead_execModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.P = P;

	this->ProcessEvent ( pFnModifyPlayer, &ModifyPlayer_Parms, NULL );
};

// Function UTGame.UTMutator_Handicap.ModifyPlayer
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTMutator_Handicap::ModifyPlayer ( class APawn* P )
{
	static UFunction* pFnModifyPlayer = NULL;

	if ( ! pFnModifyPlayer )
		pFnModifyPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57530 ];

	AUTMutator_Handicap_execModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.P = P;

	this->ProcessEvent ( pFnModifyPlayer, &ModifyPlayer_Parms, NULL );
};

// Function UTGame.UTMutator_LowGrav.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_LowGrav::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57537 ];

	AUTMutator_LowGrav_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTMutator_NoPowerups.CheckReplacement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTMutator_NoPowerups::CheckReplacement ( class AActor* Other )
{
	static UFunction* pFnCheckReplacement = NULL;

	if ( ! pFnCheckReplacement )
		pFnCheckReplacement = (UFunction*) UObject::GObjObjects()->Data[ 57546 ];

	AUTMutator_NoPowerups_execCheckReplacement_Parms CheckReplacement_Parms;
	CheckReplacement_Parms.Other = Other;

	this->ProcessEvent ( pFnCheckReplacement, &CheckReplacement_Parms, NULL );

	return CheckReplacement_Parms.ReturnValue;
};

// Function UTGame.UTMutator_Slomo.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_Slomo::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57552 ];

	AUTMutator_Slomo_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTMutator_SlowTimeKills.Timer
// [0x00020002] 
// Parameters infos:

void AUTMutator_SlowTimeKills::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 57564 ];

	AUTMutator_SlowTimeKills_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTMutator_SlowTimeKills.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Killed                         ( CPF_Parm )

void AUTMutator_SlowTimeKills::ScoreKill ( class AController* Killer, class AController* Killed )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 57561 ];

	AUTMutator_SlowTimeKills_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Killed = Killed;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function UTGame.UTMutator_SlowTimeKills.MutatorIsAllowed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTMutator_SlowTimeKills::MutatorIsAllowed ( )
{
	static UFunction* pFnMutatorIsAllowed = NULL;

	if ( ! pFnMutatorIsAllowed )
		pFnMutatorIsAllowed = (UFunction*) UObject::GObjObjects()->Data[ 57559 ];

	AUTMutator_SlowTimeKills_execMutatorIsAllowed_Parms MutatorIsAllowed_Parms;

	this->ProcessEvent ( pFnMutatorIsAllowed, &MutatorIsAllowed_Parms, NULL );

	return MutatorIsAllowed_Parms.ReturnValue;
};

// Function UTGame.UTMutator_SpeedFreak.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_SpeedFreak::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57571 ];

	AUTMutator_SpeedFreak_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTMutator_SuperBerserk.CheckReplacement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTMutator_SuperBerserk::CheckReplacement ( class AActor* Other )
{
	static UFunction* pFnCheckReplacement = NULL;

	if ( ! pFnCheckReplacement )
		pFnCheckReplacement = (UFunction*) UObject::GObjObjects()->Data[ 57578 ];

	AUTMutator_SuperBerserk_execCheckReplacement_Parms CheckReplacement_Parms;
	CheckReplacement_Parms.Other = Other;

	this->ProcessEvent ( pFnCheckReplacement, &CheckReplacement_Parms, NULL );

	return CheckReplacement_Parms.ReturnValue;
};

// Function UTGame.UTMutator_SuperBerserk.ModifyPlayer
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTMutator_SuperBerserk::ModifyPlayer ( class APawn* Other )
{
	static UFunction* pFnModifyPlayer = NULL;

	if ( ! pFnModifyPlayer )
		pFnModifyPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57575 ];

	AUTMutator_SuperBerserk_execModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.Other = Other;

	this->ProcessEvent ( pFnModifyPlayer, &ModifyPlayer_Parms, NULL );
};

// Function UTGame.UTMutator_WeaponsRespawn.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_WeaponsRespawn::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57583 ];

	AUTMutator_WeaponsRespawn_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTCTFTeamAI.GetPriorityFreelanceObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AUTGameObjective*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTSquadAI*              InFreelanceSquad               ( CPF_Parm )

class AUTGameObjective* AUTCTFTeamAI::GetPriorityFreelanceObjectiveFor ( class AUTSquadAI* InFreelanceSquad )
{
	static UFunction* pFnGetPriorityFreelanceObjectiveFor = NULL;

	if ( ! pFnGetPriorityFreelanceObjectiveFor )
		pFnGetPriorityFreelanceObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 55357 ];

	AUTCTFTeamAI_execGetPriorityFreelanceObjectiveFor_Parms GetPriorityFreelanceObjectiveFor_Parms;
	GetPriorityFreelanceObjectiveFor_Parms.InFreelanceSquad = InFreelanceSquad;

	this->ProcessEvent ( pFnGetPriorityFreelanceObjectiveFor, &GetPriorityFreelanceObjectiveFor_Parms, NULL );

	return GetPriorityFreelanceObjectiveFor_Parms.ReturnValue;
};

// Function UTGame.UTCTFTeamAI.AddSquadWithLeader
// [0x00020002] 
// Parameters infos:
// class AUTSquadAI*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )
// class AUTGameObjective*        O                              ( CPF_Parm )

class AUTSquadAI* AUTCTFTeamAI::AddSquadWithLeader ( class AController* C, class AUTGameObjective* O )
{
	static UFunction* pFnAddSquadWithLeader = NULL;

	if ( ! pFnAddSquadWithLeader )
		pFnAddSquadWithLeader = (UFunction*) UObject::GObjObjects()->Data[ 55352 ];

	AUTCTFTeamAI_execAddSquadWithLeader_Parms AddSquadWithLeader_Parms;
	AddSquadWithLeader_Parms.C = C;
	AddSquadWithLeader_Parms.O = O;

	this->ProcessEvent ( pFnAddSquadWithLeader, &AddSquadWithLeader_Parms, NULL );

	return AddSquadWithLeader_Parms.ReturnValue;
};

// Function UTGame.UTSayMsg.GetConsoleColor
// [0x00022002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )

struct FColor UUTSayMsg::GetConsoleColor ( class APlayerReplicationInfo* RelatedPRI )
{
	static UFunction* pFnGetConsoleColor = NULL;

	if ( ! pFnGetConsoleColor )
		pFnGetConsoleColor = (UFunction*) UObject::GObjObjects()->Data[ 58114 ];

	UUTSayMsg_execGetConsoleColor_Parms GetConsoleColor_Parms;
	GetConsoleColor_Parms.RelatedPRI = RelatedPRI;

	this->ProcessEvent ( pFnGetConsoleColor, &GetConsoleColor_Parms, NULL );

	return GetConsoleColor_Parms.ReturnValue;
};

// Function UTGame.UTGameViewportClient.NotifyConnectionError
// [0x00024002] 
// Parameters infos:
// unsigned char                  MessageType                    ( CPF_Parm )
// struct FString                 Message                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UUTGameViewportClient::NotifyConnectionError ( unsigned char MessageType, struct FString Message, struct FString Title )
{
	static UFunction* pFnNotifyConnectionError = NULL;

	if ( ! pFnNotifyConnectionError )
		pFnNotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 56659 ];

	UUTGameViewportClient_execNotifyConnectionError_Parms NotifyConnectionError_Parms;
	NotifyConnectionError_Parms.MessageType = MessageType;
	memcpy ( &NotifyConnectionError_Parms.Message, &Message, 0xC );
	memcpy ( &NotifyConnectionError_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnNotifyConnectionError, &NotifyConnectionError_Parms, NULL );
};

// Function UTGame.UTGameViewportClient.SetProgressMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  MessageType                    ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIgnoreFutureNetworkMessages   ( CPF_OptionalParm | CPF_Parm )

void UUTGameViewportClient::eventSetProgressMessage ( unsigned char MessageType, struct FString Message, struct FString Title, unsigned long bIgnoreFutureNetworkMessages )
{
	static UFunction* pFnSetProgressMessage = NULL;

	if ( ! pFnSetProgressMessage )
		pFnSetProgressMessage = (UFunction*) UObject::GObjObjects()->Data[ 56654 ];

	UUTGameViewportClient_eventSetProgressMessage_Parms SetProgressMessage_Parms;
	SetProgressMessage_Parms.MessageType = MessageType;
	memcpy ( &SetProgressMessage_Parms.Message, &Message, 0xC );
	memcpy ( &SetProgressMessage_Parms.Title, &Title, 0xC );
	SetProgressMessage_Parms.bIgnoreFutureNetworkMessages = bIgnoreFutureNetworkMessages;

	this->ProcessEvent ( pFnSetProgressMessage, &SetProgressMessage_Parms, NULL );
};

// Function UTGame.UTGameViewportClient.UpdateActiveSplitscreenType
// [0x00020002] 
// Parameters infos:

void UUTGameViewportClient::UpdateActiveSplitscreenType ( )
{
	static UFunction* pFnUpdateActiveSplitscreenType = NULL;

	if ( ! pFnUpdateActiveSplitscreenType )
		pFnUpdateActiveSplitscreenType = (UFunction*) UObject::GObjObjects()->Data[ 56653 ];

	UUTGameViewportClient_execUpdateActiveSplitscreenType_Parms UpdateActiveSplitscreenType_Parms;

	this->ProcessEvent ( pFnUpdateActiveSplitscreenType, &UpdateActiveSplitscreenType_Parms, NULL );
};

// Function UTGame.UTGameViewportClient.RenderHeader
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UUTGameViewportClient::RenderHeader ( class UCanvas* Canvas )
{
	static UFunction* pFnRenderHeader = NULL;

	if ( ! pFnRenderHeader )
		pFnRenderHeader = (UFunction*) UObject::GObjObjects()->Data[ 56651 ];

	UUTGameViewportClient_execRenderHeader_Parms RenderHeader_Parms;
	RenderHeader_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnRenderHeader, &RenderHeader_Parms, NULL );
};

// Function UTGame.UTGameViewportClient.DrawTransition
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UUTGameViewportClient::DrawTransition ( class UCanvas* Canvas )
{
	static UFunction* pFnDrawTransition = NULL;

	if ( ! pFnDrawTransition )
		pFnDrawTransition = (UFunction*) UObject::GObjObjects()->Data[ 56641 ];

	UUTGameViewportClient_execDrawTransition_Parms DrawTransition_Parms;
	DrawTransition_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnDrawTransition, &DrawTransition_Parms, NULL );
};

// Function UTGame.UTGameViewportClient.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UUTGameViewportClient::eventPostRender ( class UCanvas* Canvas )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 56636 ];

	UUTGameViewportClient_eventPostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function UTGame.UTWeaponSwitchMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTWeaponSwitchMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 60818 ];

	UUTWeaponSwitchMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTPowerupPickupFactory.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTPowerupPickupFactory::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 57900 ];

	AUTPowerupPickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTPowerupPickupFactory.AddWeaponOverlay
// [0x00020102] 
// Parameters infos:
// class AUTGameReplicationInfo*  GRI                            ( CPF_Parm )

void AUTPowerupPickupFactory::AddWeaponOverlay ( class AUTGameReplicationInfo* GRI )
{
	static UFunction* pFnAddWeaponOverlay = NULL;

	if ( ! pFnAddWeaponOverlay )
		pFnAddWeaponOverlay = (UFunction*) UObject::GObjObjects()->Data[ 57897 ];

	AUTPowerupPickupFactory_execAddWeaponOverlay_Parms AddWeaponOverlay_Parms;
	AddWeaponOverlay_Parms.GRI = GRI;

	this->ProcessEvent ( pFnAddWeaponOverlay, &AddWeaponOverlay_Parms, NULL );
};

// Function UTGame.UTCTFHUDMessage.AddAnnouncement
// [0x00026000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTCTFHUDMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 54751 ];

	UUTCTFHUDMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTCTFHUDMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTCTFHUDMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 54744 ];

	UUTCTFHUDMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTCTFHUDMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UUTCTFHUDMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 54738 ];

	UUTCTFHUDMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function UTGame.UTWeaponRewardMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTWeaponRewardMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 60812 ];

	UUTWeaponRewardMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTWeaponRewardMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTWeaponRewardMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 60806 ];

	UUTWeaponRewardMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTWeaponRewardMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTWeaponRewardMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 60799 ];

	UUTWeaponRewardMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchHistory.HasOutstandingQueries
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bRestrictCheckToSelf           ( CPF_OptionalParm | CPF_Parm )

bool UUTDataStore_GameSearchHistory::HasOutstandingQueries ( unsigned long bRestrictCheckToSelf )
{
	static UFunction* pFnHasOutstandingQueries = NULL;

	if ( ! pFnHasOutstandingQueries )
		pFnHasOutstandingQueries = (UFunction*) UObject::GObjObjects()->Data[ 55513 ];

	UUTDataStore_GameSearchHistory_execHasOutstandingQueries_Parms HasOutstandingQueries_Parms;
	HasOutstandingQueries_Parms.bRestrictCheckToSelf = bRestrictCheckToSelf;

	this->ProcessEvent ( pFnHasOutstandingQueries, &HasOutstandingQueries_Parms, NULL );

	return HasOutstandingQueries_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchHistory.Registered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ULocalPlayer*            PlayerOwner                    ( CPF_Parm )

void UUTDataStore_GameSearchHistory::eventRegistered ( class ULocalPlayer* PlayerOwner )
{
	static UFunction* pFnRegistered = NULL;

	if ( ! pFnRegistered )
		pFnRegistered = (UFunction*) UObject::GObjObjects()->Data[ 55621 ];

	UUTDataStore_GameSearchHistory_eventRegistered_Parms Registered_Parms;
	Registered_Parms.PlayerOwner = PlayerOwner;

	this->ProcessEvent ( pFnRegistered, &Registered_Parms, NULL );
};

// Function UTGame.UTDataStore_GameSearchPersonal.GetServerStringList
// [0x00420002] 
// Parameters infos:
// TArray< struct FString >       out_ServerList                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTDataStore_GameSearchPersonal::GetServerStringList ( TArray< struct FString >* out_ServerList )
{
	static UFunction* pFnGetServerStringList = NULL;

	if ( ! pFnGetServerStringList )
		pFnGetServerStringList = (UFunction*) UObject::GObjObjects()->Data[ 55610 ];

	UUTDataStore_GameSearchPersonal_execGetServerStringList_Parms GetServerStringList_Parms;

	this->ProcessEvent ( pFnGetServerStringList, &GetServerStringList_Parms, NULL );

	if ( out_ServerList )
		memcpy ( out_ServerList, &GetServerStringList_Parms.out_ServerList, 0xC );
};

// Function UTGame.UTDataStore_GameSearchPersonal.GetServerIdList
// [0x00C20002] 
// Parameters infos:
// TArray< struct FUniqueNetId >  out_ServerList                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UUTDataStore_GameSearchPersonal::GetServerIdList ( TArray< struct FUniqueNetId >* out_ServerList )
{
	static UFunction* pFnGetServerIdList = NULL;

	if ( ! pFnGetServerIdList )
		pFnGetServerIdList = (UFunction*) UObject::GObjObjects()->Data[ 55605 ];

	UUTDataStore_GameSearchPersonal_execGetServerIdList_Parms GetServerIdList_Parms;

	this->ProcessEvent ( pFnGetServerIdList, &GetServerIdList_Parms, NULL );

	if ( out_ServerList )
		memcpy ( out_ServerList, &GetServerIdList_Parms.out_ServerList, 0xC );
};

// Function UTGame.UTDataStore_GameSearchPersonal.RemoveServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FUniqueNetId            IdToRemove                     ( CPF_Parm )

bool UUTDataStore_GameSearchPersonal::RemoveServer ( int ControllerId, struct FUniqueNetId IdToRemove )
{
	static UFunction* pFnRemoveServer = NULL;

	if ( ! pFnRemoveServer )
		pFnRemoveServer = (UFunction*) UObject::GObjObjects()->Data[ 55598 ];

	UUTDataStore_GameSearchPersonal_execRemoveServer_Parms RemoveServer_Parms;
	RemoveServer_Parms.ControllerId = ControllerId;
	memcpy ( &RemoveServer_Parms.IdToRemove, &IdToRemove, 0x8 );

	this->ProcessEvent ( pFnRemoveServer, &RemoveServer_Parms, NULL );

	return RemoveServer_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.AddServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FUniqueNetId            IdToAdd                        ( CPF_Parm )

bool UUTDataStore_GameSearchPersonal::AddServer ( int ControllerId, struct FUniqueNetId IdToAdd )
{
	static UFunction* pFnAddServer = NULL;

	if ( ! pFnAddServer )
		pFnAddServer = (UFunction*) UObject::GObjObjects()->Data[ 55590 ];

	UUTDataStore_GameSearchPersonal_execAddServer_Parms AddServer_Parms;
	AddServer_Parms.ControllerId = ControllerId;
	memcpy ( &AddServer_Parms.IdToAdd, &IdToAdd, 0x8 );

	this->ProcessEvent ( pFnAddServer, &AddServer_Parms, NULL );

	return AddServer_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.FindServerIndexById
// [0x00420002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FUniqueNetId            IdToFind                       ( CPF_Const | CPF_Parm | CPF_OutParm )

int UUTDataStore_GameSearchPersonal::FindServerIndexById ( int ControllerId, struct FUniqueNetId* IdToFind )
{
	static UFunction* pFnFindServerIndexById = NULL;

	if ( ! pFnFindServerIndexById )
		pFnFindServerIndexById = (UFunction*) UObject::GObjObjects()->Data[ 55586 ];

	UUTDataStore_GameSearchPersonal_execFindServerIndexById_Parms FindServerIndexById_Parms;
	FindServerIndexById_Parms.ControllerId = ControllerId;

	this->ProcessEvent ( pFnFindServerIndexById, &FindServerIndexById_Parms, NULL );

	if ( IdToFind )
		memcpy ( IdToFind, &FindServerIndexById_Parms.IdToFind, 0x8 );

	return FindServerIndexById_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.FindServerIndexByString
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FString                 IdToFind                       ( CPF_Parm | CPF_NeedCtorLink )

int UUTDataStore_GameSearchPersonal::FindServerIndexByString ( int ControllerId, struct FString IdToFind )
{
	static UFunction* pFnFindServerIndexByString = NULL;

	if ( ! pFnFindServerIndexByString )
		pFnFindServerIndexByString = (UFunction*) UObject::GObjObjects()->Data[ 55580 ];

	UUTDataStore_GameSearchPersonal_execFindServerIndexByString_Parms FindServerIndexByString_Parms;
	FindServerIndexByString_Parms.ControllerId = ControllerId;
	memcpy ( &FindServerIndexByString_Parms.IdToFind, &IdToFind, 0xC );

	this->ProcessEvent ( pFnFindServerIndexByString, &FindServerIndexByString_Parms, NULL );

	return FindServerIndexByString_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.GetPlayerNetId
// [0x00424002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_OptionalParm | CPF_Parm )
// struct FUniqueNetId            out_PlayerId                   ( CPF_Parm | CPF_OutParm )

bool UUTDataStore_GameSearchPersonal::GetPlayerNetId ( int ControllerId, struct FUniqueNetId* out_PlayerId )
{
	static UFunction* pFnGetPlayerNetId = NULL;

	if ( ! pFnGetPlayerNetId )
		pFnGetPlayerNetId = (UFunction*) UObject::GObjObjects()->Data[ 55574 ];

	UUTDataStore_GameSearchPersonal_execGetPlayerNetId_Parms GetPlayerNetId_Parms;
	GetPlayerNetId_Parms.ControllerId = ControllerId;

	this->ProcessEvent ( pFnGetPlayerNetId, &GetPlayerNetId_Parms, NULL );

	if ( out_PlayerId )
		memcpy ( out_PlayerId, &GetPlayerNetId_Parms.out_PlayerId, 0x8 );

	return GetPlayerNetId_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.GetPlayerName
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            ControllerId                   ( CPF_OptionalParm | CPF_Parm )

struct FString UUTDataStore_GameSearchPersonal::GetPlayerName ( int ControllerId )
{
	static UFunction* pFnGetPlayerName = NULL;

	if ( ! pFnGetPlayerName )
		pFnGetPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 55569 ];

	UUTDataStore_GameSearchPersonal_execGetPlayerName_Parms GetPlayerName_Parms;
	GetPlayerName_Parms.ControllerId = ControllerId;

	this->ProcessEvent ( pFnGetPlayerName, &GetPlayerName_Parms, NULL );

	return GetPlayerName_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.OverrideQuerySubmission
// [0x00080002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ControllerId                   ( CPF_Parm )
// class UOnlineGameSearch*       Search                         ( CPF_Parm )

bool UUTDataStore_GameSearchPersonal::OverrideQuerySubmission ( unsigned char ControllerId, class UOnlineGameSearch* Search )
{
	static UFunction* pFnOverrideQuerySubmission = NULL;

	if ( ! pFnOverrideQuerySubmission )
		pFnOverrideQuerySubmission = (UFunction*) UObject::GObjObjects()->Data[ 55559 ];

	UUTDataStore_GameSearchPersonal_execOverrideQuerySubmission_Parms OverrideQuerySubmission_Parms;
	OverrideQuerySubmission_Parms.ControllerId = ControllerId;
	OverrideQuerySubmission_Parms.Search = Search;

	this->ProcessEvent ( pFnOverrideQuerySubmission, &OverrideQuerySubmission_Parms, NULL );

	return OverrideQuerySubmission_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchPersonal.HasOutstandingQueries
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bRestrictCheckToSelf           ( CPF_OptionalParm | CPF_Parm )

bool UUTDataStore_GameSearchPersonal::HasOutstandingQueries ( unsigned long bRestrictCheckToSelf )
{
	static UFunction* pFnHasOutstandingQueries = NULL;

	if ( ! pFnHasOutstandingQueries )
		pFnHasOutstandingQueries = (UFunction*) UObject::GObjObjects()->Data[ 55514 ];

	UUTDataStore_GameSearchPersonal_execHasOutstandingQueries_Parms HasOutstandingQueries_Parms;
	HasOutstandingQueries_Parms.bRestrictCheckToSelf = bRestrictCheckToSelf;

	this->ProcessEvent ( pFnHasOutstandingQueries, &HasOutstandingQueries_Parms, NULL );

	return HasOutstandingQueries_Parms.ReturnValue;
};

// Function UTGame.UTDataStore_GameSearchFavorites.HasOutstandingQueries
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bRestrictCheckToSelf           ( CPF_OptionalParm | CPF_Parm )

bool UUTDataStore_GameSearchFavorites::HasOutstandingQueries ( unsigned long bRestrictCheckToSelf )
{
	static UFunction* pFnHasOutstandingQueries = NULL;

	if ( ! pFnHasOutstandingQueries )
		pFnHasOutstandingQueries = (UFunction*) UObject::GObjObjects()->Data[ 55518 ];

	UUTDataStore_GameSearchFavorites_execHasOutstandingQueries_Parms HasOutstandingQueries_Parms;
	HasOutstandingQueries_Parms.bRestrictCheckToSelf = bRestrictCheckToSelf;

	this->ProcessEvent ( pFnHasOutstandingQueries, &HasOutstandingQueries_Parms, NULL );

	return HasOutstandingQueries_Parms.ReturnValue;
};

// Function UTGame.UTKillerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTKillerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55654 ];

	UUTKillerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTMultiKillMessage.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UUTMultiKillMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 57441 ];

	UUTMultiKillMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTMultiKillMessage.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UUTMultiKillMessage::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 57436 ];

	UUTMultiKillMessage_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function UTGame.UTMultiKillMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UUTMultiKillMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 57430 ];

	UUTMultiKillMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function UTGame.UTMultiKillMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTMultiKillMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 57425 ];

	UUTMultiKillMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTMultiKillMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTMultiKillMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 57419 ];

	UUTMultiKillMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTMultiKillMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTMultiKillMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 57412 ];

	UUTMultiKillMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTVictimMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTVictimMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55659 ];

	UUTVictimMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTDecalManager.CanSpawnDecals
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTDecalManager::CanSpawnDecals ( )
{
	static UFunction* pFnCanSpawnDecals = NULL;

	if ( ! pFnCanSpawnDecals )
		pFnCanSpawnDecals = (UFunction*) UObject::GObjObjects()->Data[ 55663 ];

	AUTDecalManager_execCanSpawnDecals_Parms CanSpawnDecals_Parms;

	this->ProcessEvent ( pFnCanSpawnDecals, &CanSpawnDecals_Parms, NULL );

	return CanSpawnDecals_Parms.ReturnValue;
};

// Function UTGame.UTDmgType_Instagib.SpawnHitEffect
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FName                   BoneName                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void UUTDmgType_Instagib::SpawnHitEffect ( class APawn* P, float Damage, struct FVector Momentum, struct FName BoneName, struct FVector HitLocation )
{
	static UFunction* pFnSpawnHitEffect = NULL;

	if ( ! pFnSpawnHitEffect )
		pFnSpawnHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 55726 ];

	UUTDmgType_Instagib_execSpawnHitEffect_Parms SpawnHitEffect_Parms;
	SpawnHitEffect_Parms.P = P;
	SpawnHitEffect_Parms.Damage = Damage;
	memcpy ( &SpawnHitEffect_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &SpawnHitEffect_Parms.BoneName, &BoneName, 0x8 );
	memcpy ( &SpawnHitEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnHitEffect, &SpawnHitEffect_Parms, NULL );
};

// Function UTGame.UTDmgType_LinkBeam.SpawnExtraGibEffects
// [0x00022102] 
// Parameters infos:
// class AUTGib*                  TheGib                         ( CPF_Parm )

void UUTDmgType_LinkBeam::SpawnExtraGibEffects ( class AUTGib* TheGib )
{
	static UFunction* pFnSpawnExtraGibEffects = NULL;

	if ( ! pFnSpawnExtraGibEffects )
		pFnSpawnExtraGibEffects = (UFunction*) UObject::GObjObjects()->Data[ 55749 ];

	UUTDmgType_LinkBeam_execSpawnExtraGibEffects_Parms SpawnExtraGibEffects_Parms;
	SpawnExtraGibEffects_Parms.TheGib = TheGib;

	this->ProcessEvent ( pFnSpawnExtraGibEffects, &SpawnExtraGibEffects_Parms, NULL );
};

// Function UTGame.UTDmgType_LinkBeam.DoCustomDamageEffects
// [0x00C22002] 
// Parameters infos:
// class AUTPawn*                 ThePawn                        ( CPF_Parm )
// class UClass*                  TheDamageType                  ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm )

void UUTDmgType_LinkBeam::DoCustomDamageEffects ( class AUTPawn* ThePawn, class UClass* TheDamageType, struct FVector HitLocation, struct FTraceHitInfo* HitInfo )
{
	static UFunction* pFnDoCustomDamageEffects = NULL;

	if ( ! pFnDoCustomDamageEffects )
		pFnDoCustomDamageEffects = (UFunction*) UObject::GObjObjects()->Data[ 55743 ];

	UUTDmgType_LinkBeam_execDoCustomDamageEffects_Parms DoCustomDamageEffects_Parms;
	DoCustomDamageEffects_Parms.ThePawn = ThePawn;
	DoCustomDamageEffects_Parms.TheDamageType = TheDamageType;
	memcpy ( &DoCustomDamageEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDoCustomDamageEffects, &DoCustomDamageEffects_Parms, NULL );

	if ( HitInfo )
		memcpy ( HitInfo, &DoCustomDamageEffects_Parms.HitInfo, 0x1C );
};

// Function UTGame.UTVehicleKillMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UUTVehicleKillMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59635 ];

	UUTVehicleKillMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function UTGame.UTVehicleKillMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UUTVehicleKillMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59629 ];

	UUTVehicleKillMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function UTGame.UTVehicleKillMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTVehicleKillMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59622 ];

	UUTVehicleKillMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.AssignSquadResponsibility
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTDMSquad::AssignSquadResponsibility ( class AUTBot* B )
{
	static UFunction* pFnAssignSquadResponsibility = NULL;

	if ( ! pFnAssignSquadResponsibility )
		pFnAssignSquadResponsibility = (UFunction*) UObject::GObjObjects()->Data[ 55916 ];

	AUTDMSquad_execAssignSquadResponsibility_Parms AssignSquadResponsibility_Parms;
	AssignSquadResponsibility_Parms.B = B;

	this->ProcessEvent ( pFnAssignSquadResponsibility, &AssignSquadResponsibility_Parms, NULL );

	return AssignSquadResponsibility_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.VehicleDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicle*              V                              ( CPF_Parm )
// class AUTBot*                  B                              ( CPF_Parm )

float AUTDMSquad::VehicleDesireability ( class AUTVehicle* V, class AUTBot* B )
{
	static UFunction* pFnVehicleDesireability = NULL;

	if ( ! pFnVehicleDesireability )
		pFnVehicleDesireability = (UFunction*) UObject::GObjObjects()->Data[ 55912 ];

	AUTDMSquad_execVehicleDesireability_Parms VehicleDesireability_Parms;
	VehicleDesireability_Parms.V = V;
	VehicleDesireability_Parms.B = B;

	this->ProcessEvent ( pFnVehicleDesireability, &VehicleDesireability_Parms, NULL );

	return VehicleDesireability_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.AllowContinueOnFoot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class AUTVehicle*              V                              ( CPF_Parm )

bool AUTDMSquad::AllowContinueOnFoot ( class AUTBot* B, class AUTVehicle* V )
{
	static UFunction* pFnAllowContinueOnFoot = NULL;

	if ( ! pFnAllowContinueOnFoot )
		pFnAllowContinueOnFoot = (UFunction*) UObject::GObjObjects()->Data[ 55908 ];

	AUTDMSquad_execAllowContinueOnFoot_Parms AllowContinueOnFoot_Parms;
	AllowContinueOnFoot_Parms.B = B;
	AllowContinueOnFoot_Parms.V = V;

	this->ProcessEvent ( pFnAllowContinueOnFoot, &AllowContinueOnFoot_Parms, NULL );

	return AllowContinueOnFoot_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.FriendlyToward
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTDMSquad::FriendlyToward ( class APawn* Other )
{
	static UFunction* pFnFriendlyToward = NULL;

	if ( ! pFnFriendlyToward )
		pFnFriendlyToward = (UFunction*) UObject::GObjObjects()->Data[ 55905 ];

	AUTDMSquad_execFriendlyToward_Parms FriendlyToward_Parms;
	FriendlyToward_Parms.Other = Other;

	this->ProcessEvent ( pFnFriendlyToward, &FriendlyToward_Parms, NULL );

	return FriendlyToward_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.SetEnemy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   NewEnemy                       ( CPF_Parm )

bool AUTDMSquad::SetEnemy ( class AUTBot* B, class APawn* NewEnemy )
{
	static UFunction* pFnSetEnemy = NULL;

	if ( ! pFnSetEnemy )
		pFnSetEnemy = (UFunction*) UObject::GObjObjects()->Data[ 55900 ];

	AUTDMSquad_execSetEnemy_Parms SetEnemy_Parms;
	SetEnemy_Parms.B = B;
	SetEnemy_Parms.NewEnemy = NewEnemy;

	this->ProcessEvent ( pFnSetEnemy, &SetEnemy_Parms, NULL );

	return SetEnemy_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.GetOrders
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName AUTDMSquad::GetOrders ( )
{
	static UFunction* pFnGetOrders = NULL;

	if ( ! pFnGetOrders )
		pFnGetOrders = (UFunction*) UObject::GObjObjects()->Data[ 55898 ];

	AUTDMSquad_execGetOrders_Parms GetOrders_Parms;

	this->ProcessEvent ( pFnGetOrders, &GetOrders_Parms, NULL );

	return GetOrders_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.BeDevious
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTDMSquad::BeDevious ( class APawn* Enemy )
{
	static UFunction* pFnBeDevious = NULL;

	if ( ! pFnBeDevious )
		pFnBeDevious = (UFunction*) UObject::GObjObjects()->Data[ 55895 ];

	AUTDMSquad_execBeDevious_Parms BeDevious_Parms;
	BeDevious_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnBeDevious, &BeDevious_Parms, NULL );

	return BeDevious_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.NearFormationCenter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTDMSquad::NearFormationCenter ( class APawn* P )
{
	static UFunction* pFnNearFormationCenter = NULL;

	if ( ! pFnNearFormationCenter )
		pFnNearFormationCenter = (UFunction*) UObject::GObjObjects()->Data[ 55892 ];

	AUTDMSquad_execNearFormationCenter_Parms NearFormationCenter_Parms;
	NearFormationCenter_Parms.P = P;

	this->ProcessEvent ( pFnNearFormationCenter, &NearFormationCenter_Parms, NULL );

	return NearFormationCenter_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.WaitAtThisPosition
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTDMSquad::WaitAtThisPosition ( class APawn* P )
{
	static UFunction* pFnWaitAtThisPosition = NULL;

	if ( ! pFnWaitAtThisPosition )
		pFnWaitAtThisPosition = (UFunction*) UObject::GObjObjects()->Data[ 55889 ];

	AUTDMSquad_execWaitAtThisPosition_Parms WaitAtThisPosition_Parms;
	WaitAtThisPosition_Parms.P = P;

	this->ProcessEvent ( pFnWaitAtThisPosition, &WaitAtThisPosition_Parms, NULL );

	return WaitAtThisPosition_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.CheckSquadObjectives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTDMSquad::CheckSquadObjectives ( class AUTBot* B )
{
	static UFunction* pFnCheckSquadObjectives = NULL;

	if ( ! pFnCheckSquadObjectives )
		pFnCheckSquadObjectives = (UFunction*) UObject::GObjObjects()->Data[ 55886 ];

	AUTDMSquad_execCheckSquadObjectives_Parms CheckSquadObjectives_Parms;
	CheckSquadObjectives_Parms.B = B;

	this->ProcessEvent ( pFnCheckSquadObjectives, &CheckSquadObjectives_Parms, NULL );

	return CheckSquadObjectives_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.ShouldDeferTo
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool AUTDMSquad::ShouldDeferTo ( class AController* C )
{
	static UFunction* pFnShouldDeferTo = NULL;

	if ( ! pFnShouldDeferTo )
		pFnShouldDeferTo = (UFunction*) UObject::GObjObjects()->Data[ 55883 ];

	AUTDMSquad_execShouldDeferTo_Parms ShouldDeferTo_Parms;
	ShouldDeferTo_Parms.C = C;

	this->ProcessEvent ( pFnShouldDeferTo, &ShouldDeferTo_Parms, NULL );

	return ShouldDeferTo_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.RemoveBot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTDMSquad::RemoveBot ( class AUTBot* B )
{
	static UFunction* pFnRemoveBot = NULL;

	if ( ! pFnRemoveBot )
		pFnRemoveBot = (UFunction*) UObject::GObjObjects()->Data[ 55881 ];

	AUTDMSquad_execRemoveBot_Parms RemoveBot_Parms;
	RemoveBot_Parms.B = B;

	this->ProcessEvent ( pFnRemoveBot, &RemoveBot_Parms, NULL );
};

// Function UTGame.UTDMSquad.AddBot
// [0x00020002] 
// Parameters infos:
// class AUTBot*                  B                              ( CPF_Parm )

void AUTDMSquad::AddBot ( class AUTBot* B )
{
	static UFunction* pFnAddBot = NULL;

	if ( ! pFnAddBot )
		pFnAddBot = (UFunction*) UObject::GObjObjects()->Data[ 55879 ];

	AUTDMSquad_execAddBot_Parms AddBot_Parms;
	AddBot_Parms.B = B;

	this->ProcessEvent ( pFnAddBot, &AddBot_Parms, NULL );
};

// Function UTGame.UTDMSquad.IsDefending
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTDMSquad::IsDefending ( class AUTBot* B )
{
	static UFunction* pFnIsDefending = NULL;

	if ( ! pFnIsDefending )
		pFnIsDefending = (UFunction*) UObject::GObjObjects()->Data[ 55876 ];

	AUTDMSquad_execIsDefending_Parms IsDefending_Parms;
	IsDefending_Parms.B = B;

	this->ProcessEvent ( pFnIsDefending, &IsDefending_Parms, NULL );

	return IsDefending_Parms.ReturnValue;
};

// Function UTGame.UTDMSquad.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm | CPF_OutParm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void AUTDMSquad::DisplayDebug ( class AHUD* HUD, float* YL, float* YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 55869 ];

	AUTDMSquad_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( YL )
		*YL = DisplayDebug_Parms.YL;

	if ( YPos )
		*YPos = DisplayDebug_Parms.YPos;
};

// Function UTGame.UTDroppedItemPickup.PickedUpBy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTDroppedItemPickup::PickedUpBy ( class APawn* P )
{
	static UFunction* pFnPickedUpBy = NULL;

	if ( ! pFnPickedUpBy )
		pFnPickedUpBy = (UFunction*) UObject::GObjObjects()->Data[ 55968 ];

	AUTDroppedItemPickup_execPickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;

	this->ProcessEvent ( pFnPickedUpBy, &PickedUpBy_Parms, NULL );
};

// Function UTGame.UTDroppedItemPickup.DroppedFrom
// [0x00020000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void AUTDroppedItemPickup::DroppedFrom ( class APawn* P )
{
	static UFunction* pFnDroppedFrom = NULL;

	if ( ! pFnDroppedFrom )
		pFnDroppedFrom = (UFunction*) UObject::GObjObjects()->Data[ 55966 ];

	AUTDroppedItemPickup_execDroppedFrom_Parms DroppedFrom_Parms;
	DroppedFrom_Parms.P = P;

	this->ProcessEvent ( pFnDroppedFrom, &DroppedFrom_Parms, NULL );
};

// Function UTGame.UTDroppedItemPickup.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTDroppedItemPickup::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 55965 ];

	AUTDroppedItemPickup_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTDroppedItemPickup.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTDroppedItemPickup::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55964 ];

	AUTDroppedItemPickup_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTDroppedItemPickup.SetPickupMesh
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     NewPickupMesh                  ( CPF_Parm | CPF_EditInline )

void AUTDroppedItemPickup::eventSetPickupMesh ( class UPrimitiveComponent* NewPickupMesh )
{
	static UFunction* pFnSetPickupMesh = NULL;

	if ( ! pFnSetPickupMesh )
		pFnSetPickupMesh = (UFunction*) UObject::GObjObjects()->Data[ 55962 ];

	AUTDroppedItemPickup_eventSetPickupMesh_Parms SetPickupMesh_Parms;
	SetPickupMesh_Parms.NewPickupMesh = NewPickupMesh;

	this->ProcessEvent ( pFnSetPickupMesh, &SetPickupMesh_Parms, NULL );
};

// Function UTGame.UTDroppedItemPickup.BotDesireability
// [0x00020000] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Bot                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTDroppedItemPickup::BotDesireability ( class APawn* Bot, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 55958 ];

	AUTDroppedItemPickup_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.Bot = Bot;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTDummyPawn.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTDummyPawn::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 56003 ];

	AUTDummyPawn_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTDummyPawn.GetPawnViewLocation
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector AUTDummyPawn::GetPawnViewLocation ( )
{
	static UFunction* pFnGetPawnViewLocation = NULL;

	if ( ! pFnGetPawnViewLocation )
		pFnGetPawnViewLocation = (UFunction*) UObject::GObjObjects()->Data[ 56001 ];

	AUTDummyPawn_execGetPawnViewLocation_Parms GetPawnViewLocation_Parms;

	this->ProcessEvent ( pFnGetPawnViewLocation, &GetPawnViewLocation_Parms, NULL );

	return GetPawnViewLocation_Parms.ReturnValue;
};

// Function UTGame.UTDummyPawn.GetWeaponStartTraceLocation
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector AUTDummyPawn::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 55998 ];

	AUTDummyPawn_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function UTGame.UTDummyPawn.WeaponAttachmentChanged
// [0x00020102] 
// Parameters infos:

void AUTDummyPawn::WeaponAttachmentChanged ( )
{
	static UFunction* pFnWeaponAttachmentChanged = NULL;

	if ( ! pFnWeaponAttachmentChanged )
		pFnWeaponAttachmentChanged = (UFunction*) UObject::GObjObjects()->Data[ 55997 ];

	AUTDummyPawn_execWeaponAttachmentChanged_Parms WeaponAttachmentChanged_Parms;

	this->ProcessEvent ( pFnWeaponAttachmentChanged, &WeaponAttachmentChanged_Parms, NULL );
};

// Function UTGame.UTDummyPawn.GetAdjustedAimFor
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 projStart                      ( CPF_Parm )

struct FRotator AUTDummyPawn::GetAdjustedAimFor ( class AWeapon* InWeapon, struct FVector projStart )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 55990 ];

	AUTDummyPawn_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.InWeapon = InWeapon;
	memcpy ( &GetAdjustedAimFor_Parms.projStart, &projStart, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function UTGame.UTDummyPawn.SetWeaponAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               NewAmbientSound                ( CPF_Parm )

void AUTDummyPawn::SetWeaponAmbientSound ( class USoundCue* NewAmbientSound )
{
	static UFunction* pFnSetWeaponAmbientSound = NULL;

	if ( ! pFnSetWeaponAmbientSound )
		pFnSetWeaponAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 55988 ];

	AUTDummyPawn_execSetWeaponAmbientSound_Parms SetWeaponAmbientSound_Parms;
	SetWeaponAmbientSound_Parms.NewAmbientSound = NewAmbientSound;

	this->ProcessEvent ( pFnSetWeaponAmbientSound, &SetWeaponAmbientSound_Parms, NULL );
};

// Function UTGame.UTDummyPawn.SetPawnAmbientSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               NewAmbientSound                ( CPF_Parm )

void AUTDummyPawn::SetPawnAmbientSound ( class USoundCue* NewAmbientSound )
{
	static UFunction* pFnSetPawnAmbientSound = NULL;

	if ( ! pFnSetPawnAmbientSound )
		pFnSetPawnAmbientSound = (UFunction*) UObject::GObjObjects()->Data[ 55985 ];

	AUTDummyPawn_execSetPawnAmbientSound_Parms SetPawnAmbientSound_Parms;
	SetPawnAmbientSound_Parms.NewAmbientSound = NewAmbientSound;

	this->ProcessEvent ( pFnSetPawnAmbientSound, &SetPawnAmbientSound_Parms, NULL );
};

// Function UTGame.UTDummyPawn.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void AUTDummyPawn::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 55981 ];

	AUTDummyPawn_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function UTGame.UTDummyPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTDummyPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55980 ];

	AUTDummyPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTSeqAct_DummyWeaponFire.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

bool UUTSeqAct_DummyWeaponFire::eventUpdate ( float DeltaTime )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 58196 ];

	UUTSeqAct_DummyWeaponFire_eventUpdate_Parms Update_Parms;
	Update_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );

	return Update_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_DummyWeaponFire.NotifyDummyFire
// [0x00020002] 
// Parameters infos:

void UUTSeqAct_DummyWeaponFire::NotifyDummyFire ( )
{
	static UFunction* pFnNotifyDummyFire = NULL;

	if ( ! pFnNotifyDummyFire )
		pFnNotifyDummyFire = (UFunction*) UObject::GObjObjects()->Data[ 58195 ];

	UUTSeqAct_DummyWeaponFire_execNotifyDummyFire_Parms NotifyDummyFire_Parms;

	this->ProcessEvent ( pFnNotifyDummyFire, &NotifyDummyFire_Parms, NULL );
};

// Function UTGame.UTSeqAct_DummyWeaponFire.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_DummyWeaponFire::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58193 ];

	UUTSeqAct_DummyWeaponFire_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTEmit_ShockCombo.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTEmit_ShockCombo::eventSetInitialState ( )
{
	static UFunction* pFnSetInitialState = NULL;

	if ( ! pFnSetInitialState )
		pFnSetInitialState = (UFunction*) UObject::GObjObjects()->Data[ 56089 ];

	AUTEmit_ShockCombo_eventSetInitialState_Parms SetInitialState_Parms;

	this->ProcessEvent ( pFnSetInitialState, &SetInitialState_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.ShowScoreboard
// [0x00020000] 
// Parameters infos:

void AUTEntryPlayerController::ShowScoreboard ( )
{
	static UFunction* pFnShowScoreboard = NULL;

	if ( ! pFnShowScoreboard )
		pFnShowScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 56201 ];

	AUTEntryPlayerController_execShowScoreboard_Parms ShowScoreboard_Parms;

	this->ProcessEvent ( pFnShowScoreboard, &ShowScoreboard_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.ShowMidGameMenu
// [0x00024000] 
// Parameters infos:
// struct FName                   TabTag                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bEnableInput                   ( CPF_OptionalParm | CPF_Parm )

void AUTEntryPlayerController::ShowMidGameMenu ( struct FName TabTag, unsigned long bEnableInput )
{
	static UFunction* pFnShowMidGameMenu = NULL;

	if ( ! pFnShowMidGameMenu )
		pFnShowMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 56198 ];

	AUTEntryPlayerController_execShowMidGameMenu_Parms ShowMidGameMenu_Parms;
	memcpy ( &ShowMidGameMenu_Parms.TabTag, &TabTag, 0x8 );
	ShowMidGameMenu_Parms.bEnableInput = bEnableInput;

	this->ProcessEvent ( pFnShowMidGameMenu, &ShowMidGameMenu_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.SetPawnConstructionScene
// [0x00020000] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void AUTEntryPlayerController::SetPawnConstructionScene ( unsigned long bShow )
{
	static UFunction* pFnSetPawnConstructionScene = NULL;

	if ( ! pFnSetPawnConstructionScene )
		pFnSetPawnConstructionScene = (UFunction*) UObject::GObjObjects()->Data[ 56196 ];

	AUTEntryPlayerController_execSetPawnConstructionScene_Parms SetPawnConstructionScene_Parms;
	SetPawnConstructionScene_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetPawnConstructionScene, &SetPawnConstructionScene_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.QuitToMainMenu
// [0x00020002] 
// Parameters infos:

void AUTEntryPlayerController::QuitToMainMenu ( )
{
	static UFunction* pFnQuitToMainMenu = NULL;

	if ( ! pFnQuitToMainMenu )
		pFnQuitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 56195 ];

	AUTEntryPlayerController_execQuitToMainMenu_Parms QuitToMainMenu_Parms;

	this->ProcessEvent ( pFnQuitToMainMenu, &QuitToMainMenu_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnLinkStatusChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConnected                     ( CPF_Parm )

void AUTEntryPlayerController::OnLinkStatusChanged ( unsigned long bConnected )
{
	static UFunction* pFnOnLinkStatusChanged = NULL;

	if ( ! pFnOnLinkStatusChanged )
		pFnOnLinkStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 56191 ];

	AUTEntryPlayerController_execOnLinkStatusChanged_Parms OnLinkStatusChanged_Parms;
	OnLinkStatusChanged_Parms.bConnected = bConnected;

	this->ProcessEvent ( pFnOnLinkStatusChanged, &OnLinkStatusChanged_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnConnectionStatusChange
// [0x00020002] 
// Parameters infos:
// unsigned char                  ConnectionStatus               ( CPF_Parm )

void AUTEntryPlayerController::OnConnectionStatusChange ( unsigned char ConnectionStatus )
{
	static UFunction* pFnOnConnectionStatusChange = NULL;

	if ( ! pFnOnConnectionStatusChange )
		pFnOnConnectionStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 56188 ];

	AUTEntryPlayerController_execOnConnectionStatusChange_Parms OnConnectionStatusChange_Parms;
	OnConnectionStatusChange_Parms.ConnectionStatus = ConnectionStatus;

	this->ProcessEvent ( pFnOnConnectionStatusChange, &OnConnectionStatusChange_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnFriendMessageReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            SendingPlayer                  ( CPF_Parm )
// struct FString                 SendingNick                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void AUTEntryPlayerController::OnFriendMessageReceived ( unsigned char LocalUserNum, struct FUniqueNetId SendingPlayer, struct FString SendingNick, struct FString Message )
{
	static UFunction* pFnOnFriendMessageReceived = NULL;

	if ( ! pFnOnFriendMessageReceived )
		pFnOnFriendMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 56183 ];

	AUTEntryPlayerController_execOnFriendMessageReceived_Parms OnFriendMessageReceived_Parms;
	OnFriendMessageReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendMessageReceived_Parms.SendingPlayer, &SendingPlayer, 0x8 );
	memcpy ( &OnFriendMessageReceived_Parms.SendingNick, &SendingNick, 0xC );
	memcpy ( &OnFriendMessageReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendMessageReceived, &OnFriendMessageReceived_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnFriendInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            RequestingPlayer               ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void AUTEntryPlayerController::OnFriendInviteReceived ( unsigned char LocalUserNum, struct FUniqueNetId RequestingPlayer, struct FString RequestingNick, struct FString Message )
{
	static UFunction* pFnOnFriendInviteReceived = NULL;

	if ( ! pFnOnFriendInviteReceived )
		pFnOnFriendInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 56178 ];

	AUTEntryPlayerController_execOnFriendInviteReceived_Parms OnFriendInviteReceived_Parms;
	OnFriendInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendInviteReceived_Parms.RequestingPlayer, &RequestingPlayer, 0x8 );
	memcpy ( &OnFriendInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );
	memcpy ( &OnFriendInviteReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendInviteReceived, &OnFriendInviteReceived_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnGameInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )

void AUTEntryPlayerController::OnGameInviteReceived ( unsigned char LocalUserNum, struct FString RequestingNick )
{
	static UFunction* pFnOnGameInviteReceived = NULL;

	if ( ! pFnOnGameInviteReceived )
		pFnOnGameInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 56175 ];

	AUTEntryPlayerController_execOnGameInviteReceived_Parms OnGameInviteReceived_Parms;
	OnGameInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnGameInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );

	this->ProcessEvent ( pFnOnGameInviteReceived, &OnGameInviteReceived_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.OnControllerChanged
// [0x00020002] 
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void AUTEntryPlayerController::OnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnOnControllerChanged = NULL;

	if ( ! pFnOnControllerChanged )
		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 56171 ];

	AUTEntryPlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTEntryPlayerController::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 56170 ];

	AUTEntryPlayerController_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.RestorePostProcessing
// [0x00020102] 
// Parameters infos:

void AUTEntryPlayerController::RestorePostProcessing ( )
{
	static UFunction* pFnRestorePostProcessing = NULL;

	if ( ! pFnRestorePostProcessing )
		pFnRestorePostProcessing = (UFunction*) UObject::GObjObjects()->Data[ 56168 ];

	AUTEntryPlayerController_execRestorePostProcessing_Parms RestorePostProcessing_Parms;

	this->ProcessEvent ( pFnRestorePostProcessing, &RestorePostProcessing_Parms, NULL );
};

// Function UTGame.UTEntryPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTEntryPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 56167 ];

	AUTEntryPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function UTGame.UTEntryHUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AUTEntryHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 56161 ];

	AUTEntryHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function UTGame.UTVoice_Robot.SendLocationUpdate
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Sender                         ( CPF_Parm )
// class APlayerReplicationInfo*  Recipient                      ( CPF_Parm )
// struct FName                   MessageType                    ( CPF_Parm )
// class AUTGame*                 G                              ( CPF_Parm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// unsigned long                  bDontSendMidfield              ( CPF_OptionalParm | CPF_Parm )

bool UUTVoice_Robot::SendLocationUpdate ( class AController* Sender, class APlayerReplicationInfo* Recipient, struct FName MessageType, class AUTGame* G, class APawn* StatusPawn, unsigned long bDontSendMidfield )
{
	static UFunction* pFnSendLocationUpdate = NULL;

	if ( ! pFnSendLocationUpdate )
		pFnSendLocationUpdate = (UFunction*) UObject::GObjObjects()->Data[ 60060 ];

	UUTVoice_Robot_execSendLocationUpdate_Parms SendLocationUpdate_Parms;
	SendLocationUpdate_Parms.Sender = Sender;
	SendLocationUpdate_Parms.Recipient = Recipient;
	memcpy ( &SendLocationUpdate_Parms.MessageType, &MessageType, 0x8 );
	SendLocationUpdate_Parms.G = G;
	SendLocationUpdate_Parms.StatusPawn = StatusPawn;
	SendLocationUpdate_Parms.bDontSendMidfield = bDontSendMidfield;

	this->ProcessEvent ( pFnSendLocationUpdate, &SendLocationUpdate_Parms, NULL );

	return SendLocationUpdate_Parms.ReturnValue;
};

// Function UTGame.UTGib_Robot.DoCustomGibEffects
// [0x00020102] 
// Parameters infos:

void AUTGib_Robot::DoCustomGibEffects ( )
{
	static UFunction* pFnDoCustomGibEffects = NULL;

	if ( ! pFnDoCustomGibEffects )
		pFnDoCustomGibEffects = (UFunction*) UObject::GObjObjects()->Data[ 56812 ];

	AUTGib_Robot_execDoCustomGibEffects_Parms DoCustomGibEffects_Parms;

	this->ProcessEvent ( pFnDoCustomGibEffects, &DoCustomGibEffects_Parms, NULL );
};

// Function UTGame.UTRotatingDroppedPickup.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTRotatingDroppedPickup::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58106 ];

	AUTRotatingDroppedPickup_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTJumpLiftExit.CanBeReachedFromLiftBy
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

bool AUTJumpLiftExit::CanBeReachedFromLiftBy ( class APawn* Other )
{
	static UFunction* pFnCanBeReachedFromLiftBy = NULL;

	if ( ! pFnCanBeReachedFromLiftBy )
		pFnCanBeReachedFromLiftBy = (UFunction*) UObject::GObjObjects()->Data[ 57050 ];

	AUTJumpLiftExit_execCanBeReachedFromLiftBy_Parms CanBeReachedFromLiftBy_Parms;
	CanBeReachedFromLiftBy_Parms.Other = Other;

	this->ProcessEvent ( pFnCanBeReachedFromLiftBy, &CanBeReachedFromLiftBy_Parms, NULL );

	return CanBeReachedFromLiftBy_Parms.ReturnValue;
};

// Function UTGame.UTJumpLiftExit.WaitForLift
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTJumpLiftExit::WaitForLift ( class APawn* Other )
{
	static UFunction* pFnWaitForLift = NULL;

	if ( ! pFnWaitForLift )
		pFnWaitForLift = (UFunction*) UObject::GObjObjects()->Data[ 57048 ];

	AUTJumpLiftExit_execWaitForLift_Parms WaitForLift_Parms;
	WaitForLift_Parms.Other = Other;

	this->ProcessEvent ( pFnWaitForLift, &WaitForLift_Parms, NULL );
};

// Function UTGame.UTJumpLiftExit.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTJumpLiftExit::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57047 ];

	AUTJumpLiftExit_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTKillZVolume.KillActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTKillZVolume::eventKillActor ( class AActor* Other )
{
	static UFunction* pFnKillActor = NULL;

	if ( ! pFnKillActor )
		pFnKillActor = (UFunction*) UObject::GObjObjects()->Data[ 57155 ];

	AUTKillZVolume_eventKillActor_Parms KillActor_Parms;
	KillActor_Parms.Other = Other;

	this->ProcessEvent ( pFnKillActor, &KillActor_Parms, NULL );
};

// Function UTGame.UTKillZVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTKillZVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 57150 ];

	AUTKillZVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTKillZVolume.PawnEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTKillZVolume::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 57148 ];

	AUTKillZVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function UTGame.UTKillZVolume.ActorEnteredVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTKillZVolume::eventActorEnteredVolume ( class AActor* Other )
{
	static UFunction* pFnActorEnteredVolume = NULL;

	if ( ! pFnActorEnteredVolume )
		pFnActorEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 57146 ];

	AUTKillZVolume_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL );
};

// Function UTGame.UTKismetAnnouncement.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UUTKismetAnnouncement::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 57204 ];

	UUTKismetAnnouncement_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function UTGame.UTKismetAnnouncement.GetObjectiveAnnouncement
// [0x00822002] 
// Parameters infos:
// struct FObjectiveAnnouncementInfo ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  MessageIndex                   ( CPF_Parm )
// class UObject*                 Objective                      ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

struct FObjectiveAnnouncementInfo UUTKismetAnnouncement::GetObjectiveAnnouncement ( unsigned char MessageIndex, class UObject* Objective, class APlayerController* PC )
{
	static UFunction* pFnGetObjectiveAnnouncement = NULL;

	if ( ! pFnGetObjectiveAnnouncement )
		pFnGetObjectiveAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 57195 ];

	UUTKismetAnnouncement_execGetObjectiveAnnouncement_Parms GetObjectiveAnnouncement_Parms;
	GetObjectiveAnnouncement_Parms.MessageIndex = MessageIndex;
	GetObjectiveAnnouncement_Parms.Objective = Objective;
	GetObjectiveAnnouncement_Parms.PC = PC;

	this->ProcessEvent ( pFnGetObjectiveAnnouncement, &GetObjectiveAnnouncement_Parms, NULL );

	return GetObjectiveAnnouncement_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_PlayAnnouncement.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_PlayAnnouncement::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58219 ];

	UUTSeqAct_PlayAnnouncement_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTMutator_Arena.ModifyPlayer
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTMutator_Arena::ModifyPlayer ( class APawn* Other )
{
	static UFunction* pFnModifyPlayer = NULL;

	if ( ! pFnModifyPlayer )
		pFnModifyPlayer = (UFunction*) UObject::GObjObjects()->Data[ 57515 ];

	AUTMutator_Arena_execModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.Other = Other;

	this->ProcessEvent ( pFnModifyPlayer, &ModifyPlayer_Parms, NULL );
};

// Function UTGame.UTMutator_Arena.CheckReplacement
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTMutator_Arena::CheckReplacement ( class AActor* Other )
{
	static UFunction* pFnCheckReplacement = NULL;

	if ( ! pFnCheckReplacement )
		pFnCheckReplacement = (UFunction*) UObject::GObjObjects()->Data[ 57512 ];

	AUTMutator_Arena_execCheckReplacement_Parms CheckReplacement_Parms;
	CheckReplacement_Parms.Other = Other;

	this->ProcessEvent ( pFnCheckReplacement, &CheckReplacement_Parms, NULL );

	return CheckReplacement_Parms.ReturnValue;
};

// Function UTGame.UTMutator_Arena.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void AUTMutator_Arena::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57510 ];

	AUTMutator_Arena_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTMutator_FriendlyFire.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_FriendlyFire::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57526 ];

	AUTMutator_FriendlyFire_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTMutator_FriendlyFire.MutatorIsAllowed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTMutator_FriendlyFire::MutatorIsAllowed ( )
{
	static UFunction* pFnMutatorIsAllowed = NULL;

	if ( ! pFnMutatorIsAllowed )
		pFnMutatorIsAllowed = (UFunction*) UObject::GObjObjects()->Data[ 57524 ];

	AUTMutator_FriendlyFire_execMutatorIsAllowed_Parms MutatorIsAllowed_Parms;

	this->ProcessEvent ( pFnMutatorIsAllowed, &MutatorIsAllowed_Parms, NULL );

	return MutatorIsAllowed_Parms.ReturnValue;
};

// Function UTGame.UTMutator_NoHoverboard.InitMutator
// [0x00420002] 
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTMutator_NoHoverboard::InitMutator ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitMutator = NULL;

	if ( ! pFnInitMutator )
		pFnInitMutator = (UFunction*) UObject::GObjObjects()->Data[ 57542 ];

	AUTMutator_NoHoverboard_execInitMutator_Parms InitMutator_Parms;
	memcpy ( &InitMutator_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitMutator, &InitMutator_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitMutator_Parms.ErrorMessage, 0xC );
};

// Function UTGame.UTPickupFactory_HealthVial.BotDesireability
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float AUTPickupFactory_HealthVial::BotDesireability ( class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 57744 ];

	AUTPickupFactory_HealthVial_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function UTGame.UTPickupFactory_HealthVial.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void AUTPickupFactory_HealthVial::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 57742 ];

	AUTPickupFactory_HealthVial_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function UTGame.UTPickupFactory_HealthVial.FindAdjacentVials
// [0x00420002] 
// Parameters infos:
// class AUTPickupFactory_HealthVial* InitialCaller                  ( CPF_Parm )
// TArray< class AUTPickupFactory_HealthVial* > InAdjacentVials                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTPickupFactory_HealthVial::FindAdjacentVials ( class AUTPickupFactory_HealthVial* InitialCaller, TArray< class AUTPickupFactory_HealthVial* >* InAdjacentVials )
{
	static UFunction* pFnFindAdjacentVials = NULL;

	if ( ! pFnFindAdjacentVials )
		pFnFindAdjacentVials = (UFunction*) UObject::GObjObjects()->Data[ 57736 ];

	AUTPickupFactory_HealthVial_execFindAdjacentVials_Parms FindAdjacentVials_Parms;
	FindAdjacentVials_Parms.InitialCaller = InitialCaller;

	this->ProcessEvent ( pFnFindAdjacentVials, &FindAdjacentVials_Parms, NULL );

	if ( InAdjacentVials )
		memcpy ( InAdjacentVials, &FindAdjacentVials_Parms.InAdjacentVials, 0xC );
};

// Function UTGame.UTPickupFactory_HealthVial.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTPickupFactory_HealthVial::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 57735 ];

	AUTPickupFactory_HealthVial_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTProj_Grenade.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void AUTProj_Grenade::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 58022 ];

	AUTProj_Grenade_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function UTGame.UTProj_Grenade.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void AUTProj_Grenade::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 58018 ];

	AUTProj_Grenade_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function UTGame.UTProj_Grenade.Timer
// [0x00020102] 
// Parameters infos:

void AUTProj_Grenade::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 58017 ];

	AUTProj_Grenade_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function UTGame.UTProj_Grenade.Init
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void AUTProj_Grenade::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58015 ];

	AUTProj_Grenade_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function UTGame.UTProj_Grenade.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTProj_Grenade::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58014 ];

	AUTProj_Grenade_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTProj_LinkPlasma.SetExplosionEffectParameters
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void AUTProj_LinkPlasma::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 58048 ];

	AUTProj_LinkPlasma_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function UTGame.UTProj_LinkPlasma.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void AUTProj_LinkPlasma::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 58047 ];

	AUTProj_LinkPlasma_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function UTGame.UTProj_LinkPlasma.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void AUTProj_LinkPlasma::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 58043 ];

	AUTProj_LinkPlasma_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function UTGame.UTProj_LinkPlasma.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTProj_LinkPlasma::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 58039 ];

	AUTProj_LinkPlasma_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function UTGame.UTProj_Rocket.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTProj_Rocket::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58059 ];

	AUTProj_Rocket_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTProj_LoadedRocket.FlockTimer
// [0x00820102] 
// Parameters infos:

void AUTProj_LoadedRocket::FlockTimer ( )
{
	static UFunction* pFnFlockTimer = NULL;

	if ( ! pFnFlockTimer )
		pFnFlockTimer = (UFunction*) UObject::GObjObjects()->Data[ 58079 ];

	AUTProj_LoadedRocket_execFlockTimer_Parms FlockTimer_Parms;

	this->ProcessEvent ( pFnFlockTimer, &FlockTimer_Parms, NULL );
};

// Function UTGame.UTProj_LoadedRocket.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTProj_LoadedRocket::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 58075 ];

	AUTProj_LoadedRocket_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTProj_LoadedRocket.Destroyed
// [0x00020102] 
// Parameters infos:

void AUTProj_LoadedRocket::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 58074 ];

	AUTProj_LoadedRocket_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTProj_ScorpionGlob_Base.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTProj_ScorpionGlob_Base::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 58092 ];

	AUTProj_ScorpionGlob_Base_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function UTGame.UTProj_ScorpionGlob_Base.PhysicsVolumeChange
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void AUTProj_ScorpionGlob_Base::eventPhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 58090 ];

	AUTProj_ScorpionGlob_Base_eventPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function UTGame.UTProj_ScorpionGlob_Base.ShutDown
// [0x00020102] 
// Parameters infos:

void AUTProj_ScorpionGlob_Base::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 58089 ];

	AUTProj_ScorpionGlob_Base_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function UTGame.UTProj_ScorpionGlob_Base.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTProj_ScorpionGlob_Base::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 58088 ];

	AUTProj_ScorpionGlob_Base_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function UTGame.UTScavengerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UUTScavengerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 58121 ];

	UUTScavengerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function UTGame.UTScriptedBotVolume.PawnLeavingVolume
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTScriptedBotVolume::eventPawnLeavingVolume ( class APawn* Other )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 58133 ];

	AUTScriptedBotVolume_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function UTGame.UTSeqAct_AddNamedBot.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqAct_AddNamedBot::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58174 ];

	UUTSeqAct_AddNamedBot_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_AddNamedBot.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_AddNamedBot::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58172 ];

	UUTSeqAct_AddNamedBot_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_ChangeTeam.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_ChangeTeam::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58182 ];

	UUTSeqAct_ChangeTeam_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_EnterVehicle.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_EnterVehicle::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58202 ];

	UUTSeqAct_EnterVehicle_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_GetTeamNum.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_GetTeamNum::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58211 ];

	UUTSeqAct_GetTeamNum_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_ReturnCTFFlag.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_ReturnCTFFlag::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58227 ];

	UUTSeqAct_ReturnCTFFlag_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_ScriptedVoiceMessage.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UUTSeqAct_ScriptedVoiceMessage::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 58239 ];

	UUTSeqAct_ScriptedVoiceMessage_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function UTGame.UTSeqAct_ScriptedVoiceMessage.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_ScriptedVoiceMessage::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58234 ];

	UUTSeqAct_ScriptedVoiceMessage_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_SetVisibilityModifier.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_SetVisibilityModifier::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58248 ];

	UUTSeqAct_SetVisibilityModifier_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_SpawnProjectile.Activated
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_SpawnProjectile::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58253 ];

	UUTSeqAct_SpawnProjectile_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqAct_ToggleAnnouncements.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqAct_ToggleAnnouncements::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58265 ];

	UUTSeqAct_ToggleAnnouncements_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_CheckWeapon.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_CheckWeapon::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58274 ];

	UUTSeqCond_CheckWeapon_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_DoTutorial.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_DoTutorial::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58280 ];

	UUTSeqCond_DoTutorial_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_HasInventory.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_HasInventory::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58289 ];

	UUTSeqCond_HasInventory_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_IsCarryingFlag.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_IsCarryingFlag::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58297 ];

	UUTSeqCond_IsCarryingFlag_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_IsConsole.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_IsConsole::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58304 ];

	UUTSeqCond_IsConsole_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSeqCond_IsUsingWeapon.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUTSeqCond_IsUsingWeapon::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 58311 ];

	UUTSeqCond_IsUsingWeapon_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.CheckRespawn
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTSimpleDestroyable::eventCheckRespawn ( )
{
	static UFunction* pFnCheckRespawn = NULL;

	if ( ! pFnCheckRespawn )
		pFnCheckRespawn = (UFunction*) UObject::GObjObjects()->Data[ 58378 ];

	AUTSimpleDestroyable_eventCheckRespawn_Parms CheckRespawn_Parms;

	this->ProcessEvent ( pFnCheckRespawn, &CheckRespawn_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.Touch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTSimpleDestroyable::Touch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 58373 ];

	AUTSimpleDestroyable_execTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.TakeDamage
// [0x00024102] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTSimpleDestroyable::TakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 58365 ];

	AUTSimpleDestroyable_execTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.RespawnDestructible
// [0x00020102] 
// Parameters infos:

void AUTSimpleDestroyable::RespawnDestructible ( )
{
	static UFunction* pFnRespawnDestructible = NULL;

	if ( ! pFnRespawnDestructible )
		pFnRespawnDestructible = (UFunction*) UObject::GObjObjects()->Data[ 58364 ];

	AUTSimpleDestroyable_execRespawnDestructible_Parms RespawnDestructible_Parms;

	this->ProcessEvent ( pFnRespawnDestructible, &RespawnDestructible_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.GoBoom
// [0x00020102] 
// Parameters infos:

void AUTSimpleDestroyable::GoBoom ( )
{
	static UFunction* pFnGoBoom = NULL;

	if ( ! pFnGoBoom )
		pFnGoBoom = (UFunction*) UObject::GObjObjects()->Data[ 58362 ];

	AUTSimpleDestroyable_execGoBoom_Parms GoBoom_Parms;

	this->ProcessEvent ( pFnGoBoom, &GoBoom_Parms, NULL );
};

// Function UTGame.UTSimpleDestroyable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTSimpleDestroyable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58361 ];

	AUTSimpleDestroyable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTSkelControl_CicadaEngine.TickSkelControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void UUTSkelControl_CicadaEngine::eventTickSkelControl ( float DeltaTime, class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnTickSkelControl = NULL;

	if ( ! pFnTickSkelControl )
		pFnTickSkelControl = (UFunction*) UObject::GObjObjects()->Data[ 58410 ];

	UUTSkelControl_CicadaEngine_eventTickSkelControl_Parms TickSkelControl_Parms;
	TickSkelControl_Parms.DeltaTime = DeltaTime;
	TickSkelControl_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnTickSkelControl, &TickSkelControl_Parms, NULL );
};

// Function UTGame.UTSkelControl_DamageHinge.BreakApartOnDeath
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_DamageHinge::eventBreakApartOnDeath ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApartOnDeath = NULL;

	if ( ! pFnBreakApartOnDeath )
		pFnBreakApartOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 58431 ];

	UUTSkelControl_DamageHinge_eventBreakApartOnDeath_Parms BreakApartOnDeath_Parms;
	memcpy ( &BreakApartOnDeath_Parms.PartLocation, &PartLocation, 0xC );
	BreakApartOnDeath_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApartOnDeath, &BreakApartOnDeath_Parms, NULL );
};

// Function UTGame.UTSkelControl_DamageHinge.BreakApart
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_DamageHinge::eventBreakApart ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApart = NULL;

	if ( ! pFnBreakApart )
		pFnBreakApart = (UFunction*) UObject::GObjObjects()->Data[ 58427 ];

	UUTSkelControl_DamageHinge_eventBreakApart_Parms BreakApart_Parms;
	memcpy ( &BreakApart_Parms.PartLocation, &PartLocation, 0xC );
	BreakApart_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApart, &BreakApart_Parms, NULL );
};

// Function UTGame.UTSkelControl_DamageSpring.BreakApartOnDeath
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_DamageSpring::eventBreakApartOnDeath ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApartOnDeath = NULL;

	if ( ! pFnBreakApartOnDeath )
		pFnBreakApartOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 58441 ];

	UUTSkelControl_DamageSpring_eventBreakApartOnDeath_Parms BreakApartOnDeath_Parms;
	memcpy ( &BreakApartOnDeath_Parms.PartLocation, &PartLocation, 0xC );
	BreakApartOnDeath_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApartOnDeath, &BreakApartOnDeath_Parms, NULL );
};

// Function UTGame.UTSkelControl_DamageSpring.BreakApart
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 PartLocation                   ( CPF_Parm )
// unsigned long                  bIsVisible                     ( CPF_Parm )

void UUTSkelControl_DamageSpring::eventBreakApart ( struct FVector PartLocation, unsigned long bIsVisible )
{
	static UFunction* pFnBreakApart = NULL;

	if ( ! pFnBreakApart )
		pFnBreakApart = (UFunction*) UObject::GObjObjects()->Data[ 58437 ];

	UUTSkelControl_DamageSpring_eventBreakApart_Parms BreakApart_Parms;
	memcpy ( &BreakApart_Parms.PartLocation, &PartLocation, 0xC );
	BreakApart_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnBreakApart, &BreakApart_Parms, NULL );
};

// Function UTGame.UTSkelControl_JetThruster.TickSkelControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void UUTSkelControl_JetThruster::eventTickSkelControl ( float DeltaTime, class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnTickSkelControl = NULL;

	if ( ! pFnTickSkelControl )
		pFnTickSkelControl = (UFunction*) UObject::GObjObjects()->Data[ 58458 ];

	UUTSkelControl_JetThruster_eventTickSkelControl_Parms TickSkelControl_Parms;
	TickSkelControl_Parms.DeltaTime = DeltaTime;
	TickSkelControl_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnTickSkelControl, &TickSkelControl_Parms, NULL );
};

// Function UTGame.UTSkelControl_Oscillate.TickSkelControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void UUTSkelControl_Oscillate::eventTickSkelControl ( float DeltaTime, class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnTickSkelControl = NULL;

	if ( ! pFnTickSkelControl )
		pFnTickSkelControl = (UFunction*) UObject::GObjObjects()->Data[ 58481 ];

	UUTSkelControl_Oscillate_eventTickSkelControl_Parms TickSkelControl_Parms;
	TickSkelControl_Parms.DeltaTime = DeltaTime;
	TickSkelControl_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnTickSkelControl, &TickSkelControl_Parms, NULL );
};

// Function UTGame.UTTeleporterCustomMesh.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTTeleporterCustomMesh::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 58595 ];

	AUTTeleporterCustomMesh_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTTeleporterCustomMesh.Accept
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Incoming                       ( CPF_Parm )
// class AActor*                  Source                         ( CPF_Parm )

bool AUTTeleporterCustomMesh::eventAccept ( class AActor* Incoming, class AActor* Source )
{
	static UFunction* pFnAccept = NULL;

	if ( ! pFnAccept )
		pFnAccept = (UFunction*) UObject::GObjObjects()->Data[ 58590 ];

	AUTTeleporterCustomMesh_eventAccept_Parms Accept_Parms;
	Accept_Parms.Incoming = Incoming;
	Accept_Parms.Source = Source;

	this->ProcessEvent ( pFnAccept, &Accept_Parms, NULL );

	return Accept_Parms.ReturnValue;
};

// Function UTGame.UTUIDataProvider_MultiplayerMenuItem.ShouldBeFiltered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_MultiplayerMenuItem::eventShouldBeFiltered ( )
{
	static UFunction* pFnShouldBeFiltered = NULL;

	if ( ! pFnShouldBeFiltered )
		pFnShouldBeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 58721 ];

	UUTUIDataProvider_MultiplayerMenuItem_eventShouldBeFiltered_Parms ShouldBeFiltered_Parms;

	this->ProcessEvent ( pFnShouldBeFiltered, &ShouldBeFiltered_Parms, NULL );

	return ShouldBeFiltered_Parms.ReturnValue;
};

// Function UTGame.UTUIDataProvider_SettingsMenuItem.ShouldBeFiltered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UUTUIDataProvider_SettingsMenuItem::eventShouldBeFiltered ( )
{
	static UFunction* pFnShouldBeFiltered = NULL;

	if ( ! pFnShouldBeFiltered )
		pFnShouldBeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 58744 ];

	UUTUIDataProvider_SettingsMenuItem_eventShouldBeFiltered_Parms ShouldBeFiltered_Parms;

	this->ProcessEvent ( pFnShouldBeFiltered, &ShouldBeFiltered_Parms, NULL );

	return ShouldBeFiltered_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Cicada::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 58823 ];

	AUTVehicle_Cicada_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.VehicleCalcCamera
// [0x00424102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void AUTVehicle_Cicada::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 58816 ];

	AUTVehicle_Cicada_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function UTGame.UTVehicle_Cicada.GetCameraStart
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector AUTVehicle_Cicada::GetCameraStart ( int SeatIndex )
{
	static UFunction* pFnGetCameraStart = NULL;

	if ( ! pFnGetCameraStart )
		pFnGetCameraStart = (UFunction*) UObject::GObjObjects()->Data[ 58812 ];

	AUTVehicle_Cicada_execGetCameraStart_Parms GetCameraStart_Parms;
	GetCameraStart_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraStart, &GetCameraStart_Parms, NULL );

	return GetCameraStart_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.VehicleWeaponImpactEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Cicada::VehicleWeaponImpactEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponImpactEffects = NULL;

	if ( ! pFnVehicleWeaponImpactEffects )
		pFnVehicleWeaponImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 58808 ];

	AUTVehicle_Cicada_execVehicleWeaponImpactEffects_Parms VehicleWeaponImpactEffects_Parms;
	memcpy ( &VehicleWeaponImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponImpactEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponImpactEffects, &VehicleWeaponImpactEffects_Parms, NULL );
};

// Function UTGame.UTVehicle_Cicada.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Cicada::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 58806 ];

	AUTVehicle_Cicada_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Cicada::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 58803 ];

	AUTVehicle_Cicada_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function UTGame.UTVehicle_Cicada.PassengerEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool AUTVehicle_Cicada::PassengerEnter ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnPassengerEnter = NULL;

	if ( ! pFnPassengerEnter )
		pFnPassengerEnter = (UFunction*) UObject::GObjObjects()->Data[ 58799 ];

	AUTVehicle_Cicada_execPassengerEnter_Parms PassengerEnter_Parms;
	PassengerEnter_Parms.P = P;
	PassengerEnter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerEnter, &PassengerEnter_Parms, NULL );

	return PassengerEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.PassengerLeave
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Cicada::PassengerLeave ( int SeatIndex )
{
	static UFunction* pFnPassengerLeave = NULL;

	if ( ! pFnPassengerLeave )
		pFnPassengerLeave = (UFunction*) UObject::GObjObjects()->Data[ 58797 ];

	AUTVehicle_Cicada_execPassengerLeave_Parms PassengerLeave_Parms;
	PassengerLeave_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerLeave, &PassengerLeave_Parms, NULL );
};

// Function UTGame.UTVehicle_Cicada.DriverLeft
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Cicada::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 58796 ];

	AUTVehicle_Cicada_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function UTGame.UTVehicle_Cicada.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Cicada::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 58792 ];

	AUTVehicle_Cicada_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.ImportantVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Cicada::ImportantVehicle ( )
{
	static UFunction* pFnImportantVehicle = NULL;

	if ( ! pFnImportantVehicle )
		pFnImportantVehicle = (UFunction*) UObject::GObjObjects()->Data[ 58790 ];

	AUTVehicle_Cicada_execImportantVehicle_Parms ImportantVehicle_Parms;

	this->ProcessEvent ( pFnImportantVehicle, &ImportantVehicle_Parms, NULL );

	return ImportantVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Cicada.ResetTurningSpeed
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Cicada::ResetTurningSpeed ( )
{
	static UFunction* pFnResetTurningSpeed = NULL;

	if ( ! pFnResetTurningSpeed )
		pFnResetTurningSpeed = (UFunction*) UObject::GObjObjects()->Data[ 58789 ];

	AUTVehicle_Cicada_execResetTurningSpeed_Parms ResetTurningSpeed_Parms;

	this->ProcessEvent ( pFnResetTurningSpeed, &ResetTurningSpeed_Parms, NULL );
};

// Function UTGame.UTVehicle_Cicada.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle_Cicada::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 58784 ];

	AUTVehicle_Cicada_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTVehicle_Cicada.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void AUTVehicle_Cicada::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 58775 ];

	AUTVehicle_Cicada_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.ResetCrosshair
// [0x00020102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void AUTVWeap_TowCable::ResetCrosshair ( class UCanvas* Canvas )
{
	static UFunction* pFnResetCrosshair = NULL;

	if ( ! pFnResetCrosshair )
		pFnResetCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 60086 ];

	AUTVWeap_TowCable_execResetCrosshair_Parms ResetCrosshair_Parms;
	ResetCrosshair_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnResetCrosshair, &ResetCrosshair_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.DrawWeaponCrosshair
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void AUTVWeap_TowCable::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 60084 ];

	AUTVWeap_TowCable_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTVWeap_TowCable::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 60082 ];

	AUTVWeap_TowCable_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.CustomFire
// [0x00020100] 
// Parameters infos:

void AUTVWeap_TowCable::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 60081 ];

	AUTVWeap_TowCable_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void AUTVWeap_TowCable::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 60079 ];

	AUTVWeap_TowCable_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function UTGame.UTVWeap_TowCable.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTVWeap_TowCable::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 60077 ];

	AUTVWeap_TowCable_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function UTGame.UTVWeap_TowCable.MaxRange
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVWeap_TowCable::MaxRange ( )
{
	static UFunction* pFnMaxRange = NULL;

	if ( ! pFnMaxRange )
		pFnMaxRange = (UFunction*) UObject::GObjObjects()->Data[ 60075 ];

	AUTVWeap_TowCable_execMaxRange_Parms MaxRange_Parms;

	this->ProcessEvent ( pFnMaxRange, &MaxRange_Parms, NULL );

	return MaxRange_Parms.ReturnValue;
};

// Function UTGame.UTVWeap_TowCable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTVWeap_TowCable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60074 ];

	AUTVWeap_TowCable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.RecommendCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTVehicle_Manta::RecommendCharge ( class AUTBot* B, class APawn* Enemy )
{
	static UFunction* pFnRecommendCharge = NULL;

	if ( ! pFnRecommendCharge )
		pFnRecommendCharge = (UFunction*) UObject::GObjObjects()->Data[ 59249 ];

	AUTVehicle_Manta_execRecommendCharge_Parms RecommendCharge_Parms;
	RecommendCharge_Parms.B = B;
	RecommendCharge_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnRecommendCharge, &RecommendCharge_Parms, NULL );

	return RecommendCharge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle_Manta::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 59244 ];

	AUTVehicle_Manta_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Manta::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 59242 ];

	AUTVehicle_Manta_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle_Manta::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 59237 ];

	AUTVehicle_Manta_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTVehicle_Manta.GetChargePower
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float AUTVehicle_Manta::GetChargePower ( )
{
	static UFunction* pFnGetChargePower = NULL;

	if ( ! pFnGetChargePower )
		pFnGetChargePower = (UFunction*) UObject::GObjObjects()->Data[ 59235 ];

	AUTVehicle_Manta_execGetChargePower_Parms GetChargePower_Parms;

	this->ProcessEvent ( pFnGetChargePower, &GetChargePower_Parms, NULL );

	return GetChargePower_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTVehicle_Manta::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 59233 ];

	AUTVehicle_Manta_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Manta::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 59232 ];

	AUTVehicle_Manta_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.IncomingMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void AUTVehicle_Manta::IncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 59229 ];

	AUTVehicle_Manta_execIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool AUTVehicle_Manta::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 59226 ];

	AUTVehicle_Manta_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.ChooseFireMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTVehicle_Manta::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 59223 ];

	AUTVehicle_Manta_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.MantaDuckEffect
// [0x00020100] 
// Parameters infos:

void AUTVehicle_Manta::MantaDuckEffect ( )
{
	static UFunction* pFnMantaDuckEffect = NULL;

	if ( ! pFnMantaDuckEffect )
		pFnMantaDuckEffect = (UFunction*) UObject::GObjObjects()->Data[ 59222 ];

	AUTVehicle_Manta_execMantaDuckEffect_Parms MantaDuckEffect_Parms;

	this->ProcessEvent ( pFnMantaDuckEffect, &MantaDuckEffect_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.MantaJumpEffect
// [0x00020100] 
// Parameters infos:

void AUTVehicle_Manta::MantaJumpEffect ( )
{
	static UFunction* pFnMantaJumpEffect = NULL;

	if ( ! pFnMantaJumpEffect )
		pFnMantaJumpEffect = (UFunction*) UObject::GObjObjects()->Data[ 59221 ];

	AUTVehicle_Manta_execMantaJumpEffect_Parms MantaJumpEffect_Parms;

	this->ProcessEvent ( pFnMantaJumpEffect, &MantaJumpEffect_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void AUTVehicle_Manta::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 59218 ];

	AUTVehicle_Manta_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function UTGame.UTVehicle_Manta.OverrideEndFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle_Manta::OverrideEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideEndFire = NULL;

	if ( ! pFnOverrideEndFire )
		pFnOverrideEndFire = (UFunction*) UObject::GObjObjects()->Data[ 59215 ];

	AUTVehicle_Manta_execOverrideEndFire_Parms OverrideEndFire_Parms;
	OverrideEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideEndFire, &OverrideEndFire_Parms, NULL );

	return OverrideEndFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.OverrideBeginFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle_Manta::OverrideBeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideBeginFire = NULL;

	if ( ! pFnOverrideBeginFire )
		pFnOverrideBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 59212 ];

	AUTVehicle_Manta_execOverrideBeginFire_Parms OverrideBeginFire_Parms;
	OverrideBeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideBeginFire, &OverrideBeginFire_Parms, NULL );

	return OverrideBeginFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Manta::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 59208 ];

	AUTVehicle_Manta_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.CanBeBaseForPawn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool AUTVehicle_Manta::CanBeBaseForPawn ( class APawn* aPawn )
{
	static UFunction* pFnCanBeBaseForPawn = NULL;

	if ( ! pFnCanBeBaseForPawn )
		pFnCanBeBaseForPawn = (UFunction*) UObject::GObjObjects()->Data[ 59205 ];

	AUTVehicle_Manta_execCanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;
	CanBeBaseForPawn_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnCanBeBaseForPawn, &CanBeBaseForPawn_Parms, NULL );

	return CanBeBaseForPawn_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Manta.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void AUTVehicle_Manta::eventTick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59189 ];

	AUTVehicle_Manta_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.CriticalChargeAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )

bool AUTVehicle_Scorpion::CriticalChargeAttack ( class AUTBot* B )
{
	static UFunction* pFnCriticalChargeAttack = NULL;

	if ( ! pFnCriticalChargeAttack )
		pFnCriticalChargeAttack = (UFunction*) UObject::GObjObjects()->Data[ 59474 ];

	AUTVehicle_Scorpion_execCriticalChargeAttack_Parms CriticalChargeAttack_Parms;
	CriticalChargeAttack_Parms.B = B;

	this->ProcessEvent ( pFnCriticalChargeAttack, &CriticalChargeAttack_Parms, NULL );

	return CriticalChargeAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.RecommendCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool AUTVehicle_Scorpion::RecommendCharge ( class AUTBot* B, class APawn* Enemy )
{
	static UFunction* pFnRecommendCharge = NULL;

	if ( ! pFnRecommendCharge )
		pFnRecommendCharge = (UFunction*) UObject::GObjObjects()->Data[ 59469 ];

	AUTVehicle_Scorpion_execRecommendCharge_Parms RecommendCharge_Parms;
	RecommendCharge_Parms.B = B;
	RecommendCharge_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnRecommendCharge, &RecommendCharge_Parms, NULL );

	return RecommendCharge_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.SetBurnOut
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::SetBurnOut ( )
{
	static UFunction* pFnSetBurnOut = NULL;

	if ( ! pFnSetBurnOut )
		pFnSetBurnOut = (UFunction*) UObject::GObjObjects()->Data[ 59468 ];

	AUTVehicle_Scorpion_execSetBurnOut_Parms SetBurnOut_Parms;

	this->ProcessEvent ( pFnSetBurnOut, &SetBurnOut_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.CauseMuzzleFlashLight
// [0x00020102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void AUTVehicle_Scorpion::CauseMuzzleFlashLight ( int SeatIndex )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 59466 ];

	AUTVehicle_Scorpion_execCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;
	CauseMuzzleFlashLight_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.BreakOffBlade
// [0x00820102] 
// Parameters infos:
// unsigned long                  bLeftBlade                     ( CPF_Parm )

void AUTVehicle_Scorpion::BreakOffBlade ( unsigned long bLeftBlade )
{
	static UFunction* pFnBreakOffBlade = NULL;

	if ( ! pFnBreakOffBlade )
		pFnBreakOffBlade = (UFunction*) UObject::GObjObjects()->Data[ 59462 ];

	AUTVehicle_Scorpion_execBreakOffBlade_Parms BreakOffBlade_Parms;
	BreakOffBlade_Parms.bLeftBlade = bLeftBlade;

	this->ProcessEvent ( pFnBreakOffBlade, &BreakOffBlade_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void AUTVehicle_Scorpion::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 59457 ];

	AUTVehicle_Scorpion_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function UTGame.UTVehicle_Scorpion.CheckScriptedSelfDestruct
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Scorpion::CheckScriptedSelfDestruct ( )
{
	static UFunction* pFnCheckScriptedSelfDestruct = NULL;

	if ( ! pFnCheckScriptedSelfDestruct )
		pFnCheckScriptedSelfDestruct = (UFunction*) UObject::GObjObjects()->Data[ 59456 ];

	AUTVehicle_Scorpion_execCheckScriptedSelfDestruct_Parms CheckScriptedSelfDestruct_Parms;

	this->ProcessEvent ( pFnCheckScriptedSelfDestruct, &CheckScriptedSelfDestruct_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.OnSelfDestruct
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_SelfDestruct*  Action                         ( CPF_Parm )

void AUTVehicle_Scorpion::OnSelfDestruct ( class UUTSeqAct_SelfDestruct* Action )
{
	static UFunction* pFnOnSelfDestruct = NULL;

	if ( ! pFnOnSelfDestruct )
		pFnOnSelfDestruct = (UFunction*) UObject::GObjObjects()->Data[ 59454 ];

	AUTVehicle_Scorpion_execOnSelfDestruct_Parms OnSelfDestruct_Parms;
	OnSelfDestruct_Parms.Action = Action;

	this->ProcessEvent ( pFnOnSelfDestruct, &OnSelfDestruct_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.TeamChanged
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::TeamChanged ( )
{
	static UFunction* pFnTeamChanged = NULL;

	if ( ! pFnTeamChanged )
		pFnTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 59453 ];

	AUTVehicle_Scorpion_execTeamChanged_Parms TeamChanged_Parms;

	this->ProcessEvent ( pFnTeamChanged, &TeamChanged_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.IncomingMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void AUTVehicle_Scorpion::IncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 59450 ];

	AUTVehicle_Scorpion_execIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool AUTVehicle_Scorpion::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 59447 ];

	AUTVehicle_Scorpion_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.ChooseFireMode
// [0x00820002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char AUTVehicle_Scorpion::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 59441 ];

	AUTVehicle_Scorpion_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.FindAutoExit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )

bool AUTVehicle_Scorpion::FindAutoExit ( class APawn* ExitingDriver )
{
	static UFunction* pFnFindAutoExit = NULL;

	if ( ! pFnFindAutoExit )
		pFnFindAutoExit = (UFunction*) UObject::GObjObjects()->Data[ 59434 ];

	AUTVehicle_Scorpion_execFindAutoExit_Parms FindAutoExit_Parms;
	FindAutoExit_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnFindAutoExit, &FindAutoExit_Parms, NULL );

	return FindAutoExit_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.BladeHit
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// unsigned long                  bLeftBlade                     ( CPF_Parm )

void AUTVehicle_Scorpion::eventBladeHit ( class AActor* HitActor, struct FVector HitLocation, unsigned long bLeftBlade )
{
	static UFunction* pFnBladeHit = NULL;

	if ( ! pFnBladeHit )
		pFnBladeHit = (UFunction*) UObject::GObjObjects()->Data[ 59426 ];

	AUTVehicle_Scorpion_eventBladeHit_Parms BladeHit_Parms;
	BladeHit_Parms.HitActor = HitActor;
	memcpy ( &BladeHit_Parms.HitLocation, &HitLocation, 0xC );
	BladeHit_Parms.bLeftBlade = bLeftBlade;

	this->ProcessEvent ( pFnBladeHit, &BladeHit_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle_Scorpion::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 59417 ];

	AUTVehicle_Scorpion_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DriverLeft
// [0x00020002] 
// Parameters infos:

void AUTVehicle_Scorpion::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 59416 ];

	AUTVehicle_Scorpion_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DisplayHud
// [0x00024102] 
// Parameters infos:
// class AUTHUD*                  HUD                            ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector2D               HudPOS                         ( CPF_Parm )
// int                            SeatIndex                      ( CPF_OptionalParm | CPF_Parm )

void AUTVehicle_Scorpion::DisplayHud ( class AUTHUD* HUD, class UCanvas* Canvas, struct FVector2D HudPOS, int SeatIndex )
{
	static UFunction* pFnDisplayHud = NULL;

	if ( ! pFnDisplayHud )
		pFnDisplayHud = (UFunction*) UObject::GObjObjects()->Data[ 59410 ];

	AUTVehicle_Scorpion_execDisplayHud_Parms DisplayHud_Parms;
	DisplayHud_Parms.HUD = HUD;
	DisplayHud_Parms.Canvas = Canvas;
	memcpy ( &DisplayHud_Parms.HudPOS, &HudPOS, 0x8 );
	DisplayHud_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnDisplayHud, &DisplayHud_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.PlaySelfDestruct
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::PlaySelfDestruct ( )
{
	static UFunction* pFnPlaySelfDestruct = NULL;

	if ( ! pFnPlaySelfDestruct )
		pFnPlaySelfDestruct = (UFunction*) UObject::GObjObjects()->Data[ 59407 ];

	AUTVehicle_Scorpion_execPlaySelfDestruct_Parms PlaySelfDestruct_Parms;

	this->ProcessEvent ( pFnPlaySelfDestruct, &PlaySelfDestruct_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.SetBladesExtended
// [0x00020102] 
// Parameters infos:
// unsigned long                  bExtended                      ( CPF_Parm )

void AUTVehicle_Scorpion::SetBladesExtended ( unsigned long bExtended )
{
	static UFunction* pFnSetBladesExtended = NULL;

	if ( ! pFnSetBladesExtended )
		pFnSetBladesExtended = (UFunction*) UObject::GObjObjects()->Data[ 59404 ];

	AUTVehicle_Scorpion_execSetBladesExtended_Parms SetBladesExtended_Parms;
	SetBladesExtended_Parms.bExtended = bExtended;

	this->ProcessEvent ( pFnSetBladesExtended, &SetBladesExtended_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.OverrideEndFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle_Scorpion::OverrideEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideEndFire = NULL;

	if ( ! pFnOverrideEndFire )
		pFnOverrideEndFire = (UFunction*) UObject::GObjObjects()->Data[ 59401 ];

	AUTVehicle_Scorpion_execOverrideEndFire_Parms OverrideEndFire_Parms;
	OverrideEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideEndFire, &OverrideEndFire_Parms, NULL );

	return OverrideEndFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.OverrideBeginFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool AUTVehicle_Scorpion::OverrideBeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideBeginFire = NULL;

	if ( ! pFnOverrideBeginFire )
		pFnOverrideBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 59398 ];

	AUTVehicle_Scorpion_execOverrideBeginFire_Parms OverrideBeginFire_Parms;
	OverrideBeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideBeginFire, &OverrideBeginFire_Parms, NULL );

	return OverrideBeginFire_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void AUTVehicle_Scorpion::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 59396 ];

	AUTVehicle_Scorpion_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.TryToDrive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Scorpion::TryToDrive ( class APawn* P )
{
	static UFunction* pFnTryToDrive = NULL;

	if ( ! pFnTryToDrive )
		pFnTryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 59393 ];

	AUTVehicle_Scorpion_execTryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;

	this->ProcessEvent ( pFnTryToDrive, &TryToDrive_Parms, NULL );

	return TryToDrive_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.SelfDestruct
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ImpactedActor                  ( CPF_Parm )

void AUTVehicle_Scorpion::eventSelfDestruct ( class AActor* ImpactedActor )
{
	static UFunction* pFnSelfDestruct = NULL;

	if ( ! pFnSelfDestruct )
		pFnSelfDestruct = (UFunction*) UObject::GObjObjects()->Data[ 59391 ];

	AUTVehicle_Scorpion_eventSelfDestruct_Parms SelfDestruct_Parms;
	SelfDestruct_Parms.ImpactedActor = ImpactedActor;

	this->ProcessEvent ( pFnSelfDestruct, &SelfDestruct_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 59390 ];

	AUTVehicle_Scorpion_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DisableVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Scorpion::DisableVehicle ( )
{
	static UFunction* pFnDisableVehicle = NULL;

	if ( ! pFnDisableVehicle )
		pFnDisableVehicle = (UFunction*) UObject::GObjObjects()->Data[ 59387 ];

	AUTVehicle_Scorpion_execDisableVehicle_Parms DisableVehicle_Parms;

	this->ProcessEvent ( pFnDisableVehicle, &DisableVehicle_Parms, NULL );

	return DisableVehicle_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.ServerBoost
// [0x002200C2] 
// Parameters infos:

void AUTVehicle_Scorpion::ServerBoost ( )
{
	static UFunction* pFnServerBoost = NULL;

	if ( ! pFnServerBoost )
		pFnServerBoost = (UFunction*) UObject::GObjObjects()->Data[ 59386 ];

	AUTVehicle_Scorpion_execServerBoost_Parms ServerBoost_Parms;

	this->ProcessEvent ( pFnServerBoost, &ServerBoost_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.OnActivateRocketBoosters
// [0x00020002] 
// Parameters infos:
// class UUTSeqAct_ActivateRocketBoosters* BoosterAction                  ( CPF_Parm )

void AUTVehicle_Scorpion::OnActivateRocketBoosters ( class UUTSeqAct_ActivateRocketBoosters* BoosterAction )
{
	static UFunction* pFnOnActivateRocketBoosters = NULL;

	if ( ! pFnOnActivateRocketBoosters )
		pFnOnActivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 59384 ];

	AUTVehicle_Scorpion_execOnActivateRocketBoosters_Parms OnActivateRocketBoosters_Parms;
	OnActivateRocketBoosters_Parms.BoosterAction = BoosterAction;

	this->ProcessEvent ( pFnOnActivateRocketBoosters, &OnActivateRocketBoosters_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DeactivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Scorpion::eventDeactivateRocketBoosters ( )
{
	static UFunction* pFnDeactivateRocketBoosters = NULL;

	if ( ! pFnDeactivateRocketBoosters )
		pFnDeactivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 59382 ];

	AUTVehicle_Scorpion_eventDeactivateRocketBoosters_Parms DeactivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnDeactivateRocketBoosters, &DeactivateRocketBoosters_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.EnableFullSteering
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Scorpion::eventEnableFullSteering ( )
{
	static UFunction* pFnEnableFullSteering = NULL;

	if ( ! pFnEnableFullSteering )
		pFnEnableFullSteering = (UFunction*) UObject::GObjObjects()->Data[ 59380 ];

	AUTVehicle_Scorpion_eventEnableFullSteering_Parms EnableFullSteering_Parms;

	this->ProcessEvent ( pFnEnableFullSteering, &EnableFullSteering_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DeactivateHandbrake
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::DeactivateHandbrake ( )
{
	static UFunction* pFnDeactivateHandbrake = NULL;

	if ( ! pFnDeactivateHandbrake )
		pFnDeactivateHandbrake = (UFunction*) UObject::GObjObjects()->Data[ 59379 ];

	AUTVehicle_Scorpion_execDeactivateHandbrake_Parms DeactivateHandbrake_Parms;

	this->ProcessEvent ( pFnDeactivateHandbrake, &DeactivateHandbrake_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.ActivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicle_Scorpion::eventActivateRocketBoosters ( )
{
	static UFunction* pFnActivateRocketBoosters = NULL;

	if ( ! pFnActivateRocketBoosters )
		pFnActivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 59377 ];

	AUTVehicle_Scorpion_eventActivateRocketBoosters_Parms ActivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnActivateRocketBoosters, &ActivateRocketBoosters_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.UnlockWheels
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::UnlockWheels ( )
{
	static UFunction* pFnUnlockWheels = NULL;

	if ( ! pFnUnlockWheels )
		pFnUnlockWheels = (UFunction*) UObject::GObjObjects()->Data[ 59375 ];

	AUTVehicle_Scorpion_execUnlockWheels_Parms UnlockWheels_Parms;

	this->ProcessEvent ( pFnUnlockWheels, &UnlockWheels_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.LockWheels
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::LockWheels ( )
{
	static UFunction* pFnLockWheels = NULL;

	if ( ! pFnLockWheels )
		pFnLockWheels = (UFunction*) UObject::GObjObjects()->Data[ 59373 ];

	AUTVehicle_Scorpion_execLockWheels_Parms LockWheels_Parms;

	this->ProcessEvent ( pFnLockWheels, &LockWheels_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.SuspensionHeavyShift
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          Delta                          ( CPF_Parm )

void AUTVehicle_Scorpion::eventSuspensionHeavyShift ( float Delta )
{
	static UFunction* pFnSuspensionHeavyShift = NULL;

	if ( ! pFnSuspensionHeavyShift )
		pFnSuspensionHeavyShift = (UFunction*) UObject::GObjObjects()->Data[ 59371 ];

	AUTVehicle_Scorpion_eventSuspensionHeavyShift_Parms SuspensionHeavyShift_Parms;
	SuspensionHeavyShift_Parms.Delta = Delta;

	this->ProcessEvent ( pFnSuspensionHeavyShift, &SuspensionHeavyShift_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.StopVehicleSounds
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::StopVehicleSounds ( )
{
	static UFunction* pFnStopVehicleSounds = NULL;

	if ( ! pFnStopVehicleSounds )
		pFnStopVehicleSounds = (UFunction*) UObject::GObjObjects()->Data[ 59370 ];

	AUTVehicle_Scorpion_execStopVehicleSounds_Parms StopVehicleSounds_Parms;

	this->ProcessEvent ( pFnStopVehicleSounds, &StopVehicleSounds_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void AUTVehicle_Scorpion::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 59366 ];

	AUTVehicle_Scorpion_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool AUTVehicle_Scorpion::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 59362 ];

	AUTVehicle_Scorpion_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.CanBeBaseForPawn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool AUTVehicle_Scorpion::CanBeBaseForPawn ( class APawn* aPawn )
{
	static UFunction* pFnCanBeBaseForPawn = NULL;

	if ( ! pFnCanBeBaseForPawn )
		pFnCanBeBaseForPawn = (UFunction*) UObject::GObjObjects()->Data[ 59359 ];

	AUTVehicle_Scorpion_execCanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;
	CanBeBaseForPawn_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnCanBeBaseForPawn, &CanBeBaseForPawn_Parms, NULL );

	return CanBeBaseForPawn_Parms.ReturnValue;
};

// Function UTGame.UTVehicle_Scorpion.PancakeOther
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void AUTVehicle_Scorpion::PancakeOther ( class APawn* Other )
{
	static UFunction* pFnPancakeOther = NULL;

	if ( ! pFnPancakeOther )
		pFnPancakeOther = (UFunction*) UObject::GObjObjects()->Data[ 59356 ];

	AUTVehicle_Scorpion_execPancakeOther_Parms PancakeOther_Parms;
	PancakeOther_Parms.Other = Other;

	this->ProcessEvent ( pFnPancakeOther, &PancakeOther_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.RanInto
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTVehicle_Scorpion::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 59353 ];

	AUTVehicle_Scorpion_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void AUTVehicle_Scorpion::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59352 ];

	AUTVehicle_Scorpion_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void AUTVehicle_Scorpion::Tick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59340 ];

	AUTVehicle_Scorpion_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTVehicle_Scorpion.ReadyToSelfDestruct
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool AUTVehicle_Scorpion::ReadyToSelfDestruct ( )
{
	static UFunction* pFnReadyToSelfDestruct = NULL;

	if ( ! pFnReadyToSelfDestruct )
		pFnReadyToSelfDestruct = (UFunction*) UObject::GObjObjects()->Data[ 59338 ];

	AUTVehicle_Scorpion_execReadyToSelfDestruct_Parms ReadyToSelfDestruct_Parms;

	this->ProcessEvent ( pFnReadyToSelfDestruct, &ReadyToSelfDestruct_Parms, NULL );

	return ReadyToSelfDestruct_Parms.ReturnValue;
};

// Function UTGame.UTVehicleBoostPad.Tick
// [0x00820002] 
// Parameters infos:
// float                          DT                             ( CPF_Parm )

void AUTVehicleBoostPad::Tick ( float DT )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59521 ];

	AUTVehicleBoostPad_execTick_Parms Tick_Parms;
	Tick_Parms.DT = DT;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function UTGame.UTVehicleBoostPad.CalculateForce
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 CarLocation                    ( CPF_Parm )
// struct FVector                 CarVelocity                    ( CPF_Parm )

struct FVector AUTVehicleBoostPad::CalculateForce ( struct FVector CarLocation, struct FVector CarVelocity )
{
	static UFunction* pFnCalculateForce = NULL;

	if ( ! pFnCalculateForce )
		pFnCalculateForce = (UFunction*) UObject::GObjObjects()->Data[ 59512 ];

	AUTVehicleBoostPad_execCalculateForce_Parms CalculateForce_Parms;
	memcpy ( &CalculateForce_Parms.CarLocation, &CarLocation, 0xC );
	memcpy ( &CalculateForce_Parms.CarVelocity, &CarVelocity, 0xC );

	this->ProcessEvent ( pFnCalculateForce, &CalculateForce_Parms, NULL );

	return CalculateForce_Parms.ReturnValue;
};

// Function UTGame.UTVehicleBoostPad.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void AUTVehicleBoostPad::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59508 ];

	AUTVehicleBoostPad_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function UTGame.UTVehicleBoostPad.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void AUTVehicleBoostPad::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 59501 ];

	AUTVehicleBoostPad_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function UTGame.UTVehicleBoostPad.Trigger
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class APawn*                   EventInstigator                ( CPF_Parm )

void AUTVehicleBoostPad::Trigger ( class AActor* Other, class APawn* EventInstigator )
{
	static UFunction* pFnTrigger = NULL;

	if ( ! pFnTrigger )
		pFnTrigger = (UFunction*) UObject::GObjObjects()->Data[ 59498 ];

	AUTVehicleBoostPad_execTrigger_Parms Trigger_Parms;
	Trigger_Parms.Other = Other;
	Trigger_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnTrigger, &Trigger_Parms, NULL );
};

// Function UTGame.UTVehicleBoostPad.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AUTVehicleBoostPad::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59497 ];

	AUTVehicleBoostPad_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function UTGame.UTVehicleCTFGame.AllowMutator
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MutatorClassName               ( CPF_Parm | CPF_NeedCtorLink )

bool AUTVehicleCTFGame::AllowMutator ( struct FString MutatorClassName )
{
	static UFunction* pFnAllowMutator = NULL;

	if ( ! pFnAllowMutator )
		pFnAllowMutator = (UFunction*) UObject::GObjObjects()->Data[ 59552 ];

	AUTVehicleCTFGame_execAllowMutator_Parms AllowMutator_Parms;
	memcpy ( &AllowMutator_Parms.MutatorClassName, &MutatorClassName, 0xC );

	this->ProcessEvent ( pFnAllowMutator, &AllowMutator_Parms, NULL );

	return AllowMutator_Parms.ReturnValue;
};

// Function UTGame.UTVehicleShield.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void AUTVehicleShield::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 59687 ];

	AUTVehicleShield_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function UTGame.UTVehicleShield.ShieldFullyOnline
// [0x00020102] 
// Parameters infos:

void AUTVehicleShield::ShieldFullyOnline ( )
{
	static UFunction* pFnShieldFullyOnline = NULL;

	if ( ! pFnShieldFullyOnline )
		pFnShieldFullyOnline = (UFunction*) UObject::GObjObjects()->Data[ 59686 ];

	AUTVehicleShield_execShieldFullyOnline_Parms ShieldFullyOnline_Parms;

	this->ProcessEvent ( pFnShieldFullyOnline, &ShieldFullyOnline_Parms, NULL );
};

// Function UTGame.UTVehicleShield.SetActive
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNowActive                     ( CPF_Parm )

void AUTVehicleShield::SetActive ( unsigned long bNowActive )
{
	static UFunction* pFnSetActive = NULL;

	if ( ! pFnSetActive )
		pFnSetActive = (UFunction*) UObject::GObjObjects()->Data[ 59684 ];

	AUTVehicleShield_execSetActive_Parms SetActive_Parms;
	SetActive_Parms.bNowActive = bNowActive;

	this->ProcessEvent ( pFnSetActive, &SetActive_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif