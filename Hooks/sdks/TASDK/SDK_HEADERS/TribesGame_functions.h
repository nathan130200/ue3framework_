/*
#############################################################################################
# Tribes Ascend (1.0.1016.7) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: TribesGame_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function TribesGame.TrGameObjective.OnUpgradePerformed
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrGameObjective::eventOnUpgradePerformed ( struct FName VarName )
{
	static UFunction* pFnOnUpgradePerformed = NULL;

	if ( ! pFnOnUpgradePerformed )
		pFnOnUpgradePerformed = (UFunction*) UObject::GObjObjects()->Data[ 71298 ];

	ATrGameObjective_eventOnUpgradePerformed_Parms OnUpgradePerformed_Parms;
	memcpy ( &OnUpgradePerformed_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnOnUpgradePerformed, &OnUpgradePerformed_Parms, NULL );
};

// Function TribesGame.TrGameObjective.AwardUpgradeAssists
// [0x00020000] 
// Parameters infos:

void ATrGameObjective::AwardUpgradeAssists ( )
{
	static UFunction* pFnAwardUpgradeAssists = NULL;

	if ( ! pFnAwardUpgradeAssists )
		pFnAwardUpgradeAssists = (UFunction*) UObject::GObjObjects()->Data[ 71297 ];

	ATrGameObjective_execAwardUpgradeAssists_Parms AwardUpgradeAssists_Parms;

	this->ProcessEvent ( pFnAwardUpgradeAssists, &AwardUpgradeAssists_Parms, NULL );
};

// Function TribesGame.TrGameObjective.AwardKillAssists
// [0x00020000] 
// Parameters infos:

void ATrGameObjective::AwardKillAssists ( )
{
	static UFunction* pFnAwardKillAssists = NULL;

	if ( ! pFnAwardKillAssists )
		pFnAwardKillAssists = (UFunction*) UObject::GObjObjects()->Data[ 71296 ];

	ATrGameObjective_execAwardKillAssists_Parms AwardKillAssists_Parms;

	this->ProcessEvent ( pFnAwardKillAssists, &AwardKillAssists_Parms, NULL );
};

// Function TribesGame.TrGameObjective.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 71294 ];

	ATrGameObjective_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrGameObjective.HideBasePlatform
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::HideBasePlatform ( )
{
	static UFunction* pFnHideBasePlatform = NULL;

	if ( ! pFnHideBasePlatform )
		pFnHideBasePlatform = (UFunction*) UObject::GObjObjects()->Data[ 71292 ];

	ATrGameObjective_execHideBasePlatform_Parms HideBasePlatform_Parms;

	this->ProcessEvent ( pFnHideBasePlatform, &HideBasePlatform_Parms, NULL );
};

// Function TribesGame.TrGameObjective.InstantlyRegenerateHealth
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::InstantlyRegenerateHealth ( )
{
	static UFunction* pFnInstantlyRegenerateHealth = NULL;

	if ( ! pFnInstantlyRegenerateHealth )
		pFnInstantlyRegenerateHealth = (UFunction*) UObject::GObjObjects()->Data[ 71291 ];

	ATrGameObjective_execInstantlyRegenerateHealth_Parms InstantlyRegenerateHealth_Parms;

	this->ProcessEvent ( pFnInstantlyRegenerateHealth, &InstantlyRegenerateHealth_Parms, NULL );
};

// Function TribesGame.TrGameObjective.IsAliveAndWell
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGameObjective::IsAliveAndWell ( )
{
	static UFunction* pFnIsAliveAndWell = NULL;

	if ( ! pFnIsAliveAndWell )
		pFnIsAliveAndWell = (UFunction*) UObject::GObjObjects()->Data[ 71289 ];

	ATrGameObjective_execIsAliveAndWell_Parms IsAliveAndWell_Parms;

	this->ProcessEvent ( pFnIsAliveAndWell, &IsAliveAndWell_Parms, NULL );

	return IsAliveAndWell_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetSpectatorDescription
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrGameObjective::GetSpectatorDescription ( )
{
	static UFunction* pFnGetSpectatorDescription = NULL;

	if ( ! pFnGetSpectatorDescription )
		pFnGetSpectatorDescription = (UFunction*) UObject::GObjObjects()->Data[ 71287 ];

	ATrGameObjective_execGetSpectatorDescription_Parms GetSpectatorDescription_Parms;

	this->ProcessEvent ( pFnGetSpectatorDescription, &GetSpectatorDescription_Parms, NULL );

	return GetSpectatorDescription_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetSpectatorHealthInfo
// [0x00420102] 
// Parameters infos:
// int                            Health                         ( CPF_Parm | CPF_OutParm )
// int                            MaxHealth                      ( CPF_Parm | CPF_OutParm )

void ATrGameObjective::GetSpectatorHealthInfo ( int* Health, int* MaxHealth )
{
	static UFunction* pFnGetSpectatorHealthInfo = NULL;

	if ( ! pFnGetSpectatorHealthInfo )
		pFnGetSpectatorHealthInfo = (UFunction*) UObject::GObjObjects()->Data[ 71284 ];

	ATrGameObjective_execGetSpectatorHealthInfo_Parms GetSpectatorHealthInfo_Parms;

	this->ProcessEvent ( pFnGetSpectatorHealthInfo, &GetSpectatorHealthInfo_Parms, NULL );

	if ( Health )
		*Health = GetSpectatorHealthInfo_Parms.Health;

	if ( MaxHealth )
		*MaxHealth = GetSpectatorHealthInfo_Parms.MaxHealth;
};

// Function TribesGame.TrGameObjective.GiveDestroyAccolade
// [0x00020000] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrGameObjective::GiveDestroyAccolade ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnGiveDestroyAccolade = NULL;

	if ( ! pFnGiveDestroyAccolade )
		pFnGiveDestroyAccolade = (UFunction*) UObject::GObjObjects()->Data[ 71282 ];

	ATrGameObjective_execGiveDestroyAccolade_Parms GiveDestroyAccolade_Parms;
	GiveDestroyAccolade_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnGiveDestroyAccolade, &GiveDestroyAccolade_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ClearDamageAssistance
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOnlyDamagers                  ( CPF_Parm )

void ATrGameObjective::ClearDamageAssistance ( unsigned long bOnlyDamagers )
{
	static UFunction* pFnClearDamageAssistance = NULL;

	if ( ! pFnClearDamageAssistance )
		pFnClearDamageAssistance = (UFunction*) UObject::GObjObjects()->Data[ 71279 ];

	ATrGameObjective_execClearDamageAssistance_Parms ClearDamageAssistance_Parms;
	ClearDamageAssistance_Parms.bOnlyDamagers = bOnlyDamagers;

	this->ProcessEvent ( pFnClearDamageAssistance, &ClearDamageAssistance_Parms, NULL );
};

// Function TribesGame.TrGameObjective.CheckDestroyAssists
// [0x00020002] 
// Parameters infos:

void ATrGameObjective::CheckDestroyAssists ( )
{
	static UFunction* pFnCheckDestroyAssists = NULL;

	if ( ! pFnCheckDestroyAssists )
		pFnCheckDestroyAssists = (UFunction*) UObject::GObjObjects()->Data[ 71276 ];

	ATrGameObjective_execCheckDestroyAssists_Parms CheckDestroyAssists_Parms;

	this->ProcessEvent ( pFnCheckDestroyAssists, &CheckDestroyAssists_Parms, NULL );
};

// Function TribesGame.TrGameObjective.CheckRepairAssists
// [0x00020002] 
// Parameters infos:

void ATrGameObjective::CheckRepairAssists ( )
{
	static UFunction* pFnCheckRepairAssists = NULL;

	if ( ! pFnCheckRepairAssists )
		pFnCheckRepairAssists = (UFunction*) UObject::GObjObjects()->Data[ 71272 ];

	ATrGameObjective_execCheckRepairAssists_Parms CheckRepairAssists_Parms;

	this->ProcessEvent ( pFnCheckRepairAssists, &CheckRepairAssists_Parms, NULL );
};

// Function TribesGame.TrGameObjective.AddDamageAssistance
// [0x00820002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )
// int                            DamageAmount                   ( CPF_Parm )

void ATrGameObjective::AddDamageAssistance ( class ATrPlayerController* TrPC, int DamageAmount )
{
	static UFunction* pFnAddDamageAssistance = NULL;

	if ( ! pFnAddDamageAssistance )
		pFnAddDamageAssistance = (UFunction*) UObject::GObjObjects()->Data[ 71267 ];

	ATrGameObjective_execAddDamageAssistance_Parms AddDamageAssistance_Parms;
	AddDamageAssistance_Parms.TrPC = TrPC;
	AddDamageAssistance_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnAddDamageAssistance, &AddDamageAssistance_Parms, NULL );
};

// Function TribesGame.TrGameObjective.AddUpgrader
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     Upgrader                       ( CPF_Parm )

void ATrGameObjective::AddUpgrader ( class ATrPlayerController* Upgrader )
{
	static UFunction* pFnAddUpgrader = NULL;

	if ( ! pFnAddUpgrader )
		pFnAddUpgrader = (UFunction*) UObject::GObjObjects()->Data[ 71264 ];

	ATrGameObjective_execAddUpgrader_Parms AddUpgrader_Parms;
	AddUpgrader_Parms.Upgrader = Upgrader;

	this->ProcessEvent ( pFnAddUpgrader, &AddUpgrader_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PerformUpgrade
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     Purchaser                      ( CPF_Parm )

bool ATrGameObjective::PerformUpgrade ( class ATrPlayerController* Purchaser )
{
	static UFunction* pFnPerformUpgrade = NULL;

	if ( ! pFnPerformUpgrade )
		pFnPerformUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 71250 ];

	ATrGameObjective_execPerformUpgrade_Parms PerformUpgrade_Parms;
	PerformUpgrade_Parms.Purchaser = Purchaser;

	this->ProcessEvent ( pFnPerformUpgrade, &PerformUpgrade_Parms, NULL );

	return PerformUpgrade_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.ReceivesPowerFromGenerator
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGameObjective::ReceivesPowerFromGenerator ( )
{
	static UFunction* pFnReceivesPowerFromGenerator = NULL;

	if ( ! pFnReceivesPowerFromGenerator )
		pFnReceivesPowerFromGenerator = (UFunction*) UObject::GObjObjects()->Data[ 71248 ];

	ATrGameObjective_execReceivesPowerFromGenerator_Parms ReceivesPowerFromGenerator_Parms;

	this->ProcessEvent ( pFnReceivesPowerFromGenerator, &ReceivesPowerFromGenerator_Parms, NULL );

	return ReceivesPowerFromGenerator_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrGameObjective::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 71245 ];

	ATrGameObjective_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.SpawnHelpTextCollisionProxy
// [0x00020102] 
// Parameters infos:
// unsigned char                  HelpTextType                   ( CPF_Parm )

void ATrGameObjective::SpawnHelpTextCollisionProxy ( unsigned char HelpTextType )
{
	static UFunction* pFnSpawnHelpTextCollisionProxy = NULL;

	if ( ! pFnSpawnHelpTextCollisionProxy )
		pFnSpawnHelpTextCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71238 ];

	ATrGameObjective_execSpawnHelpTextCollisionProxy_Parms SpawnHelpTextCollisionProxy_Parms;
	SpawnHelpTextCollisionProxy_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnSpawnHelpTextCollisionProxy, &SpawnHelpTextCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrGameObjective.Reset
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 71237 ];

	ATrGameObjective_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrGameObjective.BlocksLineChecksFromSourceActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  SourceActor                    ( CPF_Parm )

bool ATrGameObjective::eventBlocksLineChecksFromSourceActor ( class AActor* SourceActor )
{
	static UFunction* pFnBlocksLineChecksFromSourceActor = NULL;

	if ( ! pFnBlocksLineChecksFromSourceActor )
		pFnBlocksLineChecksFromSourceActor = (UFunction*) UObject::GObjObjects()->Data[ 71233 ];

	ATrGameObjective_eventBlocksLineChecksFromSourceActor_Parms BlocksLineChecksFromSourceActor_Parms;
	BlocksLineChecksFromSourceActor_Parms.SourceActor = SourceActor;

	this->ProcessEvent ( pFnBlocksLineChecksFromSourceActor, &BlocksLineChecksFromSourceActor_Parms, NULL );

	return BlocksLineChecksFromSourceActor_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetPossessiveInstigatorName
// [0x00420100] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ATrGameObjective::GetPossessiveInstigatorName ( struct FString* PlayerName )
{
	static UFunction* pFnGetPossessiveInstigatorName = NULL;

	if ( ! pFnGetPossessiveInstigatorName )
		pFnGetPossessiveInstigatorName = (UFunction*) UObject::GObjObjects()->Data[ 71230 ];

	ATrGameObjective_execGetPossessiveInstigatorName_Parms GetPossessiveInstigatorName_Parms;

	this->ProcessEvent ( pFnGetPossessiveInstigatorName, &GetPossessiveInstigatorName_Parms, NULL );

	if ( PlayerName )
		memcpy ( PlayerName, &GetPossessiveInstigatorName_Parms.PlayerName, 0xC );

	return GetPossessiveInstigatorName_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrGameObjective::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 71221 ];

	ATrGameObjective_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrGameObjective::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 71190 ];

	ATrGameObjective_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ShouldPostRenderForCaH
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGameObjective::ShouldPostRenderForCaH ( )
{
	static UFunction* pFnShouldPostRenderForCaH = NULL;

	if ( ! pFnShouldPostRenderForCaH )
		pFnShouldPostRenderForCaH = (UFunction*) UObject::GObjObjects()->Data[ 71188 ];

	ATrGameObjective_execShouldPostRenderForCaH_Parms ShouldPostRenderForCaH_Parms;

	this->ProcessEvent ( pFnShouldPostRenderForCaH, &ShouldPostRenderForCaH_Parms, NULL );

	return ShouldPostRenderForCaH_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.HideMesh
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::HideMesh ( )
{
	static UFunction* pFnHideMesh = NULL;

	if ( ! pFnHideMesh )
		pFnHideMesh = (UFunction*) UObject::GObjObjects()->Data[ 71180 ];

	ATrGameObjective_execHideMesh_Parms HideMesh_Parms;

	this->ProcessEvent ( pFnHideMesh, &HideMesh_Parms, NULL );
};

// Function TribesGame.TrGameObjective.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 71165 ];

	ATrGameObjective_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrGameObjective.SetPowered
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrGameObjective::SetPowered ( unsigned long bEnabled )
{
	static UFunction* pFnSetPowered = NULL;

	if ( ! pFnSetPowered )
		pFnSetPowered = (UFunction*) UObject::GObjObjects()->Data[ 71163 ];

	ATrGameObjective_execSetPowered_Parms SetPowered_Parms;
	SetPowered_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetPowered, &SetPowered_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PlayExplosion
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::PlayExplosion ( )
{
	static UFunction* pFnPlayExplosion = NULL;

	if ( ! pFnPlayExplosion )
		pFnPlayExplosion = (UFunction*) UObject::GObjObjects()->Data[ 71157 ];

	ATrGameObjective_execPlayExplosion_Parms PlayExplosion_Parms;

	this->ProcessEvent ( pFnPlayExplosion, &PlayExplosion_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PlayDamageShieldEffects
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::PlayDamageShieldEffects ( )
{
	static UFunction* pFnPlayDamageShieldEffects = NULL;

	if ( ! pFnPlayDamageShieldEffects )
		pFnPlayDamageShieldEffects = (UFunction*) UObject::GObjObjects()->Data[ 71156 ];

	ATrGameObjective_execPlayDamageShieldEffects_Parms PlayDamageShieldEffects_Parms;

	this->ProcessEvent ( pFnPlayDamageShieldEffects, &PlayDamageShieldEffects_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PlayDamageHealthEffects
// [0x00020100] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// int                            HitBoneIndex                   ( CPF_Parm )

void ATrGameObjective::PlayDamageHealthEffects ( int DamageAmount, int HitBoneIndex )
{
	static UFunction* pFnPlayDamageHealthEffects = NULL;

	if ( ! pFnPlayDamageHealthEffects )
		pFnPlayDamageHealthEffects = (UFunction*) UObject::GObjObjects()->Data[ 71153 ];

	ATrGameObjective_execPlayDamageHealthEffects_Parms PlayDamageHealthEffects_Parms;
	PlayDamageHealthEffects_Parms.DamageAmount = DamageAmount;
	PlayDamageHealthEffects_Parms.HitBoneIndex = HitBoneIndex;

	this->ProcessEvent ( pFnPlayDamageHealthEffects, &PlayDamageHealthEffects_Parms, NULL );
};

// Function TribesGame.TrGameObjective.OnHealthChanged
// [0x00020102] 
// Parameters infos:
// unsigned long                  wasDamage                      ( CPF_Parm )

void ATrGameObjective::OnHealthChanged ( unsigned long wasDamage )
{
	static UFunction* pFnOnHealthChanged = NULL;

	if ( ! pFnOnHealthChanged )
		pFnOnHealthChanged = (UFunction*) UObject::GObjObjects()->Data[ 71151 ];

	ATrGameObjective_execOnHealthChanged_Parms OnHealthChanged_Parms;
	OnHealthChanged_Parms.wasDamage = wasDamage;

	this->ProcessEvent ( pFnOnHealthChanged, &OnHealthChanged_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PlayDestroyedEffects
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::PlayDestroyedEffects ( )
{
	static UFunction* pFnPlayDestroyedEffects = NULL;

	if ( ! pFnPlayDestroyedEffects )
		pFnPlayDestroyedEffects = (UFunction*) UObject::GObjObjects()->Data[ 71150 ];

	ATrGameObjective_execPlayDestroyedEffects_Parms PlayDestroyedEffects_Parms;

	this->ProcessEvent ( pFnPlayDestroyedEffects, &PlayDestroyedEffects_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ClientPlayUpgradeEffect
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::ClientPlayUpgradeEffect ( )
{
	static UFunction* pFnClientPlayUpgradeEffect = NULL;

	if ( ! pFnClientPlayUpgradeEffect )
		pFnClientPlayUpgradeEffect = (UFunction*) UObject::GObjObjects()->Data[ 71149 ];

	ATrGameObjective_execClientPlayUpgradeEffect_Parms ClientPlayUpgradeEffect_Parms;

	this->ProcessEvent ( pFnClientPlayUpgradeEffect, &ClientPlayUpgradeEffect_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ClientRecievedHitInfo
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrGameObjective::eventClientRecievedHitInfo ( )
{
	static UFunction* pFnClientRecievedHitInfo = NULL;

	if ( ! pFnClientRecievedHitInfo )
		pFnClientRecievedHitInfo = (UFunction*) UObject::GObjObjects()->Data[ 71148 ];

	ATrGameObjective_eventClientRecievedHitInfo_Parms ClientRecievedHitInfo_Parms;

	this->ProcessEvent ( pFnClientRecievedHitInfo, &ClientRecievedHitInfo_Parms, NULL );
};

// Function TribesGame.TrGameObjective.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrGameObjective::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 71125 ];

	ATrGameObjective_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrGameObjective.DoRepairs
// [0x00020102] 
// Parameters infos:
// int                            HealAmount                     ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void ATrGameObjective::DoRepairs ( int HealAmount, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnDoRepairs = NULL;

	if ( ! pFnDoRepairs )
		pFnDoRepairs = (UFunction*) UObject::GObjObjects()->Data[ 71119 ];

	ATrGameObjective_execDoRepairs_Parms DoRepairs_Parms;
	DoRepairs_Parms.HealAmount = HealAmount;
	DoRepairs_Parms.EventInstigator = EventInstigator;
	DoRepairs_Parms.DamageCauser = DamageCauser;
	DoRepairs_Parms.DamageType = DamageType;
	memcpy ( &DoRepairs_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnDoRepairs, &DoRepairs_Parms, NULL );
};

// Function TribesGame.TrGameObjective.RegenerateHealth
// [0x00020002] 
// Parameters infos:

void ATrGameObjective::RegenerateHealth ( )
{
	static UFunction* pFnRegenerateHealth = NULL;

	if ( ! pFnRegenerateHealth )
		pFnRegenerateHealth = (UFunction*) UObject::GObjObjects()->Data[ 71118 ];

	ATrGameObjective_execRegenerateHealth_Parms RegenerateHealth_Parms;

	this->ProcessEvent ( pFnRegenerateHealth, &RegenerateHealth_Parms, NULL );
};

// Function TribesGame.TrGameObjective.Shootable
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGameObjective::Shootable ( )
{
	static UFunction* pFnShootable = NULL;

	if ( ! pFnShootable )
		pFnShootable = (UFunction*) UObject::GObjObjects()->Data[ 71116 ];

	ATrGameObjective_execShootable_Parms Shootable_Parms;

	this->ProcessEvent ( pFnShootable, &Shootable_Parms, NULL );

	return Shootable_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrGameObjective::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 71113 ];

	ATrGameObjective_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrGameObjective::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 71111 ];

	ATrGameObjective_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrGameObjective.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrGameObjective::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 71105 ];

	ATrGameObjective_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGameObjective.ShouldShowPromptText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool ATrGameObjective::ShouldShowPromptText ( class APawn* aPawn )
{
	static UFunction* pFnShouldShowPromptText = NULL;

	if ( ! pFnShouldShowPromptText )
		pFnShouldShowPromptText = (UFunction*) UObject::GObjObjects()->Data[ 71100 ];

	ATrGameObjective_execShouldShowPromptText_Parms ShouldShowPromptText_Parms;
	ShouldShowPromptText_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnShouldShowPromptText, &ShouldShowPromptText_Parms, NULL );

	return ShouldShowPromptText_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetUpgradeCost
// [0x00820102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

int ATrGameObjective::GetUpgradeCost ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnGetUpgradeCost = NULL;

	if ( ! pFnGetUpgradeCost )
		pFnGetUpgradeCost = (UFunction*) UObject::GObjObjects()->Data[ 71089 ];

	ATrGameObjective_execGetUpgradeCost_Parms GetUpgradeCost_Parms;
	GetUpgradeCost_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnGetUpgradeCost, &GetUpgradeCost_Parms, NULL );

	return GetUpgradeCost_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetHealthAmount
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrGameObjective::GetHealthAmount ( )
{
	static UFunction* pFnGetHealthAmount = NULL;

	if ( ! pFnGetHealthAmount )
		pFnGetHealthAmount = (UFunction*) UObject::GObjObjects()->Data[ 71087 ];

	ATrGameObjective_execGetHealthAmount_Parms GetHealthAmount_Parms;

	this->ProcessEvent ( pFnGetHealthAmount, &GetHealthAmount_Parms, NULL );

	return GetHealthAmount_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrGameObjective::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 71084 ];

	ATrGameObjective_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.GetScreenName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_Parm )

struct FString ATrGameObjective::GetScreenName ( class APlayerController* PC )
{
	static UFunction* pFnGetScreenName = NULL;

	if ( ! pFnGetScreenName )
		pFnGetScreenName = (UFunction*) UObject::GObjObjects()->Data[ 71081 ];

	ATrGameObjective_execGetScreenName_Parms GetScreenName_Parms;
	GetScreenName_Parms.PC = PC;

	this->ProcessEvent ( pFnGetScreenName, &GetScreenName_Parms, NULL );

	return GetScreenName_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGameObjective::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 71077 ];

	ATrGameObjective_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGameObjective.IsInLOS_Basic
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   TouchedPawn                    ( CPF_Parm )

bool ATrGameObjective::IsInLOS_Basic ( class APawn* TouchedPawn )
{
	static UFunction* pFnIsInLOS_Basic = NULL;

	if ( ! pFnIsInLOS_Basic )
		pFnIsInLOS_Basic = (UFunction*) UObject::GObjObjects()->Data[ 71074 ];

	ATrGameObjective_execIsInLOS_Basic_Parms IsInLOS_Basic_Parms;
	IsInLOS_Basic_Parms.TouchedPawn = TouchedPawn;

	pFnIsInLOS_Basic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInLOS_Basic, &IsInLOS_Basic_Parms, NULL );

	pFnIsInLOS_Basic->FunctionFlags |= 0x400;

	return IsInLOS_Basic_Parms.ReturnValue;
};

// Function TribesGame.TrGameObjective.IsEnemy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool ATrGameObjective::IsEnemy ( class AActor* Target )
{
	static UFunction* pFnIsEnemy = NULL;

	if ( ! pFnIsEnemy )
		pFnIsEnemy = (UFunction*) UObject::GObjObjects()->Data[ 71071 ];

	ATrGameObjective_execIsEnemy_Parms IsEnemy_Parms;
	IsEnemy_Parms.Target = Target;

	pFnIsEnemy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEnemy, &IsEnemy_Parms, NULL );

	pFnIsEnemy->FunctionFlags |= 0x400;

	return IsEnemy_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.OnUpgradePerformed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDeployable::eventOnUpgradePerformed ( struct FName VarName )
{
	static UFunction* pFnOnUpgradePerformed = NULL;

	if ( ! pFnOnUpgradePerformed )
		pFnOnUpgradePerformed = (UFunction*) UObject::GObjObjects()->Data[ 71518 ];

	ATrDeployable_eventOnUpgradePerformed_Parms OnUpgradePerformed_Parms;
	memcpy ( &OnUpgradePerformed_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnOnUpgradePerformed, &OnUpgradePerformed_Parms, NULL );
};

// Function TribesGame.TrDeployable.CalcOtherWatchingCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// class ATrPlayerController*     WatcherController              ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ATrDeployable::CalcOtherWatchingCam ( float fDeltaTime, class ATrPlayerController* WatcherController, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcOtherWatchingCam = NULL;

	if ( ! pFnCalcOtherWatchingCam )
		pFnCalcOtherWatchingCam = (UFunction*) UObject::GObjObjects()->Data[ 71500 ];

	ATrDeployable_execCalcOtherWatchingCam_Parms CalcOtherWatchingCam_Parms;
	CalcOtherWatchingCam_Parms.fDeltaTime = fDeltaTime;
	CalcOtherWatchingCam_Parms.WatcherController = WatcherController;

	this->ProcessEvent ( pFnCalcOtherWatchingCam, &CalcOtherWatchingCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcOtherWatchingCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcOtherWatchingCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcOtherWatchingCam_Parms.out_FOV;

	return CalcOtherWatchingCam_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.GetPossessiveInstigatorName
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ATrDeployable::GetPossessiveInstigatorName ( struct FString* PlayerName )
{
	static UFunction* pFnGetPossessiveInstigatorName = NULL;

	if ( ! pFnGetPossessiveInstigatorName )
		pFnGetPossessiveInstigatorName = (UFunction*) UObject::GObjObjects()->Data[ 71497 ];

	ATrDeployable_execGetPossessiveInstigatorName_Parms GetPossessiveInstigatorName_Parms;

	this->ProcessEvent ( pFnGetPossessiveInstigatorName, &GetPossessiveInstigatorName_Parms, NULL );

	if ( PlayerName )
		memcpy ( PlayerName, &GetPossessiveInstigatorName_Parms.PlayerName, 0xC );

	return GetPossessiveInstigatorName_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.ReceivesPowerFromGenerator
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable::ReceivesPowerFromGenerator ( )
{
	static UFunction* pFnReceivesPowerFromGenerator = NULL;

	if ( ! pFnReceivesPowerFromGenerator )
		pFnReceivesPowerFromGenerator = (UFunction*) UObject::GObjObjects()->Data[ 71493 ];

	ATrDeployable_execReceivesPowerFromGenerator_Parms ReceivesPowerFromGenerator_Parms;

	this->ProcessEvent ( pFnReceivesPowerFromGenerator, &ReceivesPowerFromGenerator_Parms, NULL );

	return ReceivesPowerFromGenerator_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrDeployable::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 71487 ];

	ATrDeployable_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDeployable.PulseBackupGenerators
// [0x00020002] 
// Parameters infos:

void ATrDeployable::PulseBackupGenerators ( )
{
	static UFunction* pFnPulseBackupGenerators = NULL;

	if ( ! pFnPulseBackupGenerators )
		pFnPulseBackupGenerators = (UFunction*) UObject::GObjObjects()->Data[ 71485 ];

	ATrDeployable_execPulseBackupGenerators_Parms PulseBackupGenerators_Parms;

	this->ProcessEvent ( pFnPulseBackupGenerators, &PulseBackupGenerators_Parms, NULL );
};

// Function TribesGame.TrDeployable.PlayFireEffects
// [0x00024100] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable::PlayFireEffects ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 71481 ];

	ATrDeployable_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.InWeapon = InWeapon;
	PlayFireEffects_Parms.bViaReplication = bViaReplication;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function TribesGame.TrDeployable.IncrementFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 W                              ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDeployable::IncrementFlashCount ( class AWeapon* W, unsigned char FireModeNum )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 71477 ];

	ATrDeployable_execIncrementFlashCount_Parms IncrementFlashCount_Parms;
	IncrementFlashCount_Parms.W = W;
	IncrementFlashCount_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function TribesGame.TrDeployable.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool ATrDeployable::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 71473 ];

	ATrDeployable_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.GetWeaponStartTraceLocation
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrDeployable::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 71470 ];

	ATrDeployable_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.OnHealthChanged
// [0x00020102] 
// Parameters infos:
// unsigned long                  wasDamage                      ( CPF_Parm )

void ATrDeployable::OnHealthChanged ( unsigned long wasDamage )
{
	static UFunction* pFnOnHealthChanged = NULL;

	if ( ! pFnOnHealthChanged )
		pFnOnHealthChanged = (UFunction*) UObject::GObjObjects()->Data[ 71468 ];

	ATrDeployable_execOnHealthChanged_Parms OnHealthChanged_Parms;
	OnHealthChanged_Parms.wasDamage = wasDamage;

	this->ProcessEvent ( pFnOnHealthChanged, &OnHealthChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable.UpdateHealthMaterial
// [0x00020102] 
// Parameters infos:

void ATrDeployable::UpdateHealthMaterial ( )
{
	static UFunction* pFnUpdateHealthMaterial = NULL;

	if ( ! pFnUpdateHealthMaterial )
		pFnUpdateHealthMaterial = (UFunction*) UObject::GObjObjects()->Data[ 71464 ];

	ATrDeployable_execUpdateHealthMaterial_Parms UpdateHealthMaterial_Parms;

	this->ProcessEvent ( pFnUpdateHealthMaterial, &UpdateHealthMaterial_Parms, NULL );
};

// Function TribesGame.TrDeployable.IsFiring
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable::IsFiring ( )
{
	static UFunction* pFnIsFiring = NULL;

	if ( ! pFnIsFiring )
		pFnIsFiring = (UFunction*) UObject::GObjObjects()->Data[ 71455 ];

	ATrDeployable_execIsFiring_Parms IsFiring_Parms;

	this->ProcessEvent ( pFnIsFiring, &IsFiring_Parms, NULL );

	return IsFiring_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.DeployComplete
// [0x00020102] 
// Parameters infos:

void ATrDeployable::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 71454 ];

	ATrDeployable_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrDeployable.FinalizeDeployment
// [0x00020102] 
// Parameters infos:

void ATrDeployable::FinalizeDeployment ( )
{
	static UFunction* pFnFinalizeDeployment = NULL;

	if ( ! pFnFinalizeDeployment )
		pFnFinalizeDeployment = (UFunction*) UObject::GObjObjects()->Data[ 71452 ];

	ATrDeployable_execFinalizeDeployment_Parms FinalizeDeployment_Parms;

	this->ProcessEvent ( pFnFinalizeDeployment, &FinalizeDeployment_Parms, NULL );
};

// Function TribesGame.TrDeployable.GetDamageRadius
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDeployable::GetDamageRadius ( )
{
	static UFunction* pFnGetDamageRadius = NULL;

	if ( ! pFnGetDamageRadius )
		pFnGetDamageRadius = (UFunction*) UObject::GObjObjects()->Data[ 71445 ];

	ATrDeployable_execGetDamageRadius_Parms GetDamageRadius_Parms;

	this->ProcessEvent ( pFnGetDamageRadius, &GetDamageRadius_Parms, NULL );

	return GetDamageRadius_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDeployable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 71442 ];

	ATrDeployable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployable.SetInstigatorController
// [0x00020102] 
// Parameters infos:
// class ATrPlayerController*     InstigatorController           ( CPF_Parm )

void ATrDeployable::SetInstigatorController ( class ATrPlayerController* InstigatorController )
{
	static UFunction* pFnSetInstigatorController = NULL;

	if ( ! pFnSetInstigatorController )
		pFnSetInstigatorController = (UFunction*) UObject::GObjObjects()->Data[ 71435 ];

	ATrDeployable_execSetInstigatorController_Parms SetInstigatorController_Parms;
	SetInstigatorController_Parms.InstigatorController = InstigatorController;

	this->ProcessEvent ( pFnSetInstigatorController, &SetInstigatorController_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrDeployable::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 71434 ];

	ATrDeployable_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnVehicleExitedCollisionProxy
// [0x00020000] 
// Parameters infos:
// class ATrVehicle*              V                              ( CPF_Parm )

void ATrDeployable::OnVehicleExitedCollisionProxy ( class ATrVehicle* V )
{
	static UFunction* pFnOnVehicleExitedCollisionProxy = NULL;

	if ( ! pFnOnVehicleExitedCollisionProxy )
		pFnOnVehicleExitedCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71432 ];

	ATrDeployable_execOnVehicleExitedCollisionProxy_Parms OnVehicleExitedCollisionProxy_Parms;
	OnVehicleExitedCollisionProxy_Parms.V = V;

	this->ProcessEvent ( pFnOnVehicleExitedCollisionProxy, &OnVehicleExitedCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnVehicleDetectedByCollisionProxy
// [0x00020000] 
// Parameters infos:
// class ATrVehicle*              V                              ( CPF_Parm )

void ATrDeployable::OnVehicleDetectedByCollisionProxy ( class ATrVehicle* V )
{
	static UFunction* pFnOnVehicleDetectedByCollisionProxy = NULL;

	if ( ! pFnOnVehicleDetectedByCollisionProxy )
		pFnOnVehicleDetectedByCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71430 ];

	ATrDeployable_execOnVehicleDetectedByCollisionProxy_Parms OnVehicleDetectedByCollisionProxy_Parms;
	OnVehicleDetectedByCollisionProxy_Parms.V = V;

	this->ProcessEvent ( pFnOnVehicleDetectedByCollisionProxy, &OnVehicleDetectedByCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnPawnExitedCollisionProxy
// [0x00020000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable::OnPawnExitedCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnExitedCollisionProxy = NULL;

	if ( ! pFnOnPawnExitedCollisionProxy )
		pFnOnPawnExitedCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71428 ];

	ATrDeployable_execOnPawnExitedCollisionProxy_Parms OnPawnExitedCollisionProxy_Parms;
	OnPawnExitedCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnExitedCollisionProxy, &OnPawnExitedCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnPawnDetectedByCollisionProxy
// [0x00020000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable::OnPawnDetectedByCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnDetectedByCollisionProxy = NULL;

	if ( ! pFnOnPawnDetectedByCollisionProxy )
		pFnOnPawnDetectedByCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71426 ];

	ATrDeployable_execOnPawnDetectedByCollisionProxy_Parms OnPawnDetectedByCollisionProxy_Parms;
	OnPawnDetectedByCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnDetectedByCollisionProxy, &OnPawnDetectedByCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 71397 ];

	ATrDeployable_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrDeployable.TakeRadiusDamage
// [0x00024102] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable::TakeRadiusDamage ( class AController* InstigatedBy, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 71383 ];

	ATrDeployable_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrDeployable.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDeployable::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 71381 ];

	ATrDeployable_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDeployable.OnPRIReplicated
// [0x00020102] 
// Parameters infos:

void ATrDeployable::OnPRIReplicated ( )
{
	static UFunction* pFnOnPRIReplicated = NULL;

	if ( ! pFnOnPRIReplicated )
		pFnOnPRIReplicated = (UFunction*) UObject::GObjObjects()->Data[ 71379 ];

	ATrDeployable_execOnPRIReplicated_Parms OnPRIReplicated_Parms;

	this->ProcessEvent ( pFnOnPRIReplicated, &OnPRIReplicated_Parms, NULL );
};

// Function TribesGame.TrDeployable.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDeployable::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 71377 ];

	ATrDeployable_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDeployable.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDeployable::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 71375 ];

	ATrDeployable_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDeployable.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrDeployable::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 71372 ];

	ATrDeployable_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrDeployable.IsInLOS
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TouchedActor                   ( CPF_Parm )
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 EndLocation                    ( CPF_Parm )
// unsigned long                  CheckBlockedByBlockers         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  CheckBlockedByActors           ( CPF_OptionalParm | CPF_Parm )

bool ATrDeployable::IsInLOS ( class AActor* TouchedActor, struct FVector StartLocation, struct FVector EndLocation, unsigned long CheckBlockedByBlockers, unsigned long CheckBlockedByActors )
{
	static UFunction* pFnIsInLOS = NULL;

	if ( ! pFnIsInLOS )
		pFnIsInLOS = (UFunction*) UObject::GObjObjects()->Data[ 71365 ];

	ATrDeployable_execIsInLOS_Parms IsInLOS_Parms;
	IsInLOS_Parms.TouchedActor = TouchedActor;
	memcpy ( &IsInLOS_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &IsInLOS_Parms.EndLocation, &EndLocation, 0xC );
	IsInLOS_Parms.CheckBlockedByBlockers = CheckBlockedByBlockers;
	IsInLOS_Parms.CheckBlockedByActors = CheckBlockedByActors;

	pFnIsInLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInLOS, &IsInLOS_Parms, NULL );

	pFnIsInLOS->FunctionFlags |= 0x400;

	return IsInLOS_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.CalcMeshOffset
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDeployable::CalcMeshOffset ( )
{
	static UFunction* pFnCalcMeshOffset = NULL;

	if ( ! pFnCalcMeshOffset )
		pFnCalcMeshOffset = (UFunction*) UObject::GObjObjects()->Data[ 71363 ];

	ATrDeployable_execCalcMeshOffset_Parms CalcMeshOffset_Parms;

	pFnCalcMeshOffset->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalcMeshOffset, &CalcMeshOffset_Parms, NULL );

	pFnCalcMeshOffset->FunctionFlags |= 0x400;

	return CalcMeshOffset_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable.AdjustMeshToGround
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrDeployable::AdjustMeshToGround ( )
{
	static UFunction* pFnAdjustMeshToGround = NULL;

	if ( ! pFnAdjustMeshToGround )
		pFnAdjustMeshToGround = (UFunction*) UObject::GObjObjects()->Data[ 71362 ];

	ATrDeployable_execAdjustMeshToGround_Parms AdjustMeshToGround_Parms;

	pFnAdjustMeshToGround->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAdjustMeshToGround, &AdjustMeshToGround_Parms, NULL );

	pFnAdjustMeshToGround->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.AlienFXOverlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )

void ATrPawn::eventAlienFXOverlay ( unsigned char Type )
{
	static UFunction* pFnAlienFXOverlay = NULL;

	if ( ! pFnAlienFXOverlay )
		pFnAlienFXOverlay = (UFunction*) UObject::GObjObjects()->Data[ 72957 ];

	ATrPawn_eventAlienFXOverlay_Parms AlienFXOverlay_Parms;
	AlienFXOverlay_Parms.Type = Type;

	this->ProcessEvent ( pFnAlienFXOverlay, &AlienFXOverlay_Parms, NULL );
};

// Function TribesGame.TrPawn.ClearJetpackParticleEffects
// [0x00020100] 
// Parameters infos:

void ATrPawn::ClearJetpackParticleEffects ( )
{
	static UFunction* pFnClearJetpackParticleEffects = NULL;

	if ( ! pFnClearJetpackParticleEffects )
		pFnClearJetpackParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 72956 ];

	ATrPawn_execClearJetpackParticleEffects_Parms ClearJetpackParticleEffects_Parms;

	this->ProcessEvent ( pFnClearJetpackParticleEffects, &ClearJetpackParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.ClearSkiParticleEffects
// [0x00020100] 
// Parameters infos:

void ATrPawn::ClearSkiParticleEffects ( )
{
	static UFunction* pFnClearSkiParticleEffects = NULL;

	if ( ! pFnClearSkiParticleEffects )
		pFnClearSkiParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 72955 ];

	ATrPawn_execClearSkiParticleEffects_Parms ClearSkiParticleEffects_Parms;

	this->ProcessEvent ( pFnClearSkiParticleEffects, &ClearSkiParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.GetHandsMesh
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class USkeletalMesh* ATrPawn::GetHandsMesh ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetHandsMesh = NULL;

	if ( ! pFnGetHandsMesh )
		pFnGetHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 66993 ];

	ATrPawn_execGetHandsMesh_Parms GetHandsMesh_Parms;
	GetHandsMesh_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetHandsMesh, &GetHandsMesh_Parms, NULL );

	return GetHandsMesh_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ThrowWeaponOnDeath
// [0x00820002] 
// Parameters infos:

void ATrPawn::ThrowWeaponOnDeath ( )
{
	static UFunction* pFnThrowWeaponOnDeath = NULL;

	if ( ! pFnThrowWeaponOnDeath )
		pFnThrowWeaponOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 72940 ];

	ATrPawn_execThrowWeaponOnDeath_Parms ThrowWeaponOnDeath_Parms;

	this->ProcessEvent ( pFnThrowWeaponOnDeath, &ThrowWeaponOnDeath_Parms, NULL );
};

// Function TribesGame.TrPawn.ThrowActiveWeapon
// [0x00024000] 
// Parameters infos:
// unsigned long                  bDestroyWeap                   ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::ThrowActiveWeapon ( unsigned long bDestroyWeap )
{
	static UFunction* pFnThrowActiveWeapon = NULL;

	if ( ! pFnThrowActiveWeapon )
		pFnThrowActiveWeapon = (UFunction*) UObject::GObjObjects()->Data[ 72938 ];

	ATrPawn_execThrowActiveWeapon_Parms ThrowActiveWeapon_Parms;
	ThrowActiveWeapon_Parms.bDestroyWeap = bDestroyWeap;

	this->ProcessEvent ( pFnThrowActiveWeapon, &ThrowActiveWeapon_Parms, NULL );
};

// Function TribesGame.TrPawn.CheckApplyPending3PSkin
// [0x00820102] 
// Parameters infos:

void ATrPawn::CheckApplyPending3PSkin ( )
{
	static UFunction* pFnCheckApplyPending3PSkin = NULL;

	if ( ! pFnCheckApplyPending3PSkin )
		pFnCheckApplyPending3PSkin = (UFunction*) UObject::GObjObjects()->Data[ 72921 ];

	ATrPawn_execCheckApplyPending3PSkin_Parms CheckApplyPending3PSkin_Parms;

	this->ProcessEvent ( pFnCheckApplyPending3PSkin, &CheckApplyPending3PSkin_Parms, NULL );
};

// Function TribesGame.TrPawn.SetPending3PSkin
// [0x00020102] 
// Parameters infos:
// class UClass*                  NewPendingSkin                 ( CPF_Parm )

void ATrPawn::SetPending3PSkin ( class UClass* NewPendingSkin )
{
	static UFunction* pFnSetPending3PSkin = NULL;

	if ( ! pFnSetPending3PSkin )
		pFnSetPending3PSkin = (UFunction*) UObject::GObjObjects()->Data[ 72919 ];

	ATrPawn_execSetPending3PSkin_Parms SetPending3PSkin_Parms;
	SetPending3PSkin_Parms.NewPendingSkin = NewPendingSkin;

	this->ProcessEvent ( pFnSetPending3PSkin, &SetPending3PSkin_Parms, NULL );
};

// Function TribesGame.TrPawn.IsFirstPerson
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::IsFirstPerson ( )
{
	static UFunction* pFnIsFirstPerson = NULL;

	if ( ! pFnIsFirstPerson )
		pFnIsFirstPerson = (UFunction*) UObject::GObjObjects()->Data[ 66978 ];

	ATrPawn_execIsFirstPerson_Parms IsFirstPerson_Parms;

	this->ProcessEvent ( pFnIsFirstPerson, &IsFirstPerson_Parms, NULL );

	return IsFirstPerson_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.StuckOnPawn
// [0x00820822] ( FUNC_Event )
// Parameters infos:
// class APawn*                   OtherPawn                      ( CPF_Parm )

void ATrPawn::eventStuckOnPawn ( class APawn* OtherPawn )
{
	static UFunction* pFnStuckOnPawn = NULL;

	if ( ! pFnStuckOnPawn )
		pFnStuckOnPawn = (UFunction*) UObject::GObjObjects()->Data[ 72914 ];

	ATrPawn_eventStuckOnPawn_Parms StuckOnPawn_Parms;
	StuckOnPawn_Parms.OtherPawn = OtherPawn;

	this->ProcessEvent ( pFnStuckOnPawn, &StuckOnPawn_Parms, NULL );
};

// Function TribesGame.TrPawn.CrushedBy
// [0x00020000] 
// Parameters infos:
// class APawn*                   OtherPawn                      ( CPF_Parm )

void ATrPawn::CrushedBy ( class APawn* OtherPawn )
{
	static UFunction* pFnCrushedBy = NULL;

	if ( ! pFnCrushedBy )
		pFnCrushedBy = (UFunction*) UObject::GObjObjects()->Data[ 72912 ];

	ATrPawn_execCrushedBy_Parms CrushedBy_Parms;
	CrushedBy_Parms.OtherPawn = OtherPawn;

	this->ProcessEvent ( pFnCrushedBy, &CrushedBy_Parms, NULL );
};

// Function TribesGame.TrPawn.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrPawn::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 72910 ];

	ATrPawn_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.CheckClotheslineDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   PawnHittingMe                  ( CPF_Parm )

bool ATrPawn::eventCheckClotheslineDamage ( class APawn* PawnHittingMe )
{
	static UFunction* pFnCheckClotheslineDamage = NULL;

	if ( ! pFnCheckClotheslineDamage )
		pFnCheckClotheslineDamage = (UFunction*) UObject::GObjObjects()->Data[ 72888 ];

	ATrPawn_eventCheckClotheslineDamage_Parms CheckClotheslineDamage_Parms;
	CheckClotheslineDamage_Parms.PawnHittingMe = PawnHittingMe;

	this->ProcessEvent ( pFnCheckClotheslineDamage, &CheckClotheslineDamage_Parms, NULL );

	return CheckClotheslineDamage_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ATrPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 72885 ];

	ATrPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.PlayBlinkPackEffect
// [0x00820102] 
// Parameters infos:

void ATrPawn::PlayBlinkPackEffect ( )
{
	static UFunction* pFnPlayBlinkPackEffect = NULL;

	if ( ! pFnPlayBlinkPackEffect )
		pFnPlayBlinkPackEffect = (UFunction*) UObject::GObjObjects()->Data[ 72880 ];

	ATrPawn_execPlayBlinkPackEffect_Parms PlayBlinkPackEffect_Parms;

	this->ProcessEvent ( pFnPlayBlinkPackEffect, &PlayBlinkPackEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.Blink
// [0x00820102] 
// Parameters infos:
// struct FVector                 Impulse                        ( CPF_Parm )
// float                          MinZ                           ( CPF_Parm )
// float                          PctEffectiveness               ( CPF_Parm )

void ATrPawn::Blink ( struct FVector Impulse, float MinZ, float PctEffectiveness )
{
	static UFunction* pFnBlink = NULL;

	if ( ! pFnBlink )
		pFnBlink = (UFunction*) UObject::GObjObjects()->Data[ 72873 ];

	ATrPawn_execBlink_Parms Blink_Parms;
	memcpy ( &Blink_Parms.Impulse, &Impulse, 0xC );
	Blink_Parms.MinZ = MinZ;
	Blink_Parms.PctEffectiveness = PctEffectiveness;

	this->ProcessEvent ( pFnBlink, &Blink_Parms, NULL );
};

// Function TribesGame.TrPawn.LockFromFlagPickup
// [0x00024002] 
// Parameters infos:
// float                          TimeToLock                     ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::LockFromFlagPickup ( float TimeToLock )
{
	static UFunction* pFnLockFromFlagPickup = NULL;

	if ( ! pFnLockFromFlagPickup )
		pFnLockFromFlagPickup = (UFunction*) UObject::GObjObjects()->Data[ 72871 ];

	ATrPawn_execLockFromFlagPickup_Parms LockFromFlagPickup_Parms;
	LockFromFlagPickup_Parms.TimeToLock = TimeToLock;

	this->ProcessEvent ( pFnLockFromFlagPickup, &LockFromFlagPickup_Parms, NULL );
};

// Function TribesGame.TrPawn.LockedOutFromFlagPickupTimer
// [0x00020000] 
// Parameters infos:

void ATrPawn::LockedOutFromFlagPickupTimer ( )
{
	static UFunction* pFnLockedOutFromFlagPickupTimer = NULL;

	if ( ! pFnLockedOutFromFlagPickupTimer )
		pFnLockedOutFromFlagPickupTimer = (UFunction*) UObject::GObjObjects()->Data[ 72870 ];

	ATrPawn_execLockedOutFromFlagPickupTimer_Parms LockedOutFromFlagPickupTimer_Parms;

	this->ProcessEvent ( pFnLockedOutFromFlagPickupTimer, &LockedOutFromFlagPickupTimer_Parms, NULL );
};

// Function TribesGame.TrPawn.GetFamilyInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrPawn::GetFamilyInfo ( )
{
	static UFunction* pFnGetFamilyInfo = NULL;

	if ( ! pFnGetFamilyInfo )
		pFnGetFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 72867 ];

	ATrPawn_execGetFamilyInfo_Parms GetFamilyInfo_Parms;

	this->ProcessEvent ( pFnGetFamilyInfo, &GetFamilyInfo_Parms, NULL );

	return GetFamilyInfo_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.SetScannerDetect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  detected                       ( CPF_Parm )

bool ATrPawn::SetScannerDetect ( unsigned long detected )
{
	static UFunction* pFnSetScannerDetect = NULL;

	if ( ! pFnSetScannerDetect )
		pFnSetScannerDetect = (UFunction*) UObject::GObjObjects()->Data[ 72864 ];

	ATrPawn_execSetScannerDetect_Parms SetScannerDetect_Parms;
	SetScannerDetect_Parms.detected = detected;

	this->ProcessEvent ( pFnSetScannerDetect, &SetScannerDetect_Parms, NULL );

	return SetScannerDetect_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetDetectedByEnemyScanner
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::GetDetectedByEnemyScanner ( )
{
	static UFunction* pFnGetDetectedByEnemyScanner = NULL;

	if ( ! pFnGetDetectedByEnemyScanner )
		pFnGetDetectedByEnemyScanner = (UFunction*) UObject::GObjObjects()->Data[ 72862 ];

	ATrPawn_execGetDetectedByEnemyScanner_Parms GetDetectedByEnemyScanner_Parms;

	this->ProcessEvent ( pFnGetDetectedByEnemyScanner, &GetDetectedByEnemyScanner_Parms, NULL );

	return GetDetectedByEnemyScanner_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.SetDetectedByEnemyScanner
// [0x00020002] 
// Parameters infos:
// unsigned long                  detected                       ( CPF_Parm )

void ATrPawn::SetDetectedByEnemyScanner ( unsigned long detected )
{
	static UFunction* pFnSetDetectedByEnemyScanner = NULL;

	if ( ! pFnSetDetectedByEnemyScanner )
		pFnSetDetectedByEnemyScanner = (UFunction*) UObject::GObjObjects()->Data[ 72860 ];

	ATrPawn_execSetDetectedByEnemyScanner_Parms SetDetectedByEnemyScanner_Parms;
	SetDetectedByEnemyScanner_Parms.detected = detected;

	this->ProcessEvent ( pFnSetDetectedByEnemyScanner, &SetDetectedByEnemyScanner_Parms, NULL );
};

// Function TribesGame.TrPawn.TurnOff
// [0x00020102] 
// Parameters infos:

void ATrPawn::TurnOff ( )
{
	static UFunction* pFnTurnOff = NULL;

	if ( ! pFnTurnOff )
		pFnTurnOff = (UFunction*) UObject::GObjObjects()->Data[ 72859 ];

	ATrPawn_execTurnOff_Parms TurnOff_Parms;

	this->ProcessEvent ( pFnTurnOff, &TurnOff_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayTeleportEffect
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOut                           ( CPF_Parm )
// unsigned long                  bSound                         ( CPF_Parm )

void ATrPawn::PlayTeleportEffect ( unsigned long bOut, unsigned long bSound )
{
	static UFunction* pFnPlayTeleportEffect = NULL;

	if ( ! pFnPlayTeleportEffect )
		pFnPlayTeleportEffect = (UFunction*) UObject::GObjObjects()->Data[ 72856 ];

	ATrPawn_execPlayTeleportEffect_Parms PlayTeleportEffect_Parms;
	PlayTeleportEffect_Parms.bOut = bOut;
	PlayTeleportEffect_Parms.bSound = bSound;

	this->ProcessEvent ( pFnPlayTeleportEffect, &PlayTeleportEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrPawn::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 72852 ];

	ATrPawn_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrPawn.SetMovementPhysics
// [0x00020002] 
// Parameters infos:

void ATrPawn::SetMovementPhysics ( )
{
	static UFunction* pFnSetMovementPhysics = NULL;

	if ( ! pFnSetMovementPhysics )
		pFnSetMovementPhysics = (UFunction*) UObject::GObjObjects()->Data[ 72851 ];

	ATrPawn_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

	this->ProcessEvent ( pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL );
};

// Function TribesGame.TrPawn.ClearInvulnerability
// [0x00020002] 
// Parameters infos:

void ATrPawn::ClearInvulnerability ( )
{
	static UFunction* pFnClearInvulnerability = NULL;

	if ( ! pFnClearInvulnerability )
		pFnClearInvulnerability = (UFunction*) UObject::GObjObjects()->Data[ 72850 ];

	ATrPawn_execClearInvulnerability_Parms ClearInvulnerability_Parms;

	this->ProcessEvent ( pFnClearInvulnerability, &ClearInvulnerability_Parms, NULL );
};

// Function TribesGame.TrPawn.GoInvulnerable
// [0x00024002] 
// Parameters infos:
// float                          InvulnerableTime               ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::GoInvulnerable ( float InvulnerableTime )
{
	static UFunction* pFnGoInvulnerable = NULL;

	if ( ! pFnGoInvulnerable )
		pFnGoInvulnerable = (UFunction*) UObject::GObjObjects()->Data[ 72848 ];

	ATrPawn_execGoInvulnerable_Parms GoInvulnerable_Parms;
	GoInvulnerable_Parms.InvulnerableTime = InvulnerableTime;

	this->ProcessEvent ( pFnGoInvulnerable, &GoInvulnerable_Parms, NULL );
};

// Function TribesGame.TrPawn.AdjustDamage
// [0x00420002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            InDamage                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void ATrPawn::AdjustDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser, int* InDamage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustDamage = NULL;

	if ( ! pFnAdjustDamage )
		pFnAdjustDamage = (UFunction*) UObject::GObjObjects()->Data[ 72839 ];

	ATrPawn_execAdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy ( &AdjustDamage_Parms.HitInfo, &HitInfo, 0x1C );
	AdjustDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnAdjustDamage, &AdjustDamage_Parms, NULL );

	if ( InDamage )
		*InDamage = AdjustDamage_Parms.InDamage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustDamage_Parms.Momentum, 0xC );
};

// Function TribesGame.TrPawn.HoldGameObject
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKCarriedObject*       GameObj                        ( CPF_Parm )

void ATrPawn::eventHoldGameObject ( class AUDKCarriedObject* GameObj )
{
	static UFunction* pFnHoldGameObject = NULL;

	if ( ! pFnHoldGameObject )
		pFnHoldGameObject = (UFunction*) UObject::GObjObjects()->Data[ 72833 ];

	ATrPawn_eventHoldGameObject_Parms HoldGameObject_Parms;
	HoldGameObject_Parms.GameObj = GameObj;

	this->ProcessEvent ( pFnHoldGameObject, &HoldGameObject_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayDyingSound
// [0x00020002] 
// Parameters infos:

void ATrPawn::PlayDyingSound ( )
{
	static UFunction* pFnPlayDyingSound = NULL;

	if ( ! pFnPlayDyingSound )
		pFnPlayDyingSound = (UFunction*) UObject::GObjObjects()->Data[ 72832 ];

	ATrPawn_execPlayDyingSound_Parms PlayDyingSound_Parms;

	this->ProcessEvent ( pFnPlayDyingSound, &PlayDyingSound_Parms, NULL );
};

// Function TribesGame.TrPawn.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ATrPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 72829 ];

	ATrPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function TribesGame.TrPawn.StopSkiEffectsSound
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventStopSkiEffectsSound ( )
{
	static UFunction* pFnStopSkiEffectsSound = NULL;

	if ( ! pFnStopSkiEffectsSound )
		pFnStopSkiEffectsSound = (UFunction*) UObject::GObjObjects()->Data[ 72828 ];

	ATrPawn_eventStopSkiEffectsSound_Parms StopSkiEffectsSound_Parms;

	this->ProcessEvent ( pFnStopSkiEffectsSound, &StopSkiEffectsSound_Parms, NULL );
};

// Function TribesGame.TrPawn.PlaySkiEffectsSound
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventPlaySkiEffectsSound ( )
{
	static UFunction* pFnPlaySkiEffectsSound = NULL;

	if ( ! pFnPlaySkiEffectsSound )
		pFnPlaySkiEffectsSound = (UFunction*) UObject::GObjObjects()->Data[ 72827 ];

	ATrPawn_eventPlaySkiEffectsSound_Parms PlaySkiEffectsSound_Parms;

	this->ProcessEvent ( pFnPlaySkiEffectsSound, &PlaySkiEffectsSound_Parms, NULL );
};

// Function TribesGame.TrPawn.StopSkiEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventStopSkiEffects ( )
{
	static UFunction* pFnStopSkiEffects = NULL;

	if ( ! pFnStopSkiEffects )
		pFnStopSkiEffects = (UFunction*) UObject::GObjObjects()->Data[ 72826 ];

	ATrPawn_eventStopSkiEffects_Parms StopSkiEffects_Parms;

	this->ProcessEvent ( pFnStopSkiEffects, &StopSkiEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.PlaySkiEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventPlaySkiEffects ( )
{
	static UFunction* pFnPlaySkiEffects = NULL;

	if ( ! pFnPlaySkiEffects )
		pFnPlaySkiEffects = (UFunction*) UObject::GObjObjects()->Data[ 72825 ];

	ATrPawn_eventPlaySkiEffects_Parms PlaySkiEffects_Parms;

	this->ProcessEvent ( pFnPlaySkiEffects, &PlaySkiEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.SetSkiing
// [0x00024102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )
// unsigned long                  bJump                          ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::SetSkiing ( unsigned long bEnabled, unsigned long bJump )
{
	static UFunction* pFnSetSkiing = NULL;

	if ( ! pFnSetSkiing )
		pFnSetSkiing = (UFunction*) UObject::GObjObjects()->Data[ 72819 ];

	ATrPawn_execSetSkiing_Parms SetSkiing_Parms;
	SetSkiing_Parms.bEnabled = bEnabled;
	SetSkiing_Parms.bJump = bJump;

	this->ProcessEvent ( pFnSetSkiing, &SetSkiing_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateStickyGrenades
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrPawn::eventUpdateStickyGrenades ( float DeltaSeconds )
{
	static UFunction* pFnUpdateStickyGrenades = NULL;

	if ( ! pFnUpdateStickyGrenades )
		pFnUpdateStickyGrenades = (UFunction*) UObject::GObjObjects()->Data[ 72817 ];

	ATrPawn_eventUpdateStickyGrenades_Parms UpdateStickyGrenades_Parms;
	UpdateStickyGrenades_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnUpdateStickyGrenades, &UpdateStickyGrenades_Parms, NULL );
};

// Function TribesGame.TrPawn.StickGrenadeToPawn
// [0x00020102] 
// Parameters infos:
// class ATrProjectile*           Projectile                     ( CPF_Parm )

void ATrPawn::StickGrenadeToPawn ( class ATrProjectile* Projectile )
{
	static UFunction* pFnStickGrenadeToPawn = NULL;

	if ( ! pFnStickGrenadeToPawn )
		pFnStickGrenadeToPawn = (UFunction*) UObject::GObjObjects()->Data[ 72813 ];

	ATrPawn_execStickGrenadeToPawn_Parms StickGrenadeToPawn_Parms;
	StickGrenadeToPawn_Parms.Projectile = Projectile;

	this->ProcessEvent ( pFnStickGrenadeToPawn, &StickGrenadeToPawn_Parms, NULL );
};

// Function TribesGame.TrPawn.FindClosestStickyGrenadeSocketIndex
// [0x00820102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 ProjectileLocation             ( CPF_Parm )
// unsigned long                  bOnlyFindAvailableSlots        ( CPF_Parm )

int ATrPawn::FindClosestStickyGrenadeSocketIndex ( struct FVector ProjectileLocation, unsigned long bOnlyFindAvailableSlots )
{
	static UFunction* pFnFindClosestStickyGrenadeSocketIndex = NULL;

	if ( ! pFnFindClosestStickyGrenadeSocketIndex )
		pFnFindClosestStickyGrenadeSocketIndex = (UFunction*) UObject::GObjObjects()->Data[ 72803 ];

	ATrPawn_execFindClosestStickyGrenadeSocketIndex_Parms FindClosestStickyGrenadeSocketIndex_Parms;
	memcpy ( &FindClosestStickyGrenadeSocketIndex_Parms.ProjectileLocation, &ProjectileLocation, 0xC );
	FindClosestStickyGrenadeSocketIndex_Parms.bOnlyFindAvailableSlots = bOnlyFindAvailableSlots;

	this->ProcessEvent ( pFnFindClosestStickyGrenadeSocketIndex, &FindClosestStickyGrenadeSocketIndex_Parms, NULL );

	return FindClosestStickyGrenadeSocketIndex_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ForceCrouch
// [0x00020100] 
// Parameters infos:

void ATrPawn::ForceCrouch ( )
{
	static UFunction* pFnForceCrouch = NULL;

	if ( ! pFnForceCrouch )
		pFnForceCrouch = (UFunction*) UObject::GObjObjects()->Data[ 72802 ];

	ATrPawn_execForceCrouch_Parms ForceCrouch_Parms;

	this->ProcessEvent ( pFnForceCrouch, &ForceCrouch_Parms, NULL );
};

// Function TribesGame.TrPawn.WeaponAttachmentChanged
// [0x00020102] 
// Parameters infos:

void ATrPawn::WeaponAttachmentChanged ( )
{
	static UFunction* pFnWeaponAttachmentChanged = NULL;

	if ( ! pFnWeaponAttachmentChanged )
		pFnWeaponAttachmentChanged = (UFunction*) UObject::GObjObjects()->Data[ 72801 ];

	ATrPawn_execWeaponAttachmentChanged_Parms WeaponAttachmentChanged_Parms;

	this->ProcessEvent ( pFnWeaponAttachmentChanged, &WeaponAttachmentChanged_Parms, NULL );
};

// Function TribesGame.TrPawn.SetFirstPersonBodyVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bHide                          ( CPF_Parm )

void ATrPawn::SetFirstPersonBodyVisibility ( unsigned long bHide )
{
	static UFunction* pFnSetFirstPersonBodyVisibility = NULL;

	if ( ! pFnSetFirstPersonBodyVisibility )
		pFnSetFirstPersonBodyVisibility = (UFunction*) UObject::GObjObjects()->Data[ 72798 ];

	ATrPawn_execSetFirstPersonBodyVisibility_Parms SetFirstPersonBodyVisibility_Parms;
	SetFirstPersonBodyVisibility_Parms.bHide = bHide;

	this->ProcessEvent ( pFnSetFirstPersonBodyVisibility, &SetFirstPersonBodyVisibility_Parms, NULL );
};

// Function TribesGame.TrPawn.SetMeshVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrPawn::SetMeshVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetMeshVisibility = NULL;

	if ( ! pFnSetMeshVisibility )
		pFnSetMeshVisibility = (UFunction*) UObject::GObjObjects()->Data[ 72795 ];

	ATrPawn_execSetMeshVisibility_Parms SetMeshVisibility_Parms;
	SetMeshVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetMeshVisibility, &SetMeshVisibility_Parms, NULL );
};

// Function TribesGame.TrPawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 72794 ];

	ATrPawn_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrPawn.GetPawnViewLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ATrPawn::GetPawnViewLocation ( )
{
	static UFunction* pFnGetPawnViewLocation = NULL;

	if ( ! pFnGetPawnViewLocation )
		pFnGetPawnViewLocation = (UFunction*) UObject::GObjObjects()->Data[ 67227 ];

	ATrPawn_execGetPawnViewLocation_Parms GetPawnViewLocation_Parms;

	this->ProcessEvent ( pFnGetPawnViewLocation, &GetPawnViewLocation_Parms, NULL );

	return GetPawnViewLocation_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.OnChangeJammingTeam
// [0x00020002] 
// Parameters infos:

void ATrPawn::OnChangeJammingTeam ( )
{
	static UFunction* pFnOnChangeJammingTeam = NULL;

	if ( ! pFnOnChangeJammingTeam )
		pFnOnChangeJammingTeam = (UFunction*) UObject::GObjObjects()->Data[ 72785 ];

	ATrPawn_execOnChangeJammingTeam_Parms OnChangeJammingTeam_Parms;

	this->ProcessEvent ( pFnOnChangeJammingTeam, &OnChangeJammingTeam_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJammingByFriendlyDropJammerEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayJammingByFriendlyDropJammerEffect ( )
{
	static UFunction* pFnPlayJammingByFriendlyDropJammerEffect = NULL;

	if ( ! pFnPlayJammingByFriendlyDropJammerEffect )
		pFnPlayJammingByFriendlyDropJammerEffect = (UFunction*) UObject::GObjObjects()->Data[ 72782 ];

	ATrPawn_execPlayJammingByFriendlyDropJammerEffect_Parms PlayJammingByFriendlyDropJammerEffect_Parms;

	this->ProcessEvent ( pFnPlayJammingByFriendlyDropJammerEffect, &PlayJammingByFriendlyDropJammerEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJammingByEnemyDropJammerEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayJammingByEnemyDropJammerEffect ( )
{
	static UFunction* pFnPlayJammingByEnemyDropJammerEffect = NULL;

	if ( ! pFnPlayJammingByEnemyDropJammerEffect )
		pFnPlayJammingByEnemyDropJammerEffect = (UFunction*) UObject::GObjObjects()->Data[ 72778 ];

	ATrPawn_execPlayJammingByEnemyDropJammerEffect_Parms PlayJammingByEnemyDropJammerEffect_Parms;

	this->ProcessEvent ( pFnPlayJammingByEnemyDropJammerEffect, &PlayJammingByEnemyDropJammerEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateFriendlyDropJammer
// [0x00020002] 
// Parameters infos:

void ATrPawn::UpdateFriendlyDropJammer ( )
{
	static UFunction* pFnUpdateFriendlyDropJammer = NULL;

	if ( ! pFnUpdateFriendlyDropJammer )
		pFnUpdateFriendlyDropJammer = (UFunction*) UObject::GObjObjects()->Data[ 72777 ];

	ATrPawn_execUpdateFriendlyDropJammer_Parms UpdateFriendlyDropJammer_Parms;

	this->ProcessEvent ( pFnUpdateFriendlyDropJammer, &UpdateFriendlyDropJammer_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateEnemyDropJammer
// [0x00020002] 
// Parameters infos:

void ATrPawn::UpdateEnemyDropJammer ( )
{
	static UFunction* pFnUpdateEnemyDropJammer = NULL;

	if ( ! pFnUpdateEnemyDropJammer )
		pFnUpdateEnemyDropJammer = (UFunction*) UObject::GObjObjects()->Data[ 72776 ];

	ATrPawn_execUpdateEnemyDropJammer_Parms UpdateEnemyDropJammer_Parms;

	this->ProcessEvent ( pFnUpdateEnemyDropJammer, &UpdateEnemyDropJammer_Parms, NULL );
};

// Function TribesGame.TrPawn.OnExitedDropJammer
// [0x00020002] 
// Parameters infos:
// class ATrDeployable_DropJammer* DropJammer                     ( CPF_Parm )

void ATrPawn::OnExitedDropJammer ( class ATrDeployable_DropJammer* DropJammer )
{
	static UFunction* pFnOnExitedDropJammer = NULL;

	if ( ! pFnOnExitedDropJammer )
		pFnOnExitedDropJammer = (UFunction*) UObject::GObjObjects()->Data[ 72774 ];

	ATrPawn_execOnExitedDropJammer_Parms OnExitedDropJammer_Parms;
	OnExitedDropJammer_Parms.DropJammer = DropJammer;

	this->ProcessEvent ( pFnOnExitedDropJammer, &OnExitedDropJammer_Parms, NULL );
};

// Function TribesGame.TrPawn.OnEnteredDropJammer
// [0x00020002] 
// Parameters infos:
// class ATrDeployable_DropJammer* DropJammer                     ( CPF_Parm )

void ATrPawn::OnEnteredDropJammer ( class ATrDeployable_DropJammer* DropJammer )
{
	static UFunction* pFnOnEnteredDropJammer = NULL;

	if ( ! pFnOnEnteredDropJammer )
		pFnOnEnteredDropJammer = (UFunction*) UObject::GObjObjects()->Data[ 72772 ];

	ATrPawn_execOnEnteredDropJammer_Parms OnEnteredDropJammer_Parms;
	OnEnteredDropJammer_Parms.DropJammer = DropJammer;

	this->ProcessEvent ( pFnOnEnteredDropJammer, &OnEnteredDropJammer_Parms, NULL );
};

// Function TribesGame.TrPawn.OnPawnExitedCollisionProxy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrPawn::OnPawnExitedCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnExitedCollisionProxy = NULL;

	if ( ! pFnOnPawnExitedCollisionProxy )
		pFnOnPawnExitedCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 72769 ];

	ATrPawn_execOnPawnExitedCollisionProxy_Parms OnPawnExitedCollisionProxy_Parms;
	OnPawnExitedCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnExitedCollisionProxy, &OnPawnExitedCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrPawn.OnPawnDetectedByCollisionProxy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrPawn::OnPawnDetectedByCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnDetectedByCollisionProxy = NULL;

	if ( ! pFnOnPawnDetectedByCollisionProxy )
		pFnOnPawnDetectedByCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 72766 ];

	ATrPawn_execOnPawnDetectedByCollisionProxy_Parms OnPawnDetectedByCollisionProxy_Parms;
	OnPawnDetectedByCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnDetectedByCollisionProxy, &OnPawnDetectedByCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayEnemyJammerPackEffect
// [0x00020102] 
// Parameters infos:
// unsigned long                  enteredJammingRadius           ( CPF_Parm )

void ATrPawn::PlayEnemyJammerPackEffect ( unsigned long enteredJammingRadius )
{
	static UFunction* pFnPlayEnemyJammerPackEffect = NULL;

	if ( ! pFnPlayEnemyJammerPackEffect )
		pFnPlayEnemyJammerPackEffect = (UFunction*) UObject::GObjObjects()->Data[ 72761 ];

	ATrPawn_execPlayEnemyJammerPackEffect_Parms PlayEnemyJammerPackEffect_Parms;
	PlayEnemyJammerPackEffect_Parms.enteredJammingRadius = enteredJammingRadius;

	this->ProcessEvent ( pFnPlayEnemyJammerPackEffect, &PlayEnemyJammerPackEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJammingByFriendEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayJammingByFriendEffect ( )
{
	static UFunction* pFnPlayJammingByFriendEffect = NULL;

	if ( ! pFnPlayJammingByFriendEffect )
		pFnPlayJammingByFriendEffect = (UFunction*) UObject::GObjObjects()->Data[ 72758 ];

	ATrPawn_execPlayJammingByFriendEffect_Parms PlayJammingByFriendEffect_Parms;

	this->ProcessEvent ( pFnPlayJammingByFriendEffect, &PlayJammingByFriendEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJammerPackEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayJammerPackEffect ( )
{
	static UFunction* pFnPlayJammerPackEffect = NULL;

	if ( ! pFnPlayJammerPackEffect )
		pFnPlayJammerPackEffect = (UFunction*) UObject::GObjObjects()->Data[ 72755 ];

	ATrPawn_execPlayJammerPackEffect_Parms PlayJammerPackEffect_Parms;

	this->ProcessEvent ( pFnPlayJammerPackEffect, &PlayJammerPackEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.IsJammedByEnemy
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::IsJammedByEnemy ( )
{
	static UFunction* pFnIsJammedByEnemy = NULL;

	if ( ! pFnIsJammedByEnemy )
		pFnIsJammedByEnemy = (UFunction*) UObject::GObjObjects()->Data[ 72753 ];

	ATrPawn_execIsJammedByEnemy_Parms IsJammedByEnemy_Parms;

	this->ProcessEvent ( pFnIsJammedByEnemy, &IsJammedByEnemy_Parms, NULL );

	return IsJammedByEnemy_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.IsJammedByFriendOrSelf
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::IsJammedByFriendOrSelf ( )
{
	static UFunction* pFnIsJammedByFriendOrSelf = NULL;

	if ( ! pFnIsJammedByFriendOrSelf )
		pFnIsJammedByFriendOrSelf = (UFunction*) UObject::GObjObjects()->Data[ 71591 ];

	ATrPawn_execIsJammedByFriendOrSelf_Parms IsJammedByFriendOrSelf_Parms;

	this->ProcessEvent ( pFnIsJammedByFriendOrSelf, &IsJammedByFriendOrSelf_Parms, NULL );

	return IsJammedByFriendOrSelf_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ExitEnemyJammingRadius
// [0x00020002] 
// Parameters infos:

void ATrPawn::ExitEnemyJammingRadius ( )
{
	static UFunction* pFnExitEnemyJammingRadius = NULL;

	if ( ! pFnExitEnemyJammingRadius )
		pFnExitEnemyJammingRadius = (UFunction*) UObject::GObjObjects()->Data[ 72752 ];

	ATrPawn_execExitEnemyJammingRadius_Parms ExitEnemyJammingRadius_Parms;

	this->ProcessEvent ( pFnExitEnemyJammingRadius, &ExitEnemyJammingRadius_Parms, NULL );
};

// Function TribesGame.TrPawn.EnteredEnemyJammingRadius
// [0x00020002] 
// Parameters infos:

void ATrPawn::EnteredEnemyJammingRadius ( )
{
	static UFunction* pFnEnteredEnemyJammingRadius = NULL;

	if ( ! pFnEnteredEnemyJammingRadius )
		pFnEnteredEnemyJammingRadius = (UFunction*) UObject::GObjObjects()->Data[ 72751 ];

	ATrPawn_execEnteredEnemyJammingRadius_Parms EnteredEnemyJammingRadius_Parms;

	this->ProcessEvent ( pFnEnteredEnemyJammingRadius, &EnteredEnemyJammingRadius_Parms, NULL );
};

// Function TribesGame.TrPawn.ExitFriendJammingRadius
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 JammingFriend                  ( CPF_Parm )

void ATrPawn::ExitFriendJammingRadius ( class ATrPawn* JammingFriend )
{
	static UFunction* pFnExitFriendJammingRadius = NULL;

	if ( ! pFnExitFriendJammingRadius )
		pFnExitFriendJammingRadius = (UFunction*) UObject::GObjObjects()->Data[ 72748 ];

	ATrPawn_execExitFriendJammingRadius_Parms ExitFriendJammingRadius_Parms;
	ExitFriendJammingRadius_Parms.JammingFriend = JammingFriend;

	this->ProcessEvent ( pFnExitFriendJammingRadius, &ExitFriendJammingRadius_Parms, NULL );
};

// Function TribesGame.TrPawn.EnteredFriendJammingRadius
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 JammingFriend                  ( CPF_Parm )

void ATrPawn::EnteredFriendJammingRadius ( class ATrPawn* JammingFriend )
{
	static UFunction* pFnEnteredFriendJammingRadius = NULL;

	if ( ! pFnEnteredFriendJammingRadius )
		pFnEnteredFriendJammingRadius = (UFunction*) UObject::GObjObjects()->Data[ 72743 ];

	ATrPawn_execEnteredFriendJammingRadius_Parms EnteredFriendJammingRadius_Parms;
	EnteredFriendJammingRadius_Parms.JammingFriend = JammingFriend;

	this->ProcessEvent ( pFnEnteredFriendJammingRadius, &EnteredFriendJammingRadius_Parms, NULL );
};

// Function TribesGame.TrPawn.DisableJammingOtherPawns
// [0x00020002] 
// Parameters infos:

void ATrPawn::DisableJammingOtherPawns ( )
{
	static UFunction* pFnDisableJammingOtherPawns = NULL;

	if ( ! pFnDisableJammingOtherPawns )
		pFnDisableJammingOtherPawns = (UFunction*) UObject::GObjObjects()->Data[ 72742 ];

	ATrPawn_execDisableJammingOtherPawns_Parms DisableJammingOtherPawns_Parms;

	this->ProcessEvent ( pFnDisableJammingOtherPawns, &DisableJammingOtherPawns_Parms, NULL );
};

// Function TribesGame.TrPawn.DisableJamming
// [0x00020002] 
// Parameters infos:

void ATrPawn::DisableJamming ( )
{
	static UFunction* pFnDisableJamming = NULL;

	if ( ! pFnDisableJamming )
		pFnDisableJamming = (UFunction*) UObject::GObjObjects()->Data[ 72741 ];

	ATrPawn_execDisableJamming_Parms DisableJamming_Parms;

	this->ProcessEvent ( pFnDisableJamming, &DisableJamming_Parms, NULL );
};

// Function TribesGame.TrPawn.EnableJamming
// [0x00020002] 
// Parameters infos:

void ATrPawn::EnableJamming ( )
{
	static UFunction* pFnEnableJamming = NULL;

	if ( ! pFnEnableJamming )
		pFnEnableJamming = (UFunction*) UObject::GObjObjects()->Data[ 72736 ];

	ATrPawn_execEnableJamming_Parms EnableJamming_Parms;

	this->ProcessEvent ( pFnEnableJamming, &EnableJamming_Parms, NULL );
};

// Function TribesGame.TrPawn.OnRanOver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ASVehicle*               Vehicle                        ( CPF_Parm )
// class UPrimitiveComponent*     RunOverComponent               ( CPF_Parm | CPF_EditInline )
// int                            WheelIndex                     ( CPF_Parm )

void ATrPawn::eventOnRanOver ( class ASVehicle* Vehicle, class UPrimitiveComponent* RunOverComponent, int WheelIndex )
{
	static UFunction* pFnOnRanOver = NULL;

	if ( ! pFnOnRanOver )
		pFnOnRanOver = (UFunction*) UObject::GObjObjects()->Data[ 72728 ];

	ATrPawn_eventOnRanOver_Parms OnRanOver_Parms;
	OnRanOver_Parms.Vehicle = Vehicle;
	OnRanOver_Parms.RunOverComponent = RunOverComponent;
	OnRanOver_Parms.WheelIndex = WheelIndex;

	this->ProcessEvent ( pFnOnRanOver, &OnRanOver_Parms, NULL );
};

// Function TribesGame.TrPawn.StopDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void ATrPawn::eventStopDriving ( class AVehicle* V )
{
	static UFunction* pFnStopDriving = NULL;

	if ( ! pFnStopDriving )
		pFnStopDriving = (UFunction*) UObject::GObjObjects()->Data[ 72721 ];

	ATrPawn_eventStopDriving_Parms StopDriving_Parms;
	StopDriving_Parms.V = V;

	this->ProcessEvent ( pFnStopDriving, &StopDriving_Parms, NULL );
};

// Function TribesGame.TrPawn.StartDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void ATrPawn::eventStartDriving ( class AVehicle* V )
{
	static UFunction* pFnStartDriving = NULL;

	if ( ! pFnStartDriving )
		pFnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 72718 ];

	ATrPawn_eventStartDriving_Parms StartDriving_Parms;
	StartDriving_Parms.V = V;

	this->ProcessEvent ( pFnStartDriving, &StartDriving_Parms, NULL );
};

// Function TribesGame.TrPawn.StopRidingInVehicle
// [0x00020102] 
// Parameters infos:

void ATrPawn::StopRidingInVehicle ( )
{
	static UFunction* pFnStopRidingInVehicle = NULL;

	if ( ! pFnStopRidingInVehicle )
		pFnStopRidingInVehicle = (UFunction*) UObject::GObjObjects()->Data[ 72713 ];

	ATrPawn_execStopRidingInVehicle_Parms StopRidingInVehicle_Parms;

	this->ProcessEvent ( pFnStopRidingInVehicle, &StopRidingInVehicle_Parms, NULL );
};

// Function TribesGame.TrPawn.StartRidingInVehicle
// [0x00020102] 
// Parameters infos:
// class ATrVehicle*              V                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrPawn::StartRidingInVehicle ( class ATrVehicle* V, int SeatIndex )
{
	static UFunction* pFnStartRidingInVehicle = NULL;

	if ( ! pFnStartRidingInVehicle )
		pFnStartRidingInVehicle = (UFunction*) UObject::GObjObjects()->Data[ 72706 ];

	ATrPawn_execStartRidingInVehicle_Parms StartRidingInVehicle_Parms;
	StartRidingInVehicle_Parms.V = V;
	StartRidingInVehicle_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnStartRidingInVehicle, &StartRidingInVehicle_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayInvulnerabilityEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayInvulnerabilityEffect ( )
{
	static UFunction* pFnPlayInvulnerabilityEffect = NULL;

	if ( ! pFnPlayInvulnerabilityEffect )
		pFnPlayInvulnerabilityEffect = (UFunction*) UObject::GObjObjects()->Data[ 72705 ];

	ATrPawn_execPlayInvulnerabilityEffect_Parms PlayInvulnerabilityEffect_Parms;

	this->ProcessEvent ( pFnPlayInvulnerabilityEffect, &PlayInvulnerabilityEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayRageEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayRageEffect ( )
{
	static UFunction* pFnPlayRageEffect = NULL;

	if ( ! pFnPlayRageEffect )
		pFnPlayRageEffect = (UFunction*) UObject::GObjObjects()->Data[ 72700 ];

	ATrPawn_execPlayRageEffect_Parms PlayRageEffect_Parms;

	this->ProcessEvent ( pFnPlayRageEffect, &PlayRageEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.ClearRagePerk
// [0x00020002] 
// Parameters infos:

void ATrPawn::ClearRagePerk ( )
{
	static UFunction* pFnClearRagePerk = NULL;

	if ( ! pFnClearRagePerk )
		pFnClearRagePerk = (UFunction*) UObject::GObjObjects()->Data[ 72696 ];

	ATrPawn_execClearRagePerk_Parms ClearRagePerk_Parms;

	this->ProcessEvent ( pFnClearRagePerk, &ClearRagePerk_Parms, NULL );
};

// Function TribesGame.TrPawn.SetRagePerkActive
// [0x00020002] 
// Parameters infos:

void ATrPawn::SetRagePerkActive ( )
{
	static UFunction* pFnSetRagePerkActive = NULL;

	if ( ! pFnSetRagePerkActive )
		pFnSetRagePerkActive = (UFunction*) UObject::GObjObjects()->Data[ 72687 ];

	ATrPawn_execSetRagePerkActive_Parms SetRagePerkActive_Parms;

	this->ProcessEvent ( pFnSetRagePerkActive, &SetRagePerkActive_Parms, NULL );
};

// Function TribesGame.TrPawn.IsPulseStealthed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::IsPulseStealthed ( )
{
	static UFunction* pFnIsPulseStealthed = NULL;

	if ( ! pFnIsPulseStealthed )
		pFnIsPulseStealthed = (UFunction*) UObject::GObjObjects()->Data[ 71589 ];

	ATrPawn_execIsPulseStealthed_Parms IsPulseStealthed_Parms;

	this->ProcessEvent ( pFnIsPulseStealthed, &IsPulseStealthed_Parms, NULL );

	return IsPulseStealthed_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.PulseStealth
// [0x00024102] 
// Parameters infos:
// unsigned long                  bOverrideIgnore                ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::PulseStealth ( unsigned long bOverrideIgnore )
{
	static UFunction* pFnPulseStealth = NULL;

	if ( ! pFnPulseStealth )
		pFnPulseStealth = (UFunction*) UObject::GObjObjects()->Data[ 72685 ];

	ATrPawn_execPulseStealth_Parms PulseStealth_Parms;
	PulseStealth_Parms.bOverrideIgnore = bOverrideIgnore;

	this->ProcessEvent ( pFnPulseStealth, &PulseStealth_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayStealthPackEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayStealthPackEffect ( )
{
	static UFunction* pFnPlayStealthPackEffect = NULL;

	if ( ! pFnPlayStealthPackEffect )
		pFnPlayStealthPackEffect = (UFunction*) UObject::GObjObjects()->Data[ 72681 ];

	ATrPawn_execPlayStealthPackEffect_Parms PlayStealthPackEffect_Parms;

	this->ProcessEvent ( pFnPlayStealthPackEffect, &PlayStealthPackEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.SetStealthPackActive
// [0x00020002] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void ATrPawn::SetStealthPackActive ( unsigned long bActive )
{
	static UFunction* pFnSetStealthPackActive = NULL;

	if ( ! pFnSetStealthPackActive )
		pFnSetStealthPackActive = (UFunction*) UObject::GObjObjects()->Data[ 72679 ];

	ATrPawn_execSetStealthPackActive_Parms SetStealthPackActive_Parms;
	SetStealthPackActive_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetStealthPackActive, &SetStealthPackActive_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayShieldPackEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayShieldPackEffect ( )
{
	static UFunction* pFnPlayShieldPackEffect = NULL;

	if ( ! pFnPlayShieldPackEffect )
		pFnPlayShieldPackEffect = (UFunction*) UObject::GObjObjects()->Data[ 72675 ];

	ATrPawn_execPlayShieldPackEffect_Parms PlayShieldPackEffect_Parms;

	this->ProcessEvent ( pFnPlayShieldPackEffect, &PlayShieldPackEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.SetShieldPackActive
// [0x00020002] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void ATrPawn::SetShieldPackActive ( unsigned long bActive )
{
	static UFunction* pFnSetShieldPackActive = NULL;

	if ( ! pFnSetShieldPackActive )
		pFnSetShieldPackActive = (UFunction*) UObject::GObjObjects()->Data[ 72673 ];

	ATrPawn_execSetShieldPackActive_Parms SetShieldPackActive_Parms;
	SetShieldPackActive_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetShieldPackActive, &SetShieldPackActive_Parms, NULL );
};

// Function TribesGame.TrPawn.ClientPlayHealthRegenEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::ClientPlayHealthRegenEffect ( )
{
	static UFunction* pFnClientPlayHealthRegenEffect = NULL;

	if ( ! pFnClientPlayHealthRegenEffect )
		pFnClientPlayHealthRegenEffect = (UFunction*) UObject::GObjObjects()->Data[ 72669 ];

	ATrPawn_execClientPlayHealthRegenEffect_Parms ClientPlayHealthRegenEffect_Parms;

	this->ProcessEvent ( pFnClientPlayHealthRegenEffect, &ClientPlayHealthRegenEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.InitializeOverlayMaterials
// [0x00020102] 
// Parameters infos:

void ATrPawn::InitializeOverlayMaterials ( )
{
	static UFunction* pFnInitializeOverlayMaterials = NULL;

	if ( ! pFnInitializeOverlayMaterials )
		pFnInitializeOverlayMaterials = (UFunction*) UObject::GObjObjects()->Data[ 72667 ];

	ATrPawn_execInitializeOverlayMaterials_Parms InitializeOverlayMaterials_Parms;

	this->ProcessEvent ( pFnInitializeOverlayMaterials, &InitializeOverlayMaterials_Parms, NULL );
};

// Function TribesGame.TrPawn.CheckHeadShot
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FImpactInfo             Impact                         ( CPF_Const | CPF_Parm | CPF_OutParm )

bool ATrPawn::CheckHeadShot ( struct FImpactInfo* Impact )
{
	static UFunction* pFnCheckHeadShot = NULL;

	if ( ! pFnCheckHeadShot )
		pFnCheckHeadShot = (UFunction*) UObject::GObjObjects()->Data[ 67096 ];

	ATrPawn_execCheckHeadShot_Parms CheckHeadShot_Parms;

	this->ProcessEvent ( pFnCheckHeadShot, &CheckHeadShot_Parms, NULL );

	if ( Impact )
		memcpy ( Impact, &CheckHeadShot_Parms.Impact, 0x50 );

	return CheckHeadShot_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.SetSkin
// [0x00020102] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void ATrPawn::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 72663 ];

	ATrPawn_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function TribesGame.TrPawn.ResetSkin
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventResetSkin ( )
{
	static UFunction* pFnResetSkin = NULL;

	if ( ! pFnResetSkin )
		pFnResetSkin = (UFunction*) UObject::GObjObjects()->Data[ 72662 ];

	ATrPawn_eventResetSkin_Parms ResetSkin_Parms;

	this->ProcessEvent ( pFnResetSkin, &ResetSkin_Parms, NULL );
};

// Function TribesGame.TrPawn.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ATrPawn::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 72658 ];

	ATrPawn_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateTeamBlockerMaterials
// [0x00020102] 
// Parameters infos:

void ATrPawn::UpdateTeamBlockerMaterials ( )
{
	static UFunction* pFnUpdateTeamBlockerMaterials = NULL;

	if ( ! pFnUpdateTeamBlockerMaterials )
		pFnUpdateTeamBlockerMaterials = (UFunction*) UObject::GObjObjects()->Data[ 72656 ];

	ATrPawn_execUpdateTeamBlockerMaterials_Parms UpdateTeamBlockerMaterials_Parms;

	this->ProcessEvent ( pFnUpdateTeamBlockerMaterials, &UpdateTeamBlockerMaterials_Parms, NULL );
};

// Function TribesGame.TrPawn.NotifyTeamChanged
// [0x00020102] 
// Parameters infos:

void ATrPawn::NotifyTeamChanged ( )
{
	static UFunction* pFnNotifyTeamChanged = NULL;

	if ( ! pFnNotifyTeamChanged )
		pFnNotifyTeamChanged = (UFunction*) UObject::GObjObjects()->Data[ 72653 ];

	ATrPawn_execNotifyTeamChanged_Parms NotifyTeamChanged_Parms;

	this->ProcessEvent ( pFnNotifyTeamChanged, &NotifyTeamChanged_Parms, NULL );
};

// Function TribesGame.TrPawn.GetHealthPct
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::GetHealthPct ( )
{
	static UFunction* pFnGetHealthPct = NULL;

	if ( ! pFnGetHealthPct )
		pFnGetHealthPct = (UFunction*) UObject::GObjObjects()->Data[ 72303 ];

	ATrPawn_execGetHealthPct_Parms GetHealthPct_Parms;

	this->ProcessEvent ( pFnGetHealthPct, &GetHealthPct_Parms, NULL );

	return GetHealthPct_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.PlayDying
// [0x00820102] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )

void ATrPawn::PlayDying ( class UClass* DamageType, struct FVector HitLoc )
{
	static UFunction* pFnPlayDying = NULL;

	if ( ! pFnPlayDying )
		pFnPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 72631 ];

	ATrPawn_execPlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy ( &PlayDying_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnPlayDying, &PlayDying_Parms, NULL );
};

// Function TribesGame.TrPawn.SetOverlayMeshHidden
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewHidden                     ( CPF_Parm )

void ATrPawn::SetOverlayMeshHidden ( unsigned long bNewHidden )
{
	static UFunction* pFnSetOverlayMeshHidden = NULL;

	if ( ! pFnSetOverlayMeshHidden )
		pFnSetOverlayMeshHidden = (UFunction*) UObject::GObjObjects()->Data[ 72629 ];

	ATrPawn_execSetOverlayMeshHidden_Parms SetOverlayMeshHidden_Parms;
	SetOverlayMeshHidden_Parms.bNewHidden = bNewHidden;

	this->ProcessEvent ( pFnSetOverlayMeshHidden, &SetOverlayMeshHidden_Parms, NULL );
};

// Function TribesGame.TrPawn.StopLocalEffectsAndSounds
// [0x00020102] 
// Parameters infos:

void ATrPawn::StopLocalEffectsAndSounds ( )
{
	static UFunction* pFnStopLocalEffectsAndSounds = NULL;

	if ( ! pFnStopLocalEffectsAndSounds )
		pFnStopLocalEffectsAndSounds = (UFunction*) UObject::GObjObjects()->Data[ 72628 ];

	ATrPawn_execStopLocalEffectsAndSounds_Parms StopLocalEffectsAndSounds_Parms;

	this->ProcessEvent ( pFnStopLocalEffectsAndSounds, &StopLocalEffectsAndSounds_Parms, NULL );
};

// Function TribesGame.TrPawn.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ATrPawn::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 72615 ];

	ATrPawn_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void ATrPawn::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 72612 ];

	ATrPawn_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayTakeHitEffects
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayTakeHitEffects ( )
{
	static UFunction* pFnPlayTakeHitEffects = NULL;

	if ( ! pFnPlayTakeHitEffects )
		pFnPlayTakeHitEffects = (UFunction*) UObject::GObjObjects()->Data[ 72603 ];

	ATrPawn_execPlayTakeHitEffects_Parms PlayTakeHitEffects_Parms;

	this->ProcessEvent ( pFnPlayTakeHitEffects, &PlayTakeHitEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.IsLastHitFromNinjaSmoke
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::IsLastHitFromNinjaSmoke ( )
{
	static UFunction* pFnIsLastHitFromNinjaSmoke = NULL;

	if ( ! pFnIsLastHitFromNinjaSmoke )
		pFnIsLastHitFromNinjaSmoke = (UFunction*) UObject::GObjObjects()->Data[ 72601 ];

	ATrPawn_execIsLastHitFromNinjaSmoke_Parms IsLastHitFromNinjaSmoke_Parms;

	this->ProcessEvent ( pFnIsLastHitFromNinjaSmoke, &IsLastHitFromNinjaSmoke_Parms, NULL );

	return IsLastHitFromNinjaSmoke_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.PlayDamageCameraShake
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayDamageCameraShake ( )
{
	static UFunction* pFnPlayDamageCameraShake = NULL;

	if ( ! pFnPlayDamageCameraShake )
		pFnPlayDamageCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 72596 ];

	ATrPawn_execPlayDamageCameraShake_Parms PlayDamageCameraShake_Parms;

	this->ProcessEvent ( pFnPlayDamageCameraShake, &PlayDamageCameraShake_Parms, NULL );
};

// Function TribesGame.TrPawn.SetHandIKEnabled
// [0x00020100] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPawn::SetHandIKEnabled ( unsigned long bEnabled )
{
	static UFunction* pFnSetHandIKEnabled = NULL;

	if ( ! pFnSetHandIKEnabled )
		pFnSetHandIKEnabled = (UFunction*) UObject::GObjObjects()->Data[ 72594 ];

	ATrPawn_execSetHandIKEnabled_Parms SetHandIKEnabled_Parms;
	SetHandIKEnabled_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetHandIKEnabled, &SetHandIKEnabled_Parms, NULL );
};

// Function TribesGame.TrPawn.ShouldGib
// [0x00020100] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  UTDamageType                   ( CPF_Parm )

bool ATrPawn::ShouldGib ( class UClass* UTDamageType )
{
	static UFunction* pFnShouldGib = NULL;

	if ( ! pFnShouldGib )
		pFnShouldGib = (UFunction*) UObject::GObjObjects()->Data[ 72591 ];

	ATrPawn_execShouldGib_Parms ShouldGib_Parms;
	ShouldGib_Parms.UTDamageType = UTDamageType;

	this->ProcessEvent ( pFnShouldGib, &ShouldGib_Parms, NULL );

	return ShouldGib_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.EncroachedBy
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrPawn::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 72589 ];

	ATrPawn_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function TribesGame.TrPawn.gibbedBy
// [0x00020000] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrPawn::gibbedBy ( class AActor* Other )
{
	static UFunction* pFngibbedBy = NULL;

	if ( ! pFngibbedBy )
		pFngibbedBy = (UFunction*) UObject::GObjObjects()->Data[ 72587 ];

	ATrPawn_execgibbedBy_Parms gibbedBy_Parms;
	gibbedBy_Parms.Other = Other;

	this->ProcessEvent ( pFngibbedBy, &gibbedBy_Parms, NULL );
};

// Function TribesGame.TrPawn.PerformDodge
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )
// struct FVector                 Dir                            ( CPF_Parm )
// struct FVector                 Cross                          ( CPF_Parm )

bool ATrPawn::PerformDodge ( unsigned char DoubleClickMove, struct FVector Dir, struct FVector Cross )
{
	static UFunction* pFnPerformDodge = NULL;

	if ( ! pFnPerformDodge )
		pFnPerformDodge = (UFunction*) UObject::GObjObjects()->Data[ 72582 ];

	ATrPawn_execPerformDodge_Parms PerformDodge_Parms;
	PerformDodge_Parms.DoubleClickMove = DoubleClickMove;
	memcpy ( &PerformDodge_Parms.Dir, &Dir, 0xC );
	memcpy ( &PerformDodge_Parms.Cross, &Cross, 0xC );

	this->ProcessEvent ( pFnPerformDodge, &PerformDodge_Parms, NULL );

	return PerformDodge_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.Dodge
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool ATrPawn::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 72579 ];

	ATrPawn_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 72575 ];

	ATrPawn_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function TribesGame.TrPawn.FlashLocationUpdated
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 InFlashLocation                ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void ATrPawn::FlashLocationUpdated ( class AWeapon* InWeapon, struct FVector InFlashLocation, unsigned long bViaReplication )
{
	static UFunction* pFnFlashLocationUpdated = NULL;

	if ( ! pFnFlashLocationUpdated )
		pFnFlashLocationUpdated = (UFunction*) UObject::GObjObjects()->Data[ 72571 ];

	ATrPawn_execFlashLocationUpdated_Parms FlashLocationUpdated_Parms;
	FlashLocationUpdated_Parms.InWeapon = InWeapon;
	memcpy ( &FlashLocationUpdated_Parms.InFlashLocation, &InFlashLocation, 0xC );
	FlashLocationUpdated_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnFlashLocationUpdated, &FlashLocationUpdated_Parms, NULL );
};

// Function TribesGame.TrPawn.ProcessCreditEvent
// [0x00020002] 
// Parameters infos:
// unsigned char                  EventType                      ( CPF_Parm )
// unsigned long                  bProxyEvent                    ( CPF_Parm )

void ATrPawn::ProcessCreditEvent ( unsigned char EventType, unsigned long bProxyEvent )
{
	static UFunction* pFnProcessCreditEvent = NULL;

	if ( ! pFnProcessCreditEvent )
		pFnProcessCreditEvent = (UFunction*) UObject::GObjObjects()->Data[ 72568 ];

	ATrPawn_execProcessCreditEvent_Parms ProcessCreditEvent_Parms;
	ProcessCreditEvent_Parms.EventType = EventType;
	ProcessCreditEvent_Parms.bProxyEvent = bProxyEvent;

	this->ProcessEvent ( pFnProcessCreditEvent, &ProcessCreditEvent_Parms, NULL );
};

// Function TribesGame.TrPawn.TakeFallDamage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void ATrPawn::eventTakeFallDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum )
{
	static UFunction* pFnTakeFallDamage = NULL;

	if ( ! pFnTakeFallDamage )
		pFnTakeFallDamage = (UFunction*) UObject::GObjObjects()->Data[ 72563 ];

	ATrPawn_eventTakeFallDamage_Parms TakeFallDamage_Parms;
	TakeFallDamage_Parms.DamageAmount = DamageAmount;
	TakeFallDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeFallDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeFallDamage_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnTakeFallDamage, &TakeFallDamage_Parms, NULL );
};

// Function TribesGame.TrPawn.PlaySonicPunchEffect
// [0x01020140] 
// Parameters infos:

void ATrPawn::PlaySonicPunchEffect ( )
{
	static UFunction* pFnPlaySonicPunchEffect = NULL;

	if ( ! pFnPlaySonicPunchEffect )
		pFnPlaySonicPunchEffect = (UFunction*) UObject::GObjObjects()->Data[ 72562 ];

	ATrPawn_execPlaySonicPunchEffect_Parms PlaySonicPunchEffect_Parms;

	this->ProcessEvent ( pFnPlaySonicPunchEffect, &PlaySonicPunchEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayHardLandingEffect
// [0x01020140] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrPawn::PlayHardLandingEffect ( struct FVector HitLocation )
{
	static UFunction* pFnPlayHardLandingEffect = NULL;

	if ( ! pFnPlayHardLandingEffect )
		pFnPlayHardLandingEffect = (UFunction*) UObject::GObjObjects()->Data[ 72560 ];

	ATrPawn_execPlayHardLandingEffect_Parms PlayHardLandingEffect_Parms;
	memcpy ( &PlayHardLandingEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayHardLandingEffect, &PlayHardLandingEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.TakeFallingDamage
// [0x00020102] 
// Parameters infos:

void ATrPawn::TakeFallingDamage ( )
{
	static UFunction* pFnTakeFallingDamage = NULL;

	if ( ! pFnTakeFallingDamage )
		pFnTakeFallingDamage = (UFunction*) UObject::GObjObjects()->Data[ 72559 ];

	ATrPawn_execTakeFallingDamage_Parms TakeFallingDamage_Parms;

	this->ProcessEvent ( pFnTakeFallingDamage, &TakeFallingDamage_Parms, NULL );
};

// Function TribesGame.TrPawn.Landed
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ATrPawn::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 72553 ];

	ATrPawn_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function TribesGame.TrPawn.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void ATrPawn::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 72540 ];

	ATrPawn_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function TribesGame.TrPawn.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrPawn::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 72450 ];

	ATrPawn_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrPawn.GetShowDistanceThreshold
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsEnemy                       ( CPF_Parm )

float ATrPawn::GetShowDistanceThreshold ( unsigned long bIsEnemy )
{
	static UFunction* pFnGetShowDistanceThreshold = NULL;

	if ( ! pFnGetShowDistanceThreshold )
		pFnGetShowDistanceThreshold = (UFunction*) UObject::GObjObjects()->Data[ 72446 ];

	ATrPawn_execGetShowDistanceThreshold_Parms GetShowDistanceThreshold_Parms;
	GetShowDistanceThreshold_Parms.bIsEnemy = bIsEnemy;

	this->ProcessEvent ( pFnGetShowDistanceThreshold, &GetShowDistanceThreshold_Parms, NULL );

	return GetShowDistanceThreshold_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.RecentlyGrabbedFlag
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::RecentlyGrabbedFlag ( )
{
	static UFunction* pFnRecentlyGrabbedFlag = NULL;

	if ( ! pFnRecentlyGrabbedFlag )
		pFnRecentlyGrabbedFlag = (UFunction*) UObject::GObjObjects()->Data[ 72442 ];

	ATrPawn_execRecentlyGrabbedFlag_Parms RecentlyGrabbedFlag_Parms;

	this->ProcessEvent ( pFnRecentlyGrabbedFlag, &RecentlyGrabbedFlag_Parms, NULL );

	return RecentlyGrabbedFlag_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.TakeRadiusDamage
// [0x00824102] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::TakeRadiusDamage ( class AController* EventInstigator, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 72405 ];

	ATrPawn_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.EventInstigator = EventInstigator;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayWhiteoutEffect
// [0x00020102] 
// Parameters infos:

void ATrPawn::PlayWhiteoutEffect ( )
{
	static UFunction* pFnPlayWhiteoutEffect = NULL;

	if ( ! pFnPlayWhiteoutEffect )
		pFnPlayWhiteoutEffect = (UFunction*) UObject::GObjObjects()->Data[ 72395 ];

	ATrPawn_execPlayWhiteoutEffect_Parms PlayWhiteoutEffect_Parms;

	this->ProcessEvent ( pFnPlayWhiteoutEffect, &PlayWhiteoutEffect_Parms, NULL );
};

// Function TribesGame.TrPawn.TakeDamage
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 72358 ];

	ATrPawn_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrPawn.CheckTribesTurretInstigator
// [0x00020102] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

class AController* ATrPawn::CheckTribesTurretInstigator ( class AController* EventInstigator, class AActor* DamageCauser )
{
	static UFunction* pFnCheckTribesTurretInstigator = NULL;

	if ( ! pFnCheckTribesTurretInstigator )
		pFnCheckTribesTurretInstigator = (UFunction*) UObject::GObjObjects()->Data[ 72354 ];

	ATrPawn_execCheckTribesTurretInstigator_Parms CheckTribesTurretInstigator_Parms;
	CheckTribesTurretInstigator_Parms.EventInstigator = EventInstigator;
	CheckTribesTurretInstigator_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnCheckTribesTurretInstigator, &CheckTribesTurretInstigator_Parms, NULL );

	return CheckTribesTurretInstigator_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.DoRepairs
// [0x00020102] 
// Parameters infos:
// int                            HealAmount                     ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ATrPawn::DoRepairs ( int HealAmount, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType )
{
	static UFunction* pFnDoRepairs = NULL;

	if ( ! pFnDoRepairs )
		pFnDoRepairs = (UFunction*) UObject::GObjObjects()->Data[ 72349 ];

	ATrPawn_execDoRepairs_Parms DoRepairs_Parms;
	DoRepairs_Parms.HealAmount = HealAmount;
	DoRepairs_Parms.EventInstigator = EventInstigator;
	DoRepairs_Parms.DamageCauser = DamageCauser;
	DoRepairs_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDoRepairs, &DoRepairs_Parms, NULL );
};

// Function TribesGame.TrPawn.GetDamageScale
// [0x00424102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )
// class UClass*                  dmgType                        ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_OptionalParm | CPF_Parm )
// class UTrValueModifier*        VM                             ( CPF_OptionalParm | CPF_Parm )
// float                          DamageScaleWithoutNewPlayerAssist ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

float ATrPawn::GetDamageScale ( class AActor* DamageCauser, float Dist, class UClass* dmgType, class AController* EventInstigator, class UTrValueModifier* VM, float* DamageScaleWithoutNewPlayerAssist )
{
	static UFunction* pFnGetDamageScale = NULL;

	if ( ! pFnGetDamageScale )
		pFnGetDamageScale = (UFunction*) UObject::GObjObjects()->Data[ 72333 ];

	ATrPawn_execGetDamageScale_Parms GetDamageScale_Parms;
	GetDamageScale_Parms.DamageCauser = DamageCauser;
	GetDamageScale_Parms.Dist = Dist;
	GetDamageScale_Parms.dmgType = dmgType;
	GetDamageScale_Parms.EventInstigator = EventInstigator;
	GetDamageScale_Parms.VM = VM;

	this->ProcessEvent ( pFnGetDamageScale, &GetDamageScale_Parms, NULL );

	if ( DamageScaleWithoutNewPlayerAssist )
		*DamageScaleWithoutNewPlayerAssist = GetDamageScale_Parms.DamageScaleWithoutNewPlayerAssist;

	return GetDamageScale_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetPawnCausingDamage
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

class ATrPawn* ATrPawn::GetPawnCausingDamage ( class AController* EventInstigator, class AActor* DamageCauser )
{
	static UFunction* pFnGetPawnCausingDamage = NULL;

	if ( ! pFnGetPawnCausingDamage )
		pFnGetPawnCausingDamage = (UFunction*) UObject::GObjObjects()->Data[ 72327 ];

	ATrPawn_execGetPawnCausingDamage_Parms GetPawnCausingDamage_Parms;
	GetPawnCausingDamage_Parms.EventInstigator = EventInstigator;
	GetPawnCausingDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnGetPawnCausingDamage, &GetPawnCausingDamage_Parms, NULL );

	return GetPawnCausingDamage_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetUnshieldedDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          inputDamage                    ( CPF_Parm )

float ATrPawn::GetUnshieldedDamage ( float inputDamage )
{
	static UFunction* pFnGetUnshieldedDamage = NULL;

	if ( ! pFnGetUnshieldedDamage )
		pFnGetUnshieldedDamage = (UFunction*) UObject::GObjObjects()->Data[ 72319 ];

	ATrPawn_execGetUnshieldedDamage_Parms GetUnshieldedDamage_Parms;
	GetUnshieldedDamage_Parms.inputDamage = inputDamage;

	this->ProcessEvent ( pFnGetUnshieldedDamage, &GetUnshieldedDamage_Parms, NULL );

	return GetUnshieldedDamage_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ProcessKillAssists
// [0x00820002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )

void ATrPawn::ProcessKillAssists ( class AController* Killer )
{
	static UFunction* pFnProcessKillAssists = NULL;

	if ( ! pFnProcessKillAssists )
		pFnProcessKillAssists = (UFunction*) UObject::GObjObjects()->Data[ 72316 ];

	ATrPawn_execProcessKillAssists_Parms ProcessKillAssists_Parms;
	ProcessKillAssists_Parms.Killer = Killer;

	this->ProcessEvent ( pFnProcessKillAssists, &ProcessKillAssists_Parms, NULL );
};

// Function TribesGame.TrPawn.GetLastDamager
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrPlayerController* ATrPawn::GetLastDamager ( )
{
	static UFunction* pFnGetLastDamager = NULL;

	if ( ! pFnGetLastDamager )
		pFnGetLastDamager = (UFunction*) UObject::GObjObjects()->Data[ 72311 ];

	ATrPawn_execGetLastDamager_Parms GetLastDamager_Parms;

	this->ProcessEvent ( pFnGetLastDamager, &GetLastDamager_Parms, NULL );

	return GetLastDamager_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.CreateAssistRecord
// [0x00820002] 
// Parameters infos:
// struct FAssistInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Damager                        ( CPF_Parm )
// int                            DamageAmount                   ( CPF_Parm )

struct FAssistInfo ATrPawn::CreateAssistRecord ( class AController* Damager, int DamageAmount )
{
	static UFunction* pFnCreateAssistRecord = NULL;

	if ( ! pFnCreateAssistRecord )
		pFnCreateAssistRecord = (UFunction*) UObject::GObjObjects()->Data[ 72306 ];

	ATrPawn_execCreateAssistRecord_Parms CreateAssistRecord_Parms;
	CreateAssistRecord_Parms.Damager = Damager;
	CreateAssistRecord_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnCreateAssistRecord, &CreateAssistRecord_Parms, NULL );

	return CreateAssistRecord_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.RememberLastDamager
// [0x00020102] 
// Parameters infos:
// class AController*             Damager                        ( CPF_Parm )
// int                            DamageAmount                   ( CPF_Parm )
// class AActor*                  DamagingActor                  ( CPF_Parm )

void ATrPawn::RememberLastDamager ( class AController* Damager, int DamageAmount, class AActor* DamagingActor )
{
	static UFunction* pFnRememberLastDamager = NULL;

	if ( ! pFnRememberLastDamager )
		pFnRememberLastDamager = (UFunction*) UObject::GObjObjects()->Data[ 72293 ];

	ATrPawn_execRememberLastDamager_Parms RememberLastDamager_Parms;
	RememberLastDamager_Parms.Damager = Damager;
	RememberLastDamager_Parms.DamageAmount = DamageAmount;
	RememberLastDamager_Parms.DamagingActor = DamagingActor;

	this->ProcessEvent ( pFnRememberLastDamager, &RememberLastDamager_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJumpingSound
// [0x00020000] 
// Parameters infos:

void ATrPawn::PlayJumpingSound ( )
{
	static UFunction* pFnPlayJumpingSound = NULL;

	if ( ! pFnPlayJumpingSound )
		pFnPlayJumpingSound = (UFunction*) UObject::GObjObjects()->Data[ 72292 ];

	ATrPawn_execPlayJumpingSound_Parms PlayJumpingSound_Parms;

	this->ProcessEvent ( pFnPlayJumpingSound, &PlayJumpingSound_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayLandingSound
// [0x00020000] 
// Parameters infos:

void ATrPawn::PlayLandingSound ( )
{
	static UFunction* pFnPlayLandingSound = NULL;

	if ( ! pFnPlayLandingSound )
		pFnPlayLandingSound = (UFunction*) UObject::GObjObjects()->Data[ 72291 ];

	ATrPawn_execPlayLandingSound_Parms PlayLandingSound_Parms;

	this->ProcessEvent ( pFnPlayLandingSound, &PlayLandingSound_Parms, NULL );
};

// Function TribesGame.TrPawn.StopJetpackEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventStopJetpackEffects ( )
{
	static UFunction* pFnStopJetpackEffects = NULL;

	if ( ! pFnStopJetpackEffects )
		pFnStopJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 72290 ];

	ATrPawn_eventStopJetpackEffects_Parms StopJetpackEffects_Parms;

	this->ProcessEvent ( pFnStopJetpackEffects, &StopJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateJetpackEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventUpdateJetpackEffects ( )
{
	static UFunction* pFnUpdateJetpackEffects = NULL;

	if ( ! pFnUpdateJetpackEffects )
		pFnUpdateJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 72289 ];

	ATrPawn_eventUpdateJetpackEffects_Parms UpdateJetpackEffects_Parms;

	this->ProcessEvent ( pFnUpdateJetpackEffects, &UpdateJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.PlayJetpackEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventPlayJetpackEffects ( )
{
	static UFunction* pFnPlayJetpackEffects = NULL;

	if ( ! pFnPlayJetpackEffects )
		pFnPlayJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 72288 ];

	ATrPawn_eventPlayJetpackEffects_Parms PlayJetpackEffects_Parms;

	this->ProcessEvent ( pFnPlayJetpackEffects, &PlayJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.UpdateSkiEffects
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrPawn::eventUpdateSkiEffects ( )
{
	static UFunction* pFnUpdateSkiEffects = NULL;

	if ( ! pFnUpdateSkiEffects )
		pFnUpdateSkiEffects = (UFunction*) UObject::GObjObjects()->Data[ 72287 ];

	ATrPawn_eventUpdateSkiEffects_Parms UpdateSkiEffects_Parms;

	this->ProcessEvent ( pFnUpdateSkiEffects, &UpdateSkiEffects_Parms, NULL );
};

// Function TribesGame.TrPawn.GetJetpackAirControl
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 InAcceleration                 ( CPF_Const | CPF_Parm )
// struct FVector                 ZAxis                          ( CPF_Const | CPF_Parm )

struct FVector ATrPawn::GetJetpackAirControl ( struct FVector InAcceleration, struct FVector ZAxis )
{
	static UFunction* pFnGetJetpackAirControl = NULL;

	if ( ! pFnGetJetpackAirControl )
		pFnGetJetpackAirControl = (UFunction*) UObject::GObjObjects()->Data[ 72276 ];

	ATrPawn_execGetJetpackAirControl_Parms GetJetpackAirControl_Parms;
	memcpy ( &GetJetpackAirControl_Parms.InAcceleration, &InAcceleration, 0xC );
	memcpy ( &GetJetpackAirControl_Parms.ZAxis, &ZAxis, 0xC );

	this->ProcessEvent ( pFnGetJetpackAirControl, &GetJetpackAirControl_Parms, NULL );

	return GetJetpackAirControl_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.RechargeHealthPool
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrPawn::eventRechargeHealthPool ( float DeltaSeconds )
{
	static UFunction* pFnRechargeHealthPool = NULL;

	if ( ! pFnRechargeHealthPool )
		pFnRechargeHealthPool = (UFunction*) UObject::GObjObjects()->Data[ 72267 ];

	ATrPawn_eventRechargeHealthPool_Parms RechargeHealthPool_Parms;
	RechargeHealthPool_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnRechargeHealthPool, &RechargeHealthPool_Parms, NULL );
};

// Function TribesGame.TrPawn.ForceHealthRegen
// [0x00020002] 
// Parameters infos:

void ATrPawn::ForceHealthRegen ( )
{
	static UFunction* pFnForceHealthRegen = NULL;

	if ( ! pFnForceHealthRegen )
		pFnForceHealthRegen = (UFunction*) UObject::GObjObjects()->Data[ 72266 ];

	ATrPawn_execForceHealthRegen_Parms ForceHealthRegen_Parms;

	this->ProcessEvent ( pFnForceHealthRegen, &ForceHealthRegen_Parms, NULL );
};

// Function TribesGame.TrPawn.ShouldRechargePowerPool
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPawn::eventShouldRechargePowerPool ( )
{
	static UFunction* pFnShouldRechargePowerPool = NULL;

	if ( ! pFnShouldRechargePowerPool )
		pFnShouldRechargePowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72260 ];

	ATrPawn_eventShouldRechargePowerPool_Parms ShouldRechargePowerPool_Parms;

	this->ProcessEvent ( pFnShouldRechargePowerPool, &ShouldRechargePowerPool_Parms, NULL );

	return ShouldRechargePowerPool_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ClientUpdateHUDHealth
// [0x010201C2] 
// Parameters infos:
// int                            NewHealth                      ( CPF_Parm )
// int                            NewHealthMax                   ( CPF_Parm )

void ATrPawn::ClientUpdateHUDHealth ( int NewHealth, int NewHealthMax )
{
	static UFunction* pFnClientUpdateHUDHealth = NULL;

	if ( ! pFnClientUpdateHUDHealth )
		pFnClientUpdateHUDHealth = (UFunction*) UObject::GObjObjects()->Data[ 72256 ];

	ATrPawn_execClientUpdateHUDHealth_Parms ClientUpdateHUDHealth_Parms;
	ClientUpdateHUDHealth_Parms.NewHealth = NewHealth;
	ClientUpdateHUDHealth_Parms.NewHealthMax = NewHealthMax;

	this->ProcessEvent ( pFnClientUpdateHUDHealth, &ClientUpdateHUDHealth_Parms, NULL );
};

// Function TribesGame.TrPawn.SetMaxHealthPool
// [0x00020002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void ATrPawn::SetMaxHealthPool ( int Value )
{
	static UFunction* pFnSetMaxHealthPool = NULL;

	if ( ! pFnSetMaxHealthPool )
		pFnSetMaxHealthPool = (UFunction*) UObject::GObjObjects()->Data[ 72254 ];

	ATrPawn_execSetMaxHealthPool_Parms SetMaxHealthPool_Parms;
	SetMaxHealthPool_Parms.Value = Value;

	this->ProcessEvent ( pFnSetMaxHealthPool, &SetMaxHealthPool_Parms, NULL );
};

// Function TribesGame.TrPawn.SetMaxPowerPool
// [0x00020002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void ATrPawn::SetMaxPowerPool ( int Value )
{
	static UFunction* pFnSetMaxPowerPool = NULL;

	if ( ! pFnSetMaxPowerPool )
		pFnSetMaxPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72252 ];

	ATrPawn_execSetMaxPowerPool_Parms SetMaxPowerPool_Parms;
	SetMaxPowerPool_Parms.Value = Value;

	this->ProcessEvent ( pFnSetMaxPowerPool, &SetMaxPowerPool_Parms, NULL );
};

// Function TribesGame.TrPawn.AdjustMaxPowerPool
// [0x00020002] 
// Parameters infos:
// float                          Change                         ( CPF_Parm )

void ATrPawn::AdjustMaxPowerPool ( float Change )
{
	static UFunction* pFnAdjustMaxPowerPool = NULL;

	if ( ! pFnAdjustMaxPowerPool )
		pFnAdjustMaxPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72250 ];

	ATrPawn_execAdjustMaxPowerPool_Parms AdjustMaxPowerPool_Parms;
	AdjustMaxPowerPool_Parms.Change = Change;

	this->ProcessEvent ( pFnAdjustMaxPowerPool, &AdjustMaxPowerPool_Parms, NULL );
};

// Function TribesGame.TrPawn.AdjustAmmoPool
// [0x00020002] 
// Parameters infos:
// float                          Change                         ( CPF_Parm )

void ATrPawn::AdjustAmmoPool ( float Change )
{
	static UFunction* pFnAdjustAmmoPool = NULL;

	if ( ! pFnAdjustAmmoPool )
		pFnAdjustAmmoPool = (UFunction*) UObject::GObjObjects()->Data[ 72248 ];

	ATrPawn_execAdjustAmmoPool_Parms AdjustAmmoPool_Parms;
	AdjustAmmoPool_Parms.Change = Change;

	this->ProcessEvent ( pFnAdjustAmmoPool, &AdjustAmmoPool_Parms, NULL );
};

// Function TribesGame.TrPawn.GetShieldStrength
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPawn::GetShieldStrength ( )
{
	static UFunction* pFnGetShieldStrength = NULL;

	if ( ! pFnGetShieldStrength )
		pFnGetShieldStrength = (UFunction*) UObject::GObjObjects()->Data[ 72246 ];

	ATrPawn_execGetShieldStrength_Parms GetShieldStrength_Parms;

	this->ProcessEvent ( pFnGetShieldStrength, &GetShieldStrength_Parms, NULL );

	return GetShieldStrength_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ProcessEffectForm
// [0x00024102] 
// Parameters infos:
// class UClass*                  efClass                        ( CPF_Parm )
// unsigned long                  bRemove                        ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::ProcessEffectForm ( class UClass* efClass, unsigned long bRemove )
{
	static UFunction* pFnProcessEffectForm = NULL;

	if ( ! pFnProcessEffectForm )
		pFnProcessEffectForm = (UFunction*) UObject::GObjObjects()->Data[ 72231 ];

	ATrPawn_execProcessEffectForm_Parms ProcessEffectForm_Parms;
	ProcessEffectForm_Parms.efClass = efClass;
	ProcessEffectForm_Parms.bRemove = bRemove;

	this->ProcessEvent ( pFnProcessEffectForm, &ProcessEffectForm_Parms, NULL );
};

// Function TribesGame.TrPawn.RemoveEffectByClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  efClass                        ( CPF_Parm )

void ATrPawn::RemoveEffectByClass ( class UClass* efClass )
{
	static UFunction* pFnRemoveEffectByClass = NULL;

	if ( ! pFnRemoveEffectByClass )
		pFnRemoveEffectByClass = (UFunction*) UObject::GObjObjects()->Data[ 72228 ];

	ATrPawn_execRemoveEffectByClass_Parms RemoveEffectByClass_Parms;
	RemoveEffectByClass_Parms.efClass = efClass;

	this->ProcessEvent ( pFnRemoveEffectByClass, &RemoveEffectByClass_Parms, NULL );
};

// Function TribesGame.TrPawn.ActivateSelectedDeployable
// [0x00020102] 
// Parameters infos:

void ATrPawn::ActivateSelectedDeployable ( )
{
	static UFunction* pFnActivateSelectedDeployable = NULL;

	if ( ! pFnActivateSelectedDeployable )
		pFnActivateSelectedDeployable = (UFunction*) UObject::GObjObjects()->Data[ 72227 ];

	ATrPawn_execActivateSelectedDeployable_Parms ActivateSelectedDeployable_Parms;

	this->ProcessEvent ( pFnActivateSelectedDeployable, &ActivateSelectedDeployable_Parms, NULL );
};

// Function TribesGame.TrPawn.RefreshInventory
// [0x00024102] 
// Parameters infos:
// unsigned long                  bIsRespawn                     ( CPF_Parm )
// unsigned long                  bCallin                        ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::RefreshInventory ( unsigned long bIsRespawn, unsigned long bCallin )
{
	static UFunction* pFnRefreshInventory = NULL;

	if ( ! pFnRefreshInventory )
		pFnRefreshInventory = (UFunction*) UObject::GObjObjects()->Data[ 72192 ];

	ATrPawn_execRefreshInventory_Parms RefreshInventory_Parms;
	RefreshInventory_Parms.bIsRespawn = bIsRespawn;
	RefreshInventory_Parms.bCallin = bCallin;

	this->ProcessEvent ( pFnRefreshInventory, &RefreshInventory_Parms, NULL );
};

// Function TribesGame.TrPawn.SetValuesFromCurrentFamilyInfo
// [0x00020102] 
// Parameters infos:

void ATrPawn::SetValuesFromCurrentFamilyInfo ( )
{
	static UFunction* pFnSetValuesFromCurrentFamilyInfo = NULL;

	if ( ! pFnSetValuesFromCurrentFamilyInfo )
		pFnSetValuesFromCurrentFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 72143 ];

	ATrPawn_execSetValuesFromCurrentFamilyInfo_Parms SetValuesFromCurrentFamilyInfo_Parms;

	this->ProcessEvent ( pFnSetValuesFromCurrentFamilyInfo, &SetValuesFromCurrentFamilyInfo_Parms, NULL );
};

// Function TribesGame.TrPawn.RefreshInventoryTimer
// [0x00020102] 
// Parameters infos:

void ATrPawn::RefreshInventoryTimer ( )
{
	static UFunction* pFnRefreshInventoryTimer = NULL;

	if ( ! pFnRefreshInventoryTimer )
		pFnRefreshInventoryTimer = (UFunction*) UObject::GObjObjects()->Data[ 72142 ];

	ATrPawn_execRefreshInventoryTimer_Parms RefreshInventoryTimer_Parms;

	this->ProcessEvent ( pFnRefreshInventoryTimer, &RefreshInventoryTimer_Parms, NULL );
};

// Function TribesGame.TrPawn.ActivatePendingClass
// [0x00024102] 
// Parameters infos:
// unsigned long                  bIsRespawn                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCallin                        ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::ActivatePendingClass ( unsigned long bIsRespawn, unsigned long bCallin )
{
	static UFunction* pFnActivatePendingClass = NULL;

	if ( ! pFnActivatePendingClass )
		pFnActivatePendingClass = (UFunction*) UObject::GObjObjects()->Data[ 72136 ];

	ATrPawn_execActivatePendingClass_Parms ActivatePendingClass_Parms;
	ActivatePendingClass_Parms.bIsRespawn = bIsRespawn;
	ActivatePendingClass_Parms.bCallin = bCallin;

	this->ProcessEvent ( pFnActivatePendingClass, &ActivatePendingClass_Parms, NULL );
};

// Function TribesGame.TrPawn.SetCharacterClassFromInfo
// [0x00024102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ATrPawn::SetCharacterClassFromInfo ( class UClass* Info, unsigned long bForce )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 72107 ];

	ATrPawn_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;
	SetCharacterClassFromInfo_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function TribesGame.TrPawn.InitDefaultAnims
// [0x00020102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )

void ATrPawn::InitDefaultAnims ( class UClass* Info )
{
	static UFunction* pFnInitDefaultAnims = NULL;

	if ( ! pFnInitDefaultAnims )
		pFnInitDefaultAnims = (UFunction*) UObject::GObjObjects()->Data[ 72102 ];

	ATrPawn_execInitDefaultAnims_Parms InitDefaultAnims_Parms;
	InitDefaultAnims_Parms.Info = Info;

	this->ProcessEvent ( pFnInitDefaultAnims, &InitDefaultAnims_Parms, NULL );
};

// Function TribesGame.TrPawn.EquipBestPossibleDevice
// [0x00020002] 
// Parameters infos:
// unsigned char                  eqpPoint                       ( CPF_Parm )

void ATrPawn::EquipBestPossibleDevice ( unsigned char eqpPoint )
{
	static UFunction* pFnEquipBestPossibleDevice = NULL;

	if ( ! pFnEquipBestPossibleDevice )
		pFnEquipBestPossibleDevice = (UFunction*) UObject::GObjObjects()->Data[ 72090 ];

	ATrPawn_execEquipBestPossibleDevice_Parms EquipBestPossibleDevice_Parms;
	EquipBestPossibleDevice_Parms.eqpPoint = eqpPoint;

	this->ProcessEvent ( pFnEquipBestPossibleDevice, &EquipBestPossibleDevice_Parms, NULL );
};

// Function TribesGame.TrPawn.ReplicateMultiFlashLocation
// [0x00020002] 
// Parameters infos:
// int                            shotNumber                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrPawn::ReplicateMultiFlashLocation ( int shotNumber, struct FVector HitLocation )
{
	static UFunction* pFnReplicateMultiFlashLocation = NULL;

	if ( ! pFnReplicateMultiFlashLocation )
		pFnReplicateMultiFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 72087 ];

	ATrPawn_execReplicateMultiFlashLocation_Parms ReplicateMultiFlashLocation_Parms;
	ReplicateMultiFlashLocation_Parms.shotNumber = shotNumber;
	memcpy ( &ReplicateMultiFlashLocation_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnReplicateMultiFlashLocation, &ReplicateMultiFlashLocation_Parms, NULL );
};

// Function TribesGame.TrPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 72084 ];

	ATrPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrPawn.GetArmorType
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrPawn::eventGetArmorType ( )
{
	static UFunction* pFnGetArmorType = NULL;

	if ( ! pFnGetArmorType )
		pFnGetArmorType = (UFunction*) UObject::GObjObjects()->Data[ 72079 ];

	ATrPawn_eventGetArmorType_Parms GetArmorType_Parms;

	this->ProcessEvent ( pFnGetArmorType, &GetArmorType_Parms, NULL );

	return GetArmorType_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetTrHud
// [0x00020102] 
// Parameters infos:
// class ATrHUD*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrHUD* ATrPawn::GetTrHud ( )
{
	static UFunction* pFnGetTrHud = NULL;

	if ( ! pFnGetTrHud )
		pFnGetTrHud = (UFunction*) UObject::GObjObjects()->Data[ 67493 ];

	ATrPawn_execGetTrHud_Parms GetTrHud_Parms;

	this->ProcessEvent ( pFnGetTrHud, &GetTrHud_Parms, NULL );

	return GetTrHud_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetTribesReplicationInfo
// [0x00020102] 
// Parameters infos:
// class ATrPlayerReplicationInfo* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrPlayerReplicationInfo* ATrPawn::GetTribesReplicationInfo ( )
{
	static UFunction* pFnGetTribesReplicationInfo = NULL;

	if ( ! pFnGetTribesReplicationInfo )
		pFnGetTribesReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 67010 ];

	ATrPawn_execGetTribesReplicationInfo_Parms GetTribesReplicationInfo_Parms;

	this->ProcessEvent ( pFnGetTribesReplicationInfo, &GetTribesReplicationInfo_Parms, NULL );

	return GetTribesReplicationInfo_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetCurrCharClassInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrPawn::GetCurrCharClassInfo ( )
{
	static UFunction* pFnGetCurrCharClassInfo = NULL;

	if ( ! pFnGetCurrCharClassInfo )
		pFnGetCurrCharClassInfo = (UFunction*) UObject::GObjObjects()->Data[ 66976 ];

	ATrPawn_execGetCurrCharClassInfo_Parms GetCurrCharClassInfo_Parms;

	this->ProcessEvent ( pFnGetCurrCharClassInfo, &GetCurrCharClassInfo_Parms, NULL );

	return GetCurrCharClassInfo_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ExitDeployMode
// [0x00020102] 
// Parameters infos:

void ATrPawn::ExitDeployMode ( )
{
	static UFunction* pFnExitDeployMode = NULL;

	if ( ! pFnExitDeployMode )
		pFnExitDeployMode = (UFunction*) UObject::GObjObjects()->Data[ 72076 ];

	ATrPawn_execExitDeployMode_Parms ExitDeployMode_Parms;

	this->ProcessEvent ( pFnExitDeployMode, &ExitDeployMode_Parms, NULL );
};

// Function TribesGame.TrPawn.CurrentDeployedCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  DeviceClass                    ( CPF_Parm )

int ATrPawn::CurrentDeployedCount ( class UClass* DeviceClass )
{
	static UFunction* pFnCurrentDeployedCount = NULL;

	if ( ! pFnCurrentDeployedCount )
		pFnCurrentDeployedCount = (UFunction*) UObject::GObjObjects()->Data[ 72069 ];

	ATrPawn_execCurrentDeployedCount_Parms CurrentDeployedCount_Parms;
	CurrentDeployedCount_Parms.DeviceClass = DeviceClass;

	this->ProcessEvent ( pFnCurrentDeployedCount, &CurrentDeployedCount_Parms, NULL );

	return CurrentDeployedCount_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.ClientRestart
// [0x00020102] 
// Parameters infos:

void ATrPawn::ClientRestart ( )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 72068 ];

	ATrPawn_execClientRestart_Parms ClientRestart_Parms;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function TribesGame.TrPawn.GetCurrentCredits
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPawn::GetCurrentCredits ( )
{
	static UFunction* pFnGetCurrentCredits = NULL;

	if ( ! pFnGetCurrentCredits )
		pFnGetCurrentCredits = (UFunction*) UObject::GObjObjects()->Data[ 72066 ];

	ATrPawn_execGetCurrentCredits_Parms GetCurrentCredits_Parms;

	this->ProcessEvent ( pFnGetCurrentCredits, &GetCurrentCredits_Parms, NULL );

	return GetCurrentCredits_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetMaxPowerPool
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::GetMaxPowerPool ( )
{
	static UFunction* pFnGetMaxPowerPool = NULL;

	if ( ! pFnGetMaxPowerPool )
		pFnGetMaxPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 53428 ];

	ATrPawn_execGetMaxPowerPool_Parms GetMaxPowerPool_Parms;

	this->ProcessEvent ( pFnGetMaxPowerPool, &GetMaxPowerPool_Parms, NULL );

	return GetMaxPowerPool_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.GetCurrentPowerPool
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::GetCurrentPowerPool ( )
{
	static UFunction* pFnGetCurrentPowerPool = NULL;

	if ( ! pFnGetCurrentPowerPool )
		pFnGetCurrentPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 53426 ];

	ATrPawn_execGetCurrentPowerPool_Parms GetCurrentPowerPool_Parms;

	this->ProcessEvent ( pFnGetCurrentPowerPool, &GetCurrentPowerPool_Parms, NULL );

	return GetCurrentPowerPool_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPawn::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 72063 ];

	ATrPawn_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 72061 ];

	ATrPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 72060 ];

	ATrPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPawn.SetFlashNormal
// [0x00020102] 
// Parameters infos:
// struct FVector                 FlashNormal                    ( CPF_Parm )

void ATrPawn::SetFlashNormal ( struct FVector FlashNormal )
{
	static UFunction* pFnSetFlashNormal = NULL;

	if ( ! pFnSetFlashNormal )
		pFnSetFlashNormal = (UFunction*) UObject::GObjObjects()->Data[ 72058 ];

	ATrPawn_execSetFlashNormal_Parms SetFlashNormal_Parms;
	memcpy ( &SetFlashNormal_Parms.FlashNormal, &FlashNormal, 0xC );

	this->ProcessEvent ( pFnSetFlashNormal, &SetFlashNormal_Parms, NULL );
};

// Function TribesGame.TrPawn.GetTargetLocation
// [0x00024500] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  RequestedBy                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRequestAlternateLoc           ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrPawn::GetTargetLocation ( class AActor* RequestedBy, unsigned long bRequestAlternateLoc )
{
	static UFunction* pFnGetTargetLocation = NULL;

	if ( ! pFnGetTargetLocation )
		pFnGetTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 72054 ];

	ATrPawn_execGetTargetLocation_Parms GetTargetLocation_Parms;
	GetTargetLocation_Parms.RequestedBy = RequestedBy;
	GetTargetLocation_Parms.bRequestAlternateLoc = bRequestAlternateLoc;

	pFnGetTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetLocation, &GetTargetLocation_Parms, NULL );

	pFnGetTargetLocation->FunctionFlags |= 0x400;

	return GetTargetLocation_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.NativePostRenderFor
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrPawn::NativePostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnNativePostRenderFor = NULL;

	if ( ! pFnNativePostRenderFor )
		pFnNativePostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 72049 ];

	ATrPawn_execNativePostRenderFor_Parms NativePostRenderFor_Parms;
	NativePostRenderFor_Parms.PC = PC;
	NativePostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &NativePostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &NativePostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	pFnNativePostRenderFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNativePostRenderFor, &NativePostRenderFor_Parms, NULL );

	pFnNativePostRenderFor->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.ServerUpdateLockedTarget
// [0x002204C0] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Locked                         ( CPF_Parm )

bool ATrPawn::ServerUpdateLockedTarget ( class AActor* Locked )
{
	static UFunction* pFnServerUpdateLockedTarget = NULL;

	if ( ! pFnServerUpdateLockedTarget )
		pFnServerUpdateLockedTarget = (UFunction*) UObject::GObjObjects()->Data[ 72046 ];

	ATrPawn_execServerUpdateLockedTarget_Parms ServerUpdateLockedTarget_Parms;
	ServerUpdateLockedTarget_Parms.Locked = Locked;

	pFnServerUpdateLockedTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnServerUpdateLockedTarget, &ServerUpdateLockedTarget_Parms, NULL );

	pFnServerUpdateLockedTarget->FunctionFlags |= 0x400;

	return ServerUpdateLockedTarget_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.SetOverlayMaterial
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class UMaterialInterface*      NewOverlay                     ( CPF_Parm )

void ATrPawn::SetOverlayMaterial ( class UMaterialInterface* NewOverlay )
{
	static UFunction* pFnSetOverlayMaterial = NULL;

	if ( ! pFnSetOverlayMaterial )
		pFnSetOverlayMaterial = (UFunction*) UObject::GObjObjects()->Data[ 72044 ];

	ATrPawn_execSetOverlayMaterial_Parms SetOverlayMaterial_Parms;
	SetOverlayMaterial_Parms.NewOverlay = NewOverlay;

	pFnSetOverlayMaterial->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetOverlayMaterial, &SetOverlayMaterial_Parms, NULL );

	pFnSetOverlayMaterial->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.GetCurrentDeviceAccuracyInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          fAccuracy                      ( CPF_Parm | CPF_OutParm )
// float                          fAmountCurrentlyOffOfTargetAccuray ( CPF_Parm | CPF_OutParm )

void ATrPawn::GetCurrentDeviceAccuracyInfo ( float* fAccuracy, float* fAmountCurrentlyOffOfTargetAccuray )
{
	static UFunction* pFnGetCurrentDeviceAccuracyInfo = NULL;

	if ( ! pFnGetCurrentDeviceAccuracyInfo )
		pFnGetCurrentDeviceAccuracyInfo = (UFunction*) UObject::GObjObjects()->Data[ 72041 ];

	ATrPawn_execGetCurrentDeviceAccuracyInfo_Parms GetCurrentDeviceAccuracyInfo_Parms;

	pFnGetCurrentDeviceAccuracyInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentDeviceAccuracyInfo, &GetCurrentDeviceAccuracyInfo_Parms, NULL );

	pFnGetCurrentDeviceAccuracyInfo->FunctionFlags |= 0x400;

	if ( fAccuracy )
		*fAccuracy = GetCurrentDeviceAccuracyInfo_Parms.fAccuracy;

	if ( fAmountCurrentlyOffOfTargetAccuray )
		*fAmountCurrentlyOffOfTargetAccuray = GetCurrentDeviceAccuracyInfo_Parms.fAmountCurrentlyOffOfTargetAccuray;
};

// Function TribesGame.TrPawn.GetPowerPoolPercent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::GetPowerPoolPercent ( )
{
	static UFunction* pFnGetPowerPoolPercent = NULL;

	if ( ! pFnGetPowerPoolPercent )
		pFnGetPowerPoolPercent = (UFunction*) UObject::GObjObjects()->Data[ 72039 ];

	ATrPawn_execGetPowerPoolPercent_Parms GetPowerPoolPercent_Parms;

	pFnGetPowerPoolPercent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerPoolPercent, &GetPowerPoolPercent_Parms, NULL );

	pFnGetPowerPoolPercent->FunctionFlags |= 0x400;

	return GetPowerPoolPercent_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.RegainPowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ATrPawn::RegainPowerPool ( float fDeltaTime )
{
	static UFunction* pFnRegainPowerPool = NULL;

	if ( ! pFnRegainPowerPool )
		pFnRegainPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72037 ];

	ATrPawn_execRegainPowerPool_Parms RegainPowerPool_Parms;
	RegainPowerPool_Parms.fDeltaTime = fDeltaTime;

	pFnRegainPowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegainPowerPool, &RegainPowerPool_Parms, NULL );

	pFnRegainPowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.ConsumePowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fAmount                        ( CPF_Parm )

void ATrPawn::ConsumePowerPool ( float fAmount )
{
	static UFunction* pFnConsumePowerPool = NULL;

	if ( ! pFnConsumePowerPool )
		pFnConsumePowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72035 ];

	ATrPawn_execConsumePowerPool_Parms ConsumePowerPool_Parms;
	ConsumePowerPool_Parms.fAmount = fAmount;

	pFnConsumePowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConsumePowerPool, &ConsumePowerPool_Parms, NULL );

	pFnConsumePowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.SyncClientCurrentPowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPawn::SyncClientCurrentPowerPool ( )
{
	static UFunction* pFnSyncClientCurrentPowerPool = NULL;

	if ( ! pFnSyncClientCurrentPowerPool )
		pFnSyncClientCurrentPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 72034 ];

	ATrPawn_execSyncClientCurrentPowerPool_Parms SyncClientCurrentPowerPool_Parms;

	pFnSyncClientCurrentPowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSyncClientCurrentPowerPool, &SyncClientCurrentPowerPool_Parms, NULL );

	pFnSyncClientCurrentPowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPawn.NativeGetCollisionRadius
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::NativeGetCollisionRadius ( )
{
	static UFunction* pFnNativeGetCollisionRadius = NULL;

	if ( ! pFnNativeGetCollisionRadius )
		pFnNativeGetCollisionRadius = (UFunction*) UObject::GObjObjects()->Data[ 72032 ];

	ATrPawn_execNativeGetCollisionRadius_Parms NativeGetCollisionRadius_Parms;

	pFnNativeGetCollisionRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNativeGetCollisionRadius, &NativeGetCollisionRadius_Parms, NULL );

	pFnNativeGetCollisionRadius->FunctionFlags |= 0x400;

	return NativeGetCollisionRadius_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.NativeGetCollisionHeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPawn::NativeGetCollisionHeight ( )
{
	static UFunction* pFnNativeGetCollisionHeight = NULL;

	if ( ! pFnNativeGetCollisionHeight )
		pFnNativeGetCollisionHeight = (UFunction*) UObject::GObjObjects()->Data[ 72030 ];

	ATrPawn_execNativeGetCollisionHeight_Parms NativeGetCollisionHeight_Parms;

	pFnNativeGetCollisionHeight->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNativeGetCollisionHeight, &NativeGetCollisionHeight_Parms, NULL );

	pFnNativeGetCollisionHeight->FunctionFlags |= 0x400;

	return NativeGetCollisionHeight_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.CalculatePawnSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPawn::CalculatePawnSpeed ( )
{
	static UFunction* pFnCalculatePawnSpeed = NULL;

	if ( ! pFnCalculatePawnSpeed )
		pFnCalculatePawnSpeed = (UFunction*) UObject::GObjObjects()->Data[ 53454 ];

	ATrPawn_execCalculatePawnSpeed_Parms CalculatePawnSpeed_Parms;

	pFnCalculatePawnSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculatePawnSpeed, &CalculatePawnSpeed_Parms, NULL );

	pFnCalculatePawnSpeed->FunctionFlags |= 0x400;

	return CalculatePawnSpeed_Parms.ReturnValue;
};

// Function TribesGame.TrPawn.CheckGrabSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPawn::CheckGrabSpeed ( )
{
	static UFunction* pFnCheckGrabSpeed = NULL;

	if ( ! pFnCheckGrabSpeed )
		pFnCheckGrabSpeed = (UFunction*) UObject::GObjObjects()->Data[ 72029 ];

	ATrPawn_execCheckGrabSpeed_Parms CheckGrabSpeed_Parms;

	pFnCheckGrabSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckGrabSpeed, &CheckGrabSpeed_Parms, NULL );

	pFnCheckGrabSpeed->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.DamageConvert
// [0x00020002] 
// Parameters infos:
// struct FString                 Area                           ( CPF_Parm | CPF_NeedCtorLink )

void UAlienFXManager::DamageConvert ( struct FString Area )
{
	static UFunction* pFnDamageConvert = NULL;

	if ( ! pFnDamageConvert )
		pFnDamageConvert = (UFunction*) UObject::GObjObjects()->Data[ 50729 ];

	UAlienFXManager_execDamageConvert_Parms DamageConvert_Parms;
	memcpy ( &DamageConvert_Parms.Area, &Area, 0xC );

	this->ProcessEvent ( pFnDamageConvert, &DamageConvert_Parms, NULL );
};

// Function TribesGame.AlienFXManager.Overlay
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )

void UAlienFXManager::Overlay ( unsigned char Type )
{
	static UFunction* pFnOverlay = NULL;

	if ( ! pFnOverlay )
		pFnOverlay = (UFunction*) UObject::GObjObjects()->Data[ 50727 ];

	UAlienFXManager_execOverlay_Parms Overlay_Parms;
	Overlay_Parms.Type = Type;

	pFnOverlay->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOverlay, &Overlay_Parms, NULL );

	pFnOverlay->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Tick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UAlienFXManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 50725 ];

	UAlienFXManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	pFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );

	pFnTick->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.SetHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Health                         ( CPF_Parm )

void UAlienFXManager::SetHealth ( int Health )
{
	static UFunction* pFnSetHealth = NULL;

	if ( ! pFnSetHealth )
		pFnSetHealth = (UFunction*) UObject::GObjObjects()->Data[ 50723 ];

	UAlienFXManager_execSetHealth_Parms SetHealth_Parms;
	SetHealth_Parms.Health = Health;

	pFnSetHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHealth, &SetHealth_Parms, NULL );

	pFnSetHealth->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.SetTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            TeamNum                        ( CPF_Parm )

void UAlienFXManager::SetTeam ( int TeamNum )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 50721 ];

	UAlienFXManager_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.TeamNum = TeamNum;

	pFnSetTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );

	pFnSetTeam->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Damage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  Area                           ( CPF_Parm )

void UAlienFXManager::Damage ( unsigned char Area )
{
	static UFunction* pFnDamage = NULL;

	if ( ! pFnDamage )
		pFnDamage = (UFunction*) UObject::GObjObjects()->Data[ 50719 ];

	UAlienFXManager_execDamage_Parms Damage_Parms;
	Damage_Parms.Area = Area;

	pFnDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDamage, &Damage_Parms, NULL );

	pFnDamage->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.menu
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bOpen                          ( CPF_Parm )

void UAlienFXManager::menu ( unsigned long bOpen )
{
	static UFunction* pFnmenu = NULL;

	if ( ! pFnmenu )
		pFnmenu = (UFunction*) UObject::GObjObjects()->Data[ 50717 ];

	UAlienFXManager_execmenu_Parms menu_Parms;
	menu_Parms.bOpen = bOpen;

	pFnmenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnmenu, &menu_Parms, NULL );

	pFnmenu->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.CheckHealth
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAlienFXManager::CheckHealth ( )
{
	static UFunction* pFnCheckHealth = NULL;

	if ( ! pFnCheckHealth )
		pFnCheckHealth = (UFunction*) UObject::GObjObjects()->Data[ 50716 ];

	UAlienFXManager_execCheckHealth_Parms CheckHealth_Parms;

	pFnCheckHealth->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckHealth, &CheckHealth_Parms, NULL );

	pFnCheckHealth->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.SwapWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAlienFXManager::SwapWeapon ( )
{
	static UFunction* pFnSwapWeapon = NULL;

	if ( ! pFnSwapWeapon )
		pFnSwapWeapon = (UFunction*) UObject::GObjObjects()->Data[ 50715 ];

	UAlienFXManager_execSwapWeapon_Parms SwapWeapon_Parms;

	pFnSwapWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapWeapon, &SwapWeapon_Parms, NULL );

	pFnSwapWeapon->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Objective
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAlienFXManager::Objective ( )
{
	static UFunction* pFnObjective = NULL;

	if ( ! pFnObjective )
		pFnObjective = (UFunction*) UObject::GObjObjects()->Data[ 50714 ];

	UAlienFXManager_execObjective_Parms Objective_Parms;

	pFnObjective->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnObjective, &Objective_Parms, NULL );

	pFnObjective->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Queued
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAlienFXManager::Queued ( )
{
	static UFunction* pFnQueued = NULL;

	if ( ! pFnQueued )
		pFnQueued = (UFunction*) UObject::GObjObjects()->Data[ 50713 ];

	UAlienFXManager_execQueued_Parms Queued_Parms;

	pFnQueued->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnQueued, &Queued_Parms, NULL );

	pFnQueued->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Close
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAlienFXManager::Close ( )
{
	static UFunction* pFnClose = NULL;

	if ( ! pFnClose )
		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 50712 ];

	UAlienFXManager_execClose_Parms Close_Parms;

	pFnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );

	pFnClose->FunctionFlags |= 0x400;
};

// Function TribesGame.AlienFXManager.Init
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UAlienFXManager::Init ( unsigned long bEnable )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50710 ];

	UAlienFXManager_execInit_Parms Init_Parms;
	Init_Parms.bEnable = bEnable;

	pFnInit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	pFnInit->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetAlertDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetAlertDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetAlertDelegate = NULL;

	if ( ! pFnSetAlertDelegate )
		pFnSetAlertDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54177 ];

	UGFxTrMenuMoviePlayer_execSetAlertDelegate_Parms SetAlertDelegate_Parms;
	memcpy ( &SetAlertDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetAlertDelegate, &SetAlertDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserClassVideoDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserClassVideoDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserClassVideoDelegate = NULL;

	if ( ! pFnSetBrowserClassVideoDelegate )
		pFnSetBrowserClassVideoDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54183 ];

	UGFxTrMenuMoviePlayer_execSetBrowserClassVideoDelegate_Parms SetBrowserClassVideoDelegate_Parms;
	memcpy ( &SetBrowserClassVideoDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserClassVideoDelegate, &SetBrowserClassVideoDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetGetViewModeDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetGetViewModeDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetGetViewModeDelegate = NULL;

	if ( ! pFnSetGetViewModeDelegate )
		pFnSetGetViewModeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54175 ];

	UGFxTrMenuMoviePlayer_execSetGetViewModeDelegate_Parms SetGetViewModeDelegate_Parms;
	memcpy ( &SetGetViewModeDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetGetViewModeDelegate, &SetGetViewModeDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserStoreDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserStoreDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserStoreDelegate = NULL;

	if ( ! pFnSetBrowserStoreDelegate )
		pFnSetBrowserStoreDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54179 ];

	UGFxTrMenuMoviePlayer_execSetBrowserStoreDelegate_Parms SetBrowserStoreDelegate_Parms;
	memcpy ( &SetBrowserStoreDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserStoreDelegate, &SetBrowserStoreDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserGoldDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserGoldDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserGoldDelegate = NULL;

	if ( ! pFnSetBrowserGoldDelegate )
		pFnSetBrowserGoldDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54178 ];

	UGFxTrMenuMoviePlayer_execSetBrowserGoldDelegate_Parms SetBrowserGoldDelegate_Parms;
	memcpy ( &SetBrowserGoldDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserGoldDelegate, &SetBrowserGoldDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetGetPlatformDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetGetPlatformDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetGetPlatformDelegate = NULL;

	if ( ! pFnSetGetPlatformDelegate )
		pFnSetGetPlatformDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54174 ];

	UGFxTrMenuMoviePlayer_execSetGetPlatformDelegate_Parms SetGetPlatformDelegate_Parms;
	memcpy ( &SetGetPlatformDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetGetPlatformDelegate, &SetGetPlatformDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetShowingPopupDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetShowingPopupDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetShowingPopupDelegate = NULL;

	if ( ! pFnSetShowingPopupDelegate )
		pFnSetShowingPopupDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54864 ];

	UGFxTrMenuMoviePlayer_execSetShowingPopupDelegate_Parms SetShowingPopupDelegate_Parms;
	memcpy ( &SetShowingPopupDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetShowingPopupDelegate, &SetShowingPopupDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetExitQueueDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetExitQueueDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetExitQueueDelegate = NULL;

	if ( ! pFnSetExitQueueDelegate )
		pFnSetExitQueueDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54188 ];

	UGFxTrMenuMoviePlayer_execSetExitQueueDelegate_Parms SetExitQueueDelegate_Parms;
	memcpy ( &SetExitQueueDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetExitQueueDelegate, &SetExitQueueDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetExitGameDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetExitGameDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetExitGameDelegate = NULL;

	if ( ! pFnSetExitGameDelegate )
		pFnSetExitGameDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54173 ];

	UGFxTrMenuMoviePlayer_execSetExitGameDelegate_Parms SetExitGameDelegate_Parms;
	memcpy ( &SetExitGameDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetExitGameDelegate, &SetExitGameDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetAcceptEULADelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetAcceptEULADelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetAcceptEULADelegate = NULL;

	if ( ! pFnSetAcceptEULADelegate )
		pFnSetAcceptEULADelegate = (UFunction*) UObject::GObjObjects()->Data[ 54167 ];

	UGFxTrMenuMoviePlayer_execSetAcceptEULADelegate_Parms SetAcceptEULADelegate_Parms;
	memcpy ( &SetAcceptEULADelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetAcceptEULADelegate, &SetAcceptEULADelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserRecoverUsernameDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserRecoverUsernameDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserRecoverUsernameDelegate = NULL;

	if ( ! pFnSetBrowserRecoverUsernameDelegate )
		pFnSetBrowserRecoverUsernameDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54187 ];

	UGFxTrMenuMoviePlayer_execSetBrowserRecoverUsernameDelegate_Parms SetBrowserRecoverUsernameDelegate_Parms;
	memcpy ( &SetBrowserRecoverUsernameDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserRecoverUsernameDelegate, &SetBrowserRecoverUsernameDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserRecoverPasswordDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserRecoverPasswordDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserRecoverPasswordDelegate = NULL;

	if ( ! pFnSetBrowserRecoverPasswordDelegate )
		pFnSetBrowserRecoverPasswordDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54186 ];

	UGFxTrMenuMoviePlayer_execSetBrowserRecoverPasswordDelegate_Parms SetBrowserRecoverPasswordDelegate_Parms;
	memcpy ( &SetBrowserRecoverPasswordDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserRecoverPasswordDelegate, &SetBrowserRecoverPasswordDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadTeamScoreboardDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadTeamScoreboardDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadTeamScoreboardDataDelegate = NULL;

	if ( ! pFnSetLoadTeamScoreboardDataDelegate )
		pFnSetLoadTeamScoreboardDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54161 ];

	UGFxTrMenuMoviePlayer_execSetLoadTeamScoreboardDataDelegate_Parms SetLoadTeamScoreboardDataDelegate_Parms;
	memcpy ( &SetLoadTeamScoreboardDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadTeamScoreboardDataDelegate, &SetLoadTeamScoreboardDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadTeamStatsDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadTeamStatsDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadTeamStatsDataDelegate = NULL;

	if ( ! pFnSetLoadTeamStatsDataDelegate )
		pFnSetLoadTeamStatsDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54162 ];

	UGFxTrMenuMoviePlayer_execSetLoadTeamStatsDataDelegate_Parms SetLoadTeamStatsDataDelegate_Parms;
	memcpy ( &SetLoadTeamStatsDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadTeamStatsDataDelegate, &SetLoadTeamStatsDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadTeamMiscDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadTeamMiscDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadTeamMiscDataDelegate = NULL;

	if ( ! pFnSetLoadTeamMiscDataDelegate )
		pFnSetLoadTeamMiscDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54160 ];

	UGFxTrMenuMoviePlayer_execSetLoadTeamMiscDataDelegate_Parms SetLoadTeamMiscDataDelegate_Parms;
	memcpy ( &SetLoadTeamMiscDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadTeamMiscDataDelegate, &SetLoadTeamMiscDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadPlayerAccoladeDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadPlayerAccoladeDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadPlayerAccoladeDataDelegate = NULL;

	if ( ! pFnSetLoadPlayerAccoladeDataDelegate )
		pFnSetLoadPlayerAccoladeDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54166 ];

	UGFxTrMenuMoviePlayer_execSetLoadPlayerAccoladeDataDelegate_Parms SetLoadPlayerAccoladeDataDelegate_Parms;
	memcpy ( &SetLoadPlayerAccoladeDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadPlayerAccoladeDataDelegate, &SetLoadPlayerAccoladeDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadTeamAccoladeDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadTeamAccoladeDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadTeamAccoladeDataDelegate = NULL;

	if ( ! pFnSetLoadTeamAccoladeDataDelegate )
		pFnSetLoadTeamAccoladeDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54163 ];

	UGFxTrMenuMoviePlayer_execSetLoadTeamAccoladeDataDelegate_Parms SetLoadTeamAccoladeDataDelegate_Parms;
	memcpy ( &SetLoadTeamAccoladeDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadTeamAccoladeDataDelegate, &SetLoadTeamAccoladeDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserCreateAccountDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserCreateAccountDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserCreateAccountDelegate = NULL;

	if ( ! pFnSetBrowserCreateAccountDelegate )
		pFnSetBrowserCreateAccountDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54185 ];

	UGFxTrMenuMoviePlayer_execSetBrowserCreateAccountDelegate_Parms SetBrowserCreateAccountDelegate_Parms;
	memcpy ( &SetBrowserCreateAccountDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserCreateAccountDelegate, &SetBrowserCreateAccountDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadPlayerStatsDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadPlayerStatsDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadPlayerStatsDataDelegate = NULL;

	if ( ! pFnSetLoadPlayerStatsDataDelegate )
		pFnSetLoadPlayerStatsDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54165 ];

	UGFxTrMenuMoviePlayer_execSetLoadPlayerStatsDataDelegate_Parms SetLoadPlayerStatsDataDelegate_Parms;
	memcpy ( &SetLoadPlayerStatsDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadPlayerStatsDataDelegate, &SetLoadPlayerStatsDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadPlayerMiscDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadPlayerMiscDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadPlayerMiscDataDelegate = NULL;

	if ( ! pFnSetLoadPlayerMiscDataDelegate )
		pFnSetLoadPlayerMiscDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54164 ];

	UGFxTrMenuMoviePlayer_execSetLoadPlayerMiscDataDelegate_Parms SetLoadPlayerMiscDataDelegate_Parms;
	memcpy ( &SetLoadPlayerMiscDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadPlayerMiscDataDelegate, &SetLoadPlayerMiscDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserActivateKeyDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserActivateKeyDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserActivateKeyDelegate = NULL;

	if ( ! pFnSetBrowserActivateKeyDelegate )
		pFnSetBrowserActivateKeyDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54184 ];

	UGFxTrMenuMoviePlayer_execSetBrowserActivateKeyDelegate_Parms SetBrowserActivateKeyDelegate_Parms;
	memcpy ( &SetBrowserActivateKeyDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserActivateKeyDelegate, &SetBrowserActivateKeyDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSubmitPlayerNameDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSubmitPlayerNameDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSubmitPlayerNameDelegate = NULL;

	if ( ! pFnSetSubmitPlayerNameDelegate )
		pFnSetSubmitPlayerNameDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54159 ];

	UGFxTrMenuMoviePlayer_execSetSubmitPlayerNameDelegate_Parms SetSubmitPlayerNameDelegate_Parms;
	memcpy ( &SetSubmitPlayerNameDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSubmitPlayerNameDelegate, &SetSubmitPlayerNameDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserProfileDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserProfileDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserProfileDelegate = NULL;

	if ( ! pFnSetBrowserProfileDelegate )
		pFnSetBrowserProfileDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54181 ];

	UGFxTrMenuMoviePlayer_execSetBrowserProfileDelegate_Parms SetBrowserProfileDelegate_Parms;
	memcpy ( &SetBrowserProfileDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserProfileDelegate, &SetBrowserProfileDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserSupportDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserSupportDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserSupportDelegate = NULL;

	if ( ! pFnSetBrowserSupportDelegate )
		pFnSetBrowserSupportDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54180 ];

	UGFxTrMenuMoviePlayer_execSetBrowserSupportDelegate_Parms SetBrowserSupportDelegate_Parms;
	memcpy ( &SetBrowserSupportDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserSupportDelegate, &SetBrowserSupportDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetBrowserBoosterDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetBrowserBoosterDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetBrowserBoosterDelegate = NULL;

	if ( ! pFnSetBrowserBoosterDelegate )
		pFnSetBrowserBoosterDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54182 ];

	UGFxTrMenuMoviePlayer_execSetBrowserBoosterDelegate_Parms SetBrowserBoosterDelegate_Parms;
	memcpy ( &SetBrowserBoosterDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetBrowserBoosterDelegate, &SetBrowserBoosterDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoginDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoginDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoginDelegate = NULL;

	if ( ! pFnSetLoginDelegate )
		pFnSetLoginDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54158 ];

	UGFxTrMenuMoviePlayer_execSetLoginDelegate_Parms SetLoginDelegate_Parms;
	memcpy ( &SetLoginDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoginDelegate, &SetLoginDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetEscapeClass
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetEscapeClass ( struct FScriptDelegate In )
{
	static UFunction* pFnSetEscapeClass = NULL;

	if ( ! pFnSetEscapeClass )
		pFnSetEscapeClass = (UFunction*) UObject::GObjObjects()->Data[ 54172 ];

	UGFxTrMenuMoviePlayer_execSetEscapeClass_Parms SetEscapeClass_Parms;
	memcpy ( &SetEscapeClass_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetEscapeClass, &SetEscapeClass_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSoundClassType
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSoundClassType ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSoundClassType = NULL;

	if ( ! pFnSetSoundClassType )
		pFnSetSoundClassType = (UFunction*) UObject::GObjObjects()->Data[ 54169 ];

	UGFxTrMenuMoviePlayer_execSetSoundClassType_Parms SetSoundClassType_Parms;
	memcpy ( &SetSoundClassType_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSoundClassType, &SetSoundClassType_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSoundSkillType
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSoundSkillType ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSoundSkillType = NULL;

	if ( ! pFnSetSoundSkillType )
		pFnSetSoundSkillType = (UFunction*) UObject::GObjObjects()->Data[ 54170 ];

	UGFxTrMenuMoviePlayer_execSetSoundSkillType_Parms SetSoundSkillType_Parms;
	memcpy ( &SetSoundSkillType_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSoundSkillType, &SetSoundSkillType_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSoundPerkType
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSoundPerkType ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSoundPerkType = NULL;

	if ( ! pFnSetSoundPerkType )
		pFnSetSoundPerkType = (UFunction*) UObject::GObjObjects()->Data[ 54840 ];

	UGFxTrMenuMoviePlayer_execSetSoundPerkType_Parms SetSoundPerkType_Parms;
	memcpy ( &SetSoundPerkType_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSoundPerkType, &SetSoundPerkType_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSoundXPGain
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSoundXPGain ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSoundXPGain = NULL;

	if ( ! pFnSetSoundXPGain )
		pFnSetSoundXPGain = (UFunction*) UObject::GObjObjects()->Data[ 54168 ];

	UGFxTrMenuMoviePlayer_execSetSoundXPGain_Parms SetSoundXPGain_Parms;
	memcpy ( &SetSoundXPGain_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSoundXPGain, &SetSoundXPGain_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSoundSkillBar
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSoundSkillBar ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSoundSkillBar = NULL;

	if ( ! pFnSetSoundSkillBar )
		pFnSetSoundSkillBar = (UFunction*) UObject::GObjObjects()->Data[ 54837 ];

	UGFxTrMenuMoviePlayer_execSetSoundSkillBar_Parms SetSoundSkillBar_Parms;
	memcpy ( &SetSoundSkillBar_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSoundSkillBar, &SetSoundSkillBar_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetShowSummaryDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetShowSummaryDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetShowSummaryDelegate = NULL;

	if ( ! pFnSetShowSummaryDelegate )
		pFnSetShowSummaryDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54176 ];

	UGFxTrMenuMoviePlayer_execSetShowSummaryDelegate_Parms SetShowSummaryDelegate_Parms;
	memcpy ( &SetShowSummaryDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetShowSummaryDelegate, &SetShowSummaryDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSmoothAnimDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSmoothAnimDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSmoothAnimDelegate = NULL;

	if ( ! pFnSetSmoothAnimDelegate )
		pFnSetSmoothAnimDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54198 ];

	UGFxTrMenuMoviePlayer_execSetSmoothAnimDelegate_Parms SetSmoothAnimDelegate_Parms;
	memcpy ( &SetSmoothAnimDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSmoothAnimDelegate, &SetSmoothAnimDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetStartLoginDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetStartLoginDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetStartLoginDelegate = NULL;

	if ( ! pFnSetStartLoginDelegate )
		pFnSetStartLoginDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54197 ];

	UGFxTrMenuMoviePlayer_execSetStartLoginDelegate_Parms SetStartLoginDelegate_Parms;
	memcpy ( &SetStartLoginDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetStartLoginDelegate, &SetStartLoginDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetRequestNewsDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetRequestNewsDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetRequestNewsDelegate = NULL;

	if ( ! pFnSetRequestNewsDelegate )
		pFnSetRequestNewsDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54196 ];

	UGFxTrMenuMoviePlayer_execSetRequestNewsDelegate_Parms SetRequestNewsDelegate_Parms;
	memcpy ( &SetRequestNewsDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetRequestNewsDelegate, &SetRequestNewsDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSaveReticuleDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSaveReticuleDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSaveReticuleDelegate = NULL;

	if ( ! pFnSetSaveReticuleDelegate )
		pFnSetSaveReticuleDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54195 ];

	UGFxTrMenuMoviePlayer_execSetSaveReticuleDelegate_Parms SetSaveReticuleDelegate_Parms;
	memcpy ( &SetSaveReticuleDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSaveReticuleDelegate, &SetSaveReticuleDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetReticuleActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetReticuleActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetReticuleActionDelegate = NULL;

	if ( ! pFnSetReticuleActionDelegate )
		pFnSetReticuleActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54194 ];

	UGFxTrMenuMoviePlayer_execSetReticuleActionDelegate_Parms SetReticuleActionDelegate_Parms;
	memcpy ( &SetReticuleActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetReticuleActionDelegate, &SetReticuleActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetServerSortDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetServerSortDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetServerSortDelegate = NULL;

	if ( ! pFnSetServerSortDelegate )
		pFnSetServerSortDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54193 ];

	UGFxTrMenuMoviePlayer_execSetServerSortDelegate_Parms SetServerSortDelegate_Parms;
	memcpy ( &SetServerSortDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetServerSortDelegate, &SetServerSortDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetServerPageDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetServerPageDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetServerPageDelegate = NULL;

	if ( ! pFnSetServerPageDelegate )
		pFnSetServerPageDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54192 ];

	UGFxTrMenuMoviePlayer_execSetServerPageDelegate_Parms SetServerPageDelegate_Parms;
	memcpy ( &SetServerPageDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetServerPageDelegate, &SetServerPageDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPasswordServerDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetPasswordServerDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetPasswordServerDelegate = NULL;

	if ( ! pFnSetPasswordServerDelegate )
		pFnSetPasswordServerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54191 ];

	UGFxTrMenuMoviePlayer_execSetPasswordServerDelegate_Parms SetPasswordServerDelegate_Parms;
	memcpy ( &SetPasswordServerDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetPasswordServerDelegate, &SetPasswordServerDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetFavoriteServerDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetFavoriteServerDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetFavoriteServerDelegate = NULL;

	if ( ! pFnSetFavoriteServerDelegate )
		pFnSetFavoriteServerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54190 ];

	UGFxTrMenuMoviePlayer_execSetFavoriteServerDelegate_Parms SetFavoriteServerDelegate_Parms;
	memcpy ( &SetFavoriteServerDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetFavoriteServerDelegate, &SetFavoriteServerDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetJoinCustomServerDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetJoinCustomServerDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetJoinCustomServerDelegate = NULL;

	if ( ! pFnSetJoinCustomServerDelegate )
		pFnSetJoinCustomServerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54189 ];

	UGFxTrMenuMoviePlayer_execSetJoinCustomServerDelegate_Parms SetJoinCustomServerDelegate_Parms;
	memcpy ( &SetJoinCustomServerDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetJoinCustomServerDelegate, &SetJoinCustomServerDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSelectedFeatureDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSelectedFeatureDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSelectedFeatureDelegate = NULL;

	if ( ! pFnSetSelectedFeatureDelegate )
		pFnSetSelectedFeatureDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54218 ];

	UGFxTrMenuMoviePlayer_execSetSelectedFeatureDelegate_Parms SetSelectedFeatureDelegate_Parms;
	memcpy ( &SetSelectedFeatureDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSelectedFeatureDelegate, &SetSelectedFeatureDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPromoActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetPromoActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetPromoActionDelegate = NULL;

	if ( ! pFnSetPromoActionDelegate )
		pFnSetPromoActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54217 ];

	UGFxTrMenuMoviePlayer_execSetPromoActionDelegate_Parms SetPromoActionDelegate_Parms;
	memcpy ( &SetPromoActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetPromoActionDelegate, &SetPromoActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetProfilePageDownDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetProfilePageDownDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetProfilePageDownDelegate = NULL;

	if ( ! pFnSetProfilePageDownDelegate )
		pFnSetProfilePageDownDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54212 ];

	UGFxTrMenuMoviePlayer_execSetProfilePageDownDelegate_Parms SetProfilePageDownDelegate_Parms;
	memcpy ( &SetProfilePageDownDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetProfilePageDownDelegate, &SetProfilePageDownDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetProfilePageUpDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetProfilePageUpDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetProfilePageUpDelegate = NULL;

	if ( ! pFnSetProfilePageUpDelegate )
		pFnSetProfilePageUpDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54211 ];

	UGFxTrMenuMoviePlayer_execSetProfilePageUpDelegate_Parms SetProfilePageUpDelegate_Parms;
	memcpy ( &SetProfilePageUpDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetProfilePageUpDelegate, &SetProfilePageUpDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSummaryActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSummaryActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSummaryActionDelegate = NULL;

	if ( ! pFnSetSummaryActionDelegate )
		pFnSetSummaryActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54214 ];

	UGFxTrMenuMoviePlayer_execSetSummaryActionDelegate_Parms SetSummaryActionDelegate_Parms;
	memcpy ( &SetSummaryActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSummaryActionDelegate, &SetSummaryActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetFriendPlayerDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetFriendPlayerDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetFriendPlayerDelegate = NULL;

	if ( ! pFnSetFriendPlayerDelegate )
		pFnSetFriendPlayerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54215 ];

	UGFxTrMenuMoviePlayer_execSetFriendPlayerDelegate_Parms SetFriendPlayerDelegate_Parms;
	memcpy ( &SetFriendPlayerDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetFriendPlayerDelegate, &SetFriendPlayerDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetMutePlayerDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetMutePlayerDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetMutePlayerDelegate = NULL;

	if ( ! pFnSetMutePlayerDelegate )
		pFnSetMutePlayerDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54213 ];

	UGFxTrMenuMoviePlayer_execSetMutePlayerDelegate_Parms SetMutePlayerDelegate_Parms;
	memcpy ( &SetMutePlayerDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetMutePlayerDelegate, &SetMutePlayerDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetLoadXPSummaryDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetLoadXPSummaryDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetLoadXPSummaryDelegate = NULL;

	if ( ! pFnSetLoadXPSummaryDelegate )
		pFnSetLoadXPSummaryDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54216 ];

	UGFxTrMenuMoviePlayer_execSetLoadXPSummaryDelegate_Parms SetLoadXPSummaryDelegate_Parms;
	memcpy ( &SetLoadXPSummaryDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetLoadXPSummaryDelegate, &SetLoadXPSummaryDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetModifyFocusDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetModifyFocusDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetModifyFocusDelegate = NULL;

	if ( ! pFnSetModifyFocusDelegate )
		pFnSetModifyFocusDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54207 ];

	UGFxTrMenuMoviePlayer_execSetModifyFocusDelegate_Parms SetModifyFocusDelegate_Parms;
	memcpy ( &SetModifyFocusDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetModifyFocusDelegate, &SetModifyFocusDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetActionDownDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetActionDownDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetActionDownDelegate = NULL;

	if ( ! pFnSetActionDownDelegate )
		pFnSetActionDownDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54209 ];

	UGFxTrMenuMoviePlayer_execSetActionDownDelegate_Parms SetActionDownDelegate_Parms;
	memcpy ( &SetActionDownDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetActionDownDelegate, &SetActionDownDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetActionUpDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetActionUpDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetActionUpDelegate = NULL;

	if ( ! pFnSetActionUpDelegate )
		pFnSetActionUpDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54208 ];

	UGFxTrMenuMoviePlayer_execSetActionUpDelegate_Parms SetActionUpDelegate_Parms;
	memcpy ( &SetActionUpDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetActionUpDelegate, &SetActionUpDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetModifiedActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetModifiedActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetModifiedActionDelegate = NULL;

	if ( ! pFnSetModifiedActionDelegate )
		pFnSetModifiedActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54206 ];

	UGFxTrMenuMoviePlayer_execSetModifiedActionDelegate_Parms SetModifiedActionDelegate_Parms;
	memcpy ( &SetModifiedActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetModifiedActionDelegate, &SetModifiedActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetSelectedActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetSelectedActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetSelectedActionDelegate = NULL;

	if ( ! pFnSetSelectedActionDelegate )
		pFnSetSelectedActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54205 ];

	UGFxTrMenuMoviePlayer_execSetSelectedActionDelegate_Parms SetSelectedActionDelegate_Parms;
	memcpy ( &SetSelectedActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetSelectedActionDelegate, &SetSelectedActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetFocusedActionDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetFocusedActionDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetFocusedActionDelegate = NULL;

	if ( ! pFnSetFocusedActionDelegate )
		pFnSetFocusedActionDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54204 ];

	UGFxTrMenuMoviePlayer_execSetFocusedActionDelegate_Parms SetFocusedActionDelegate_Parms;
	memcpy ( &SetFocusedActionDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetFocusedActionDelegate, &SetFocusedActionDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPopupCompleteDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetPopupCompleteDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetPopupCompleteDelegate = NULL;

	if ( ! pFnSetPopupCompleteDelegate )
		pFnSetPopupCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54203 ];

	UGFxTrMenuMoviePlayer_execSetPopupCompleteDelegate_Parms SetPopupCompleteDelegate_Parms;
	memcpy ( &SetPopupCompleteDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetPopupCompleteDelegate, &SetPopupCompleteDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPopupDataDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetPopupDataDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetPopupDataDelegate = NULL;

	if ( ! pFnSetPopupDataDelegate )
		pFnSetPopupDataDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54202 ];

	UGFxTrMenuMoviePlayer_execSetPopupDataDelegate_Parms SetPopupDataDelegate_Parms;
	memcpy ( &SetPopupDataDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetPopupDataDelegate, &SetPopupDataDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetHelpButtonDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         In                             ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::SetHelpButtonDelegate ( struct FScriptDelegate In )
{
	static UFunction* pFnSetHelpButtonDelegate = NULL;

	if ( ! pFnSetHelpButtonDelegate )
		pFnSetHelpButtonDelegate = (UFunction*) UObject::GObjObjects()->Data[ 54210 ];

	UGFxTrMenuMoviePlayer_execSetHelpButtonDelegate_Parms SetHelpButtonDelegate_Parms;
	memcpy ( &SetHelpButtonDelegate_Parms.In, &In, 0xC );

	this->ProcessEvent ( pFnSetHelpButtonDelegate, &SetHelpButtonDelegate_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_SetMapLoadText
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 B                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 C                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 D                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 E                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 F                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 G                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 H                              ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_SetMapLoadText ( struct FString A, struct FString B, struct FString C, struct FString D, struct FString E, struct FString F, struct FString G, struct FString H )
{
	static UFunction* pFnASC_SetMapLoadText = NULL;

	if ( ! pFnASC_SetMapLoadText )
		pFnASC_SetMapLoadText = (UFunction*) UObject::GObjObjects()->Data[ 54800 ];

	UGFxTrMenuMoviePlayer_execASC_SetMapLoadText_Parms ASC_SetMapLoadText_Parms;
	memcpy ( &ASC_SetMapLoadText_Parms.A, &A, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.B, &B, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.C, &C, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.D, &D, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.E, &E, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.F, &F, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.G, &G, 0xC );
	memcpy ( &ASC_SetMapLoadText_Parms.H, &H, 0xC );

	this->ProcessEvent ( pFnASC_SetMapLoadText, &ASC_SetMapLoadText_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_OpeningMenu
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_OpeningMenu ( )
{
	static UFunction* pFnASC_OpeningMenu = NULL;

	if ( ! pFnASC_OpeningMenu )
		pFnASC_OpeningMenu = (UFunction*) UObject::GObjObjects()->Data[ 54726 ];

	UGFxTrMenuMoviePlayer_execASC_OpeningMenu_Parms ASC_OpeningMenu_Parms;

	this->ProcessEvent ( pFnASC_OpeningMenu, &ASC_OpeningMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ShowPeach
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_ShowPeach ( )
{
	static UFunction* pFnASC_ShowPeach = NULL;

	if ( ! pFnASC_ShowPeach )
		pFnASC_ShowPeach = (UFunction*) UObject::GObjObjects()->Data[ 54240 ];

	UGFxTrMenuMoviePlayer_execASC_ShowPeach_Parms ASC_ShowPeach_Parms;

	this->ProcessEvent ( pFnASC_ShowPeach, &ASC_ShowPeach_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ShowNews
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 News                           ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFeatured                      ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ASC_ShowNews ( struct FString News, unsigned long bFeatured )
{
	static UFunction* pFnASC_ShowNews = NULL;

	if ( ! pFnASC_ShowNews )
		pFnASC_ShowNews = (UFunction*) UObject::GObjObjects()->Data[ 54682 ];

	UGFxTrMenuMoviePlayer_execASC_ShowNews_Parms ASC_ShowNews_Parms;
	memcpy ( &ASC_ShowNews_Parms.News, &News, 0xC );
	ASC_ShowNews_Parms.bFeatured = bFeatured;

	this->ProcessEvent ( pFnASC_ShowNews, &ASC_ShowNews_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_HideReticuleBuilder
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_HideReticuleBuilder ( )
{
	static UFunction* pFnASC_HideReticuleBuilder = NULL;

	if ( ! pFnASC_HideReticuleBuilder )
		pFnASC_HideReticuleBuilder = (UFunction*) UObject::GObjObjects()->Data[ 54797 ];

	UGFxTrMenuMoviePlayer_execASC_HideReticuleBuilder_Parms ASC_HideReticuleBuilder_Parms;

	this->ProcessEvent ( pFnASC_HideReticuleBuilder, &ASC_HideReticuleBuilder_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ShowReticuleBuilder
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ASC_ShowReticuleBuilder ( class UGFxObject* Data )
{
	static UFunction* pFnASC_ShowReticuleBuilder = NULL;

	if ( ! pFnASC_ShowReticuleBuilder )
		pFnASC_ShowReticuleBuilder = (UFunction*) UObject::GObjObjects()->Data[ 54795 ];

	UGFxTrMenuMoviePlayer_execASC_ShowReticuleBuilder_Parms ASC_ShowReticuleBuilder_Parms;
	ASC_ShowReticuleBuilder_Parms.Data = Data;

	this->ProcessEvent ( pFnASC_ShowReticuleBuilder, &ASC_ShowReticuleBuilder_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_SetFontIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            FontIdx                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ASC_SetFontIndex ( int FontIdx )
{
	static UFunction* pFnASC_SetFontIndex = NULL;

	if ( ! pFnASC_SetFontIndex )
		pFnASC_SetFontIndex = (UFunction*) UObject::GObjObjects()->Data[ 54199 ];

	UGFxTrMenuMoviePlayer_execASC_SetFontIndex_Parms ASC_SetFontIndex_Parms;
	ASC_SetFontIndex_Parms.FontIdx = FontIdx;

	this->ProcessEvent ( pFnASC_SetFontIndex, &ASC_SetFontIndex_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_FillProfile
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              ObjList                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ASC_FillProfile ( class UGFxObject* ObjList )
{
	static UFunction* pFnASC_FillProfile = NULL;

	if ( ! pFnASC_FillProfile )
		pFnASC_FillProfile = (UFunction*) UObject::GObjObjects()->Data[ 54414 ];

	UGFxTrMenuMoviePlayer_execASC_FillProfile_Parms ASC_FillProfile_Parms;
	ASC_FillProfile_Parms.ObjList = ObjList;

	this->ProcessEvent ( pFnASC_FillProfile, &ASC_FillProfile_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_UnlockedItem
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 TopName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BotName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 IconType                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            IconId                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ASC_UnlockedItem ( struct FString TopName, struct FString BotName, struct FString IconType, int IconId )
{
	static UFunction* pFnASC_UnlockedItem = NULL;

	if ( ! pFnASC_UnlockedItem )
		pFnASC_UnlockedItem = (UFunction*) UObject::GObjObjects()->Data[ 54580 ];

	UGFxTrMenuMoviePlayer_execASC_UnlockedItem_Parms ASC_UnlockedItem_Parms;
	memcpy ( &ASC_UnlockedItem_Parms.TopName, &TopName, 0xC );
	memcpy ( &ASC_UnlockedItem_Parms.BotName, &BotName, 0xC );
	memcpy ( &ASC_UnlockedItem_Parms.IconType, &IconType, 0xC );
	ASC_UnlockedItem_Parms.IconId = IconId;

	this->ProcessEvent ( pFnASC_UnlockedItem, &ASC_UnlockedItem_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_PurchaseComplete
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bSuccess                       ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_PurchaseComplete ( unsigned long bSuccess, struct FString Message )
{
	static UFunction* pFnASC_PurchaseComplete = NULL;

	if ( ! pFnASC_PurchaseComplete )
		pFnASC_PurchaseComplete = (UFunction*) UObject::GObjObjects()->Data[ 54786 ];

	UGFxTrMenuMoviePlayer_execASC_PurchaseComplete_Parms ASC_PurchaseComplete_Parms;
	ASC_PurchaseComplete_Parms.bSuccess = bSuccess;
	memcpy ( &ASC_PurchaseComplete_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnASC_PurchaseComplete, &ASC_PurchaseComplete_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_PromptNewPlayerName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ErrorString                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_PromptNewPlayerName ( struct FString ErrorString )
{
	static UFunction* pFnASC_PromptNewPlayerName = NULL;

	if ( ! pFnASC_PromptNewPlayerName )
		pFnASC_PromptNewPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 54784 ];

	UGFxTrMenuMoviePlayer_execASC_PromptNewPlayerName_Parms ASC_PromptNewPlayerName_Parms;
	memcpy ( &ASC_PromptNewPlayerName_Parms.ErrorString, &ErrorString, 0xC );

	this->ProcessEvent ( pFnASC_PromptNewPlayerName, &ASC_PromptNewPlayerName_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_KeyPressCaptured
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_KeyPressCaptured ( struct FString KeyName )
{
	static UFunction* pFnASC_KeyPressCaptured = NULL;

	if ( ! pFnASC_KeyPressCaptured )
		pFnASC_KeyPressCaptured = (UFunction*) UObject::GObjObjects()->Data[ 54782 ];

	UGFxTrMenuMoviePlayer_execASC_KeyPressCaptured_Parms ASC_KeyPressCaptured_Parms;
	memcpy ( &ASC_KeyPressCaptured_Parms.KeyName, &KeyName, 0xC );

	this->ProcessEvent ( pFnASC_KeyPressCaptured, &ASC_KeyPressCaptured_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_FillEULAText
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 EULAText                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Accept                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Decline                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_FillEULAText ( struct FString EULAText, struct FString Title, struct FString Accept, struct FString Decline )
{
	static UFunction* pFnASC_FillEULAText = NULL;

	if ( ! pFnASC_FillEULAText )
		pFnASC_FillEULAText = (UFunction*) UObject::GObjObjects()->Data[ 54376 ];

	UGFxTrMenuMoviePlayer_execASC_FillEULAText_Parms ASC_FillEULAText_Parms;
	memcpy ( &ASC_FillEULAText_Parms.EULAText, &EULAText, 0xC );
	memcpy ( &ASC_FillEULAText_Parms.Title, &Title, 0xC );
	memcpy ( &ASC_FillEULAText_Parms.Accept, &Accept, 0xC );
	memcpy ( &ASC_FillEULAText_Parms.Decline, &Decline, 0xC );

	this->ProcessEvent ( pFnASC_FillEULAText, &ASC_FillEULAText_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_GlobalAlert
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_GlobalAlert ( struct FString Message )
{
	static UFunction* pFnASC_GlobalAlert = NULL;

	if ( ! pFnASC_GlobalAlert )
		pFnASC_GlobalAlert = (UFunction*) UObject::GObjObjects()->Data[ 54776 ];

	UGFxTrMenuMoviePlayer_execASC_GlobalAlert_Parms ASC_GlobalAlert_Parms;
	memcpy ( &ASC_GlobalAlert_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnASC_GlobalAlert, &ASC_GlobalAlert_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_PopupError
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_PopupError ( struct FString Message )
{
	static UFunction* pFnASC_PopupError = NULL;

	if ( ! pFnASC_PopupError )
		pFnASC_PopupError = (UFunction*) UObject::GObjObjects()->Data[ 54374 ];

	UGFxTrMenuMoviePlayer_execASC_PopupError_Parms ASC_PopupError_Parms;
	memcpy ( &ASC_PopupError_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnASC_PopupError, &ASC_PopupError_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_LoadPlayerSummary
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_LoadPlayerSummary ( )
{
	static UFunction* pFnASC_LoadPlayerSummary = NULL;

	if ( ! pFnASC_LoadPlayerSummary )
		pFnASC_LoadPlayerSummary = (UFunction*) UObject::GObjObjects()->Data[ 54718 ];

	UGFxTrMenuMoviePlayer_execASC_LoadPlayerSummary_Parms ASC_LoadPlayerSummary_Parms;

	this->ProcessEvent ( pFnASC_LoadPlayerSummary, &ASC_LoadPlayerSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_LoadMatchSummary
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_LoadMatchSummary ( )
{
	static UFunction* pFnASC_LoadMatchSummary = NULL;

	if ( ! pFnASC_LoadMatchSummary )
		pFnASC_LoadMatchSummary = (UFunction*) UObject::GObjObjects()->Data[ 54774 ];

	UGFxTrMenuMoviePlayer_execASC_LoadMatchSummary_Parms ASC_LoadMatchSummary_Parms;

	this->ProcessEvent ( pFnASC_LoadMatchSummary, &ASC_LoadMatchSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ProfileUpdated
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_ProfileUpdated ( )
{
	static UFunction* pFnASC_ProfileUpdated = NULL;

	if ( ! pFnASC_ProfileUpdated )
		pFnASC_ProfileUpdated = (UFunction*) UObject::GObjObjects()->Data[ 54372 ];

	UGFxTrMenuMoviePlayer_execASC_ProfileUpdated_Parms ASC_ProfileUpdated_Parms;

	this->ProcessEvent ( pFnASC_ProfileUpdated, &ASC_ProfileUpdated_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_StopLoading
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_StopLoading ( )
{
	static UFunction* pFnASC_StopLoading = NULL;

	if ( ! pFnASC_StopLoading )
		pFnASC_StopLoading = (UFunction*) UObject::GObjObjects()->Data[ 54264 ];

	UGFxTrMenuMoviePlayer_execASC_StopLoading_Parms ASC_StopLoading_Parms;

	this->ProcessEvent ( pFnASC_StopLoading, &ASC_StopLoading_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_FocusLogin
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_FocusLogin ( )
{
	static UFunction* pFnASC_FocusLogin = NULL;

	if ( ! pFnASC_FocusLogin )
		pFnASC_FocusLogin = (UFunction*) UObject::GObjObjects()->Data[ 54773 ];

	UGFxTrMenuMoviePlayer_execASC_FocusLogin_Parms ASC_FocusLogin_Parms;

	this->ProcessEvent ( pFnASC_FocusLogin, &ASC_FocusLogin_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ForceFocus
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_ForceFocus ( )
{
	static UFunction* pFnASC_ForceFocus = NULL;

	if ( ! pFnASC_ForceFocus )
		pFnASC_ForceFocus = (UFunction*) UObject::GObjObjects()->Data[ 54727 ];

	UGFxTrMenuMoviePlayer_execASC_ForceFocus_Parms ASC_ForceFocus_Parms;

	this->ProcessEvent ( pFnASC_ForceFocus, &ASC_ForceFocus_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_HideMovie
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_HideMovie ( )
{
	static UFunction* pFnASC_HideMovie = NULL;

	if ( ! pFnASC_HideMovie )
		pFnASC_HideMovie = (UFunction*) UObject::GObjObjects()->Data[ 54448 ];

	UGFxTrMenuMoviePlayer_execASC_HideMovie_Parms ASC_HideMovie_Parms;

	this->ProcessEvent ( pFnASC_HideMovie, &ASC_HideMovie_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_JoinGame
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_JoinGame ( )
{
	static UFunction* pFnASC_JoinGame = NULL;

	if ( ! pFnASC_JoinGame )
		pFnASC_JoinGame = (UFunction*) UObject::GObjObjects()->Data[ 54772 ];

	UGFxTrMenuMoviePlayer_execASC_JoinGame_Parms ASC_JoinGame_Parms;

	this->ProcessEvent ( pFnASC_JoinGame, &ASC_JoinGame_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_LeftGame
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_LeftGame ( )
{
	static UFunction* pFnASC_LeftGame = NULL;

	if ( ! pFnASC_LeftGame )
		pFnASC_LeftGame = (UFunction*) UObject::GObjObjects()->Data[ 54771 ];

	UGFxTrMenuMoviePlayer_execASC_LeftGame_Parms ASC_LeftGame_Parms;

	this->ProcessEvent ( pFnASC_LeftGame, &ASC_LeftGame_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_Resize
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ASC_Resize ( )
{
	static UFunction* pFnASC_Resize = NULL;

	if ( ! pFnASC_Resize )
		pFnASC_Resize = (UFunction*) UObject::GObjObjects()->Data[ 54200 ];

	UGFxTrMenuMoviePlayer_execASC_Resize_Parms ASC_Resize_Parms;

	this->ProcessEvent ( pFnASC_Resize, &ASC_Resize_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_GotoState
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 NewState                       ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_GotoState ( struct FString NewState )
{
	static UFunction* pFnASC_GotoState = NULL;

	if ( ! pFnASC_GotoState )
		pFnASC_GotoState = (UFunction*) UObject::GObjObjects()->Data[ 54267 ];

	UGFxTrMenuMoviePlayer_execASC_GotoState_Parms ASC_GotoState_Parms;
	memcpy ( &ASC_GotoState_Parms.NewState, &NewState, 0xC );

	this->ProcessEvent ( pFnASC_GotoState, &ASC_GotoState_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ASC_ShowQueue
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Estimate                       ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ASC_ShowQueue ( struct FString Estimate )
{
	static UFunction* pFnASC_ShowQueue = NULL;

	if ( ! pFnASC_ShowQueue )
		pFnASC_ShowQueue = (UFunction*) UObject::GObjObjects()->Data[ 54768 ];

	UGFxTrMenuMoviePlayer_execASC_ShowQueue_Parms ASC_ShowQueue_Parms;
	memcpy ( &ASC_ShowQueue_Parms.Estimate, &Estimate, 0xC );

	this->ProcessEvent ( pFnASC_ShowQueue, &ASC_ShowQueue_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HidePopup
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::HidePopup ( )
{
	static UFunction* pFnHidePopup = NULL;

	if ( ! pFnHidePopup )
		pFnHidePopup = (UFunction*) UObject::GObjObjects()->Data[ 54767 ];

	UGFxTrMenuMoviePlayer_execHidePopup_Parms HidePopup_Parms;

	this->ProcessEvent ( pFnHidePopup, &HidePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ClosePopup
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ClosePopup ( )
{
	static UFunction* pFnClosePopup = NULL;

	if ( ! pFnClosePopup )
		pFnClosePopup = (UFunction*) UObject::GObjObjects()->Data[ 54252 ];

	UGFxTrMenuMoviePlayer_execClosePopup_Parms ClosePopup_Parms;

	this->ProcessEvent ( pFnClosePopup, &ClosePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HideWorkingGraphic
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::HideWorkingGraphic ( )
{
	static UFunction* pFnHideWorkingGraphic = NULL;

	if ( ! pFnHideWorkingGraphic )
		pFnHideWorkingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 54696 ];

	UGFxTrMenuMoviePlayer_execHideWorkingGraphic_Parms HideWorkingGraphic_Parms;

	this->ProcessEvent ( pFnHideWorkingGraphic, &HideWorkingGraphic_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowWorkingGraphic
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ShowWorkingGraphic ( )
{
	static UFunction* pFnShowWorkingGraphic = NULL;

	if ( ! pFnShowWorkingGraphic )
		pFnShowWorkingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 54695 ];

	UGFxTrMenuMoviePlayer_execShowWorkingGraphic_Parms ShowWorkingGraphic_Parms;

	this->ProcessEvent ( pFnShowWorkingGraphic, &ShowWorkingGraphic_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UpdateButton
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::UpdateButton ( class UGFxObject* Obj )
{
	static UFunction* pFnUpdateButton = NULL;

	if ( ! pFnUpdateButton )
		pFnUpdateButton = (UFunction*) UObject::GObjObjects()->Data[ 54765 ];

	UGFxTrMenuMoviePlayer_execUpdateButton_Parms UpdateButton_Parms;
	UpdateButton_Parms.Obj = Obj;

	this->ProcessEvent ( pFnUpdateButton, &UpdateButton_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.TweenPlayerSummary
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::TweenPlayerSummary ( )
{
	static UFunction* pFnTweenPlayerSummary = NULL;

	if ( ! pFnTweenPlayerSummary )
		pFnTweenPlayerSummary = (UFunction*) UObject::GObjObjects()->Data[ 54692 ];

	UGFxTrMenuMoviePlayer_execTweenPlayerSummary_Parms TweenPlayerSummary_Parms;

	this->ProcessEvent ( pFnTweenPlayerSummary, &TweenPlayerSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HideNotification
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventHideNotification ( )
{
	static UFunction* pFnHideNotification = NULL;

	if ( ! pFnHideNotification )
		pFnHideNotification = (UFunction*) UObject::GObjObjects()->Data[ 54764 ];

	UGFxTrMenuMoviePlayer_eventHideNotification_Parms HideNotification_Parms;

	this->ProcessEvent ( pFnHideNotification, &HideNotification_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowNotification
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message2                       ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventShowNotification ( struct FString Message, struct FString Message2 )
{
	static UFunction* pFnShowNotification = NULL;

	if ( ! pFnShowNotification )
		pFnShowNotification = (UFunction*) UObject::GObjObjects()->Data[ 54761 ];

	UGFxTrMenuMoviePlayer_eventShowNotification_Parms ShowNotification_Parms;
	memcpy ( &ShowNotification_Parms.Message, &Message, 0xC );
	memcpy ( &ShowNotification_Parms.Message2, &Message2, 0xC );

	this->ProcessEvent ( pFnShowNotification, &ShowNotification_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UpdateStatus
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::UpdateStatus ( struct FString Message )
{
	static UFunction* pFnUpdateStatus = NULL;

	if ( ! pFnUpdateStatus )
		pFnUpdateStatus = (UFunction*) UObject::GObjObjects()->Data[ 54453 ];

	UGFxTrMenuMoviePlayer_execUpdateStatus_Parms UpdateStatus_Parms;
	memcpy ( &UpdateStatus_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnUpdateStatus, &UpdateStatus_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StartMainMenu
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::StartMainMenu ( )
{
	static UFunction* pFnStartMainMenu = NULL;

	if ( ! pFnStartMainMenu )
		pFnStartMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 54225 ];

	UGFxTrMenuMoviePlayer_execStartMainMenu_Parms StartMainMenu_Parms;

	this->ProcessEvent ( pFnStartMainMenu, &StartMainMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StartLogin
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::StartLogin ( )
{
	static UFunction* pFnStartLogin = NULL;

	if ( ! pFnStartLogin )
		pFnStartLogin = (UFunction*) UObject::GObjObjects()->Data[ 54238 ];

	UGFxTrMenuMoviePlayer_execStartLogin_Parms StartLogin_Parms;

	this->ProcessEvent ( pFnStartLogin, &StartLogin_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.QueuePopup
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGFxTrMenuMoviePlayer::QueuePopup ( )
{
	static UFunction* pFnQueuePopup = NULL;

	if ( ! pFnQueuePopup )
		pFnQueuePopup = (UFunction*) UObject::GObjObjects()->Data[ 54257 ];

	UGFxTrMenuMoviePlayer_execQueuePopup_Parms QueuePopup_Parms;

	this->ProcessEvent ( pFnQueuePopup, &QueuePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CreateAccount
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::CreateAccount ( )
{
	static UFunction* pFnCreateAccount = NULL;

	if ( ! pFnCreateAccount )
		pFnCreateAccount = (UFunction*) UObject::GObjObjects()->Data[ 54759 ];

	UGFxTrMenuMoviePlayer_execCreateAccount_Parms CreateAccount_Parms;

	this->ProcessEvent ( pFnCreateAccount, &CreateAccount_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.NavigateSteamGold
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bSuccess                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventNavigateSteamGold ( unsigned long bSuccess )
{
	static UFunction* pFnNavigateSteamGold = NULL;

	if ( ! pFnNavigateSteamGold )
		pFnNavigateSteamGold = (UFunction*) UObject::GObjObjects()->Data[ 54756 ];

	UGFxTrMenuMoviePlayer_eventNavigateSteamGold_Parms NavigateSteamGold_Parms;
	NavigateSteamGold_Parms.bSuccess = bSuccess;

	this->ProcessEvent ( pFnNavigateSteamGold, &NavigateSteamGold_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HandlePopupComplete
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxTrMenuMoviePlayer::HandlePopupComplete ( int Id, struct FString Text )
{
	static UFunction* pFnHandlePopupComplete = NULL;

	if ( ! pFnHandlePopupComplete )
		pFnHandlePopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 54752 ];

	UGFxTrMenuMoviePlayer_execHandlePopupComplete_Parms HandlePopupComplete_Parms;
	HandlePopupComplete_Parms.Id = Id;
	memcpy ( &HandlePopupComplete_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnHandlePopupComplete, &HandlePopupComplete_Parms, NULL );

	return HandlePopupComplete_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.HandlePopup
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              Obj                            ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::HandlePopup ( class UGFxObject* Obj )
{
	static UFunction* pFnHandlePopup = NULL;

	if ( ! pFnHandlePopup )
		pFnHandlePopup = (UFunction*) UObject::GObjObjects()->Data[ 54743 ];

	UGFxTrMenuMoviePlayer_execHandlePopup_Parms HandlePopup_Parms;
	HandlePopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnHandlePopup, &HandlePopup_Parms, NULL );

	return HandlePopup_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowSteamResponse
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bAuthorized                    ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventShowSteamResponse ( unsigned long bAuthorized )
{
	static UFunction* pFnShowSteamResponse = NULL;

	if ( ! pFnShowSteamResponse )
		pFnShowSteamResponse = (UFunction*) UObject::GObjObjects()->Data[ 54741 ];

	UGFxTrMenuMoviePlayer_eventShowSteamResponse_Parms ShowSteamResponse_Parms;
	ShowSteamResponse_Parms.bAuthorized = bAuthorized;

	this->ProcessEvent ( pFnShowSteamResponse, &ShowSteamResponse_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StartSteamTransaction
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventStartSteamTransaction ( )
{
	static UFunction* pFnStartSteamTransaction = NULL;

	if ( ! pFnStartSteamTransaction )
		pFnStartSteamTransaction = (UFunction*) UObject::GObjObjects()->Data[ 54740 ];

	UGFxTrMenuMoviePlayer_eventStartSteamTransaction_Parms StartSteamTransaction_Parms;

	this->ProcessEvent ( pFnStartSteamTransaction, &StartSteamTransaction_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ToggleChat
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventToggleChat ( )
{
	static UFunction* pFnToggleChat = NULL;

	if ( ! pFnToggleChat )
		pFnToggleChat = (UFunction*) UObject::GObjObjects()->Data[ 54739 ];

	UGFxTrMenuMoviePlayer_eventToggleChat_Parms ToggleChat_Parms;

	this->ProcessEvent ( pFnToggleChat, &ToggleChat_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PushChat
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 chatStr                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventPushChat ( struct FString chatStr )
{
	static UFunction* pFnPushChat = NULL;

	if ( ! pFnPushChat )
		pFnPushChat = (UFunction*) UObject::GObjObjects()->Data[ 54737 ];

	UGFxTrMenuMoviePlayer_eventPushChat_Parms PushChat_Parms;
	memcpy ( &PushChat_Parms.chatStr, &chatStr, 0xC );

	this->ProcessEvent ( pFnPushChat, &PushChat_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HideChat
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventHideChat ( )
{
	static UFunction* pFnHideChat = NULL;

	if ( ! pFnHideChat )
		pFnHideChat = (UFunction*) UObject::GObjObjects()->Data[ 54736 ];

	UGFxTrMenuMoviePlayer_eventHideChat_Parms HideChat_Parms;

	this->ProcessEvent ( pFnHideChat, &HideChat_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowChat
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventShowChat ( )
{
	static UFunction* pFnShowChat = NULL;

	if ( ! pFnShowChat )
		pFnShowChat = (UFunction*) UObject::GObjObjects()->Data[ 54735 ];

	UGFxTrMenuMoviePlayer_eventShowChat_Parms ShowChat_Parms;

	this->ProcessEvent ( pFnShowChat, &ShowChat_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.AddVehicleMenuOption
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            Icon                           ( CPF_Parm )
// int                            CountSpawned                   ( CPF_Parm )
// int                            CountAllowed                   ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventAddVehicleMenuOption ( struct FString ClassName, struct FString DisplayName, int Cost, int Icon, int CountSpawned, int CountAllowed )
{
	static UFunction* pFnAddVehicleMenuOption = NULL;

	if ( ! pFnAddVehicleMenuOption )
		pFnAddVehicleMenuOption = (UFunction*) UObject::GObjObjects()->Data[ 54728 ];

	UGFxTrMenuMoviePlayer_eventAddVehicleMenuOption_Parms AddVehicleMenuOption_Parms;
	memcpy ( &AddVehicleMenuOption_Parms.ClassName, &ClassName, 0xC );
	memcpy ( &AddVehicleMenuOption_Parms.DisplayName, &DisplayName, 0xC );
	AddVehicleMenuOption_Parms.Cost = Cost;
	AddVehicleMenuOption_Parms.Icon = Icon;
	AddVehicleMenuOption_Parms.CountSpawned = CountSpawned;
	AddVehicleMenuOption_Parms.CountAllowed = CountAllowed;

	this->ProcessEvent ( pFnAddVehicleMenuOption, &AddVehicleMenuOption_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PullOpenMenu
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::PullOpenMenu ( )
{
	static UFunction* pFnPullOpenMenu = NULL;

	if ( ! pFnPullOpenMenu )
		pFnPullOpenMenu = (UFunction*) UObject::GObjObjects()->Data[ 54725 ];

	UGFxTrMenuMoviePlayer_execPullOpenMenu_Parms PullOpenMenu_Parms;

	this->ProcessEvent ( pFnPullOpenMenu, &PullOpenMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowVehicleMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Credits                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventShowVehicleMenu ( int Credits )
{
	static UFunction* pFnShowVehicleMenu = NULL;

	if ( ! pFnShowVehicleMenu )
		pFnShowVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 54721 ];

	UGFxTrMenuMoviePlayer_eventShowVehicleMenu_Parms ShowVehicleMenu_Parms;
	ShowVehicleMenu_Parms.Credits = Credits;

	this->ProcessEvent ( pFnShowVehicleMenu, &ShowVehicleMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ClearVehicleMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventClearVehicleMenu ( )
{
	static UFunction* pFnClearVehicleMenu = NULL;

	if ( ! pFnClearVehicleMenu )
		pFnClearVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 54719 ];

	UGFxTrMenuMoviePlayer_eventClearVehicleMenu_Parms ClearVehicleMenu_Parms;

	this->ProcessEvent ( pFnClearVehicleMenu, &ClearVehicleMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UILoadSummary
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventUILoadSummary ( )
{
	static UFunction* pFnUILoadSummary = NULL;

	if ( ! pFnUILoadSummary )
		pFnUILoadSummary = (UFunction*) UObject::GObjObjects()->Data[ 54714 ];

	UGFxTrMenuMoviePlayer_eventUILoadSummary_Parms UILoadSummary_Parms;

	this->ProcessEvent ( pFnUILoadSummary, &UILoadSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SeedAccolades
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class UTgPlayerProfile*        Profile                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventSeedAccolades ( class UTgPlayerProfile* Profile )
{
	static UFunction* pFnSeedAccolades = NULL;

	if ( ! pFnSeedAccolades )
		pFnSeedAccolades = (UFunction*) UObject::GObjObjects()->Data[ 54702 ];

	UGFxTrMenuMoviePlayer_eventSeedAccolades_Parms SeedAccolades_Parms;
	SeedAccolades_Parms.Profile = Profile;

	this->ProcessEvent ( pFnSeedAccolades, &SeedAccolades_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedUnknown
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            VendorId                       ( CPF_Parm )
// int                            LootId                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventUnlockedUnknown ( int VendorId, int LootId )
{
	static UFunction* pFnUnlockedUnknown = NULL;

	if ( ! pFnUnlockedUnknown )
		pFnUnlockedUnknown = (UFunction*) UObject::GObjObjects()->Data[ 54697 ];

	UGFxTrMenuMoviePlayer_eventUnlockedUnknown_Parms UnlockedUnknown_Parms;
	UnlockedUnknown_Parms.VendorId = VendorId;
	UnlockedUnknown_Parms.LootId = LootId;

	this->ProcessEvent ( pFnUnlockedUnknown, &UnlockedUnknown_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ToggleWorkingGraphic
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventToggleWorkingGraphic ( unsigned long bEnabled )
{
	static UFunction* pFnToggleWorkingGraphic = NULL;

	if ( ! pFnToggleWorkingGraphic )
		pFnToggleWorkingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 54693 ];

	UGFxTrMenuMoviePlayer_eventToggleWorkingGraphic_Parms ToggleWorkingGraphic_Parms;
	ToggleWorkingGraphic_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnToggleWorkingGraphic, &ToggleWorkingGraphic_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.TweenExperienceSummary
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventTweenExperienceSummary ( )
{
	static UFunction* pFnTweenExperienceSummary = NULL;

	if ( ! pFnTweenExperienceSummary )
		pFnTweenExperienceSummary = (UFunction*) UObject::GObjObjects()->Data[ 54690 ];

	UGFxTrMenuMoviePlayer_eventTweenExperienceSummary_Parms TweenExperienceSummary_Parms;

	this->ProcessEvent ( pFnTweenExperienceSummary, &TweenExperienceSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.BeginExperienceTweens
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bDailyCompleted                ( CPF_Parm )
// unsigned long                  bWeeklyCompleted               ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventBeginExperienceTweens ( unsigned long bDailyCompleted, unsigned long bWeeklyCompleted )
{
	static UFunction* pFnBeginExperienceTweens = NULL;

	if ( ! pFnBeginExperienceTweens )
		pFnBeginExperienceTweens = (UFunction*) UObject::GObjObjects()->Data[ 54685 ];

	UGFxTrMenuMoviePlayer_eventBeginExperienceTweens_Parms BeginExperienceTweens_Parms;
	BeginExperienceTweens_Parms.bDailyCompleted = bDailyCompleted;
	BeginExperienceTweens_Parms.bWeeklyCompleted = bWeeklyCompleted;

	this->ProcessEvent ( pFnBeginExperienceTweens, &BeginExperienceTweens_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.QueueTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventQueueTimer ( )
{
	static UFunction* pFnQueueTimer = NULL;

	if ( ! pFnQueueTimer )
		pFnQueueTimer = (UFunction*) UObject::GObjObjects()->Data[ 54684 ];

	UGFxTrMenuMoviePlayer_eventQueueTimer_Parms QueueTimer_Parms;

	this->ProcessEvent ( pFnQueueTimer, &QueueTimer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.RequestNews
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::RequestNews ( )
{
	static UFunction* pFnRequestNews = NULL;

	if ( ! pFnRequestNews )
		pFnRequestNews = (UFunction*) UObject::GObjObjects()->Data[ 54681 ];

	UGFxTrMenuMoviePlayer_execRequestNews_Parms RequestNews_Parms;

	this->ProcessEvent ( pFnRequestNews, &RequestNews_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DealTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventDealTimer ( )
{
	static UFunction* pFnDealTimer = NULL;

	if ( ! pFnDealTimer )
		pFnDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 54677 ];

	UGFxTrMenuMoviePlayer_eventDealTimer_Parms DealTimer_Parms;

	this->ProcessEvent ( pFnDealTimer, &DealTimer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.RevertSetting
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventRevertSetting ( )
{
	static UFunction* pFnRevertSetting = NULL;

	if ( ! pFnRevertSetting )
		pFnRevertSetting = (UFunction*) UObject::GObjObjects()->Data[ 54676 ];

	UGFxTrMenuMoviePlayer_eventRevertSetting_Parms RevertSetting_Parms;

	this->ProcessEvent ( pFnRevertSetting, &RevertSetting_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.NewPlayerNamePopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::NewPlayerNamePopup ( class UGFxObject* Obj )
{
	static UFunction* pFnNewPlayerNamePopup = NULL;

	if ( ! pFnNewPlayerNamePopup )
		pFnNewPlayerNamePopup = (UFunction*) UObject::GObjObjects()->Data[ 54668 ];

	UGFxTrMenuMoviePlayer_execNewPlayerNamePopup_Parms NewPlayerNamePopup_Parms;
	NewPlayerNamePopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnNewPlayerNamePopup, &NewPlayerNamePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.GenericFailurePopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::GenericFailurePopup ( class UGFxObject* Obj )
{
	static UFunction* pFnGenericFailurePopup = NULL;

	if ( ! pFnGenericFailurePopup )
		pFnGenericFailurePopup = (UFunction*) UObject::GObjObjects()->Data[ 54665 ];

	UGFxTrMenuMoviePlayer_execGenericFailurePopup_Parms GenericFailurePopup_Parms;
	GenericFailurePopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnGenericFailurePopup, &GenericFailurePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.GenericFailure
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventGenericFailure ( struct FString Reason )
{
	static UFunction* pFnGenericFailure = NULL;

	if ( ! pFnGenericFailure )
		pFnGenericFailure = (UFunction*) UObject::GObjObjects()->Data[ 54662 ];

	UGFxTrMenuMoviePlayer_eventGenericFailure_Parms GenericFailure_Parms;
	memcpy ( &GenericFailure_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnGenericFailure, &GenericFailure_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PromoCodeFailedPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::PromoCodeFailedPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnPromoCodeFailedPopup = NULL;

	if ( ! pFnPromoCodeFailedPopup )
		pFnPromoCodeFailedPopup = (UFunction*) UObject::GObjObjects()->Data[ 54659 ];

	UGFxTrMenuMoviePlayer_execPromoCodeFailedPopup_Parms PromoCodeFailedPopup_Parms;
	PromoCodeFailedPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPromoCodeFailedPopup, &PromoCodeFailedPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PromoCodeFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventPromoCodeFailed ( struct FString Reason )
{
	static UFunction* pFnPromoCodeFailed = NULL;

	if ( ! pFnPromoCodeFailed )
		pFnPromoCodeFailed = (UFunction*) UObject::GObjObjects()->Data[ 54655 ];

	UGFxTrMenuMoviePlayer_eventPromoCodeFailed_Parms PromoCodeFailed_Parms;
	memcpy ( &PromoCodeFailed_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnPromoCodeFailed, &PromoCodeFailed_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PurchaseFailedPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::PurchaseFailedPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnPurchaseFailedPopup = NULL;

	if ( ! pFnPurchaseFailedPopup )
		pFnPurchaseFailedPopup = (UFunction*) UObject::GObjObjects()->Data[ 54644 ];

	UGFxTrMenuMoviePlayer_execPurchaseFailedPopup_Parms PurchaseFailedPopup_Parms;
	PurchaseFailedPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPurchaseFailedPopup, &PurchaseFailedPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PurchaseFailed
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 FailMessage                    ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventPurchaseFailed ( struct FString FailMessage )
{
	static UFunction* pFnPurchaseFailed = NULL;

	if ( ! pFnPurchaseFailed )
		pFnPurchaseFailed = (UFunction*) UObject::GObjObjects()->Data[ 54640 ];

	UGFxTrMenuMoviePlayer_eventPurchaseFailed_Parms PurchaseFailed_Parms;
	memcpy ( &PurchaseFailed_Parms.FailMessage, &FailMessage, 0xC );

	this->ProcessEvent ( pFnPurchaseFailed, &PurchaseFailed_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.AddFriendScoreboardPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::AddFriendScoreboardPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnAddFriendScoreboardPopup = NULL;

	if ( ! pFnAddFriendScoreboardPopup )
		pFnAddFriendScoreboardPopup = (UFunction*) UObject::GObjObjects()->Data[ 54629 ];

	UGFxTrMenuMoviePlayer_execAddFriendScoreboardPopup_Parms AddFriendScoreboardPopup_Parms;
	AddFriendScoreboardPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnAddFriendScoreboardPopup, &AddFriendScoreboardPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PasswordPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::PasswordPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnPasswordPopup = NULL;

	if ( ! pFnPasswordPopup )
		pFnPasswordPopup = (UFunction*) UObject::GObjObjects()->Data[ 54624 ];

	UGFxTrMenuMoviePlayer_execPasswordPopup_Parms PasswordPopup_Parms;
	PasswordPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPasswordPopup, &PasswordPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.WaitingForPurchaseReturn
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::WaitingForPurchaseReturn ( class UGFxObject* Obj )
{
	static UFunction* pFnWaitingForPurchaseReturn = NULL;

	if ( ! pFnWaitingForPurchaseReturn )
		pFnWaitingForPurchaseReturn = (UFunction*) UObject::GObjObjects()->Data[ 54619 ];

	UGFxTrMenuMoviePlayer_execWaitingForPurchaseReturn_Parms WaitingForPurchaseReturn_Parms;
	WaitingForPurchaseReturn_Parms.Obj = Obj;

	this->ProcessEvent ( pFnWaitingForPurchaseReturn, &WaitingForPurchaseReturn_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LoginFailedPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::LoginFailedPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnLoginFailedPopup = NULL;

	if ( ! pFnLoginFailedPopup )
		pFnLoginFailedPopup = (UFunction*) UObject::GObjObjects()->Data[ 54615 ];

	UGFxTrMenuMoviePlayer_execLoginFailedPopup_Parms LoginFailedPopup_Parms;
	LoginFailedPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnLoginFailedPopup, &LoginFailedPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.AFKKickPopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::AFKKickPopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnAFKKickPopupData = NULL;

	if ( ! pFnAFKKickPopupData )
		pFnAFKKickPopupData = (UFunction*) UObject::GObjObjects()->Data[ 54610 ];

	UGFxTrMenuMoviePlayer_execAFKKickPopupData_Parms AFKKickPopupData_Parms;
	AFKKickPopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnAFKKickPopupData, &AFKKickPopupData_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ServerDropPopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::ServerDropPopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnServerDropPopupData = NULL;

	if ( ! pFnServerDropPopupData )
		pFnServerDropPopupData = (UFunction*) UObject::GObjObjects()->Data[ 54606 ];

	UGFxTrMenuMoviePlayer_execServerDropPopupData_Parms ServerDropPopupData_Parms;
	ServerDropPopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnServerDropPopupData, &ServerDropPopupData_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LoginQueuePopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::LoginQueuePopupComplete ( int Action )
{
	static UFunction* pFnLoginQueuePopupComplete = NULL;

	if ( ! pFnLoginQueuePopupComplete )
		pFnLoginQueuePopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 54604 ];

	UGFxTrMenuMoviePlayer_execLoginQueuePopupComplete_Parms LoginQueuePopupComplete_Parms;
	LoginQueuePopupComplete_Parms.Action = Action;

	this->ProcessEvent ( pFnLoginQueuePopupComplete, &LoginQueuePopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LoginQueuePopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::LoginQueuePopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnLoginQueuePopupData = NULL;

	if ( ! pFnLoginQueuePopupData )
		pFnLoginQueuePopupData = (UFunction*) UObject::GObjObjects()->Data[ 54589 ];

	UGFxTrMenuMoviePlayer_execLoginQueuePopupData_Parms LoginQueuePopupData_Parms;
	LoginQueuePopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnLoginQueuePopupData, &LoginQueuePopupData_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.PlayerInLoginQueue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Estimate                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventPlayerInLoginQueue ( int Estimate )
{
	static UFunction* pFnPlayerInLoginQueue = NULL;

	if ( ! pFnPlayerInLoginQueue )
		pFnPlayerInLoginQueue = (UFunction*) UObject::GObjObjects()->Data[ 54586 ];

	UGFxTrMenuMoviePlayer_eventPlayerInLoginQueue_Parms PlayerInLoginQueue_Parms;
	PlayerInLoginQueue_Parms.Estimate = Estimate;

	this->ProcessEvent ( pFnPlayerInLoginQueue, &PlayerInLoginQueue_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.KickVoteFeedback
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bComplete                      ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventKickVoteFeedback ( unsigned long bComplete, struct FString Message )
{
	static UFunction* pFnKickVoteFeedback = NULL;

	if ( ! pFnKickVoteFeedback )
		pFnKickVoteFeedback = (UFunction*) UObject::GObjObjects()->Data[ 54581 ];

	UGFxTrMenuMoviePlayer_eventKickVoteFeedback_Parms KickVoteFeedback_Parms;
	KickVoteFeedback_Parms.bComplete = bComplete;
	memcpy ( &KickVoteFeedback_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnKickVoteFeedback, &KickVoteFeedback_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.FireAcquisitions
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventFireAcquisitions ( )
{
	static UFunction* pFnFireAcquisitions = NULL;

	if ( ! pFnFireAcquisitions )
		pFnFireAcquisitions = (UFunction*) UObject::GObjObjects()->Data[ 54577 ];

	UGFxTrMenuMoviePlayer_eventFireAcquisitions_Parms FireAcquisitions_Parms;

	this->ProcessEvent ( pFnFireAcquisitions, &FireAcquisitions_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DisplayAcquisitions
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventDisplayAcquisitions ( )
{
	static UFunction* pFnDisplayAcquisitions = NULL;

	if ( ! pFnDisplayAcquisitions )
		pFnDisplayAcquisitions = (UFunction*) UObject::GObjObjects()->Data[ 54575 ];

	UGFxTrMenuMoviePlayer_eventDisplayAcquisitions_Parms DisplayAcquisitions_Parms;

	this->ProcessEvent ( pFnDisplayAcquisitions, &DisplayAcquisitions_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ReadyAcquisition
// [0x00824002] 
// Parameters infos:
// struct FString                 TopName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BotName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  IconType                       ( CPF_Parm )
// int                            IconId                         ( CPF_OptionalParm | CPF_Parm )

void UGFxTrMenuMoviePlayer::ReadyAcquisition ( struct FString TopName, struct FString BotName, unsigned char IconType, int IconId )
{
	static UFunction* pFnReadyAcquisition = NULL;

	if ( ! pFnReadyAcquisition )
		pFnReadyAcquisition = (UFunction*) UObject::GObjObjects()->Data[ 54566 ];

	UGFxTrMenuMoviePlayer_execReadyAcquisition_Parms ReadyAcquisition_Parms;
	memcpy ( &ReadyAcquisition_Parms.TopName, &TopName, 0xC );
	memcpy ( &ReadyAcquisition_Parms.BotName, &BotName, 0xC );
	ReadyAcquisition_Parms.IconType = IconType;
	ReadyAcquisition_Parms.IconId = IconId;

	this->ProcessEvent ( pFnReadyAcquisition, &ReadyAcquisition_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CheckVIPForLogin
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::CheckVIPForLogin ( )
{
	static UFunction* pFnCheckVIPForLogin = NULL;

	if ( ! pFnCheckVIPForLogin )
		pFnCheckVIPForLogin = (UFunction*) UObject::GObjObjects()->Data[ 54565 ];

	UGFxTrMenuMoviePlayer_execCheckVIPForLogin_Parms CheckVIPForLogin_Parms;

	this->ProcessEvent ( pFnCheckVIPForLogin, &CheckVIPForLogin_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ClaimedPromotion
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 PromoName                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventClaimedPromotion ( struct FString PromoName )
{
	static UFunction* pFnClaimedPromotion = NULL;

	if ( ! pFnClaimedPromotion )
		pFnClaimedPromotion = (UFunction*) UObject::GObjObjects()->Data[ 54562 ];

	UGFxTrMenuMoviePlayer_eventClaimedPromotion_Parms ClaimedPromotion_Parms;
	memcpy ( &ClaimedPromotion_Parms.PromoName, &PromoName, 0xC );

	this->ProcessEvent ( pFnClaimedPromotion, &ClaimedPromotion_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.WinOfTheDay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventWinOfTheDay ( )
{
	static UFunction* pFnWinOfTheDay = NULL;

	if ( ! pFnWinOfTheDay )
		pFnWinOfTheDay = (UFunction*) UObject::GObjObjects()->Data[ 54560 ];

	UGFxTrMenuMoviePlayer_eventWinOfTheDay_Parms WinOfTheDay_Parms;

	this->ProcessEvent ( pFnWinOfTheDay, &WinOfTheDay_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedSkill
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            SkillId                        ( CPF_Parm )
// int                            ParentId                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventUnlockedSkill ( int SkillId, int ParentId )
{
	static UFunction* pFnUnlockedSkill = NULL;

	if ( ! pFnUnlockedSkill )
		pFnUnlockedSkill = (UFunction*) UObject::GObjObjects()->Data[ 54550 ];

	UGFxTrMenuMoviePlayer_eventUnlockedSkill_Parms UnlockedSkill_Parms;
	UnlockedSkill_Parms.SkillId = SkillId;
	UnlockedSkill_Parms.ParentId = ParentId;

	this->ProcessEvent ( pFnUnlockedSkill, &UnlockedSkill_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedClanTag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bRemoved                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventUnlockedClanTag ( unsigned long bRemoved )
{
	static UFunction* pFnUnlockedClanTag = NULL;

	if ( ! pFnUnlockedClanTag )
		pFnUnlockedClanTag = (UFunction*) UObject::GObjObjects()->Data[ 54546 ];

	UGFxTrMenuMoviePlayer_eventUnlockedClanTag_Parms UnlockedClanTag_Parms;
	UnlockedClanTag_Parms.bRemoved = bRemoved;

	this->ProcessEvent ( pFnUnlockedClanTag, &UnlockedClanTag_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedServerTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventUnlockedServerTime ( )
{
	static UFunction* pFnUnlockedServerTime = NULL;

	if ( ! pFnUnlockedServerTime )
		pFnUnlockedServerTime = (UFunction*) UObject::GObjObjects()->Data[ 54542 ];

	UGFxTrMenuMoviePlayer_eventUnlockedServerTime_Parms UnlockedServerTime_Parms;

	this->ProcessEvent ( pFnUnlockedServerTime, &UnlockedServerTime_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedVIP
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventUnlockedVIP ( )
{
	static UFunction* pFnUnlockedVIP = NULL;

	if ( ! pFnUnlockedVIP )
		pFnUnlockedVIP = (UFunction*) UObject::GObjObjects()->Data[ 54540 ];

	UGFxTrMenuMoviePlayer_eventUnlockedVIP_Parms UnlockedVIP_Parms;

	this->ProcessEvent ( pFnUnlockedVIP, &UnlockedVIP_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedNameChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventUnlockedNameChange ( struct FString Description )
{
	static UFunction* pFnUnlockedNameChange = NULL;

	if ( ! pFnUnlockedNameChange )
		pFnUnlockedNameChange = (UFunction*) UObject::GObjObjects()->Data[ 54537 ];

	UGFxTrMenuMoviePlayer_eventUnlockedNameChange_Parms UnlockedNameChange_Parms;
	memcpy ( &UnlockedNameChange_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnUnlockedNameChange, &UnlockedNameChange_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedBadge
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 RankStr                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            Id                             ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventUnlockedBadge ( struct FString Description, struct FString RankStr, int Id )
{
	static UFunction* pFnUnlockedBadge = NULL;

	if ( ! pFnUnlockedBadge )
		pFnUnlockedBadge = (UFunction*) UObject::GObjObjects()->Data[ 54533 ];

	UGFxTrMenuMoviePlayer_eventUnlockedBadge_Parms UnlockedBadge_Parms;
	memcpy ( &UnlockedBadge_Parms.Description, &Description, 0xC );
	memcpy ( &UnlockedBadge_Parms.RankStr, &RankStr, 0xC );
	UnlockedBadge_Parms.Id = Id;

	this->ProcessEvent ( pFnUnlockedBadge, &UnlockedBadge_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedBooster
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventUnlockedBooster ( struct FString Description )
{
	static UFunction* pFnUnlockedBooster = NULL;

	if ( ! pFnUnlockedBooster )
		pFnUnlockedBooster = (UFunction*) UObject::GObjObjects()->Data[ 54531 ];

	UGFxTrMenuMoviePlayer_eventUnlockedBooster_Parms UnlockedBooster_Parms;
	memcpy ( &UnlockedBooster_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnUnlockedBooster, &UnlockedBooster_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedXP
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventUnlockedXP ( struct FString Description )
{
	static UFunction* pFnUnlockedXP = NULL;

	if ( ! pFnUnlockedXP )
		pFnUnlockedXP = (UFunction*) UObject::GObjObjects()->Data[ 54529 ];

	UGFxTrMenuMoviePlayer_eventUnlockedXP_Parms UnlockedXP_Parms;
	memcpy ( &UnlockedXP_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnUnlockedXP, &UnlockedXP_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedGold
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventUnlockedGold ( struct FString Description )
{
	static UFunction* pFnUnlockedGold = NULL;

	if ( ! pFnUnlockedGold )
		pFnUnlockedGold = (UFunction*) UObject::GObjObjects()->Data[ 54526 ];

	UGFxTrMenuMoviePlayer_eventUnlockedGold_Parms UnlockedGold_Parms;
	memcpy ( &UnlockedGold_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnUnlockedGold, &UnlockedGold_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.UnlockedItem
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            ItemId                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventUnlockedItem ( struct FString Description, int ItemId )
{
	static UFunction* pFnUnlockedItem = NULL;

	if ( ! pFnUnlockedItem )
		pFnUnlockedItem = (UFunction*) UObject::GObjObjects()->Data[ 54511 ];

	UGFxTrMenuMoviePlayer_eventUnlockedItem_Parms UnlockedItem_Parms;
	memcpy ( &UnlockedItem_Parms.Description, &Description, 0xC );
	UnlockedItem_Parms.ItemId = ItemId;

	this->ProcessEvent ( pFnUnlockedItem, &UnlockedItem_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.EndHotkeyBlock
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventEndHotkeyBlock ( )
{
	static UFunction* pFnEndHotkeyBlock = NULL;

	if ( ! pFnEndHotkeyBlock )
		pFnEndHotkeyBlock = (UFunction*) UObject::GObjObjects()->Data[ 54510 ];

	UGFxTrMenuMoviePlayer_eventEndHotkeyBlock_Parms EndHotkeyBlock_Parms;

	this->ProcessEvent ( pFnEndHotkeyBlock, &EndHotkeyBlock_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StartHotkeyBlock
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::StartHotkeyBlock ( )
{
	static UFunction* pFnStartHotkeyBlock = NULL;

	if ( ! pFnStartHotkeyBlock )
		pFnStartHotkeyBlock = (UFunction*) UObject::GObjObjects()->Data[ 54508 ];

	UGFxTrMenuMoviePlayer_execStartHotkeyBlock_Parms StartHotkeyBlock_Parms;

	this->ProcessEvent ( pFnStartHotkeyBlock, &StartHotkeyBlock_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetPlayerHUD
// [0x00020002] 
// Parameters infos:
// class ATrHUD*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrHUD* UGFxTrMenuMoviePlayer::GetPlayerHUD ( )
{
	static UFunction* pFnGetPlayerHUD = NULL;

	if ( ! pFnGetPlayerHUD )
		pFnGetPlayerHUD = (UFunction*) UObject::GObjObjects()->Data[ 54505 ];

	UGFxTrMenuMoviePlayer_execGetPlayerHUD_Parms GetPlayerHUD_Parms;

	this->ProcessEvent ( pFnGetPlayerHUD, &GetPlayerHUD_Parms, NULL );

	return GetPlayerHUD_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.PlayerNeedsClass
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::PlayerNeedsClass ( )
{
	static UFunction* pFnPlayerNeedsClass = NULL;

	if ( ! pFnPlayerNeedsClass )
		pFnPlayerNeedsClass = (UFunction*) UObject::GObjObjects()->Data[ 54501 ];

	UGFxTrMenuMoviePlayer_execPlayerNeedsClass_Parms PlayerNeedsClass_Parms;

	this->ProcessEvent ( pFnPlayerNeedsClass, &PlayerNeedsClass_Parms, NULL );

	return PlayerNeedsClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.PlayerNeedsTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::PlayerNeedsTeam ( )
{
	static UFunction* pFnPlayerNeedsTeam = NULL;

	if ( ! pFnPlayerNeedsTeam )
		pFnPlayerNeedsTeam = (UFunction*) UObject::GObjObjects()->Data[ 54497 ];

	UGFxTrMenuMoviePlayer_execPlayerNeedsTeam_Parms PlayerNeedsTeam_Parms;

	this->ProcessEvent ( pFnPlayerNeedsTeam, &PlayerNeedsTeam_Parms, NULL );

	return PlayerNeedsTeam_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.TeamSelectOpen
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::TeamSelectOpen ( )
{
	static UFunction* pFnTeamSelectOpen = NULL;

	if ( ! pFnTeamSelectOpen )
		pFnTeamSelectOpen = (UFunction*) UObject::GObjObjects()->Data[ 54494 ];

	UGFxTrMenuMoviePlayer_execTeamSelectOpen_Parms TeamSelectOpen_Parms;

	this->ProcessEvent ( pFnTeamSelectOpen, &TeamSelectOpen_Parms, NULL );

	return TeamSelectOpen_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.TeamSelectActive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::TeamSelectActive ( )
{
	static UFunction* pFnTeamSelectActive = NULL;

	if ( ! pFnTeamSelectActive )
		pFnTeamSelectActive = (UFunction*) UObject::GObjObjects()->Data[ 54490 ];

	UGFxTrMenuMoviePlayer_execTeamSelectActive_Parms TeamSelectActive_Parms;

	this->ProcessEvent ( pFnTeamSelectActive, &TeamSelectActive_Parms, NULL );

	return TeamSelectActive_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.KeyPressCaptured
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bReleased                      ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::eventKeyPressCaptured ( struct FString KeyName, unsigned long bReleased )
{
	static UFunction* pFnKeyPressCaptured = NULL;

	if ( ! pFnKeyPressCaptured )
		pFnKeyPressCaptured = (UFunction*) UObject::GObjObjects()->Data[ 54466 ];

	UGFxTrMenuMoviePlayer_eventKeyPressCaptured_Parms KeyPressCaptured_Parms;
	memcpy ( &KeyPressCaptured_Parms.KeyName, &KeyName, 0xC );
	KeyPressCaptured_Parms.bReleased = bReleased;

	this->ProcessEvent ( pFnKeyPressCaptured, &KeyPressCaptured_Parms, NULL );

	return KeyPressCaptured_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.KeyBindCaptured
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventKeyBindCaptured ( struct FString KeyName )
{
	static UFunction* pFnKeyBindCaptured = NULL;

	if ( ! pFnKeyBindCaptured )
		pFnKeyBindCaptured = (UFunction*) UObject::GObjObjects()->Data[ 54463 ];

	UGFxTrMenuMoviePlayer_eventKeyBindCaptured_Parms KeyBindCaptured_Parms;
	memcpy ( &KeyBindCaptured_Parms.KeyName, &KeyName, 0xC );

	this->ProcessEvent ( pFnKeyBindCaptured, &KeyBindCaptured_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.RequestPaperDoll
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::eventRequestPaperDoll ( )
{
	static UFunction* pFnRequestPaperDoll = NULL;

	if ( ! pFnRequestPaperDoll )
		pFnRequestPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 54461 ];

	UGFxTrMenuMoviePlayer_eventRequestPaperDoll_Parms RequestPaperDoll_Parms;

	this->ProcessEvent ( pFnRequestPaperDoll, &RequestPaperDoll_Parms, NULL );

	return RequestPaperDoll_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.LoadingTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bStart                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventLoadingTimer ( unsigned long bStart )
{
	static UFunction* pFnLoadingTimer = NULL;

	if ( ! pFnLoadingTimer )
		pFnLoadingTimer = (UFunction*) UObject::GObjObjects()->Data[ 54457 ];

	UGFxTrMenuMoviePlayer_eventLoadingTimer_Parms LoadingTimer_Parms;
	LoadingTimer_Parms.bStart = bStart;

	this->ProcessEvent ( pFnLoadingTimer, &LoadingTimer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetCountdownTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventSetCountdownTimer ( int Seconds )
{
	static UFunction* pFnSetCountdownTimer = NULL;

	if ( ! pFnSetCountdownTimer )
		pFnSetCountdownTimer = (UFunction*) UObject::GObjObjects()->Data[ 54454 ];

	UGFxTrMenuMoviePlayer_eventSetCountdownTimer_Parms SetCountdownTimer_Parms;
	SetCountdownTimer_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnSetCountdownTimer, &SetCountdownTimer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ChatMessageReceived
// [0x00020002] 
// Parameters infos:
// int                            Channel                        ( CPF_Parm )
// struct FString                 Sender                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ChatMessageReceived ( int Channel, struct FString Sender, struct FString Message )
{
	static UFunction* pFnChatMessageReceived = NULL;

	if ( ! pFnChatMessageReceived )
		pFnChatMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 54449 ];

	UGFxTrMenuMoviePlayer_execChatMessageReceived_Parms ChatMessageReceived_Parms;
	ChatMessageReceived_Parms.Channel = Channel;
	memcpy ( &ChatMessageReceived_Parms.Sender, &Sender, 0xC );
	memcpy ( &ChatMessageReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnChatMessageReceived, &ChatMessageReceived_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HideMovie
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventHideMovie ( )
{
	static UFunction* pFnHideMovie = NULL;

	if ( ! pFnHideMovie )
		pFnHideMovie = (UFunction*) UObject::GObjObjects()->Data[ 54446 ];

	UGFxTrMenuMoviePlayer_eventHideMovie_Parms HideMovie_Parms;

	this->ProcessEvent ( pFnHideMovie, &HideMovie_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowMovie
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bFocus                         ( CPF_OptionalParm | CPF_Parm )

void UGFxTrMenuMoviePlayer::eventShowMovie ( unsigned long bFocus )
{
	static UFunction* pFnShowMovie = NULL;

	if ( ! pFnShowMovie )
		pFnShowMovie = (UFunction*) UObject::GObjObjects()->Data[ 54442 ];

	UGFxTrMenuMoviePlayer_eventShowMovie_Parms ShowMovie_Parms;
	ShowMovie_Parms.bFocus = bFocus;

	this->ProcessEvent ( pFnShowMovie, &ShowMovie_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetViewMode
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrMenuMoviePlayer::GetViewMode ( )
{
	static UFunction* pFnGetViewMode = NULL;

	if ( ! pFnGetViewMode )
		pFnGetViewMode = (UFunction*) UObject::GObjObjects()->Data[ 54440 ];

	UGFxTrMenuMoviePlayer_execGetViewMode_Parms GetViewMode_Parms;

	this->ProcessEvent ( pFnGetViewMode, &GetViewMode_Parms, NULL );

	return GetViewMode_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetPlatform
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrMenuMoviePlayer::GetPlatform ( )
{
	static UFunction* pFnGetPlatform = NULL;

	if ( ! pFnGetPlatform )
		pFnGetPlatform = (UFunction*) UObject::GObjObjects()->Data[ 54438 ];

	UGFxTrMenuMoviePlayer_execGetPlatform_Parms GetPlatform_Parms;

	this->ProcessEvent ( pFnGetPlatform, &GetPlatform_Parms, NULL );

	return GetPlatform_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.RestorePlayerHUD
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::RestorePlayerHUD ( )
{
	static UFunction* pFnRestorePlayerHUD = NULL;

	if ( ! pFnRestorePlayerHUD )
		pFnRestorePlayerHUD = (UFunction*) UObject::GObjObjects()->Data[ 54435 ];

	UGFxTrMenuMoviePlayer_execRestorePlayerHUD_Parms RestorePlayerHUD_Parms;

	this->ProcessEvent ( pFnRestorePlayerHUD, &RestorePlayerHUD_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 54430 ];

	UGFxTrMenuMoviePlayer_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetRankFromXP
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            XP                             ( CPF_Parm )

class UClass* UGFxTrMenuMoviePlayer::GetRankFromXP ( int XP )
{
	static UFunction* pFnGetRankFromXP = NULL;

	if ( ! pFnGetRankFromXP )
		pFnGetRankFromXP = (UFunction*) UObject::GObjObjects()->Data[ 54424 ];

	UGFxTrMenuMoviePlayer_execGetRankFromXP_Parms GetRankFromXP_Parms;
	GetRankFromXP_Parms.XP = XP;

	this->ProcessEvent ( pFnGetRankFromXP, &GetRankFromXP_Parms, NULL );

	return GetRankFromXP_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetBoostLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Hours                          ( CPF_Parm )

struct FString UGFxTrMenuMoviePlayer::GetBoostLabel ( int Hours )
{
	static UFunction* pFnGetBoostLabel = NULL;

	if ( ! pFnGetBoostLabel )
		pFnGetBoostLabel = (UFunction*) UObject::GObjObjects()->Data[ 54415 ];

	UGFxTrMenuMoviePlayer_execGetBoostLabel_Parms GetBoostLabel_Parms;
	GetBoostLabel_Parms.Hours = Hours;

	this->ProcessEvent ( pFnGetBoostLabel, &GetBoostLabel_Parms, NULL );

	return GetBoostLabel_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.SendProfileData
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::SendProfileData ( )
{
	static UFunction* pFnSendProfileData = NULL;

	if ( ! pFnSendProfileData )
		pFnSendProfileData = (UFunction*) UObject::GObjObjects()->Data[ 54400 ];

	UGFxTrMenuMoviePlayer_execSendProfileData_Parms SendProfileData_Parms;

	this->ProcessEvent ( pFnSendProfileData, &SendProfileData_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.FillProfileData
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventFillProfileData ( )
{
	static UFunction* pFnFillProfileData = NULL;

	if ( ! pFnFillProfileData )
		pFnFillProfileData = (UFunction*) UObject::GObjObjects()->Data[ 54390 ];

	UGFxTrMenuMoviePlayer_eventFillProfileData_Parms FillProfileData_Parms;

	this->ProcessEvent ( pFnFillProfileData, &FillProfileData_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetUserSelectedClass
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrMenuMoviePlayer::eventGetUserSelectedClass ( )
{
	static UFunction* pFnGetUserSelectedClass = NULL;

	if ( ! pFnGetUserSelectedClass )
		pFnGetUserSelectedClass = (UFunction*) UObject::GObjObjects()->Data[ 54387 ];

	UGFxTrMenuMoviePlayer_eventGetUserSelectedClass_Parms GetUserSelectedClass_Parms;

	this->ProcessEvent ( pFnGetUserSelectedClass, &GetUserSelectedClass_Parms, NULL );

	return GetUserSelectedClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.PlayerNameNotAllowed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bTaken                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventPlayerNameNotAllowed ( unsigned long bTaken )
{
	static UFunction* pFnPlayerNameNotAllowed = NULL;

	if ( ! pFnPlayerNameNotAllowed )
		pFnPlayerNameNotAllowed = (UFunction*) UObject::GObjObjects()->Data[ 54383 ];

	UGFxTrMenuMoviePlayer_eventPlayerNameNotAllowed_Parms PlayerNameNotAllowed_Parms;
	PlayerNameNotAllowed_Parms.bTaken = bTaken;

	this->ProcessEvent ( pFnPlayerNameNotAllowed, &PlayerNameNotAllowed_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CreateNewPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventCreateNewPlayer ( )
{
	static UFunction* pFnCreateNewPlayer = NULL;

	if ( ! pFnCreateNewPlayer )
		pFnCreateNewPlayer = (UFunction*) UObject::GObjObjects()->Data[ 54381 ];

	UGFxTrMenuMoviePlayer_eventCreateNewPlayer_Parms CreateNewPlayer_Parms;

	this->ProcessEvent ( pFnCreateNewPlayer, &CreateNewPlayer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DisplayEULA
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventDisplayEULA ( )
{
	static UFunction* pFnDisplayEULA = NULL;

	if ( ! pFnDisplayEULA )
		pFnDisplayEULA = (UFunction*) UObject::GObjObjects()->Data[ 54375 ];

	UGFxTrMenuMoviePlayer_eventDisplayEULA_Parms DisplayEULA_Parms;

	this->ProcessEvent ( pFnDisplayEULA, &DisplayEULA_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ExitPopup
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::ExitPopup ( )
{
	static UFunction* pFnExitPopup = NULL;

	if ( ! pFnExitPopup )
		pFnExitPopup = (UFunction*) UObject::GObjObjects()->Data[ 54373 ];

	UGFxTrMenuMoviePlayer_execExitPopup_Parms ExitPopup_Parms;

	this->ProcessEvent ( pFnExitPopup, &ExitPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ProfileUpdated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventProfileUpdated ( )
{
	static UFunction* pFnProfileUpdated = NULL;

	if ( ! pFnProfileUpdated )
		pFnProfileUpdated = (UFunction*) UObject::GObjObjects()->Data[ 54371 ];

	UGFxTrMenuMoviePlayer_eventProfileUpdated_Parms ProfileUpdated_Parms;

	this->ProcessEvent ( pFnProfileUpdated, &ProfileUpdated_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CheckRibbons
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UGFxTrMenuMoviePlayer::CheckRibbons ( unsigned long bForce )
{
	static UFunction* pFnCheckRibbons = NULL;

	if ( ! pFnCheckRibbons )
		pFnCheckRibbons = (UFunction*) UObject::GObjObjects()->Data[ 54368 ];

	UGFxTrMenuMoviePlayer_execCheckRibbons_Parms CheckRibbons_Parms;
	CheckRibbons_Parms.bForce = bForce;

	this->ProcessEvent ( pFnCheckRibbons, &CheckRibbons_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.JoinRequiresPasswordComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::JoinRequiresPasswordComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnJoinRequiresPasswordComplete = NULL;

	if ( ! pFnJoinRequiresPasswordComplete )
		pFnJoinRequiresPasswordComplete = (UFunction*) UObject::GObjObjects()->Data[ 54364 ];

	UGFxTrMenuMoviePlayer_execJoinRequiresPasswordComplete_Parms JoinRequiresPasswordComplete_Parms;
	JoinRequiresPasswordComplete_Parms.Action = Action;
	memcpy ( &JoinRequiresPasswordComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnJoinRequiresPasswordComplete, &JoinRequiresPasswordComplete_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.JoinRequiresPassword
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventJoinRequiresPassword ( )
{
	static UFunction* pFnJoinRequiresPassword = NULL;

	if ( ! pFnJoinRequiresPassword )
		pFnJoinRequiresPassword = (UFunction*) UObject::GObjObjects()->Data[ 54362 ];

	UGFxTrMenuMoviePlayer_eventJoinRequiresPassword_Parms JoinRequiresPassword_Parms;

	this->ProcessEvent ( pFnJoinRequiresPassword, &JoinRequiresPassword_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DisplayJoinFailed
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DisplayJoinFailed ( class UGFxObject* Obj )
{
	static UFunction* pFnDisplayJoinFailed = NULL;

	if ( ! pFnDisplayJoinFailed )
		pFnDisplayJoinFailed = (UFunction*) UObject::GObjObjects()->Data[ 54358 ];

	UGFxTrMenuMoviePlayer_execDisplayJoinFailed_Parms DisplayJoinFailed_Parms;
	DisplayJoinFailed_Parms.Obj = Obj;

	this->ProcessEvent ( pFnDisplayJoinFailed, &DisplayJoinFailed_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.JoinFailed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Error                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::eventJoinFailed ( struct FString Error )
{
	static UFunction* pFnJoinFailed = NULL;

	if ( ! pFnJoinFailed )
		pFnJoinFailed = (UFunction*) UObject::GObjObjects()->Data[ 54354 ];

	UGFxTrMenuMoviePlayer_eventJoinFailed_Parms JoinFailed_Parms;
	memcpy ( &JoinFailed_Parms.Error, &Error, 0xC );

	this->ProcessEvent ( pFnJoinFailed, &JoinFailed_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SwapModel
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSwapModel ( )
{
	static UFunction* pFnSwapModel = NULL;

	if ( ! pFnSwapModel )
		pFnSwapModel = (UFunction*) UObject::GObjObjects()->Data[ 54353 ];

	UGFxTrMenuMoviePlayer_eventSwapModel_Parms SwapModel_Parms;

	this->ProcessEvent ( pFnSwapModel, &SwapModel_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.RefreshPage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventRefreshPage ( )
{
	static UFunction* pFnRefreshPage = NULL;

	if ( ! pFnRefreshPage )
		pFnRefreshPage = (UFunction*) UObject::GObjObjects()->Data[ 54352 ];

	UGFxTrMenuMoviePlayer_eventRefreshPage_Parms RefreshPage_Parms;

	this->ProcessEvent ( pFnRefreshPage, &RefreshPage_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.EquipmentChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventEquipmentChanged ( )
{
	static UFunction* pFnEquipmentChanged = NULL;

	if ( ! pFnEquipmentChanged )
		pFnEquipmentChanged = (UFunction*) UObject::GObjObjects()->Data[ 54341 ];

	UGFxTrMenuMoviePlayer_eventEquipmentChanged_Parms EquipmentChanged_Parms;

	this->ProcessEvent ( pFnEquipmentChanged, &EquipmentChanged_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.EquipmentLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventEquipmentLoaded ( )
{
	static UFunction* pFnEquipmentLoaded = NULL;

	if ( ! pFnEquipmentLoaded )
		pFnEquipmentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 54339 ];

	UGFxTrMenuMoviePlayer_eventEquipmentLoaded_Parms EquipmentLoaded_Parms;

	this->ProcessEvent ( pFnEquipmentLoaded, &EquipmentLoaded_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SendBack
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSendBack ( )
{
	static UFunction* pFnSendBack = NULL;

	if ( ! pFnSendBack )
		pFnSendBack = (UFunction*) UObject::GObjObjects()->Data[ 54331 ];

	UGFxTrMenuMoviePlayer_eventSendBack_Parms SendBack_Parms;

	this->ProcessEvent ( pFnSendBack, &SendBack_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.IsLoadComplete
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::eventIsLoadComplete ( )
{
	static UFunction* pFnIsLoadComplete = NULL;

	if ( ! pFnIsLoadComplete )
		pFnIsLoadComplete = (UFunction*) UObject::GObjObjects()->Data[ 54325 ];

	UGFxTrMenuMoviePlayer_eventIsLoadComplete_Parms IsLoadComplete_Parms;

	this->ProcessEvent ( pFnIsLoadComplete, &IsLoadComplete_Parms, NULL );

	return IsLoadComplete_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.OnProfileLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bShowEula                      ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventOnProfileLoaded ( unsigned long bShowEula )
{
	static UFunction* pFnOnProfileLoaded = NULL;

	if ( ! pFnOnProfileLoaded )
		pFnOnProfileLoaded = (UFunction*) UObject::GObjObjects()->Data[ 54318 ];

	UGFxTrMenuMoviePlayer_eventOnProfileLoaded_Parms OnProfileLoaded_Parms;
	OnProfileLoaded_Parms.bShowEula = bShowEula;

	this->ProcessEvent ( pFnOnProfileLoaded, &OnProfileLoaded_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.AlienMenu
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::AlienMenu ( )
{
	static UFunction* pFnAlienMenu = NULL;

	if ( ! pFnAlienMenu )
		pFnAlienMenu = (UFunction*) UObject::GObjObjects()->Data[ 54316 ];

	UGFxTrMenuMoviePlayer_execAlienMenu_Parms AlienMenu_Parms;

	this->ProcessEvent ( pFnAlienMenu, &AlienMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SendPlayerLogin
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  Success                        ( CPF_Parm )
// unsigned long                  bNeedEULA                      ( CPF_OptionalParm | CPF_Parm )

void UGFxTrMenuMoviePlayer::eventSendPlayerLogin ( struct FString PlayerName, struct FString Reason, unsigned long Success, unsigned long bNeedEULA )
{
	static UFunction* pFnSendPlayerLogin = NULL;

	if ( ! pFnSendPlayerLogin )
		pFnSendPlayerLogin = (UFunction*) UObject::GObjObjects()->Data[ 54301 ];

	UGFxTrMenuMoviePlayer_eventSendPlayerLogin_Parms SendPlayerLogin_Parms;
	memcpy ( &SendPlayerLogin_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &SendPlayerLogin_Parms.Reason, &Reason, 0xC );
	SendPlayerLogin_Parms.Success = Success;
	SendPlayerLogin_Parms.bNeedEULA = bNeedEULA;

	this->ProcessEvent ( pFnSendPlayerLogin, &SendPlayerLogin_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.Quit
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::Quit ( )
{
	static UFunction* pFnQuit = NULL;

	if ( ! pFnQuit )
		pFnQuit = (UFunction*) UObject::GObjObjects()->Data[ 54299 ];

	UGFxTrMenuMoviePlayer_execQuit_Parms Quit_Parms;

	this->ProcessEvent ( pFnQuit, &Quit_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LeaveMatchPopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::LeaveMatchPopupComplete ( int Action )
{
	static UFunction* pFnLeaveMatchPopupComplete = NULL;

	if ( ! pFnLeaveMatchPopupComplete )
		pFnLeaveMatchPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 54297 ];

	UGFxTrMenuMoviePlayer_execLeaveMatchPopupComplete_Parms LeaveMatchPopupComplete_Parms;
	LeaveMatchPopupComplete_Parms.Action = Action;

	this->ProcessEvent ( pFnLeaveMatchPopupComplete, &LeaveMatchPopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.QuitGamePopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )

void UGFxTrMenuMoviePlayer::QuitGamePopupComplete ( int Action )
{
	static UFunction* pFnQuitGamePopupComplete = NULL;

	if ( ! pFnQuitGamePopupComplete )
		pFnQuitGamePopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 54295 ];

	UGFxTrMenuMoviePlayer_execQuitGamePopupComplete_Parms QuitGamePopupComplete_Parms;
	QuitGamePopupComplete_Parms.Action = Action;

	this->ProcessEvent ( pFnQuitGamePopupComplete, &QuitGamePopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LeaveMatchPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::LeaveMatchPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnLeaveMatchPopup = NULL;

	if ( ! pFnLeaveMatchPopup )
		pFnLeaveMatchPopup = (UFunction*) UObject::GObjObjects()->Data[ 54289 ];

	UGFxTrMenuMoviePlayer_execLeaveMatchPopup_Parms LeaveMatchPopup_Parms;
	LeaveMatchPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnLeaveMatchPopup, &LeaveMatchPopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.QuitGamePopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::QuitGamePopup ( class UGFxObject* Obj )
{
	static UFunction* pFnQuitGamePopup = NULL;

	if ( ! pFnQuitGamePopup )
		pFnQuitGamePopup = (UFunction*) UObject::GObjObjects()->Data[ 54283 ];

	UGFxTrMenuMoviePlayer_execQuitGamePopup_Parms QuitGamePopup_Parms;
	QuitGamePopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnQuitGamePopup, &QuitGamePopup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.LeaveMatch
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::LeaveMatch ( )
{
	static UFunction* pFnLeaveMatch = NULL;

	if ( ! pFnLeaveMatch )
		pFnLeaveMatch = (UFunction*) UObject::GObjObjects()->Data[ 54281 ];

	UGFxTrMenuMoviePlayer_execLeaveMatch_Parms LeaveMatch_Parms;

	this->ProcessEvent ( pFnLeaveMatch, &LeaveMatch_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.QuitGame
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::QuitGame ( )
{
	static UFunction* pFnQuitGame = NULL;

	if ( ! pFnQuitGame )
		pFnQuitGame = (UFunction*) UObject::GObjObjects()->Data[ 54279 ];

	UGFxTrMenuMoviePlayer_execQuitGame_Parms QuitGame_Parms;

	this->ProcessEvent ( pFnQuitGame, &QuitGame_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.OpenSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventOpenSettings ( )
{
	static UFunction* pFnOpenSettings = NULL;

	if ( ! pFnOpenSettings )
		pFnOpenSettings = (UFunction*) UObject::GObjObjects()->Data[ 54278 ];

	UGFxTrMenuMoviePlayer_eventOpenSettings_Parms OpenSettings_Parms;

	this->ProcessEvent ( pFnOpenSettings, &OpenSettings_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.OpenFriends
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventOpenFriends ( )
{
	static UFunction* pFnOpenFriends = NULL;

	if ( ! pFnOpenFriends )
		pFnOpenFriends = (UFunction*) UObject::GObjObjects()->Data[ 54277 ];

	UGFxTrMenuMoviePlayer_eventOpenFriends_Parms OpenFriends_Parms;

	this->ProcessEvent ( pFnOpenFriends, &OpenFriends_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.OpenClasses
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventOpenClasses ( )
{
	static UFunction* pFnOpenClasses = NULL;

	if ( ! pFnOpenClasses )
		pFnOpenClasses = (UFunction*) UObject::GObjObjects()->Data[ 54276 ];

	UGFxTrMenuMoviePlayer_eventOpenClasses_Parms OpenClasses_Parms;

	this->ProcessEvent ( pFnOpenClasses, &OpenClasses_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.OpenMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventOpenMenu ( )
{
	static UFunction* pFnOpenMenu = NULL;

	if ( ! pFnOpenMenu )
		pFnOpenMenu = (UFunction*) UObject::GObjObjects()->Data[ 54275 ];

	UGFxTrMenuMoviePlayer_eventOpenMenu_Parms OpenMenu_Parms;

	this->ProcessEvent ( pFnOpenMenu, &OpenMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CloseClasses
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::CloseClasses ( )
{
	static UFunction* pFnCloseClasses = NULL;

	if ( ! pFnCloseClasses )
		pFnCloseClasses = (UFunction*) UObject::GObjObjects()->Data[ 54274 ];

	UGFxTrMenuMoviePlayer_execCloseClasses_Parms CloseClasses_Parms;

	this->ProcessEvent ( pFnCloseClasses, &CloseClasses_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.Escape
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventEscape ( )
{
	static UFunction* pFnEscape = NULL;

	if ( ! pFnEscape )
		pFnEscape = (UFunction*) UObject::GObjObjects()->Data[ 54273 ];

	UGFxTrMenuMoviePlayer_eventEscape_Parms Escape_Parms;

	this->ProcessEvent ( pFnEscape, &Escape_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowSummary
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventShowSummary ( )
{
	static UFunction* pFnShowSummary = NULL;

	if ( ! pFnShowSummary )
		pFnShowSummary = (UFunction*) UObject::GObjObjects()->Data[ 54271 ];

	UGFxTrMenuMoviePlayer_eventShowSummary_Parms ShowSummary_Parms;

	this->ProcessEvent ( pFnShowSummary, &ShowSummary_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetEndOfMatch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSetEndOfMatch ( )
{
	static UFunction* pFnSetEndOfMatch = NULL;

	if ( ! pFnSetEndOfMatch )
		pFnSetEndOfMatch = (UFunction*) UObject::GObjObjects()->Data[ 54270 ];

	UGFxTrMenuMoviePlayer_eventSetEndOfMatch_Parms SetEndOfMatch_Parms;

	this->ProcessEvent ( pFnSetEndOfMatch, &SetEndOfMatch_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPlayerInGame
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSetPlayerInGame ( )
{
	static UFunction* pFnSetPlayerInGame = NULL;

	if ( ! pFnSetPlayerInGame )
		pFnSetPlayerInGame = (UFunction*) UObject::GObjObjects()->Data[ 54268 ];

	UGFxTrMenuMoviePlayer_eventSetPlayerInGame_Parms SetPlayerInGame_Parms;

	this->ProcessEvent ( pFnSetPlayerInGame, &SetPlayerInGame_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPlayerLoading
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSetPlayerLoading ( )
{
	static UFunction* pFnSetPlayerLoading = NULL;

	if ( ! pFnSetPlayerLoading )
		pFnSetPlayerLoading = (UFunction*) UObject::GObjObjects()->Data[ 54266 ];

	UGFxTrMenuMoviePlayer_eventSetPlayerLoading_Parms SetPlayerLoading_Parms;

	this->ProcessEvent ( pFnSetPlayerLoading, &SetPlayerLoading_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPlayerInLobby
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSetPlayerInLobby ( )
{
	static UFunction* pFnSetPlayerInLobby = NULL;

	if ( ! pFnSetPlayerInLobby )
		pFnSetPlayerInLobby = (UFunction*) UObject::GObjObjects()->Data[ 54258 ];

	UGFxTrMenuMoviePlayer_eventSetPlayerInLobby_Parms SetPlayerInLobby_Parms;

	this->ProcessEvent ( pFnSetPlayerInLobby, &SetPlayerInLobby_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPlayerInLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bServerDrop                    ( CPF_Parm )

void UGFxTrMenuMoviePlayer::eventSetPlayerInLogin ( unsigned long bServerDrop )
{
	static UFunction* pFnSetPlayerInLogin = NULL;

	if ( ! pFnSetPlayerInLogin )
		pFnSetPlayerInLogin = (UFunction*) UObject::GObjObjects()->Data[ 54253 ];

	UGFxTrMenuMoviePlayer_eventSetPlayerInLogin_Parms SetPlayerInLogin_Parms;
	SetPlayerInLogin_Parms.bServerDrop = bServerDrop;

	this->ProcessEvent ( pFnSetPlayerInLogin, &SetPlayerInLogin_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SetPlayerMainMenu
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventSetPlayerMainMenu ( )
{
	static UFunction* pFnSetPlayerMainMenu = NULL;

	if ( ! pFnSetPlayerMainMenu )
		pFnSetPlayerMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 54248 ];

	UGFxTrMenuMoviePlayer_eventSetPlayerMainMenu_Parms SetPlayerMainMenu_Parms;

	this->ProcessEvent ( pFnSetPlayerMainMenu, &SetPlayerMainMenu_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.HaveEntry
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::HaveEntry ( )
{
	static UFunction* pFnHaveEntry = NULL;

	if ( ! pFnHaveEntry )
		pFnHaveEntry = (UFunction*) UObject::GObjObjects()->Data[ 54244 ];

	UGFxTrMenuMoviePlayer_execHaveEntry_Parms HaveEntry_Parms;

	this->ProcessEvent ( pFnHaveEntry, &HaveEntry_Parms, NULL );

	return HaveEntry_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.EntryPlayerReady
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventEntryPlayerReady ( )
{
	static UFunction* pFnEntryPlayerReady = NULL;

	if ( ! pFnEntryPlayerReady )
		pFnEntryPlayerReady = (UFunction*) UObject::GObjObjects()->Data[ 54241 ];

	UGFxTrMenuMoviePlayer_eventEntryPlayerReady_Parms EntryPlayerReady_Parms;

	this->ProcessEvent ( pFnEntryPlayerReady, &EntryPlayerReady_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.ShowPeach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventShowPeach ( )
{
	static UFunction* pFnShowPeach = NULL;

	if ( ! pFnShowPeach )
		pFnShowPeach = (UFunction*) UObject::GObjObjects()->Data[ 54239 ];

	UGFxTrMenuMoviePlayer_eventShowPeach_Parms ShowPeach_Parms;

	this->ProcessEvent ( pFnShowPeach, &ShowPeach_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StartPeach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrMenuMoviePlayer::eventStartPeach ( )
{
	static UFunction* pFnStartPeach = NULL;

	if ( ! pFnStartPeach )
		pFnStartPeach = (UFunction*) UObject::GObjObjects()->Data[ 54236 ];

	UGFxTrMenuMoviePlayer_eventStartPeach_Parms StartPeach_Parms;

	this->ProcessEvent ( pFnStartPeach, &StartPeach_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.StripTag
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

struct FString UGFxTrMenuMoviePlayer::StripTag ( struct FString sValue )
{
	static UFunction* pFnStripTag = NULL;

	if ( ! pFnStripTag )
		pFnStripTag = (UFunction*) UObject::GObjObjects()->Data[ 54232 ];

	UGFxTrMenuMoviePlayer_execStripTag_Parms StripTag_Parms;
	memcpy ( &StripTag_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnStripTag, &StripTag_Parms, NULL );

	return StripTag_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.ToggleMutePlayer
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::ToggleMutePlayer ( struct FString PlayerName )
{
	static UFunction* pFnToggleMutePlayer = NULL;

	if ( ! pFnToggleMutePlayer )
		pFnToggleMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 54227 ];

	UGFxTrMenuMoviePlayer_execToggleMutePlayer_Parms ToggleMutePlayer_Parms;
	memcpy ( &ToggleMutePlayer_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnToggleMutePlayer, &ToggleMutePlayer_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.SummaryAction
// [0x00020002] 
// Parameters infos:
// int                            ActionId                       ( CPF_Parm )

void UGFxTrMenuMoviePlayer::SummaryAction ( int ActionId )
{
	static UFunction* pFnSummaryAction = NULL;

	if ( ! pFnSummaryAction )
		pFnSummaryAction = (UFunction*) UObject::GObjObjects()->Data[ 54221 ];

	UGFxTrMenuMoviePlayer_execSummaryAction_Parms SummaryAction_Parms;
	SummaryAction_Parms.ActionId = ActionId;

	this->ProcessEvent ( pFnSummaryAction, &SummaryAction_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.CompleteStartup
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::CompleteStartup ( )
{
	static UFunction* pFnCompleteStartup = NULL;

	if ( ! pFnCompleteStartup )
		pFnCompleteStartup = (UFunction*) UObject::GObjObjects()->Data[ 54219 ];

	UGFxTrMenuMoviePlayer_execCompleteStartup_Parms CompleteStartup_Parms;

	this->ProcessEvent ( pFnCompleteStartup, &CompleteStartup_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxTrMenuMoviePlayer::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 54128 ];

	UGFxTrMenuMoviePlayer_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.HaveClanTag
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::HaveClanTag ( )
{
	static UFunction* pFnHaveClanTag = NULL;

	if ( ! pFnHaveClanTag )
		pFnHaveClanTag = (UFunction*) UObject::GObjObjects()->Data[ 54126 ];

	UGFxTrMenuMoviePlayer_execHaveClanTag_Parms HaveClanTag_Parms;

	pFnHaveClanTag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHaveClanTag, &HaveClanTag_Parms, NULL );

	pFnHaveClanTag->FunctionFlags |= 0x400;

	return HaveClanTag_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetEquipmentTierXP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActivityId                     ( CPF_Parm )
// int                            Tier                           ( CPF_Parm )

int UGFxTrMenuMoviePlayer::GetEquipmentTierXP ( int ActivityId, int Tier )
{
	static UFunction* pFnGetEquipmentTierXP = NULL;

	if ( ! pFnGetEquipmentTierXP )
		pFnGetEquipmentTierXP = (UFunction*) UObject::GObjObjects()->Data[ 54122 ];

	UGFxTrMenuMoviePlayer_execGetEquipmentTierXP_Parms GetEquipmentTierXP_Parms;
	GetEquipmentTierXP_Parms.ActivityId = ActivityId;
	GetEquipmentTierXP_Parms.Tier = Tier;

	pFnGetEquipmentTierXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipmentTierXP, &GetEquipmentTierXP_Parms, NULL );

	pFnGetEquipmentTierXP->FunctionFlags |= 0x400;

	return GetEquipmentTierXP_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetEquipmentXP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActivityId                     ( CPF_Parm )

int UGFxTrMenuMoviePlayer::GetEquipmentXP ( int ActivityId )
{
	static UFunction* pFnGetEquipmentXP = NULL;

	if ( ! pFnGetEquipmentXP )
		pFnGetEquipmentXP = (UFunction*) UObject::GObjObjects()->Data[ 54119 ];

	UGFxTrMenuMoviePlayer_execGetEquipmentXP_Parms GetEquipmentXP_Parms;
	GetEquipmentXP_Parms.ActivityId = ActivityId;

	pFnGetEquipmentXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipmentXP, &GetEquipmentXP_Parms, NULL );

	pFnGetEquipmentXP->FunctionFlags |= 0x400;

	return GetEquipmentXP_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.RequestStreams
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrMenuMoviePlayer::RequestStreams ( )
{
	static UFunction* pFnRequestStreams = NULL;

	if ( ! pFnRequestStreams )
		pFnRequestStreams = (UFunction*) UObject::GObjObjects()->Data[ 54118 ];

	UGFxTrMenuMoviePlayer_execRequestStreams_Parms RequestStreams_Parms;

	pFnRequestStreams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestStreams, &RequestStreams_Parms, NULL );

	pFnRequestStreams->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetLanguageFontIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrMenuMoviePlayer::GetLanguageFontIndex ( )
{
	static UFunction* pFnGetLanguageFontIndex = NULL;

	if ( ! pFnGetLanguageFontIndex )
		pFnGetLanguageFontIndex = (UFunction*) UObject::GObjObjects()->Data[ 54116 ];

	UGFxTrMenuMoviePlayer_execGetLanguageFontIndex_Parms GetLanguageFontIndex_Parms;

	pFnGetLanguageFontIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLanguageFontIndex, &GetLanguageFontIndex_Parms, NULL );

	pFnGetLanguageFontIndex->FunctionFlags |= 0x400;

	return GetLanguageFontIndex_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetQueueUIInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrMenuMoviePlayer::GetQueueUIInfo ( )
{
	static UFunction* pFnGetQueueUIInfo = NULL;

	if ( ! pFnGetQueueUIInfo )
		pFnGetQueueUIInfo = (UFunction*) UObject::GObjObjects()->Data[ 54115 ];

	UGFxTrMenuMoviePlayer_execGetQueueUIInfo_Parms GetQueueUIInfo_Parms;

	pFnGetQueueUIInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetQueueUIInfo, &GetQueueUIInfo_Parms, NULL );

	pFnGetQueueUIInfo->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.AddAcquisition
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )
// int                            LootId                         ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::AddAcquisition ( int VendorId, int LootId )
{
	static UFunction* pFnAddAcquisition = NULL;

	if ( ! pFnAddAcquisition )
		pFnAddAcquisition = (UFunction*) UObject::GObjObjects()->Data[ 54111 ];

	UGFxTrMenuMoviePlayer_execAddAcquisition_Parms AddAcquisition_Parms;
	AddAcquisition_Parms.VendorId = VendorId;
	AddAcquisition_Parms.LootId = LootId;

	pFnAddAcquisition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddAcquisition, &AddAcquisition_Parms, NULL );

	pFnAddAcquisition->FunctionFlags |= 0x400;

	return AddAcquisition_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.ForceFocus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrMenuMoviePlayer::ForceFocus ( )
{
	static UFunction* pFnForceFocus = NULL;

	if ( ! pFnForceFocus )
		pFnForceFocus = (UFunction*) UObject::GObjObjects()->Data[ 54110 ];

	UGFxTrMenuMoviePlayer_execForceFocus_Parms ForceFocus_Parms;

	pFnForceFocus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceFocus, &ForceFocus_Parms, NULL );

	pFnForceFocus->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetVersionString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrMenuMoviePlayer::GetVersionString ( )
{
	static UFunction* pFnGetVersionString = NULL;

	if ( ! pFnGetVersionString )
		pFnGetVersionString = (UFunction*) UObject::GObjObjects()->Data[ 54108 ];

	UGFxTrMenuMoviePlayer_execGetVersionString_Parms GetVersionString_Parms;

	pFnGetVersionString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVersionString, &GetVersionString_Parms, NULL );

	pFnGetVersionString->FunctionFlags |= 0x400;

	return GetVersionString_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.RegisterMarshalCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FScriptDelegate         MarshalEventDelegate           ( CPF_Parm | CPF_NeedCtorLink )

bool UGFxTrMenuMoviePlayer::RegisterMarshalCallback ( struct FScriptDelegate MarshalEventDelegate )
{
	static UFunction* pFnRegisterMarshalCallback = NULL;

	if ( ! pFnRegisterMarshalCallback )
		pFnRegisterMarshalCallback = (UFunction*) UObject::GObjObjects()->Data[ 54105 ];

	UGFxTrMenuMoviePlayer_execRegisterMarshalCallback_Parms RegisterMarshalCallback_Parms;
	memcpy ( &RegisterMarshalCallback_Parms.MarshalEventDelegate, &MarshalEventDelegate, 0xC );

	pFnRegisterMarshalCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterMarshalCallback, &RegisterMarshalCallback_Parms, NULL );

	pFnRegisterMarshalCallback->FunctionFlags |= 0x400;

	return RegisterMarshalCallback_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.UserLoginChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FPointer                pMarEvent                      ( CPF_Parm )

void UGFxTrMenuMoviePlayer::UserLoginChanged ( struct FPointer pMarEvent )
{
	static UFunction* pFnUserLoginChanged = NULL;

	if ( ! pFnUserLoginChanged )
		pFnUserLoginChanged = (UFunction*) UObject::GObjObjects()->Data[ 54103 ];

	UGFxTrMenuMoviePlayer_execUserLoginChanged_Parms UserLoginChanged_Parms;
	memcpy ( &UserLoginChanged_Parms.pMarEvent, &pMarEvent, 0x4 );

	pFnUserLoginChanged->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUserLoginChanged, &UserLoginChanged_Parms, NULL );

	pFnUserLoginChanged->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.ReadPlayerProfileData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UTgPlayerProfile*        Profile                        ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::ReadPlayerProfileData ( class UTgPlayerProfile* Profile )
{
	static UFunction* pFnReadPlayerProfileData = NULL;

	if ( ! pFnReadPlayerProfileData )
		pFnReadPlayerProfileData = (UFunction*) UObject::GObjObjects()->Data[ 54100 ];

	UGFxTrMenuMoviePlayer_execReadPlayerProfileData_Parms ReadPlayerProfileData_Parms;
	ReadPlayerProfileData_Parms.Profile = Profile;

	pFnReadPlayerProfileData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadPlayerProfileData, &ReadPlayerProfileData_Parms, NULL );

	pFnReadPlayerProfileData->FunctionFlags |= 0x400;

	return ReadPlayerProfileData_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.OnMarshalEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FPointer                pMarEvent                      ( CPF_Parm )

void UGFxTrMenuMoviePlayer::OnMarshalEvent ( struct FPointer pMarEvent )
{
	static UFunction* pFnOnMarshalEvent = NULL;

	if ( ! pFnOnMarshalEvent )
		pFnOnMarshalEvent = (UFunction*) UObject::GObjObjects()->Data[ 54098 ];

	UGFxTrMenuMoviePlayer_execOnMarshalEvent_Parms OnMarshalEvent_Parms;
	memcpy ( &OnMarshalEvent_Parms.pMarEvent, &pMarEvent, 0x4 );

	pFnOnMarshalEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnMarshalEvent, &OnMarshalEvent_Parms, NULL );

	pFnOnMarshalEvent->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.PurchasedItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// int                            VendorId                       ( CPF_Parm )
// int                            LootId                         ( CPF_Parm )
// unsigned long                  bSuccess                       ( CPF_Parm )
// struct FString                 Message                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::PurchasedItem ( int VendorId, int LootId, unsigned long bSuccess, struct FString Message )
{
	static UFunction* pFnPurchasedItem = NULL;

	if ( ! pFnPurchasedItem )
		pFnPurchasedItem = (UFunction*) UObject::GObjObjects()->Data[ 54093 ];

	UGFxTrMenuMoviePlayer_execPurchasedItem_Parms PurchasedItem_Parms;
	PurchasedItem_Parms.VendorId = VendorId;
	PurchasedItem_Parms.LootId = LootId;
	PurchasedItem_Parms.bSuccess = bSuccess;
	memcpy ( &PurchasedItem_Parms.Message, &Message, 0xC );

	pFnPurchasedItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPurchasedItem, &PurchasedItem_Parms, NULL );

	pFnPurchasedItem->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.CheckAutoLoginStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::CheckAutoLoginStatus ( )
{
	static UFunction* pFnCheckAutoLoginStatus = NULL;

	if ( ! pFnCheckAutoLoginStatus )
		pFnCheckAutoLoginStatus = (UFunction*) UObject::GObjObjects()->Data[ 54091 ];

	UGFxTrMenuMoviePlayer_execCheckAutoLoginStatus_Parms CheckAutoLoginStatus_Parms;

	pFnCheckAutoLoginStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCheckAutoLoginStatus, &CheckAutoLoginStatus_Parms, NULL );

	pFnCheckAutoLoginStatus->FunctionFlags |= 0x400;

	return CheckAutoLoginStatus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.RequestSteamUserData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrMenuMoviePlayer::RequestSteamUserData ( )
{
	static UFunction* pFnRequestSteamUserData = NULL;

	if ( ! pFnRequestSteamUserData )
		pFnRequestSteamUserData = (UFunction*) UObject::GObjObjects()->Data[ 54090 ];

	UGFxTrMenuMoviePlayer_execRequestSteamUserData_Parms RequestSteamUserData_Parms;

	pFnRequestSteamUserData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestSteamUserData, &RequestSteamUserData_Parms, NULL );

	pFnRequestSteamUserData->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.RequestPurchaseSteamItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            LootId                         ( CPF_Parm )
// int                            Price                          ( CPF_Parm )

void UGFxTrMenuMoviePlayer::RequestPurchaseSteamItem ( int LootId, int Price )
{
	static UFunction* pFnRequestPurchaseSteamItem = NULL;

	if ( ! pFnRequestPurchaseSteamItem )
		pFnRequestPurchaseSteamItem = (UFunction*) UObject::GObjObjects()->Data[ 54087 ];

	UGFxTrMenuMoviePlayer_execRequestPurchaseSteamItem_Parms RequestPurchaseSteamItem_Parms;
	RequestPurchaseSteamItem_Parms.LootId = LootId;
	RequestPurchaseSteamItem_Parms.Price = Price;

	pFnRequestPurchaseSteamItem->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseSteamItem, &RequestPurchaseSteamItem_Parms, NULL );

	pFnRequestPurchaseSteamItem->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrMenuMoviePlayer.GetSteamItemInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrMenuMoviePlayer::GetSteamItemInfo ( )
{
	static UFunction* pFnGetSteamItemInfo = NULL;

	if ( ! pFnGetSteamItemInfo )
		pFnGetSteamItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 54085 ];

	UGFxTrMenuMoviePlayer_execGetSteamItemInfo_Parms GetSteamItemInfo_Parms;

	pFnGetSteamItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetSteamItemInfo, &GetSteamItemInfo_Parms, NULL );

	pFnGetSteamItemInfo->FunctionFlags |= 0x400;

	return GetSteamItemInfo_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.UseSteam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrMenuMoviePlayer::UseSteam ( )
{
	static UFunction* pFnUseSteam = NULL;

	if ( ! pFnUseSteam )
		pFnUseSteam = (UFunction*) UObject::GObjObjects()->Data[ 54083 ];

	UGFxTrMenuMoviePlayer_execUseSteam_Parms UseSteam_Parms;

	pFnUseSteam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUseSteam, &UseSteam_Parms, NULL );

	pFnUseSteam->FunctionFlags |= 0x400;

	return UseSteam_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateAction
// [0x00120000] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            val                            ( CPF_Parm )
// class UGFxObject*              List                           ( CPF_Parm )

int UGFxTrMenuMoviePlayer::DelegateAction ( int val, class UGFxObject* List )
{
	static UFunction* pFnDelegateAction = NULL;

	if ( ! pFnDelegateAction )
		pFnDelegateAction = (UFunction*) UObject::GObjObjects()->Data[ 54079 ];

	UGFxTrMenuMoviePlayer_execDelegateAction_Parms DelegateAction_Parms;
	DelegateAction_Parms.val = val;
	DelegateAction_Parms.List = List;

	this->ProcessEvent ( pFnDelegateAction, &DelegateAction_Parms, NULL );

	return DelegateAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateOptions
// [0x00120000] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )
// int                            ClassId                        ( CPF_Parm )
// int                            SkillId                        ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateOptions ( class UGFxObject* List, int ClassId, int SkillId )
{
	static UFunction* pFnDelegateOptions = NULL;

	if ( ! pFnDelegateOptions )
		pFnDelegateOptions = (UFunction*) UObject::GObjObjects()->Data[ 54075 ];

	UGFxTrMenuMoviePlayer_execDelegateOptions_Parms DelegateOptions_Parms;
	DelegateOptions_Parms.List = List;
	DelegateOptions_Parms.ClassId = ClassId;
	DelegateOptions_Parms.SkillId = SkillId;

	this->ProcessEvent ( pFnDelegateOptions, &DelegateOptions_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateGetString
// [0x00120000] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrMenuMoviePlayer::DelegateGetString ( )
{
	static UFunction* pFnDelegateGetString = NULL;

	if ( ! pFnDelegateGetString )
		pFnDelegateGetString = (UFunction*) UObject::GObjObjects()->Data[ 54073 ];

	UGFxTrMenuMoviePlayer_execDelegateGetString_Parms DelegateGetString_Parms;

	this->ProcessEvent ( pFnDelegateGetString, &DelegateGetString_Parms, NULL );

	return DelegateGetString_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateBoolGetBool
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  val                            ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::DelegateBoolGetBool ( unsigned long val )
{
	static UFunction* pFnDelegateBoolGetBool = NULL;

	if ( ! pFnDelegateBoolGetBool )
		pFnDelegateBoolGetBool = (UFunction*) UObject::GObjObjects()->Data[ 54070 ];

	UGFxTrMenuMoviePlayer_execDelegateBoolGetBool_Parms DelegateBoolGetBool_Parms;
	DelegateBoolGetBool_Parms.val = val;

	this->ProcessEvent ( pFnDelegateBoolGetBool, &DelegateBoolGetBool_Parms, NULL );

	return DelegateBoolGetBool_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateLogin
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bRemember                      ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::DelegateLogin ( struct FString UserName, struct FString Password, unsigned long bRemember )
{
	static UFunction* pFnDelegateLogin = NULL;

	if ( ! pFnDelegateLogin )
		pFnDelegateLogin = (UFunction*) UObject::GObjObjects()->Data[ 54065 ];

	UGFxTrMenuMoviePlayer_execDelegateLogin_Parms DelegateLogin_Parms;
	memcpy ( &DelegateLogin_Parms.UserName, &UserName, 0xC );
	memcpy ( &DelegateLogin_Parms.Password, &Password, 0xC );
	DelegateLogin_Parms.bRemember = bRemember;

	this->ProcessEvent ( pFnDelegateLogin, &DelegateLogin_Parms, NULL );

	return DelegateLogin_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateGetBoolIntInt
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SlotId                         ( CPF_Parm )
// int                            ClassId                        ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::DelegateGetBoolIntInt ( int SlotId, int ClassId )
{
	static UFunction* pFnDelegateGetBoolIntInt = NULL;

	if ( ! pFnDelegateGetBoolIntInt )
		pFnDelegateGetBoolIntInt = (UFunction*) UObject::GObjObjects()->Data[ 54061 ];

	UGFxTrMenuMoviePlayer_execDelegateGetBoolIntInt_Parms DelegateGetBoolIntInt_Parms;
	DelegateGetBoolIntInt_Parms.SlotId = SlotId;
	DelegateGetBoolIntInt_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnDelegateGetBoolIntInt, &DelegateGetBoolIntInt_Parms, NULL );

	return DelegateGetBoolIntInt_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateIntIntInt
// [0x00120000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Val1                           ( CPF_Parm )
// int                            Val2                           ( CPF_Parm )
// int                            Val3                           ( CPF_Parm )

bool UGFxTrMenuMoviePlayer::DelegateIntIntInt ( int Val1, int Val2, int Val3 )
{
	static UFunction* pFnDelegateIntIntInt = NULL;

	if ( ! pFnDelegateIntIntInt )
		pFnDelegateIntIntInt = (UFunction*) UObject::GObjObjects()->Data[ 54056 ];

	UGFxTrMenuMoviePlayer_execDelegateIntIntInt_Parms DelegateIntIntInt_Parms;
	DelegateIntIntInt_Parms.Val1 = Val1;
	DelegateIntIntInt_Parms.Val2 = Val2;
	DelegateIntIntInt_Parms.Val3 = Val3;

	this->ProcessEvent ( pFnDelegateIntIntInt, &DelegateIntIntInt_Parms, NULL );

	return DelegateIntIntInt_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateGetPrice
// [0x00120000] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          XPValue                        ( CPF_Parm )

int UGFxTrMenuMoviePlayer::DelegateGetPrice ( float XPValue )
{
	static UFunction* pFnDelegateGetPrice = NULL;

	if ( ! pFnDelegateGetPrice )
		pFnDelegateGetPrice = (UFunction*) UObject::GObjObjects()->Data[ 54053 ];

	UGFxTrMenuMoviePlayer_execDelegateGetPrice_Parms DelegateGetPrice_Parms;
	DelegateGetPrice_Parms.XPValue = XPValue;

	this->ProcessEvent ( pFnDelegateGetPrice, &DelegateGetPrice_Parms, NULL );

	return DelegateGetPrice_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateGetInt
// [0x00120000] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrMenuMoviePlayer::DelegateGetInt ( )
{
	static UFunction* pFnDelegateGetInt = NULL;

	if ( ! pFnDelegateGetInt )
		pFnDelegateGetInt = (UFunction*) UObject::GObjObjects()->Data[ 54051 ];

	UGFxTrMenuMoviePlayer_execDelegateGetInt_Parms DelegateGetInt_Parms;

	this->ProcessEvent ( pFnDelegateGetInt, &DelegateGetInt_Parms, NULL );

	return DelegateGetInt_Parms.ReturnValue;
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateOnMarshalEvent
// [0x00120000] 
// Parameters infos:
// struct FPointer                pMarEvent                      ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateOnMarshalEvent ( struct FPointer pMarEvent )
{
	static UFunction* pFnDelegateOnMarshalEvent = NULL;

	if ( ! pFnDelegateOnMarshalEvent )
		pFnDelegateOnMarshalEvent = (UFunction*) UObject::GObjObjects()->Data[ 54049 ];

	UGFxTrMenuMoviePlayer_execDelegateOnMarshalEvent_Parms DelegateOnMarshalEvent_Parms;
	memcpy ( &DelegateOnMarshalEvent_Parms.pMarEvent, &pMarEvent, 0x4 );

	this->ProcessEvent ( pFnDelegateOnMarshalEvent, &DelegateOnMarshalEvent_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateIntGFxList
// [0x00120000] 
// Parameters infos:
// int                            val                            ( CPF_Parm )
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateIntGFxList ( int val, class UGFxObject* List )
{
	static UFunction* pFnDelegateIntGFxList = NULL;

	if ( ! pFnDelegateIntGFxList )
		pFnDelegateIntGFxList = (UFunction*) UObject::GObjObjects()->Data[ 54046 ];

	UGFxTrMenuMoviePlayer_execDelegateIntGFxList_Parms DelegateIntGFxList_Parms;
	DelegateIntGFxList_Parms.val = val;
	DelegateIntGFxList_Parms.List = List;

	this->ProcessEvent ( pFnDelegateIntGFxList, &DelegateIntGFxList_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateStringBool
// [0x00120000] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bVal                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateStringBool ( struct FString val, unsigned long bVal )
{
	static UFunction* pFnDelegateStringBool = NULL;

	if ( ! pFnDelegateStringBool )
		pFnDelegateStringBool = (UFunction*) UObject::GObjObjects()->Data[ 54043 ];

	UGFxTrMenuMoviePlayer_execDelegateStringBool_Parms DelegateStringBool_Parms;
	memcpy ( &DelegateStringBool_Parms.val, &val, 0xC );
	DelegateStringBool_Parms.bVal = bVal;

	this->ProcessEvent ( pFnDelegateStringBool, &DelegateStringBool_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateStringInt
// [0x00120000] 
// Parameters infos:
// struct FString                 Val1                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Val2                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateStringInt ( struct FString Val1, int Val2 )
{
	static UFunction* pFnDelegateStringInt = NULL;

	if ( ! pFnDelegateStringInt )
		pFnDelegateStringInt = (UFunction*) UObject::GObjObjects()->Data[ 54040 ];

	UGFxTrMenuMoviePlayer_execDelegateStringInt_Parms DelegateStringInt_Parms;
	memcpy ( &DelegateStringInt_Parms.Val1, &Val1, 0xC );
	DelegateStringInt_Parms.Val2 = Val2;

	this->ProcessEvent ( pFnDelegateStringInt, &DelegateStringInt_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateIntString
// [0x00120000] 
// Parameters infos:
// int                            Val1                           ( CPF_Parm )
// struct FString                 Val2                           ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::DelegateIntString ( int Val1, struct FString Val2 )
{
	static UFunction* pFnDelegateIntString = NULL;

	if ( ! pFnDelegateIntString )
		pFnDelegateIntString = (UFunction*) UObject::GObjObjects()->Data[ 54037 ];

	UGFxTrMenuMoviePlayer_execDelegateIntString_Parms DelegateIntString_Parms;
	DelegateIntString_Parms.Val1 = Val1;
	memcpy ( &DelegateIntString_Parms.Val2, &Val2, 0xC );

	this->ProcessEvent ( pFnDelegateIntString, &DelegateIntString_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateIntInt
// [0x00120000] 
// Parameters infos:
// int                            Val1                           ( CPF_Parm )
// int                            Val2                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateIntInt ( int Val1, int Val2 )
{
	static UFunction* pFnDelegateIntInt = NULL;

	if ( ! pFnDelegateIntInt )
		pFnDelegateIntInt = (UFunction*) UObject::GObjObjects()->Data[ 54034 ];

	UGFxTrMenuMoviePlayer_execDelegateIntInt_Parms DelegateIntInt_Parms;
	DelegateIntInt_Parms.Val1 = Val1;
	DelegateIntInt_Parms.Val2 = Val2;

	this->ProcessEvent ( pFnDelegateIntInt, &DelegateIntInt_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateGFxList
// [0x00120000] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateGFxList ( class UGFxObject* List )
{
	static UFunction* pFnDelegateGFxList = NULL;

	if ( ! pFnDelegateGFxList )
		pFnDelegateGFxList = (UFunction*) UObject::GObjObjects()->Data[ 54032 ];

	UGFxTrMenuMoviePlayer_execDelegateGFxList_Parms DelegateGFxList_Parms;
	DelegateGFxList_Parms.List = List;

	this->ProcessEvent ( pFnDelegateGFxList, &DelegateGFxList_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateString
// [0x00120000] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrMenuMoviePlayer::DelegateString ( struct FString val )
{
	static UFunction* pFnDelegateString = NULL;

	if ( ! pFnDelegateString )
		pFnDelegateString = (UFunction*) UObject::GObjObjects()->Data[ 54030 ];

	UGFxTrMenuMoviePlayer_execDelegateString_Parms DelegateString_Parms;
	memcpy ( &DelegateString_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnDelegateString, &DelegateString_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateBool
// [0x00120000] 
// Parameters infos:
// unsigned long                  bVal                           ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateBool ( unsigned long bVal )
{
	static UFunction* pFnDelegateBool = NULL;

	if ( ! pFnDelegateBool )
		pFnDelegateBool = (UFunction*) UObject::GObjObjects()->Data[ 54028 ];

	UGFxTrMenuMoviePlayer_execDelegateBool_Parms DelegateBool_Parms;
	DelegateBool_Parms.bVal = bVal;

	this->ProcessEvent ( pFnDelegateBool, &DelegateBool_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateInt
// [0x00120000] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGFxTrMenuMoviePlayer::DelegateInt ( int val )
{
	static UFunction* pFnDelegateInt = NULL;

	if ( ! pFnDelegateInt )
		pFnDelegateInt = (UFunction*) UObject::GObjObjects()->Data[ 54026 ];

	UGFxTrMenuMoviePlayer_execDelegateInt_Parms DelegateInt_Parms;
	DelegateInt_Parms.val = val;

	this->ProcessEvent ( pFnDelegateInt, &DelegateInt_Parms, NULL );
};

// Function TribesGame.GFxTrMenuMoviePlayer.DelegateNoParam
// [0x00120000] 
// Parameters infos:

void UGFxTrMenuMoviePlayer::DelegateNoParam ( )
{
	static UFunction* pFnDelegateNoParam = NULL;

	if ( ! pFnDelegateNoParam )
		pFnDelegateNoParam = (UFunction*) UObject::GObjObjects()->Data[ 54025 ];

	UGFxTrMenuMoviePlayer_execDelegateNoParam_Parms DelegateNoParam_Parms;

	this->ProcessEvent ( pFnDelegateNoParam, &DelegateNoParam_Parms, NULL );
};

// Function TribesGame.GFxTrScene.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 62884 ];

	UGFxTrScene_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_EULA.EULAReponse
// [0x00020002] 
// Parameters infos:
// unsigned long                  bAccepted                      ( CPF_Parm )

void UGFxTrScene_EULA::EULAReponse ( unsigned long bAccepted )
{
	static UFunction* pFnEULAReponse = NULL;

	if ( ! pFnEULAReponse )
		pFnEULAReponse = (UFunction*) UObject::GObjObjects()->Data[ 62893 ];

	UGFxTrScene_EULA_execEULAReponse_Parms EULAReponse_Parms;
	EULAReponse_Parms.bAccepted = bAccepted;

	this->ProcessEvent ( pFnEULAReponse, &EULAReponse_Parms, NULL );
};

// Function TribesGame.GFxTrScene_EULA.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_EULA::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 62892 ];

	UGFxTrScene_EULA_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_EULA.AcceptEULA
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrScene_EULA::AcceptEULA ( )
{
	static UFunction* pFnAcceptEULA = NULL;

	if ( ! pFnAcceptEULA )
		pFnAcceptEULA = (UFunction*) UObject::GObjObjects()->Data[ 62891 ];

	UGFxTrScene_EULA_execAcceptEULA_Parms AcceptEULA_Parms;

	pFnAcceptEULA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptEULA, &AcceptEULA_Parms, NULL );

	pFnAcceptEULA->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrScene_EULA.LoadEULA
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGFxTrScene_EULA::LoadEULA ( )
{
	static UFunction* pFnLoadEULA = NULL;

	if ( ! pFnLoadEULA )
		pFnLoadEULA = (UFunction*) UObject::GObjObjects()->Data[ 62890 ];

	UGFxTrScene_EULA_execLoadEULA_Parms LoadEULA_Parms;

	pFnLoadEULA->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadEULA, &LoadEULA_Parms, NULL );

	pFnLoadEULA->FunctionFlags |= 0x400;
};

// Function TribesGame.GFxTrScene_MatchSummary.CreditsSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* A                              ( CPF_Parm )
// class ATrPlayerReplicationInfo* B                              ( CPF_Parm )

int UGFxTrScene_MatchSummary::CreditsSort ( class ATrPlayerReplicationInfo* A, class ATrPlayerReplicationInfo* B )
{
	static UFunction* pFnCreditsSort = NULL;

	if ( ! pFnCreditsSort )
		pFnCreditsSort = (UFunction*) UObject::GObjObjects()->Data[ 62917 ];

	UGFxTrScene_MatchSummary_execCreditsSort_Parms CreditsSort_Parms;
	CreditsSort_Parms.A = A;
	CreditsSort_Parms.B = B;

	this->ProcessEvent ( pFnCreditsSort, &CreditsSort_Parms, NULL );

	return CreditsSort_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_MatchSummary.PopulateScoreboardDataFromGRI
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_MatchSummary::PopulateScoreboardDataFromGRI ( )
{
	static UFunction* pFnPopulateScoreboardDataFromGRI = NULL;

	if ( ! pFnPopulateScoreboardDataFromGRI )
		pFnPopulateScoreboardDataFromGRI = (UFunction*) UObject::GObjObjects()->Data[ 63287 ];

	UGFxTrScene_MatchSummary_execPopulateScoreboardDataFromGRI_Parms PopulateScoreboardDataFromGRI_Parms;

	this->ProcessEvent ( pFnPopulateScoreboardDataFromGRI, &PopulateScoreboardDataFromGRI_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.FindPlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            PlayerID                       ( CPF_Parm )

struct FString UGFxTrScene_MatchSummary::FindPlayerName ( int PlayerID )
{
	static UFunction* pFnFindPlayerName = NULL;

	if ( ! pFnFindPlayerName )
		pFnFindPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 63283 ];

	UGFxTrScene_MatchSummary_execFindPlayerName_Parms FindPlayerName_Parms;
	FindPlayerName_Parms.PlayerID = PlayerID;

	this->ProcessEvent ( pFnFindPlayerName, &FindPlayerName_Parms, NULL );

	return FindPlayerName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_MatchSummary.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UGFxTrScene_MatchSummary::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 63277 ];

	UGFxTrScene_MatchSummary_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_MatchSummary.FormatResult
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            aWinningTeam                   ( CPF_Parm )

struct FString UGFxTrScene_MatchSummary::FormatResult ( int aWinningTeam )
{
	static UFunction* pFnFormatResult = NULL;

	if ( ! pFnFormatResult )
		pFnFormatResult = (UFunction*) UObject::GObjObjects()->Data[ 63272 ];

	UGFxTrScene_MatchSummary_execFormatResult_Parms FormatResult_Parms;
	FormatResult_Parms.aWinningTeam = aWinningTeam;

	this->ProcessEvent ( pFnFormatResult, &FormatResult_Parms, NULL );

	return FormatResult_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_MatchSummary.AddMiscData
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_MatchSummary::AddMiscData ( )
{
	static UFunction* pFnAddMiscData = NULL;

	if ( ! pFnAddMiscData )
		pFnAddMiscData = (UFunction*) UObject::GObjObjects()->Data[ 63270 ];

	UGFxTrScene_MatchSummary_execAddMiscData_Parms AddMiscData_Parms;

	this->ProcessEvent ( pFnAddMiscData, &AddMiscData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.AddScoreSlot
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Kills                          ( CPF_Parm )
// int                            Assists                        ( CPF_Parm )
// int                            Credits                        ( CPF_Parm )
// int                            Rank                           ( CPF_Parm )

void UGFxTrScene_MatchSummary::AddScoreSlot ( struct FString PlayerName, int Kills, int Assists, int Credits, int Rank )
{
	static UFunction* pFnAddScoreSlot = NULL;

	if ( ! pFnAddScoreSlot )
		pFnAddScoreSlot = (UFunction*) UObject::GObjObjects()->Data[ 63263 ];

	UGFxTrScene_MatchSummary_execAddScoreSlot_Parms AddScoreSlot_Parms;
	memcpy ( &AddScoreSlot_Parms.PlayerName, &PlayerName, 0xC );
	AddScoreSlot_Parms.Kills = Kills;
	AddScoreSlot_Parms.Assists = Assists;
	AddScoreSlot_Parms.Credits = Credits;
	AddScoreSlot_Parms.Rank = Rank;

	this->ProcessEvent ( pFnAddScoreSlot, &AddScoreSlot_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.AddAccolade
// [0x00020002] 
// Parameters infos:
// int                            PlayerID                       ( CPF_Parm )
// int                            AccoladeId                     ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UGFxTrScene_MatchSummary::AddAccolade ( int PlayerID, int AccoladeId, int val )
{
	static UFunction* pFnAddAccolade = NULL;

	if ( ! pFnAddAccolade )
		pFnAddAccolade = (UFunction*) UObject::GObjObjects()->Data[ 63255 ];

	UGFxTrScene_MatchSummary_execAddAccolade_Parms AddAccolade_Parms;
	AddAccolade_Parms.PlayerID = PlayerID;
	AddAccolade_Parms.AccoladeId = AccoladeId;
	AddAccolade_Parms.val = val;

	this->ProcessEvent ( pFnAddAccolade, &AddAccolade_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.AddAward
// [0x00020002] 
// Parameters infos:
// int                            PlayerID                       ( CPF_Parm )
// int                            AwardId                        ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UGFxTrScene_MatchSummary::AddAward ( int PlayerID, int AwardId, int val )
{
	static UFunction* pFnAddAward = NULL;

	if ( ! pFnAddAward )
		pFnAddAward = (UFunction*) UObject::GObjObjects()->Data[ 63242 ];

	UGFxTrScene_MatchSummary_execAddAward_Parms AddAward_Parms;
	AddAward_Parms.PlayerID = PlayerID;
	AddAward_Parms.AwardId = AwardId;
	AddAward_Parms.val = val;

	this->ProcessEvent ( pFnAddAward, &AddAward_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.LoadTeamMiscData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_MatchSummary::LoadTeamMiscData ( class UGFxObject* List )
{
	static UFunction* pFnLoadTeamMiscData = NULL;

	if ( ! pFnLoadTeamMiscData )
		pFnLoadTeamMiscData = (UFunction*) UObject::GObjObjects()->Data[ 63240 ];

	UGFxTrScene_MatchSummary_execLoadTeamMiscData_Parms LoadTeamMiscData_Parms;
	LoadTeamMiscData_Parms.List = List;

	this->ProcessEvent ( pFnLoadTeamMiscData, &LoadTeamMiscData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.LoadTeamScoreboardData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_MatchSummary::LoadTeamScoreboardData ( class UGFxObject* List )
{
	static UFunction* pFnLoadTeamScoreboardData = NULL;

	if ( ! pFnLoadTeamScoreboardData )
		pFnLoadTeamScoreboardData = (UFunction*) UObject::GObjObjects()->Data[ 63237 ];

	UGFxTrScene_MatchSummary_execLoadTeamScoreboardData_Parms LoadTeamScoreboardData_Parms;
	LoadTeamScoreboardData_Parms.List = List;

	this->ProcessEvent ( pFnLoadTeamScoreboardData, &LoadTeamScoreboardData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.LoadTeamAccoladeData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_MatchSummary::LoadTeamAccoladeData ( class UGFxObject* List )
{
	static UFunction* pFnLoadTeamAccoladeData = NULL;

	if ( ! pFnLoadTeamAccoladeData )
		pFnLoadTeamAccoladeData = (UFunction*) UObject::GObjObjects()->Data[ 63234 ];

	UGFxTrScene_MatchSummary_execLoadTeamAccoladeData_Parms LoadTeamAccoladeData_Parms;
	LoadTeamAccoladeData_Parms.List = List;

	this->ProcessEvent ( pFnLoadTeamAccoladeData, &LoadTeamAccoladeData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.LoadTeamStatsData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_MatchSummary::LoadTeamStatsData ( class UGFxObject* List )
{
	static UFunction* pFnLoadTeamStatsData = NULL;

	if ( ! pFnLoadTeamStatsData )
		pFnLoadTeamStatsData = (UFunction*) UObject::GObjObjects()->Data[ 63229 ];

	UGFxTrScene_MatchSummary_execLoadTeamStatsData_Parms LoadTeamStatsData_Parms;
	LoadTeamStatsData_Parms.List = List;

	this->ProcessEvent ( pFnLoadTeamStatsData, &LoadTeamStatsData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.SummaryReady
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrScene_MatchSummary::eventSummaryReady ( )
{
	static UFunction* pFnSummaryReady = NULL;

	if ( ! pFnSummaryReady )
		pFnSummaryReady = (UFunction*) UObject::GObjObjects()->Data[ 62940 ];

	UGFxTrScene_MatchSummary_eventSummaryReady_Parms SummaryReady_Parms;

	this->ProcessEvent ( pFnSummaryReady, &SummaryReady_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.ClearSummary
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrScene_MatchSummary::eventClearSummary ( )
{
	static UFunction* pFnClearSummary = NULL;

	if ( ! pFnClearSummary )
		pFnClearSummary = (UFunction*) UObject::GObjObjects()->Data[ 62938 ];

	UGFxTrScene_MatchSummary_eventClearSummary_Parms ClearSummary_Parms;

	this->ProcessEvent ( pFnClearSummary, &ClearSummary_Parms, NULL );
};

// Function TribesGame.GFxTrScene_MatchSummary.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_MatchSummary::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 62937 ];

	UGFxTrScene_MatchSummary_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.GetFlagReturnCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrScene_PlayerSummary::GetFlagReturnCount ( )
{
	static UFunction* pFnGetFlagReturnCount = NULL;

	if ( ! pFnGetFlagReturnCount )
		pFnGetFlagReturnCount = (UFunction*) UObject::GObjObjects()->Data[ 63385 ];

	UGFxTrScene_PlayerSummary_execGetFlagReturnCount_Parms GetFlagReturnCount_Parms;

	this->ProcessEvent ( pFnGetFlagReturnCount, &GetFlagReturnCount_Parms, NULL );

	return GetFlagReturnCount_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_PlayerSummary.GetFlagGrabCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrScene_PlayerSummary::GetFlagGrabCount ( )
{
	static UFunction* pFnGetFlagGrabCount = NULL;

	if ( ! pFnGetFlagGrabCount )
		pFnGetFlagGrabCount = (UFunction*) UObject::GObjObjects()->Data[ 63381 ];

	UGFxTrScene_PlayerSummary_execGetFlagGrabCount_Parms GetFlagGrabCount_Parms;

	this->ProcessEvent ( pFnGetFlagGrabCount, &GetFlagGrabCount_Parms, NULL );

	return GetFlagGrabCount_Parms.ReturnValue;
};

// Function TribesGame.GFxTrScene_PlayerSummary.AddMiscData
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_PlayerSummary::AddMiscData ( )
{
	static UFunction* pFnAddMiscData = NULL;

	if ( ! pFnAddMiscData )
		pFnAddMiscData = (UFunction*) UObject::GObjObjects()->Data[ 63367 ];

	UGFxTrScene_PlayerSummary_execAddMiscData_Parms AddMiscData_Parms;

	this->ProcessEvent ( pFnAddMiscData, &AddMiscData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.AddAccolade
// [0x00020002] 
// Parameters infos:
// int                            AccoladeId                     ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UGFxTrScene_PlayerSummary::AddAccolade ( int AccoladeId, int val )
{
	static UFunction* pFnAddAccolade = NULL;

	if ( ! pFnAddAccolade )
		pFnAddAccolade = (UFunction*) UObject::GObjObjects()->Data[ 63362 ];

	UGFxTrScene_PlayerSummary_execAddAccolade_Parms AddAccolade_Parms;
	AddAccolade_Parms.AccoladeId = AccoladeId;
	AddAccolade_Parms.val = val;

	this->ProcessEvent ( pFnAddAccolade, &AddAccolade_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.AddBadge
// [0x00020002] 
// Parameters infos:
// struct FBadgeStruct            Badge                          ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrScene_PlayerSummary::AddBadge ( struct FBadgeStruct Badge )
{
	static UFunction* pFnAddBadge = NULL;

	if ( ! pFnAddBadge )
		pFnAddBadge = (UFunction*) UObject::GObjObjects()->Data[ 63359 ];

	UGFxTrScene_PlayerSummary_execAddBadge_Parms AddBadge_Parms;
	memcpy ( &AddBadge_Parms.Badge, &Badge, 0x34 );

	this->ProcessEvent ( pFnAddBadge, &AddBadge_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.AddAward
// [0x00020002] 
// Parameters infos:
// int                            AwardId                        ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UGFxTrScene_PlayerSummary::AddAward ( int AwardId, int val )
{
	static UFunction* pFnAddAward = NULL;

	if ( ! pFnAddAward )
		pFnAddAward = (UFunction*) UObject::GObjObjects()->Data[ 63353 ];

	UGFxTrScene_PlayerSummary_execAddAward_Parms AddAward_Parms;
	AddAward_Parms.AwardId = AwardId;
	AddAward_Parms.val = val;

	this->ProcessEvent ( pFnAddAward, &AddAward_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.LoadPlayerMiscData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_PlayerSummary::LoadPlayerMiscData ( class UGFxObject* List )
{
	static UFunction* pFnLoadPlayerMiscData = NULL;

	if ( ! pFnLoadPlayerMiscData )
		pFnLoadPlayerMiscData = (UFunction*) UObject::GObjObjects()->Data[ 63351 ];

	UGFxTrScene_PlayerSummary_execLoadPlayerMiscData_Parms LoadPlayerMiscData_Parms;
	LoadPlayerMiscData_Parms.List = List;

	this->ProcessEvent ( pFnLoadPlayerMiscData, &LoadPlayerMiscData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.LoadPlayerAccoladeData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_PlayerSummary::LoadPlayerAccoladeData ( class UGFxObject* List )
{
	static UFunction* pFnLoadPlayerAccoladeData = NULL;

	if ( ! pFnLoadPlayerAccoladeData )
		pFnLoadPlayerAccoladeData = (UFunction*) UObject::GObjObjects()->Data[ 63348 ];

	UGFxTrScene_PlayerSummary_execLoadPlayerAccoladeData_Parms LoadPlayerAccoladeData_Parms;
	LoadPlayerAccoladeData_Parms.List = List;

	this->ProcessEvent ( pFnLoadPlayerAccoladeData, &LoadPlayerAccoladeData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.LoadPlayerStatsData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_PlayerSummary::LoadPlayerStatsData ( class UGFxObject* List )
{
	static UFunction* pFnLoadPlayerStatsData = NULL;

	if ( ! pFnLoadPlayerStatsData )
		pFnLoadPlayerStatsData = (UFunction*) UObject::GObjObjects()->Data[ 63343 ];

	UGFxTrScene_PlayerSummary_execLoadPlayerStatsData_Parms LoadPlayerStatsData_Parms;
	LoadPlayerStatsData_Parms.List = List;

	this->ProcessEvent ( pFnLoadPlayerStatsData, &LoadPlayerStatsData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.LoadXPData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGFxTrScene_PlayerSummary::LoadXPData ( class UGFxObject* List )
{
	static UFunction* pFnLoadXPData = NULL;

	if ( ! pFnLoadXPData )
		pFnLoadXPData = (UFunction*) UObject::GObjObjects()->Data[ 63341 ];

	UGFxTrScene_PlayerSummary_execLoadXPData_Parms LoadXPData_Parms;
	LoadXPData_Parms.List = List;

	this->ProcessEvent ( pFnLoadXPData, &LoadXPData_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.SummaryReady
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrScene_PlayerSummary::eventSummaryReady ( )
{
	static UFunction* pFnSummaryReady = NULL;

	if ( ! pFnSummaryReady )
		pFnSummaryReady = (UFunction*) UObject::GObjObjects()->Data[ 63339 ];

	UGFxTrScene_PlayerSummary_eventSummaryReady_Parms SummaryReady_Parms;

	this->ProcessEvent ( pFnSummaryReady, &SummaryReady_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.ClearEarnedBadgeValue
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_PlayerSummary::ClearEarnedBadgeValue ( )
{
	static UFunction* pFnClearEarnedBadgeValue = NULL;

	if ( ! pFnClearEarnedBadgeValue )
		pFnClearEarnedBadgeValue = (UFunction*) UObject::GObjObjects()->Data[ 63337 ];

	UGFxTrScene_PlayerSummary_execClearEarnedBadgeValue_Parms ClearEarnedBadgeValue_Parms;

	this->ProcessEvent ( pFnClearEarnedBadgeValue, &ClearEarnedBadgeValue_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.ClearSummary
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGFxTrScene_PlayerSummary::eventClearSummary ( )
{
	static UFunction* pFnClearSummary = NULL;

	if ( ! pFnClearSummary )
		pFnClearSummary = (UFunction*) UObject::GObjObjects()->Data[ 63335 ];

	UGFxTrScene_PlayerSummary_eventClearSummary_Parms ClearSummary_Parms;

	this->ProcessEvent ( pFnClearSummary, &ClearSummary_Parms, NULL );
};

// Function TribesGame.GFxTrScene_PlayerSummary.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_PlayerSummary::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 63334 ];

	UGFxTrScene_PlayerSummary_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.Interface_TrTripNotifier.OnTripSleep
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void UInterface_TrTripNotifier::eventOnTripSleep ( )
{
	static UFunction* pFnOnTripSleep = NULL;

	if ( ! pFnOnTripSleep )
		pFnOnTripSleep = (UFunction*) UObject::GObjObjects()->Data[ 64881 ];

	UInterface_TrTripNotifier_eventOnTripSleep_Parms OnTripSleep_Parms;

	this->ProcessEvent ( pFnOnTripSleep, &OnTripSleep_Parms, NULL );
};

// Function TribesGame.Interface_TrTripNotifier.OnTripAwake
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void UInterface_TrTripNotifier::eventOnTripAwake ( )
{
	static UFunction* pFnOnTripAwake = NULL;

	if ( ! pFnOnTripAwake )
		pFnOnTripAwake = (UFunction*) UObject::GObjObjects()->Data[ 64880 ];

	UInterface_TrTripNotifier_eventOnTripAwake_Parms OnTripAwake_Parms;

	this->ProcessEvent ( pFnOnTripAwake, &OnTripAwake_Parms, NULL );
};

// Function TribesGame.Interface_TrTripNotifier.GetTripSocketPosition
// [0x00420900] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsLeft                        ( CPF_Parm )
// struct FVector                 SocketPosition                 ( CPF_Parm | CPF_OutParm )

bool UInterface_TrTripNotifier::eventGetTripSocketPosition ( unsigned long bIsLeft, struct FVector* SocketPosition )
{
	static UFunction* pFnGetTripSocketPosition = NULL;

	if ( ! pFnGetTripSocketPosition )
		pFnGetTripSocketPosition = (UFunction*) UObject::GObjObjects()->Data[ 64876 ];

	UInterface_TrTripNotifier_eventGetTripSocketPosition_Parms GetTripSocketPosition_Parms;
	GetTripSocketPosition_Parms.bIsLeft = bIsLeft;

	this->ProcessEvent ( pFnGetTripSocketPosition, &GetTripSocketPosition_Parms, NULL );

	if ( SocketPosition )
		memcpy ( SocketPosition, &GetTripSocketPosition_Parms.SocketPosition, 0xC );

	return GetTripSocketPosition_Parms.ReturnValue;
};

// Function TribesGame.Interface_TrTripNotifier.GetParticleSystemName
// [0x00020100] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UParticleSystem* UInterface_TrTripNotifier::GetParticleSystemName ( )
{
	static UFunction* pFnGetParticleSystemName = NULL;

	if ( ! pFnGetParticleSystemName )
		pFnGetParticleSystemName = (UFunction*) UObject::GObjObjects()->Data[ 64874 ];

	UInterface_TrTripNotifier_execGetParticleSystemName_Parms GetParticleSystemName_Parms;

	this->ProcessEvent ( pFnGetParticleSystemName, &GetParticleSystemName_Parms, NULL );

	return GetParticleSystemName_Parms.ReturnValue;
};

// Function TribesGame.Interface_TrTripNotifier.TripActivated
// [0x00020100] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// struct FVector                 ActivateLocation               ( CPF_Parm )
// class ATrTripActor*            TripActor                      ( CPF_Parm )

void UInterface_TrTripNotifier::TripActivated ( class APawn* Other, struct FVector ActivateLocation, class ATrTripActor* TripActor )
{
	static UFunction* pFnTripActivated = NULL;

	if ( ! pFnTripActivated )
		pFnTripActivated = (UFunction*) UObject::GObjObjects()->Data[ 64870 ];

	UInterface_TrTripNotifier_execTripActivated_Parms TripActivated_Parms;
	TripActivated_Parms.Other = Other;
	memcpy ( &TripActivated_Parms.ActivateLocation, &ActivateLocation, 0xC );
	TripActivated_Parms.TripActor = TripActor;

	this->ProcessEvent ( pFnTripActivated, &TripActivated_Parms, NULL );
};

// Function TribesGame.Interface_TrTripNotifier.RemoveTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            RemoveTrip                     ( CPF_Parm )

void UInterface_TrTripNotifier::RemoveTripActor ( class ATrTripActor* RemoveTrip )
{
	static UFunction* pFnRemoveTripActor = NULL;

	if ( ! pFnRemoveTripActor )
		pFnRemoveTripActor = (UFunction*) UObject::GObjObjects()->Data[ 64868 ];

	UInterface_TrTripNotifier_execRemoveTripActor_Parms RemoveTripActor_Parms;
	RemoveTripActor_Parms.RemoveTrip = RemoveTrip;

	this->ProcessEvent ( pFnRemoveTripActor, &RemoveTripActor_Parms, NULL );
};

// Function TribesGame.Interface_TrTripNotifier.AddTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            NewTrip                        ( CPF_Parm )

void UInterface_TrTripNotifier::AddTripActor ( class ATrTripActor* NewTrip )
{
	static UFunction* pFnAddTripActor = NULL;

	if ( ! pFnAddTripActor )
		pFnAddTripActor = (UFunction*) UObject::GObjObjects()->Data[ 64866 ];

	UInterface_TrTripNotifier_execAddTripActor_Parms AddTripActor_Parms;
	AddTripActor_Parms.NewTrip = NewTrip;

	this->ProcessEvent ( pFnAddTripActor, &AddTripActor_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.BroadcastAccolade
// [0x00020002] 
// Parameters infos:
// class UClass*                  Accolade                       ( CPF_Parm )

void UTrAccoladeManager::BroadcastAccolade ( class UClass* Accolade )
{
	static UFunction* pFnBroadcastAccolade = NULL;

	if ( ! pFnBroadcastAccolade )
		pFnBroadcastAccolade = (UFunction*) UObject::GObjObjects()->Data[ 65896 ];

	UTrAccoladeManager_execBroadcastAccolade_Parms BroadcastAccolade_Parms;
	BroadcastAccolade_Parms.Accolade = Accolade;

	this->ProcessEvent ( pFnBroadcastAccolade, &BroadcastAccolade_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.CreditsGiven
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  Accolade                       ( CPF_Parm )

bool UTrAccoladeManager::CreditsGiven ( class UClass* Accolade )
{
	static UFunction* pFnCreditsGiven = NULL;

	if ( ! pFnCreditsGiven )
		pFnCreditsGiven = (UFunction*) UObject::GObjObjects()->Data[ 65893 ];

	UTrAccoladeManager_execCreditsGiven_Parms CreditsGiven_Parms;
	CreditsGiven_Parms.Accolade = Accolade;

	this->ProcessEvent ( pFnCreditsGiven, &CreditsGiven_Parms, NULL );

	return CreditsGiven_Parms.ReturnValue;
};

// Function TribesGame.TrAccoladeManager.QueueAccolade
// [0x00024002] 
// Parameters infos:
// class UClass*                  Accolade                       ( CPF_Parm )
// int                            ModifiedCredits                ( CPF_OptionalParm | CPF_Parm )

void UTrAccoladeManager::QueueAccolade ( class UClass* Accolade, int ModifiedCredits )
{
	static UFunction* pFnQueueAccolade = NULL;

	if ( ! pFnQueueAccolade )
		pFnQueueAccolade = (UFunction*) UObject::GObjObjects()->Data[ 65888 ];

	UTrAccoladeManager_execQueueAccolade_Parms QueueAccolade_Parms;
	QueueAccolade_Parms.Accolade = Accolade;
	QueueAccolade_Parms.ModifiedCredits = ModifiedCredits;

	this->ProcessEvent ( pFnQueueAccolade, &QueueAccolade_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.UpdateSpecialAccolades
// [0x00820002] 
// Parameters infos:
// class AController*             Victim                         ( CPF_Parm )

void UTrAccoladeManager::UpdateSpecialAccolades ( class AController* Victim )
{
	static UFunction* pFnUpdateSpecialAccolades = NULL;

	if ( ! pFnUpdateSpecialAccolades )
		pFnUpdateSpecialAccolades = (UFunction*) UObject::GObjObjects()->Data[ 65854 ];

	UTrAccoladeManager_execUpdateSpecialAccolades_Parms UpdateSpecialAccolades_Parms;
	UpdateSpecialAccolades_Parms.Victim = Victim;

	this->ProcessEvent ( pFnUpdateSpecialAccolades, &UpdateSpecialAccolades_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class ATrVehicle*              aVehicle                       ( CPF_Parm )

void UTrAccoladeManager::VehicleDestroyed ( class ATrVehicle* aVehicle )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 65851 ];

	UTrAccoladeManager_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.aVehicle = aVehicle;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.UpdateMultiKills
// [0x00020002] 
// Parameters infos:
// int                            MultiKillLevel                 ( CPF_Parm )

void UTrAccoladeManager::UpdateMultiKills ( int MultiKillLevel )
{
	static UFunction* pFnUpdateMultiKills = NULL;

	if ( ! pFnUpdateMultiKills )
		pFnUpdateMultiKills = (UFunction*) UObject::GObjObjects()->Data[ 65849 ];

	UTrAccoladeManager_execUpdateMultiKills_Parms UpdateMultiKills_Parms;
	UpdateMultiKills_Parms.MultiKillLevel = MultiKillLevel;

	this->ProcessEvent ( pFnUpdateMultiKills, &UpdateMultiKills_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.GameWon
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::GameWon ( )
{
	static UFunction* pFnGameWon = NULL;

	if ( ! pFnGameWon )
		pFnGameWon = (UFunction*) UObject::GObjObjects()->Data[ 65848 ];

	UTrAccoladeManager_execGameWon_Parms GameWon_Parms;

	this->ProcessEvent ( pFnGameWon, &GameWon_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.GameCompleted
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::GameCompleted ( )
{
	static UFunction* pFnGameCompleted = NULL;

	if ( ! pFnGameCompleted )
		pFnGameCompleted = (UFunction*) UObject::GObjObjects()->Data[ 65847 ];

	UTrAccoladeManager_execGameCompleted_Parms GameCompleted_Parms;

	this->ProcessEvent ( pFnGameCompleted, &GameCompleted_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.NoJoy
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::NoJoy ( )
{
	static UFunction* pFnNoJoy = NULL;

	if ( ! pFnNoJoy )
		pFnNoJoy = (UFunction*) UObject::GObjObjects()->Data[ 65846 ];

	UTrAccoladeManager_execNoJoy_Parms NoJoy_Parms;

	this->ProcessEvent ( pFnNoJoy, &NoJoy_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagReturn
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::FlagReturn ( )
{
	static UFunction* pFnFlagReturn = NULL;

	if ( ! pFnFlagReturn )
		pFnFlagReturn = (UFunction*) UObject::GObjObjects()->Data[ 65845 ];

	UTrAccoladeManager_execFlagReturn_Parms FlagReturn_Parms;

	this->ProcessEvent ( pFnFlagReturn, &FlagReturn_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagCapture
// [0x00020002] 
// Parameters infos:
// unsigned long                  bUnAssisted                    ( CPF_Parm )

void UTrAccoladeManager::FlagCapture ( unsigned long bUnAssisted )
{
	static UFunction* pFnFlagCapture = NULL;

	if ( ! pFnFlagCapture )
		pFnFlagCapture = (UFunction*) UObject::GObjObjects()->Data[ 65843 ];

	UTrAccoladeManager_execFlagCapture_Parms FlagCapture_Parms;
	FlagCapture_Parms.bUnAssisted = bUnAssisted;

	this->ProcessEvent ( pFnFlagCapture, &FlagCapture_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagAssist
// [0x00020002] 
// Parameters infos:
// int                            AssistCount                    ( CPF_Parm )

void UTrAccoladeManager::FlagAssist ( int AssistCount )
{
	static UFunction* pFnFlagAssist = NULL;

	if ( ! pFnFlagAssist )
		pFnFlagAssist = (UFunction*) UObject::GObjObjects()->Data[ 65840 ];

	UTrAccoladeManager_execFlagAssist_Parms FlagAssist_Parms;
	FlagAssist_Parms.AssistCount = AssistCount;

	this->ProcessEvent ( pFnFlagAssist, &FlagAssist_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagHeld
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::FlagHeld ( )
{
	static UFunction* pFnFlagHeld = NULL;

	if ( ! pFnFlagHeld )
		pFnFlagHeld = (UFunction*) UObject::GObjObjects()->Data[ 65839 ];

	UTrAccoladeManager_execFlagHeld_Parms FlagHeld_Parms;

	this->ProcessEvent ( pFnFlagHeld, &FlagHeld_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagGrabDeathmatch
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::FlagGrabDeathmatch ( )
{
	static UFunction* pFnFlagGrabDeathmatch = NULL;

	if ( ! pFnFlagGrabDeathmatch )
		pFnFlagGrabDeathmatch = (UFunction*) UObject::GObjObjects()->Data[ 65838 ];

	UTrAccoladeManager_execFlagGrabDeathmatch_Parms FlagGrabDeathmatch_Parms;

	this->ProcessEvent ( pFnFlagGrabDeathmatch, &FlagGrabDeathmatch_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.FlagGrab
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::FlagGrab ( )
{
	static UFunction* pFnFlagGrab = NULL;

	if ( ! pFnFlagGrab )
		pFnFlagGrab = (UFunction*) UObject::GObjObjects()->Data[ 65832 ];

	UTrAccoladeManager_execFlagGrab_Parms FlagGrab_Parms;

	this->ProcessEvent ( pFnFlagGrab, &FlagGrab_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KilledBaseRadar
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::KilledBaseRadar ( )
{
	static UFunction* pFnKilledBaseRadar = NULL;

	if ( ! pFnKilledBaseRadar )
		pFnKilledBaseRadar = (UFunction*) UObject::GObjObjects()->Data[ 65831 ];

	UTrAccoladeManager_execKilledBaseRadar_Parms KilledBaseRadar_Parms;

	this->ProcessEvent ( pFnKilledBaseRadar, &KilledBaseRadar_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KilledBaseTurret
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::KilledBaseTurret ( )
{
	static UFunction* pFnKilledBaseTurret = NULL;

	if ( ! pFnKilledBaseTurret )
		pFnKilledBaseTurret = (UFunction*) UObject::GObjObjects()->Data[ 65830 ];

	UTrAccoladeManager_execKilledBaseTurret_Parms KilledBaseTurret_Parms;

	this->ProcessEvent ( pFnKilledBaseTurret, &KilledBaseTurret_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.RepairedBase
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::RepairedBase ( )
{
	static UFunction* pFnRepairedBase = NULL;

	if ( ! pFnRepairedBase )
		pFnRepairedBase = (UFunction*) UObject::GObjObjects()->Data[ 65829 ];

	UTrAccoladeManager_execRepairedBase_Parms RepairedBase_Parms;

	this->ProcessEvent ( pFnRepairedBase, &RepairedBase_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KilledGenerator
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::KilledGenerator ( )
{
	static UFunction* pFnKilledGenerator = NULL;

	if ( ! pFnKilledGenerator )
		pFnKilledGenerator = (UFunction*) UObject::GObjObjects()->Data[ 65828 ];

	UTrAccoladeManager_execKilledGenerator_Parms KilledGenerator_Parms;

	this->ProcessEvent ( pFnKilledGenerator, &KilledGenerator_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.UpdateStandardKillingSpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )
// int                            currentSpree                   ( CPF_Parm )

void UTrAccoladeManager::UpdateStandardKillingSpree ( class AUTPlayerReplicationInfo* Other, int currentSpree )
{
	static UFunction* pFnUpdateStandardKillingSpree = NULL;

	if ( ! pFnUpdateStandardKillingSpree )
		pFnUpdateStandardKillingSpree = (UFunction*) UObject::GObjObjects()->Data[ 65825 ];

	UTrAccoladeManager_execUpdateStandardKillingSpree_Parms UpdateStandardKillingSpree_Parms;
	UpdateStandardKillingSpree_Parms.Other = Other;
	UpdateStandardKillingSpree_Parms.currentSpree = currentSpree;

	this->ProcessEvent ( pFnUpdateStandardKillingSpree, &UpdateStandardKillingSpree_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KilledTheFlagHolder
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::KilledTheFlagHolder ( )
{
	static UFunction* pFnKilledTheFlagHolder = NULL;

	if ( ! pFnKilledTheFlagHolder )
		pFnKilledTheFlagHolder = (UFunction*) UObject::GObjObjects()->Data[ 65824 ];

	UTrAccoladeManager_execKilledTheFlagHolder_Parms KilledTheFlagHolder_Parms;

	this->ProcessEvent ( pFnKilledTheFlagHolder, &KilledTheFlagHolder_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KilledTheRabbit
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void UTrAccoladeManager::KilledTheRabbit ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnKilledTheRabbit = NULL;

	if ( ! pFnKilledTheRabbit )
		pFnKilledTheRabbit = (UFunction*) UObject::GObjObjects()->Data[ 65821 ];

	UTrAccoladeManager_execKilledTheRabbit_Parms KilledTheRabbit_Parms;
	KilledTheRabbit_Parms.Killer = Killer;
	KilledTheRabbit_Parms.Other = Other;

	this->ProcessEvent ( pFnKilledTheRabbit, &KilledTheRabbit_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.KillAsRabbit
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void UTrAccoladeManager::KillAsRabbit ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnKillAsRabbit = NULL;

	if ( ! pFnKillAsRabbit )
		pFnKillAsRabbit = (UFunction*) UObject::GObjObjects()->Data[ 65818 ];

	UTrAccoladeManager_execKillAsRabbit_Parms KillAsRabbit_Parms;
	KillAsRabbit_Parms.Killer = Killer;
	KillAsRabbit_Parms.Other = Other;

	this->ProcessEvent ( pFnKillAsRabbit, &KillAsRabbit_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.GiveVehicleAssist
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::GiveVehicleAssist ( )
{
	static UFunction* pFnGiveVehicleAssist = NULL;

	if ( ! pFnGiveVehicleAssist )
		pFnGiveVehicleAssist = (UFunction*) UObject::GObjObjects()->Data[ 65817 ];

	UTrAccoladeManager_execGiveVehicleAssist_Parms GiveVehicleAssist_Parms;

	this->ProcessEvent ( pFnGiveVehicleAssist, &GiveVehicleAssist_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.GiveAssist
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::GiveAssist ( )
{
	static UFunction* pFnGiveAssist = NULL;

	if ( ! pFnGiveAssist )
		pFnGiveAssist = (UFunction*) UObject::GObjObjects()->Data[ 65816 ];

	UTrAccoladeManager_execGiveAssist_Parms GiveAssist_Parms;

	this->ProcessEvent ( pFnGiveAssist, &GiveAssist_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.ResetStreaks
// [0x00020002] 
// Parameters infos:

void UTrAccoladeManager::ResetStreaks ( )
{
	static UFunction* pFnResetStreaks = NULL;

	if ( ! pFnResetStreaks )
		pFnResetStreaks = (UFunction*) UObject::GObjObjects()->Data[ 65815 ];

	UTrAccoladeManager_execResetStreaks_Parms ResetStreaks_Parms;

	this->ProcessEvent ( pFnResetStreaks, &ResetStreaks_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void UTrAccoladeManager::Initialize ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 65812 ];

	UTrAccoladeManager_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrAccoladeManager.GetFlagDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 Loc1                           ( CPF_Parm )
// struct FVector                 Loc2                           ( CPF_Parm )

int UTrAccoladeManager::GetFlagDistance ( struct FVector Loc1, struct FVector Loc2 )
{
	static UFunction* pFnGetFlagDistance = NULL;

	if ( ! pFnGetFlagDistance )
		pFnGetFlagDistance = (UFunction*) UObject::GObjObjects()->Data[ 65808 ];

	UTrAccoladeManager_execGetFlagDistance_Parms GetFlagDistance_Parms;
	memcpy ( &GetFlagDistance_Parms.Loc1, &Loc1, 0xC );
	memcpy ( &GetFlagDistance_Parms.Loc2, &Loc2, 0xC );

	pFnGetFlagDistance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFlagDistance, &GetFlagDistance_Parms, NULL );

	pFnGetFlagDistance->FunctionFlags |= 0x400;

	return GetFlagDistance_Parms.ReturnValue;
};

// Function TribesGame.TrAnimNodeBlendList.GetBlendTime
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ChildIndex                     ( CPF_Parm )
// unsigned long                  bGetDefault                    ( CPF_OptionalParm | CPF_Parm )

float UTrAnimNodeBlendList::GetBlendTime ( int ChildIndex, unsigned long bGetDefault )
{
	static UFunction* pFnGetBlendTime = NULL;

	if ( ! pFnGetBlendTime )
		pFnGetBlendTime = (UFunction*) UObject::GObjObjects()->Data[ 65938 ];

	UTrAnimNodeBlendList_execGetBlendTime_Parms GetBlendTime_Parms;
	GetBlendTime_Parms.ChildIndex = ChildIndex;
	GetBlendTime_Parms.bGetDefault = bGetDefault;

	pFnGetBlendTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBlendTime, &GetBlendTime_Parms, NULL );

	pFnGetBlendTime->FunctionFlags |= 0x400;

	return GetBlendTime_Parms.ReturnValue;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayOffhand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FName                   OffhandAnimName                ( CPF_Parm )

void UTrAnimNodeBlendBy3pDevice::PlayOffhand ( struct FName OffhandAnimName )
{
	static UFunction* pFnPlayOffhand = NULL;

	if ( ! pFnPlayOffhand )
		pFnPlayOffhand = (UFunction*) UObject::GObjObjects()->Data[ 65969 ];

	UTrAnimNodeBlendBy3pDevice_execPlayOffhand_Parms PlayOffhand_Parms;
	memcpy ( &PlayOffhand_Parms.OffhandAnimName, &OffhandAnimName, 0x8 );

	pFnPlayOffhand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayOffhand, &PlayOffhand_Parms, NULL );

	pFnPlayOffhand->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayReload
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReloadTime                     ( CPF_Parm )

void UTrAnimNodeBlendBy3pDevice::PlayReload ( float ReloadTime )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 65967 ];

	UTrAnimNodeBlendBy3pDevice_execPlayReload_Parms PlayReload_Parms;
	PlayReload_Parms.ReloadTime = ReloadTime;

	pFnPlayReload->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );

	pFnPlayReload->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayRetrieve
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          RetrieveTime                   ( CPF_Parm )
// float                          ForcedRateBuff                 ( CPF_Parm )

void UTrAnimNodeBlendBy3pDevice::PlayRetrieve ( float RetrieveTime, float ForcedRateBuff )
{
	static UFunction* pFnPlayRetrieve = NULL;

	if ( ! pFnPlayRetrieve )
		pFnPlayRetrieve = (UFunction*) UObject::GObjObjects()->Data[ 65964 ];

	UTrAnimNodeBlendBy3pDevice_execPlayRetrieve_Parms PlayRetrieve_Parms;
	PlayRetrieve_Parms.RetrieveTime = RetrieveTime;
	PlayRetrieve_Parms.ForcedRateBuff = ForcedRateBuff;

	pFnPlayRetrieve->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayRetrieve, &PlayRetrieve_Parms, NULL );

	pFnPlayRetrieve->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayPutaway
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          PutAwayTime                    ( CPF_Parm )
// float                          ForcedRateBuff                 ( CPF_Parm )

void UTrAnimNodeBlendBy3pDevice::PlayPutaway ( float PutAwayTime, float ForcedRateBuff )
{
	static UFunction* pFnPlayPutaway = NULL;

	if ( ! pFnPlayPutaway )
		pFnPlayPutaway = (UFunction*) UObject::GObjObjects()->Data[ 65961 ];

	UTrAnimNodeBlendBy3pDevice_execPlayPutaway_Parms PlayPutaway_Parms;
	PlayPutaway_Parms.PutAwayTime = PutAwayTime;
	PlayPutaway_Parms.ForcedRateBuff = ForcedRateBuff;

	pFnPlayPutaway->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayPutaway, &PlayPutaway_Parms, NULL );

	pFnPlayPutaway->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          RefireTime                     ( CPF_Parm )

void UTrAnimNodeBlendBy3pDevice::PlayFire ( float RefireTime )
{
	static UFunction* pFnPlayFire = NULL;

	if ( ! pFnPlayFire )
		pFnPlayFire = (UFunction*) UObject::GObjObjects()->Data[ 65959 ];

	UTrAnimNodeBlendBy3pDevice_execPlayFire_Parms PlayFire_Parms;
	PlayFire_Parms.RefireTime = RefireTime;

	pFnPlayFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayFire, &PlayFire_Parms, NULL );

	pFnPlayFire->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayBuildup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendBy3pDevice::PlayBuildup ( )
{
	static UFunction* pFnPlayBuildup = NULL;

	if ( ! pFnPlayBuildup )
		pFnPlayBuildup = (UFunction*) UObject::GObjObjects()->Data[ 65958 ];

	UTrAnimNodeBlendBy3pDevice_execPlayBuildup_Parms PlayBuildup_Parms;

	pFnPlayBuildup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayBuildup, &PlayBuildup_Parms, NULL );

	pFnPlayBuildup->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendBy3pDevice.PlayIdle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendBy3pDevice::PlayIdle ( )
{
	static UFunction* pFnPlayIdle = NULL;

	if ( ! pFnPlayIdle )
		pFnPlayIdle = (UFunction*) UObject::GObjObjects()->Data[ 65957 ];

	UTrAnimNodeBlendBy3pDevice_execPlayIdle_Parms PlayIdle_Parms;

	pFnPlayIdle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayIdle, &PlayIdle_Parms, NULL );

	pFnPlayIdle->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayQuickRetrieve
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::PlayQuickRetrieve ( )
{
	static UFunction* pFnPlayQuickRetrieve = NULL;

	if ( ! pFnPlayQuickRetrieve )
		pFnPlayQuickRetrieve = (UFunction*) UObject::GObjObjects()->Data[ 66031 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayQuickRetrieve_Parms PlayQuickRetrieve_Parms;

	pFnPlayQuickRetrieve->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayQuickRetrieve, &PlayQuickRetrieve_Parms, NULL );

	pFnPlayQuickRetrieve->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayDryFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::PlayDryFire ( )
{
	static UFunction* pFnPlayDryFire = NULL;

	if ( ! pFnPlayDryFire )
		pFnPlayDryFire = (UFunction*) UObject::GObjObjects()->Data[ 66030 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayDryFire_Parms PlayDryFire_Parms;

	pFnPlayDryFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayDryFire, &PlayDryFire_Parms, NULL );

	pFnPlayDryFire->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.OnStopFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::OnStopFire ( )
{
	static UFunction* pFnOnStopFire = NULL;

	if ( ! pFnOnStopFire )
		pFnOnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 66029 ];

	UTrAnimNodeBlendByDeviceAnim_execOnStopFire_Parms OnStopFire_Parms;

	pFnOnStopFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnStopFire, &OnStopFire_Parms, NULL );

	pFnOnStopFire->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayOffhand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          Rate                           ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayOffhand ( float Rate )
{
	static UFunction* pFnPlayOffhand = NULL;

	if ( ! pFnPlayOffhand )
		pFnPlayOffhand = (UFunction*) UObject::GObjObjects()->Data[ 66027 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayOffhand_Parms PlayOffhand_Parms;
	PlayOffhand_Parms.Rate = Rate;

	pFnPlayOffhand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayOffhand, &PlayOffhand_Parms, NULL );

	pFnPlayOffhand->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayReload
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReloadTime                     ( CPF_Parm )
// int                            RoundsRemainingInClip          ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayReload ( float ReloadTime, int RoundsRemainingInClip )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 66024 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayReload_Parms PlayReload_Parms;
	PlayReload_Parms.ReloadTime = ReloadTime;
	PlayReload_Parms.RoundsRemainingInClip = RoundsRemainingInClip;

	pFnPlayReload->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );

	pFnPlayReload->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayRetrieve
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          RetrieveTime                   ( CPF_Parm )
// float                          ForcedRateBuff                 ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayRetrieve ( float RetrieveTime, float ForcedRateBuff )
{
	static UFunction* pFnPlayRetrieve = NULL;

	if ( ! pFnPlayRetrieve )
		pFnPlayRetrieve = (UFunction*) UObject::GObjObjects()->Data[ 66021 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayRetrieve_Parms PlayRetrieve_Parms;
	PlayRetrieve_Parms.RetrieveTime = RetrieveTime;
	PlayRetrieve_Parms.ForcedRateBuff = ForcedRateBuff;

	pFnPlayRetrieve->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayRetrieve, &PlayRetrieve_Parms, NULL );

	pFnPlayRetrieve->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayPutaway
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          PutAwayTime                    ( CPF_Parm )
// float                          ForcedRateBuff                 ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayPutaway ( float PutAwayTime, float ForcedRateBuff )
{
	static UFunction* pFnPlayPutaway = NULL;

	if ( ! pFnPlayPutaway )
		pFnPlayPutaway = (UFunction*) UObject::GObjObjects()->Data[ 66018 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayPutaway_Parms PlayPutaway_Parms;
	PlayPutaway_Parms.PutAwayTime = PutAwayTime;
	PlayPutaway_Parms.ForcedRateBuff = ForcedRateBuff;

	pFnPlayPutaway->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayPutaway, &PlayPutaway_Parms, NULL );

	pFnPlayPutaway->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SocketIndex                    ( CPF_Parm )
// float                          RefireTime                     ( CPF_Parm )
// int                            RoundsRemainingInClip          ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayFire ( int SocketIndex, float RefireTime, int RoundsRemainingInClip )
{
	static UFunction* pFnPlayFire = NULL;

	if ( ! pFnPlayFire )
		pFnPlayFire = (UFunction*) UObject::GObjObjects()->Data[ 66014 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayFire_Parms PlayFire_Parms;
	PlayFire_Parms.SocketIndex = SocketIndex;
	PlayFire_Parms.RefireTime = RefireTime;
	PlayFire_Parms.RoundsRemainingInClip = RoundsRemainingInClip;

	pFnPlayFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayFire, &PlayFire_Parms, NULL );

	pFnPlayFire->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayBuildup
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          BuildupTime                    ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::PlayBuildup ( float BuildupTime )
{
	static UFunction* pFnPlayBuildup = NULL;

	if ( ! pFnPlayBuildup )
		pFnPlayBuildup = (UFunction*) UObject::GObjObjects()->Data[ 66012 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayBuildup_Parms PlayBuildup_Parms;
	PlayBuildup_Parms.BuildupTime = BuildupTime;

	pFnPlayBuildup->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayBuildup, &PlayBuildup_Parms, NULL );

	pFnPlayBuildup->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayAltIdle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::PlayAltIdle ( )
{
	static UFunction* pFnPlayAltIdle = NULL;

	if ( ! pFnPlayAltIdle )
		pFnPlayAltIdle = (UFunction*) UObject::GObjObjects()->Data[ 66011 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayAltIdle_Parms PlayAltIdle_Parms;

	pFnPlayAltIdle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayAltIdle, &PlayAltIdle_Parms, NULL );

	pFnPlayAltIdle->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.PlayIdle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::PlayIdle ( )
{
	static UFunction* pFnPlayIdle = NULL;

	if ( ! pFnPlayIdle )
		pFnPlayIdle = (UFunction*) UObject::GObjObjects()->Data[ 66010 ];

	UTrAnimNodeBlendByDeviceAnim_execPlayIdle_Parms PlayIdle_Parms;

	pFnPlayIdle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayIdle, &PlayIdle_Parms, NULL );

	pFnPlayIdle->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ChildIndex                     ( CPF_Parm )
// float                          BlendTime                      ( CPF_Parm )

void UTrAnimNodeBlendByDeviceAnim::SetActiveChild ( int ChildIndex, float BlendTime )
{
	static UFunction* pFnSetActiveChild = NULL;

	if ( ! pFnSetActiveChild )
		pFnSetActiveChild = (UFunction*) UObject::GObjObjects()->Data[ 66007 ];

	UTrAnimNodeBlendByDeviceAnim_execSetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;

	pFnSetActiveChild->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveChild, &SetActiveChild_Parms, NULL );

	pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByDeviceAnim.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByDeviceAnim::StopAnim ( )
{
	static UFunction* pFnStopAnim = NULL;

	if ( ! pFnStopAnim )
		pFnStopAnim = (UFunction*) UObject::GObjObjects()->Data[ 66006 ];

	UTrAnimNodeBlendByDeviceAnim_execStopAnim_Parms StopAnim_Parms;

	pFnStopAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStopAnim, &StopAnim_Parms, NULL );

	pFnStopAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByRidingPassenger.PlayOffhand
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByRidingPassenger::PlayOffhand ( )
{
	static UFunction* pFnPlayOffhand = NULL;

	if ( ! pFnPlayOffhand )
		pFnPlayOffhand = (UFunction*) UObject::GObjObjects()->Data[ 66081 ];

	UTrAnimNodeBlendByRidingPassenger_execPlayOffhand_Parms PlayOffhand_Parms;

	pFnPlayOffhand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayOffhand, &PlayOffhand_Parms, NULL );

	pFnPlayOffhand->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByRidingPassenger.PlayReload
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReloadTime                     ( CPF_Parm )

void UTrAnimNodeBlendByRidingPassenger::PlayReload ( float ReloadTime )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 66079 ];

	UTrAnimNodeBlendByRidingPassenger_execPlayReload_Parms PlayReload_Parms;
	PlayReload_Parms.ReloadTime = ReloadTime;

	pFnPlayReload->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );

	pFnPlayReload->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByRidingPassenger.PlayFire
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          RefireTime                     ( CPF_Parm )
// struct FName                   FireAnimName                   ( CPF_Parm )
// float                          ReloadTime                     ( CPF_Parm )

void UTrAnimNodeBlendByRidingPassenger::PlayFire ( float RefireTime, struct FName FireAnimName, float ReloadTime )
{
	static UFunction* pFnPlayFire = NULL;

	if ( ! pFnPlayFire )
		pFnPlayFire = (UFunction*) UObject::GObjObjects()->Data[ 66075 ];

	UTrAnimNodeBlendByRidingPassenger_execPlayFire_Parms PlayFire_Parms;
	PlayFire_Parms.RefireTime = RefireTime;
	memcpy ( &PlayFire_Parms.FireAnimName, &FireAnimName, 0x8 );
	PlayFire_Parms.ReloadTime = ReloadTime;

	pFnPlayFire->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayFire, &PlayFire_Parms, NULL );

	pFnPlayFire->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByRidingPassenger.PlayIdle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByRidingPassenger::PlayIdle ( )
{
	static UFunction* pFnPlayIdle = NULL;

	if ( ! pFnPlayIdle )
		pFnPlayIdle = (UFunction*) UObject::GObjObjects()->Data[ 66074 ];

	UTrAnimNodeBlendByRidingPassenger_execPlayIdle_Parms PlayIdle_Parms;

	pFnPlayIdle->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayIdle, &PlayIdle_Parms, NULL );

	pFnPlayIdle->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByVehicle.PlayChangeSeatAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByVehicle::PlayChangeSeatAnim ( )
{
	static UFunction* pFnPlayChangeSeatAnim = NULL;

	if ( ! pFnPlayChangeSeatAnim )
		pFnPlayChangeSeatAnim = (UFunction*) UObject::GObjObjects()->Data[ 66096 ];

	UTrAnimNodeBlendByVehicle_execPlayChangeSeatAnim_Parms PlayChangeSeatAnim_Parms;

	pFnPlayChangeSeatAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayChangeSeatAnim, &PlayChangeSeatAnim_Parms, NULL );

	pFnPlayChangeSeatAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByVehicle.PlayExitAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByVehicle::PlayExitAnim ( )
{
	static UFunction* pFnPlayExitAnim = NULL;

	if ( ! pFnPlayExitAnim )
		pFnPlayExitAnim = (UFunction*) UObject::GObjObjects()->Data[ 66095 ];

	UTrAnimNodeBlendByVehicle_execPlayExitAnim_Parms PlayExitAnim_Parms;

	pFnPlayExitAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayExitAnim, &PlayExitAnim_Parms, NULL );

	pFnPlayExitAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByVehicle.PlayEnterAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByVehicle::PlayEnterAnim ( )
{
	static UFunction* pFnPlayEnterAnim = NULL;

	if ( ! pFnPlayEnterAnim )
		pFnPlayEnterAnim = (UFunction*) UObject::GObjObjects()->Data[ 66094 ];

	UTrAnimNodeBlendByVehicle_execPlayEnterAnim_Parms PlayEnterAnim_Parms;

	pFnPlayEnterAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayEnterAnim, &PlayEnterAnim_Parms, NULL );

	pFnPlayEnterAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByVehicle.PlayDrivingAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByVehicle::PlayDrivingAnim ( )
{
	static UFunction* pFnPlayDrivingAnim = NULL;

	if ( ! pFnPlayDrivingAnim )
		pFnPlayDrivingAnim = (UFunction*) UObject::GObjObjects()->Data[ 66093 ];

	UTrAnimNodeBlendByVehicle_execPlayDrivingAnim_Parms PlayDrivingAnim_Parms;

	pFnPlayDrivingAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayDrivingAnim, &PlayDrivingAnim_Parms, NULL );

	pFnPlayDrivingAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeBlendByVehicle.PlayNoVehicleAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAnimNodeBlendByVehicle::PlayNoVehicleAnim ( )
{
	static UFunction* pFnPlayNoVehicleAnim = NULL;

	if ( ! pFnPlayNoVehicleAnim )
		pFnPlayNoVehicleAnim = (UFunction*) UObject::GObjObjects()->Data[ 66092 ];

	UTrAnimNodeBlendByVehicle_execPlayNoVehicleAnim_Parms PlayNoVehicleAnim_Parms;

	pFnPlayNoVehicleAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayNoVehicleAnim, &PlayNoVehicleAnim_Parms, NULL );

	pFnPlayNoVehicleAnim->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAnimNodeSequencePose.FillWithPose
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void UTrAnimNodeSequencePose::FillWithPose ( class ATrPawn* P )
{
	static UFunction* pFnFillWithPose = NULL;

	if ( ! pFnFillWithPose )
		pFnFillWithPose = (UFunction*) UObject::GObjObjects()->Data[ 66099 ];

	UTrAnimNodeSequencePose_execFillWithPose_Parms FillWithPose_Parms;
	FillWithPose_Parms.P = P;

	pFnFillWithPose->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFillWithPose, &FillWithPose_Parms, NULL );

	pFnFillWithPose->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAudioSettings.GetSettingNameFromType
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Type                           ( CPF_Parm )

struct FString UTrAudioSettings::GetSettingNameFromType ( unsigned char Type )
{
	static UFunction* pFnGetSettingNameFromType = NULL;

	if ( ! pFnGetSettingNameFromType )
		pFnGetSettingNameFromType = (UFunction*) UObject::GObjObjects()->Data[ 68609 ];

	UTrAudioSettings_execGetSettingNameFromType_Parms GetSettingNameFromType_Parms;
	GetSettingNameFromType_Parms.Type = Type;

	this->ProcessEvent ( pFnGetSettingNameFromType, &GetSettingNameFromType_Parms, NULL );

	return GetSettingNameFromType_Parms.ReturnValue;
};

// Function TribesGame.TrAudioSettings.SetBassBoost
// [0x00020002] 
// Parameters infos:
// unsigned long                  NewBassBoost                   ( CPF_Parm )

void UTrAudioSettings::SetBassBoost ( unsigned long NewBassBoost )
{
	static UFunction* pFnSetBassBoost = NULL;

	if ( ! pFnSetBassBoost )
		pFnSetBassBoost = (UFunction*) UObject::GObjObjects()->Data[ 68606 ];

	UTrAudioSettings_execSetBassBoost_Parms SetBassBoost_Parms;
	SetBassBoost_Parms.NewBassBoost = NewBassBoost;

	this->ProcessEvent ( pFnSetBassBoost, &SetBassBoost_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.GetBassBoost
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrAudioSettings::GetBassBoost ( )
{
	static UFunction* pFnGetBassBoost = NULL;

	if ( ! pFnGetBassBoost )
		pFnGetBassBoost = (UFunction*) UObject::GObjObjects()->Data[ 68601 ];

	UTrAudioSettings_execGetBassBoost_Parms GetBassBoost_Parms;

	this->ProcessEvent ( pFnGetBassBoost, &GetBassBoost_Parms, NULL );

	return GetBassBoost_Parms.ReturnValue;
};

// Function TribesGame.TrAudioSettings.SetVoiceVolume
// [0x00020002] 
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void UTrAudioSettings::SetVoiceVolume ( float NewVolume )
{
	static UFunction* pFnSetVoiceVolume = NULL;

	if ( ! pFnSetVoiceVolume )
		pFnSetVoiceVolume = (UFunction*) UObject::GObjObjects()->Data[ 68598 ];

	UTrAudioSettings_execSetVoiceVolume_Parms SetVoiceVolume_Parms;
	SetVoiceVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnSetVoiceVolume, &SetVoiceVolume_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.SetVGSVolume
// [0x00020002] 
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void UTrAudioSettings::SetVGSVolume ( float NewVolume )
{
	static UFunction* pFnSetVGSVolume = NULL;

	if ( ! pFnSetVGSVolume )
		pFnSetVGSVolume = (UFunction*) UObject::GObjObjects()->Data[ 68595 ];

	UTrAudioSettings_execSetVGSVolume_Parms SetVGSVolume_Parms;
	SetVGSVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnSetVGSVolume, &SetVGSVolume_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.SetMusicVolume
// [0x00020002] 
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void UTrAudioSettings::SetMusicVolume ( float NewVolume )
{
	static UFunction* pFnSetMusicVolume = NULL;

	if ( ! pFnSetMusicVolume )
		pFnSetMusicVolume = (UFunction*) UObject::GObjObjects()->Data[ 68592 ];

	UTrAudioSettings_execSetMusicVolume_Parms SetMusicVolume_Parms;
	SetMusicVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnSetMusicVolume, &SetMusicVolume_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.SetEffectsVolume
// [0x00020002] 
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void UTrAudioSettings::SetEffectsVolume ( float NewVolume )
{
	static UFunction* pFnSetEffectsVolume = NULL;

	if ( ! pFnSetEffectsVolume )
		pFnSetEffectsVolume = (UFunction*) UObject::GObjObjects()->Data[ 68589 ];

	UTrAudioSettings_execSetEffectsVolume_Parms SetEffectsVolume_Parms;
	SetEffectsVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnSetEffectsVolume, &SetEffectsVolume_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.SetMasterVolume
// [0x00020002] 
// Parameters infos:
// float                          NewVolume                      ( CPF_Parm )

void UTrAudioSettings::SetMasterVolume ( float NewVolume )
{
	static UFunction* pFnSetMasterVolume = NULL;

	if ( ! pFnSetMasterVolume )
		pFnSetMasterVolume = (UFunction*) UObject::GObjObjects()->Data[ 68586 ];

	UTrAudioSettings_execSetMasterVolume_Parms SetMasterVolume_Parms;
	SetMasterVolume_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnSetMasterVolume, &SetMasterVolume_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.AddSettingToList
// [0x00020002] 
// Parameters infos:
// struct FString                 SettingName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UTrAudioSettings::AddSettingToList ( struct FString SettingName, int val )
{
	static UFunction* pFnAddSettingToList = NULL;

	if ( ! pFnAddSettingToList )
		pFnAddSettingToList = (UFunction*) UObject::GObjObjects()->Data[ 68582 ];

	UTrAudioSettings_execAddSettingToList_Parms AddSettingToList_Parms;
	memcpy ( &AddSettingToList_Parms.SettingName, &SettingName, 0xC );
	AddSettingToList_Parms.val = val;

	this->ProcessEvent ( pFnAddSettingToList, &AddSettingToList_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.GetCurrentSettingValue
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )

int UTrAudioSettings::GetCurrentSettingValue ( unsigned char Type )
{
	static UFunction* pFnGetCurrentSettingValue = NULL;

	if ( ! pFnGetCurrentSettingValue )
		pFnGetCurrentSettingValue = (UFunction*) UObject::GObjObjects()->Data[ 56885 ];

	UTrAudioSettings_execGetCurrentSettingValue_Parms GetCurrentSettingValue_Parms;
	GetCurrentSettingValue_Parms.Type = Type;

	this->ProcessEvent ( pFnGetCurrentSettingValue, &GetCurrentSettingValue_Parms, NULL );

	return GetCurrentSettingValue_Parms.ReturnValue;
};

// Function TribesGame.TrAudioSettings.ApplyAudioSetting
// [0x00024002] 
// Parameters infos:
// int                            Type                           ( CPF_Parm )
// int                            val                            ( CPF_Parm )
// unsigned long                  bStore                         ( CPF_OptionalParm | CPF_Parm )

void UTrAudioSettings::ApplyAudioSetting ( int Type, int val, unsigned long bStore )
{
	static UFunction* pFnApplyAudioSetting = NULL;

	if ( ! pFnApplyAudioSetting )
		pFnApplyAudioSetting = (UFunction*) UObject::GObjObjects()->Data[ 68577 ];

	UTrAudioSettings_execApplyAudioSetting_Parms ApplyAudioSetting_Parms;
	ApplyAudioSetting_Parms.Type = Type;
	ApplyAudioSetting_Parms.val = val;
	ApplyAudioSetting_Parms.bStore = bStore;

	this->ProcessEvent ( pFnApplyAudioSetting, &ApplyAudioSetting_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.LoadAudioSettings
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrAudioSettings::LoadAudioSettings ( class UGFxObject* List )
{
	static UFunction* pFnLoadAudioSettings = NULL;

	if ( ! pFnLoadAudioSettings )
		pFnLoadAudioSettings = (UFunction*) UObject::GObjObjects()->Data[ 68574 ];

	UTrAudioSettings_execLoadAudioSettings_Parms LoadAudioSettings_Parms;
	LoadAudioSettings_Parms.List = List;

	this->ProcessEvent ( pFnLoadAudioSettings, &LoadAudioSettings_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.InitializeAudioVolumes
// [0x00020002] 
// Parameters infos:

void UTrAudioSettings::InitializeAudioVolumes ( )
{
	static UFunction* pFnInitializeAudioVolumes = NULL;

	if ( ! pFnInitializeAudioVolumes )
		pFnInitializeAudioVolumes = (UFunction*) UObject::GObjObjects()->Data[ 68573 ];

	UTrAudioSettings_execInitializeAudioVolumes_Parms InitializeAudioVolumes_Parms;

	this->ProcessEvent ( pFnInitializeAudioVolumes, &InitializeAudioVolumes_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.ReadSettings
// [0x00020002] 
// Parameters infos:

void UTrAudioSettings::ReadSettings ( )
{
	static UFunction* pFnReadSettings = NULL;

	if ( ! pFnReadSettings )
		pFnReadSettings = (UFunction*) UObject::GObjObjects()->Data[ 68570 ];

	UTrAudioSettings_execReadSettings_Parms ReadSettings_Parms;

	this->ProcessEvent ( pFnReadSettings, &ReadSettings_Parms, NULL );
};

// Function TribesGame.TrAudioSettings.ReadSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SettingId                      ( CPF_Parm )

int UTrAudioSettings::ReadSetting ( int SettingId )
{
	static UFunction* pFnReadSetting = NULL;

	if ( ! pFnReadSetting )
		pFnReadSetting = (UFunction*) UObject::GObjObjects()->Data[ 68567 ];

	UTrAudioSettings_execReadSetting_Parms ReadSetting_Parms;
	ReadSetting_Parms.SettingId = SettingId;

	pFnReadSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadSetting, &ReadSetting_Parms, NULL );

	pFnReadSetting->FunctionFlags |= 0x400;

	return ReadSetting_Parms.ReturnValue;
};

// Function TribesGame.TrAudioSettings.StoreSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SettingId                      ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrAudioSettings::StoreSetting ( int SettingId, int val )
{
	static UFunction* pFnStoreSetting = NULL;

	if ( ! pFnStoreSetting )
		pFnStoreSetting = (UFunction*) UObject::GObjObjects()->Data[ 68564 ];

	UTrAudioSettings_execStoreSetting_Parms StoreSetting_Parms;
	StoreSetting_Parms.SettingId = SettingId;
	StoreSetting_Parms.val = val;

	pFnStoreSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStoreSetting, &StoreSetting_Parms, NULL );

	pFnStoreSetting->FunctionFlags |= 0x400;
};

// Function TribesGame.TrAudioSettings.FlushSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrAudioSettings::FlushSettings ( )
{
	static UFunction* pFnFlushSettings = NULL;

	if ( ! pFnFlushSettings )
		pFnFlushSettings = (UFunction*) UObject::GObjObjects()->Data[ 68563 ];

	UTrAudioSettings_execFlushSettings_Parms FlushSettings_Parms;

	pFnFlushSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushSettings, &FlushSettings_Parms, NULL );

	pFnFlushSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrBrowserManager.GetLangParam
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrBrowserManager::GetLangParam ( )
{
	static UFunction* pFnGetLangParam = NULL;

	if ( ! pFnGetLangParam )
		pFnGetLangParam = (UFunction*) UObject::GObjObjects()->Data[ 73329 ];

	UTrBrowserManager_execGetLangParam_Parms GetLangParam_Parms;

	this->ProcessEvent ( pFnGetLangParam, &GetLangParam_Parms, NULL );

	return GetLangParam_Parms.ReturnValue;
};

// Function TribesGame.TrBrowserManager.CreateAccount
// [0x00020002] 
// Parameters infos:
// unsigned long                  bUsingSteam                    ( CPF_Parm )

void UTrBrowserManager::CreateAccount ( unsigned long bUsingSteam )
{
	static UFunction* pFnCreateAccount = NULL;

	if ( ! pFnCreateAccount )
		pFnCreateAccount = (UFunction*) UObject::GObjObjects()->Data[ 73327 ];

	UTrBrowserManager_execCreateAccount_Parms CreateAccount_Parms;
	CreateAccount_Parms.bUsingSteam = bUsingSteam;

	this->ProcessEvent ( pFnCreateAccount, &CreateAccount_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.ClassVideo
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )

void UTrBrowserManager::ClassVideo ( int Id )
{
	static UFunction* pFnClassVideo = NULL;

	if ( ! pFnClassVideo )
		pFnClassVideo = (UFunction*) UObject::GObjObjects()->Data[ 73325 ];

	UTrBrowserManager_execClassVideo_Parms ClassVideo_Parms;
	ClassVideo_Parms.Id = Id;

	this->ProcessEvent ( pFnClassVideo, &ClassVideo_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.RecoverUsername
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::RecoverUsername ( )
{
	static UFunction* pFnRecoverUsername = NULL;

	if ( ! pFnRecoverUsername )
		pFnRecoverUsername = (UFunction*) UObject::GObjObjects()->Data[ 73324 ];

	UTrBrowserManager_execRecoverUsername_Parms RecoverUsername_Parms;

	this->ProcessEvent ( pFnRecoverUsername, &RecoverUsername_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.RecoverPassword
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::RecoverPassword ( )
{
	static UFunction* pFnRecoverPassword = NULL;

	if ( ! pFnRecoverPassword )
		pFnRecoverPassword = (UFunction*) UObject::GObjObjects()->Data[ 73323 ];

	UTrBrowserManager_execRecoverPassword_Parms RecoverPassword_Parms;

	this->ProcessEvent ( pFnRecoverPassword, &RecoverPassword_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.ActivateKey
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::ActivateKey ( )
{
	static UFunction* pFnActivateKey = NULL;

	if ( ! pFnActivateKey )
		pFnActivateKey = (UFunction*) UObject::GObjObjects()->Data[ 73322 ];

	UTrBrowserManager_execActivateKey_Parms ActivateKey_Parms;

	this->ProcessEvent ( pFnActivateKey, &ActivateKey_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Profile
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Profile ( )
{
	static UFunction* pFnProfile = NULL;

	if ( ! pFnProfile )
		pFnProfile = (UFunction*) UObject::GObjObjects()->Data[ 73321 ];

	UTrBrowserManager_execProfile_Parms Profile_Parms;

	this->ProcessEvent ( pFnProfile, &Profile_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Support
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Support ( )
{
	static UFunction* pFnSupport = NULL;

	if ( ! pFnSupport )
		pFnSupport = (UFunction*) UObject::GObjObjects()->Data[ 73320 ];

	UTrBrowserManager_execSupport_Parms Support_Parms;

	this->ProcessEvent ( pFnSupport, &Support_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Booster
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Booster ( )
{
	static UFunction* pFnBooster = NULL;

	if ( ! pFnBooster )
		pFnBooster = (UFunction*) UObject::GObjObjects()->Data[ 73319 ];

	UTrBrowserManager_execBooster_Parms Booster_Parms;

	this->ProcessEvent ( pFnBooster, &Booster_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Store
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Store ( )
{
	static UFunction* pFnStore = NULL;

	if ( ! pFnStore )
		pFnStore = (UFunction*) UObject::GObjObjects()->Data[ 73318 ];

	UTrBrowserManager_execStore_Parms Store_Parms;

	this->ProcessEvent ( pFnStore, &Store_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Gold
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Gold ( )
{
	static UFunction* pFnGold = NULL;

	if ( ! pFnGold )
		pFnGold = (UFunction*) UObject::GObjObjects()->Data[ 73317 ];

	UTrBrowserManager_execGold_Parms Gold_Parms;

	this->ProcessEvent ( pFnGold, &Gold_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.Alert
// [0x00020002] 
// Parameters infos:

void UTrBrowserManager::Alert ( )
{
	static UFunction* pFnAlert = NULL;

	if ( ! pFnAlert )
		pFnAlert = (UFunction*) UObject::GObjObjects()->Data[ 73316 ];

	UTrBrowserManager_execAlert_Parms Alert_Parms;

	this->ProcessEvent ( pFnAlert, &Alert_Parms, NULL );
};

// Function TribesGame.TrBrowserManager.GetLanguageString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrBrowserManager::GetLanguageString ( )
{
	static UFunction* pFnGetLanguageString = NULL;

	if ( ! pFnGetLanguageString )
		pFnGetLanguageString = (UFunction*) UObject::GObjObjects()->Data[ 73314 ];

	UTrBrowserManager_execGetLanguageString_Parms GetLanguageString_Parms;

	pFnGetLanguageString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLanguageString, &GetLanguageString_Parms, NULL );

	pFnGetLanguageString->FunctionFlags |= 0x400;

	return GetLanguageString_Parms.ReturnValue;
};

// Function TribesGame.TrBrowserManager.OpenVideo
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrBrowserManager::OpenVideo ( struct FString URL )
{
	static UFunction* pFnOpenVideo = NULL;

	if ( ! pFnOpenVideo )
		pFnOpenVideo = (UFunction*) UObject::GObjObjects()->Data[ 73312 ];

	UTrBrowserManager_execOpenVideo_Parms OpenVideo_Parms;
	memcpy ( &OpenVideo_Parms.URL, &URL, 0xC );

	pFnOpenVideo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenVideo, &OpenVideo_Parms, NULL );

	pFnOpenVideo->FunctionFlags |= 0x400;
};

// Function TribesGame.TrBrowserManager.OpenURL
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrBrowserManager::OpenURL ( struct FString URL )
{
	static UFunction* pFnOpenURL = NULL;

	if ( ! pFnOpenURL )
		pFnOpenURL = (UFunction*) UObject::GObjObjects()->Data[ 73310 ];

	UTrBrowserManager_execOpenURL_Parms OpenURL_Parms;
	memcpy ( &OpenURL_Parms.URL, &URL, 0xC );

	pFnOpenURL->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenURL, &OpenURL_Parms, NULL );

	pFnOpenURL->FunctionFlags |= 0x400;
};

// Function TribesGame.TrCallIn.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrCallIn::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 73574 ];

	ATrCallIn_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrCallIn.FireCompletedCallIn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CallInOffs                     ( CPF_Parm )
// struct FVector                 TargetLocation                 ( CPF_Parm )
// struct FVector                 TargetNormal                   ( CPF_Parm )

bool ATrCallIn::FireCompletedCallIn ( int CallInOffs, struct FVector TargetLocation, struct FVector TargetNormal )
{
	static UFunction* pFnFireCompletedCallIn = NULL;

	if ( ! pFnFireCompletedCallIn )
		pFnFireCompletedCallIn = (UFunction*) UObject::GObjObjects()->Data[ 73566 ];

	ATrCallIn_execFireCompletedCallIn_Parms FireCompletedCallIn_Parms;
	FireCompletedCallIn_Parms.CallInOffs = CallInOffs;
	memcpy ( &FireCompletedCallIn_Parms.TargetLocation, &TargetLocation, 0xC );
	memcpy ( &FireCompletedCallIn_Parms.TargetNormal, &TargetNormal, 0xC );

	this->ProcessEvent ( pFnFireCompletedCallIn, &FireCompletedCallIn_Parms, NULL );

	return FireCompletedCallIn_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn.VerifyPower
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrCallIn::VerifyPower ( )
{
	static UFunction* pFnVerifyPower = NULL;

	if ( ! pFnVerifyPower )
		pFnVerifyPower = (UFunction*) UObject::GObjObjects()->Data[ 73561 ];

	ATrCallIn_execVerifyPower_Parms VerifyPower_Parms;

	this->ProcessEvent ( pFnVerifyPower, &VerifyPower_Parms, NULL );

	return VerifyPower_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn.VerifyCredits
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrCallIn::VerifyCredits ( )
{
	static UFunction* pFnVerifyCredits = NULL;

	if ( ! pFnVerifyCredits )
		pFnVerifyCredits = (UFunction*) UObject::GObjObjects()->Data[ 73559 ];

	ATrCallIn_execVerifyCredits_Parms VerifyCredits_Parms;

	this->ProcessEvent ( pFnVerifyCredits, &VerifyCredits_Parms, NULL );

	return VerifyCredits_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn.GetCreditCost
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrCallIn::GetCreditCost ( )
{
	static UFunction* pFnGetCreditCost = NULL;

	if ( ! pFnGetCreditCost )
		pFnGetCreditCost = (UFunction*) UObject::GObjObjects()->Data[ 73557 ];

	ATrCallIn_execGetCreditCost_Parms GetCreditCost_Parms;

	this->ProcessEvent ( pFnGetCreditCost, &GetCreditCost_Parms, NULL );

	return GetCreditCost_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn.Initialize
// [0x00020102] 
// Parameters infos:
// int                            NewPrice                       ( CPF_Parm )
// int                            NewBuildup                     ( CPF_Parm )
// int                            NewCooldown                    ( CPF_Parm )

void ATrCallIn::Initialize ( int NewPrice, int NewBuildup, int NewCooldown )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 73553 ];

	ATrCallIn_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.NewPrice = NewPrice;
	Initialize_Parms.NewBuildup = NewBuildup;
	Initialize_Parms.NewCooldown = NewCooldown;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrCallIn_DeliveryPod::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 73642 ];

	ATrCallIn_DeliveryPod_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrCallIn_DeliveryPod::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 73641 ];

	ATrCallIn_DeliveryPod_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.ParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ATrCallIn_DeliveryPod::ParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnParticleSystemFinished = NULL;

	if ( ! pFnParticleSystemFinished )
		pFnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 73639 ];

	ATrCallIn_DeliveryPod_execParticleSystemFinished_Parms ParticleSystemFinished_Parms;
	ParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnParticleSystemFinished, &ParticleSystemFinished_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.HideMesh
// [0x00020102] 
// Parameters infos:

void ATrCallIn_DeliveryPod::HideMesh ( )
{
	static UFunction* pFnHideMesh = NULL;

	if ( ! pFnHideMesh )
		pFnHideMesh = (UFunction*) UObject::GObjObjects()->Data[ 73637 ];

	ATrCallIn_DeliveryPod_execHideMesh_Parms HideMesh_Parms;

	this->ProcessEvent ( pFnHideMesh, &HideMesh_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.BreakApart
// [0x00020102] 
// Parameters infos:

void ATrCallIn_DeliveryPod::BreakApart ( )
{
	static UFunction* pFnBreakApart = NULL;

	if ( ! pFnBreakApart )
		pFnBreakApart = (UFunction*) UObject::GObjObjects()->Data[ 73634 ];

	ATrCallIn_DeliveryPod_execBreakApart_Parms BreakApart_Parms;

	this->ProcessEvent ( pFnBreakApart, &BreakApart_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.Init
// [0x00020102] 
// Parameters infos:
// class ATrCallIn_CrashLandInfo* CrashInfo                      ( CPF_Parm )

void ATrCallIn_DeliveryPod::Init ( class ATrCallIn_CrashLandInfo* CrashInfo )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 73632 ];

	ATrCallIn_DeliveryPod_execInit_Parms Init_Parms;
	Init_Parms.CrashInfo = CrashInfo;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrCallIn_DeliveryPod.GetTerminalVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrCallIn_DeliveryPod::GetTerminalVelocity ( )
{
	static UFunction* pFnGetTerminalVelocity = NULL;

	if ( ! pFnGetTerminalVelocity )
		pFnGetTerminalVelocity = (UFunction*) UObject::GObjObjects()->Data[ 73630 ];

	ATrCallIn_DeliveryPod_execGetTerminalVelocity_Parms GetTerminalVelocity_Parms;

	pFnGetTerminalVelocity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTerminalVelocity, &GetTerminalVelocity_Parms, NULL );

	pFnGetTerminalVelocity->FunctionFlags |= 0x400;

	return GetTerminalVelocity_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn_SupportItemPlatform.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrCallIn_SupportItemPlatform::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 73739 ];

	ATrCallIn_SupportItemPlatform_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrCallIn_SupportItemPlatform.HideMesh
// [0x00020102] 
// Parameters infos:

void ATrCallIn_SupportItemPlatform::HideMesh ( )
{
	static UFunction* pFnHideMesh = NULL;

	if ( ! pFnHideMesh )
		pFnHideMesh = (UFunction*) UObject::GObjObjects()->Data[ 73737 ];

	ATrCallIn_SupportItemPlatform_execHideMesh_Parms HideMesh_Parms;

	this->ProcessEvent ( pFnHideMesh, &HideMesh_Parms, NULL );
};

// Function TribesGame.TrCallIn_SupportItemPlatform.ScriptGetTeamNum
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrCallIn_SupportItemPlatform::eventScriptGetTeamNum ( )
{
	static UFunction* pFnScriptGetTeamNum = NULL;

	if ( ! pFnScriptGetTeamNum )
		pFnScriptGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 73735 ];

	ATrCallIn_SupportItemPlatform_eventScriptGetTeamNum_Parms ScriptGetTeamNum_Parms;

	this->ProcessEvent ( pFnScriptGetTeamNum, &ScriptGetTeamNum_Parms, NULL );

	return ScriptGetTeamNum_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn_SupportItemPlatform.Init
// [0x00020002] 
// Parameters infos:
// class AActor*                  DeployableOwner                ( CPF_Parm )
// class UClass*                  GameObjectiveClass             ( CPF_Parm )

void ATrCallIn_SupportItemPlatform::Init ( class AActor* DeployableOwner, class UClass* GameObjectiveClass )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 73732 ];

	ATrCallIn_SupportItemPlatform_execInit_Parms Init_Parms;
	Init_Parms.DeployableOwner = DeployableOwner;
	Init_Parms.GameObjectiveClass = GameObjectiveClass;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrCallIn_SupportItemPlatform.GetBoundingCylinder
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          CollisionRadius                ( CPF_Parm | CPF_OutParm )
// float                          CollisionHeight                ( CPF_Parm | CPF_OutParm )

void ATrCallIn_SupportItemPlatform::GetBoundingCylinder ( float* CollisionRadius, float* CollisionHeight )
{
	static UFunction* pFnGetBoundingCylinder = NULL;

	if ( ! pFnGetBoundingCylinder )
		pFnGetBoundingCylinder = (UFunction*) UObject::GObjObjects()->Data[ 73729 ];

	ATrCallIn_SupportItemPlatform_execGetBoundingCylinder_Parms GetBoundingCylinder_Parms;

	pFnGetBoundingCylinder->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBoundingCylinder, &GetBoundingCylinder_Parms, NULL );

	pFnGetBoundingCylinder->FunctionFlags |= 0x400;

	if ( CollisionRadius )
		*CollisionRadius = GetBoundingCylinder_Parms.CollisionRadius;

	if ( CollisionHeight )
		*CollisionHeight = GetBoundingCylinder_Parms.CollisionHeight;
};

// Function TribesGame.TrPlayerController.StripTag
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

struct FString ATrPlayerController::eventStripTag ( struct FString sValue )
{
	static UFunction* pFnStripTag = NULL;

	if ( ! pFnStripTag )
		pFnStripTag = (UFunction*) UObject::GObjObjects()->Data[ 77435 ];

	ATrPlayerController_eventStripTag_Parms StripTag_Parms;
	memcpy ( &StripTag_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnStripTag, &StripTag_Parms, NULL );

	return StripTag_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.SampleVoice
// [0x00020002] 
// Parameters infos:
// class UClass*                  VoiceClass                     ( CPF_Parm )

void ATrPlayerController::SampleVoice ( class UClass* VoiceClass )
{
	static UFunction* pFnSampleVoice = NULL;

	if ( ! pFnSampleVoice )
		pFnSampleVoice = (UFunction*) UObject::GObjObjects()->Data[ 77433 ];

	ATrPlayerController_execSampleVoice_Parms SampleVoice_Parms;
	SampleVoice_Parms.VoiceClass = VoiceClass;

	this->ProcessEvent ( pFnSampleVoice, &SampleVoice_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SpecList
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::SpecList ( )
{
	static UFunction* pFnSpecList = NULL;

	if ( ! pFnSpecList )
		pFnSpecList = (UFunction*) UObject::GObjObjects()->Data[ 77428 ];

	ATrPlayerController_execSpecList_Parms SpecList_Parms;

	this->ProcessEvent ( pFnSpecList, &SpecList_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClearPaperDoll
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::ClearPaperDoll ( )
{
	static UFunction* pFnClearPaperDoll = NULL;

	if ( ! pFnClearPaperDoll )
		pFnClearPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 77425 ];

	ATrPlayerController_execClearPaperDoll_Parms ClearPaperDoll_Parms;

	this->ProcessEvent ( pFnClearPaperDoll, &ClearPaperDoll_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClearMainMenuPaperDoll
// [0x00020000] 
// Parameters infos:

void ATrPlayerController::ClearMainMenuPaperDoll ( )
{
	static UFunction* pFnClearMainMenuPaperDoll = NULL;

	if ( ! pFnClearMainMenuPaperDoll )
		pFnClearMainMenuPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 77424 ];

	ATrPlayerController_execClearMainMenuPaperDoll_Parms ClearMainMenuPaperDoll_Parms;

	this->ProcessEvent ( pFnClearMainMenuPaperDoll, &ClearMainMenuPaperDoll_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateMainMenuPaperDoll_Mesh
// [0x00020000] 
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )

void ATrPlayerController::UpdateMainMenuPaperDoll_Mesh ( unsigned char Type )
{
	static UFunction* pFnUpdateMainMenuPaperDoll_Mesh = NULL;

	if ( ! pFnUpdateMainMenuPaperDoll_Mesh )
		pFnUpdateMainMenuPaperDoll_Mesh = (UFunction*) UObject::GObjObjects()->Data[ 77422 ];

	ATrPlayerController_execUpdateMainMenuPaperDoll_Mesh_Parms UpdateMainMenuPaperDoll_Mesh_Parms;
	UpdateMainMenuPaperDoll_Mesh_Parms.Type = Type;

	this->ProcessEvent ( pFnUpdateMainMenuPaperDoll_Mesh, &UpdateMainMenuPaperDoll_Mesh_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartRefreshPageTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartRefreshPageTimer ( )
{
	static UFunction* pFnStartRefreshPageTimer = NULL;

	if ( ! pFnStartRefreshPageTimer )
		pFnStartRefreshPageTimer = (UFunction*) UObject::GObjObjects()->Data[ 77421 ];

	ATrPlayerController_execStartRefreshPageTimer_Parms StartRefreshPageTimer_Parms;

	this->ProcessEvent ( pFnStartRefreshPageTimer, &StartRefreshPageTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CheckFriendlyFireDamage
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CheckFriendlyFireDamage ( )
{
	static UFunction* pFnCheckFriendlyFireDamage = NULL;

	if ( ! pFnCheckFriendlyFireDamage )
		pFnCheckFriendlyFireDamage = (UFunction*) UObject::GObjObjects()->Data[ 77418 ];

	ATrPlayerController_execCheckFriendlyFireDamage_Parms CheckFriendlyFireDamage_Parms;

	this->ProcessEvent ( pFnCheckFriendlyFireDamage, &CheckFriendlyFireDamage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CheckFriendlyFireKills
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CheckFriendlyFireKills ( )
{
	static UFunction* pFnCheckFriendlyFireKills = NULL;

	if ( ! pFnCheckFriendlyFireKills )
		pFnCheckFriendlyFireKills = (UFunction*) UObject::GObjObjects()->Data[ 77415 ];

	ATrPlayerController_execCheckFriendlyFireKills_Parms CheckFriendlyFireKills_Parms;

	this->ProcessEvent ( pFnCheckFriendlyFireKills, &CheckFriendlyFireKills_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetActiveClassId
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetActiveClassId ( )
{
	static UFunction* pFnGetActiveClassId = NULL;

	if ( ! pFnGetActiveClassId )
		pFnGetActiveClassId = (UFunction*) UObject::GObjObjects()->Data[ 54410 ];

	ATrPlayerController_execGetActiveClassId_Parms GetActiveClassId_Parms;

	this->ProcessEvent ( pFnGetActiveClassId, &GetActiveClassId_Parms, NULL );

	return GetActiveClassId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetAllowedClassCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ClassType                      ( CPF_Parm )

int ATrPlayerController::GetAllowedClassCount ( unsigned char ClassType )
{
	static UFunction* pFnGetAllowedClassCount = NULL;

	if ( ! pFnGetAllowedClassCount )
		pFnGetAllowedClassCount = (UFunction*) UObject::GObjObjects()->Data[ 58059 ];

	ATrPlayerController_execGetAllowedClassCount_Parms GetAllowedClassCount_Parms;
	GetAllowedClassCount_Parms.ClassType = ClassType;

	this->ProcessEvent ( pFnGetAllowedClassCount, &GetAllowedClassCount_Parms, NULL );

	return GetAllowedClassCount_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.OnScoreChanged
// [0x00020102] 
// Parameters infos:
// class AUTTeamInfo*             T                              ( CPF_Parm )

void ATrPlayerController::OnScoreChanged ( class AUTTeamInfo* T )
{
	static UFunction* pFnOnScoreChanged = NULL;

	if ( ! pFnOnScoreChanged )
		pFnOnScoreChanged = (UFunction*) UObject::GObjObjects()->Data[ 77408 ];

	ATrPlayerController_execOnScoreChanged_Parms OnScoreChanged_Parms;
	OnScoreChanged_Parms.T = T;

	this->ProcessEvent ( pFnOnScoreChanged, &OnScoreChanged_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetTeamClassCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

int ATrPlayerController::GetTeamClassCount ( int ClassId )
{
	static UFunction* pFnGetTeamClassCount = NULL;

	if ( ! pFnGetTeamClassCount )
		pFnGetTeamClassCount = (UFunction*) UObject::GObjObjects()->Data[ 56501 ];

	ATrPlayerController_execGetTeamClassCount_Parms GetTeamClassCount_Parms;
	GetTeamClassCount_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnGetTeamClassCount, &GetTeamClassCount_Parms, NULL );

	return GetTeamClassCount_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.OpenVehicleMenu
// [0x00020002] 
// Parameters infos:
// class ATrVehicleStation*       VehicleStation                 ( CPF_Parm )

void ATrPlayerController::OpenVehicleMenu ( class ATrVehicleStation* VehicleStation )
{
	static UFunction* pFnOpenVehicleMenu = NULL;

	if ( ! pFnOpenVehicleMenu )
		pFnOpenVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 77389 ];

	ATrPlayerController_execOpenVehicleMenu_Parms OpenVehicleMenu_Parms;
	OpenVehicleMenu_Parms.VehicleStation = VehicleStation;

	this->ProcessEvent ( pFnOpenVehicleMenu, &OpenVehicleMenu_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartUILoadSummaryTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartUILoadSummaryTimer ( )
{
	static UFunction* pFnStartUILoadSummaryTimer = NULL;

	if ( ! pFnStartUILoadSummaryTimer )
		pFnStartUILoadSummaryTimer = (UFunction*) UObject::GObjObjects()->Data[ 77388 ];

	ATrPlayerController_execStartUILoadSummaryTimer_Parms StartUILoadSummaryTimer_Parms;

	this->ProcessEvent ( pFnStartUILoadSummaryTimer, &StartUILoadSummaryTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EndVGSInput
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::EndVGSInput ( )
{
	static UFunction* pFnEndVGSInput = NULL;

	if ( ! pFnEndVGSInput )
		pFnEndVGSInput = (UFunction*) UObject::GObjObjects()->Data[ 77386 ];

	ATrPlayerController_execEndVGSInput_Parms EndVGSInput_Parms;

	this->ProcessEvent ( pFnEndVGSInput, &EndVGSInput_Parms, NULL );
};

// Function TribesGame.TrPlayerController.QuickLoadouts
// [0x00020002] 
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )

void ATrPlayerController::QuickLoadouts ( int ClassId )
{
	static UFunction* pFnQuickLoadouts = NULL;

	if ( ! pFnQuickLoadouts )
		pFnQuickLoadouts = (UFunction*) UObject::GObjObjects()->Data[ 77383 ];

	ATrPlayerController_execQuickLoadouts_Parms QuickLoadouts_Parms;
	QuickLoadouts_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnQuickLoadouts, &QuickLoadouts_Parms, NULL );
};

// Function TribesGame.TrPlayerController.QuickClasses
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::QuickClasses ( )
{
	static UFunction* pFnQuickClasses = NULL;

	if ( ! pFnQuickClasses )
		pFnQuickClasses = (UFunction*) UObject::GObjObjects()->Data[ 77381 ];

	ATrPlayerController_execQuickClasses_Parms QuickClasses_Parms;

	this->ProcessEvent ( pFnQuickClasses, &QuickClasses_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyBRT
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyBRT ( )
{
	static UFunction* pFnClassHotkeyBRT = NULL;

	if ( ! pFnClassHotkeyBRT )
		pFnClassHotkeyBRT = (UFunction*) UObject::GObjObjects()->Data[ 77380 ];

	ATrPlayerController_execClassHotkeyBRT_Parms ClassHotkeyBRT_Parms;

	this->ProcessEvent ( pFnClassHotkeyBRT, &ClassHotkeyBRT_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyDMB
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyDMB ( )
{
	static UFunction* pFnClassHotkeyDMB = NULL;

	if ( ! pFnClassHotkeyDMB )
		pFnClassHotkeyDMB = (UFunction*) UObject::GObjObjects()->Data[ 77379 ];

	ATrPlayerController_execClassHotkeyDMB_Parms ClassHotkeyDMB_Parms;

	this->ProcessEvent ( pFnClassHotkeyDMB, &ClassHotkeyDMB_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyJUG
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyJUG ( )
{
	static UFunction* pFnClassHotkeyJUG = NULL;

	if ( ! pFnClassHotkeyJUG )
		pFnClassHotkeyJUG = (UFunction*) UObject::GObjObjects()->Data[ 77378 ];

	ATrPlayerController_execClassHotkeyJUG_Parms ClassHotkeyJUG_Parms;

	this->ProcessEvent ( pFnClassHotkeyJUG, &ClassHotkeyJUG_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyTCN
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyTCN ( )
{
	static UFunction* pFnClassHotkeyTCN = NULL;

	if ( ! pFnClassHotkeyTCN )
		pFnClassHotkeyTCN = (UFunction*) UObject::GObjObjects()->Data[ 77377 ];

	ATrPlayerController_execClassHotkeyTCN_Parms ClassHotkeyTCN_Parms;

	this->ProcessEvent ( pFnClassHotkeyTCN, &ClassHotkeyTCN_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyRDR
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyRDR ( )
{
	static UFunction* pFnClassHotkeyRDR = NULL;

	if ( ! pFnClassHotkeyRDR )
		pFnClassHotkeyRDR = (UFunction*) UObject::GObjObjects()->Data[ 77376 ];

	ATrPlayerController_execClassHotkeyRDR_Parms ClassHotkeyRDR_Parms;

	this->ProcessEvent ( pFnClassHotkeyRDR, &ClassHotkeyRDR_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeySLD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeySLD ( )
{
	static UFunction* pFnClassHotkeySLD = NULL;

	if ( ! pFnClassHotkeySLD )
		pFnClassHotkeySLD = (UFunction*) UObject::GObjObjects()->Data[ 77375 ];

	ATrPlayerController_execClassHotkeySLD_Parms ClassHotkeySLD_Parms;

	this->ProcessEvent ( pFnClassHotkeySLD, &ClassHotkeySLD_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyINF
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyINF ( )
{
	static UFunction* pFnClassHotkeyINF = NULL;

	if ( ! pFnClassHotkeyINF )
		pFnClassHotkeyINF = (UFunction*) UObject::GObjObjects()->Data[ 77374 ];

	ATrPlayerController_execClassHotkeyINF_Parms ClassHotkeyINF_Parms;

	this->ProcessEvent ( pFnClassHotkeyINF, &ClassHotkeyINF_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeySEN
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeySEN ( )
{
	static UFunction* pFnClassHotkeySEN = NULL;

	if ( ! pFnClassHotkeySEN )
		pFnClassHotkeySEN = (UFunction*) UObject::GObjObjects()->Data[ 77373 ];

	ATrPlayerController_execClassHotkeySEN_Parms ClassHotkeySEN_Parms;

	this->ProcessEvent ( pFnClassHotkeySEN, &ClassHotkeySEN_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClassHotkeyPTH
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ClassHotkeyPTH ( )
{
	static UFunction* pFnClassHotkeyPTH = NULL;

	if ( ! pFnClassHotkeyPTH )
		pFnClassHotkeyPTH = (UFunction*) UObject::GObjObjects()->Data[ 77372 ];

	ATrPlayerController_execClassHotkeyPTH_Parms ClassHotkeyPTH_Parms;

	this->ProcessEvent ( pFnClassHotkeyPTH, &ClassHotkeyPTH_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientQueueAccolade
// [0x010241C2] 
// Parameters infos:
// int                            Icon                           ( CPF_Parm )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Subtitle                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIsBadge                       ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ClientQueueAccolade ( int Icon, struct FString Title, struct FString Subtitle, unsigned long bIsBadge )
{
	static UFunction* pFnClientQueueAccolade = NULL;

	if ( ! pFnClientQueueAccolade )
		pFnClientQueueAccolade = (UFunction*) UObject::GObjObjects()->Data[ 77367 ];

	ATrPlayerController_execClientQueueAccolade_Parms ClientQueueAccolade_Parms;
	ClientQueueAccolade_Parms.Icon = Icon;
	memcpy ( &ClientQueueAccolade_Parms.Title, &Title, 0xC );
	memcpy ( &ClientQueueAccolade_Parms.Subtitle, &Subtitle, 0xC );
	ClientQueueAccolade_Parms.bIsBadge = bIsBadge;

	this->ProcessEvent ( pFnClientQueueAccolade, &ClientQueueAccolade_Parms, NULL );
};

// Function TribesGame.TrPlayerController.QueueBadge
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Icon                           ( CPF_Parm )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 XPReward                       ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::eventQueueBadge ( int Icon, struct FString Title, struct FString XPReward )
{
	static UFunction* pFnQueueBadge = NULL;

	if ( ! pFnQueueBadge )
		pFnQueueBadge = (UFunction*) UObject::GObjObjects()->Data[ 77363 ];

	ATrPlayerController_eventQueueBadge_Parms QueueBadge_Parms;
	QueueBadge_Parms.Icon = Icon;
	memcpy ( &QueueBadge_Parms.Title, &Title, 0xC );
	memcpy ( &QueueBadge_Parms.XPReward, &XPReward, 0xC );

	this->ProcessEvent ( pFnQueueBadge, &QueueBadge_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DestroyAllOwnedProjectiles
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::DestroyAllOwnedProjectiles ( )
{
	static UFunction* pFnDestroyAllOwnedProjectiles = NULL;

	if ( ! pFnDestroyAllOwnedProjectiles )
		pFnDestroyAllOwnedProjectiles = (UFunction*) UObject::GObjObjects()->Data[ 77361 ];

	ATrPlayerController_execDestroyAllOwnedProjectiles_Parms DestroyAllOwnedProjectiles_Parms;

	this->ProcessEvent ( pFnDestroyAllOwnedProjectiles, &DestroyAllOwnedProjectiles_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DestroyAllOwnedMines
// [0x00024002] 
// Parameters infos:
// class UClass*                  DestroyIfNotOfType             ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::DestroyAllOwnedMines ( class UClass* DestroyIfNotOfType )
{
	static UFunction* pFnDestroyAllOwnedMines = NULL;

	if ( ! pFnDestroyAllOwnedMines )
		pFnDestroyAllOwnedMines = (UFunction*) UObject::GObjObjects()->Data[ 77358 ];

	ATrPlayerController_execDestroyAllOwnedMines_Parms DestroyAllOwnedMines_Parms;
	DestroyAllOwnedMines_Parms.DestroyIfNotOfType = DestroyIfNotOfType;

	this->ProcessEvent ( pFnDestroyAllOwnedMines, &DestroyAllOwnedMines_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DestroyAllOwnedDeployables
// [0x00024002] 
// Parameters infos:
// class UClass*                  DestroyIfNotOfType             ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::DestroyAllOwnedDeployables ( class UClass* DestroyIfNotOfType )
{
	static UFunction* pFnDestroyAllOwnedDeployables = NULL;

	if ( ! pFnDestroyAllOwnedDeployables )
		pFnDestroyAllOwnedDeployables = (UFunction*) UObject::GObjObjects()->Data[ 77354 ];

	ATrPlayerController_execDestroyAllOwnedDeployables_Parms DestroyAllOwnedDeployables_Parms;
	DestroyAllOwnedDeployables_Parms.DestroyIfNotOfType = DestroyIfNotOfType;

	this->ProcessEvent ( pFnDestroyAllOwnedDeployables, &DestroyAllOwnedDeployables_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayerResettingAndRespawning
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientPlayerResettingAndRespawning ( )
{
	static UFunction* pFnClientPlayerResettingAndRespawning = NULL;

	if ( ! pFnClientPlayerResettingAndRespawning )
		pFnClientPlayerResettingAndRespawning = (UFunction*) UObject::GObjObjects()->Data[ 77353 ];

	ATrPlayerController_execClientPlayerResettingAndRespawning_Parms ClientPlayerResettingAndRespawning_Parms;

	this->ProcessEvent ( pFnClientPlayerResettingAndRespawning, &ClientPlayerResettingAndRespawning_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientArenaRoundEnded
// [0x010201C2] 
// Parameters infos:
// int                            WinningTeam                    ( CPF_Parm )

void ATrPlayerController::ClientArenaRoundEnded ( int WinningTeam )
{
	static UFunction* pFnClientArenaRoundEnded = NULL;

	if ( ! pFnClientArenaRoundEnded )
		pFnClientArenaRoundEnded = (UFunction*) UObject::GObjObjects()->Data[ 77342 ];

	ATrPlayerController_execClientArenaRoundEnded_Parms ClientArenaRoundEnded_Parms;
	ClientArenaRoundEnded_Parms.WinningTeam = WinningTeam;

	this->ProcessEvent ( pFnClientArenaRoundEnded, &ClientArenaRoundEnded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartHotkeyBlock
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartHotkeyBlock ( )
{
	static UFunction* pFnStartHotkeyBlock = NULL;

	if ( ! pFnStartHotkeyBlock )
		pFnStartHotkeyBlock = (UFunction*) UObject::GObjObjects()->Data[ 77333 ];

	ATrPlayerController_execStartHotkeyBlock_Parms StartHotkeyBlock_Parms;

	this->ProcessEvent ( pFnStartHotkeyBlock, &StartHotkeyBlock_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DealTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::DealTimer ( )
{
	static UFunction* pFnDealTimer = NULL;

	if ( ! pFnDealTimer )
		pFnDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 77332 ];

	ATrPlayerController_execDealTimer_Parms DealTimer_Parms;

	this->ProcessEvent ( pFnDealTimer, &DealTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TVTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::TVTimer ( )
{
	static UFunction* pFnTVTimer = NULL;

	if ( ! pFnTVTimer )
		pFnTVTimer = (UFunction*) UObject::GObjObjects()->Data[ 77331 ];

	ATrPlayerController_execTVTimer_Parms TVTimer_Parms;

	this->ProcessEvent ( pFnTVTimer, &TVTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.QueueTimer
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStart                         ( CPF_Parm )

void ATrPlayerController::QueueTimer ( unsigned long bStart )
{
	static UFunction* pFnQueueTimer = NULL;

	if ( ! pFnQueueTimer )
		pFnQueueTimer = (UFunction*) UObject::GObjObjects()->Data[ 77329 ];

	ATrPlayerController_execQueueTimer_Parms QueueTimer_Parms;
	QueueTimer_Parms.bStart = bStart;

	this->ProcessEvent ( pFnQueueTimer, &QueueTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartSendMenuBackTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartSendMenuBackTimer ( )
{
	static UFunction* pFnStartSendMenuBackTimer = NULL;

	if ( ! pFnStartSendMenuBackTimer )
		pFnStartSendMenuBackTimer = (UFunction*) UObject::GObjObjects()->Data[ 77328 ];

	ATrPlayerController_execStartSendMenuBackTimer_Parms StartSendMenuBackTimer_Parms;

	this->ProcessEvent ( pFnStartSendMenuBackTimer, &StartSendMenuBackTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AutoRevertSetting
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::AutoRevertSetting ( )
{
	static UFunction* pFnAutoRevertSetting = NULL;

	if ( ! pFnAutoRevertSetting )
		pFnAutoRevertSetting = (UFunction*) UObject::GObjObjects()->Data[ 77327 ];

	ATrPlayerController_execAutoRevertSetting_Parms AutoRevertSetting_Parms;

	this->ProcessEvent ( pFnAutoRevertSetting, &AutoRevertSetting_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartSettingBlock
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartSettingBlock ( )
{
	static UFunction* pFnStartSettingBlock = NULL;

	if ( ! pFnStartSettingBlock )
		pFnStartSettingBlock = (UFunction*) UObject::GObjObjects()->Data[ 77326 ];

	ATrPlayerController_execStartSettingBlock_Parms StartSettingBlock_Parms;

	this->ProcessEvent ( pFnStartSettingBlock, &StartSettingBlock_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartAcquisitionFireTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartAcquisitionFireTimer ( )
{
	static UFunction* pFnStartAcquisitionFireTimer = NULL;

	if ( ! pFnStartAcquisitionFireTimer )
		pFnStartAcquisitionFireTimer = (UFunction*) UObject::GObjObjects()->Data[ 77325 ];

	ATrPlayerController_execStartAcquisitionFireTimer_Parms StartAcquisitionFireTimer_Parms;

	this->ProcessEvent ( pFnStartAcquisitionFireTimer, &StartAcquisitionFireTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartForceFocusTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StartForceFocusTimer ( )
{
	static UFunction* pFnStartForceFocusTimer = NULL;

	if ( ! pFnStartForceFocusTimer )
		pFnStartForceFocusTimer = (UFunction*) UObject::GObjObjects()->Data[ 77324 ];

	ATrPlayerController_execStartForceFocusTimer_Parms StartForceFocusTimer_Parms;

	this->ProcessEvent ( pFnStartForceFocusTimer, &StartForceFocusTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnRefreshInventory
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_RefreshInventory* Action                         ( CPF_Parm )

void ATrPlayerController::OnRefreshInventory ( class UTrSeqAct_RefreshInventory* Action )
{
	static UFunction* pFnOnRefreshInventory = NULL;

	if ( ! pFnOnRefreshInventory )
		pFnOnRefreshInventory = (UFunction*) UObject::GObjObjects()->Data[ 77320 ];

	ATrPlayerController_execOnRefreshInventory_Parms OnRefreshInventory_Parms;
	OnRefreshInventory_Parms.Action = Action;

	this->ProcessEvent ( pFnOnRefreshInventory, &OnRefreshInventory_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnPlayVGSCommand
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_PlayVGSCommand* Action                         ( CPF_Parm )

void ATrPlayerController::OnPlayVGSCommand ( class UTrSeqAct_PlayVGSCommand* Action )
{
	static UFunction* pFnOnPlayVGSCommand = NULL;

	if ( ! pFnOnPlayVGSCommand )
		pFnOnPlayVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 77314 ];

	ATrPlayerController_execOnPlayVGSCommand_Parms OnPlayVGSCommand_Parms;
	OnPlayVGSCommand_Parms.Action = Action;

	this->ProcessEvent ( pFnOnPlayVGSCommand, &OnPlayVGSCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnGiveAccolade
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_GiveAccolade*  Action                         ( CPF_Parm )

void ATrPlayerController::OnGiveAccolade ( class UTrSeqAct_GiveAccolade* Action )
{
	static UFunction* pFnOnGiveAccolade = NULL;

	if ( ! pFnOnGiveAccolade )
		pFnOnGiveAccolade = (UFunction*) UObject::GObjObjects()->Data[ 77310 ];

	ATrPlayerController_execOnGiveAccolade_Parms OnGiveAccolade_Parms;
	OnGiveAccolade_Parms.Action = Action;

	this->ProcessEvent ( pFnOnGiveAccolade, &OnGiveAccolade_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnGiveCredits
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_GiveCredits*   Action                         ( CPF_Parm )

void ATrPlayerController::OnGiveCredits ( class UTrSeqAct_GiveCredits* Action )
{
	static UFunction* pFnOnGiveCredits = NULL;

	if ( ! pFnOnGiveCredits )
		pFnOnGiveCredits = (UFunction*) UObject::GObjObjects()->Data[ 77306 ];

	ATrPlayerController_execOnGiveCredits_Parms OnGiveCredits_Parms;
	OnGiveCredits_Parms.Action = Action;

	this->ProcessEvent ( pFnOnGiveCredits, &OnGiveCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnClassSelectedMainMenu
// [0x00020000] 
// Parameters infos:

void ATrPlayerController::OnClassSelectedMainMenu ( )
{
	static UFunction* pFnOnClassSelectedMainMenu = NULL;

	if ( ! pFnOnClassSelectedMainMenu )
		pFnOnClassSelectedMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 77305 ];

	ATrPlayerController_execOnClassSelectedMainMenu_Parms OnClassSelectedMainMenu_Parms;

	this->ProcessEvent ( pFnOnClassSelectedMainMenu, &OnClassSelectedMainMenu_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AddPending3PSkin
// [0x00820002] 
// Parameters infos:
// class ATrPlayerReplicationInfo* TrPRI                          ( CPF_Parm )
// int                            skinId                         ( CPF_Parm )

void ATrPlayerController::AddPending3PSkin ( class ATrPlayerReplicationInfo* TrPRI, int skinId )
{
	static UFunction* pFnAddPending3PSkin = NULL;

	if ( ! pFnAddPending3PSkin )
		pFnAddPending3PSkin = (UFunction*) UObject::GObjObjects()->Data[ 77301 ];

	ATrPlayerController_execAddPending3PSkin_Parms AddPending3PSkin_Parms;
	AddPending3PSkin_Parms.TrPRI = TrPRI;
	AddPending3PSkin_Parms.skinId = skinId;

	this->ProcessEvent ( pFnAddPending3PSkin, &AddPending3PSkin_Parms, NULL );
};

// Function TribesGame.TrPlayerController.On1PSkinContentLoaded
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// class UClass*                  Skin1PDataClass                ( CPF_Parm )

void ATrPlayerController::eventOn1PSkinContentLoaded ( class UClass* Skin1PDataClass )
{
	static UFunction* pFnOn1PSkinContentLoaded = NULL;

	if ( ! pFnOn1PSkinContentLoaded )
		pFnOn1PSkinContentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 77299 ];

	ATrPlayerController_eventOn1PSkinContentLoaded_Parms On1PSkinContentLoaded_Parms;
	On1PSkinContentLoaded_Parms.Skin1PDataClass = Skin1PDataClass;

	this->ProcessEvent ( pFnOn1PSkinContentLoaded, &On1PSkinContentLoaded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.On3PSkinContentLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  Skin3PDataClass                ( CPF_Parm )

void ATrPlayerController::eventOn3PSkinContentLoaded ( class UClass* Skin3PDataClass )
{
	static UFunction* pFnOn3PSkinContentLoaded = NULL;

	if ( ! pFnOn3PSkinContentLoaded )
		pFnOn3PSkinContentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 77295 ];

	ATrPlayerController_eventOn3PSkinContentLoaded_Parms On3PSkinContentLoaded_Parms;
	On3PSkinContentLoaded_Parms.Skin3PDataClass = Skin3PDataClass;

	this->ProcessEvent ( pFnOn3PSkinContentLoaded, &On3PSkinContentLoaded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnDeviceContentDataClassLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  DeviceContentDataClass         ( CPF_Parm )

void ATrPlayerController::eventOnDeviceContentDataClassLoaded ( class UClass* DeviceContentDataClass )
{
	static UFunction* pFnOnDeviceContentDataClassLoaded = NULL;

	if ( ! pFnOnDeviceContentDataClassLoaded )
		pFnOnDeviceContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 77290 ];

	ATrPlayerController_eventOnDeviceContentDataClassLoaded_Parms OnDeviceContentDataClassLoaded_Parms;
	OnDeviceContentDataClassLoaded_Parms.DeviceContentDataClass = DeviceContentDataClass;

	this->ProcessEvent ( pFnOnDeviceContentDataClassLoaded, &OnDeviceContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerTestSlot
// [0x002200C2] 
// Parameters infos:
// unsigned char                  EquipId                        ( CPF_Parm )
// int                            EquipItem                      ( CPF_Parm )

void ATrPlayerController::ServerTestSlot ( unsigned char EquipId, int EquipItem )
{
	static UFunction* pFnServerTestSlot = NULL;

	if ( ! pFnServerTestSlot )
		pFnServerTestSlot = (UFunction*) UObject::GObjObjects()->Data[ 77286 ];

	ATrPlayerController_execServerTestSlot_Parms ServerTestSlot_Parms;
	ServerTestSlot_Parms.EquipId = EquipId;
	ServerTestSlot_Parms.EquipItem = EquipItem;

	this->ProcessEvent ( pFnServerTestSlot, &ServerTestSlot_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TestSlot
// [0x00024002] 
// Parameters infos:
// unsigned char                  equipType                      ( CPF_Parm )
// int                            EquipId                        ( CPF_Parm )
// unsigned long                  bTraining                      ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::TestSlot ( unsigned char equipType, int EquipId, unsigned long bTraining )
{
	static UFunction* pFnTestSlot = NULL;

	if ( ! pFnTestSlot )
		pFnTestSlot = (UFunction*) UObject::GObjObjects()->Data[ 77278 ];

	ATrPlayerController_execTestSlot_Parms TestSlot_Parms;
	TestSlot_Parms.equipType = equipType;
	TestSlot_Parms.EquipId = EquipId;
	TestSlot_Parms.bTraining = bTraining;

	this->ProcessEvent ( pFnTestSlot, &TestSlot_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InTraining
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::InTraining ( )
{
	static UFunction* pFnInTraining = NULL;

	if ( ! pFnInTraining )
		pFnInTraining = (UFunction*) UObject::GObjObjects()->Data[ 53291 ];

	ATrPlayerController_execInTraining_Parms InTraining_Parms;

	this->ProcessEvent ( pFnInTraining, &InTraining_Parms, NULL );

	return InTraining_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.TestTrainingSlot
// [0x00020002] 
// Parameters infos:
// unsigned char                  equipType                      ( CPF_Parm )
// int                            EquipId                        ( CPF_Parm )

void ATrPlayerController::TestTrainingSlot ( unsigned char equipType, int EquipId )
{
	static UFunction* pFnTestTrainingSlot = NULL;

	if ( ! pFnTestTrainingSlot )
		pFnTestTrainingSlot = (UFunction*) UObject::GObjObjects()->Data[ 77274 ];

	ATrPlayerController_execTestTrainingSlot_Parms TestTrainingSlot_Parms;
	TestTrainingSlot_Parms.equipType = equipType;
	TestTrainingSlot_Parms.EquipId = EquipId;

	this->ProcessEvent ( pFnTestTrainingSlot, &TestTrainingSlot_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetClassBit
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

int ATrPlayerController::GetClassBit ( int ClassId )
{
	static UFunction* pFnGetClassBit = NULL;

	if ( ! pFnGetClassBit )
		pFnGetClassBit = (UFunction*) UObject::GObjObjects()->Data[ 77269 ];

	ATrPlayerController_execGetClassBit_Parms GetClassBit_Parms;
	GetClassBit_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnGetClassBit, &GetClassBit_Parms, NULL );

	return GetClassBit_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerSetClassAffordable
// [0x002200C2] 
// Parameters infos:
// int                            BitMask                        ( CPF_Parm )

void ATrPlayerController::ServerSetClassAffordable ( int BitMask )
{
	static UFunction* pFnServerSetClassAffordable = NULL;

	if ( ! pFnServerSetClassAffordable )
		pFnServerSetClassAffordable = (UFunction*) UObject::GObjObjects()->Data[ 77265 ];

	ATrPlayerController_execServerSetClassAffordable_Parms ServerSetClassAffordable_Parms;
	ServerSetClassAffordable_Parms.BitMask = BitMask;

	this->ProcessEvent ( pFnServerSetClassAffordable, &ServerSetClassAffordable_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SetFOV
// [0x00020002] 
// Parameters infos:
// float                          NewFOV                         ( CPF_Parm )

void ATrPlayerController::SetFOV ( float NewFOV )
{
	static UFunction* pFnSetFOV = NULL;

	if ( ! pFnSetFOV )
		pFnSetFOV = (UFunction*) UObject::GObjObjects()->Data[ 77263 ];

	ATrPlayerController_execSetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.NewFOV = NewFOV;

	this->ProcessEvent ( pFnSetFOV, &SetFOV_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FixFOV
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::FixFOV ( )
{
	static UFunction* pFnFixFOV = NULL;

	if ( ! pFnFixFOV )
		pFnFixFOV = (UFunction*) UObject::GObjObjects()->Data[ 77262 ];

	ATrPlayerController_execFixFOV_Parms FixFOV_Parms;

	this->ProcessEvent ( pFnFixFOV, &FixFOV_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FOV
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void ATrPlayerController::FOV ( float F )
{
	static UFunction* pFnFOV = NULL;

	if ( ! pFnFOV )
		pFnFOV = (UFunction*) UObject::GObjObjects()->Data[ 77260 ];

	ATrPlayerController_execFOV_Parms FOV_Parms;
	FOV_Parms.F = F;

	this->ProcessEvent ( pFnFOV, &FOV_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TypeKeyPressed
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::TypeKeyPressed ( )
{
	static UFunction* pFnTypeKeyPressed = NULL;

	if ( ! pFnTypeKeyPressed )
		pFnTypeKeyPressed = (UFunction*) UObject::GObjObjects()->Data[ 77257 ];

	ATrPlayerController_execTypeKeyPressed_Parms TypeKeyPressed_Parms;

	this->ProcessEvent ( pFnTypeKeyPressed, &TypeKeyPressed_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AwardTeamRabbitAssistCredits
// [0x00020002] 
// Parameters infos:
// int                            Multiplier                     ( CPF_Parm )

void ATrPlayerController::AwardTeamRabbitAssistCredits ( int Multiplier )
{
	static UFunction* pFnAwardTeamRabbitAssistCredits = NULL;

	if ( ! pFnAwardTeamRabbitAssistCredits )
		pFnAwardTeamRabbitAssistCredits = (UFunction*) UObject::GObjObjects()->Data[ 77255 ];

	ATrPlayerController_execAwardTeamRabbitAssistCredits_Parms AwardTeamRabbitAssistCredits_Parms;
	AwardTeamRabbitAssistCredits_Parms.Multiplier = Multiplier;

	this->ProcessEvent ( pFnAwardTeamRabbitAssistCredits, &AwardTeamRabbitAssistCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AwardTeamAssistCredits
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::AwardTeamAssistCredits ( )
{
	static UFunction* pFnAwardTeamAssistCredits = NULL;

	if ( ! pFnAwardTeamAssistCredits )
		pFnAwardTeamAssistCredits = (UFunction*) UObject::GObjObjects()->Data[ 77254 ];

	ATrPlayerController_execAwardTeamAssistCredits_Parms AwardTeamAssistCredits_Parms;

	this->ProcessEvent ( pFnAwardTeamAssistCredits, &AwardTeamAssistCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CashForDamage
// [0x00020002] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )

void ATrPlayerController::CashForDamage ( int DamageAmount )
{
	static UFunction* pFnCashForDamage = NULL;

	if ( ! pFnCashForDamage )
		pFnCashForDamage = (UFunction*) UObject::GObjObjects()->Data[ 77252 ];

	ATrPlayerController_execCashForDamage_Parms CashForDamage_Parms;
	CashForDamage_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnCashForDamage, &CashForDamage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetCreditsForDamageAmount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            DamageAmount                   ( CPF_Parm )

int ATrPlayerController::GetCreditsForDamageAmount ( int DamageAmount )
{
	static UFunction* pFnGetCreditsForDamageAmount = NULL;

	if ( ! pFnGetCreditsForDamageAmount )
		pFnGetCreditsForDamageAmount = (UFunction*) UObject::GObjObjects()->Data[ 77249 ];

	ATrPlayerController_execGetCreditsForDamageAmount_Parms GetCreditsForDamageAmount_Parms;
	GetCreditsForDamageAmount_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnGetCreditsForDamageAmount, &GetCreditsForDamageAmount_Parms, NULL );

	return GetCreditsForDamageAmount_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ClientShowOverheadNumber
// [0x018201C2] 
// Parameters infos:
// int                            NumberToShow                   ( CPF_Parm )
// struct FVector                 WorldLocation                  ( CPF_Parm )
// float                          fScreenDepth                   ( CPF_Parm )

void ATrPlayerController::ClientShowOverheadNumber ( int NumberToShow, struct FVector WorldLocation, float fScreenDepth )
{
	static UFunction* pFnClientShowOverheadNumber = NULL;

	if ( ! pFnClientShowOverheadNumber )
		pFnClientShowOverheadNumber = (UFunction*) UObject::GObjObjects()->Data[ 77243 ];

	ATrPlayerController_execClientShowOverheadNumber_Parms ClientShowOverheadNumber_Parms;
	ClientShowOverheadNumber_Parms.NumberToShow = NumberToShow;
	memcpy ( &ClientShowOverheadNumber_Parms.WorldLocation, &WorldLocation, 0xC );
	ClientShowOverheadNumber_Parms.fScreenDepth = fScreenDepth;

	this->ProcessEvent ( pFnClientShowOverheadNumber, &ClientShowOverheadNumber_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerShowOverheadNumber
// [0x00020002] 
// Parameters infos:
// int                            NumberToShow                   ( CPF_Parm )
// struct FVector                 WorldLocation                  ( CPF_Parm )
// float                          fScreenDepth                   ( CPF_Parm )

void ATrPlayerController::ServerShowOverheadNumber ( int NumberToShow, struct FVector WorldLocation, float fScreenDepth )
{
	static UFunction* pFnServerShowOverheadNumber = NULL;

	if ( ! pFnServerShowOverheadNumber )
		pFnServerShowOverheadNumber = (UFunction*) UObject::GObjObjects()->Data[ 77239 ];

	ATrPlayerController_execServerShowOverheadNumber_Parms ServerShowOverheadNumber_Parms;
	ServerShowOverheadNumber_Parms.NumberToShow = NumberToShow;
	memcpy ( &ServerShowOverheadNumber_Parms.WorldLocation, &WorldLocation, 0xC );
	ServerShowOverheadNumber_Parms.fScreenDepth = fScreenDepth;

	this->ProcessEvent ( pFnServerShowOverheadNumber, &ServerShowOverheadNumber_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FlashShooterHitReticule
// [0x00020002] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// unsigned long                  isInstantHit                   ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void ATrPlayerController::FlashShooterHitReticule ( int DamageAmount, unsigned long isInstantHit, int TeamNum )
{
	static UFunction* pFnFlashShooterHitReticule = NULL;

	if ( ! pFnFlashShooterHitReticule )
		pFnFlashShooterHitReticule = (UFunction*) UObject::GObjObjects()->Data[ 77235 ];

	ATrPlayerController_execFlashShooterHitReticule_Parms FlashShooterHitReticule_Parms;
	FlashShooterHitReticule_Parms.DamageAmount = DamageAmount;
	FlashShooterHitReticule_Parms.isInstantHit = isInstantHit;
	FlashShooterHitReticule_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnFlashShooterHitReticule, &FlashShooterHitReticule_Parms, NULL );
};

// Function TribesGame.TrPlayerController.VoteYes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::VoteYes ( )
{
	static UFunction* pFnVoteYes = NULL;

	if ( ! pFnVoteYes )
		pFnVoteYes = (UFunction*) UObject::GObjObjects()->Data[ 77233 ];

	ATrPlayerController_execVoteYes_Parms VoteYes_Parms;

	this->ProcessEvent ( pFnVoteYes, &VoteYes_Parms, NULL );
};

// Function TribesGame.TrPlayerController.VoteNo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::VoteNo ( )
{
	static UFunction* pFnVoteNo = NULL;

	if ( ! pFnVoteNo )
		pFnVoteNo = (UFunction*) UObject::GObjObjects()->Data[ 77228 ];

	ATrPlayerController_execVoteNo_Parms VoteNo_Parms;

	this->ProcessEvent ( pFnVoteNo, &VoteNo_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SummaryTweenTimer
// [0x00020002] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ATrPlayerController::SummaryTweenTimer ( int Amount )
{
	static UFunction* pFnSummaryTweenTimer = NULL;

	if ( ! pFnSummaryTweenTimer )
		pFnSummaryTweenTimer = (UFunction*) UObject::GObjObjects()->Data[ 77226 ];

	ATrPlayerController_execSummaryTweenTimer_Parms SummaryTweenTimer_Parms;
	SummaryTweenTimer_Parms.Amount = Amount;

	this->ProcessEvent ( pFnSummaryTweenTimer, &SummaryTweenTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SetWhisperFilter
// [0x00020002] 
// Parameters infos:
// int                            FilterValue                    ( CPF_Parm )

void ATrPlayerController::SetWhisperFilter ( int FilterValue )
{
	static UFunction* pFnSetWhisperFilter = NULL;

	if ( ! pFnSetWhisperFilter )
		pFnSetWhisperFilter = (UFunction*) UObject::GObjObjects()->Data[ 77224 ];

	ATrPlayerController_execSetWhisperFilter_Parms SetWhisperFilter_Parms;
	SetWhisperFilter_Parms.FilterValue = FilterValue;

	this->ProcessEvent ( pFnSetWhisperFilter, &SetWhisperFilter_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetWhisperFilterValue
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetWhisperFilterValue ( )
{
	static UFunction* pFnGetWhisperFilterValue = NULL;

	if ( ! pFnGetWhisperFilterValue )
		pFnGetWhisperFilterValue = (UFunction*) UObject::GObjObjects()->Data[ 77222 ];

	ATrPlayerController_execGetWhisperFilterValue_Parms GetWhisperFilterValue_Parms;

	this->ProcessEvent ( pFnGetWhisperFilterValue, &GetWhisperFilterValue_Parms, NULL );

	return GetWhisperFilterValue_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetHUDFriendStateNotifications
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetHUDFriendStateNotifications ( )
{
	static UFunction* pFnGetHUDFriendStateNotifications = NULL;

	if ( ! pFnGetHUDFriendStateNotifications )
		pFnGetHUDFriendStateNotifications = (UFunction*) UObject::GObjObjects()->Data[ 77220 ];

	ATrPlayerController_execGetHUDFriendStateNotifications_Parms GetHUDFriendStateNotifications_Parms;

	this->ProcessEvent ( pFnGetHUDFriendStateNotifications, &GetHUDFriendStateNotifications_Parms, NULL );

	return GetHUDFriendStateNotifications_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetHUDNotifications
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetHUDNotifications ( )
{
	static UFunction* pFnGetHUDNotifications = NULL;

	if ( ! pFnGetHUDNotifications )
		pFnGetHUDNotifications = (UFunction*) UObject::GObjObjects()->Data[ 77218 ];

	ATrPlayerController_execGetHUDNotifications_Parms GetHUDNotifications_Parms;

	this->ProcessEvent ( pFnGetHUDNotifications, &GetHUDNotifications_Parms, NULL );

	return GetHUDNotifications_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetHUDObjectivesValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetHUDObjectivesValue ( )
{
	static UFunction* pFnGetHUDObjectivesValue = NULL;

	if ( ! pFnGetHUDObjectivesValue )
		pFnGetHUDObjectivesValue = (UFunction*) UObject::GObjObjects()->Data[ 77216 ];

	ATrPlayerController_execGetHUDObjectivesValue_Parms GetHUDObjectivesValue_Parms;

	this->ProcessEvent ( pFnGetHUDObjectivesValue, &GetHUDObjectivesValue_Parms, NULL );

	return GetHUDObjectivesValue_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ShowAlienFX
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::ShowAlienFX ( unsigned long bEnable )
{
	static UFunction* pFnShowAlienFX = NULL;

	if ( ! pFnShowAlienFX )
		pFnShowAlienFX = (UFunction*) UObject::GObjObjects()->Data[ 77214 ];

	ATrPlayerController_execShowAlienFX_Parms ShowAlienFX_Parms;
	ShowAlienFX_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnShowAlienFX, &ShowAlienFX_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDCracks
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDCracks ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDCracks = NULL;

	if ( ! pFnEnableHUDCracks )
		pFnEnableHUDCracks = (UFunction*) UObject::GObjObjects()->Data[ 77212 ];

	ATrPlayerController_execEnableHUDCracks_Parms EnableHUDCracks_Parms;
	EnableHUDCracks_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDCracks, &EnableHUDCracks_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDFriendStateNotifications
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDFriendStateNotifications ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDFriendStateNotifications = NULL;

	if ( ! pFnEnableHUDFriendStateNotifications )
		pFnEnableHUDFriendStateNotifications = (UFunction*) UObject::GObjObjects()->Data[ 77210 ];

	ATrPlayerController_execEnableHUDFriendStateNotifications_Parms EnableHUDFriendStateNotifications_Parms;
	EnableHUDFriendStateNotifications_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDFriendStateNotifications, &EnableHUDFriendStateNotifications_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDNotifications
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDNotifications ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDNotifications = NULL;

	if ( ! pFnEnableHUDNotifications )
		pFnEnableHUDNotifications = (UFunction*) UObject::GObjObjects()->Data[ 77208 ];

	ATrPlayerController_execEnableHUDNotifications_Parms EnableHUDNotifications_Parms;
	EnableHUDNotifications_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDNotifications, &EnableHUDNotifications_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDFriendColoring
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDFriendColoring ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDFriendColoring = NULL;

	if ( ! pFnEnableHUDFriendColoring )
		pFnEnableHUDFriendColoring = (UFunction*) UObject::GObjObjects()->Data[ 77206 ];

	ATrPlayerController_execEnableHUDFriendColoring_Parms EnableHUDFriendColoring_Parms;
	EnableHUDFriendColoring_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDFriendColoring, &EnableHUDFriendColoring_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDSkiBars
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDSkiBars ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDSkiBars = NULL;

	if ( ! pFnEnableHUDSkiBars )
		pFnEnableHUDSkiBars = (UFunction*) UObject::GObjObjects()->Data[ 77204 ];

	ATrPlayerController_execEnableHUDSkiBars_Parms EnableHUDSkiBars_Parms;
	EnableHUDSkiBars_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDSkiBars, &EnableHUDSkiBars_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDRespawnTimer
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDRespawnTimer ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDRespawnTimer = NULL;

	if ( ! pFnEnableHUDRespawnTimer )
		pFnEnableHUDRespawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 77202 ];

	ATrPlayerController_execEnableHUDRespawnTimer_Parms EnableHUDRespawnTimer_Parms;
	EnableHUDRespawnTimer_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDRespawnTimer, &EnableHUDRespawnTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDPromptPanel
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDPromptPanel ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDPromptPanel = NULL;

	if ( ! pFnEnableHUDPromptPanel )
		pFnEnableHUDPromptPanel = (UFunction*) UObject::GObjObjects()->Data[ 77200 ];

	ATrPlayerController_execEnableHUDPromptPanel_Parms EnableHUDPromptPanel_Parms;
	EnableHUDPromptPanel_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDPromptPanel, &EnableHUDPromptPanel_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDHeroText
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDHeroText ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDHeroText = NULL;

	if ( ! pFnEnableHUDHeroText )
		pFnEnableHUDHeroText = (UFunction*) UObject::GObjObjects()->Data[ 77198 ];

	ATrPlayerController_execEnableHUDHeroText_Parms EnableHUDHeroText_Parms;
	EnableHUDHeroText_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDHeroText, &EnableHUDHeroText_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDDeathcam
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDDeathcam ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDDeathcam = NULL;

	if ( ! pFnEnableHUDDeathcam )
		pFnEnableHUDDeathcam = (UFunction*) UObject::GObjObjects()->Data[ 77196 ];

	ATrPlayerController_execEnableHUDDeathcam_Parms EnableHUDDeathcam_Parms;
	EnableHUDDeathcam_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDDeathcam, &EnableHUDDeathcam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDKillbox
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDKillbox ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDKillbox = NULL;

	if ( ! pFnEnableHUDKillbox )
		pFnEnableHUDKillbox = (UFunction*) UObject::GObjObjects()->Data[ 77194 ];

	ATrPlayerController_execEnableHUDKillbox_Parms EnableHUDKillbox_Parms;
	EnableHUDKillbox_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDKillbox, &EnableHUDKillbox_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDCombatLog
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDCombatLog ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDCombatLog = NULL;

	if ( ! pFnEnableHUDCombatLog )
		pFnEnableHUDCombatLog = (UFunction*) UObject::GObjObjects()->Data[ 77192 ];

	ATrPlayerController_execEnableHUDCombatLog_Parms EnableHUDCombatLog_Parms;
	EnableHUDCombatLog_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDCombatLog, &EnableHUDCombatLog_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDChat
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDChat ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDChat = NULL;

	if ( ! pFnEnableHUDChat )
		pFnEnableHUDChat = (UFunction*) UObject::GObjObjects()->Data[ 77190 ];

	ATrPlayerController_execEnableHUDChat_Parms EnableHUDChat_Parms;
	EnableHUDChat_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDChat, &EnableHUDChat_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDVisor
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDVisor ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDVisor = NULL;

	if ( ! pFnEnableHUDVisor )
		pFnEnableHUDVisor = (UFunction*) UObject::GObjObjects()->Data[ 77188 ];

	ATrPlayerController_execEnableHUDVisor_Parms EnableHUDVisor_Parms;
	EnableHUDVisor_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDVisor, &EnableHUDVisor_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDHealthBar
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDHealthBar ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDHealthBar = NULL;

	if ( ! pFnEnableHUDHealthBar )
		pFnEnableHUDHealthBar = (UFunction*) UObject::GObjObjects()->Data[ 77186 ];

	ATrPlayerController_execEnableHUDHealthBar_Parms EnableHUDHealthBar_Parms;
	EnableHUDHealthBar_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDHealthBar, &EnableHUDHealthBar_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDScores
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDScores ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDScores = NULL;

	if ( ! pFnEnableHUDScores )
		pFnEnableHUDScores = (UFunction*) UObject::GObjObjects()->Data[ 77184 ];

	ATrPlayerController_execEnableHUDScores_Parms EnableHUDScores_Parms;
	EnableHUDScores_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDScores, &EnableHUDScores_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDBadges
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDBadges ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDBadges = NULL;

	if ( ! pFnEnableHUDBadges )
		pFnEnableHUDBadges = (UFunction*) UObject::GObjObjects()->Data[ 77182 ];

	ATrPlayerController_execEnableHUDBadges_Parms EnableHUDBadges_Parms;
	EnableHUDBadges_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDBadges, &EnableHUDBadges_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDAccolades
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDAccolades ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDAccolades = NULL;

	if ( ! pFnEnableHUDAccolades )
		pFnEnableHUDAccolades = (UFunction*) UObject::GObjObjects()->Data[ 77180 ];

	ATrPlayerController_execEnableHUDAccolades_Parms EnableHUDAccolades_Parms;
	EnableHUDAccolades_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDAccolades, &EnableHUDAccolades_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDCredits
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDCredits ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDCredits = NULL;

	if ( ! pFnEnableHUDCredits )
		pFnEnableHUDCredits = (UFunction*) UObject::GObjObjects()->Data[ 77178 ];

	ATrPlayerController_execEnableHUDCredits_Parms EnableHUDCredits_Parms;
	EnableHUDCredits_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDCredits, &EnableHUDCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDReticule
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDReticule ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDReticule = NULL;

	if ( ! pFnEnableHUDReticule )
		pFnEnableHUDReticule = (UFunction*) UObject::GObjObjects()->Data[ 77176 ];

	ATrPlayerController_execEnableHUDReticule_Parms EnableHUDReticule_Parms;
	EnableHUDReticule_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDReticule, &EnableHUDReticule_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableHUDObjectives
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableHUDObjectives ( unsigned long bEnable )
{
	static UFunction* pFnEnableHUDObjectives = NULL;

	if ( ! pFnEnableHUDObjectives )
		pFnEnableHUDObjectives = (UFunction*) UObject::GObjObjects()->Data[ 77174 ];

	ATrPlayerController_execEnableHUDObjectives_Parms EnableHUDObjectives_Parms;
	EnableHUDObjectives_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableHUDObjectives, &EnableHUDObjectives_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetDamageCounterValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetDamageCounterValue ( )
{
	static UFunction* pFnGetDamageCounterValue = NULL;

	if ( ! pFnGetDamageCounterValue )
		pFnGetDamageCounterValue = (UFunction*) UObject::GObjObjects()->Data[ 77172 ];

	ATrPlayerController_execGetDamageCounterValue_Parms GetDamageCounterValue_Parms;

	this->ProcessEvent ( pFnGetDamageCounterValue, &GetDamageCounterValue_Parms, NULL );

	return GetDamageCounterValue_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.EnableDamageCounter
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableDamageCounter ( unsigned long bEnable )
{
	static UFunction* pFnEnableDamageCounter = NULL;

	if ( ! pFnEnableDamageCounter )
		pFnEnableDamageCounter = (UFunction*) UObject::GObjObjects()->Data[ 77170 ];

	ATrPlayerController_execEnableDamageCounter_Parms EnableDamageCounter_Parms;
	EnableDamageCounter_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableDamageCounter, &EnableDamageCounter_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetChatFilterValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetChatFilterValue ( )
{
	static UFunction* pFnGetChatFilterValue = NULL;

	if ( ! pFnGetChatFilterValue )
		pFnGetChatFilterValue = (UFunction*) UObject::GObjObjects()->Data[ 77168 ];

	ATrPlayerController_execGetChatFilterValue_Parms GetChatFilterValue_Parms;

	this->ProcessEvent ( pFnGetChatFilterValue, &GetChatFilterValue_Parms, NULL );

	return GetChatFilterValue_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.EnableChatFilter
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableChatFilter ( unsigned long bEnable )
{
	static UFunction* pFnEnableChatFilter = NULL;

	if ( ! pFnEnableChatFilter )
		pFnEnableChatFilter = (UFunction*) UObject::GObjObjects()->Data[ 77166 ];

	ATrPlayerController_execEnableChatFilter_Parms EnableChatFilter_Parms;
	EnableChatFilter_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableChatFilter, &EnableChatFilter_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetTinyWeaponValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetTinyWeaponValue ( )
{
	static UFunction* pFnGetTinyWeaponValue = NULL;

	if ( ! pFnGetTinyWeaponValue )
		pFnGetTinyWeaponValue = (UFunction*) UObject::GObjObjects()->Data[ 77163 ];

	ATrPlayerController_execGetTinyWeaponValue_Parms GetTinyWeaponValue_Parms;

	this->ProcessEvent ( pFnGetTinyWeaponValue, &GetTinyWeaponValue_Parms, NULL );

	return GetTinyWeaponValue_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.EnableTinyWeapons
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::EnableTinyWeapons ( unsigned long bEnable )
{
	static UFunction* pFnEnableTinyWeapons = NULL;

	if ( ! pFnEnableTinyWeapons )
		pFnEnableTinyWeapons = (UFunction*) UObject::GObjObjects()->Data[ 77159 ];

	ATrPlayerController_execEnableTinyWeapons_Parms EnableTinyWeapons_Parms;
	EnableTinyWeapons_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableTinyWeapons, &EnableTinyWeapons_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSetLastDamagerInfo
// [0x010201C2] 
// Parameters infos:
// int                            Health                         ( CPF_Parm )
// int                            UpgradeLevel                   ( CPF_Parm )

void ATrPlayerController::ClientSetLastDamagerInfo ( int Health, int UpgradeLevel )
{
	static UFunction* pFnClientSetLastDamagerInfo = NULL;

	if ( ! pFnClientSetLastDamagerInfo )
		pFnClientSetLastDamagerInfo = (UFunction*) UObject::GObjObjects()->Data[ 77156 ];

	ATrPlayerController_execClientSetLastDamagerInfo_Parms ClientSetLastDamagerInfo_Parms;
	ClientSetLastDamagerInfo_Parms.Health = Health;
	ClientSetLastDamagerInfo_Parms.UpgradeLevel = UpgradeLevel;

	this->ProcessEvent ( pFnClientSetLastDamagerInfo, &ClientSetLastDamagerInfo_Parms, NULL );
};

// Function TribesGame.TrPlayerController.VGSAudioFinished
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void ATrPlayerController::VGSAudioFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnVGSAudioFinished = NULL;

	if ( ! pFnVGSAudioFinished )
		pFnVGSAudioFinished = (UFunction*) UObject::GObjObjects()->Data[ 77153 ];

	ATrPlayerController_execVGSAudioFinished_Parms VGSAudioFinished_Parms;
	VGSAudioFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnVGSAudioFinished, &VGSAudioFinished_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayVGSAudio
// [0x01820142] 
// Parameters infos:
// class USoundCue*               ASound                         ( CPF_Parm )
// class APlayerReplicationInfo*  InstigatorPRI                  ( CPF_Parm )

void ATrPlayerController::ClientPlayVGSAudio ( class USoundCue* ASound, class APlayerReplicationInfo* InstigatorPRI )
{
	static UFunction* pFnClientPlayVGSAudio = NULL;

	if ( ! pFnClientPlayVGSAudio )
		pFnClientPlayVGSAudio = (UFunction*) UObject::GObjObjects()->Data[ 77148 ];

	ATrPlayerController_execClientPlayVGSAudio_Parms ClientPlayVGSAudio_Parms;
	ClientPlayVGSAudio_Parms.ASound = ASound;
	ClientPlayVGSAudio_Parms.InstigatorPRI = InstigatorPRI;

	this->ProcessEvent ( pFnClientPlayVGSAudio, &ClientPlayVGSAudio_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnMenuMovieClosed
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::OnMenuMovieClosed ( )
{
	static UFunction* pFnOnMenuMovieClosed = NULL;

	if ( ! pFnOnMenuMovieClosed )
		pFnOnMenuMovieClosed = (UFunction*) UObject::GObjObjects()->Data[ 77146 ];

	ATrPlayerController_execOnMenuMovieClosed_Parms OnMenuMovieClosed_Parms;

	this->ProcessEvent ( pFnOnMenuMovieClosed, &OnMenuMovieClosed_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnMenuMovieOpened
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::OnMenuMovieOpened ( )
{
	static UFunction* pFnOnMenuMovieOpened = NULL;

	if ( ! pFnOnMenuMovieOpened )
		pFnOnMenuMovieOpened = (UFunction*) UObject::GObjObjects()->Data[ 77144 ];

	ATrPlayerController_execOnMenuMovieOpened_Parms OnMenuMovieOpened_Parms;

	this->ProcessEvent ( pFnOnMenuMovieOpened, &OnMenuMovieOpened_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AddDetermination
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::AddDetermination ( )
{
	static UFunction* pFnAddDetermination = NULL;

	if ( ! pFnAddDetermination )
		pFnAddDetermination = (UFunction*) UObject::GObjObjects()->Data[ 77143 ];

	ATrPlayerController_execAddDetermination_Parms AddDetermination_Parms;

	this->ProcessEvent ( pFnAddDetermination, &AddDetermination_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClearDetermination
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::ClearDetermination ( )
{
	static UFunction* pFnClearDetermination = NULL;

	if ( ! pFnClearDetermination )
		pFnClearDetermination = (UFunction*) UObject::GObjObjects()->Data[ 77137 ];

	ATrPlayerController_execClearDetermination_Parms ClearDetermination_Parms;

	this->ProcessEvent ( pFnClearDetermination, &ClearDetermination_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FlushAccumulatedDetermination
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::FlushAccumulatedDetermination ( )
{
	static UFunction* pFnFlushAccumulatedDetermination = NULL;

	if ( ! pFnFlushAccumulatedDetermination )
		pFnFlushAccumulatedDetermination = (UFunction*) UObject::GObjObjects()->Data[ 77136 ];

	ATrPlayerController_execFlushAccumulatedDetermination_Parms FlushAccumulatedDetermination_Parms;

	this->ProcessEvent ( pFnFlushAccumulatedDetermination, &FlushAccumulatedDetermination_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetCurrentDetermination
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPlayerController::GetCurrentDetermination ( )
{
	static UFunction* pFnGetCurrentDetermination = NULL;

	if ( ! pFnGetCurrentDetermination )
		pFnGetCurrentDetermination = (UFunction*) UObject::GObjObjects()->Data[ 72222 ];

	ATrPlayerController_execGetCurrentDetermination_Parms GetCurrentDetermination_Parms;

	this->ProcessEvent ( pFnGetCurrentDetermination, &GetCurrentDetermination_Parms, NULL );

	return GetCurrentDetermination_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.LoadingTimer
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStart                         ( CPF_Parm )

void ATrPlayerController::LoadingTimer ( unsigned long bStart )
{
	static UFunction* pFnLoadingTimer = NULL;

	if ( ! pFnLoadingTimer )
		pFnLoadingTimer = (UFunction*) UObject::GObjObjects()->Data[ 77134 ];

	ATrPlayerController_execLoadingTimer_Parms LoadingTimer_Parms;
	LoadingTimer_Parms.bStart = bStart;

	this->ProcessEvent ( pFnLoadingTimer, &LoadingTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ConfigureSkiSpeedSteps
// [0x00020002] 
// Parameters infos:
// float                          SoftCap                        ( CPF_Parm )

void ATrPlayerController::ConfigureSkiSpeedSteps ( float SoftCap )
{
	static UFunction* pFnConfigureSkiSpeedSteps = NULL;

	if ( ! pFnConfigureSkiSpeedSteps )
		pFnConfigureSkiSpeedSteps = (UFunction*) UObject::GObjObjects()->Data[ 77130 ];

	ATrPlayerController_execConfigureSkiSpeedSteps_Parms ConfigureSkiSpeedSteps_Parms;
	ConfigureSkiSpeedSteps_Parms.SoftCap = SoftCap;

	this->ProcessEvent ( pFnConfigureSkiSpeedSteps, &ConfigureSkiSpeedSteps_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TetherProjectile
// [0x00020102] 
// Parameters infos:
// class ATrProjectile*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrProjectile*           ProjectileFromServer           ( CPF_Parm )

class ATrProjectile* ATrPlayerController::TetherProjectile ( class ATrProjectile* ProjectileFromServer )
{
	static UFunction* pFnTetherProjectile = NULL;

	if ( ! pFnTetherProjectile )
		pFnTetherProjectile = (UFunction*) UObject::GObjObjects()->Data[ 77125 ];

	ATrPlayerController_execTetherProjectile_Parms TetherProjectile_Parms;
	TetherProjectile_Parms.ProjectileFromServer = ProjectileFromServer;

	this->ProcessEvent ( pFnTetherProjectile, &TetherProjectile_Parms, NULL );

	return TetherProjectile_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.CheckTetherList
// [0x00020102] 
// Parameters infos:
// class ATrProjectile*           P                              ( CPF_Parm )

void ATrPlayerController::CheckTetherList ( class ATrProjectile* P )
{
	static UFunction* pFnCheckTetherList = NULL;

	if ( ! pFnCheckTetherList )
		pFnCheckTetherList = (UFunction*) UObject::GObjObjects()->Data[ 77123 ];

	ATrPlayerController_execCheckTetherList_Parms CheckTetherList_Parms;
	CheckTetherList_Parms.P = P;

	this->ProcessEvent ( pFnCheckTetherList, &CheckTetherList_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AddProjectileToTetherList
// [0x00020102] 
// Parameters infos:
// class ATrProjectile*           P                              ( CPF_Parm )

void ATrPlayerController::AddProjectileToTetherList ( class ATrProjectile* P )
{
	static UFunction* pFnAddProjectileToTetherList = NULL;

	if ( ! pFnAddProjectileToTetherList )
		pFnAddProjectileToTetherList = (UFunction*) UObject::GObjObjects()->Data[ 77121 ];

	ATrPlayerController_execAddProjectileToTetherList_Parms AddProjectileToTetherList_Parms;
	AddProjectileToTetherList_Parms.P = P;

	this->ProcessEvent ( pFnAddProjectileToTetherList, &AddProjectileToTetherList_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SwitchToDeathCamera
// [0x00820102] 
// Parameters infos:

void ATrPlayerController::SwitchToDeathCamera ( )
{
	static UFunction* pFnSwitchToDeathCamera = NULL;

	if ( ! pFnSwitchToDeathCamera )
		pFnSwitchToDeathCamera = (UFunction*) UObject::GObjObjects()->Data[ 77118 ];

	ATrPlayerController_execSwitchToDeathCamera_Parms SwitchToDeathCamera_Parms;

	this->ProcessEvent ( pFnSwitchToDeathCamera, &SwitchToDeathCamera_Parms, NULL );
};

// Function TribesGame.TrPlayerController.IsGameTypeCaH
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsGameTypeCaH ( )
{
	static UFunction* pFnIsGameTypeCaH = NULL;

	if ( ! pFnIsGameTypeCaH )
		pFnIsGameTypeCaH = (UFunction*) UObject::GObjObjects()->Data[ 77116 ];

	ATrPlayerController_execIsGameTypeCaH_Parms IsGameTypeCaH_Parms;

	this->ProcessEvent ( pFnIsGameTypeCaH, &IsGameTypeCaH_Parms, NULL );

	return IsGameTypeCaH_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.IsGameTypeDaD
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsGameTypeDaD ( )
{
	static UFunction* pFnIsGameTypeDaD = NULL;

	if ( ! pFnIsGameTypeDaD )
		pFnIsGameTypeDaD = (UFunction*) UObject::GObjObjects()->Data[ 77113 ];

	ATrPlayerController_execIsGameTypeDaD_Parms IsGameTypeDaD_Parms;

	this->ProcessEvent ( pFnIsGameTypeDaD, &IsGameTypeDaD_Parms, NULL );

	return IsGameTypeDaD_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.IsGameTypeArena
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsGameTypeArena ( )
{
	static UFunction* pFnIsGameTypeArena = NULL;

	if ( ! pFnIsGameTypeArena )
		pFnIsGameTypeArena = (UFunction*) UObject::GObjObjects()->Data[ 77111 ];

	ATrPlayerController_execIsGameTypeArena_Parms IsGameTypeArena_Parms;

	this->ProcessEvent ( pFnIsGameTypeArena, &IsGameTypeArena_Parms, NULL );

	return IsGameTypeArena_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.CalcCameraOnViewTarget
// [0x00420102] 
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

void ATrPlayerController::CalcCameraOnViewTarget ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCameraOnViewTarget = NULL;

	if ( ! pFnCalcCameraOnViewTarget )
		pFnCalcCameraOnViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 77101 ];

	ATrPlayerController_execCalcCameraOnViewTarget_Parms CalcCameraOnViewTarget_Parms;
	CalcCameraOnViewTarget_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCameraOnViewTarget, &CalcCameraOnViewTarget_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCameraOnViewTarget_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCameraOnViewTarget_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCameraOnViewTarget_Parms.out_FOV;
};

// Function TribesGame.TrPlayerController.UpdateCallInCooldown
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::UpdateCallInCooldown ( )
{
	static UFunction* pFnUpdateCallInCooldown = NULL;

	if ( ! pFnUpdateCallInCooldown )
		pFnUpdateCallInCooldown = (UFunction*) UObject::GObjObjects()->Data[ 77099 ];

	ATrPlayerController_execUpdateCallInCooldown_Parms UpdateCallInCooldown_Parms;

	this->ProcessEvent ( pFnUpdateCallInCooldown, &UpdateCallInCooldown_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateCallInAvailability
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::UpdateCallInAvailability ( )
{
	static UFunction* pFnUpdateCallInAvailability = NULL;

	if ( ! pFnUpdateCallInAvailability )
		pFnUpdateCallInAvailability = (UFunction*) UObject::GObjObjects()->Data[ 77094 ];

	ATrPlayerController_execUpdateCallInAvailability_Parms UpdateCallInAvailability_Parms;

	this->ProcessEvent ( pFnUpdateCallInAvailability, &UpdateCallInAvailability_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientOnFumbledFlag
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientOnFumbledFlag ( )
{
	static UFunction* pFnClientOnFumbledFlag = NULL;

	if ( ! pFnClientOnFumbledFlag )
		pFnClientOnFumbledFlag = (UFunction*) UObject::GObjObjects()->Data[ 77093 ];

	ATrPlayerController_execClientOnFumbledFlag_Parms ClientOnFumbledFlag_Parms;

	this->ProcessEvent ( pFnClientOnFumbledFlag, &ClientOnFumbledFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FumbledFlag
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::FumbledFlag ( )
{
	static UFunction* pFnFumbledFlag = NULL;

	if ( ! pFnFumbledFlag )
		pFnFumbledFlag = (UFunction*) UObject::GObjObjects()->Data[ 77092 ];

	ATrPlayerController_execFumbledFlag_Parms FumbledFlag_Parms;

	this->ProcessEvent ( pFnFumbledFlag, &FumbledFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerController.KickWarning
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventKickWarning ( )
{
	static UFunction* pFnKickWarning = NULL;

	if ( ! pFnKickWarning )
		pFnKickWarning = (UFunction*) UObject::GObjObjects()->Data[ 77091 ];

	ATrPlayerController_eventKickWarning_Parms KickWarning_Parms;

	this->ProcessEvent ( pFnKickWarning, &KickWarning_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientKickPlayer
// [0x010201C2] 
// Parameters infos:
// int                            Reason                         ( CPF_Parm )

void ATrPlayerController::ClientKickPlayer ( int Reason )
{
	static UFunction* pFnClientKickPlayer = NULL;

	if ( ! pFnClientKickPlayer )
		pFnClientKickPlayer = (UFunction*) UObject::GObjObjects()->Data[ 77089 ];

	ATrPlayerController_execClientKickPlayer_Parms ClientKickPlayer_Parms;
	ClientKickPlayer_Parms.Reason = Reason;

	this->ProcessEvent ( pFnClientKickPlayer, &ClientKickPlayer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerKickPlayer
// [0x00024002] 
// Parameters infos:
// int                            Reason                         ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ServerKickPlayer ( int Reason )
{
	static UFunction* pFnServerKickPlayer = NULL;

	if ( ! pFnServerKickPlayer )
		pFnServerKickPlayer = (UFunction*) UObject::GObjObjects()->Data[ 77087 ];

	ATrPlayerController_execServerKickPlayer_Parms ServerKickPlayer_Parms;
	ServerKickPlayer_Parms.Reason = Reason;

	this->ProcessEvent ( pFnServerKickPlayer, &ServerKickPlayer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateGameCountdown
// [0x010201C2] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrPlayerController::UpdateGameCountdown ( int Seconds )
{
	static UFunction* pFnUpdateGameCountdown = NULL;

	if ( ! pFnUpdateGameCountdown )
		pFnUpdateGameCountdown = (UFunction*) UObject::GObjObjects()->Data[ 77085 ];

	ATrPlayerController_execUpdateGameCountdown_Parms UpdateGameCountdown_Parms;
	UpdateGameCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnUpdateGameCountdown, &UpdateGameCountdown_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateRoundCountdown
// [0x010201C2] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )
// int                            Round                          ( CPF_Parm )

void ATrPlayerController::UpdateRoundCountdown ( int Seconds, int Round )
{
	static UFunction* pFnUpdateRoundCountdown = NULL;

	if ( ! pFnUpdateRoundCountdown )
		pFnUpdateRoundCountdown = (UFunction*) UObject::GObjObjects()->Data[ 77082 ];

	ATrPlayerController_execUpdateRoundCountdown_Parms UpdateRoundCountdown_Parms;
	UpdateRoundCountdown_Parms.Seconds = Seconds;
	UpdateRoundCountdown_Parms.Round = Round;

	this->ProcessEvent ( pFnUpdateRoundCountdown, &UpdateRoundCountdown_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateMatchCountdown
// [0x010201C2] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrPlayerController::UpdateMatchCountdown ( int Seconds )
{
	static UFunction* pFnUpdateMatchCountdown = NULL;

	if ( ! pFnUpdateMatchCountdown )
		pFnUpdateMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 77080 ];

	ATrPlayerController_execUpdateMatchCountdown_Parms UpdateMatchCountdown_Parms;
	UpdateMatchCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnUpdateMatchCountdown, &UpdateMatchCountdown_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientFadeToSummary
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientFadeToSummary ( )
{
	static UFunction* pFnClientFadeToSummary = NULL;

	if ( ! pFnClientFadeToSummary )
		pFnClientFadeToSummary = (UFunction*) UObject::GObjObjects()->Data[ 77078 ];

	ATrPlayerController_execClientFadeToSummary_Parms ClientFadeToSummary_Parms;

	this->ProcessEvent ( pFnClientFadeToSummary, &ClientFadeToSummary_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSetEndOfMatch
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientSetEndOfMatch ( )
{
	static UFunction* pFnClientSetEndOfMatch = NULL;

	if ( ! pFnClientSetEndOfMatch )
		pFnClientSetEndOfMatch = (UFunction*) UObject::GObjObjects()->Data[ 77077 ];

	ATrPlayerController_execClientSetEndOfMatch_Parms ClientSetEndOfMatch_Parms;

	this->ProcessEvent ( pFnClientSetEndOfMatch, &ClientSetEndOfMatch_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientMatchOver
// [0x010201C2] 
// Parameters infos:
// int                            Winner                         ( CPF_Parm )
// struct FString                 WinnerName                     ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ClientMatchOver ( int Winner, struct FString WinnerName )
{
	static UFunction* pFnClientMatchOver = NULL;

	if ( ! pFnClientMatchOver )
		pFnClientMatchOver = (UFunction*) UObject::GObjObjects()->Data[ 77073 ];

	ATrPlayerController_execClientMatchOver_Parms ClientMatchOver_Parms;
	ClientMatchOver_Parms.Winner = Winner;
	memcpy ( &ClientMatchOver_Parms.WinnerName, &WinnerName, 0xC );

	this->ProcessEvent ( pFnClientMatchOver, &ClientMatchOver_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SummarizeAwards
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::SummarizeAwards ( )
{
	static UFunction* pFnSummarizeAwards = NULL;

	if ( ! pFnSummarizeAwards )
		pFnSummarizeAwards = (UFunction*) UObject::GObjObjects()->Data[ 77072 ];

	ATrPlayerController_execSummarizeAwards_Parms SummarizeAwards_Parms;

	this->ProcessEvent ( pFnSummarizeAwards, &SummarizeAwards_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayAirMailImpact
// [0x01020142] 
// Parameters infos:

void ATrPlayerController::ClientPlayAirMailImpact ( )
{
	static UFunction* pFnClientPlayAirMailImpact = NULL;

	if ( ! pFnClientPlayAirMailImpact )
		pFnClientPlayAirMailImpact = (UFunction*) UObject::GObjObjects()->Data[ 77071 ];

	ATrPlayerController_execClientPlayAirMailImpact_Parms ClientPlayAirMailImpact_Parms;

	this->ProcessEvent ( pFnClientPlayAirMailImpact, &ClientPlayAirMailImpact_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayBluePlateImpact
// [0x01020142] 
// Parameters infos:

void ATrPlayerController::ClientPlayBluePlateImpact ( )
{
	static UFunction* pFnClientPlayBluePlateImpact = NULL;

	if ( ! pFnClientPlayBluePlateImpact )
		pFnClientPlayBluePlateImpact = (UFunction*) UObject::GObjObjects()->Data[ 77068 ];

	ATrPlayerController_execClientPlayBluePlateImpact_Parms ClientPlayBluePlateImpact_Parms;

	this->ProcessEvent ( pFnClientPlayBluePlateImpact, &ClientPlayBluePlateImpact_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayReticuleHitSound
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::ClientPlayReticuleHitSound ( )
{
	static UFunction* pFnClientPlayReticuleHitSound = NULL;

	if ( ! pFnClientPlayReticuleHitSound )
		pFnClientPlayReticuleHitSound = (UFunction*) UObject::GObjObjects()->Data[ 77063 ];

	ATrPlayerController_execClientPlayReticuleHitSound_Parms ClientPlayReticuleHitSound_Parms;

	this->ProcessEvent ( pFnClientPlayReticuleHitSound, &ClientPlayReticuleHitSound_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayTakeHit
// [0x01020142] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// unsigned char                  Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ATrPlayerController::ClientPlayTakeHit ( struct FVector HitLoc, unsigned char Damage, class UClass* DamageType )
{
	static UFunction* pFnClientPlayTakeHit = NULL;

	if ( ! pFnClientPlayTakeHit )
		pFnClientPlayTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 77057 ];

	ATrPlayerController_execClientPlayTakeHit_Parms ClientPlayTakeHit_Parms;
	memcpy ( &ClientPlayTakeHit_Parms.HitLoc, &HitLoc, 0xC );
	ClientPlayTakeHit_Parms.Damage = Damage;
	ClientPlayTakeHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnClientPlayTakeHit, &ClientPlayTakeHit_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerUnPossess
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerUnPossess ( )
{
	static UFunction* pFnServerUnPossess = NULL;

	if ( ! pFnServerUnPossess )
		pFnServerUnPossess = (UFunction*) UObject::GObjObjects()->Data[ 77055 ];

	ATrPlayerController_execServerUnPossess_Parms ServerUnPossess_Parms;

	this->ProcessEvent ( pFnServerUnPossess, &ServerUnPossess_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InRovingSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::InRovingSpectate ( )
{
	static UFunction* pFnInRovingSpectate = NULL;

	if ( ! pFnInRovingSpectate )
		pFnInRovingSpectate = (UFunction*) UObject::GObjObjects()->Data[ 53456 ];

	ATrPlayerController_execInRovingSpectate_Parms InRovingSpectate_Parms;

	this->ProcessEvent ( pFnInRovingSpectate, &InRovingSpectate_Parms, NULL );

	return InRovingSpectate_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetViewTargetList
// [0x00424100] 
// Parameters infos:
// class ATrPawn*                 PawnViewTarget                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// class ATrVehicle*              VehicleViewTarget              ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// class ATrCamera_SpectatorBookmark* BookmarkViewTarget             ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )
// class AActor*                  ObjectiveViewTarget            ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void ATrPlayerController::GetViewTargetList ( class ATrPawn** PawnViewTarget, class ATrVehicle** VehicleViewTarget, class ATrCamera_SpectatorBookmark** BookmarkViewTarget, class AActor** ObjectiveViewTarget )
{
	static UFunction* pFnGetViewTargetList = NULL;

	if ( ! pFnGetViewTargetList )
		pFnGetViewTargetList = (UFunction*) UObject::GObjObjects()->Data[ 76823 ];

	ATrPlayerController_execGetViewTargetList_Parms GetViewTargetList_Parms;

	this->ProcessEvent ( pFnGetViewTargetList, &GetViewTargetList_Parms, NULL );

	if ( PawnViewTarget )
		*PawnViewTarget = GetViewTargetList_Parms.PawnViewTarget;

	if ( VehicleViewTarget )
		*VehicleViewTarget = GetViewTargetList_Parms.VehicleViewTarget;

	if ( BookmarkViewTarget )
		*BookmarkViewTarget = GetViewTargetList_Parms.BookmarkViewTarget;

	if ( ObjectiveViewTarget )
		*ObjectiveViewTarget = GetViewTargetList_Parms.ObjectiveViewTarget;
};

// Function TribesGame.TrPlayerController.OnViewTargetLeftVehicle
// [0x00020000] 
// Parameters infos:
// class APlayerReplicationInfo*  NewPRIToWatch                  ( CPF_Parm )

void ATrPlayerController::OnViewTargetLeftVehicle ( class APlayerReplicationInfo* NewPRIToWatch )
{
	static UFunction* pFnOnViewTargetLeftVehicle = NULL;

	if ( ! pFnOnViewTargetLeftVehicle )
		pFnOnViewTargetLeftVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76821 ];

	ATrPlayerController_execOnViewTargetLeftVehicle_Parms OnViewTargetLeftVehicle_Parms;
	OnViewTargetLeftVehicle_Parms.NewPRIToWatch = NewPRIToWatch;

	this->ProcessEvent ( pFnOnViewTargetLeftVehicle, &OnViewTargetLeftVehicle_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnViewTargetDroppedFlag
// [0x00020000] 
// Parameters infos:
// class ATrFlagBase*             NewFlagToWatch                 ( CPF_Parm )

void ATrPlayerController::OnViewTargetDroppedFlag ( class ATrFlagBase* NewFlagToWatch )
{
	static UFunction* pFnOnViewTargetDroppedFlag = NULL;

	if ( ! pFnOnViewTargetDroppedFlag )
		pFnOnViewTargetDroppedFlag = (UFunction*) UObject::GObjObjects()->Data[ 76819 ];

	ATrPlayerController_execOnViewTargetDroppedFlag_Parms OnViewTargetDroppedFlag_Parms;
	OnViewTargetDroppedFlag_Parms.NewFlagToWatch = NewFlagToWatch;

	this->ProcessEvent ( pFnOnViewTargetDroppedFlag, &OnViewTargetDroppedFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnViewTargetFlagReturned
// [0x00020000] 
// Parameters infos:

void ATrPlayerController::OnViewTargetFlagReturned ( )
{
	static UFunction* pFnOnViewTargetFlagReturned = NULL;

	if ( ! pFnOnViewTargetFlagReturned )
		pFnOnViewTargetFlagReturned = (UFunction*) UObject::GObjObjects()->Data[ 76818 ];

	ATrPlayerController_execOnViewTargetFlagReturned_Parms OnViewTargetFlagReturned_Parms;

	this->ProcessEvent ( pFnOnViewTargetFlagReturned, &OnViewTargetFlagReturned_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnViewTargetCapturedFlag
// [0x00020000] 
// Parameters infos:
// class ATrFlagCTF*              NewFlagToWatch                 ( CPF_Parm )

void ATrPlayerController::OnViewTargetCapturedFlag ( class ATrFlagCTF* NewFlagToWatch )
{
	static UFunction* pFnOnViewTargetCapturedFlag = NULL;

	if ( ! pFnOnViewTargetCapturedFlag )
		pFnOnViewTargetCapturedFlag = (UFunction*) UObject::GObjObjects()->Data[ 76816 ];

	ATrPlayerController_execOnViewTargetCapturedFlag_Parms OnViewTargetCapturedFlag_Parms;
	OnViewTargetCapturedFlag_Parms.NewFlagToWatch = NewFlagToWatch;

	this->ProcessEvent ( pFnOnViewTargetCapturedFlag, &OnViewTargetCapturedFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSetMoveSpeed
// [0x002200C0] 
// Parameters infos:
// float                          NewSpeed                       ( CPF_Parm )

void ATrPlayerController::ServerSetMoveSpeed ( float NewSpeed )
{
	static UFunction* pFnServerSetMoveSpeed = NULL;

	if ( ! pFnServerSetMoveSpeed )
		pFnServerSetMoveSpeed = (UFunction*) UObject::GObjObjects()->Data[ 76814 ];

	ATrPlayerController_execServerSetMoveSpeed_Parms ServerSetMoveSpeed_Parms;
	ServerSetMoveSpeed_Parms.NewSpeed = NewSpeed;

	this->ProcessEvent ( pFnServerSetMoveSpeed, &ServerSetMoveSpeed_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerDecreaseCamDistance
// [0x002200C0] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ATrPlayerController::ServerDecreaseCamDistance ( int Amount )
{
	static UFunction* pFnServerDecreaseCamDistance = NULL;

	if ( ! pFnServerDecreaseCamDistance )
		pFnServerDecreaseCamDistance = (UFunction*) UObject::GObjObjects()->Data[ 76812 ];

	ATrPlayerController_execServerDecreaseCamDistance_Parms ServerDecreaseCamDistance_Parms;
	ServerDecreaseCamDistance_Parms.Amount = Amount;

	this->ProcessEvent ( pFnServerDecreaseCamDistance, &ServerDecreaseCamDistance_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerIncreaseCamDistance
// [0x002200C0] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ATrPlayerController::ServerIncreaseCamDistance ( int Amount )
{
	static UFunction* pFnServerIncreaseCamDistance = NULL;

	if ( ! pFnServerIncreaseCamDistance )
		pFnServerIncreaseCamDistance = (UFunction*) UObject::GObjObjects()->Data[ 76810 ];

	ATrPlayerController_execServerIncreaseCamDistance_Parms ServerIncreaseCamDistance_Parms;
	ServerIncreaseCamDistance_Parms.Amount = Amount;

	this->ProcessEvent ( pFnServerIncreaseCamDistance, &ServerIncreaseCamDistance_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientOnViewTargetChange
// [0x01020140] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )

void ATrPlayerController::ClientOnViewTargetChange ( class AActor* NewViewTarget )
{
	static UFunction* pFnClientOnViewTargetChange = NULL;

	if ( ! pFnClientOnViewTargetChange )
		pFnClientOnViewTargetChange = (UFunction*) UObject::GObjObjects()->Data[ 76808 ];

	ATrPlayerController_execClientOnViewTargetChange_Parms ClientOnViewTargetChange_Parms;
	ClientOnViewTargetChange_Parms.NewViewTarget = NewViewTarget;

	this->ProcessEvent ( pFnClientOnViewTargetChange, &ClientOnViewTargetChange_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewActor
// [0x00220040] 
// Parameters infos:
// class AActor*                  ActorToView                    ( CPF_Parm )

void ATrPlayerController::ServerViewActor ( class AActor* ActorToView )
{
	static UFunction* pFnServerViewActor = NULL;

	if ( ! pFnServerViewActor )
		pFnServerViewActor = (UFunction*) UObject::GObjObjects()->Data[ 76806 ];

	ATrPlayerController_execServerViewActor_Parms ServerViewActor_Parms;
	ServerViewActor_Parms.ActorToView = ActorToView;

	this->ProcessEvent ( pFnServerViewActor, &ServerViewActor_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewFastestPlayer
// [0x00220040] 
// Parameters infos:

void ATrPlayerController::ServerViewFastestPlayer ( )
{
	static UFunction* pFnServerViewFastestPlayer = NULL;

	if ( ! pFnServerViewFastestPlayer )
		pFnServerViewFastestPlayer = (UFunction*) UObject::GObjObjects()->Data[ 76805 ];

	ATrPlayerController_execServerViewFastestPlayer_Parms ServerViewFastestPlayer_Parms;

	this->ProcessEvent ( pFnServerViewFastestPlayer, &ServerViewFastestPlayer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewVehicles
// [0x00220040] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ServerViewVehicles ( int Dir )
{
	static UFunction* pFnServerViewVehicles = NULL;

	if ( ! pFnServerViewVehicles )
		pFnServerViewVehicles = (UFunction*) UObject::GObjObjects()->Data[ 76803 ];

	ATrPlayerController_execServerViewVehicles_Parms ServerViewVehicles_Parms;
	ServerViewVehicles_Parms.Dir = Dir;

	this->ProcessEvent ( pFnServerViewVehicles, &ServerViewVehicles_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewBookmark
// [0x00220040] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ServerViewBookmark ( int Dir )
{
	static UFunction* pFnServerViewBookmark = NULL;

	if ( ! pFnServerViewBookmark )
		pFnServerViewBookmark = (UFunction*) UObject::GObjObjects()->Data[ 76801 ];

	ATrPlayerController_execServerViewBookmark_Parms ServerViewBookmark_Parms;
	ServerViewBookmark_Parms.Dir = Dir;

	this->ProcessEvent ( pFnServerViewBookmark, &ServerViewBookmark_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewGenerators
// [0x00220040] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ServerViewGenerators ( int Dir )
{
	static UFunction* pFnServerViewGenerators = NULL;

	if ( ! pFnServerViewGenerators )
		pFnServerViewGenerators = (UFunction*) UObject::GObjObjects()->Data[ 76799 ];

	ATrPlayerController_execServerViewGenerators_Parms ServerViewGenerators_Parms;
	ServerViewGenerators_Parms.Dir = Dir;

	this->ProcessEvent ( pFnServerViewGenerators, &ServerViewGenerators_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewFlagStands
// [0x00220040] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ServerViewFlagStands ( int Dir )
{
	static UFunction* pFnServerViewFlagStands = NULL;

	if ( ! pFnServerViewFlagStands )
		pFnServerViewFlagStands = (UFunction*) UObject::GObjObjects()->Data[ 76797 ];

	ATrPlayerController_execServerViewFlagStands_Parms ServerViewFlagStands_Parms;
	ServerViewFlagStands_Parms.Dir = Dir;

	this->ProcessEvent ( pFnServerViewFlagStands, &ServerViewFlagStands_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerViewFlags
// [0x00220040] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ServerViewFlags ( int Dir )
{
	static UFunction* pFnServerViewFlags = NULL;

	if ( ! pFnServerViewFlags )
		pFnServerViewFlags = (UFunction*) UObject::GObjObjects()->Data[ 76795 ];

	ATrPlayerController_execServerViewFlags_Parms ServerViewFlags_Parms;
	ServerViewFlags_Parms.Dir = Dir;

	this->ProcessEvent ( pFnServerViewFlags, &ServerViewFlags_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSpectate
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bNeutral                       ( CPF_Parm )

void ATrPlayerController::ServerSpectate ( unsigned long bNeutral )
{
	static UFunction* pFnServerSpectate = NULL;

	if ( ! pFnServerSpectate )
		pFnServerSpectate = (UFunction*) UObject::GObjObjects()->Data[ 76791 ];

	ATrPlayerController_execServerSpectate_Parms ServerSpectate_Parms;
	ServerSpectate_Parms.bNeutral = bNeutral;

	this->ProcessEvent ( pFnServerSpectate, &ServerSpectate_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSpectate
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bNeutral                       ( CPF_Parm )

void ATrPlayerController::ClientSpectate ( unsigned long bNeutral )
{
	static UFunction* pFnClientSpectate = NULL;

	if ( ! pFnClientSpectate )
		pFnClientSpectate = (UFunction*) UObject::GObjObjects()->Data[ 76788 ];

	ATrPlayerController_execClientSpectate_Parms ClientSpectate_Parms;
	ClientSpectate_Parms.bNeutral = bNeutral;

	this->ProcessEvent ( pFnClientSpectate, &ClientSpectate_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EndSpectate
// [0x00020000] 
// Parameters infos:

void ATrPlayerController::EndSpectate ( )
{
	static UFunction* pFnEndSpectate = NULL;

	if ( ! pFnEndSpectate )
		pFnEndSpectate = (UFunction*) UObject::GObjObjects()->Data[ 76787 ];

	ATrPlayerController_execEndSpectate_Parms EndSpectate_Parms;

	this->ProcessEvent ( pFnEndSpectate, &EndSpectate_Parms, NULL );
};

// Function TribesGame.TrPlayerController.Spectate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNeutral                       ( CPF_Parm )

void ATrPlayerController::Spectate ( unsigned long bNeutral )
{
	static UFunction* pFnSpectate = NULL;

	if ( ! pFnSpectate )
		pFnSpectate = (UFunction*) UObject::GObjObjects()->Data[ 76785 ];

	ATrPlayerController_execSpectate_Parms Spectate_Parms;
	Spectate_Parms.bNeutral = bNeutral;

	this->ProcessEvent ( pFnSpectate, &Spectate_Parms, NULL );
};

// Function TribesGame.TrPlayerController.NotifyFallingHitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

void ATrPlayerController::eventNotifyFallingHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyFallingHitWall = NULL;

	if ( ! pFnNotifyFallingHitWall )
		pFnNotifyFallingHitWall = (UFunction*) UObject::GObjObjects()->Data[ 76781 ];

	ATrPlayerController_eventNotifyFallingHitWall_Parms NotifyFallingHitWall_Parms;
	memcpy ( &NotifyFallingHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyFallingHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyFallingHitWall, &NotifyFallingHitWall_Parms, NULL );
};

// Function TribesGame.TrPlayerController.NotifyHitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

bool ATrPlayerController::eventNotifyHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyHitWall = NULL;

	if ( ! pFnNotifyHitWall )
		pFnNotifyHitWall = (UFunction*) UObject::GObjObjects()->Data[ 76776 ];

	ATrPlayerController_eventNotifyHitWall_Parms NotifyHitWall_Parms;
	memcpy ( &NotifyHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyHitWall, &NotifyHitWall_Parms, NULL );

	return NotifyHitWall_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.UpdatePotentialSeekingTargets
// [0x010201C2] 
// Parameters infos:
// TArray< class AActor* >        NewPotentialTargets            ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::UpdatePotentialSeekingTargets ( TArray< class AActor* > NewPotentialTargets )
{
	static UFunction* pFnUpdatePotentialSeekingTargets = NULL;

	if ( ! pFnUpdatePotentialSeekingTargets )
		pFnUpdatePotentialSeekingTargets = (UFunction*) UObject::GObjObjects()->Data[ 76771 ];

	ATrPlayerController_execUpdatePotentialSeekingTargets_Parms UpdatePotentialSeekingTargets_Parms;
	memcpy ( &UpdatePotentialSeekingTargets_Parms.NewPotentialTargets, &NewPotentialTargets, 0xC );

	this->ProcessEvent ( pFnUpdatePotentialSeekingTargets, &UpdatePotentialSeekingTargets_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSetPlayerClassObjects
// [0x010201C2] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            PerkIcon1                      ( CPF_Parm )
// int                            PerkIcon2                      ( CPF_Parm )

void ATrPlayerController::ClientSetPlayerClassObjects ( struct FString ClassName, int PerkIcon1, int PerkIcon2 )
{
	static UFunction* pFnClientSetPlayerClassObjects = NULL;

	if ( ! pFnClientSetPlayerClassObjects )
		pFnClientSetPlayerClassObjects = (UFunction*) UObject::GObjObjects()->Data[ 76767 ];

	ATrPlayerController_execClientSetPlayerClassObjects_Parms ClientSetPlayerClassObjects_Parms;
	memcpy ( &ClientSetPlayerClassObjects_Parms.ClassName, &ClassName, 0xC );
	ClientSetPlayerClassObjects_Parms.PerkIcon1 = PerkIcon1;
	ClientSetPlayerClassObjects_Parms.PerkIcon2 = PerkIcon2;

	this->ProcessEvent ( pFnClientSetPlayerClassObjects, &ClientSetPlayerClassObjects_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientShowFlagIcon
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ATrPlayerController::ClientShowFlagIcon ( unsigned long bShow )
{
	static UFunction* pFnClientShowFlagIcon = NULL;

	if ( ! pFnClientShowFlagIcon )
		pFnClientShowFlagIcon = (UFunction*) UObject::GObjObjects()->Data[ 76765 ];

	ATrPlayerController_execClientShowFlagIcon_Parms ClientShowFlagIcon_Parms;
	ClientShowFlagIcon_Parms.bShow = bShow;

	this->ProcessEvent ( pFnClientShowFlagIcon, &ClientShowFlagIcon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.HideHUDElements
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventHideHUDElements ( )
{
	static UFunction* pFnHideHUDElements = NULL;

	if ( ! pFnHideHUDElements )
		pFnHideHUDElements = (UFunction*) UObject::GObjObjects()->Data[ 76763 ];

	ATrPlayerController_eventHideHUDElements_Parms HideHUDElements_Parms;

	this->ProcessEvent ( pFnHideHUDElements, &HideHUDElements_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetFamilyInfoFromId
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

class UClass* ATrPlayerController::GetFamilyInfoFromId ( int ClassId )
{
	static UFunction* pFnGetFamilyInfoFromId = NULL;

	if ( ! pFnGetFamilyInfoFromId )
		pFnGetFamilyInfoFromId = (UFunction*) UObject::GObjObjects()->Data[ 53302 ];

	ATrPlayerController_execGetFamilyInfoFromId_Parms GetFamilyInfoFromId_Parms;
	GetFamilyInfoFromId_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnGetFamilyInfoFromId, &GetFamilyInfoFromId_Parms, NULL );

	return GetFamilyInfoFromId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.RegisterPendingClass
// [0x010201C2] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool ATrPlayerController::RegisterPendingClass ( int ClassId, int Loadout )
{
	static UFunction* pFnRegisterPendingClass = NULL;

	if ( ! pFnRegisterPendingClass )
		pFnRegisterPendingClass = (UFunction*) UObject::GObjObjects()->Data[ 57993 ];

	ATrPlayerController_execRegisterPendingClass_Parms RegisterPendingClass_Parms;
	RegisterPendingClass_Parms.ClassId = ClassId;
	RegisterPendingClass_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnRegisterPendingClass, &RegisterPendingClass_Parms, NULL );

	return RegisterPendingClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.LoadPendingDeviceContentData
// [0x00020002] 
// Parameters infos:
// class UClass*                  DeviceClass                    ( CPF_Parm )

void ATrPlayerController::LoadPendingDeviceContentData ( class UClass* DeviceClass )
{
	static UFunction* pFnLoadPendingDeviceContentData = NULL;

	if ( ! pFnLoadPendingDeviceContentData )
		pFnLoadPendingDeviceContentData = (UFunction*) UObject::GObjObjects()->Data[ 76747 ];

	ATrPlayerController_execLoadPendingDeviceContentData_Parms LoadPendingDeviceContentData_Parms;
	LoadPendingDeviceContentData_Parms.DeviceClass = DeviceClass;

	this->ProcessEvent ( pFnLoadPendingDeviceContentData, &LoadPendingDeviceContentData_Parms, NULL );
};

// Function TribesGame.TrPlayerController.LoadPendingLoadoutContentData
// [0x00020002] 
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

void ATrPlayerController::LoadPendingLoadoutContentData ( int ClassId, int Loadout )
{
	static UFunction* pFnLoadPendingLoadoutContentData = NULL;

	if ( ! pFnLoadPendingLoadoutContentData )
		pFnLoadPendingLoadoutContentData = (UFunction*) UObject::GObjObjects()->Data[ 76742 ];

	ATrPlayerController_execLoadPendingLoadoutContentData_Parms LoadPendingLoadoutContentData_Parms;
	LoadPendingLoadoutContentData_Parms.ClassId = ClassId;
	LoadPendingLoadoutContentData_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnLoadPendingLoadoutContentData, &LoadPendingLoadoutContentData_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientOnMotionSensorMineSounded
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientOnMotionSensorMineSounded ( )
{
	static UFunction* pFnClientOnMotionSensorMineSounded = NULL;

	if ( ! pFnClientOnMotionSensorMineSounded )
		pFnClientOnMotionSensorMineSounded = (UFunction*) UObject::GObjObjects()->Data[ 76741 ];

	ATrPlayerController_execClientOnMotionSensorMineSounded_Parms ClientOnMotionSensorMineSounded_Parms;

	this->ProcessEvent ( pFnClientOnMotionSensorMineSounded, &ClientOnMotionSensorMineSounded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientOnMotionSensorAlarmSounded
// [0x010201C2] 
// Parameters infos:
// class ATrDeployable_MotionSensor* MotionSensor                   ( CPF_Parm )

void ATrPlayerController::ClientOnMotionSensorAlarmSounded ( class ATrDeployable_MotionSensor* MotionSensor )
{
	static UFunction* pFnClientOnMotionSensorAlarmSounded = NULL;

	if ( ! pFnClientOnMotionSensorAlarmSounded )
		pFnClientOnMotionSensorAlarmSounded = (UFunction*) UObject::GObjObjects()->Data[ 76737 ];

	ATrPlayerController_execClientOnMotionSensorAlarmSounded_Parms ClientOnMotionSensorAlarmSounded_Parms;
	ClientOnMotionSensorAlarmSounded_Parms.MotionSensor = MotionSensor;

	this->ProcessEvent ( pFnClientOnMotionSensorAlarmSounded, &ClientOnMotionSensorAlarmSounded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetSpectatorSettings
// [0x00020002] 
// Parameters infos:
// class UTrPlayerInput_Spectator* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTrPlayerInput_Spectator* ATrPlayerController::GetSpectatorSettings ( )
{
	static UFunction* pFnGetSpectatorSettings = NULL;

	if ( ! pFnGetSpectatorSettings )
		pFnGetSpectatorSettings = (UFunction*) UObject::GObjObjects()->Data[ 76734 ];

	ATrPlayerController_execGetSpectatorSettings_Parms GetSpectatorSettings_Parms;

	this->ProcessEvent ( pFnGetSpectatorSettings, &GetSpectatorSettings_Parms, NULL );

	return GetSpectatorSettings_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetEngineSettings
// [0x00024002] 
// Parameters infos:
// class UPlayerInput*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUse                           ( CPF_OptionalParm | CPF_Parm )

class UPlayerInput* ATrPlayerController::GetEngineSettings ( unsigned long bUse )
{
	static UFunction* pFnGetEngineSettings = NULL;

	if ( ! pFnGetEngineSettings )
		pFnGetEngineSettings = (UFunction*) UObject::GObjObjects()->Data[ 76730 ];

	ATrPlayerController_execGetEngineSettings_Parms GetEngineSettings_Parms;
	GetEngineSettings_Parms.bUse = bUse;

	this->ProcessEvent ( pFnGetEngineSettings, &GetEngineSettings_Parms, NULL );

	return GetEngineSettings_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ClientSetBehindView
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void ATrPlayerController::ClientSetBehindView ( unsigned long bNewBehindView )
{
	static UFunction* pFnClientSetBehindView = NULL;

	if ( ! pFnClientSetBehindView )
		pFnClientSetBehindView = (UFunction*) UObject::GObjObjects()->Data[ 76728 ];

	ATrPlayerController_execClientSetBehindView_Parms ClientSetBehindView_Parms;
	ClientSetBehindView_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnClientSetBehindView, &ClientSetBehindView_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSetBehindView
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void ATrPlayerController::ServerSetBehindView ( unsigned long bNewBehindView )
{
	static UFunction* pFnServerSetBehindView = NULL;

	if ( ! pFnServerSetBehindView )
		pFnServerSetBehindView = (UFunction*) UObject::GObjObjects()->Data[ 76726 ];

	ATrPlayerController_execServerSetBehindView_Parms ServerSetBehindView_Parms;
	ServerSetBehindView_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnServerSetBehindView, &ServerSetBehindView_Parms, NULL );
};

// Function TribesGame.TrPlayerController.BehindView
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::BehindView ( )
{
	static UFunction* pFnBehindView = NULL;

	if ( ! pFnBehindView )
		pFnBehindView = (UFunction*) UObject::GObjObjects()->Data[ 76725 ];

	ATrPlayerController_execBehindView_Parms BehindView_Parms;

	this->ProcessEvent ( pFnBehindView, &BehindView_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetNewPlayerAssistToApply
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPlayerController::GetNewPlayerAssistToApply ( )
{
	static UFunction* pFnGetNewPlayerAssistToApply = NULL;

	if ( ! pFnGetNewPlayerAssistToApply )
		pFnGetNewPlayerAssistToApply = (UFunction*) UObject::GObjObjects()->Data[ 72347 ];

	ATrPlayerController_execGetNewPlayerAssistToApply_Parms GetNewPlayerAssistToApply_Parms;

	this->ProcessEvent ( pFnGetNewPlayerAssistToApply, &GetNewPlayerAssistToApply_Parms, NULL );

	return GetNewPlayerAssistToApply_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.UpdateNewPlayerAssistPoints
// [0x00020002] 
// Parameters infos:
// int                            AmoutToSubtract                ( CPF_Parm )

void ATrPlayerController::UpdateNewPlayerAssistPoints ( int AmoutToSubtract )
{
	static UFunction* pFnUpdateNewPlayerAssistPoints = NULL;

	if ( ! pFnUpdateNewPlayerAssistPoints )
		pFnUpdateNewPlayerAssistPoints = (UFunction*) UObject::GObjObjects()->Data[ 76721 ];

	ATrPlayerController_execUpdateNewPlayerAssistPoints_Parms UpdateNewPlayerAssistPoints_Parms;
	UpdateNewPlayerAssistPoints_Parms.AmoutToSubtract = AmoutToSubtract;

	this->ProcessEvent ( pFnUpdateNewPlayerAssistPoints, &UpdateNewPlayerAssistPoints_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetNewPlayerAssistAmount
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPlayerController::GetNewPlayerAssistAmount ( )
{
	static UFunction* pFnGetNewPlayerAssistAmount = NULL;

	if ( ! pFnGetNewPlayerAssistAmount )
		pFnGetNewPlayerAssistAmount = (UFunction*) UObject::GObjObjects()->Data[ 76719 ];

	ATrPlayerController_execGetNewPlayerAssistAmount_Parms GetNewPlayerAssistAmount_Parms;

	this->ProcessEvent ( pFnGetNewPlayerAssistAmount, &GetNewPlayerAssistAmount_Parms, NULL );

	return GetNewPlayerAssistAmount_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.LoadPlayerProfile
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::LoadPlayerProfile ( )
{
	static UFunction* pFnLoadPlayerProfile = NULL;

	if ( ! pFnLoadPlayerProfile )
		pFnLoadPlayerProfile = (UFunction*) UObject::GObjObjects()->Data[ 76715 ];

	ATrPlayerController_execLoadPlayerProfile_Parms LoadPlayerProfile_Parms;

	this->ProcessEvent ( pFnLoadPlayerProfile, &LoadPlayerProfile_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnJetpackHelpTextDistanceThresholdReached
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventOnJetpackHelpTextDistanceThresholdReached ( )
{
	static UFunction* pFnOnJetpackHelpTextDistanceThresholdReached = NULL;

	if ( ! pFnOnJetpackHelpTextDistanceThresholdReached )
		pFnOnJetpackHelpTextDistanceThresholdReached = (UFunction*) UObject::GObjObjects()->Data[ 76714 ];

	ATrPlayerController_eventOnJetpackHelpTextDistanceThresholdReached_Parms OnJetpackHelpTextDistanceThresholdReached_Parms;

	this->ProcessEvent ( pFnOnJetpackHelpTextDistanceThresholdReached, &OnJetpackHelpTextDistanceThresholdReached_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnSkiHelpTextDistanceThresholdReached
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventOnSkiHelpTextDistanceThresholdReached ( )
{
	static UFunction* pFnOnSkiHelpTextDistanceThresholdReached = NULL;

	if ( ! pFnOnSkiHelpTextDistanceThresholdReached )
		pFnOnSkiHelpTextDistanceThresholdReached = (UFunction*) UObject::GObjObjects()->Data[ 76713 ];

	ATrPlayerController_eventOnSkiHelpTextDistanceThresholdReached_Parms OnSkiHelpTextDistanceThresholdReached_Parms;

	this->ProcessEvent ( pFnOnSkiHelpTextDistanceThresholdReached, &OnSkiHelpTextDistanceThresholdReached_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ShowMoveErrors
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::ShowMoveErrors ( unsigned long bEnabled )
{
	static UFunction* pFnShowMoveErrors = NULL;

	if ( ! pFnShowMoveErrors )
		pFnShowMoveErrors = (UFunction*) UObject::GObjObjects()->Data[ 76711 ];

	ATrPlayerController_execShowMoveErrors_Parms ShowMoveErrors_Parms;
	ShowMoveErrors_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnShowMoveErrors, &ShowMoveErrors_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientReceiveVGSContextCommand
// [0x010201C2] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// unsigned char                  ContextActor                   ( CPF_Parm )
// unsigned char                  ContextLocation                ( CPF_Parm )
// unsigned long                  bEnemyLocation                 ( CPF_Parm )

void ATrPlayerController::ClientReceiveVGSContextCommand ( class APlayerReplicationInfo* PRI, unsigned char ContextActor, unsigned char ContextLocation, unsigned long bEnemyLocation )
{
	static UFunction* pFnClientReceiveVGSContextCommand = NULL;

	if ( ! pFnClientReceiveVGSContextCommand )
		pFnClientReceiveVGSContextCommand = (UFunction*) UObject::GObjObjects()->Data[ 76704 ];

	ATrPlayerController_execClientReceiveVGSContextCommand_Parms ClientReceiveVGSContextCommand_Parms;
	ClientReceiveVGSContextCommand_Parms.PRI = PRI;
	ClientReceiveVGSContextCommand_Parms.ContextActor = ContextActor;
	ClientReceiveVGSContextCommand_Parms.ContextLocation = ContextLocation;
	ClientReceiveVGSContextCommand_Parms.bEnemyLocation = bEnemyLocation;

	this->ProcessEvent ( pFnClientReceiveVGSContextCommand, &ClientReceiveVGSContextCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientReceiveVGSCommand
// [0x018201C2] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// unsigned char                  VGSCommandIndex                ( CPF_Parm )

void ATrPlayerController::ClientReceiveVGSCommand ( class APlayerReplicationInfo* PRI, unsigned char VGSCommandIndex )
{
	static UFunction* pFnClientReceiveVGSCommand = NULL;

	if ( ! pFnClientReceiveVGSCommand )
		pFnClientReceiveVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 76695 ];

	ATrPlayerController_execClientReceiveVGSCommand_Parms ClientReceiveVGSCommand_Parms;
	ClientReceiveVGSCommand_Parms.PRI = PRI;
	ClientReceiveVGSCommand_Parms.VGSCommandIndex = VGSCommandIndex;

	this->ProcessEvent ( pFnClientReceiveVGSCommand, &ClientReceiveVGSCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestVGSCommand
// [0x002200C2] 
// Parameters infos:
// unsigned char                  VGSCommandIndex                ( CPF_Parm )
// unsigned long                  bGlobal                        ( CPF_Parm )

void ATrPlayerController::ServerRequestVGSCommand ( unsigned char VGSCommandIndex, unsigned long bGlobal )
{
	static UFunction* pFnServerRequestVGSCommand = NULL;

	if ( ! pFnServerRequestVGSCommand )
		pFnServerRequestVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 76691 ];

	ATrPlayerController_execServerRequestVGSCommand_Parms ServerRequestVGSCommand_Parms;
	ServerRequestVGSCommand_Parms.VGSCommandIndex = VGSCommandIndex;
	ServerRequestVGSCommand_Parms.bGlobal = bGlobal;

	this->ProcessEvent ( pFnServerRequestVGSCommand, &ServerRequestVGSCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestVGSContextCommand
// [0x002200C2] 
// Parameters infos:
// unsigned char                  ContextActor                   ( CPF_Parm )
// unsigned char                  ContextLocation                ( CPF_Parm )
// unsigned long                  bEnemyLocation                 ( CPF_Parm )
// class AActor*                  SpottedActor                   ( CPF_Parm )

void ATrPlayerController::ServerRequestVGSContextCommand ( unsigned char ContextActor, unsigned char ContextLocation, unsigned long bEnemyLocation, class AActor* SpottedActor )
{
	static UFunction* pFnServerRequestVGSContextCommand = NULL;

	if ( ! pFnServerRequestVGSContextCommand )
		pFnServerRequestVGSContextCommand = (UFunction*) UObject::GObjObjects()->Data[ 76685 ];

	ATrPlayerController_execServerRequestVGSContextCommand_Parms ServerRequestVGSContextCommand_Parms;
	ServerRequestVGSContextCommand_Parms.ContextActor = ContextActor;
	ServerRequestVGSContextCommand_Parms.ContextLocation = ContextLocation;
	ServerRequestVGSContextCommand_Parms.bEnemyLocation = bEnemyLocation;
	ServerRequestVGSContextCommand_Parms.SpottedActor = SpottedActor;

	this->ProcessEvent ( pFnServerRequestVGSContextCommand, &ServerRequestVGSContextCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SpotTarget
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::SpotTarget ( )
{
	static UFunction* pFnSpotTarget = NULL;

	if ( ! pFnSpotTarget )
		pFnSpotTarget = (UFunction*) UObject::GObjObjects()->Data[ 76681 ];

	ATrPlayerController_execSpotTarget_Parms SpotTarget_Parms;

	this->ProcessEvent ( pFnSpotTarget, &SpotTarget_Parms, NULL );
};

// Function TribesGame.TrPlayerController.BeginVGS
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::BeginVGS ( )
{
	static UFunction* pFnBeginVGS = NULL;

	if ( ! pFnBeginVGS )
		pFnBeginVGS = (UFunction*) UObject::GObjObjects()->Data[ 76679 ];

	ATrPlayerController_execBeginVGS_Parms BeginVGS_Parms;

	this->ProcessEvent ( pFnBeginVGS, &BeginVGS_Parms, NULL );
};

// Function TribesGame.TrPlayerController.WarnPlayerAboutSpam
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::WarnPlayerAboutSpam ( )
{
	static UFunction* pFnWarnPlayerAboutSpam = NULL;

	if ( ! pFnWarnPlayerAboutSpam )
		pFnWarnPlayerAboutSpam = (UFunction*) UObject::GObjObjects()->Data[ 76678 ];

	ATrPlayerController_execWarnPlayerAboutSpam_Parms WarnPlayerAboutSpam_Parms;

	this->ProcessEvent ( pFnWarnPlayerAboutSpam, &WarnPlayerAboutSpam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AllowTextMessage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::AllowTextMessage ( struct FString msg )
{
	static UFunction* pFnAllowTextMessage = NULL;

	if ( ! pFnAllowTextMessage )
		pFnAllowTextMessage = (UFunction*) UObject::GObjObjects()->Data[ 76675 ];

	ATrPlayerController_execAllowTextMessage_Parms AllowTextMessage_Parms;
	memcpy ( &AllowTextMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnAllowTextMessage, &AllowTextMessage_Parms, NULL );

	return AllowTextMessage_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.TeamSay
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::TeamSay ( struct FString msg )
{
	static UFunction* pFnTeamSay = NULL;

	if ( ! pFnTeamSay )
		pFnTeamSay = (UFunction*) UObject::GObjObjects()->Data[ 76673 ];

	ATrPlayerController_execTeamSay_Parms TeamSay_Parms;
	memcpy ( &TeamSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnTeamSay, &TeamSay_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TeamTalk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::TeamTalk ( )
{
	static UFunction* pFnTeamTalk = NULL;

	if ( ! pFnTeamTalk )
		pFnTeamTalk = (UFunction*) UObject::GObjObjects()->Data[ 76670 ];

	ATrPlayerController_execTeamTalk_Parms TeamTalk_Parms;

	this->ProcessEvent ( pFnTeamTalk, &TeamTalk_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TalkConsole
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bTeam                          ( CPF_Parm )

void ATrPlayerController::eventTalkConsole ( unsigned long bTeam )
{
	static UFunction* pFnTalkConsole = NULL;

	if ( ! pFnTalkConsole )
		pFnTalkConsole = (UFunction*) UObject::GObjObjects()->Data[ 76665 ];

	ATrPlayerController_eventTalkConsole_Parms TalkConsole_Parms;
	TalkConsole_Parms.bTeam = bTeam;

	this->ProcessEvent ( pFnTalkConsole, &TalkConsole_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ChatConsole
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bTeam                          ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ChatConsole ( unsigned long bTeam )
{
	static UFunction* pFnChatConsole = NULL;

	if ( ! pFnChatConsole )
		pFnChatConsole = (UFunction*) UObject::GObjObjects()->Data[ 76661 ];

	ATrPlayerController_execChatConsole_Parms ChatConsole_Parms;
	ChatConsole_Parms.bTeam = bTeam;

	this->ProcessEvent ( pFnChatConsole, &ChatConsole_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CanCommunicate
// [0x00040103] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::CanCommunicate ( )
{
	static UFunction* pFnCanCommunicate = NULL;

	if ( ! pFnCanCommunicate )
		pFnCanCommunicate = (UFunction*) UObject::GObjObjects()->Data[ 76656 ];

	ATrPlayerController_execCanCommunicate_Parms CanCommunicate_Parms;

	this->ProcessEvent ( pFnCanCommunicate, &CanCommunicate_Parms, NULL );

	return CanCommunicate_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.Talk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::Talk ( )
{
	static UFunction* pFnTalk = NULL;

	if ( ! pFnTalk )
		pFnTalk = (UFunction*) UObject::GObjObjects()->Data[ 76657 ];

	ATrPlayerController_execTalk_Parms Talk_Parms;

	this->ProcessEvent ( pFnTalk, &Talk_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReplyTalk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ReplyTalk ( )
{
	static UFunction* pFnReplyTalk = NULL;

	if ( ! pFnReplyTalk )
		pFnReplyTalk = (UFunction*) UObject::GObjObjects()->Data[ 76652 ];

	ATrPlayerController_execReplyTalk_Parms ReplyTalk_Parms;

	this->ProcessEvent ( pFnReplyTalk, &ReplyTalk_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetLastTellSender
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrPlayerController::GetLastTellSender ( )
{
	static UFunction* pFnGetLastTellSender = NULL;

	if ( ! pFnGetLastTellSender )
		pFnGetLastTellSender = (UFunction*) UObject::GObjObjects()->Data[ 76650 ];

	ATrPlayerController_execGetLastTellSender_Parms GetLastTellSender_Parms;

	pFnGetLastTellSender->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLastTellSender, &GetLastTellSender_Parms, NULL );

	pFnGetLastTellSender->FunctionFlags |= 0x400;

	return GetLastTellSender_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.AddChatToConsole
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Sender                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ChatMessage                    ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  Channel                        ( CPF_Parm )

void ATrPlayerController::eventAddChatToConsole ( struct FString Sender, struct FString ChatMessage, unsigned char Channel )
{
	static UFunction* pFnAddChatToConsole = NULL;

	if ( ! pFnAddChatToConsole )
		pFnAddChatToConsole = (UFunction*) UObject::GObjObjects()->Data[ 76642 ];

	ATrPlayerController_eventAddChatToConsole_Parms AddChatToConsole_Parms;
	memcpy ( &AddChatToConsole_Parms.Sender, &Sender, 0xC );
	memcpy ( &AddChatToConsole_Parms.ChatMessage, &ChatMessage, 0xC );
	AddChatToConsole_Parms.Channel = Channel;

	this->ProcessEvent ( pFnAddChatToConsole, &AddChatToConsole_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetChatColor
// [0x00424002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Channel                        ( CPF_Parm )
// unsigned long                  bSameTeam                      ( CPF_OptionalParm | CPF_Parm )
// int                            ChatColorIdx                   ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

struct FColor ATrPlayerController::GetChatColor ( unsigned char Channel, unsigned long bSameTeam, int* ChatColorIdx )
{
	static UFunction* pFnGetChatColor = NULL;

	if ( ! pFnGetChatColor )
		pFnGetChatColor = (UFunction*) UObject::GObjObjects()->Data[ 76630 ];

	ATrPlayerController_execGetChatColor_Parms GetChatColor_Parms;
	GetChatColor_Parms.Channel = Channel;
	GetChatColor_Parms.bSameTeam = bSameTeam;

	this->ProcessEvent ( pFnGetChatColor, &GetChatColor_Parms, NULL );

	if ( ChatColorIdx )
		*ChatColorIdx = GetChatColor_Parms.ChatColorIdx;

	return GetChatColor_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.SendPrivateChatMessage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::SendPrivateChatMessage ( struct FString PlayerName, struct FString Message )
{
	static UFunction* pFnSendPrivateChatMessage = NULL;

	if ( ! pFnSendPrivateChatMessage )
		pFnSendPrivateChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 58492 ];

	ATrPlayerController_execSendPrivateChatMessage_Parms SendPrivateChatMessage_Parms;
	memcpy ( &SendPrivateChatMessage_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &SendPrivateChatMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSendPrivateChatMessage, &SendPrivateChatMessage_Parms, NULL );

	return SendPrivateChatMessage_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.BroadcastChatMessage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Channel                        ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::BroadcastChatMessage ( unsigned char Channel, struct FString Message )
{
	static UFunction* pFnBroadcastChatMessage = NULL;

	if ( ! pFnBroadcastChatMessage )
		pFnBroadcastChatMessage = (UFunction*) UObject::GObjObjects()->Data[ 59483 ];

	ATrPlayerController_execBroadcastChatMessage_Parms BroadcastChatMessage_Parms;
	BroadcastChatMessage_Parms.Channel = Channel;
	memcpy ( &BroadcastChatMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnBroadcastChatMessage, &BroadcastChatMessage_Parms, NULL );

	return BroadcastChatMessage_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ShowFeedbackMessage
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::eventShowFeedbackMessage ( struct FString Message )
{
	static UFunction* pFnShowFeedbackMessage = NULL;

	if ( ! pFnShowFeedbackMessage )
		pFnShowFeedbackMessage = (UFunction*) UObject::GObjObjects()->Data[ 76619 ];

	ATrPlayerController_eventShowFeedbackMessage_Parms ShowFeedbackMessage_Parms;
	memcpy ( &ShowFeedbackMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnShowFeedbackMessage, &ShowFeedbackMessage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.IsPlayerCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::IsPlayerCommand ( struct FString msg )
{
	static UFunction* pFnIsPlayerCommand = NULL;

	if ( ! pFnIsPlayerCommand )
		pFnIsPlayerCommand = (UFunction*) UObject::GObjObjects()->Data[ 76615 ];

	ATrPlayerController_execIsPlayerCommand_Parms IsPlayerCommand_Parms;
	memcpy ( &IsPlayerCommand_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnIsPlayerCommand, &IsPlayerCommand_Parms, NULL );

	return IsPlayerCommand_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.Say
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::Say ( struct FString msg )
{
	static UFunction* pFnSay = NULL;

	if ( ! pFnSay )
		pFnSay = (UFunction*) UObject::GObjObjects()->Data[ 76613 ];

	ATrPlayerController_execSay_Parms Say_Parms;
	memcpy ( &Say_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnSay, &Say_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TalkVGS
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::TalkVGS ( struct FString Command )
{
	static UFunction* pFnTalkVGS = NULL;

	if ( ! pFnTalkVGS )
		pFnTalkVGS = (UFunction*) UObject::GObjObjects()->Data[ 76609 ];

	ATrPlayerController_execTalkVGS_Parms TalkVGS_Parms;
	memcpy ( &TalkVGS_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnTalkVGS, &TalkVGS_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ChooseDiamondSword
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::ChooseDiamondSword ( )
{
	static UFunction* pFnChooseDiamondSword = NULL;

	if ( ! pFnChooseDiamondSword )
		pFnChooseDiamondSword = (UFunction*) UObject::GObjObjects()->Data[ 64827 ];

	ATrPlayerController_execChooseDiamondSword_Parms ChooseDiamondSword_Parms;

	this->ProcessEvent ( pFnChooseDiamondSword, &ChooseDiamondSword_Parms, NULL );

	return ChooseDiamondSword_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ChooseBloodEagle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::ChooseBloodEagle ( )
{
	static UFunction* pFnChooseBloodEagle = NULL;

	if ( ! pFnChooseBloodEagle )
		pFnChooseBloodEagle = (UFunction*) UObject::GObjObjects()->Data[ 64824 ];

	ATrPlayerController_execChooseBloodEagle_Parms ChooseBloodEagle_Parms;

	this->ProcessEvent ( pFnChooseBloodEagle, &ChooseBloodEagle_Parms, NULL );

	return ChooseBloodEagle_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.AllowHelpTextToDisplay
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::AllowHelpTextToDisplay ( )
{
	static UFunction* pFnAllowHelpTextToDisplay = NULL;

	if ( ! pFnAllowHelpTextToDisplay )
		pFnAllowHelpTextToDisplay = (UFunction*) UObject::GObjObjects()->Data[ 69570 ];

	ATrPlayerController_execAllowHelpTextToDisplay_Parms AllowHelpTextToDisplay_Parms;

	this->ProcessEvent ( pFnAllowHelpTextToDisplay, &AllowHelpTextToDisplay_Parms, NULL );

	return AllowHelpTextToDisplay_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.SuppressHelpText
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::SuppressHelpText ( )
{
	static UFunction* pFnSuppressHelpText = NULL;

	if ( ! pFnSuppressHelpText )
		pFnSuppressHelpText = (UFunction*) UObject::GObjObjects()->Data[ 76607 ];

	ATrPlayerController_execSuppressHelpText_Parms SuppressHelpText_Parms;

	this->ProcessEvent ( pFnSuppressHelpText, &SuppressHelpText_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ResetSoundMode
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::ResetSoundMode ( )
{
	static UFunction* pFnResetSoundMode = NULL;

	if ( ! pFnResetSoundMode )
		pFnResetSoundMode = (UFunction*) UObject::GObjObjects()->Data[ 76605 ];

	ATrPlayerController_execResetSoundMode_Parms ResetSoundMode_Parms;

	this->ProcessEvent ( pFnResetSoundMode, &ResetSoundMode_Parms, NULL );
};

// Function TribesGame.TrPlayerController.MatchEndSoundMode
// [0x00020100] 
// Parameters infos:

void ATrPlayerController::MatchEndSoundMode ( )
{
	static UFunction* pFnMatchEndSoundMode = NULL;

	if ( ! pFnMatchEndSoundMode )
		pFnMatchEndSoundMode = (UFunction*) UObject::GObjObjects()->Data[ 76604 ];

	ATrPlayerController_execMatchEndSoundMode_Parms MatchEndSoundMode_Parms;

	this->ProcessEvent ( pFnMatchEndSoundMode, &MatchEndSoundMode_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AcknowledgePossession
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrPlayerController::AcknowledgePossession ( class APawn* P )
{
	static UFunction* pFnAcknowledgePossession = NULL;

	if ( ! pFnAcknowledgePossession )
		pFnAcknowledgePossession = (UFunction*) UObject::GObjObjects()->Data[ 76594 ];

	ATrPlayerController_execAcknowledgePossession_Parms AcknowledgePossession_Parms;
	AcknowledgePossession_Parms.P = P;

	this->ProcessEvent ( pFnAcknowledgePossession, &AcknowledgePossession_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AddTimePlayed
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::AddTimePlayed ( )
{
	static UFunction* pFnAddTimePlayed = NULL;

	if ( ! pFnAddTimePlayed )
		pFnAddTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 76587 ];

	ATrPlayerController_execAddTimePlayed_Parms AddTimePlayed_Parms;

	this->ProcessEvent ( pFnAddTimePlayed, &AddTimePlayed_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PulseShield
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::PulseShield ( )
{
	static UFunction* pFnPulseShield = NULL;

	if ( ! pFnPulseShield )
		pFnPulseShield = (UFunction*) UObject::GObjObjects()->Data[ 76586 ];

	ATrPlayerController_execPulseShield_Parms PulseShield_Parms;

	this->ProcessEvent ( pFnPulseShield, &PulseShield_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPulseHUD
// [0x01020142] 
// Parameters infos:
// unsigned char                  Reason                         ( CPF_Parm )

void ATrPlayerController::ClientPulseHUD ( unsigned char Reason )
{
	static UFunction* pFnClientPulseHUD = NULL;

	if ( ! pFnClientPulseHUD )
		pFnClientPulseHUD = (UFunction*) UObject::GObjObjects()->Data[ 76582 ];

	ATrPlayerController_execClientPulseHUD_Parms ClientPulseHUD_Parms;
	ClientPulseHUD_Parms.Reason = Reason;

	this->ProcessEvent ( pFnClientPulseHUD, &ClientPulseHUD_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SpeedCamEffect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::SpeedCamEffect ( unsigned long bEnabled )
{
	static UFunction* pFnSpeedCamEffect = NULL;

	if ( ! pFnSpeedCamEffect )
		pFnSpeedCamEffect = (UFunction*) UObject::GObjObjects()->Data[ 76580 ];

	ATrPlayerController_execSpeedCamEffect_Parms SpeedCamEffect_Parms;
	SpeedCamEffect_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSpeedCamEffect, &SpeedCamEffect_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateSpeedCameraEffect
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::UpdateSpeedCameraEffect ( unsigned long bEnabled )
{
	static UFunction* pFnUpdateSpeedCameraEffect = NULL;

	if ( ! pFnUpdateSpeedCameraEffect )
		pFnUpdateSpeedCameraEffect = (UFunction*) UObject::GObjObjects()->Data[ 76578 ];

	ATrPlayerController_execUpdateSpeedCameraEffect_Parms UpdateSpeedCameraEffect_Parms;
	UpdateSpeedCameraEffect_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnUpdateSpeedCameraEffect, &UpdateSpeedCameraEffect_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientPlayForceFeedbackWaveform
// [0x010249C2] ( FUNC_Event )
// Parameters infos:
// class UForceFeedbackWaveform*  FFWaveform                     ( CPF_Parm )
// class AActor*                  FFWaveformInstigator           ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::eventClientPlayForceFeedbackWaveform ( class UForceFeedbackWaveform* FFWaveform, class AActor* FFWaveformInstigator )
{
	static UFunction* pFnClientPlayForceFeedbackWaveform = NULL;

	if ( ! pFnClientPlayForceFeedbackWaveform )
		pFnClientPlayForceFeedbackWaveform = (UFunction*) UObject::GObjObjects()->Data[ 76575 ];

	ATrPlayerController_eventClientPlayForceFeedbackWaveform_Parms ClientPlayForceFeedbackWaveform_Parms;
	ClientPlayForceFeedbackWaveform_Parms.FFWaveform = FFWaveform;
	ClientPlayForceFeedbackWaveform_Parms.FFWaveformInstigator = FFWaveformInstigator;

	this->ProcessEvent ( pFnClientPlayForceFeedbackWaveform, &ClientPlayForceFeedbackWaveform_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayCameraShake
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FName                   ShakeName                      ( CPF_OptionalParm | CPF_Parm )
// float                          Scale                          ( CPF_OptionalParm | CPF_Parm )
// class UCameraShake*            SourceShake                    ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::PlayCameraShake ( struct FName ShakeName, float Scale, class UCameraShake* SourceShake )
{
	static UFunction* pFnPlayCameraShake = NULL;

	if ( ! pFnPlayCameraShake )
		pFnPlayCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 76570 ];

	ATrPlayerController_execPlayCameraShake_Parms PlayCameraShake_Parms;
	memcpy ( &PlayCameraShake_Parms.ShakeName, &ShakeName, 0x8 );
	PlayCameraShake_Parms.Scale = Scale;
	PlayCameraShake_Parms.SourceShake = SourceShake;

	this->ProcessEvent ( pFnPlayCameraShake, &PlayCameraShake_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SetViewTargetAsOverwatch
// [0x00024102] 
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::SetViewTargetAsOverwatch ( unsigned long bForce )
{
	static UFunction* pFnSetViewTargetAsOverwatch = NULL;

	if ( ! pFnSetViewTargetAsOverwatch )
		pFnSetViewTargetAsOverwatch = (UFunction*) UObject::GObjObjects()->Data[ 76567 ];

	ATrPlayerController_execSetViewTargetAsOverwatch_Parms SetViewTargetAsOverwatch_Parms;
	SetViewTargetAsOverwatch_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetViewTargetAsOverwatch, &SetViewTargetAsOverwatch_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DeactivateFreeCam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::DeactivateFreeCam ( )
{
	static UFunction* pFnDeactivateFreeCam = NULL;

	if ( ! pFnDeactivateFreeCam )
		pFnDeactivateFreeCam = (UFunction*) UObject::GObjObjects()->Data[ 76566 ];

	ATrPlayerController_execDeactivateFreeCam_Parms DeactivateFreeCam_Parms;

	this->ProcessEvent ( pFnDeactivateFreeCam, &DeactivateFreeCam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ActivateFreeCam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ActivateFreeCam ( )
{
	static UFunction* pFnActivateFreeCam = NULL;

	if ( ! pFnActivateFreeCam )
		pFnActivateFreeCam = (UFunction*) UObject::GObjObjects()->Data[ 76565 ];

	ATrPlayerController_execActivateFreeCam_Parms ActivateFreeCam_Parms;

	this->ProcessEvent ( pFnActivateFreeCam, &ActivateFreeCam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetPlayerViewPoint
// [0x00C20902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 POVLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                POVRotation                    ( CPF_Parm | CPF_OutParm )

void ATrPlayerController::eventGetPlayerViewPoint ( struct FVector* POVLocation, struct FRotator* POVRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 76557 ];

	ATrPlayerController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( POVLocation )
		memcpy ( POVLocation, &GetPlayerViewPoint_Parms.POVLocation, 0xC );

	if ( POVRotation )
		memcpy ( POVRotation, &GetPlayerViewPoint_Parms.POVRotation, 0xC );
};

// Function TribesGame.TrPlayerController.ServerDropFlag
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerDropFlag ( )
{
	static UFunction* pFnServerDropFlag = NULL;

	if ( ! pFnServerDropFlag )
		pFnServerDropFlag = (UFunction*) UObject::GObjObjects()->Data[ 76556 ];

	ATrPlayerController_execServerDropFlag_Parms ServerDropFlag_Parms;

	this->ProcessEvent ( pFnServerDropFlag, &ServerDropFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientGameEnded
// [0x010241C2] 
// Parameters infos:
// class AActor*                  EndGameFocus                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsWinner                      ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ClientGameEnded ( class AActor* EndGameFocus, unsigned long bIsWinner )
{
	static UFunction* pFnClientGameEnded = NULL;

	if ( ! pFnClientGameEnded )
		pFnClientGameEnded = (UFunction*) UObject::GObjObjects()->Data[ 76553 ];

	ATrPlayerController_execClientGameEnded_Parms ClientGameEnded_Parms;
	ClientGameEnded_Parms.EndGameFocus = EndGameFocus;
	ClientGameEnded_Parms.bIsWinner = bIsWinner;

	this->ProcessEvent ( pFnClientGameEnded, &ClientGameEnded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CheckJumpOrDuck
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CheckJumpOrDuck ( )
{
	static UFunction* pFnCheckJumpOrDuck = NULL;

	if ( ! pFnCheckJumpOrDuck )
		pFnCheckJumpOrDuck = (UFunction*) UObject::GObjObjects()->Data[ 76552 ];

	ATrPlayerController_execCheckJumpOrDuck_Parms CheckJumpOrDuck_Parms;

	this->ProcessEvent ( pFnCheckJumpOrDuck, &CheckJumpOrDuck_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GameHasEnded
// [0x00024002] 
// Parameters infos:
// class AActor*                  EndGameFocus                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bIsWinner                      ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::GameHasEnded ( class AActor* EndGameFocus, unsigned long bIsWinner )
{
	static UFunction* pFnGameHasEnded = NULL;

	if ( ! pFnGameHasEnded )
		pFnGameHasEnded = (UFunction*) UObject::GObjObjects()->Data[ 76531 ];

	ATrPlayerController_execGameHasEnded_Parms GameHasEnded_Parms;
	GameHasEnded_Parms.EndGameFocus = EndGameFocus;
	GameHasEnded_Parms.bIsWinner = bIsWinner;

	this->ProcessEvent ( pFnGameHasEnded, &GameHasEnded_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateClientSpawnTimer
// [0x010201C0] 
// Parameters infos:

void ATrPlayerController::UpdateClientSpawnTimer ( )
{
	static UFunction* pFnUpdateClientSpawnTimer = NULL;

	if ( ! pFnUpdateClientSpawnTimer )
		pFnUpdateClientSpawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 76530 ];

	ATrPlayerController_execUpdateClientSpawnTimer_Parms UpdateClientSpawnTimer_Parms;

	this->ProcessEvent ( pFnUpdateClientSpawnTimer, &UpdateClientSpawnTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientRestart
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )

void ATrPlayerController::ClientRestart ( class APawn* NewPawn )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 76527 ];

	ATrPlayerController_execClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TrClientMusicEvent
// [0x01020142] 
// Parameters infos:
// int                            EventIndex                     ( CPF_Parm )

void ATrPlayerController::TrClientMusicEvent ( int EventIndex )
{
	static UFunction* pFnTrClientMusicEvent = NULL;

	if ( ! pFnTrClientMusicEvent )
		pFnTrClientMusicEvent = (UFunction*) UObject::GObjObjects()->Data[ 76525 ];

	ATrPlayerController_execTrClientMusicEvent_Parms TrClientMusicEvent_Parms;
	TrClientMusicEvent_Parms.EventIndex = EventIndex;

	this->ProcessEvent ( pFnTrClientMusicEvent, &TrClientMusicEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerController.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 76522 ];

	ATrPlayerController_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReceiveLocalizedNagMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:
// class UClass*                  Message                        ( CPF_Parm )
// int                            Switch                         ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::eventReceiveLocalizedNagMessage ( class UClass* Message, int Switch, float Time )
{
	static UFunction* pFnReceiveLocalizedNagMessage = NULL;

	if ( ! pFnReceiveLocalizedNagMessage )
		pFnReceiveLocalizedNagMessage = (UFunction*) UObject::GObjObjects()->Data[ 76518 ];

	ATrPlayerController_eventReceiveLocalizedNagMessage_Parms ReceiveLocalizedNagMessage_Parms;
	ReceiveLocalizedNagMessage_Parms.Message = Message;
	ReceiveLocalizedNagMessage_Parms.Switch = Switch;
	ReceiveLocalizedNagMessage_Parms.Time = Time;

	this->ProcessEvent ( pFnReceiveLocalizedNagMessage, &ReceiveLocalizedNagMessage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReceiveLocalizedMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:
// class UClass*                  Message                        ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::eventReceiveLocalizedMessage ( class UClass* Message, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnReceiveLocalizedMessage = NULL;

	if ( ! pFnReceiveLocalizedMessage )
		pFnReceiveLocalizedMessage = (UFunction*) UObject::GObjObjects()->Data[ 76512 ];

	ATrPlayerController_eventReceiveLocalizedMessage_Parms ReceiveLocalizedMessage_Parms;
	ReceiveLocalizedMessage_Parms.Message = Message;
	ReceiveLocalizedMessage_Parms.Switch = Switch;
	ReceiveLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	ReceiveLocalizedMessage_Parms.RelatedPRI01 = RelatedPRI01;
	ReceiveLocalizedMessage_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnReceiveLocalizedMessage, &ReceiveLocalizedMessage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSetZoom
// [0x002200C2] 
// Parameters infos:
// unsigned char                  NewZoomState                   ( CPF_Parm )

void ATrPlayerController::ServerSetZoom ( unsigned char NewZoomState )
{
	static UFunction* pFnServerSetZoom = NULL;

	if ( ! pFnServerSetZoom )
		pFnServerSetZoom = (UFunction*) UObject::GObjObjects()->Data[ 76510 ];

	ATrPlayerController_execServerSetZoom_Parms ServerSetZoom_Parms;
	ServerSetZoom_Parms.NewZoomState = NewZoomState;

	this->ProcessEvent ( pFnServerSetZoom, &ServerSetZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ResetZoomDuration
// [0x00024102] 
// Parameters infos:
// unsigned long                  bPlayRechargeSoundOnWeapon     ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ResetZoomDuration ( unsigned long bPlayRechargeSoundOnWeapon )
{
	static UFunction* pFnResetZoomDuration = NULL;

	if ( ! pFnResetZoomDuration )
		pFnResetZoomDuration = (UFunction*) UObject::GObjObjects()->Data[ 76507 ];

	ATrPlayerController_execResetZoomDuration_Parms ResetZoomDuration_Parms;
	ResetZoomDuration_Parms.bPlayRechargeSoundOnWeapon = bPlayRechargeSoundOnWeapon;

	this->ProcessEvent ( pFnResetZoomDuration, &ResetZoomDuration_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TrEndZoom
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::TrEndZoom ( )
{
	static UFunction* pFnTrEndZoom = NULL;

	if ( ! pFnTrEndZoom )
		pFnTrEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 76502 ];

	ATrPlayerController_execTrEndZoom_Parms TrEndZoom_Parms;

	this->ProcessEvent ( pFnTrEndZoom, &TrEndZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TrStopZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::TrStopZoom ( )
{
	static UFunction* pFnTrStopZoom = NULL;

	if ( ! pFnTrStopZoom )
		pFnTrStopZoom = (UFunction*) UObject::GObjObjects()->Data[ 76501 ];

	ATrPlayerController_execTrStopZoom_Parms TrStopZoom_Parms;

	this->ProcessEvent ( pFnTrStopZoom, &TrStopZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TrStartZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::TrStartZoom ( )
{
	static UFunction* pFnTrStartZoom = NULL;

	if ( ! pFnTrStartZoom )
		pFnTrStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 76494 ];

	ATrPlayerController_execTrStartZoom_Parms TrStartZoom_Parms;

	this->ProcessEvent ( pFnTrStartZoom, &TrStartZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CheckZoomButton
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CheckZoomButton ( )
{
	static UFunction* pFnCheckZoomButton = NULL;

	if ( ! pFnCheckZoomButton )
		pFnCheckZoomButton = (UFunction*) UObject::GObjObjects()->Data[ 76493 ];

	ATrPlayerController_execCheckZoomButton_Parms CheckZoomButton_Parms;

	this->ProcessEvent ( pFnCheckZoomButton, &CheckZoomButton_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReleaseZoom
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::ReleaseZoom ( )
{
	static UFunction* pFnReleaseZoom = NULL;

	if ( ! pFnReleaseZoom )
		pFnReleaseZoom = (UFunction*) UObject::GObjObjects()->Data[ 76492 ];

	ATrPlayerController_execReleaseZoom_Parms ReleaseZoom_Parms;

	this->ProcessEvent ( pFnReleaseZoom, &ReleaseZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DemagnifyZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::DemagnifyZoom ( )
{
	static UFunction* pFnDemagnifyZoom = NULL;

	if ( ! pFnDemagnifyZoom )
		pFnDemagnifyZoom = (UFunction*) UObject::GObjObjects()->Data[ 76489 ];

	ATrPlayerController_execDemagnifyZoom_Parms DemagnifyZoom_Parms;

	this->ProcessEvent ( pFnDemagnifyZoom, &DemagnifyZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.MagnifyZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::MagnifyZoom ( )
{
	static UFunction* pFnMagnifyZoom = NULL;

	if ( ! pFnMagnifyZoom )
		pFnMagnifyZoom = (UFunction*) UObject::GObjObjects()->Data[ 76486 ];

	ATrPlayerController_execMagnifyZoom_Parms MagnifyZoom_Parms;

	this->ProcessEvent ( pFnMagnifyZoom, &MagnifyZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReleasedZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ReleasedZoom ( )
{
	static UFunction* pFnReleasedZoom = NULL;

	if ( ! pFnReleasedZoom )
		pFnReleasedZoom = (UFunction*) UObject::GObjObjects()->Data[ 76485 ];

	ATrPlayerController_execReleasedZoom_Parms ReleasedZoom_Parms;

	this->ProcessEvent ( pFnReleasedZoom, &ReleasedZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedZoom
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedZoom ( )
{
	static UFunction* pFnPressedZoom = NULL;

	if ( ! pFnPressedZoom )
		pFnPressedZoom = (UFunction*) UObject::GObjObjects()->Data[ 76484 ];

	ATrPlayerController_execPressedZoom_Parms PressedZoom_Parms;

	this->ProcessEvent ( pFnPressedZoom, &PressedZoom_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetZoomedState
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrPlayerController::eventGetZoomedState ( )
{
	static UFunction* pFnGetZoomedState = NULL;

	if ( ! pFnGetZoomedState )
		pFnGetZoomedState = (UFunction*) UObject::GObjObjects()->Data[ 53448 ];

	ATrPlayerController_eventGetZoomedState_Parms GetZoomedState_Parms;

	this->ProcessEvent ( pFnGetZoomedState, &GetZoomedState_Parms, NULL );

	return GetZoomedState_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.PerformedUseAction
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::PerformedUseAction ( )
{
	static UFunction* pFnPerformedUseAction = NULL;

	if ( ! pFnPerformedUseAction )
		pFnPerformedUseAction = (UFunction*) UObject::GObjObjects()->Data[ 76482 ];

	ATrPlayerController_execPerformedUseAction_Parms PerformedUseAction_Parms;

	this->ProcessEvent ( pFnPerformedUseAction, &PerformedUseAction_Parms, NULL );

	return PerformedUseAction_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerRequestSpawnVehicle
// [0x002200C2] 
// Parameters infos:
// class UClass*                  VehicleClass                   ( CPF_Parm )

void ATrPlayerController::ServerRequestSpawnVehicle ( class UClass* VehicleClass )
{
	static UFunction* pFnServerRequestSpawnVehicle = NULL;

	if ( ! pFnServerRequestSpawnVehicle )
		pFnServerRequestSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76476 ];

	ATrPlayerController_execServerRequestSpawnVehicle_Parms ServerRequestSpawnVehicle_Parms;
	ServerRequestSpawnVehicle_Parms.VehicleClass = VehicleClass;

	this->ProcessEvent ( pFnServerRequestSpawnVehicle, &ServerRequestSpawnVehicle_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientRestoreMoveInput
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::ClientRestoreMoveInput ( )
{
	static UFunction* pFnClientRestoreMoveInput = NULL;

	if ( ! pFnClientRestoreMoveInput )
		pFnClientRestoreMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 76475 ];

	ATrPlayerController_execClientRestoreMoveInput_Parms ClientRestoreMoveInput_Parms;

	this->ProcessEvent ( pFnClientRestoreMoveInput, &ClientRestoreMoveInput_Parms, NULL );
};

// Function TribesGame.TrPlayerController.RestoreMoveInput
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::RestoreMoveInput ( )
{
	static UFunction* pFnRestoreMoveInput = NULL;

	if ( ! pFnRestoreMoveInput )
		pFnRestoreMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 76474 ];

	ATrPlayerController_execRestoreMoveInput_Parms RestoreMoveInput_Parms;

	this->ProcessEvent ( pFnRestoreMoveInput, &RestoreMoveInput_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateKickbackDirection
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPlayerController::eventUpdateKickbackDirection ( float DeltaTime )
{
	static UFunction* pFnUpdateKickbackDirection = NULL;

	if ( ! pFnUpdateKickbackDirection )
		pFnUpdateKickbackDirection = (UFunction*) UObject::GObjObjects()->Data[ 76472 ];

	ATrPlayerController_eventUpdateKickbackDirection_Parms UpdateKickbackDirection_Parms;
	UpdateKickbackDirection_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateKickbackDirection, &UpdateKickbackDirection_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnKickback
// [0x00020102] 
// Parameters infos:
// struct FRotator                KickbackAim                    ( CPF_Parm )
// float                          KickbackBlendOutTime           ( CPF_Parm )

void ATrPlayerController::OnKickback ( struct FRotator KickbackAim, float KickbackBlendOutTime )
{
	static UFunction* pFnOnKickback = NULL;

	if ( ! pFnOnKickback )
		pFnOnKickback = (UFunction*) UObject::GObjObjects()->Data[ 76469 ];

	ATrPlayerController_execOnKickback_Parms OnKickback_Parms;
	memcpy ( &OnKickback_Parms.KickbackAim, &KickbackAim, 0xC );
	OnKickback_Parms.KickbackBlendOutTime = KickbackBlendOutTime;

	this->ProcessEvent ( pFnOnKickback, &OnKickback_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SwitchHud
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::SwitchHud ( )
{
	static UFunction* pFnSwitchHud = NULL;

	if ( ! pFnSwitchHud )
		pFnSwitchHud = (UFunction*) UObject::GObjObjects()->Data[ 76467 ];

	ATrPlayerController_execSwitchHud_Parms SwitchHud_Parms;

	this->ProcessEvent ( pFnSwitchHud, &SwitchHud_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSetHUD
// [0x010201C2] 
// Parameters infos:
// class UClass*                  newHUDType                     ( CPF_Parm )

void ATrPlayerController::ClientSetHUD ( class UClass* newHUDType )
{
	static UFunction* pFnClientSetHUD = NULL;

	if ( ! pFnClientSetHUD )
		pFnClientSetHUD = (UFunction*) UObject::GObjObjects()->Data[ 76464 ];

	ATrPlayerController_execClientSetHUD_Parms ClientSetHUD_Parms;
	ClientSetHUD_Parms.newHUDType = newHUDType;

	this->ProcessEvent ( pFnClientSetHUD, &ClientSetHUD_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerStopSki
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerStopSki ( )
{
	static UFunction* pFnServerStopSki = NULL;

	if ( ! pFnServerStopSki )
		pFnServerStopSki = (UFunction*) UObject::GObjObjects()->Data[ 76462 ];

	ATrPlayerController_execServerStopSki_Parms ServerStopSki_Parms;

	this->ProcessEvent ( pFnServerStopSki, &ServerStopSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerStartSki
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bJump                          ( CPF_Parm )

void ATrPlayerController::ServerStartSki ( unsigned long bJump )
{
	static UFunction* pFnServerStartSki = NULL;

	if ( ! pFnServerStartSki )
		pFnServerStartSki = (UFunction*) UObject::GObjObjects()->Data[ 76459 ];

	ATrPlayerController_execServerStartSki_Parms ServerStartSki_Parms;
	ServerStartSki_Parms.bJump = bJump;

	this->ProcessEvent ( pFnServerStartSki, &ServerStartSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ToggleShowObjectMarkers
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ToggleShowObjectMarkers ( )
{
	static UFunction* pFnToggleShowObjectMarkers = NULL;

	if ( ! pFnToggleShowObjectMarkers )
		pFnToggleShowObjectMarkers = (UFunction*) UObject::GObjObjects()->Data[ 76457 ];

	ATrPlayerController_execToggleShowObjectMarkers_Parms ToggleShowObjectMarkers_Parms;

	this->ProcessEvent ( pFnToggleShowObjectMarkers, &ToggleShowObjectMarkers_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SetBindSkiJet
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            method                         ( CPF_Parm )

void ATrPlayerController::SetBindSkiJet ( int method )
{
	static UFunction* pFnSetBindSkiJet = NULL;

	if ( ! pFnSetBindSkiJet )
		pFnSetBindSkiJet = (UFunction*) UObject::GObjObjects()->Data[ 76455 ];

	ATrPlayerController_execSetBindSkiJet_Parms SetBindSkiJet_Parms;
	SetBindSkiJet_Parms.method = method;

	this->ProcessEvent ( pFnSetBindSkiJet, &SetBindSkiJet_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DelayReleasedSki
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::DelayReleasedSki ( )
{
	static UFunction* pFnDelayReleasedSki = NULL;

	if ( ! pFnDelayReleasedSki )
		pFnDelayReleasedSki = (UFunction*) UObject::GObjObjects()->Data[ 76454 ];

	ATrPlayerController_execDelayReleasedSki_Parms DelayReleasedSki_Parms;

	this->ProcessEvent ( pFnDelayReleasedSki, &DelayReleasedSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ToggleSki
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ToggleSki ( )
{
	static UFunction* pFnToggleSki = NULL;

	if ( ! pFnToggleSki )
		pFnToggleSki = (UFunction*) UObject::GObjObjects()->Data[ 76452 ];

	ATrPlayerController_execToggleSki_Parms ToggleSki_Parms;

	this->ProcessEvent ( pFnToggleSki, &ToggleSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReleasedSki
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ReleasedSki ( )
{
	static UFunction* pFnReleasedSki = NULL;

	if ( ! pFnReleasedSki )
		pFnReleasedSki = (UFunction*) UObject::GObjObjects()->Data[ 76449 ];

	ATrPlayerController_execReleasedSki_Parms ReleasedSki_Parms;

	this->ProcessEvent ( pFnReleasedSki, &ReleasedSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedSki
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bJump                          ( CPF_Parm )

void ATrPlayerController::PressedSki ( unsigned long bJump )
{
	static UFunction* pFnPressedSki = NULL;

	if ( ! pFnPressedSki )
		pFnPressedSki = (UFunction*) UObject::GObjObjects()->Data[ 76445 ];

	ATrPlayerController_execPressedSki_Parms PressedSki_Parms;
	PressedSki_Parms.bJump = bJump;

	this->ProcessEvent ( pFnPressedSki, &PressedSki_Parms, NULL );
};

// Function TribesGame.TrPlayerController.RequestBuyVehicle
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 vehicleClassStr                ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::eventRequestBuyVehicle ( struct FString vehicleClassStr )
{
	static UFunction* pFnRequestBuyVehicle = NULL;

	if ( ! pFnRequestBuyVehicle )
		pFnRequestBuyVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76441 ];

	ATrPlayerController_eventRequestBuyVehicle_Parms RequestBuyVehicle_Parms;
	memcpy ( &RequestBuyVehicle_Parms.vehicleClassStr, &vehicleClassStr, 0xC );

	this->ProcessEvent ( pFnRequestBuyVehicle, &RequestBuyVehicle_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SpawnVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 vehicleClassStr                ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::SpawnVehicle ( struct FString vehicleClassStr )
{
	static UFunction* pFnSpawnVehicle = NULL;

	if ( ! pFnSpawnVehicle )
		pFnSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76439 ];

	ATrPlayerController_execSpawnVehicle_Parms SpawnVehicle_Parms;
	memcpy ( &SpawnVehicle_Parms.vehicleClassStr, &vehicleClassStr, 0xC );

	this->ProcessEvent ( pFnSpawnVehicle, &SpawnVehicle_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdatePaperDoll_Device
// [0x00820002] 
// Parameters infos:
// class UClass*                  DeviceClass                    ( CPF_Parm )

void ATrPlayerController::UpdatePaperDoll_Device ( class UClass* DeviceClass )
{
	static UFunction* pFnUpdatePaperDoll_Device = NULL;

	if ( ! pFnUpdatePaperDoll_Device )
		pFnUpdatePaperDoll_Device = (UFunction*) UObject::GObjObjects()->Data[ 76435 ];

	ATrPlayerController_execUpdatePaperDoll_Device_Parms UpdatePaperDoll_Device_Parms;
	UpdatePaperDoll_Device_Parms.DeviceClass = DeviceClass;

	this->ProcessEvent ( pFnUpdatePaperDoll_Device, &UpdatePaperDoll_Device_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdatePaperDoll
// [0x00824002] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// class UClass*                  DeviceClass                    ( CPF_Parm )
// class UClass*                  skinClass                      ( CPF_OptionalParm | CPF_Parm )
// int                            TeamNum                        ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::UpdatePaperDoll ( class UClass* FamilyInfo, class UClass* DeviceClass, class UClass* skinClass, int TeamNum )
{
	static UFunction* pFnUpdatePaperDoll = NULL;

	if ( ! pFnUpdatePaperDoll )
		pFnUpdatePaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 76427 ];

	ATrPlayerController_execUpdatePaperDoll_Parms UpdatePaperDoll_Parms;
	UpdatePaperDoll_Parms.FamilyInfo = FamilyInfo;
	UpdatePaperDoll_Parms.DeviceClass = DeviceClass;
	UpdatePaperDoll_Parms.skinClass = skinClass;
	UpdatePaperDoll_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnUpdatePaperDoll, &UpdatePaperDoll_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetVehicleCost
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  VehicleClass                   ( CPF_Parm )

int ATrPlayerController::GetVehicleCost ( class UClass* VehicleClass )
{
	static UFunction* pFnGetVehicleCost = NULL;

	if ( ! pFnGetVehicleCost )
		pFnGetVehicleCost = (UFunction*) UObject::GObjObjects()->Data[ 64845 ];

	ATrPlayerController_execGetVehicleCost_Parms GetVehicleCost_Parms;
	GetVehicleCost_Parms.VehicleClass = VehicleClass;

	this->ProcessEvent ( pFnGetVehicleCost, &GetVehicleCost_Parms, NULL );

	return GetVehicleCost_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerRequestLoadoutChange
// [0x002200C2] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

void ATrPlayerController::ServerRequestLoadoutChange ( class UClass* FamilyInfo, int Loadout )
{
	static UFunction* pFnServerRequestLoadoutChange = NULL;

	if ( ! pFnServerRequestLoadoutChange )
		pFnServerRequestLoadoutChange = (UFunction*) UObject::GObjObjects()->Data[ 76410 ];

	ATrPlayerController_execServerRequestLoadoutChange_Parms ServerRequestLoadoutChange_Parms;
	ServerRequestLoadoutChange_Parms.FamilyInfo = FamilyInfo;
	ServerRequestLoadoutChange_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnServerRequestLoadoutChange, &ServerRequestLoadoutChange_Parms, NULL );
};

// Function TribesGame.TrPlayerController.NeedToVisitInventoryStation
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::NeedToVisitInventoryStation ( )
{
	static UFunction* pFnNeedToVisitInventoryStation = NULL;

	if ( ! pFnNeedToVisitInventoryStation )
		pFnNeedToVisitInventoryStation = (UFunction*) UObject::GObjObjects()->Data[ 71212 ];

	ATrPlayerController_execNeedToVisitInventoryStation_Parms NeedToVisitInventoryStation_Parms;

	this->ProcessEvent ( pFnNeedToVisitInventoryStation, &NeedToVisitInventoryStation_Parms, NULL );

	return NeedToVisitInventoryStation_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.TriggerInteracted
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::TriggerInteracted ( )
{
	static UFunction* pFnTriggerInteracted = NULL;

	if ( ! pFnTriggerInteracted )
		pFnTriggerInteracted = (UFunction*) UObject::GObjObjects()->Data[ 76399 ];

	ATrPlayerController_execTriggerInteracted_Parms TriggerInteracted_Parms;

	this->ProcessEvent ( pFnTriggerInteracted, &TriggerInteracted_Parms, NULL );

	return TriggerInteracted_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerSwitchToSeat
// [0x002240C2] 
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )
// class ATrVehicle*              V                              ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ServerSwitchToSeat ( unsigned char T, class ATrVehicle* V )
{
	static UFunction* pFnServerSwitchToSeat = NULL;

	if ( ! pFnServerSwitchToSeat )
		pFnServerSwitchToSeat = (UFunction*) UObject::GObjObjects()->Data[ 76396 ];

	ATrPlayerController_execServerSwitchToSeat_Parms ServerSwitchToSeat_Parms;
	ServerSwitchToSeat_Parms.T = T;
	ServerSwitchToSeat_Parms.V = V;

	this->ProcessEvent ( pFnServerSwitchToSeat, &ServerSwitchToSeat_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SwitchToSeat
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ATrPlayerController::SwitchToSeat ( unsigned char T )
{
	static UFunction* pFnSwitchToSeat = NULL;

	if ( ! pFnSwitchToSeat )
		pFnSwitchToSeat = (UFunction*) UObject::GObjObjects()->Data[ 76394 ];

	ATrPlayerController_execSwitchToSeat_Parms SwitchToSeat_Parms;
	SwitchToSeat_Parms.T = T;

	this->ProcessEvent ( pFnSwitchToSeat, &SwitchToSeat_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestCallInChange
// [0x002200C2] 
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ATrPlayerController::ServerRequestCallInChange ( unsigned char T )
{
	static UFunction* pFnServerRequestCallInChange = NULL;

	if ( ! pFnServerRequestCallInChange )
		pFnServerRequestCallInChange = (UFunction*) UObject::GObjObjects()->Data[ 76391 ];

	ATrPlayerController_execServerRequestCallInChange_Parms ServerRequestCallInChange_Parms;
	ServerRequestCallInChange_Parms.T = T;

	this->ProcessEvent ( pFnServerRequestCallInChange, &ServerRequestCallInChange_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SwitchToCallIn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ATrPlayerController::SwitchToCallIn ( unsigned char T )
{
	static UFunction* pFnSwitchToCallIn = NULL;

	if ( ! pFnSwitchToCallIn )
		pFnSwitchToCallIn = (UFunction*) UObject::GObjObjects()->Data[ 76383 ];

	ATrPlayerController_execSwitchToCallIn_Parms SwitchToCallIn_Parms;
	SwitchToCallIn_Parms.T = T;

	this->ProcessEvent ( pFnSwitchToCallIn, &SwitchToCallIn_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRiding
// [0x00220040] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// int                            View                           ( CPF_Parm )

void ATrPlayerController::ServerRiding ( float TimeStamp, int View )
{
	static UFunction* pFnServerRiding = NULL;

	if ( ! pFnServerRiding )
		pFnServerRiding = (UFunction*) UObject::GObjObjects()->Data[ 76331 ];

	ATrPlayerController_execServerRiding_Parms ServerRiding_Parms;
	ServerRiding_Parms.TimeStamp = TimeStamp;
	ServerRiding_Parms.View = View;

	this->ProcessEvent ( pFnServerRiding, &ServerRiding_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ProcessRiding
// [0x00020000] 
// Parameters infos:
// struct FRotator                ViewRotation                   ( CPF_Parm )

void ATrPlayerController::ProcessRiding ( struct FRotator ViewRotation )
{
	static UFunction* pFnProcessRiding = NULL;

	if ( ! pFnProcessRiding )
		pFnProcessRiding = (UFunction*) UObject::GObjObjects()->Data[ 76329 ];

	ATrPlayerController_execProcessRiding_Parms ProcessRiding_Parms;
	memcpy ( &ProcessRiding_Parms.ViewRotation, &ViewRotation, 0xC );

	this->ProcessEvent ( pFnProcessRiding, &ProcessRiding_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ToggleVehicleJets
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::ToggleVehicleJets ( unsigned long bEnabled )
{
	static UFunction* pFnToggleVehicleJets = NULL;

	if ( ! pFnToggleVehicleJets )
		pFnToggleVehicleJets = (UFunction*) UObject::GObjObjects()->Data[ 76293 ];

	ATrPlayerController_execToggleVehicleJets_Parms ToggleVehicleJets_Parms;
	ToggleVehicleJets_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnToggleVehicleJets, &ToggleVehicleJets_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerToggleVehicleJets
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::ServerToggleVehicleJets ( unsigned long bEnabled )
{
	static UFunction* pFnServerToggleVehicleJets = NULL;

	if ( ! pFnServerToggleVehicleJets )
		pFnServerToggleVehicleJets = (UFunction*) UObject::GObjObjects()->Data[ 76291 ];

	ATrPlayerController_execServerToggleVehicleJets_Parms ServerToggleVehicleJets_Parms;
	ServerToggleVehicleJets_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnServerToggleVehicleJets, &ServerToggleVehicleJets_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerCorrectClientPhys
// [0x01020142] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )

void ATrPlayerController::ServerCorrectClientPhys ( float TimeStamp )
{
	static UFunction* pFnServerCorrectClientPhys = NULL;

	if ( ! pFnServerCorrectClientPhys )
		pFnServerCorrectClientPhys = (UFunction*) UObject::GObjObjects()->Data[ 76287 ];

	ATrPlayerController_execServerCorrectClientPhys_Parms ServerCorrectClientPhys_Parms;
	ServerCorrectClientPhys_Parms.TimeStamp = TimeStamp;

	this->ProcessEvent ( pFnServerCorrectClientPhys, &ServerCorrectClientPhys_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerVerifyVehiclePhys
// [0x00A20042] 
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )
// int                            View                           ( CPF_Parm )
// struct FRigidBodyState         InRBState                      ( CPF_Parm )

void ATrPlayerController::ServerVerifyVehiclePhys ( float TimeStamp, float InForward, float InStrafe, float InUp, int View, struct FRigidBodyState InRBState )
{
	static UFunction* pFnServerVerifyVehiclePhys = NULL;

	if ( ! pFnServerVerifyVehiclePhys )
		pFnServerVerifyVehiclePhys = (UFunction*) UObject::GObjObjects()->Data[ 76276 ];

	ATrPlayerController_execServerVerifyVehiclePhys_Parms ServerVerifyVehiclePhys_Parms;
	ServerVerifyVehiclePhys_Parms.TimeStamp = TimeStamp;
	ServerVerifyVehiclePhys_Parms.InForward = InForward;
	ServerVerifyVehiclePhys_Parms.InStrafe = InStrafe;
	ServerVerifyVehiclePhys_Parms.InUp = InUp;
	ServerVerifyVehiclePhys_Parms.View = View;
	memcpy ( &ServerVerifyVehiclePhys_Parms.InRBState, &InRBState, 0x40 );

	this->ProcessEvent ( pFnServerVerifyVehiclePhys, &ServerVerifyVehiclePhys_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerVehiclePhysUpdated
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class ATrVehicle*              InVehicle                      ( CPF_Parm )

void ATrPlayerController::eventServerVehiclePhysUpdated ( class ATrVehicle* InVehicle )
{
	static UFunction* pFnServerVehiclePhysUpdated = NULL;

	if ( ! pFnServerVehiclePhysUpdated )
		pFnServerVehiclePhysUpdated = (UFunction*) UObject::GObjObjects()->Data[ 76274 ];

	ATrPlayerController_eventServerVehiclePhysUpdated_Parms ServerVehiclePhysUpdated_Parms;
	ServerVehiclePhysUpdated_Parms.InVehicle = InVehicle;

	this->ProcessEvent ( pFnServerVehiclePhysUpdated, &ServerVehiclePhysUpdated_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientVehiclePhysUpdated
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class ATrVehicle*              InVehicle                      ( CPF_Parm )

void ATrPlayerController::eventClientVehiclePhysUpdated ( class ATrVehicle* InVehicle )
{
	static UFunction* pFnClientVehiclePhysUpdated = NULL;

	if ( ! pFnClientVehiclePhysUpdated )
		pFnClientVehiclePhysUpdated = (UFunction*) UObject::GObjObjects()->Data[ 76272 ];

	ATrPlayerController_eventClientVehiclePhysUpdated_Parms ClientVehiclePhysUpdated_Parms;
	ClientVehiclePhysUpdated_Parms.InVehicle = InVehicle;

	this->ProcessEvent ( pFnClientVehiclePhysUpdated, &ClientVehiclePhysUpdated_Parms, NULL );
};

// Function TribesGame.TrPlayerController.IsInVehicle
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsInVehicle ( )
{
	static UFunction* pFnIsInVehicle = NULL;

	if ( ! pFnIsInVehicle )
		pFnIsInVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76270 ];

	ATrPlayerController_execIsInVehicle_Parms IsInVehicle_Parms;

	this->ProcessEvent ( pFnIsInVehicle, &IsInVehicle_Parms, NULL );

	return IsInVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.SetAirVehicleControls
// [0x00020100] 
// Parameters infos:
// unsigned long                  bInvert                        ( CPF_Parm )

void ATrPlayerController::SetAirVehicleControls ( unsigned long bInvert )
{
	static UFunction* pFnSetAirVehicleControls = NULL;

	if ( ! pFnSetAirVehicleControls )
		pFnSetAirVehicleControls = (UFunction*) UObject::GObjObjects()->Data[ 76268 ];

	ATrPlayerController_execSetAirVehicleControls_Parms SetAirVehicleControls_Parms;
	SetAirVehicleControls_Parms.bInvert = bInvert;

	this->ProcessEvent ( pFnSetAirVehicleControls, &SetAirVehicleControls_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSetAirVehicleControls
// [0x002200C0] 
// Parameters infos:
// unsigned long                  bInvert                        ( CPF_Parm )

void ATrPlayerController::ServerSetAirVehicleControls ( unsigned long bInvert )
{
	static UFunction* pFnServerSetAirVehicleControls = NULL;

	if ( ! pFnServerSetAirVehicleControls )
		pFnServerSetAirVehicleControls = (UFunction*) UObject::GObjObjects()->Data[ 76266 ];

	ATrPlayerController_execServerSetAirVehicleControls_Parms ServerSetAirVehicleControls_Parms;
	ServerSetAirVehicleControls_Parms.bInvert = bInvert;

	this->ProcessEvent ( pFnServerSetAirVehicleControls, &ServerSetAirVehicleControls_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetAirVehicleInversion
// [0x010201C2] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::GetAirVehicleInversion ( )
{
	static UFunction* pFnGetAirVehicleInversion = NULL;

	if ( ! pFnGetAirVehicleInversion )
		pFnGetAirVehicleInversion = (UFunction*) UObject::GObjObjects()->Data[ 76264 ];

	ATrPlayerController_execGetAirVehicleInversion_Parms GetAirVehicleInversion_Parms;

	this->ProcessEvent ( pFnGetAirVehicleInversion, &GetAirVehicleInversion_Parms, NULL );

	return GetAirVehicleInversion_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.RefreshHUD
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::RefreshHUD ( )
{
	static UFunction* pFnRefreshHUD = NULL;

	if ( ! pFnRefreshHUD )
		pFnRefreshHUD = (UFunction*) UObject::GObjObjects()->Data[ 76263 ];

	ATrPlayerController_execRefreshHUD_Parms RefreshHUD_Parms;

	this->ProcessEvent ( pFnRefreshHUD, &RefreshHUD_Parms, NULL );
};

// Function TribesGame.TrPlayerController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ATrPlayerController::eventPossess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 76258 ];

	ATrPlayerController_eventPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnCrossedOffArenaList
// [0x00020100] 
// Parameters infos:

void ATrPlayerController::OnCrossedOffArenaList ( )
{
	static UFunction* pFnOnCrossedOffArenaList = NULL;

	if ( ! pFnOnCrossedOffArenaList )
		pFnOnCrossedOffArenaList = (UFunction*) UObject::GObjObjects()->Data[ 76226 ];

	ATrPlayerController_execOnCrossedOffArenaList_Parms OnCrossedOffArenaList_Parms;

	this->ProcessEvent ( pFnOnCrossedOffArenaList, &OnCrossedOffArenaList_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CleanupGameplayEffectsOnDeath
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CleanupGameplayEffectsOnDeath ( )
{
	static UFunction* pFnCleanupGameplayEffectsOnDeath = NULL;

	if ( ! pFnCleanupGameplayEffectsOnDeath )
		pFnCleanupGameplayEffectsOnDeath = (UFunction*) UObject::GObjObjects()->Data[ 76223 ];

	ATrPlayerController_execCleanupGameplayEffectsOnDeath_Parms CleanupGameplayEffectsOnDeath_Parms;

	this->ProcessEvent ( pFnCleanupGameplayEffectsOnDeath, &CleanupGameplayEffectsOnDeath_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayRespawnSoonSound
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::PlayRespawnSoonSound ( )
{
	static UFunction* pFnPlayRespawnSoonSound = NULL;

	if ( ! pFnPlayRespawnSoonSound )
		pFnPlayRespawnSoonSound = (UFunction*) UObject::GObjObjects()->Data[ 76220 ];

	ATrPlayerController_execPlayRespawnSoonSound_Parms PlayRespawnSoonSound_Parms;

	this->ProcessEvent ( pFnPlayRespawnSoonSound, &PlayRespawnSoonSound_Parms, NULL );
};

// Function TribesGame.TrPlayerController.Respawn
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::Respawn ( )
{
	static UFunction* pFnRespawn = NULL;

	if ( ! pFnRespawn )
		pFnRespawn = (UFunction*) UObject::GObjObjects()->Data[ 76219 ];

	ATrPlayerController_execRespawn_Parms Respawn_Parms;

	this->ProcessEvent ( pFnRespawn, &Respawn_Parms, NULL );
};

// Function TribesGame.TrPlayerController.RequestRespawn
// [0x00020100] 
// Parameters infos:

void ATrPlayerController::RequestRespawn ( )
{
	static UFunction* pFnRequestRespawn = NULL;

	if ( ! pFnRequestRespawn )
		pFnRequestRespawn = (UFunction*) UObject::GObjObjects()->Data[ 76218 ];

	ATrPlayerController_execRequestRespawn_Parms RequestRespawn_Parms;

	this->ProcessEvent ( pFnRequestRespawn, &RequestRespawn_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestRespawn
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerRequestRespawn ( )
{
	static UFunction* pFnServerRequestRespawn = NULL;

	if ( ! pFnServerRequestRespawn )
		pFnServerRequestRespawn = (UFunction*) UObject::GObjObjects()->Data[ 76215 ];

	ATrPlayerController_execServerRequestRespawn_Parms ServerRequestRespawn_Parms;

	this->ProcessEvent ( pFnServerRequestRespawn, &ServerRequestRespawn_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateRespawnTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::UpdateRespawnTimer ( )
{
	static UFunction* pFnUpdateRespawnTimer = NULL;

	if ( ! pFnUpdateRespawnTimer )
		pFnUpdateRespawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 76212 ];

	ATrPlayerController_execUpdateRespawnTimer_Parms UpdateRespawnTimer_Parms;

	this->ProcessEvent ( pFnUpdateRespawnTimer, &UpdateRespawnTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InitRespawnTimer
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::InitRespawnTimer ( )
{
	static UFunction* pFnInitRespawnTimer = NULL;

	if ( ! pFnInitRespawnTimer )
		pFnInitRespawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 76211 ];

	ATrPlayerController_execInitRespawnTimer_Parms InitRespawnTimer_Parms;

	this->ProcessEvent ( pFnInitRespawnTimer, &InitRespawnTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetBlinkPackAccel
// [0x00C20102] 
// Parameters infos:
// struct FVector                 newAccel                       ( CPF_Parm | CPF_OutParm )
// float                          BlinkPackPctEffectiveness      ( CPF_Parm | CPF_OutParm )

void ATrPlayerController::GetBlinkPackAccel ( struct FVector* newAccel, float* BlinkPackPctEffectiveness )
{
	static UFunction* pFnGetBlinkPackAccel = NULL;

	if ( ! pFnGetBlinkPackAccel )
		pFnGetBlinkPackAccel = (UFunction*) UObject::GObjObjects()->Data[ 76165 ];

	ATrPlayerController_execGetBlinkPackAccel_Parms GetBlinkPackAccel_Parms;

	this->ProcessEvent ( pFnGetBlinkPackAccel, &GetBlinkPackAccel_Parms, NULL );

	if ( newAccel )
		memcpy ( newAccel, &GetBlinkPackAccel_Parms.newAccel, 0xC );

	if ( BlinkPackPctEffectiveness )
		*BlinkPackPctEffectiveness = GetBlinkPackAccel_Parms.BlinkPackPctEffectiveness;
};

// Function TribesGame.TrPlayerController.PerformBlink
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::PerformBlink ( )
{
	static UFunction* pFnPerformBlink = NULL;

	if ( ! pFnPerformBlink )
		pFnPerformBlink = (UFunction*) UObject::GObjObjects()->Data[ 76164 ];

	ATrPlayerController_execPerformBlink_Parms PerformBlink_Parms;

	this->ProcessEvent ( pFnPerformBlink, &PerformBlink_Parms, NULL );
};

// Function TribesGame.TrPlayerController.DoJump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::DoJump ( )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 76163 ];

	ATrPlayerController_execDoJump_Parms DoJump_Parms;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );
};

// Function TribesGame.TrPlayerController.IgnoreMoveInput
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewMoveInput                  ( CPF_Parm )

void ATrPlayerController::IgnoreMoveInput ( unsigned long bNewMoveInput )
{
	static UFunction* pFnIgnoreMoveInput = NULL;

	if ( ! pFnIgnoreMoveInput )
		pFnIgnoreMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 76161 ];

	ATrPlayerController_execIgnoreMoveInput_Parms IgnoreMoveInput_Parms;
	IgnoreMoveInput_Parms.bNewMoveInput = bNewMoveInput;

	this->ProcessEvent ( pFnIgnoreMoveInput, &IgnoreMoveInput_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EnableJetpack
// [0x00824102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )
// unsigned long                  bJump                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForcedOff                     ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::EnableJetpack ( unsigned long bEnabled, unsigned long bJump, unsigned long bForcedOff )
{
	static UFunction* pFnEnableJetpack = NULL;

	if ( ! pFnEnableJetpack )
		pFnEnableJetpack = (UFunction*) UObject::GObjObjects()->Data[ 76151 ];

	ATrPlayerController_execEnableJetpack_Parms EnableJetpack_Parms;
	EnableJetpack_Parms.bEnabled = bEnabled;
	EnableJetpack_Parms.bJump = bJump;
	EnableJetpack_Parms.bForcedOff = bForcedOff;

	this->ProcessEvent ( pFnEnableJetpack, &EnableJetpack_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ToggleJetpack
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )
// unsigned long                  bJump                          ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ToggleJetpack ( unsigned long bEnabled, unsigned long bJump )
{
	static UFunction* pFnToggleJetpack = NULL;

	if ( ! pFnToggleJetpack )
		pFnToggleJetpack = (UFunction*) UObject::GObjObjects()->Data[ 76148 ];

	ATrPlayerController_execToggleJetpack_Parms ToggleJetpack_Parms;
	ToggleJetpack_Parms.bEnabled = bEnabled;
	ToggleJetpack_Parms.bJump = bJump;

	this->ProcessEvent ( pFnToggleJetpack, &ToggleJetpack_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StopRechargeHealthFX
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StopRechargeHealthFX ( )
{
	static UFunction* pFnStopRechargeHealthFX = NULL;

	if ( ! pFnStopRechargeHealthFX )
		pFnStopRechargeHealthFX = (UFunction*) UObject::GObjObjects()->Data[ 76147 ];

	ATrPlayerController_execStopRechargeHealthFX_Parms StopRechargeHealthFX_Parms;

	this->ProcessEvent ( pFnStopRechargeHealthFX, &StopRechargeHealthFX_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayRechargeHealthFX
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::PlayRechargeHealthFX ( )
{
	static UFunction* pFnPlayRechargeHealthFX = NULL;

	if ( ! pFnPlayRechargeHealthFX )
		pFnPlayRechargeHealthFX = (UFunction*) UObject::GObjObjects()->Data[ 76144 ];

	ATrPlayerController_execPlayRechargeHealthFX_Parms PlayRechargeHealthFX_Parms;

	this->ProcessEvent ( pFnPlayRechargeHealthFX, &PlayRechargeHealthFX_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StopLowHealthFX
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::StopLowHealthFX ( )
{
	static UFunction* pFnStopLowHealthFX = NULL;

	if ( ! pFnStopLowHealthFX )
		pFnStopLowHealthFX = (UFunction*) UObject::GObjObjects()->Data[ 76143 ];

	ATrPlayerController_execStopLowHealthFX_Parms StopLowHealthFX_Parms;

	this->ProcessEvent ( pFnStopLowHealthFX, &StopLowHealthFX_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayLowHealthFX
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::PlayLowHealthFX ( )
{
	static UFunction* pFnPlayLowHealthFX = NULL;

	if ( ! pFnPlayLowHealthFX )
		pFnPlayLowHealthFX = (UFunction*) UObject::GObjObjects()->Data[ 76140 ];

	ATrPlayerController_execPlayLowHealthFX_Parms PlayLowHealthFX_Parms;

	this->ProcessEvent ( pFnPlayLowHealthFX, &PlayLowHealthFX_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PawnLeftWeatherVolume
// [0x00020102] 
// Parameters infos:
// unsigned long                  bDeactivatePawnCentricWeather  ( CPF_Parm )
// class ATrWeatherVolume*        WeatherVolume                  ( CPF_Parm )

void ATrPlayerController::PawnLeftWeatherVolume ( unsigned long bDeactivatePawnCentricWeather, class ATrWeatherVolume* WeatherVolume )
{
	static UFunction* pFnPawnLeftWeatherVolume = NULL;

	if ( ! pFnPawnLeftWeatherVolume )
		pFnPawnLeftWeatherVolume = (UFunction*) UObject::GObjObjects()->Data[ 76137 ];

	ATrPlayerController_execPawnLeftWeatherVolume_Parms PawnLeftWeatherVolume_Parms;
	PawnLeftWeatherVolume_Parms.bDeactivatePawnCentricWeather = bDeactivatePawnCentricWeather;
	PawnLeftWeatherVolume_Parms.WeatherVolume = WeatherVolume;

	this->ProcessEvent ( pFnPawnLeftWeatherVolume, &PawnLeftWeatherVolume_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PawnEnteredWeatherVolume
// [0x00020102] 
// Parameters infos:
// unsigned long                  bDeactivatePawnCentricWeather  ( CPF_Parm )
// class ATrWeatherVolume*        WeatherVolume                  ( CPF_Parm )

void ATrPlayerController::PawnEnteredWeatherVolume ( unsigned long bDeactivatePawnCentricWeather, class ATrWeatherVolume* WeatherVolume )
{
	static UFunction* pFnPawnEnteredWeatherVolume = NULL;

	if ( ! pFnPawnEnteredWeatherVolume )
		pFnPawnEnteredWeatherVolume = (UFunction*) UObject::GObjObjects()->Data[ 76134 ];

	ATrPlayerController_execPawnEnteredWeatherVolume_Parms PawnEnteredWeatherVolume_Parms;
	PawnEnteredWeatherVolume_Parms.bDeactivatePawnCentricWeather = bDeactivatePawnCentricWeather;
	PawnEnteredWeatherVolume_Parms.WeatherVolume = WeatherVolume;

	this->ProcessEvent ( pFnPawnEnteredWeatherVolume, &PawnEnteredWeatherVolume_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StopWeather
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::StopWeather ( )
{
	static UFunction* pFnStopWeather = NULL;

	if ( ! pFnStopWeather )
		pFnStopWeather = (UFunction*) UObject::GObjObjects()->Data[ 76133 ];

	ATrPlayerController_execStopWeather_Parms StopWeather_Parms;

	this->ProcessEvent ( pFnStopWeather, &StopWeather_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartWeather
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::StartWeather ( )
{
	static UFunction* pFnStartWeather = NULL;

	if ( ! pFnStartWeather )
		pFnStartWeather = (UFunction*) UObject::GObjObjects()->Data[ 76131 ];

	ATrPlayerController_execStartWeather_Parms StartWeather_Parms;

	this->ProcessEvent ( pFnStartWeather, &StartWeather_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetAdjustedAimFor
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 W                              ( CPF_Parm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ATrPlayerController::GetAdjustedAimFor ( class AWeapon* W, struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 76126 ];

	ATrPlayerController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.W = W;
	memcpy ( &GetAdjustedAimFor_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.PlayerTick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPlayerController::eventPlayerTick ( float DeltaTime )
{
	static UFunction* pFnPlayerTick = NULL;

	if ( ! pFnPlayerTick )
		pFnPlayerTick = (UFunction*) UObject::GObjObjects()->Data[ 76119 ];

	ATrPlayerController_eventPlayerTick_Parms PlayerTick_Parms;
	PlayerTick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerTick, &PlayerTick_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerPlayerTick
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPlayerController::eventServerPlayerTick ( float DeltaTime )
{
	static UFunction* pFnServerPlayerTick = NULL;

	if ( ! pFnServerPlayerTick )
		pFnServerPlayerTick = (UFunction*) UObject::GObjObjects()->Data[ 76117 ];

	ATrPlayerController_eventServerPlayerTick_Parms ServerPlayerTick_Parms;
	ServerPlayerTick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnServerPlayerTick, &ServerPlayerTick_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ViewAPlayer
// [0x00020002] 
// Parameters infos:
// int                            Dir                            ( CPF_Parm )

void ATrPlayerController::ViewAPlayer ( int Dir )
{
	static UFunction* pFnViewAPlayer = NULL;

	if ( ! pFnViewAPlayer )
		pFnViewAPlayer = (UFunction*) UObject::GObjObjects()->Data[ 76110 ];

	ATrPlayerController_execViewAPlayer_Parms ViewAPlayer_Parms;
	ViewAPlayer_Parms.Dir = Dir;

	this->ProcessEvent ( pFnViewAPlayer, &ViewAPlayer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ChangeTeam
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 TeamName                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ChangeTeam ( struct FString TeamName )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 76089 ];

	ATrPlayerController_execChangeTeam_Parms ChangeTeam_Parms;
	memcpy ( &ChangeTeam_Parms.TeamName, &TeamName, 0xC );

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientEndTeamSelect
// [0x010201C2] 
// Parameters infos:
// int                            RequestedTeamNum               ( CPF_Parm )

void ATrPlayerController::ClientEndTeamSelect ( int RequestedTeamNum )
{
	static UFunction* pFnClientEndTeamSelect = NULL;

	if ( ! pFnClientEndTeamSelect )
		pFnClientEndTeamSelect = (UFunction*) UObject::GObjObjects()->Data[ 76086 ];

	ATrPlayerController_execClientEndTeamSelect_Parms ClientEndTeamSelect_Parms;
	ClientEndTeamSelect_Parms.RequestedTeamNum = RequestedTeamNum;

	this->ProcessEvent ( pFnClientEndTeamSelect, &ClientEndTeamSelect_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestAutoAssignTeam
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerRequestAutoAssignTeam ( )
{
	static UFunction* pFnServerRequestAutoAssignTeam = NULL;

	if ( ! pFnServerRequestAutoAssignTeam )
		pFnServerRequestAutoAssignTeam = (UFunction*) UObject::GObjObjects()->Data[ 76080 ];

	ATrPlayerController_execServerRequestAutoAssignTeam_Parms ServerRequestAutoAssignTeam_Parms;

	this->ProcessEvent ( pFnServerRequestAutoAssignTeam, &ServerRequestAutoAssignTeam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CompletePickTeam
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::CompletePickTeam ( )
{
	static UFunction* pFnCompletePickTeam = NULL;

	if ( ! pFnCompletePickTeam )
		pFnCompletePickTeam = (UFunction*) UObject::GObjObjects()->Data[ 76077 ];

	ATrPlayerController_execCompletePickTeam_Parms CompletePickTeam_Parms;

	this->ProcessEvent ( pFnCompletePickTeam, &CompletePickTeam_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerRequestPickTeam
// [0x002200C2] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedTeamNum               ( CPF_Parm )

bool ATrPlayerController::ServerRequestPickTeam ( unsigned char RequestedTeamNum )
{
	static UFunction* pFnServerRequestPickTeam = NULL;

	if ( ! pFnServerRequestPickTeam )
		pFnServerRequestPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 64822 ];

	ATrPlayerController_execServerRequestPickTeam_Parms ServerRequestPickTeam_Parms;
	ServerRequestPickTeam_Parms.RequestedTeamNum = RequestedTeamNum;

	this->ProcessEvent ( pFnServerRequestPickTeam, &ServerRequestPickTeam_Parms, NULL );

	return ServerRequestPickTeam_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ClientStartSpawnTimer
// [0x010201C0] 
// Parameters infos:

void ATrPlayerController::ClientStartSpawnTimer ( )
{
	static UFunction* pFnClientStartSpawnTimer = NULL;

	if ( ! pFnClientStartSpawnTimer )
		pFnClientStartSpawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 76072 ];

	ATrPlayerController_execClientStartSpawnTimer_Parms ClientStartSpawnTimer_Parms;

	this->ProcessEvent ( pFnClientStartSpawnTimer, &ClientStartSpawnTimer_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InitHUDObjects
// [0x010201C0] 
// Parameters infos:

void ATrPlayerController::InitHUDObjects ( )
{
	static UFunction* pFnInitHUDObjects = NULL;

	if ( ! pFnInitHUDObjects )
		pFnInitHUDObjects = (UFunction*) UObject::GObjObjects()->Data[ 76071 ];

	ATrPlayerController_execInitHUDObjects_Parms InitHUDObjects_Parms;

	this->ProcessEvent ( pFnInitHUDObjects, &InitHUDObjects_Parms, NULL );
};

// Function TribesGame.TrPlayerController.FindValidGRI
// [0x010201C0] 
// Parameters infos:

void ATrPlayerController::FindValidGRI ( )
{
	static UFunction* pFnFindValidGRI = NULL;

	if ( ! pFnFindValidGRI )
		pFnFindValidGRI = (UFunction*) UObject::GObjObjects()->Data[ 76070 ];

	ATrPlayerController_execFindValidGRI_Parms FindValidGRI_Parms;

	this->ProcessEvent ( pFnFindValidGRI, &FindValidGRI_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayStartupMessage
// [0x010201C0] 
// Parameters infos:
// unsigned char                  StartupStage                   ( CPF_Parm )

void ATrPlayerController::PlayStartupMessage ( unsigned char StartupStage )
{
	static UFunction* pFnPlayStartupMessage = NULL;

	if ( ! pFnPlayStartupMessage )
		pFnPlayStartupMessage = (UFunction*) UObject::GObjObjects()->Data[ 76068 ];

	ATrPlayerController_execPlayStartupMessage_Parms PlayStartupMessage_Parms;
	PlayStartupMessage_Parms.StartupStage = StartupStage;

	this->ProcessEvent ( pFnPlayStartupMessage, &PlayStartupMessage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.IdentifyTeamMessage
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::IdentifyTeamMessage ( )
{
	static UFunction* pFnIdentifyTeamMessage = NULL;

	if ( ! pFnIdentifyTeamMessage )
		pFnIdentifyTeamMessage = (UFunction*) UObject::GObjObjects()->Data[ 76064 ];

	ATrPlayerController_execIdentifyTeamMessage_Parms IdentifyTeamMessage_Parms;

	this->ProcessEvent ( pFnIdentifyTeamMessage, &IdentifyTeamMessage_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateLockedTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  LockedActor                    ( CPF_Parm )

void ATrPlayerController::eventUpdateLockedTarget ( class AActor* LockedActor )
{
	static UFunction* pFnUpdateLockedTarget = NULL;

	if ( ! pFnUpdateLockedTarget )
		pFnUpdateLockedTarget = (UFunction*) UObject::GObjObjects()->Data[ 76061 ];

	ATrPlayerController_eventUpdateLockedTarget_Parms UpdateLockedTarget_Parms;
	UpdateLockedTarget_Parms.LockedActor = LockedActor;

	this->ProcessEvent ( pFnUpdateLockedTarget, &UpdateLockedTarget_Parms, NULL );
};

// Function TribesGame.TrPlayerController.StartFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 76058 ];

	ATrPlayerController_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ActivateDevice
// [0x00020002] 
// Parameters infos:
// unsigned char                  EquipPoint                     ( CPF_Parm )

void ATrPlayerController::ActivateDevice ( unsigned char EquipPoint )
{
	static UFunction* pFnActivateDevice = NULL;

	if ( ! pFnActivateDevice )
		pFnActivateDevice = (UFunction*) UObject::GObjObjects()->Data[ 76052 ];

	ATrPlayerController_execActivateDevice_Parms ActivateDevice_Parms;
	ActivateDevice_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnActivateDevice, &ActivateDevice_Parms, NULL );
};

// Function TribesGame.TrPlayerController.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 76051 ];

	ATrPlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 76050 ];

	ATrPlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SwitchWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ATrPlayerController::SwitchWeapon ( unsigned char T )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 76047 ];

	ATrPlayerController_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.T = T;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EquipSecondary
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::EquipSecondary ( )
{
	static UFunction* pFnEquipSecondary = NULL;

	if ( ! pFnEquipSecondary )
		pFnEquipSecondary = (UFunction*) UObject::GObjObjects()->Data[ 76044 ];

	ATrPlayerController_execEquipSecondary_Parms EquipSecondary_Parms;

	this->ProcessEvent ( pFnEquipSecondary, &EquipSecondary_Parms, NULL );
};

// Function TribesGame.TrPlayerController.EquipPrimary
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::EquipPrimary ( )
{
	static UFunction* pFnEquipPrimary = NULL;

	if ( ! pFnEquipPrimary )
		pFnEquipPrimary = (UFunction*) UObject::GObjObjects()->Data[ 76041 ];

	ATrPlayerController_execEquipPrimary_Parms EquipPrimary_Parms;

	this->ProcessEvent ( pFnEquipPrimary, &EquipPrimary_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedWeaponSwitch
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bFilterTimeStamp               ( CPF_Parm )

void ATrPlayerController::PressedWeaponSwitch ( unsigned long bFilterTimeStamp )
{
	static UFunction* pFnPressedWeaponSwitch = NULL;

	if ( ! pFnPressedWeaponSwitch )
		pFnPressedWeaponSwitch = (UFunction*) UObject::GObjObjects()->Data[ 76039 ];

	ATrPlayerController_execPressedWeaponSwitch_Parms PressedWeaponSwitch_Parms;
	PressedWeaponSwitch_Parms.bFilterTimeStamp = bFilterTimeStamp;

	this->ProcessEvent ( pFnPressedWeaponSwitch, &PressedWeaponSwitch_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedConsoleUse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedConsoleUse ( )
{
	static UFunction* pFnPressedConsoleUse = NULL;

	if ( ! pFnPressedConsoleUse )
		pFnPressedConsoleUse = (UFunction*) UObject::GObjObjects()->Data[ 76038 ];

	ATrPlayerController_execPressedConsoleUse_Parms PressedConsoleUse_Parms;

	this->ProcessEvent ( pFnPressedConsoleUse, &PressedConsoleUse_Parms, NULL );
};

// Function TribesGame.TrPlayerController.SetShowEquip
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ATrPlayerController::SetShowEquip ( unsigned long bShow )
{
	static UFunction* pFnSetShowEquip = NULL;

	if ( ! pFnSetShowEquip )
		pFnSetShowEquip = (UFunction*) UObject::GObjObjects()->Data[ 76036 ];

	ATrPlayerController_execSetShowEquip_Parms SetShowEquip_Parms;
	SetShowEquip_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetShowEquip, &SetShowEquip_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedDeployable
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedDeployable ( )
{
	static UFunction* pFnPressedDeployable = NULL;

	if ( ! pFnPressedDeployable )
		pFnPressedDeployable = (UFunction*) UObject::GObjObjects()->Data[ 76035 ];

	ATrPlayerController_execPressedDeployable_Parms PressedDeployable_Parms;

	this->ProcessEvent ( pFnPressedDeployable, &PressedDeployable_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedPack
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedPack ( )
{
	static UFunction* pFnPressedPack = NULL;

	if ( ! pFnPressedPack )
		pFnPressedPack = (UFunction*) UObject::GObjObjects()->Data[ 76026 ];

	ATrPlayerController_execPressedPack_Parms PressedPack_Parms;

	this->ProcessEvent ( pFnPressedPack, &PressedPack_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedBelt
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedBelt ( )
{
	static UFunction* pFnPressedBelt = NULL;

	if ( ! pFnPressedBelt )
		pFnPressedBelt = (UFunction*) UObject::GObjObjects()->Data[ 76023 ];

	ATrPlayerController_execPressedBelt_Parms PressedBelt_Parms;

	this->ProcessEvent ( pFnPressedBelt, &PressedBelt_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedLaser
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedLaser ( )
{
	static UFunction* pFnPressedLaser = NULL;

	if ( ! pFnPressedLaser )
		pFnPressedLaser = (UFunction*) UObject::GObjObjects()->Data[ 76022 ];

	ATrPlayerController_execPressedLaser_Parms PressedLaser_Parms;

	this->ProcessEvent ( pFnPressedLaser, &PressedLaser_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PressedMelee
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::PressedMelee ( )
{
	static UFunction* pFnPressedMelee = NULL;

	if ( ! pFnPressedMelee )
		pFnPressedMelee = (UFunction*) UObject::GObjObjects()->Data[ 76020 ];

	ATrPlayerController_execPressedMelee_Parms PressedMelee_Parms;

	this->ProcessEvent ( pFnPressedMelee, &PressedMelee_Parms, NULL );
};

// Function TribesGame.TrPlayerController.LimitViewRotation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                ViewRotation                   ( CPF_Parm )
// float                          ViewPitchMin                   ( CPF_Parm )
// float                          ViewPitchMax                   ( CPF_Parm )

struct FRotator ATrPlayerController::eventLimitViewRotation ( struct FRotator ViewRotation, float ViewPitchMin, float ViewPitchMax )
{
	static UFunction* pFnLimitViewRotation = NULL;

	if ( ! pFnLimitViewRotation )
		pFnLimitViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 76015 ];

	ATrPlayerController_eventLimitViewRotation_Parms LimitViewRotation_Parms;
	memcpy ( &LimitViewRotation_Parms.ViewRotation, &ViewRotation, 0xC );
	LimitViewRotation_Parms.ViewPitchMin = ViewPitchMin;
	LimitViewRotation_Parms.ViewPitchMax = ViewPitchMax;

	this->ProcessEvent ( pFnLimitViewRotation, &LimitViewRotation_Parms, NULL );

	return LimitViewRotation_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetRespawnDelayTotalTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrPlayerController::GetRespawnDelayTotalTime ( )
{
	static UFunction* pFnGetRespawnDelayTotalTime = NULL;

	if ( ! pFnGetRespawnDelayTotalTime )
		pFnGetRespawnDelayTotalTime = (UFunction*) UObject::GObjObjects()->Data[ 76008 ];

	ATrPlayerController_execGetRespawnDelayTotalTime_Parms GetRespawnDelayTotalTime_Parms;

	this->ProcessEvent ( pFnGetRespawnDelayTotalTime, &GetRespawnDelayTotalTime_Parms, NULL );

	return GetRespawnDelayTotalTime_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetArmorType
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrPlayerController::GetArmorType ( )
{
	static UFunction* pFnGetArmorType = NULL;

	if ( ! pFnGetArmorType )
		pFnGetArmorType = (UFunction*) UObject::GObjObjects()->Data[ 76005 ];

	ATrPlayerController_execGetArmorType_Parms GetArmorType_Parms;

	this->ProcessEvent ( pFnGetArmorType, &GetArmorType_Parms, NULL );

	return GetArmorType_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerSuicide
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerSuicide ( )
{
	static UFunction* pFnServerSuicide = NULL;

	if ( ! pFnServerSuicide )
		pFnServerSuicide = (UFunction*) UObject::GObjObjects()->Data[ 76004 ];

	ATrPlayerController_execServerSuicide_Parms ServerSuicide_Parms;

	this->ProcessEvent ( pFnServerSuicide, &ServerSuicide_Parms, NULL );
};

// Function TribesGame.TrPlayerController.Suicide
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 76002 ];

	ATrPlayerController_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerSetCharFamily
// [0x002200C2] 
// Parameters infos:
// struct FString                 FamilyClassStr                 ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ServerSetCharFamily ( struct FString FamilyClassStr )
{
	static UFunction* pFnServerSetCharFamily = NULL;

	if ( ! pFnServerSetCharFamily )
		pFnServerSetCharFamily = (UFunction*) UObject::GObjObjects()->Data[ 75998 ];

	ATrPlayerController_execServerSetCharFamily_Parms ServerSetCharFamily_Parms;
	memcpy ( &ServerSetCharFamily_Parms.FamilyClassStr, &FamilyClassStr, 0xC );

	this->ProcessEvent ( pFnServerSetCharFamily, &ServerSetCharFamily_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ServerReloadWeapon
// [0x002200C2] 
// Parameters infos:

void ATrPlayerController::ServerReloadWeapon ( )
{
	static UFunction* pFnServerReloadWeapon = NULL;

	if ( ! pFnServerReloadWeapon )
		pFnServerReloadWeapon = (UFunction*) UObject::GObjObjects()->Data[ 75997 ];

	ATrPlayerController_execServerReloadWeapon_Parms ServerReloadWeapon_Parms;

	this->ProcessEvent ( pFnServerReloadWeapon, &ServerReloadWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReloadWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrPlayerController::ReloadWeapon ( )
{
	static UFunction* pFnReloadWeapon = NULL;

	if ( ! pFnReloadWeapon )
		pFnReloadWeapon = (UFunction*) UObject::GObjObjects()->Data[ 75990 ];

	ATrPlayerController_execReloadWeapon_Parms ReloadWeapon_Parms;

	this->ProcessEvent ( pFnReloadWeapon, &ReloadWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.NotifyChangedWeapon
// [0x00020002] 
// Parameters infos:
// class AWeapon*                 PreviousWeapon                 ( CPF_Parm )
// class AWeapon*                 NewWeapon                      ( CPF_Parm )

void ATrPlayerController::NotifyChangedWeapon ( class AWeapon* PreviousWeapon, class AWeapon* NewWeapon )
{
	static UFunction* pFnNotifyChangedWeapon = NULL;

	if ( ! pFnNotifyChangedWeapon )
		pFnNotifyChangedWeapon = (UFunction*) UObject::GObjObjects()->Data[ 75986 ];

	ATrPlayerController_execNotifyChangedWeapon_Parms NotifyChangedWeapon_Parms;
	NotifyChangedWeapon_Parms.PreviousWeapon = PreviousWeapon;
	NotifyChangedWeapon_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnNotifyChangedWeapon, &NotifyChangedWeapon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.AimingHelp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInstantHit                    ( CPF_Parm )

bool ATrPlayerController::AimingHelp ( unsigned long bInstantHit )
{
	static UFunction* pFnAimingHelp = NULL;

	if ( ! pFnAimingHelp )
		pFnAimingHelp = (UFunction*) UObject::GObjObjects()->Data[ 75983 ];

	ATrPlayerController_execAimingHelp_Parms AimingHelp_Parms;
	AimingHelp_Parms.bInstantHit = bInstantHit;

	this->ProcessEvent ( pFnAimingHelp, &AimingHelp_Parms, NULL );

	return AimingHelp_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetDeviceByEquipPoint
// [0x00020002] 
// Parameters infos:
// class ATrDevice*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  EquipPoint                     ( CPF_Parm )

class ATrDevice* ATrPlayerController::GetDeviceByEquipPoint ( unsigned char EquipPoint )
{
	static UFunction* pFnGetDeviceByEquipPoint = NULL;

	if ( ! pFnGetDeviceByEquipPoint )
		pFnGetDeviceByEquipPoint = (UFunction*) UObject::GObjObjects()->Data[ 53443 ];

	ATrPlayerController_execGetDeviceByEquipPoint_Parms GetDeviceByEquipPoint_Parms;
	GetDeviceByEquipPoint_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnGetDeviceByEquipPoint, &GetDeviceByEquipPoint_Parms, NULL );

	return GetDeviceByEquipPoint_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ServerGiveCreditsCheat
// [0x002200C2] 
// Parameters infos:
// int                            Count                          ( CPF_Parm )

void ATrPlayerController::ServerGiveCreditsCheat ( int Count )
{
	static UFunction* pFnServerGiveCreditsCheat = NULL;

	if ( ! pFnServerGiveCreditsCheat )
		pFnServerGiveCreditsCheat = (UFunction*) UObject::GObjObjects()->Data[ 75979 ];

	ATrPlayerController_execServerGiveCreditsCheat_Parms ServerGiveCreditsCheat_Parms;
	ServerGiveCreditsCheat_Parms.Count = Count;

	this->ProcessEvent ( pFnServerGiveCreditsCheat, &ServerGiveCreditsCheat_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GiveCredits
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Count                          ( CPF_Parm )

void ATrPlayerController::GiveCredits ( int Count )
{
	static UFunction* pFnGiveCredits = NULL;

	if ( ! pFnGiveCredits )
		pFnGiveCredits = (UFunction*) UObject::GObjObjects()->Data[ 75977 ];

	ATrPlayerController_execGiveCredits_Parms GiveCredits_Parms;
	GiveCredits_Parms.Count = Count;

	this->ProcessEvent ( pFnGiveCredits, &GiveCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ResetStreaks
// [0x00020002] 
// Parameters infos:

void ATrPlayerController::ResetStreaks ( )
{
	static UFunction* pFnResetStreaks = NULL;

	if ( ! pFnResetStreaks )
		pFnResetStreaks = (UFunction*) UObject::GObjObjects()->Data[ 75976 ];

	ATrPlayerController_execResetStreaks_Parms ResetStreaks_Parms;

	this->ProcessEvent ( pFnResetStreaks, &ResetStreaks_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientShowAccoladeText
// [0x010201C2] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            ShowTime                       ( CPF_Parm )

void ATrPlayerController::ClientShowAccoladeText ( struct FString Message, int ShowTime )
{
	static UFunction* pFnClientShowAccoladeText = NULL;

	if ( ! pFnClientShowAccoladeText )
		pFnClientShowAccoladeText = (UFunction*) UObject::GObjObjects()->Data[ 75973 ];

	ATrPlayerController_execClientShowAccoladeText_Parms ClientShowAccoladeText_Parms;
	memcpy ( &ClientShowAccoladeText_Parms.Message, &Message, 0xC );
	ClientShowAccoladeText_Parms.ShowTime = ShowTime;

	this->ProcessEvent ( pFnClientShowAccoladeText, &ClientShowAccoladeText_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientShowAccoladeIcon
// [0x010201C2] 
// Parameters infos:
// int                            IconIndex                      ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Points                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ClientShowAccoladeIcon ( int IconIndex, struct FString Description, struct FString Points )
{
	static UFunction* pFnClientShowAccoladeIcon = NULL;

	if ( ! pFnClientShowAccoladeIcon )
		pFnClientShowAccoladeIcon = (UFunction*) UObject::GObjObjects()->Data[ 75969 ];

	ATrPlayerController_execClientShowAccoladeIcon_Parms ClientShowAccoladeIcon_Parms;
	ClientShowAccoladeIcon_Parms.IconIndex = IconIndex;
	memcpy ( &ClientShowAccoladeIcon_Parms.Description, &Description, 0xC );
	memcpy ( &ClientShowAccoladeIcon_Parms.Points, &Points, 0xC );

	this->ProcessEvent ( pFnClientShowAccoladeIcon, &ClientShowAccoladeIcon_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetLatestAccoladeIconIndex
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetLatestAccoladeIconIndex ( )
{
	static UFunction* pFnGetLatestAccoladeIconIndex = NULL;

	if ( ! pFnGetLatestAccoladeIconIndex )
		pFnGetLatestAccoladeIconIndex = (UFunction*) UObject::GObjObjects()->Data[ 75966 ];

	ATrPlayerController_execGetLatestAccoladeIconIndex_Parms GetLatestAccoladeIconIndex_Parms;

	this->ProcessEvent ( pFnGetLatestAccoladeIconIndex, &GetLatestAccoladeIconIndex_Parms, NULL );

	return GetLatestAccoladeIconIndex_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ClientUpdateCredits
// [0x010201C2] 
// Parameters infos:
// int                            Count                          ( CPF_Parm )

void ATrPlayerController::ClientUpdateCredits ( int Count )
{
	static UFunction* pFnClientUpdateCredits = NULL;

	if ( ! pFnClientUpdateCredits )
		pFnClientUpdateCredits = (UFunction*) UObject::GObjObjects()->Data[ 75964 ];

	ATrPlayerController_execClientUpdateCredits_Parms ClientUpdateCredits_Parms;
	ClientUpdateCredits_Parms.Count = Count;

	this->ProcessEvent ( pFnClientUpdateCredits, &ClientUpdateCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CreditsSoundFinished
// [0x00020102] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void ATrPlayerController::CreditsSoundFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnCreditsSoundFinished = NULL;

	if ( ! pFnCreditsSoundFinished )
		pFnCreditsSoundFinished = (UFunction*) UObject::GObjObjects()->Data[ 75962 ];

	ATrPlayerController_execCreditsSoundFinished_Parms CreditsSoundFinished_Parms;
	CreditsSoundFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnCreditsSoundFinished, &CreditsSoundFinished_Parms, NULL );
};

// Function TribesGame.TrPlayerController.UpdateCurrentCredits
// [0x00020002] 
// Parameters infos:
// int                            Count                          ( CPF_Parm )

void ATrPlayerController::UpdateCurrentCredits ( int Count )
{
	static UFunction* pFnUpdateCurrentCredits = NULL;

	if ( ! pFnUpdateCurrentCredits )
		pFnUpdateCurrentCredits = (UFunction*) UObject::GObjObjects()->Data[ 75958 ];

	ATrPlayerController_execUpdateCurrentCredits_Parms UpdateCurrentCredits_Parms;
	UpdateCurrentCredits_Parms.Count = Count;

	this->ProcessEvent ( pFnUpdateCurrentCredits, &UpdateCurrentCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ModifyCredits
// [0x00024002] 
// Parameters infos:
// int                            Count                          ( CPF_Parm )
// unsigned long                  bFreeCredits                   ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::ModifyCredits ( int Count, unsigned long bFreeCredits )
{
	static UFunction* pFnModifyCredits = NULL;

	if ( ! pFnModifyCredits )
		pFnModifyCredits = (UFunction*) UObject::GObjObjects()->Data[ 75950 ];

	ATrPlayerController_execModifyCredits_Parms ModifyCredits_Parms;
	ModifyCredits_Parms.Count = Count;
	ModifyCredits_Parms.bFreeCredits = bFreeCredits;

	this->ProcessEvent ( pFnModifyCredits, &ModifyCredits_Parms, NULL );
};

// Function TribesGame.TrPlayerController.GetCurrentCredits
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetCurrentCredits ( )
{
	static UFunction* pFnGetCurrentCredits = NULL;

	if ( ! pFnGetCurrentCredits )
		pFnGetCurrentCredits = (UFunction*) UObject::GObjObjects()->Data[ 64849 ];

	ATrPlayerController_execGetCurrentCredits_Parms GetCurrentCredits_Parms;

	this->ProcessEvent ( pFnGetCurrentCredits, &GetCurrentCredits_Parms, NULL );

	return GetCurrentCredits_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ProcessCreditEvent
// [0x00020002] 
// Parameters infos:
// unsigned char                  EventType                      ( CPF_Parm )
// unsigned long                  bProxyEvent                    ( CPF_Parm )

void ATrPlayerController::ProcessCreditEvent ( unsigned char EventType, unsigned long bProxyEvent )
{
	static UFunction* pFnProcessCreditEvent = NULL;

	if ( ! pFnProcessCreditEvent )
		pFnProcessCreditEvent = (UFunction*) UObject::GObjObjects()->Data[ 75940 ];

	ATrPlayerController_execProcessCreditEvent_Parms ProcessCreditEvent_Parms;
	ProcessCreditEvent_Parms.EventType = EventType;
	ProcessCreditEvent_Parms.bProxyEvent = bProxyEvent;

	this->ProcessEvent ( pFnProcessCreditEvent, &ProcessCreditEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrPlayerController::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 75937 ];

	ATrPlayerController_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerController.CheckBulletWhip
// [0x00820002] 
// Parameters infos:
// class USoundCue*               BulletWhip                     ( CPF_Parm )
// struct FVector                 FireLocation                   ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrPlayerController::CheckBulletWhip ( class USoundCue* BulletWhip, struct FVector FireLocation, struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnCheckBulletWhip = NULL;

	if ( ! pFnCheckBulletWhip )
		pFnCheckBulletWhip = (UFunction*) UObject::GObjObjects()->Data[ 75929 ];

	ATrPlayerController_execCheckBulletWhip_Parms CheckBulletWhip_Parms;
	CheckBulletWhip_Parms.BulletWhip = BulletWhip;
	memcpy ( &CheckBulletWhip_Parms.FireLocation, &FireLocation, 0xC );
	memcpy ( &CheckBulletWhip_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &CheckBulletWhip_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCheckBulletWhip, &CheckBulletWhip_Parms, NULL );
};

// Function TribesGame.TrPlayerController.HideHUDNotification
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventHideHUDNotification ( )
{
	static UFunction* pFnHideHUDNotification = NULL;

	if ( ! pFnHideHUDNotification )
		pFnHideHUDNotification = (UFunction*) UObject::GObjObjects()->Data[ 75927 ];

	ATrPlayerController_eventHideHUDNotification_Parms HideHUDNotification_Parms;

	this->ProcessEvent ( pFnHideHUDNotification, &HideHUDNotification_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ShowHUDNotification
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message2                       ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::eventShowHUDNotification ( struct FString Message, struct FString Message2 )
{
	static UFunction* pFnShowHUDNotification = NULL;

	if ( ! pFnShowHUDNotification )
		pFnShowHUDNotification = (UFunction*) UObject::GObjObjects()->Data[ 75922 ];

	ATrPlayerController_eventShowHUDNotification_Parms ShowHUDNotification_Parms;
	memcpy ( &ShowHUDNotification_Parms.Message, &Message, 0xC );
	memcpy ( &ShowHUDNotification_Parms.Message2, &Message2, 0xC );

	this->ProcessEvent ( pFnShowHUDNotification, &ShowHUDNotification_Parms, NULL );
};

// Function TribesGame.TrPlayerController.OnMissileIntercepted
// [0x010201C2] 
// Parameters infos:

void ATrPlayerController::OnMissileIntercepted ( )
{
	static UFunction* pFnOnMissileIntercepted = NULL;

	if ( ! pFnOnMissileIntercepted )
		pFnOnMissileIntercepted = (UFunction*) UObject::GObjObjects()->Data[ 75921 ];

	ATrPlayerController_execOnMissileIntercepted_Parms OnMissileIntercepted_Parms;

	this->ProcessEvent ( pFnOnMissileIntercepted, &OnMissileIntercepted_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientSeekingMissileTargetingSelfEvent
// [0x010201C2] 
// Parameters infos:
// int                            EventSwitch                    ( CPF_Parm )

void ATrPlayerController::ClientSeekingMissileTargetingSelfEvent ( int EventSwitch )
{
	static UFunction* pFnClientSeekingMissileTargetingSelfEvent = NULL;

	if ( ! pFnClientSeekingMissileTargetingSelfEvent )
		pFnClientSeekingMissileTargetingSelfEvent = (UFunction*) UObject::GObjObjects()->Data[ 75915 ];

	ATrPlayerController_execClientSeekingMissileTargetingSelfEvent_Parms ClientSeekingMissileTargetingSelfEvent_Parms;
	ClientSeekingMissileTargetingSelfEvent_Parms.EventSwitch = EventSwitch;

	this->ProcessEvent ( pFnClientSeekingMissileTargetingSelfEvent, &ClientSeekingMissileTargetingSelfEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientMySaberLauncherTargetingUpdated
// [0x010201C2] 
// Parameters infos:
// unsigned char                  MissileLockValue               ( CPF_Parm )

void ATrPlayerController::ClientMySaberLauncherTargetingUpdated ( unsigned char MissileLockValue )
{
	static UFunction* pFnClientMySaberLauncherTargetingUpdated = NULL;

	if ( ! pFnClientMySaberLauncherTargetingUpdated )
		pFnClientMySaberLauncherTargetingUpdated = (UFunction*) UObject::GObjObjects()->Data[ 75913 ];

	ATrPlayerController_execClientMySaberLauncherTargetingUpdated_Parms ClientMySaberLauncherTargetingUpdated_Parms;
	ClientMySaberLauncherTargetingUpdated_Parms.MissileLockValue = MissileLockValue;

	this->ProcessEvent ( pFnClientMySaberLauncherTargetingUpdated, &ClientMySaberLauncherTargetingUpdated_Parms, NULL );
};

// Function TribesGame.TrPlayerController.ClientHearReliableSound
// [0x010249C2] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               ASound                         ( CPF_Parm )
// class AActor*                  SourceActor                    ( CPF_Parm )
// struct FVector                 SourceLocation                 ( CPF_Parm )
// unsigned long                  bStopWhenOwnerDestroyed        ( CPF_Parm )
// unsigned long                  bIsOccluded                    ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::eventClientHearReliableSound ( class USoundCue* ASound, class AActor* SourceActor, struct FVector SourceLocation, unsigned long bStopWhenOwnerDestroyed, unsigned long bIsOccluded )
{
	static UFunction* pFnClientHearReliableSound = NULL;

	if ( ! pFnClientHearReliableSound )
		pFnClientHearReliableSound = (UFunction*) UObject::GObjObjects()->Data[ 75906 ];

	ATrPlayerController_eventClientHearReliableSound_Parms ClientHearReliableSound_Parms;
	ClientHearReliableSound_Parms.ASound = ASound;
	ClientHearReliableSound_Parms.SourceActor = SourceActor;
	memcpy ( &ClientHearReliableSound_Parms.SourceLocation, &SourceLocation, 0xC );
	ClientHearReliableSound_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	ClientHearReliableSound_Parms.bIsOccluded = bIsOccluded;

	this->ProcessEvent ( pFnClientHearReliableSound, &ClientHearReliableSound_Parms, NULL );
};

// Function TribesGame.TrPlayerController.TestAnnouncement
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bPlayRightNow                  ( CPF_Parm )

void ATrPlayerController::TestAnnouncement ( unsigned long bPlayRightNow )
{
	static UFunction* pFnTestAnnouncement = NULL;

	if ( ! pFnTestAnnouncement )
		pFnTestAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 75903 ];

	ATrPlayerController_execTestAnnouncement_Parms TestAnnouncement_Parms;
	TestAnnouncement_Parms.bPlayRightNow = bPlayRightNow;

	this->ProcessEvent ( pFnTestAnnouncement, &TestAnnouncement_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayAnnouncerSound
// [0x010201C2] 
// Parameters infos:
// class USoundCue*               AnnouncementCue                ( CPF_Parm )
// unsigned long                  bPlayRightNow                  ( CPF_Parm )

void ATrPlayerController::PlayAnnouncerSound ( class USoundCue* AnnouncementCue, unsigned long bPlayRightNow )
{
	static UFunction* pFnPlayAnnouncerSound = NULL;

	if ( ! pFnPlayAnnouncerSound )
		pFnPlayAnnouncerSound = (UFunction*) UObject::GObjObjects()->Data[ 75900 ];

	ATrPlayerController_execPlayAnnouncerSound_Parms PlayAnnouncerSound_Parms;
	PlayAnnouncerSound_Parms.AnnouncementCue = AnnouncementCue;
	PlayAnnouncerSound_Parms.bPlayRightNow = bPlayRightNow;

	this->ProcessEvent ( pFnPlayAnnouncerSound, &PlayAnnouncerSound_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 75899 ];

	ATrPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function TribesGame.TrPlayerController.InitHelpTextManager
// [0x00020102] 
// Parameters infos:

void ATrPlayerController::InitHelpTextManager ( )
{
	static UFunction* pFnInitHelpTextManager = NULL;

	if ( ! pFnInitHelpTextManager )
		pFnInitHelpTextManager = (UFunction*) UObject::GObjObjects()->Data[ 75898 ];

	ATrPlayerController_execInitHelpTextManager_Parms InitHelpTextManager_Parms;

	this->ProcessEvent ( pFnInitHelpTextManager, &InitHelpTextManager_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerController::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 75889 ];

	ATrPlayerController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPlayerController.PlayReliableSound
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// class USoundCue*               InSoundCue                     ( CPF_Parm )
// unsigned long                  bNotReplicated                 ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNoRepToOwner                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bStopWhenOwnerDestroyed        ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 SoundLocation                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNoRepToRelevant               ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerController::PlayReliableSound ( class USoundCue* InSoundCue, unsigned long bNotReplicated, unsigned long bNoRepToOwner, unsigned long bStopWhenOwnerDestroyed, struct FVector SoundLocation, unsigned long bNoRepToRelevant )
{
	static UFunction* pFnPlayReliableSound = NULL;

	if ( ! pFnPlayReliableSound )
		pFnPlayReliableSound = (UFunction*) UObject::GObjObjects()->Data[ 73683 ];

	ATrPlayerController_execPlayReliableSound_Parms PlayReliableSound_Parms;
	PlayReliableSound_Parms.InSoundCue = InSoundCue;
	PlayReliableSound_Parms.bNotReplicated = bNotReplicated;
	PlayReliableSound_Parms.bNoRepToOwner = bNoRepToOwner;
	PlayReliableSound_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	memcpy ( &PlayReliableSound_Parms.SoundLocation, &SoundLocation, 0xC );
	PlayReliableSound_Parms.bNoRepToRelevant = bNoRepToRelevant;

	pFnPlayReliableSound->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPlayReliableSound, &PlayReliableSound_Parms, NULL );

	pFnPlayReliableSound->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.GetLanguageFontIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetLanguageFontIndex ( )
{
	static UFunction* pFnGetLanguageFontIndex = NULL;

	if ( ! pFnGetLanguageFontIndex )
		pFnGetLanguageFontIndex = (UFunction*) UObject::GObjObjects()->Data[ 53268 ];

	ATrPlayerController_execGetLanguageFontIndex_Parms GetLanguageFontIndex_Parms;

	pFnGetLanguageFontIndex->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLanguageFontIndex, &GetLanguageFontIndex_Parms, NULL );

	pFnGetLanguageFontIndex->FunctionFlags |= 0x400;

	return GetLanguageFontIndex_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.GetOnlineFriends
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FString >       vFriends                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrPlayerController::GetOnlineFriends ( TArray< struct FString >* vFriends )
{
	static UFunction* pFnGetOnlineFriends = NULL;

	if ( ! pFnGetOnlineFriends )
		pFnGetOnlineFriends = (UFunction*) UObject::GObjObjects()->Data[ 75880 ];

	ATrPlayerController_execGetOnlineFriends_Parms GetOnlineFriends_Parms;

	pFnGetOnlineFriends->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetOnlineFriends, &GetOnlineFriends_Parms, NULL );

	pFnGetOnlineFriends->FunctionFlags |= 0x400;

	if ( vFriends )
		memcpy ( vFriends, &GetOnlineFriends_Parms.vFriends, 0xC );
};

// Function TribesGame.TrPlayerController.AddVehicleMenuOption
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            Icon                           ( CPF_Parm )
// int                            CountSpawned                   ( CPF_Parm )
// int                            CountAllowed                   ( CPF_Parm )

void ATrPlayerController::AddVehicleMenuOption ( struct FString ClassName, struct FString DisplayName, int Cost, int Icon, int CountSpawned, int CountAllowed )
{
	static UFunction* pFnAddVehicleMenuOption = NULL;

	if ( ! pFnAddVehicleMenuOption )
		pFnAddVehicleMenuOption = (UFunction*) UObject::GObjObjects()->Data[ 75873 ];

	ATrPlayerController_execAddVehicleMenuOption_Parms AddVehicleMenuOption_Parms;
	memcpy ( &AddVehicleMenuOption_Parms.ClassName, &ClassName, 0xC );
	memcpy ( &AddVehicleMenuOption_Parms.DisplayName, &DisplayName, 0xC );
	AddVehicleMenuOption_Parms.Cost = Cost;
	AddVehicleMenuOption_Parms.Icon = Icon;
	AddVehicleMenuOption_Parms.CountSpawned = CountSpawned;
	AddVehicleMenuOption_Parms.CountAllowed = CountAllowed;

	pFnAddVehicleMenuOption->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddVehicleMenuOption, &AddVehicleMenuOption_Parms, NULL );

	pFnAddVehicleMenuOption->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ShowVehicleMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Credits                        ( CPF_Parm )

void ATrPlayerController::ShowVehicleMenu ( int Credits )
{
	static UFunction* pFnShowVehicleMenu = NULL;

	if ( ! pFnShowVehicleMenu )
		pFnShowVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 75871 ];

	ATrPlayerController_execShowVehicleMenu_Parms ShowVehicleMenu_Parms;
	ShowVehicleMenu_Parms.Credits = Credits;

	pFnShowVehicleMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowVehicleMenu, &ShowVehicleMenu_Parms, NULL );

	pFnShowVehicleMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ClearVehicleMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::ClearVehicleMenu ( )
{
	static UFunction* pFnClearVehicleMenu = NULL;

	if ( ! pFnClearVehicleMenu )
		pFnClearVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 75870 ];

	ATrPlayerController_execClearVehicleMenu_Parms ClearVehicleMenu_Parms;

	pFnClearVehicleMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearVehicleMenu, &ClearVehicleMenu_Parms, NULL );

	pFnClearVehicleMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ResetRunaway
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::ResetRunaway ( )
{
	static UFunction* pFnResetRunaway = NULL;

	if ( ! pFnResetRunaway )
		pFnResetRunaway = (UFunction*) UObject::GObjObjects()->Data[ 75869 ];

	ATrPlayerController_execResetRunaway_Parms ResetRunaway_Parms;

	pFnResetRunaway->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetRunaway, &ResetRunaway_Parms, NULL );

	pFnResetRunaway->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.IsGameUsingSeekFreeLoading
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsGameUsingSeekFreeLoading ( )
{
	static UFunction* pFnIsGameUsingSeekFreeLoading = NULL;

	if ( ! pFnIsGameUsingSeekFreeLoading )
		pFnIsGameUsingSeekFreeLoading = (UFunction*) UObject::GObjObjects()->Data[ 75867 ];

	ATrPlayerController_execIsGameUsingSeekFreeLoading_Parms IsGameUsingSeekFreeLoading_Parms;

	pFnIsGameUsingSeekFreeLoading->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsGameUsingSeekFreeLoading, &IsGameUsingSeekFreeLoading_Parms, NULL );

	pFnIsGameUsingSeekFreeLoading->FunctionFlags |= 0x400;

	return IsGameUsingSeekFreeLoading_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController._Crash
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::_Crash ( )
{
	static UFunction* pFn_Crash = NULL;

	if ( ! pFn_Crash )
		pFn_Crash = (UFunction*) UObject::GObjObjects()->Data[ 75866 ];

	ATrPlayerController_exec_Crash_Parms _Crash_Parms;

	pFn_Crash->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFn_Crash, &_Crash_Parms, NULL );

	pFn_Crash->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.Bug
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::Bug ( )
{
	static UFunction* pFnBug = NULL;

	if ( ! pFnBug )
		pFnBug = (UFunction*) UObject::GObjObjects()->Data[ 75865 ];

	ATrPlayerController_execBug_Parms Bug_Parms;

	pFnBug->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBug, &Bug_Parms, NULL );

	pFnBug->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.PushChat
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 chatStr                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::PushChat ( struct FString chatStr )
{
	static UFunction* pFnPushChat = NULL;

	if ( ! pFnPushChat )
		pFnPushChat = (UFunction*) UObject::GObjObjects()->Data[ 75863 ];

	ATrPlayerController_execPushChat_Parms PushChat_Parms;
	memcpy ( &PushChat_Parms.chatStr, &chatStr, 0xC );

	pFnPushChat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnPushChat, &PushChat_Parms, NULL );

	pFnPushChat->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ToggleChat
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::ToggleChat ( )
{
	static UFunction* pFnToggleChat = NULL;

	if ( ! pFnToggleChat )
		pFnToggleChat = (UFunction*) UObject::GObjObjects()->Data[ 75862 ];

	ATrPlayerController_execToggleChat_Parms ToggleChat_Parms;

	pFnToggleChat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleChat, &ToggleChat_Parms, NULL );

	pFnToggleChat->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.HideChat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::HideChat ( )
{
	static UFunction* pFnHideChat = NULL;

	if ( ! pFnHideChat )
		pFnHideChat = (UFunction*) UObject::GObjObjects()->Data[ 75861 ];

	ATrPlayerController_execHideChat_Parms HideChat_Parms;

	pFnHideChat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideChat, &HideChat_Parms, NULL );

	pFnHideChat->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ShowChat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::ShowChat ( )
{
	static UFunction* pFnShowChat = NULL;

	if ( ! pFnShowChat )
		pFnShowChat = (UFunction*) UObject::GObjObjects()->Data[ 75860 ];

	ATrPlayerController_execShowChat_Parms ShowChat_Parms;

	pFnShowChat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowChat, &ShowChat_Parms, NULL );

	pFnShowChat->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ChatMessageReceived
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Channel                        ( CPF_Parm )
// struct FString                 Sender                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ChatMessageReceived ( int Channel, struct FString Sender, struct FString Message )
{
	static UFunction* pFnChatMessageReceived = NULL;

	if ( ! pFnChatMessageReceived )
		pFnChatMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 75856 ];

	ATrPlayerController_execChatMessageReceived_Parms ChatMessageReceived_Parms;
	ChatMessageReceived_Parms.Channel = Channel;
	memcpy ( &ChatMessageReceived_Parms.Sender, &Sender, 0xC );
	memcpy ( &ChatMessageReceived_Parms.Message, &Message, 0xC );

	pFnChatMessageReceived->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChatMessageReceived, &ChatMessageReceived_Parms, NULL );

	pFnChatMessageReceived->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.HideNotification
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::HideNotification ( )
{
	static UFunction* pFnHideNotification = NULL;

	if ( ! pFnHideNotification )
		pFnHideNotification = (UFunction*) UObject::GObjObjects()->Data[ 75855 ];

	ATrPlayerController_execHideNotification_Parms HideNotification_Parms;

	pFnHideNotification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideNotification, &HideNotification_Parms, NULL );

	pFnHideNotification->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ShowNotification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message2                       ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ShowNotification ( struct FString Message, struct FString Message2 )
{
	static UFunction* pFnShowNotification = NULL;

	if ( ! pFnShowNotification )
		pFnShowNotification = (UFunction*) UObject::GObjObjects()->Data[ 75852 ];

	ATrPlayerController_execShowNotification_Parms ShowNotification_Parms;
	memcpy ( &ShowNotification_Parms.Message, &Message, 0xC );
	memcpy ( &ShowNotification_Parms.Message2, &Message2, 0xC );

	pFnShowNotification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowNotification, &ShowNotification_Parms, NULL );

	pFnShowNotification->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ForwardChatFlag
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::ForwardChatFlag ( )
{
	static UFunction* pFnForwardChatFlag = NULL;

	if ( ! pFnForwardChatFlag )
		pFnForwardChatFlag = (UFunction*) UObject::GObjObjects()->Data[ 75851 ];

	ATrPlayerController_execForwardChatFlag_Parms ForwardChatFlag_Parms;

	pFnForwardChatFlag->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForwardChatFlag, &ForwardChatFlag_Parms, NULL );

	pFnForwardChatFlag->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.IsBassBoostToggled
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::IsBassBoostToggled ( )
{
	static UFunction* pFnIsBassBoostToggled = NULL;

	if ( ! pFnIsBassBoostToggled )
		pFnIsBassBoostToggled = (UFunction*) UObject::GObjObjects()->Data[ 68604 ];

	ATrPlayerController_execIsBassBoostToggled_Parms IsBassBoostToggled_Parms;

	pFnIsBassBoostToggled->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBassBoostToggled, &IsBassBoostToggled_Parms, NULL );

	pFnIsBassBoostToggled->FunctionFlags |= 0x400;

	return IsBassBoostToggled_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.ToggleBassBoost
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrPlayerController::ToggleBassBoost ( unsigned long bEnable )
{
	static UFunction* pFnToggleBassBoost = NULL;

	if ( ! pFnToggleBassBoost )
		pFnToggleBassBoost = (UFunction*) UObject::GObjObjects()->Data[ 75849 ];

	ATrPlayerController_execToggleBassBoost_Parms ToggleBassBoost_Parms;
	ToggleBassBoost_Parms.bEnable = bEnable;

	pFnToggleBassBoost->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleBassBoost, &ToggleBassBoost_Parms, NULL );

	pFnToggleBassBoost->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.FireRefreshPage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::FireRefreshPage ( )
{
	static UFunction* pFnFireRefreshPage = NULL;

	if ( ! pFnFireRefreshPage )
		pFnFireRefreshPage = (UFunction*) UObject::GObjObjects()->Data[ 75848 ];

	ATrPlayerController_execFireRefreshPage_Parms FireRefreshPage_Parms;

	pFnFireRefreshPage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireRefreshPage, &FireRefreshPage_Parms, NULL );

	pFnFireRefreshPage->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.FireUILoadSummary
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::FireUILoadSummary ( )
{
	static UFunction* pFnFireUILoadSummary = NULL;

	if ( ! pFnFireUILoadSummary )
		pFnFireUILoadSummary = (UFunction*) UObject::GObjObjects()->Data[ 75847 ];

	ATrPlayerController_execFireUILoadSummary_Parms FireUILoadSummary_Parms;

	pFnFireUILoadSummary->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireUILoadSummary, &FireUILoadSummary_Parms, NULL );

	pFnFireUILoadSummary->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ClaimPromotion
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PromoCode                      ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ClaimPromotion ( struct FString PromoCode )
{
	static UFunction* pFnClaimPromotion = NULL;

	if ( ! pFnClaimPromotion )
		pFnClaimPromotion = (UFunction*) UObject::GObjObjects()->Data[ 75845 ];

	ATrPlayerController_execClaimPromotion_Parms ClaimPromotion_Parms;
	memcpy ( &ClaimPromotion_Parms.PromoCode, &PromoCode, 0xC );

	pFnClaimPromotion->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClaimPromotion, &ClaimPromotion_Parms, NULL );

	pFnClaimPromotion->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ToggleMainMenu
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::ToggleMainMenu ( )
{
	static UFunction* pFnToggleMainMenu = NULL;

	if ( ! pFnToggleMainMenu )
		pFnToggleMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 75844 ];

	ATrPlayerController_execToggleMainMenu_Parms ToggleMainMenu_Parms;

	pFnToggleMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleMainMenu, &ToggleMainMenu_Parms, NULL );

	pFnToggleMainMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ToggleSettings
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::ToggleSettings ( )
{
	static UFunction* pFnToggleSettings = NULL;

	if ( ! pFnToggleSettings )
		pFnToggleSettings = (UFunction*) UObject::GObjObjects()->Data[ 75843 ];

	ATrPlayerController_execToggleSettings_Parms ToggleSettings_Parms;

	pFnToggleSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleSettings, &ToggleSettings_Parms, NULL );

	pFnToggleSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ToggleFriends
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::ToggleFriends ( )
{
	static UFunction* pFnToggleFriends = NULL;

	if ( ! pFnToggleFriends )
		pFnToggleFriends = (UFunction*) UObject::GObjObjects()->Data[ 75842 ];

	ATrPlayerController_execToggleFriends_Parms ToggleFriends_Parms;

	pFnToggleFriends->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleFriends, &ToggleFriends_Parms, NULL );

	pFnToggleFriends->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.OpenClasses
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::OpenClasses ( )
{
	static UFunction* pFnOpenClasses = NULL;

	if ( ! pFnOpenClasses )
		pFnOpenClasses = (UFunction*) UObject::GObjObjects()->Data[ 75841 ];

	ATrPlayerController_execOpenClasses_Parms OpenClasses_Parms;

	pFnOpenClasses->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenClasses, &OpenClasses_Parms, NULL );

	pFnOpenClasses->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.OpenMenu
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::OpenMenu ( )
{
	static UFunction* pFnOpenMenu = NULL;

	if ( ! pFnOpenMenu )
		pFnOpenMenu = (UFunction*) UObject::GObjObjects()->Data[ 75840 ];

	ATrPlayerController_execOpenMenu_Parms OpenMenu_Parms;

	pFnOpenMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenMenu, &OpenMenu_Parms, NULL );

	pFnOpenMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.HideMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::HideMenu ( )
{
	static UFunction* pFnHideMenu = NULL;

	if ( ! pFnHideMenu )
		pFnHideMenu = (UFunction*) UObject::GObjObjects()->Data[ 75839 ];

	ATrPlayerController_execHideMenu_Parms HideMenu_Parms;

	pFnHideMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHideMenu, &HideMenu_Parms, NULL );

	pFnHideMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.RequestKickVote
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::RequestKickVote ( struct FString PlayerName )
{
	static UFunction* pFnRequestKickVote = NULL;

	if ( ! pFnRequestKickVote )
		pFnRequestKickVote = (UFunction*) UObject::GObjObjects()->Data[ 75837 ];

	ATrPlayerController_execRequestKickVote_Parms RequestKickVote_Parms;
	memcpy ( &RequestKickVote_Parms.PlayerName, &PlayerName, 0xC );

	pFnRequestKickVote->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestKickVote, &RequestKickVote_Parms, NULL );

	pFnRequestKickVote->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.IsChatFiltered
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::IsChatFiltered ( struct FString PlayerName )
{
	static UFunction* pFnIsChatFiltered = NULL;

	if ( ! pFnIsChatFiltered )
		pFnIsChatFiltered = (UFunction*) UObject::GObjObjects()->Data[ 75834 ];

	ATrPlayerController_execIsChatFiltered_Parms IsChatFiltered_Parms;
	memcpy ( &IsChatFiltered_Parms.PlayerName, &PlayerName, 0xC );

	pFnIsChatFiltered->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsChatFiltered, &IsChatFiltered_Parms, NULL );

	pFnIsChatFiltered->FunctionFlags |= 0x400;

	return IsChatFiltered_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.HaveMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::HaveMenu ( )
{
	static UFunction* pFnHaveMenu = NULL;

	if ( ! pFnHaveMenu )
		pFnHaveMenu = (UFunction*) UObject::GObjObjects()->Data[ 75832 ];

	ATrPlayerController_execHaveMenu_Parms HaveMenu_Parms;

	pFnHaveMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHaveMenu, &HaveMenu_Parms, NULL );

	pFnHaveMenu->FunctionFlags |= 0x400;

	return HaveMenu_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.IsTrPlayerMuted
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool ATrPlayerController::IsTrPlayerMuted ( struct FString PlayerName )
{
	static UFunction* pFnIsTrPlayerMuted = NULL;

	if ( ! pFnIsTrPlayerMuted )
		pFnIsTrPlayerMuted = (UFunction*) UObject::GObjObjects()->Data[ 54230 ];

	ATrPlayerController_execIsTrPlayerMuted_Parms IsTrPlayerMuted_Parms;
	memcpy ( &IsTrPlayerMuted_Parms.PlayerName, &PlayerName, 0xC );

	pFnIsTrPlayerMuted->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsTrPlayerMuted, &IsTrPlayerMuted_Parms, NULL );

	pFnIsTrPlayerMuted->FunctionFlags |= 0x400;

	return IsTrPlayerMuted_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.UnmutePlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::UnmutePlayer ( struct FString PlayerName )
{
	static UFunction* pFnUnmutePlayer = NULL;

	if ( ! pFnUnmutePlayer )
		pFnUnmutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 75829 ];

	ATrPlayerController_execUnmutePlayer_Parms UnmutePlayer_Parms;
	memcpy ( &UnmutePlayer_Parms.PlayerName, &PlayerName, 0xC );

	pFnUnmutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUnmutePlayer, &UnmutePlayer_Parms, NULL );

	pFnUnmutePlayer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.MutePlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::MutePlayer ( struct FString PlayerName )
{
	static UFunction* pFnMutePlayer = NULL;

	if ( ! pFnMutePlayer )
		pFnMutePlayer = (UFunction*) UObject::GObjObjects()->Data[ 75827 ];

	ATrPlayerController_execMutePlayer_Parms MutePlayer_Parms;
	memcpy ( &MutePlayer_Parms.PlayerName, &PlayerName, 0xC );

	pFnMutePlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMutePlayer, &MutePlayer_Parms, NULL );

	pFnMutePlayer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.EndHotkeyBlock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::EndHotkeyBlock ( )
{
	static UFunction* pFnEndHotkeyBlock = NULL;

	if ( ! pFnEndHotkeyBlock )
		pFnEndHotkeyBlock = (UFunction*) UObject::GObjObjects()->Data[ 75826 ];

	ATrPlayerController_execEndHotkeyBlock_Parms EndHotkeyBlock_Parms;

	pFnEndHotkeyBlock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEndHotkeyBlock, &EndHotkeyBlock_Parms, NULL );

	pFnEndHotkeyBlock->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ToggleWorkingGraphic
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrPlayerController::ToggleWorkingGraphic ( unsigned long bEnabled )
{
	static UFunction* pFnToggleWorkingGraphic = NULL;

	if ( ! pFnToggleWorkingGraphic )
		pFnToggleWorkingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 75824 ];

	ATrPlayerController_execToggleWorkingGraphic_Parms ToggleWorkingGraphic_Parms;
	ToggleWorkingGraphic_Parms.bEnabled = bEnabled;

	pFnToggleWorkingGraphic->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleWorkingGraphic, &ToggleWorkingGraphic_Parms, NULL );

	pFnToggleWorkingGraphic->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.UpdateQueueTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::UpdateQueueTimer ( )
{
	static UFunction* pFnUpdateQueueTimer = NULL;

	if ( ! pFnUpdateQueueTimer )
		pFnUpdateQueueTimer = (UFunction*) UObject::GObjObjects()->Data[ 75823 ];

	ATrPlayerController_execUpdateQueueTimer_Parms UpdateQueueTimer_Parms;

	pFnUpdateQueueTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateQueueTimer, &UpdateQueueTimer_Parms, NULL );

	pFnUpdateQueueTimer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.UpdateDealTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::UpdateDealTimer ( )
{
	static UFunction* pFnUpdateDealTimer = NULL;

	if ( ! pFnUpdateDealTimer )
		pFnUpdateDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 75822 ];

	ATrPlayerController_execUpdateDealTimer_Parms UpdateDealTimer_Parms;

	pFnUpdateDealTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDealTimer, &UpdateDealTimer_Parms, NULL );

	pFnUpdateDealTimer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.UpdateTVTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::UpdateTVTimer ( )
{
	static UFunction* pFnUpdateTVTimer = NULL;

	if ( ! pFnUpdateTVTimer )
		pFnUpdateTVTimer = (UFunction*) UObject::GObjObjects()->Data[ 75821 ];

	ATrPlayerController_execUpdateTVTimer_Parms UpdateTVTimer_Parms;

	pFnUpdateTVTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTVTimer, &UpdateTVTimer_Parms, NULL );

	pFnUpdateTVTimer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ForceFocus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::ForceFocus ( )
{
	static UFunction* pFnForceFocus = NULL;

	if ( ! pFnForceFocus )
		pFnForceFocus = (UFunction*) UObject::GObjObjects()->Data[ 75820 ];

	ATrPlayerController_execForceFocus_Parms ForceFocus_Parms;

	pFnForceFocus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceFocus, &ForceFocus_Parms, NULL );

	pFnForceFocus->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.FireAcquisition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::FireAcquisition ( )
{
	static UFunction* pFnFireAcquisition = NULL;

	if ( ! pFnFireAcquisition )
		pFnFireAcquisition = (UFunction*) UObject::GObjObjects()->Data[ 75819 ];

	ATrPlayerController_execFireAcquisition_Parms FireAcquisition_Parms;

	pFnFireAcquisition->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFireAcquisition, &FireAcquisition_Parms, NULL );

	pFnFireAcquisition->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SendMenuBack
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::SendMenuBack ( )
{
	static UFunction* pFnSendMenuBack = NULL;

	if ( ! pFnSendMenuBack )
		pFnSendMenuBack = (UFunction*) UObject::GObjObjects()->Data[ 75818 ];

	ATrPlayerController_execSendMenuBack_Parms SendMenuBack_Parms;

	pFnSendMenuBack->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMenuBack, &SendMenuBack_Parms, NULL );

	pFnSendMenuBack->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.RevertSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::RevertSetting ( )
{
	static UFunction* pFnRevertSetting = NULL;

	if ( ! pFnRevertSetting )
		pFnRevertSetting = (UFunction*) UObject::GObjObjects()->Data[ 75817 ];

	ATrPlayerController_execRevertSetting_Parms RevertSetting_Parms;

	pFnRevertSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRevertSetting, &RevertSetting_Parms, NULL );

	pFnRevertSetting->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.GetUserSelectedClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerController::GetUserSelectedClass ( )
{
	static UFunction* pFnGetUserSelectedClass = NULL;

	if ( ! pFnGetUserSelectedClass )
		pFnGetUserSelectedClass = (UFunction*) UObject::GObjObjects()->Data[ 75815 ];

	ATrPlayerController_execGetUserSelectedClass_Parms GetUserSelectedClass_Parms;

	pFnGetUserSelectedClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUserSelectedClass, &GetUserSelectedClass_Parms, NULL );

	pFnGetUserSelectedClass->FunctionFlags |= 0x400;

	return GetUserSelectedClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.SetMenuMatchCountdown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrPlayerController::SetMenuMatchCountdown ( int Seconds )
{
	static UFunction* pFnSetMenuMatchCountdown = NULL;

	if ( ! pFnSetMenuMatchCountdown )
		pFnSetMenuMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 75813 ];

	ATrPlayerController_execSetMenuMatchCountdown_Parms SetMenuMatchCountdown_Parms;
	SetMenuMatchCountdown_Parms.Seconds = Seconds;

	pFnSetMenuMatchCountdown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMenuMatchCountdown, &SetMenuMatchCountdown_Parms, NULL );

	pFnSetMenuMatchCountdown->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.KickVoteReply
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bVote                          ( CPF_Parm )

void ATrPlayerController::KickVoteReply ( unsigned long bVote )
{
	static UFunction* pFnKickVoteReply = NULL;

	if ( ! pFnKickVoteReply )
		pFnKickVoteReply = (UFunction*) UObject::GObjObjects()->Data[ 75811 ];

	ATrPlayerController_execKickVoteReply_Parms KickVoteReply_Parms;
	KickVoteReply_Parms.bVote = bVote;

	pFnKickVoteReply->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKickVoteReply, &KickVoteReply_Parms, NULL );

	pFnKickVoteReply->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.BeginExperienceTweens
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::BeginExperienceTweens ( )
{
	static UFunction* pFnBeginExperienceTweens = NULL;

	if ( ! pFnBeginExperienceTweens )
		pFnBeginExperienceTweens = (UFunction*) UObject::GObjObjects()->Data[ 75810 ];

	ATrPlayerController_execBeginExperienceTweens_Parms BeginExperienceTweens_Parms;

	pFnBeginExperienceTweens->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBeginExperienceTweens, &BeginExperienceTweens_Parms, NULL );

	pFnBeginExperienceTweens->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SetMenuEndOfMatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::SetMenuEndOfMatch ( )
{
	static UFunction* pFnSetMenuEndOfMatch = NULL;

	if ( ! pFnSetMenuEndOfMatch )
		pFnSetMenuEndOfMatch = (UFunction*) UObject::GObjObjects()->Data[ 75809 ];

	ATrPlayerController_execSetMenuEndOfMatch_Parms SetMenuEndOfMatch_Parms;

	pFnSetMenuEndOfMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMenuEndOfMatch, &SetMenuEndOfMatch_Parms, NULL );

	pFnSetMenuEndOfMatch->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SetMenuSummaryScreen
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::SetMenuSummaryScreen ( )
{
	static UFunction* pFnSetMenuSummaryScreen = NULL;

	if ( ! pFnSetMenuSummaryScreen )
		pFnSetMenuSummaryScreen = (UFunction*) UObject::GObjObjects()->Data[ 75808 ];

	ATrPlayerController_execSetMenuSummaryScreen_Parms SetMenuSummaryScreen_Parms;

	pFnSetMenuSummaryScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMenuSummaryScreen, &SetMenuSummaryScreen_Parms, NULL );

	pFnSetMenuSummaryScreen->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.TweenSummaryScreen
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::TweenSummaryScreen ( )
{
	static UFunction* pFnTweenSummaryScreen = NULL;

	if ( ! pFnTweenSummaryScreen )
		pFnTweenSummaryScreen = (UFunction*) UObject::GObjObjects()->Data[ 75807 ];

	ATrPlayerController_execTweenSummaryScreen_Parms TweenSummaryScreen_Parms;

	pFnTweenSummaryScreen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTweenSummaryScreen, &TweenSummaryScreen_Parms, NULL );

	pFnTweenSummaryScreen->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SendMenuToLobby
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::SendMenuToLobby ( )
{
	static UFunction* pFnSendMenuToLobby = NULL;

	if ( ! pFnSendMenuToLobby )
		pFnSendMenuToLobby = (UFunction*) UObject::GObjObjects()->Data[ 75806 ];

	ATrPlayerController_execSendMenuToLobby_Parms SendMenuToLobby_Parms;

	pFnSendMenuToLobby->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMenuToLobby, &SendMenuToLobby_Parms, NULL );

	pFnSendMenuToLobby->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SetMenuInGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerController::SetMenuInGame ( )
{
	static UFunction* pFnSetMenuInGame = NULL;

	if ( ! pFnSetMenuInGame )
		pFnSetMenuInGame = (UFunction*) UObject::GObjObjects()->Data[ 75805 ];

	ATrPlayerController_execSetMenuInGame_Parms SetMenuInGame_Parms;

	pFnSetMenuInGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMenuInGame, &SetMenuInGame_Parms, NULL );

	pFnSetMenuInGame->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.MainMenuIsOpen
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerController::MainMenuIsOpen ( )
{
	static UFunction* pFnMainMenuIsOpen = NULL;

	if ( ! pFnMainMenuIsOpen )
		pFnMainMenuIsOpen = (UFunction*) UObject::GObjObjects()->Data[ 75803 ];

	ATrPlayerController_execMainMenuIsOpen_Parms MainMenuIsOpen_Parms;

	pFnMainMenuIsOpen->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMainMenuIsOpen, &MainMenuIsOpen_Parms, NULL );

	pFnMainMenuIsOpen->FunctionFlags |= 0x400;

	return MainMenuIsOpen_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerController.KickPlayerFromMatch
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Reason                         ( CPF_Parm )

void ATrPlayerController::KickPlayerFromMatch ( int Reason )
{
	static UFunction* pFnKickPlayerFromMatch = NULL;

	if ( ! pFnKickPlayerFromMatch )
		pFnKickPlayerFromMatch = (UFunction*) UObject::GObjObjects()->Data[ 75801 ];

	ATrPlayerController_execKickPlayerFromMatch_Parms KickPlayerFromMatch_Parms;
	KickPlayerFromMatch_Parms.Reason = Reason;

	pFnKickPlayerFromMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKickPlayerFromMatch, &KickPlayerFromMatch_Parms, NULL );

	pFnKickPlayerFromMatch->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SetHitValidationMode
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            loggingMode                    ( CPF_Parm )
// int                            validationMode                 ( CPF_Parm )

void ATrPlayerController::SetHitValidationMode ( int loggingMode, int validationMode )
{
	static UFunction* pFnSetHitValidationMode = NULL;

	if ( ! pFnSetHitValidationMode )
		pFnSetHitValidationMode = (UFunction*) UObject::GObjObjects()->Data[ 75798 ];

	ATrPlayerController_execSetHitValidationMode_Parms SetHitValidationMode_Parms;
	SetHitValidationMode_Parms.loggingMode = loggingMode;
	SetHitValidationMode_Parms.validationMode = validationMode;

	pFnSetHitValidationMode->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetHitValidationMode, &SetHitValidationMode_Parms, NULL );

	pFnSetHitValidationMode->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.ShowAdminPage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ServerURL                      ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::ShowAdminPage ( struct FString ServerURL )
{
	static UFunction* pFnShowAdminPage = NULL;

	if ( ! pFnShowAdminPage )
		pFnShowAdminPage = (UFunction*) UObject::GObjObjects()->Data[ 75796 ];

	ATrPlayerController_execShowAdminPage_Parms ShowAdminPage_Parms;
	memcpy ( &ShowAdminPage_Parms.ServerURL, &ServerURL, 0xC );

	pFnShowAdminPage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowAdminPage, &ShowAdminPage_Parms, NULL );

	pFnShowAdminPage->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.TestSteamPurchase
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrPlayerController::TestSteamPurchase ( )
{
	static UFunction* pFnTestSteamPurchase = NULL;

	if ( ! pFnTestSteamPurchase )
		pFnTestSteamPurchase = (UFunction*) UObject::GObjObjects()->Data[ 75795 ];

	ATrPlayerController_execTestSteamPurchase_Parms TestSteamPurchase_Parms;

	pFnTestSteamPurchase->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTestSteamPurchase, &TestSteamPurchase_Parms, NULL );

	pFnTestSteamPurchase->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SendGameRequest
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 fsRequest                      ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::SendGameRequest ( struct FString fsRequest )
{
	static UFunction* pFnSendGameRequest = NULL;

	if ( ! pFnSendGameRequest )
		pFnSendGameRequest = (UFunction*) UObject::GObjObjects()->Data[ 75793 ];

	ATrPlayerController_execSendGameRequest_Parms SendGameRequest_Parms;
	memcpy ( &SendGameRequest_Parms.fsRequest, &fsRequest, 0xC );

	pFnSendGameRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendGameRequest, &SendGameRequest_Parms, NULL );

	pFnSendGameRequest->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerController.SendCtrlRequest
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:
// struct FString                 fsRequest                      ( CPF_Parm | CPF_NeedCtorLink )

void ATrPlayerController::SendCtrlRequest ( struct FString fsRequest )
{
	static UFunction* pFnSendCtrlRequest = NULL;

	if ( ! pFnSendCtrlRequest )
		pFnSendCtrlRequest = (UFunction*) UObject::GObjObjects()->Data[ 75791 ];

	ATrPlayerController_execSendCtrlRequest_Parms SendCtrlRequest_Parms;
	memcpy ( &SendCtrlRequest_Parms.fsRequest, &fsRequest, 0xC );

	pFnSendCtrlRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendCtrlRequest, &SendCtrlRequest_Parms, NULL );

	pFnSendCtrlRequest->FunctionFlags |= 0x400;
};

// Function TribesGame.TrChatConsoleCommands.SpecList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UTrChatConsoleCommands::SpecList ( )
{
	static UFunction* pFnSpecList = NULL;

	if ( ! pFnSpecList )
		pFnSpecList = (UFunction*) UObject::GObjObjects()->Data[ 74003 ];

	UTrChatConsoleCommands_execSpecList_Parms SpecList_Parms;

	this->ProcessEvent ( pFnSpecList, &SpecList_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.SendGameRequest
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 fsRequest                      ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::SendGameRequest ( struct FString fsRequest )
{
	static UFunction* pFnSendGameRequest = NULL;

	if ( ! pFnSendGameRequest )
		pFnSendGameRequest = (UFunction*) UObject::GObjObjects()->Data[ 74001 ];

	UTrChatConsoleCommands_execSendGameRequest_Parms SendGameRequest_Parms;
	memcpy ( &SendGameRequest_Parms.fsRequest, &fsRequest, 0xC );

	this->ProcessEvent ( pFnSendGameRequest, &SendGameRequest_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.SendCtrlRequest
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 fsRequest                      ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::SendCtrlRequest ( struct FString fsRequest )
{
	static UFunction* pFnSendCtrlRequest = NULL;

	if ( ! pFnSendCtrlRequest )
		pFnSendCtrlRequest = (UFunction*) UObject::GObjObjects()->Data[ 73999 ];

	UTrChatConsoleCommands_execSendCtrlRequest_Parms SendCtrlRequest_Parms;
	memcpy ( &SendCtrlRequest_Parms.fsRequest, &fsRequest, 0xC );

	this->ProcessEvent ( pFnSendCtrlRequest, &SendCtrlRequest_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.SC
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 fsRequest                      ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::SC ( struct FString fsRequest )
{
	static UFunction* pFnSC = NULL;

	if ( ! pFnSC )
		pFnSC = (UFunction*) UObject::GObjObjects()->Data[ 73997 ];

	UTrChatConsoleCommands_execSC_Parms SC_Parms;
	memcpy ( &SC_Parms.fsRequest, &fsRequest, 0xC );

	this->ProcessEvent ( pFnSC, &SC_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.GiveCredits
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Count                          ( CPF_Parm )

void UTrChatConsoleCommands::GiveCredits ( int Count )
{
	static UFunction* pFnGiveCredits = NULL;

	if ( ! pFnGiveCredits )
		pFnGiveCredits = (UFunction*) UObject::GObjObjects()->Data[ 73995 ];

	UTrChatConsoleCommands_execGiveCredits_Parms GiveCredits_Parms;
	GiveCredits_Parms.Count = Count;

	this->ProcessEvent ( pFnGiveCredits, &GiveCredits_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Quit
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UTrChatConsoleCommands::Quit ( )
{
	static UFunction* pFnQuit = NULL;

	if ( ! pFnQuit )
		pFnQuit = (UFunction*) UObject::GObjObjects()->Data[ 73994 ];

	UTrChatConsoleCommands_execQuit_Parms Quit_Parms;

	this->ProcessEvent ( pFnQuit, &Quit_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Exit
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UTrChatConsoleCommands::Exit ( )
{
	static UFunction* pFnExit = NULL;

	if ( ! pFnExit )
		pFnExit = (UFunction*) UObject::GObjObjects()->Data[ 73993 ];

	UTrChatConsoleCommands_execExit_Parms Exit_Parms;

	this->ProcessEvent ( pFnExit, &Exit_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Tell
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Tell ( struct FString PlayerName, struct FString Message )
{
	static UFunction* pFnTell = NULL;

	if ( ! pFnTell )
		pFnTell = (UFunction*) UObject::GObjObjects()->Data[ 73990 ];

	UTrChatConsoleCommands_execTell_Parms Tell_Parms;
	memcpy ( &Tell_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &Tell_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnTell, &Tell_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Report
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Report ( struct FString PlayerName, struct FString Reason )
{
	static UFunction* pFnReport = NULL;

	if ( ! pFnReport )
		pFnReport = (UFunction*) UObject::GObjObjects()->Data[ 73987 ];

	UTrChatConsoleCommands_execReport_Parms Report_Parms;
	memcpy ( &Report_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &Report_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnReport, &Report_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Votekick
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Votekick ( struct FString PlayerName )
{
	static UFunction* pFnVotekick = NULL;

	if ( ! pFnVotekick )
		pFnVotekick = (UFunction*) UObject::GObjObjects()->Data[ 73985 ];

	UTrChatConsoleCommands_execVotekick_Parms Votekick_Parms;
	memcpy ( &Votekick_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnVotekick, &Votekick_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Unmute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Unmute ( struct FString PlayerName )
{
	static UFunction* pFnUnmute = NULL;

	if ( ! pFnUnmute )
		pFnUnmute = (UFunction*) UObject::GObjObjects()->Data[ 73983 ];

	UTrChatConsoleCommands_execUnmute_Parms Unmute_Parms;
	memcpy ( &Unmute_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnUnmute, &Unmute_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Mute
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Mute ( struct FString PlayerName )
{
	static UFunction* pFnMute = NULL;

	if ( ! pFnMute )
		pFnMute = (UFunction*) UObject::GObjObjects()->Data[ 73981 ];

	UTrChatConsoleCommands_execMute_Parms Mute_Parms;
	memcpy ( &Mute_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnMute, &Mute_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.TeamSay
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::TeamSay ( struct FString msg )
{
	static UFunction* pFnTeamSay = NULL;

	if ( ! pFnTeamSay )
		pFnTeamSay = (UFunction*) UObject::GObjObjects()->Data[ 73979 ];

	UTrChatConsoleCommands_execTeamSay_Parms TeamSay_Parms;
	memcpy ( &TeamSay_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnTeamSay, &TeamSay_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.Say
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::Say ( struct FString msg )
{
	static UFunction* pFnSay = NULL;

	if ( ! pFnSay )
		pFnSay = (UFunction*) UObject::GObjObjects()->Data[ 73977 ];

	UTrChatConsoleCommands_execSay_Parms Say_Parms;
	memcpy ( &Say_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnSay, &Say_Parms, NULL );
};

// Function TribesGame.TrChatConsoleCommands.ReportPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::ReportPlayer ( struct FString PlayerName, struct FString Reason )
{
	static UFunction* pFnReportPlayer = NULL;

	if ( ! pFnReportPlayer )
		pFnReportPlayer = (UFunction*) UObject::GObjObjects()->Data[ 73974 ];

	UTrChatConsoleCommands_execReportPlayer_Parms ReportPlayer_Parms;
	memcpy ( &ReportPlayer_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &ReportPlayer_Parms.Reason, &Reason, 0xC );

	pFnReportPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReportPlayer, &ReportPlayer_Parms, NULL );

	pFnReportPlayer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrChatConsoleCommands.ChatConsoleCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsoleCommands::ChatConsoleCommand ( struct FString Command )
{
	static UFunction* pFnChatConsoleCommand = NULL;

	if ( ! pFnChatConsoleCommand )
		pFnChatConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 73972 ];

	UTrChatConsoleCommands_execChatConsoleCommand_Parms ChatConsoleCommand_Parms;
	memcpy ( &ChatConsoleCommand_Parms.Command, &Command, 0xC );

	pFnChatConsoleCommand->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChatConsoleCommand, &ChatConsoleCommand_Parms, NULL );

	pFnChatConsoleCommand->FunctionFlags |= 0x400;
};

// Function TribesGame.TrCollisionProxy.FellOutOfWorld
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class UClass*                  dmgType                        ( CPF_Parm )

void ATrCollisionProxy::eventFellOutOfWorld ( class UClass* dmgType )
{
	static UFunction* pFnFellOutOfWorld = NULL;

	if ( ! pFnFellOutOfWorld )
		pFnFellOutOfWorld = (UFunction*) UObject::GObjObjects()->Data[ 74132 ];

	ATrCollisionProxy_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.GetNearByPawns
// [0x00024102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bOnlyValid                     ( CPF_OptionalParm | CPF_Parm )

int ATrCollisionProxy::GetNearByPawns ( unsigned long bOnlyValid )
{
	static UFunction* pFnGetNearByPawns = NULL;

	if ( ! pFnGetNearByPawns )
		pFnGetNearByPawns = (UFunction*) UObject::GObjObjects()->Data[ 74126 ];

	ATrCollisionProxy_execGetNearByPawns_Parms GetNearByPawns_Parms;
	GetNearByPawns_Parms.bOnlyValid = bOnlyValid;

	this->ProcessEvent ( pFnGetNearByPawns, &GetNearByPawns_Parms, NULL );

	return GetNearByPawns_Parms.ReturnValue;
};

// Function TribesGame.TrCollisionProxy.OnPawnRemoved
// [0x00020100] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 74124 ];

	ATrCollisionProxy_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.OnPawnAdded
// [0x00020100] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 74122 ];

	ATrCollisionProxy_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.CheckNearByPawns
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bAdd                           ( CPF_Parm )

void ATrCollisionProxy::CheckNearByPawns ( class APawn* aPawn, unsigned long bAdd )
{
	static UFunction* pFnCheckNearByPawns = NULL;

	if ( ! pFnCheckNearByPawns )
		pFnCheckNearByPawns = (UFunction*) UObject::GObjObjects()->Data[ 74116 ];

	ATrCollisionProxy_execCheckNearByPawns_Parms CheckNearByPawns_Parms;
	CheckNearByPawns_Parms.aPawn = aPawn;
	CheckNearByPawns_Parms.bAdd = bAdd;

	this->ProcessEvent ( pFnCheckNearByPawns, &CheckNearByPawns_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 74115 ];

	ATrCollisionProxy_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.ForceClearNearByPawnsList
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy::ForceClearNearByPawnsList ( )
{
	static UFunction* pFnForceClearNearByPawnsList = NULL;

	if ( ! pFnForceClearNearByPawnsList )
		pFnForceClearNearByPawnsList = (UFunction*) UObject::GObjObjects()->Data[ 74113 ];

	ATrCollisionProxy_execForceClearNearByPawnsList_Parms ForceClearNearByPawnsList_Parms;

	this->ProcessEvent ( pFnForceClearNearByPawnsList, &ForceClearNearByPawnsList_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.ShouldIgnoreActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Actor                          ( CPF_Parm )

bool ATrCollisionProxy::eventShouldIgnoreActor ( class AActor* Actor )
{
	static UFunction* pFnShouldIgnoreActor = NULL;

	if ( ! pFnShouldIgnoreActor )
		pFnShouldIgnoreActor = (UFunction*) UObject::GObjObjects()->Data[ 74110 ];

	ATrCollisionProxy_eventShouldIgnoreActor_Parms ShouldIgnoreActor_Parms;
	ShouldIgnoreActor_Parms.Actor = Actor;

	this->ProcessEvent ( pFnShouldIgnoreActor, &ShouldIgnoreActor_Parms, NULL );

	return ShouldIgnoreActor_Parms.ReturnValue;
};

// Function TribesGame.TrCollisionProxy.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrCollisionProxy::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74107 ];

	ATrCollisionProxy_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrCollisionProxy::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74101 ];

	ATrCollisionProxy_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.ForceProximityScan
// [0x00024102] 
// Parameters infos:
// float                          Radius                         ( CPF_OptionalParm | CPF_Parm )

void ATrCollisionProxy::ForceProximityScan ( float Radius )
{
	static UFunction* pFnForceProximityScan = NULL;

	if ( ! pFnForceProximityScan )
		pFnForceProximityScan = (UFunction*) UObject::GObjObjects()->Data[ 74098 ];

	ATrCollisionProxy_execForceProximityScan_Parms ForceProximityScan_Parms;
	ForceProximityScan_Parms.Radius = Radius;

	this->ProcessEvent ( pFnForceProximityScan, &ForceProximityScan_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy.TouchOther
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )

void ATrCollisionProxy::TouchOther ( class AActor* Other, class UPrimitiveComponent* OtherComp )
{
	static UFunction* pFnTouchOther = NULL;

	if ( ! pFnTouchOther )
		pFnTouchOther = (UFunction*) UObject::GObjObjects()->Data[ 74095 ];

	ATrCollisionProxy_execTouchOther_Parms TouchOther_Parms;
	TouchOther_Parms.Other = Other;
	TouchOther_Parms.OtherComp = OtherComp;

	pFnTouchOther->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTouchOther, &TouchOther_Parms, NULL );

	pFnTouchOther->FunctionFlags |= 0x400;
};

// Function TribesGame.TrMineCollisionProxy.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrMineCollisionProxy::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 99216 ];

	ATrMineCollisionProxy_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrMineCollisionProxy.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrMineCollisionProxy::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 99213 ];

	ATrMineCollisionProxy_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrProximityGrenadeCollisionProxy.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProximityGrenadeCollisionProxy::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 108537 ];

	ATrProximityGrenadeCollisionProxy_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrProximityGrenadeCollisionProxy.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrProximityGrenadeCollisionProxy::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 108534 ];

	ATrProximityGrenadeCollisionProxy_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrProximityGrenadeCollisionProxy.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrProximityGrenadeCollisionProxy::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 108531 ];

	ATrProximityGrenadeCollisionProxy_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrContentLoader.StartLoadingPlayerSkin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            skinId                         ( CPF_Parm )
// unsigned long                  bLoad1PData                    ( CPF_Parm )

void UTrContentLoader::StartLoadingPlayerSkin ( int ClassId, int skinId, unsigned long bLoad1PData )
{
	static UFunction* pFnStartLoadingPlayerSkin = NULL;

	if ( ! pFnStartLoadingPlayerSkin )
		pFnStartLoadingPlayerSkin = (UFunction*) UObject::GObjObjects()->Data[ 77738 ];

	UTrContentLoader_execStartLoadingPlayerSkin_Parms StartLoadingPlayerSkin_Parms;
	StartLoadingPlayerSkin_Parms.ClassId = ClassId;
	StartLoadingPlayerSkin_Parms.skinId = skinId;
	StartLoadingPlayerSkin_Parms.bLoad1PData = bLoad1PData;

	pFnStartLoadingPlayerSkin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartLoadingPlayerSkin, &StartLoadingPlayerSkin_Parms, NULL );

	pFnStartLoadingPlayerSkin->FunctionFlags |= 0x400;
};

// Function TribesGame.TrContentLoader.StartLoadingDeviceContentPackage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  WeaponClass                    ( CPF_Parm )

bool UTrContentLoader::StartLoadingDeviceContentPackage ( class UClass* WeaponClass )
{
	static UFunction* pFnStartLoadingDeviceContentPackage = NULL;

	if ( ! pFnStartLoadingDeviceContentPackage )
		pFnStartLoadingDeviceContentPackage = (UFunction*) UObject::GObjObjects()->Data[ 76749 ];

	UTrContentLoader_execStartLoadingDeviceContentPackage_Parms StartLoadingDeviceContentPackage_Parms;
	StartLoadingDeviceContentPackage_Parms.WeaponClass = WeaponClass;

	pFnStartLoadingDeviceContentPackage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStartLoadingDeviceContentPackage, &StartLoadingDeviceContentPackage_Parms, NULL );

	pFnStartLoadingDeviceContentPackage->FunctionFlags |= 0x400;

	return StartLoadingDeviceContentPackage_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.GetHUDObjectivesValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetHUDObjectivesValue ( )
{
	static UFunction* pFnGetHUDObjectivesValue = NULL;

	if ( ! pFnGetHUDObjectivesValue )
		pFnGetHUDObjectivesValue = (UFunction*) UObject::GObjObjects()->Data[ 77816 ];

	UTrControlSettings_execGetHUDObjectivesValue_Parms GetHUDObjectivesValue_Parms;

	this->ProcessEvent ( pFnGetHUDObjectivesValue, &GetHUDObjectivesValue_Parms, NULL );

	return GetHUDObjectivesValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveHUDObjectivesValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveHUDObjectivesValue ( int val )
{
	static UFunction* pFnSaveHUDObjectivesValue = NULL;

	if ( ! pFnSaveHUDObjectivesValue )
		pFnSaveHUDObjectivesValue = (UFunction*) UObject::GObjObjects()->Data[ 77814 ];

	UTrControlSettings_execSaveHUDObjectivesValue_Parms SaveHUDObjectivesValue_Parms;
	SaveHUDObjectivesValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveHUDObjectivesValue, &SaveHUDObjectivesValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetDamageCounterValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetDamageCounterValue ( )
{
	static UFunction* pFnGetDamageCounterValue = NULL;

	if ( ! pFnGetDamageCounterValue )
		pFnGetDamageCounterValue = (UFunction*) UObject::GObjObjects()->Data[ 77812 ];

	UTrControlSettings_execGetDamageCounterValue_Parms GetDamageCounterValue_Parms;

	this->ProcessEvent ( pFnGetDamageCounterValue, &GetDamageCounterValue_Parms, NULL );

	return GetDamageCounterValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveDamageCounterValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveDamageCounterValue ( int val )
{
	static UFunction* pFnSaveDamageCounterValue = NULL;

	if ( ! pFnSaveDamageCounterValue )
		pFnSaveDamageCounterValue = (UFunction*) UObject::GObjObjects()->Data[ 77810 ];

	UTrControlSettings_execSaveDamageCounterValue_Parms SaveDamageCounterValue_Parms;
	SaveDamageCounterValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveDamageCounterValue, &SaveDamageCounterValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetHelpTextValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetHelpTextValue ( )
{
	static UFunction* pFnGetHelpTextValue = NULL;

	if ( ! pFnGetHelpTextValue )
		pFnGetHelpTextValue = (UFunction*) UObject::GObjObjects()->Data[ 77808 ];

	UTrControlSettings_execGetHelpTextValue_Parms GetHelpTextValue_Parms;

	this->ProcessEvent ( pFnGetHelpTextValue, &GetHelpTextValue_Parms, NULL );

	return GetHelpTextValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveHelpTextValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveHelpTextValue ( int val )
{
	static UFunction* pFnSaveHelpTextValue = NULL;

	if ( ! pFnSaveHelpTextValue )
		pFnSaveHelpTextValue = (UFunction*) UObject::GObjObjects()->Data[ 77803 ];

	UTrControlSettings_execSaveHelpTextValue_Parms SaveHelpTextValue_Parms;
	SaveHelpTextValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveHelpTextValue, &SaveHelpTextValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetWhisperNotificationsValue
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrControlSettings::GetWhisperNotificationsValue ( )
{
	static UFunction* pFnGetWhisperNotificationsValue = NULL;

	if ( ! pFnGetWhisperNotificationsValue )
		pFnGetWhisperNotificationsValue = (UFunction*) UObject::GObjObjects()->Data[ 77801 ];

	UTrControlSettings_execGetWhisperNotificationsValue_Parms GetWhisperNotificationsValue_Parms;

	this->ProcessEvent ( pFnGetWhisperNotificationsValue, &GetWhisperNotificationsValue_Parms, NULL );

	return GetWhisperNotificationsValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveWhisperNotificationsValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveWhisperNotificationsValue ( int val )
{
	static UFunction* pFnSaveWhisperNotificationsValue = NULL;

	if ( ! pFnSaveWhisperNotificationsValue )
		pFnSaveWhisperNotificationsValue = (UFunction*) UObject::GObjObjects()->Data[ 77799 ];

	UTrControlSettings_execSaveWhisperNotificationsValue_Parms SaveWhisperNotificationsValue_Parms;
	SaveWhisperNotificationsValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveWhisperNotificationsValue, &SaveWhisperNotificationsValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetHUDFriendStateNotifications
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetHUDFriendStateNotifications ( )
{
	static UFunction* pFnGetHUDFriendStateNotifications = NULL;

	if ( ! pFnGetHUDFriendStateNotifications )
		pFnGetHUDFriendStateNotifications = (UFunction*) UObject::GObjObjects()->Data[ 77797 ];

	UTrControlSettings_execGetHUDFriendStateNotifications_Parms GetHUDFriendStateNotifications_Parms;

	this->ProcessEvent ( pFnGetHUDFriendStateNotifications, &GetHUDFriendStateNotifications_Parms, NULL );

	return GetHUDFriendStateNotifications_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveHUDFriendStateNotificationsValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveHUDFriendStateNotificationsValue ( int val )
{
	static UFunction* pFnSaveHUDFriendStateNotificationsValue = NULL;

	if ( ! pFnSaveHUDFriendStateNotificationsValue )
		pFnSaveHUDFriendStateNotificationsValue = (UFunction*) UObject::GObjObjects()->Data[ 77795 ];

	UTrControlSettings_execSaveHUDFriendStateNotificationsValue_Parms SaveHUDFriendStateNotificationsValue_Parms;
	SaveHUDFriendStateNotificationsValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveHUDFriendStateNotificationsValue, &SaveHUDFriendStateNotificationsValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetChatFilterValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetChatFilterValue ( )
{
	static UFunction* pFnGetChatFilterValue = NULL;

	if ( ! pFnGetChatFilterValue )
		pFnGetChatFilterValue = (UFunction*) UObject::GObjObjects()->Data[ 77793 ];

	UTrControlSettings_execGetChatFilterValue_Parms GetChatFilterValue_Parms;

	this->ProcessEvent ( pFnGetChatFilterValue, &GetChatFilterValue_Parms, NULL );

	return GetChatFilterValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveChatFilterValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveChatFilterValue ( int val )
{
	static UFunction* pFnSaveChatFilterValue = NULL;

	if ( ! pFnSaveChatFilterValue )
		pFnSaveChatFilterValue = (UFunction*) UObject::GObjObjects()->Data[ 77791 ];

	UTrControlSettings_execSaveChatFilterValue_Parms SaveChatFilterValue_Parms;
	SaveChatFilterValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveChatFilterValue, &SaveChatFilterValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.SaveAlienFXValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveAlienFXValue ( int val )
{
	static UFunction* pFnSaveAlienFXValue = NULL;

	if ( ! pFnSaveAlienFXValue )
		pFnSaveAlienFXValue = (UFunction*) UObject::GObjObjects()->Data[ 77789 ];

	UTrControlSettings_execSaveAlienFXValue_Parms SaveAlienFXValue_Parms;
	SaveAlienFXValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveAlienFXValue, &SaveAlienFXValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetAlienFXValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetAlienFXValue ( )
{
	static UFunction* pFnGetAlienFXValue = NULL;

	if ( ! pFnGetAlienFXValue )
		pFnGetAlienFXValue = (UFunction*) UObject::GObjObjects()->Data[ 77787 ];

	UTrControlSettings_execGetAlienFXValue_Parms GetAlienFXValue_Parms;

	this->ProcessEvent ( pFnGetAlienFXValue, &GetAlienFXValue_Parms, NULL );

	return GetAlienFXValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.GetTinyWeaponValue
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrControlSettings::GetTinyWeaponValue ( )
{
	static UFunction* pFnGetTinyWeaponValue = NULL;

	if ( ! pFnGetTinyWeaponValue )
		pFnGetTinyWeaponValue = (UFunction*) UObject::GObjObjects()->Data[ 77785 ];

	UTrControlSettings_execGetTinyWeaponValue_Parms GetTinyWeaponValue_Parms;

	this->ProcessEvent ( pFnGetTinyWeaponValue, &GetTinyWeaponValue_Parms, NULL );

	return GetTinyWeaponValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveTinyWeaponValue
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrControlSettings::SaveTinyWeaponValue ( int val )
{
	static UFunction* pFnSaveTinyWeaponValue = NULL;

	if ( ! pFnSaveTinyWeaponValue )
		pFnSaveTinyWeaponValue = (UFunction*) UObject::GObjObjects()->Data[ 77783 ];

	UTrControlSettings_execSaveTinyWeaponValue_Parms SaveTinyWeaponValue_Parms;
	SaveTinyWeaponValue_Parms.val = val;

	this->ProcessEvent ( pFnSaveTinyWeaponValue, &SaveTinyWeaponValue_Parms, NULL );
};

// Function TribesGame.TrControlSettings.UpdateRuntimePlayer
// [0x00020002] 
// Parameters infos:
// class UPlayerInput*            EngineInput                    ( CPF_Parm )

void UTrControlSettings::UpdateRuntimePlayer ( class UPlayerInput* EngineInput )
{
	static UFunction* pFnUpdateRuntimePlayer = NULL;

	if ( ! pFnUpdateRuntimePlayer )
		pFnUpdateRuntimePlayer = (UFunction*) UObject::GObjObjects()->Data[ 77780 ];

	UTrControlSettings_execUpdateRuntimePlayer_Parms UpdateRuntimePlayer_Parms;
	UpdateRuntimePlayer_Parms.EngineInput = EngineInput;

	this->ProcessEvent ( pFnUpdateRuntimePlayer, &UpdateRuntimePlayer_Parms, NULL );
};

// Function TribesGame.TrControlSettings.GetPlayerInput
// [0x00020002] 
// Parameters infos:
// class UPlayerInput*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerInput* UTrControlSettings::GetPlayerInput ( )
{
	static UFunction* pFnGetPlayerInput = NULL;

	if ( ! pFnGetPlayerInput )
		pFnGetPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 77777 ];

	UTrControlSettings_execGetPlayerInput_Parms GetPlayerInput_Parms;

	this->ProcessEvent ( pFnGetPlayerInput, &GetPlayerInput_Parms, NULL );

	return GetPlayerInput_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.GetControlNameFromType
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Index                          ( CPF_Parm )

struct FString UTrControlSettings::GetControlNameFromType ( unsigned char Index )
{
	static UFunction* pFnGetControlNameFromType = NULL;

	if ( ! pFnGetControlNameFromType )
		pFnGetControlNameFromType = (UFunction*) UObject::GObjObjects()->Data[ 77774 ];

	UTrControlSettings_execGetControlNameFromType_Parms GetControlNameFromType_Parms;
	GetControlNameFromType_Parms.Index = Index;

	this->ProcessEvent ( pFnGetControlNameFromType, &GetControlNameFromType_Parms, NULL );

	return GetControlNameFromType_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.GetControlTypeFromName
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ControlName                    ( CPF_Parm | CPF_NeedCtorLink )

unsigned char UTrControlSettings::GetControlTypeFromName ( struct FString ControlName )
{
	static UFunction* pFnGetControlTypeFromName = NULL;

	if ( ! pFnGetControlTypeFromName )
		pFnGetControlTypeFromName = (UFunction*) UObject::GObjObjects()->Data[ 77771 ];

	UTrControlSettings_execGetControlTypeFromName_Parms GetControlTypeFromName_Parms;
	memcpy ( &GetControlTypeFromName_Parms.ControlName, &ControlName, 0xC );

	this->ProcessEvent ( pFnGetControlTypeFromName, &GetControlTypeFromName_Parms, NULL );

	return GetControlTypeFromName_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.GetCurrentControlValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Index                          ( CPF_Parm )

float UTrControlSettings::GetCurrentControlValue ( unsigned char Index )
{
	static UFunction* pFnGetCurrentControlValue = NULL;

	if ( ! pFnGetCurrentControlValue )
		pFnGetCurrentControlValue = (UFunction*) UObject::GObjObjects()->Data[ 58123 ];

	UTrControlSettings_execGetCurrentControlValue_Parms GetCurrentControlValue_Parms;
	GetCurrentControlValue_Parms.Index = Index;

	this->ProcessEvent ( pFnGetCurrentControlValue, &GetCurrentControlValue_Parms, NULL );

	return GetCurrentControlValue_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.SaveControlSetting
// [0x00024002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// float                          val                            ( CPF_Parm )
// unsigned long                  bStore                         ( CPF_OptionalParm | CPF_Parm )

void UTrControlSettings::SaveControlSetting ( int Index, float val, unsigned long bStore )
{
	static UFunction* pFnSaveControlSetting = NULL;

	if ( ! pFnSaveControlSetting )
		pFnSaveControlSetting = (UFunction*) UObject::GObjObjects()->Data[ 77763 ];

	UTrControlSettings_execSaveControlSetting_Parms SaveControlSetting_Parms;
	SaveControlSetting_Parms.Index = Index;
	SaveControlSetting_Parms.val = val;
	SaveControlSetting_Parms.bStore = bStore;

	this->ProcessEvent ( pFnSaveControlSetting, &SaveControlSetting_Parms, NULL );
};

// Function TribesGame.TrControlSettings.AddControlSetting
// [0x00020002] 
// Parameters infos:
// struct FString                 ControlName                    ( CPF_Parm | CPF_NeedCtorLink )
// float                          val                            ( CPF_Parm )

void UTrControlSettings::AddControlSetting ( struct FString ControlName, float val )
{
	static UFunction* pFnAddControlSetting = NULL;

	if ( ! pFnAddControlSetting )
		pFnAddControlSetting = (UFunction*) UObject::GObjObjects()->Data[ 77759 ];

	UTrControlSettings_execAddControlSetting_Parms AddControlSetting_Parms;
	memcpy ( &AddControlSetting_Parms.ControlName, &ControlName, 0xC );
	AddControlSetting_Parms.val = val;

	this->ProcessEvent ( pFnAddControlSetting, &AddControlSetting_Parms, NULL );
};

// Function TribesGame.TrControlSettings.LoadControlSettings
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrControlSettings::LoadControlSettings ( class UGFxObject* List )
{
	static UFunction* pFnLoadControlSettings = NULL;

	if ( ! pFnLoadControlSettings )
		pFnLoadControlSettings = (UFunction*) UObject::GObjObjects()->Data[ 77754 ];

	UTrControlSettings_execLoadControlSettings_Parms LoadControlSettings_Parms;
	LoadControlSettings_Parms.List = List;

	this->ProcessEvent ( pFnLoadControlSettings, &LoadControlSettings_Parms, NULL );
};

// Function TribesGame.TrControlSettings.ReadSettings
// [0x00020002] 
// Parameters infos:

void UTrControlSettings::ReadSettings ( )
{
	static UFunction* pFnReadSettings = NULL;

	if ( ! pFnReadSettings )
		pFnReadSettings = (UFunction*) UObject::GObjObjects()->Data[ 77751 ];

	UTrControlSettings_execReadSettings_Parms ReadSettings_Parms;

	this->ProcessEvent ( pFnReadSettings, &ReadSettings_Parms, NULL );
};

// Function TribesGame.TrControlSettings.ReadSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SettingId                      ( CPF_Parm )

int UTrControlSettings::ReadSetting ( int SettingId )
{
	static UFunction* pFnReadSetting = NULL;

	if ( ! pFnReadSetting )
		pFnReadSetting = (UFunction*) UObject::GObjObjects()->Data[ 77748 ];

	UTrControlSettings_execReadSetting_Parms ReadSetting_Parms;
	ReadSetting_Parms.SettingId = SettingId;

	pFnReadSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadSetting, &ReadSetting_Parms, NULL );

	pFnReadSetting->FunctionFlags |= 0x400;

	return ReadSetting_Parms.ReturnValue;
};

// Function TribesGame.TrControlSettings.StoreSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SettingId                      ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrControlSettings::StoreSetting ( int SettingId, int val )
{
	static UFunction* pFnStoreSetting = NULL;

	if ( ! pFnStoreSetting )
		pFnStoreSetting = (UFunction*) UObject::GObjObjects()->Data[ 77745 ];

	UTrControlSettings_execStoreSetting_Parms StoreSetting_Parms;
	StoreSetting_Parms.SettingId = SettingId;
	StoreSetting_Parms.val = val;

	pFnStoreSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStoreSetting, &StoreSetting_Parms, NULL );

	pFnStoreSetting->FunctionFlags |= 0x400;
};

// Function TribesGame.TrControlSettings.FlushSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrControlSettings::FlushSettings ( )
{
	static UFunction* pFnFlushSettings = NULL;

	if ( ! pFnFlushSettings )
		pFnFlushSettings = (UFunction*) UObject::GObjObjects()->Data[ 77744 ];

	UTrControlSettings_execFlushSettings_Parms FlushSettings_Parms;

	pFnFlushSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushSettings, &FlushSettings_Parms, NULL );

	pFnFlushSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDeployableHologram.Init
// [0x00020102] 
// Parameters infos:
// class UClass*                  DeployableClass                ( CPF_Parm )

void ATrDeployableHologram::Init ( class UClass* DeployableClass )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 80079 ];

	ATrDeployableHologram_execInit_Parms Init_Parms;
	Init_Parms.DeployableClass = DeployableClass;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrDeployableHologram.PreBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDeployableHologram::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 80078 ];

	ATrDeployableHologram_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployableHologram.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeployableHologram::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 80077 ];

	ATrDeployableHologram_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDeployableHologram.ClearAllMessages
// [0x00020002] 
// Parameters infos:

void ATrDeployableHologram::ClearAllMessages ( )
{
	static UFunction* pFnClearAllMessages = NULL;

	if ( ! pFnClearAllMessages )
		pFnClearAllMessages = (UFunction*) UObject::GObjObjects()->Data[ 80075 ];

	ATrDeployableHologram_execClearAllMessages_Parms ClearAllMessages_Parms;

	this->ProcessEvent ( pFnClearAllMessages, &ClearAllMessages_Parms, NULL );
};

// Function TribesGame.TrDeployableHologram.SetValidDeployableLocation
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bValidLocation                 ( CPF_Parm )
// int                            InvalidDeployReason            ( CPF_OptionalParm | CPF_Parm )

void ATrDeployableHologram::eventSetValidDeployableLocation ( unsigned long bValidLocation, int InvalidDeployReason )
{
	static UFunction* pFnSetValidDeployableLocation = NULL;

	if ( ! pFnSetValidDeployableLocation )
		pFnSetValidDeployableLocation = (UFunction*) UObject::GObjObjects()->Data[ 80071 ];

	ATrDeployableHologram_eventSetValidDeployableLocation_Parms SetValidDeployableLocation_Parms;
	SetValidDeployableLocation_Parms.bValidLocation = bValidLocation;
	SetValidDeployableLocation_Parms.InvalidDeployReason = InvalidDeployReason;

	this->ProcessEvent ( pFnSetValidDeployableLocation, &SetValidDeployableLocation_Parms, NULL );
};

// Function TribesGame.TrDevice.UpdateWeaponMICs
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrDevice::eventUpdateWeaponMICs ( )
{
	static UFunction* pFnUpdateWeaponMICs = NULL;

	if ( ! pFnUpdateWeaponMICs )
		pFnUpdateWeaponMICs = (UFunction*) UObject::GObjObjects()->Data[ 67543 ];

	ATrDevice_eventUpdateWeaponMICs_Parms UpdateWeaponMICs_Parms;

	this->ProcessEvent ( pFnUpdateWeaponMICs, &UpdateWeaponMICs_Parms, NULL );
};

// Function TribesGame.TrDevice.ServerStartFire
// [0x002200C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::ServerStartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnServerStartFire = NULL;

	if ( ! pFnServerStartFire )
		pFnServerStartFire = (UFunction*) UObject::GObjObjects()->Data[ 67540 ];

	ATrDevice_execServerStartFire_Parms ServerStartFire_Parms;
	ServerStartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnServerStartFire, &ServerStartFire_Parms, NULL );
};

// Function TribesGame.TrDevice.GetBasePickupAmmoAmount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice::GetBasePickupAmmoAmount ( )
{
	static UFunction* pFnGetBasePickupAmmoAmount = NULL;

	if ( ! pFnGetBasePickupAmmoAmount )
		pFnGetBasePickupAmmoAmount = (UFunction*) UObject::GObjObjects()->Data[ 67538 ];

	ATrDevice_execGetBasePickupAmmoAmount_Parms GetBasePickupAmmoAmount_Parms;

	this->ProcessEvent ( pFnGetBasePickupAmmoAmount, &GetBasePickupAmmoAmount_Parms, NULL );

	return GetBasePickupAmmoAmount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetMaxAmmoCount
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetMaxAmmoCount ( )
{
	static UFunction* pFnGetMaxAmmoCount = NULL;

	if ( ! pFnGetMaxAmmoCount )
		pFnGetMaxAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 67527 ];

	ATrDevice_execGetMaxAmmoCount_Parms GetMaxAmmoCount_Parms;

	this->ProcessEvent ( pFnGetMaxAmmoCount, &GetMaxAmmoCount_Parms, NULL );

	return GetMaxAmmoCount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.BuffMaxCarriedAmmo
// [0x00020102] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ATrDevice::BuffMaxCarriedAmmo ( int Amount )
{
	static UFunction* pFnBuffMaxCarriedAmmo = NULL;

	if ( ! pFnBuffMaxCarriedAmmo )
		pFnBuffMaxCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 67525 ];

	ATrDevice_execBuffMaxCarriedAmmo_Parms BuffMaxCarriedAmmo_Parms;
	BuffMaxCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnBuffMaxCarriedAmmo, &BuffMaxCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayDryFireZoom
// [0x00020102] 
// Parameters infos:

void ATrDevice::PlayDryFireZoom ( )
{
	static UFunction* pFnPlayDryFireZoom = NULL;

	if ( ! pFnPlayDryFireZoom )
		pFnPlayDryFireZoom = (UFunction*) UObject::GObjObjects()->Data[ 67524 ];

	ATrDevice_execPlayDryFireZoom_Parms PlayDryFireZoom_Parms;

	this->ProcessEvent ( pFnPlayDryFireZoom, &PlayDryFireZoom_Parms, NULL );
};

// Function TribesGame.TrDevice.CalcWeaponFire
// [0x00C24102] 
// Parameters infos:
// struct FImpactInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 Extent                         ( CPF_OptionalParm | CPF_Parm )
// TArray< struct FImpactInfo >   ImpactList                     ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FImpactInfo ATrDevice::CalcWeaponFire ( struct FVector StartTrace, struct FVector EndTrace, struct FVector Extent, TArray< struct FImpactInfo >* ImpactList )
{
	static UFunction* pFnCalcWeaponFire = NULL;

	if ( ! pFnCalcWeaponFire )
		pFnCalcWeaponFire = (UFunction*) UObject::GObjObjects()->Data[ 67500 ];

	ATrDevice_execCalcWeaponFire_Parms CalcWeaponFire_Parms;
	memcpy ( &CalcWeaponFire_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.Extent, &Extent, 0xC );

	this->ProcessEvent ( pFnCalcWeaponFire, &CalcWeaponFire_Parms, NULL );

	if ( ImpactList )
		memcpy ( ImpactList, &CalcWeaponFire_Parms.ImpactList, 0xC );

	return CalcWeaponFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ResetAltReticule
// [0x00020102] 
// Parameters infos:

void ATrDevice::ResetAltReticule ( )
{
	static UFunction* pFnResetAltReticule = NULL;

	if ( ! pFnResetAltReticule )
		pFnResetAltReticule = (UFunction*) UObject::GObjObjects()->Data[ 67495 ];

	ATrDevice_execResetAltReticule_Parms ResetAltReticule_Parms;

	this->ProcessEvent ( pFnResetAltReticule, &ResetAltReticule_Parms, NULL );
};

// Function TribesGame.TrDevice.SetAltReticule
// [0x00020102] 
// Parameters infos:

void ATrDevice::SetAltReticule ( )
{
	static UFunction* pFnSetAltReticule = NULL;

	if ( ! pFnSetAltReticule )
		pFnSetAltReticule = (UFunction*) UObject::GObjObjects()->Data[ 67488 ];

	ATrDevice_execSetAltReticule_Parms SetAltReticule_Parms;

	this->ProcessEvent ( pFnSetAltReticule, &SetAltReticule_Parms, NULL );
};

// Function TribesGame.TrDevice.CanViewZoom
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::CanViewZoom ( )
{
	static UFunction* pFnCanViewZoom = NULL;

	if ( ! pFnCanViewZoom )
		pFnCanViewZoom = (UFunction*) UObject::GObjObjects()->Data[ 67486 ];

	ATrDevice_execCanViewZoom_Parms CanViewZoom_Parms;

	this->ProcessEvent ( pFnCanViewZoom, &CanViewZoom_Parms, NULL );

	return CanViewZoom_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.EndZoom
// [0x00024102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )
// unsigned long                  bReturningTo3P                 ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::EndZoom ( class AUTPlayerController* PC, unsigned long bReturningTo3P )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 67482 ];

	ATrDevice_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;
	EndZoom_Parms.bReturningTo3P = bReturningTo3P;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function TribesGame.TrDevice.StartZoom
// [0x00820102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void ATrDevice::StartZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 67477 ];

	ATrDevice_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function TribesGame.TrDevice.UpdateShotsFired
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Reset                          ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::eventUpdateShotsFired ( unsigned long Reset )
{
	static UFunction* pFnUpdateShotsFired = NULL;

	if ( ! pFnUpdateShotsFired )
		pFnUpdateShotsFired = (UFunction*) UObject::GObjObjects()->Data[ 67475 ];

	ATrDevice_eventUpdateShotsFired_Parms UpdateShotsFired_Parms;
	UpdateShotsFired_Parms.Reset = Reset;

	this->ProcessEvent ( pFnUpdateShotsFired, &UpdateShotsFired_Parms, NULL );
};

// Function TribesGame.TrDevice.ClientWeaponThrown
// [0x010201C2] 
// Parameters infos:

void ATrDevice::ClientWeaponThrown ( )
{
	static UFunction* pFnClientWeaponThrown = NULL;

	if ( ! pFnClientWeaponThrown )
		pFnClientWeaponThrown = (UFunction*) UObject::GObjObjects()->Data[ 67473 ];

	ATrDevice_execClientWeaponThrown_Parms ClientWeaponThrown_Parms;

	this->ProcessEvent ( pFnClientWeaponThrown, &ClientWeaponThrown_Parms, NULL );
};

// Function TribesGame.TrDevice.WeaponPlaySoundLocal
// [0x00024102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::WeaponPlaySoundLocal ( class USoundCue* Sound, float NoiseLoudness )
{
	static UFunction* pFnWeaponPlaySoundLocal = NULL;

	if ( ! pFnWeaponPlaySoundLocal )
		pFnWeaponPlaySoundLocal = (UFunction*) UObject::GObjObjects()->Data[ 67470 ];

	ATrDevice_execWeaponPlaySoundLocal_Parms WeaponPlaySoundLocal_Parms;
	WeaponPlaySoundLocal_Parms.Sound = Sound;
	WeaponPlaySoundLocal_Parms.NoiseLoudness = NoiseLoudness;

	this->ProcessEvent ( pFnWeaponPlaySoundLocal, &WeaponPlaySoundLocal_Parms, NULL );
};

// Function TribesGame.TrDevice.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ATrDevice::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 67469 ];

	ATrDevice_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function TribesGame.TrDevice.CustomFire
// [0x00020102] 
// Parameters infos:

void ATrDevice::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 67465 ];

	ATrDevice_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function TribesGame.TrDevice.CalcHUDAimChargePercent
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::CalcHUDAimChargePercent ( )
{
	static UFunction* pFnCalcHUDAimChargePercent = NULL;

	if ( ! pFnCalcHUDAimChargePercent )
		pFnCalcHUDAimChargePercent = (UFunction*) UObject::GObjObjects()->Data[ 53450 ];

	ATrDevice_execCalcHUDAimChargePercent_Parms CalcHUDAimChargePercent_Parms;

	this->ProcessEvent ( pFnCalcHUDAimChargePercent, &CalcHUDAimChargePercent_Parms, NULL );

	return CalcHUDAimChargePercent_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.CanAutoDeviceFireNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::CanAutoDeviceFireNow ( )
{
	static UFunction* pFnCanAutoDeviceFireNow = NULL;

	if ( ! pFnCanAutoDeviceFireNow )
		pFnCanAutoDeviceFireNow = (UFunction*) UObject::GObjObjects()->Data[ 67463 ];

	ATrDevice_execCanAutoDeviceFireNow_Parms CanAutoDeviceFireNow_Parms;

	this->ProcessEvent ( pFnCanAutoDeviceFireNow, &CanAutoDeviceFireNow_Parms, NULL );

	return CanAutoDeviceFireNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ForceEndFire
// [0x00020102] 
// Parameters infos:

void ATrDevice::ForceEndFire ( )
{
	static UFunction* pFnForceEndFire = NULL;

	if ( ! pFnForceEndFire )
		pFnForceEndFire = (UFunction*) UObject::GObjObjects()->Data[ 67449 ];

	ATrDevice_execForceEndFire_Parms ForceEndFire_Parms;

	this->ProcessEvent ( pFnForceEndFire, &ForceEndFire_Parms, NULL );
};

// Function TribesGame.TrDevice.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 67448 ];

	ATrDevice_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool ATrDevice::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 67444 ];

	ATrDevice_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AnnounceInvalidPickup
// [0x00020000] 
// Parameters infos:
// class ATrPawn*                 Other                          ( CPF_Parm )

void ATrDevice::AnnounceInvalidPickup ( class ATrPawn* Other )
{
	static UFunction* pFnAnnounceInvalidPickup = NULL;

	if ( ! pFnAnnounceInvalidPickup )
		pFnAnnounceInvalidPickup = (UFunction*) UObject::GObjObjects()->Data[ 67442 ];

	ATrDevice_execAnnounceInvalidPickup_Parms AnnounceInvalidPickup_Parms;
	AnnounceInvalidPickup_Parms.Other = Other;

	this->ProcessEvent ( pFnAnnounceInvalidPickup, &AnnounceInvalidPickup_Parms, NULL );
};

// Function TribesGame.TrDevice.Activate
// [0x00020102] 
// Parameters infos:

void ATrDevice::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 67441 ];

	ATrDevice_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function TribesGame.TrDevice.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 67439 ];

	ATrDevice_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice.ShouldRefire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::ShouldRefire ( )
{
	static UFunction* pFnShouldRefire = NULL;

	if ( ! pFnShouldRefire )
		pFnShouldRefire = (UFunction*) UObject::GObjObjects()->Data[ 67437 ];

	ATrDevice_execShouldRefire_Parms ShouldRefire_Parms;

	this->ProcessEvent ( pFnShouldRefire, &ShouldRefire_Parms, NULL );

	return ShouldRefire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.LagRot
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            NewValue                       ( CPF_Parm )
// int                            LastValue                      ( CPF_Parm )
// float                          MaxDiff                        ( CPF_Parm )
// int                            Index                          ( CPF_Parm )
// float                          DeltaSeconds                   ( CPF_Parm )

int ATrDevice::LagRot ( int NewValue, int LastValue, float MaxDiff, int Index, float DeltaSeconds )
{
	static UFunction* pFnLagRot = NULL;

	if ( ! pFnLagRot )
		pFnLagRot = (UFunction*) UObject::GObjObjects()->Data[ 67428 ];

	ATrDevice_execLagRot_Parms LagRot_Parms;
	LagRot_Parms.NewValue = NewValue;
	LagRot_Parms.LastValue = LastValue;
	LagRot_Parms.MaxDiff = MaxDiff;
	LagRot_Parms.Index = Index;
	LagRot_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnLagRot, &LagRot_Parms, NULL );

	return LagRot_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.SetPosition
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class AUDKPawn*                Holder                         ( CPF_Parm )
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrDevice::eventSetPosition ( class AUDKPawn* Holder, float DeltaSeconds )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 67404 ];

	ATrDevice_eventSetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.Holder = Holder;
	SetPosition_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );
};

// Function TribesGame.TrDevice.RemoveEquipEffect
// [0x00020102] 
// Parameters infos:

void ATrDevice::RemoveEquipEffect ( )
{
	static UFunction* pFnRemoveEquipEffect = NULL;

	if ( ! pFnRemoveEquipEffect )
		pFnRemoveEquipEffect = (UFunction*) UObject::GObjObjects()->Data[ 67403 ];

	ATrDevice_execRemoveEquipEffect_Parms RemoveEquipEffect_Parms;

	this->ProcessEvent ( pFnRemoveEquipEffect, &RemoveEquipEffect_Parms, NULL );
};

// Function TribesGame.TrDevice.ApplyEquipEffect
// [0x00020102] 
// Parameters infos:

void ATrDevice::ApplyEquipEffect ( )
{
	static UFunction* pFnApplyEquipEffect = NULL;

	if ( ! pFnApplyEquipEffect )
		pFnApplyEquipEffect = (UFunction*) UObject::GObjObjects()->Data[ 67402 ];

	ATrDevice_execApplyEquipEffect_Parms ApplyEquipEffect_Parms;

	this->ProcessEvent ( pFnApplyEquipEffect, &ApplyEquipEffect_Parms, NULL );
};

// Function TribesGame.TrDevice.ServerOnClientDeniedFire
// [0x002200C0] 
// Parameters infos:

void ATrDevice::ServerOnClientDeniedFire ( )
{
	static UFunction* pFnServerOnClientDeniedFire = NULL;

	if ( ! pFnServerOnClientDeniedFire )
		pFnServerOnClientDeniedFire = (UFunction*) UObject::GObjObjects()->Data[ 67384 ];

	ATrDevice_execServerOnClientDeniedFire_Parms ServerOnClientDeniedFire_Parms;

	this->ProcessEvent ( pFnServerOnClientDeniedFire, &ServerOnClientDeniedFire_Parms, NULL );
};

// Function TribesGame.TrDevice.CanFireOffhandNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::CanFireOffhandNow ( )
{
	static UFunction* pFnCanFireOffhandNow = NULL;

	if ( ! pFnCanFireOffhandNow )
		pFnCanFireOffhandNow = (UFunction*) UObject::GObjObjects()->Data[ 67382 ];

	ATrDevice_execCanFireOffhandNow_Parms CanFireOffhandNow_Parms;

	this->ProcessEvent ( pFnCanFireOffhandNow, &CanFireOffhandNow_Parms, NULL );

	return CanFireOffhandNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetPutDownTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetPutDownTime ( )
{
	static UFunction* pFnGetPutDownTime = NULL;

	if ( ! pFnGetPutDownTime )
		pFnGetPutDownTime = (UFunction*) UObject::GObjObjects()->Data[ 67376 ];

	ATrDevice_execGetPutDownTime_Parms GetPutDownTime_Parms;

	this->ProcessEvent ( pFnGetPutDownTime, &GetPutDownTime_Parms, NULL );

	return GetPutDownTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.TimeWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice::TimeWeaponPutDown ( )
{
	static UFunction* pFnTimeWeaponPutDown = NULL;

	if ( ! pFnTimeWeaponPutDown )
		pFnTimeWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 67374 ];

	ATrDevice_execTimeWeaponPutDown_Parms TimeWeaponPutDown_Parms;

	this->ProcessEvent ( pFnTimeWeaponPutDown, &TimeWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice.GetEquipTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetEquipTime ( )
{
	static UFunction* pFnGetEquipTime = NULL;

	if ( ! pFnGetEquipTime )
		pFnGetEquipTime = (UFunction*) UObject::GObjObjects()->Data[ 67367 ];

	ATrDevice_execGetEquipTime_Parms GetEquipTime_Parms;

	this->ProcessEvent ( pFnGetEquipTime, &GetEquipTime_Parms, NULL );

	return GetEquipTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 67365 ];

	ATrDevice_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function TribesGame.TrDevice.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 67363 ];

	ATrDevice_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function TribesGame.TrDevice.GoInactiveDueToOffhand
// [0x00020102] 
// Parameters infos:

void ATrDevice::GoInactiveDueToOffhand ( )
{
	static UFunction* pFnGoInactiveDueToOffhand = NULL;

	if ( ! pFnGoInactiveDueToOffhand )
		pFnGoInactiveDueToOffhand = (UFunction*) UObject::GObjObjects()->Data[ 67362 ];

	ATrDevice_execGoInactiveDueToOffhand_Parms GoInactiveDueToOffhand_Parms;

	this->ProcessEvent ( pFnGoInactiveDueToOffhand, &GoInactiveDueToOffhand_Parms, NULL );
};

// Function TribesGame.TrDevice.UpdateReplicatedCarriedAmmo
// [0x00020002] 
// Parameters infos:

void ATrDevice::UpdateReplicatedCarriedAmmo ( )
{
	static UFunction* pFnUpdateReplicatedCarriedAmmo = NULL;

	if ( ! pFnUpdateReplicatedCarriedAmmo )
		pFnUpdateReplicatedCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 67361 ];

	ATrDevice_execUpdateReplicatedCarriedAmmo_Parms UpdateReplicatedCarriedAmmo_Parms;

	this->ProcessEvent ( pFnUpdateReplicatedCarriedAmmo, &UpdateReplicatedCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice.AddCarriedAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice::AddCarriedAmmo ( int Amount )
{
	static UFunction* pFnAddCarriedAmmo = NULL;

	if ( ! pFnAddCarriedAmmo )
		pFnAddCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 67357 ];

	ATrDevice_execAddCarriedAmmo_Parms AddCarriedAmmo_Parms;
	AddCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddCarriedAmmo, &AddCarriedAmmo_Parms, NULL );

	return AddCarriedAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.BeginAReload
// [0x00020100] 
// Parameters infos:

void ATrDevice::BeginAReload ( )
{
	static UFunction* pFnBeginAReload = NULL;

	if ( ! pFnBeginAReload )
		pFnBeginAReload = (UFunction*) UObject::GObjObjects()->Data[ 67356 ];

	ATrDevice_execBeginAReload_Parms BeginAReload_Parms;

	this->ProcessEvent ( pFnBeginAReload, &BeginAReload_Parms, NULL );
};

// Function TribesGame.TrDevice.OnReloadComplete
// [0x00020002] 
// Parameters infos:

void ATrDevice::OnReloadComplete ( )
{
	static UFunction* pFnOnReloadComplete = NULL;

	if ( ! pFnOnReloadComplete )
		pFnOnReloadComplete = (UFunction*) UObject::GObjObjects()->Data[ 67355 ];

	ATrDevice_execOnReloadComplete_Parms OnReloadComplete_Parms;

	this->ProcessEvent ( pFnOnReloadComplete, &OnReloadComplete_Parms, NULL );
};

// Function TribesGame.TrDevice.EnableWeaponReadyToFire
// [0x00020022] 
// Parameters infos:

void ATrDevice::EnableWeaponReadyToFire ( )
{
	static UFunction* pFnEnableWeaponReadyToFire = NULL;

	if ( ! pFnEnableWeaponReadyToFire )
		pFnEnableWeaponReadyToFire = (UFunction*) UObject::GObjObjects()->Data[ 67354 ];

	ATrDevice_execEnableWeaponReadyToFire_Parms EnableWeaponReadyToFire_Parms;

	this->ProcessEvent ( pFnEnableWeaponReadyToFire, &EnableWeaponReadyToFire_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayReloadAnim
// [0x00020102] 
// Parameters infos:

void ATrDevice::PlayReloadAnim ( )
{
	static UFunction* pFnPlayReloadAnim = NULL;

	if ( ! pFnPlayReloadAnim )
		pFnPlayReloadAnim = (UFunction*) UObject::GObjObjects()->Data[ 67351 ];

	ATrDevice_execPlayReloadAnim_Parms PlayReloadAnim_Parms;

	this->ProcessEvent ( pFnPlayReloadAnim, &PlayReloadAnim_Parms, NULL );
};

// Function TribesGame.TrDevice.ResumeZoomOnReloadEnd
// [0x00020102] 
// Parameters infos:

void ATrDevice::ResumeZoomOnReloadEnd ( )
{
	static UFunction* pFnResumeZoomOnReloadEnd = NULL;

	if ( ! pFnResumeZoomOnReloadEnd )
		pFnResumeZoomOnReloadEnd = (UFunction*) UObject::GObjObjects()->Data[ 67349 ];

	ATrDevice_execResumeZoomOnReloadEnd_Parms ResumeZoomOnReloadEnd_Parms;

	this->ProcessEvent ( pFnResumeZoomOnReloadEnd, &ResumeZoomOnReloadEnd_Parms, NULL );
};

// Function TribesGame.TrDevice.ClientFinishedReload
// [0x00020100] 
// Parameters infos:

void ATrDevice::ClientFinishedReload ( )
{
	static UFunction* pFnClientFinishedReload = NULL;

	if ( ! pFnClientFinishedReload )
		pFnClientFinishedReload = (UFunction*) UObject::GObjObjects()->Data[ 67348 ];

	ATrDevice_execClientFinishedReload_Parms ClientFinishedReload_Parms;

	this->ProcessEvent ( pFnClientFinishedReload, &ClientFinishedReload_Parms, NULL );
};

// Function TribesGame.TrDevice.CalcAmountToLoad
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice::CalcAmountToLoad ( )
{
	static UFunction* pFnCalcAmountToLoad = NULL;

	if ( ! pFnCalcAmountToLoad )
		pFnCalcAmountToLoad = (UFunction*) UObject::GObjObjects()->Data[ 67319 ];

	ATrDevice_execCalcAmountToLoad_Parms CalcAmountToLoad_Parms;

	this->ProcessEvent ( pFnCalcAmountToLoad, &CalcAmountToLoad_Parms, NULL );

	return CalcAmountToLoad_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.PerformInactiveReload
// [0x00020002] 
// Parameters infos:

void ATrDevice::PerformInactiveReload ( )
{
	static UFunction* pFnPerformInactiveReload = NULL;

	if ( ! pFnPerformInactiveReload )
		pFnPerformInactiveReload = (UFunction*) UObject::GObjObjects()->Data[ 67317 ];

	ATrDevice_execPerformInactiveReload_Parms PerformInactiveReload_Parms;

	this->ProcessEvent ( pFnPerformInactiveReload, &PerformInactiveReload_Parms, NULL );
};

// Function TribesGame.TrDevice.OnClientReloaded
// [0x00020102] 
// Parameters infos:

void ATrDevice::OnClientReloaded ( )
{
	static UFunction* pFnOnClientReloaded = NULL;

	if ( ! pFnOnClientReloaded )
		pFnOnClientReloaded = (UFunction*) UObject::GObjObjects()->Data[ 67316 ];

	ATrDevice_execOnClientReloaded_Parms OnClientReloaded_Parms;

	this->ProcessEvent ( pFnOnClientReloaded, &OnClientReloaded_Parms, NULL );
};

// Function TribesGame.TrDevice.RequestReload
// [0x00020002] 
// Parameters infos:

void ATrDevice::RequestReload ( )
{
	static UFunction* pFnRequestReload = NULL;

	if ( ! pFnRequestReload )
		pFnRequestReload = (UFunction*) UObject::GObjObjects()->Data[ 67315 ];

	ATrDevice_execRequestReload_Parms RequestReload_Parms;

	this->ProcessEvent ( pFnRequestReload, &RequestReload_Parms, NULL );
};

// Function TribesGame.TrDevice.IsReloading
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::IsReloading ( )
{
	static UFunction* pFnIsReloading = NULL;

	if ( ! pFnIsReloading )
		pFnIsReloading = (UFunction*) UObject::GObjObjects()->Data[ 67313 ];

	ATrDevice_execIsReloading_Parms IsReloading_Parms;

	this->ProcessEvent ( pFnIsReloading, &IsReloading_Parms, NULL );

	return IsReloading_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.SuppressAnimNotifies
// [0x00020102] 
// Parameters infos:
// unsigned long                  bSuppress                      ( CPF_Parm )

void ATrDevice::SuppressAnimNotifies ( unsigned long bSuppress )
{
	static UFunction* pFnSuppressAnimNotifies = NULL;

	if ( ! pFnSuppressAnimNotifies )
		pFnSuppressAnimNotifies = (UFunction*) UObject::GObjObjects()->Data[ 67310 ];

	ATrDevice_execSuppressAnimNotifies_Parms SuppressAnimNotifies_Parms;
	SuppressAnimNotifies_Parms.bSuppress = bSuppress;

	this->ProcessEvent ( pFnSuppressAnimNotifies, &SuppressAnimNotifies_Parms, NULL );
};

// Function TribesGame.TrDevice.CacheMeshAnimSeqNodes
// [0x00020102] 
// Parameters infos:

void ATrDevice::CacheMeshAnimSeqNodes ( )
{
	static UFunction* pFnCacheMeshAnimSeqNodes = NULL;

	if ( ! pFnCacheMeshAnimSeqNodes )
		pFnCacheMeshAnimSeqNodes = (UFunction*) UObject::GObjObjects()->Data[ 67307 ];

	ATrDevice_execCacheMeshAnimSeqNodes_Parms CacheMeshAnimSeqNodes_Parms;

	this->ProcessEvent ( pFnCacheMeshAnimSeqNodes, &CacheMeshAnimSeqNodes_Parms, NULL );
};

// Function TribesGame.TrDevice.ClearMeshAnimSeqNodes
// [0x00020102] 
// Parameters infos:

void ATrDevice::ClearMeshAnimSeqNodes ( )
{
	static UFunction* pFnClearMeshAnimSeqNodes = NULL;

	if ( ! pFnClearMeshAnimSeqNodes )
		pFnClearMeshAnimSeqNodes = (UFunction*) UObject::GObjObjects()->Data[ 67306 ];

	ATrDevice_execClearMeshAnimSeqNodes_Parms ClearMeshAnimSeqNodes_Parms;

	this->ProcessEvent ( pFnClearMeshAnimSeqNodes, &ClearMeshAnimSeqNodes_Parms, NULL );
};

// Function TribesGame.TrDevice.GetReloadTime
// [0x00022102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// unsigned char                  EquipPoint                     ( CPF_Parm )

float ATrDevice::GetReloadTime ( class APlayerReplicationInfo* PRI, unsigned char EquipPoint )
{
	static UFunction* pFnGetReloadTime = NULL;

	if ( ! pFnGetReloadTime )
		pFnGetReloadTime = (UFunction*) UObject::GObjObjects()->Data[ 67270 ];

	ATrDevice_execGetReloadTime_Parms GetReloadTime_Parms;
	GetReloadTime_Parms.PRI = PRI;
	GetReloadTime_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnGetReloadTime, &GetReloadTime_Parms, NULL );

	return GetReloadTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.HolderEnteredVehicle
// [0x00020102] 
// Parameters infos:

void ATrDevice::HolderEnteredVehicle ( )
{
	static UFunction* pFnHolderEnteredVehicle = NULL;

	if ( ! pFnHolderEnteredVehicle )
		pFnHolderEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 67239 ];

	ATrDevice_execHolderEnteredVehicle_Parms HolderEnteredVehicle_Parms;

	this->ProcessEvent ( pFnHolderEnteredVehicle, &HolderEnteredVehicle_Parms, NULL );
};

// Function TribesGame.TrDevice.CanClientRequestReloadNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::CanClientRequestReloadNow ( )
{
	static UFunction* pFnCanClientRequestReloadNow = NULL;

	if ( ! pFnCanClientRequestReloadNow )
		pFnCanClientRequestReloadNow = (UFunction*) UObject::GObjObjects()->Data[ 67237 ];

	ATrDevice_execCanClientRequestReloadNow_Parms CanClientRequestReloadNow_Parms;

	this->ProcessEvent ( pFnCanClientRequestReloadNow, &CanClientRequestReloadNow_Parms, NULL );

	return CanClientRequestReloadNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetAimForCamera
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ATrDevice::GetAimForCamera ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAimForCamera = NULL;

	if ( ! pFnGetAimForCamera )
		pFnGetAimForCamera = (UFunction*) UObject::GObjObjects()->Data[ 67234 ];

	ATrDevice_execGetAimForCamera_Parms GetAimForCamera_Parms;
	memcpy ( &GetAimForCamera_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAimForCamera, &GetAimForCamera_Parms, NULL );

	return GetAimForCamera_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetWeaponRange
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetWeaponRange ( )
{
	static UFunction* pFnGetWeaponRange = NULL;

	if ( ! pFnGetWeaponRange )
		pFnGetWeaponRange = (UFunction*) UObject::GObjObjects()->Data[ 67232 ];

	ATrDevice_execGetWeaponRange_Parms GetWeaponRange_Parms;

	this->ProcessEvent ( pFnGetWeaponRange, &GetWeaponRange_Parms, NULL );

	return GetWeaponRange_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.MaxRange
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::MaxRange ( )
{
	static UFunction* pFnMaxRange = NULL;

	if ( ! pFnMaxRange )
		pFnMaxRange = (UFunction*) UObject::GObjObjects()->Data[ 67229 ];

	ATrDevice_execMaxRange_Parms MaxRange_Parms;

	this->ProcessEvent ( pFnMaxRange, &MaxRange_Parms, NULL );

	return MaxRange_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.FireAmmunition
// [0x00820102] 
// Parameters infos:

void ATrDevice::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 67220 ];

	ATrDevice_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice.DestroyOldestProjectileOverLimit
// [0x00020102] 
// Parameters infos:
// class AProjectile*             newProjectile                  ( CPF_Parm )

void ATrDevice::DestroyOldestProjectileOverLimit ( class AProjectile* newProjectile )
{
	static UFunction* pFnDestroyOldestProjectileOverLimit = NULL;

	if ( ! pFnDestroyOldestProjectileOverLimit )
		pFnDestroyOldestProjectileOverLimit = (UFunction*) UObject::GObjObjects()->Data[ 67214 ];

	ATrDevice_execDestroyOldestProjectileOverLimit_Parms DestroyOldestProjectileOverLimit_Parms;
	DestroyOldestProjectileOverLimit_Parms.newProjectile = newProjectile;

	this->ProcessEvent ( pFnDestroyOldestProjectileOverLimit, &DestroyOldestProjectileOverLimit_Parms, NULL );
};

// Function TribesGame.TrDevice.ProjectileFire
// [0x00820102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 67199 ];

	ATrDevice_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetClientSideProjectileFireStartLoc
// [0x00824102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrDevice::GetClientSideProjectileFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetClientSideProjectileFireStartLoc = NULL;

	if ( ! pFnGetClientSideProjectileFireStartLoc )
		pFnGetClientSideProjectileFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 67185 ];

	ATrDevice_execGetClientSideProjectileFireStartLoc_Parms GetClientSideProjectileFireStartLoc_Parms;
	memcpy ( &GetClientSideProjectileFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetClientSideProjectileFireStartLoc, &GetClientSideProjectileFireStartLoc_Parms, NULL );

	return GetClientSideProjectileFireStartLoc_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetProjectileClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrDevice::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 67183 ];

	ATrDevice_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.UpdateLowAmmoWarning
// [0x00020102] 
// Parameters infos:

void ATrDevice::UpdateLowAmmoWarning ( )
{
	static UFunction* pFnUpdateLowAmmoWarning = NULL;

	if ( ! pFnUpdateLowAmmoWarning )
		pFnUpdateLowAmmoWarning = (UFunction*) UObject::GObjObjects()->Data[ 67180 ];

	ATrDevice_execUpdateLowAmmoWarning_Parms UpdateLowAmmoWarning_Parms;

	this->ProcessEvent ( pFnUpdateLowAmmoWarning, &UpdateLowAmmoWarning_Parms, NULL );
};

// Function TribesGame.TrDevice.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 67178 ];

	ATrDevice_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.NeedToVisitInventoryStation
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::NeedToVisitInventoryStation ( )
{
	static UFunction* pFnNeedToVisitInventoryStation = NULL;

	if ( ! pFnNeedToVisitInventoryStation )
		pFnNeedToVisitInventoryStation = (UFunction*) UObject::GObjObjects()->Data[ 67176 ];

	ATrDevice_execNeedToVisitInventoryStation_Parms NeedToVisitInventoryStation_Parms;

	this->ProcessEvent ( pFnNeedToVisitInventoryStation, &NeedToVisitInventoryStation_Parms, NULL );

	return NeedToVisitInventoryStation_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ShowWeaponRedLowAmmoIndicator
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::ShowWeaponRedLowAmmoIndicator ( )
{
	static UFunction* pFnShowWeaponRedLowAmmoIndicator = NULL;

	if ( ! pFnShowWeaponRedLowAmmoIndicator )
		pFnShowWeaponRedLowAmmoIndicator = (UFunction*) UObject::GObjObjects()->Data[ 67174 ];

	ATrDevice_execShowWeaponRedLowAmmoIndicator_Parms ShowWeaponRedLowAmmoIndicator_Parms;

	this->ProcessEvent ( pFnShowWeaponRedLowAmmoIndicator, &ShowWeaponRedLowAmmoIndicator_Parms, NULL );

	return ShowWeaponRedLowAmmoIndicator_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetAdjustedAim
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ATrDevice::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 67168 ];

	ATrDevice_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AddKickback
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::AddKickback ( )
{
	static UFunction* pFnAddKickback = NULL;

	if ( ! pFnAddKickback )
		pFnAddKickback = (UFunction*) UObject::GObjObjects()->Data[ 67165 ];

	ATrDevice_execAddKickback_Parms AddKickback_Parms;

	this->ProcessEvent ( pFnAddKickback, &AddKickback_Parms, NULL );

	return AddKickback_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetCurrentKickbackAmount
// [0x00820102] 
// Parameters infos:
// struct FVector2D               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector2D ATrDevice::GetCurrentKickbackAmount ( )
{
	static UFunction* pFnGetCurrentKickbackAmount = NULL;

	if ( ! pFnGetCurrentKickbackAmount )
		pFnGetCurrentKickbackAmount = (UFunction*) UObject::GObjObjects()->Data[ 67162 ];

	ATrDevice_execGetCurrentKickbackAmount_Parms GetCurrentKickbackAmount_Parms;

	this->ProcessEvent ( pFnGetCurrentKickbackAmount, &GetCurrentKickbackAmount_Parms, NULL );

	return GetCurrentKickbackAmount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ApplyKickbackToAim
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                Aim                            ( CPF_Parm )

struct FRotator ATrDevice::ApplyKickbackToAim ( struct FRotator Aim )
{
	static UFunction* pFnApplyKickbackToAim = NULL;

	if ( ! pFnApplyKickbackToAim )
		pFnApplyKickbackToAim = (UFunction*) UObject::GObjObjects()->Data[ 67155 ];

	ATrDevice_execApplyKickbackToAim_Parms ApplyKickbackToAim_Parms;
	memcpy ( &ApplyKickbackToAim_Parms.Aim, &Aim, 0xC );

	this->ProcessEvent ( pFnApplyKickbackToAim, &ApplyKickbackToAim_Parms, NULL );

	return ApplyKickbackToAim_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AddSpreadWithAccuracy
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                BaseAim                        ( CPF_Parm )
// float                          fAccuracy                      ( CPF_Parm )

struct FRotator ATrDevice::AddSpreadWithAccuracy ( struct FRotator BaseAim, float fAccuracy )
{
	static UFunction* pFnAddSpreadWithAccuracy = NULL;

	if ( ! pFnAddSpreadWithAccuracy )
		pFnAddSpreadWithAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 67144 ];

	ATrDevice_execAddSpreadWithAccuracy_Parms AddSpreadWithAccuracy_Parms;
	memcpy ( &AddSpreadWithAccuracy_Parms.BaseAim, &BaseAim, 0xC );
	AddSpreadWithAccuracy_Parms.fAccuracy = fAccuracy;

	this->ProcessEvent ( pFnAddSpreadWithAccuracy, &AddSpreadWithAccuracy_Parms, NULL );

	return AddSpreadWithAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.PayAccuracyForShot
// [0x00020102] 
// Parameters infos:

void ATrDevice::PayAccuracyForShot ( )
{
	static UFunction* pFnPayAccuracyForShot = NULL;

	if ( ! pFnPayAccuracyForShot )
		pFnPayAccuracyForShot = (UFunction*) UObject::GObjObjects()->Data[ 67142 ];

	ATrDevice_execPayAccuracyForShot_Parms PayAccuracyForShot_Parms;

	this->ProcessEvent ( pFnPayAccuracyForShot, &PayAccuracyForShot_Parms, NULL );
};

// Function TribesGame.TrDevice.PayAccuracyForWeaponSwitch
// [0x00020102] 
// Parameters infos:

void ATrDevice::PayAccuracyForWeaponSwitch ( )
{
	static UFunction* pFnPayAccuracyForWeaponSwitch = NULL;

	if ( ! pFnPayAccuracyForWeaponSwitch )
		pFnPayAccuracyForWeaponSwitch = (UFunction*) UObject::GObjObjects()->Data[ 67140 ];

	ATrDevice_execPayAccuracyForWeaponSwitch_Parms PayAccuracyForWeaponSwitch_Parms;

	this->ProcessEvent ( pFnPayAccuracyForWeaponSwitch, &PayAccuracyForWeaponSwitch_Parms, NULL );
};

// Function TribesGame.TrDevice.PayAccuracyForJump
// [0x00020102] 
// Parameters infos:

void ATrDevice::PayAccuracyForJump ( )
{
	static UFunction* pFnPayAccuracyForJump = NULL;

	if ( ! pFnPayAccuracyForJump )
		pFnPayAccuracyForJump = (UFunction*) UObject::GObjObjects()->Data[ 67137 ];

	ATrDevice_execPayAccuracyForJump_Parms PayAccuracyForJump_Parms;

	this->ProcessEvent ( pFnPayAccuracyForJump, &PayAccuracyForJump_Parms, NULL );
};

// Function TribesGame.TrDevice.ToggleActivate
// [0x00020100] 
// Parameters infos:

void ATrDevice::ToggleActivate ( )
{
	static UFunction* pFnToggleActivate = NULL;

	if ( ! pFnToggleActivate )
		pFnToggleActivate = (UFunction*) UObject::GObjObjects()->Data[ 67136 ];

	ATrDevice_execToggleActivate_Parms ToggleActivate_Parms;

	this->ProcessEvent ( pFnToggleActivate, &ToggleActivate_Parms, NULL );
};

// Function TribesGame.TrDevice.ExitDeployMode
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrDevice::eventExitDeployMode ( )
{
	static UFunction* pFnExitDeployMode = NULL;

	if ( ! pFnExitDeployMode )
		pFnExitDeployMode = (UFunction*) UObject::GObjObjects()->Data[ 67135 ];

	ATrDevice_eventExitDeployMode_Parms ExitDeployMode_Parms;

	this->ProcessEvent ( pFnExitDeployMode, &ExitDeployMode_Parms, NULL );
};

// Function TribesGame.TrDevice.EnterDeployMode
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrDevice::eventEnterDeployMode ( )
{
	static UFunction* pFnEnterDeployMode = NULL;

	if ( ! pFnEnterDeployMode )
		pFnEnterDeployMode = (UFunction*) UObject::GObjObjects()->Data[ 67134 ];

	ATrDevice_eventEnterDeployMode_Parms EnterDeployMode_Parms;

	this->ProcessEvent ( pFnEnterDeployMode, &EnterDeployMode_Parms, NULL );
};

// Function TribesGame.TrDevice.IsDeviceCoolingDown
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ATrDevice::IsDeviceCoolingDown ( unsigned char FireModeNum )
{
	static UFunction* pFnIsDeviceCoolingDown = NULL;

	if ( ! pFnIsDeviceCoolingDown )
		pFnIsDeviceCoolingDown = (UFunction*) UObject::GObjObjects()->Data[ 67131 ];

	ATrDevice_execIsDeviceCoolingDown_Parms IsDeviceCoolingDown_Parms;
	IsDeviceCoolingDown_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnIsDeviceCoolingDown, &IsDeviceCoolingDown_Parms, NULL );

	return IsDeviceCoolingDown_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.UsesPower
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::UsesPower ( )
{
	static UFunction* pFnUsesPower = NULL;

	if ( ! pFnUsesPower )
		pFnUsesPower = (UFunction*) UObject::GObjObjects()->Data[ 67129 ];

	ATrDevice_execUsesPower_Parms UsesPower_Parms;

	this->ProcessEvent ( pFnUsesPower, &UsesPower_Parms, NULL );

	return UsesPower_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ProcessEffect
// [0x00024102] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// unsigned char                  efType                         ( CPF_Parm )
// unsigned long                  bRemove                        ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::ProcessEffect ( class AActor* Target, unsigned char FiringMode, unsigned char efType, unsigned long bRemove )
{
	static UFunction* pFnProcessEffect = NULL;

	if ( ! pFnProcessEffect )
		pFnProcessEffect = (UFunction*) UObject::GObjObjects()->Data[ 67120 ];

	ATrDevice_execProcessEffect_Parms ProcessEffect_Parms;
	ProcessEffect_Parms.Target = Target;
	ProcessEffect_Parms.FiringMode = FiringMode;
	ProcessEffect_Parms.efType = efType;
	ProcessEffect_Parms.bRemove = bRemove;

	this->ProcessEvent ( pFnProcessEffect, &ProcessEffect_Parms, NULL );
};

// Function TribesGame.TrDevice.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrDevice::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 67115 ];

	ATrDevice_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ProcessInstantHit_Internal
// [0x00024002] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::ProcessInstantHit_Internal ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot )
{
	static UFunction* pFnProcessInstantHit_Internal = NULL;

	if ( ! pFnProcessInstantHit_Internal )
		pFnProcessInstantHit_Internal = (UFunction*) UObject::GObjObjects()->Data[ 67107 ];

	ATrDevice_execProcessInstantHit_Internal_Parms ProcessInstantHit_Internal_Parms;
	ProcessInstantHit_Internal_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Internal_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Internal_Parms.bHeadShot = bHeadShot;

	this->ProcessEvent ( pFnProcessInstantHit_Internal, &ProcessInstantHit_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice.ServerNotifyHit
// [0x00A200C2] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_Parm )

void ATrDevice::ServerNotifyHit ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot )
{
	static UFunction* pFnServerNotifyHit = NULL;

	if ( ! pFnServerNotifyHit )
		pFnServerNotifyHit = (UFunction*) UObject::GObjObjects()->Data[ 67098 ];

	ATrDevice_execServerNotifyHit_Parms ServerNotifyHit_Parms;
	ServerNotifyHit_Parms.FiringMode = FiringMode;
	memcpy ( &ServerNotifyHit_Parms.Impact, &Impact, 0x50 );
	ServerNotifyHit_Parms.bHeadShot = bHeadShot;

	this->ProcessEvent ( pFnServerNotifyHit, &ServerNotifyHit_Parms, NULL );
};

// Function TribesGame.TrDevice.ProcessInstantHit
// [0x00024102] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// int                            NumHits                        ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::ProcessInstantHit ( unsigned char FiringMode, struct FImpactInfo Impact, int NumHits )
{
	static UFunction* pFnProcessInstantHit = NULL;

	if ( ! pFnProcessInstantHit )
		pFnProcessInstantHit = (UFunction*) UObject::GObjObjects()->Data[ 67090 ];

	ATrDevice_execProcessInstantHit_Parms ProcessInstantHit_Parms;
	ProcessInstantHit_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Parms.NumHits = NumHits;

	this->ProcessEvent ( pFnProcessInstantHit, &ProcessInstantHit_Parms, NULL );
};

// Function TribesGame.TrDevice.InstantFire
// [0x00820102] 
// Parameters infos:

void ATrDevice::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 67081 ];

	ATrDevice_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice.CalculateRangeDamageFalloff
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Dist                           ( CPF_Parm )

float ATrDevice::CalculateRangeDamageFalloff ( float Dist )
{
	static UFunction* pFnCalculateRangeDamageFalloff = NULL;

	if ( ! pFnCalculateRangeDamageFalloff )
		pFnCalculateRangeDamageFalloff = (UFunction*) UObject::GObjObjects()->Data[ 67073 ];

	ATrDevice_execCalculateRangeDamageFalloff_Parms CalculateRangeDamageFalloff_Parms;
	CalculateRangeDamageFalloff_Parms.Dist = Dist;

	this->ProcessEvent ( pFnCalculateRangeDamageFalloff, &CalculateRangeDamageFalloff_Parms, NULL );

	return CalculateRangeDamageFalloff_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AllowSwitchTo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 NewWeapon                      ( CPF_Parm )

bool ATrDevice::AllowSwitchTo ( class AWeapon* NewWeapon )
{
	static UFunction* pFnAllowSwitchTo = NULL;

	if ( ! pFnAllowSwitchTo )
		pFnAllowSwitchTo = (UFunction*) UObject::GObjObjects()->Data[ 67070 ];

	ATrDevice_execAllowSwitchTo_Parms AllowSwitchTo_Parms;
	AllowSwitchTo_Parms.NewWeapon = NewWeapon;

	this->ProcessEvent ( pFnAllowSwitchTo, &AllowSwitchTo_Parms, NULL );

	return AllowSwitchTo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.HasAnyAmmo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::HasAnyAmmo ( )
{
	static UFunction* pFnHasAnyAmmo = NULL;

	if ( ! pFnHasAnyAmmo )
		pFnHasAnyAmmo = (UFunction*) UObject::GObjObjects()->Data[ 67068 ];

	ATrDevice_execHasAnyAmmo_Parms HasAnyAmmo_Parms;

	this->ProcessEvent ( pFnHasAnyAmmo, &HasAnyAmmo_Parms, NULL );

	return HasAnyAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 67062 ];

	ATrDevice_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetNumRoundsCurrentlyInClip
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice::GetNumRoundsCurrentlyInClip ( )
{
	static UFunction* pFnGetNumRoundsCurrentlyInClip = NULL;

	if ( ! pFnGetNumRoundsCurrentlyInClip )
		pFnGetNumRoundsCurrentlyInClip = (UFunction*) UObject::GObjObjects()->Data[ 67060 ];

	ATrDevice_execGetNumRoundsCurrentlyInClip_Parms GetNumRoundsCurrentlyInClip_Parms;

	this->ProcessEvent ( pFnGetNumRoundsCurrentlyInClip, &GetNumRoundsCurrentlyInClip_Parms, NULL );

	return GetNumRoundsCurrentlyInClip_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetTracer
// [0x00020102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )

class ATrProj_Tracer* ATrDevice::GetTracer ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnGetTracer = NULL;

	if ( ! pFnGetTracer )
		pFnGetTracer = (UFunction*) UObject::GObjObjects()->Data[ 67052 ];

	ATrDevice_execGetTracer_Parms GetTracer_Parms;
	memcpy ( &GetTracer_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &GetTracer_Parms.SpawnRotation, &SpawnRotation, 0xC );

	this->ProcessEvent ( pFnGetTracer, &GetTracer_Parms, NULL );

	return GetTracer_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.SpawnTracerEffect
// [0x00820102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          HitDistance                    ( CPF_Parm )

class ATrProj_Tracer* ATrDevice::SpawnTracerEffect ( struct FVector HitLocation, float HitDistance )
{
	static UFunction* pFnSpawnTracerEffect = NULL;

	if ( ! pFnSpawnTracerEffect )
		pFnSpawnTracerEffect = (UFunction*) UObject::GObjObjects()->Data[ 67044 ];

	ATrDevice_execSpawnTracerEffect_Parms SpawnTracerEffect_Parms;
	memcpy ( &SpawnTracerEffect_Parms.HitLocation, &HitLocation, 0xC );
	SpawnTracerEffect_Parms.HitDistance = HitDistance;

	this->ProcessEvent ( pFnSpawnTracerEffect, &SpawnTracerEffect_Parms, NULL );

	return SpawnTracerEffect_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.SpawnTracerBeam
// [0x00020102] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )

void ATrDevice::SpawnTracerBeam ( struct FVector Start, struct FVector End )
{
	static UFunction* pFnSpawnTracerBeam = NULL;

	if ( ! pFnSpawnTracerBeam )
		pFnSpawnTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 67040 ];

	ATrDevice_execSpawnTracerBeam_Parms SpawnTracerBeam_Parms;
	memcpy ( &SpawnTracerBeam_Parms.Start, &Start, 0xC );
	memcpy ( &SpawnTracerBeam_Parms.End, &End, 0xC );

	this->ProcessEvent ( pFnSpawnTracerBeam, &SpawnTracerBeam_Parms, NULL );
};

// Function TribesGame.TrDevice.ShouldFireTracerBeam
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::ShouldFireTracerBeam ( )
{
	static UFunction* pFnShouldFireTracerBeam = NULL;

	if ( ! pFnShouldFireTracerBeam )
		pFnShouldFireTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 67038 ];

	ATrDevice_execShouldFireTracerBeam_Parms ShouldFireTracerBeam_Parms;

	this->ProcessEvent ( pFnShouldFireTracerBeam, &ShouldFireTracerBeam_Parms, NULL );

	return ShouldFireTracerBeam_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ShouldFireTracer
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::ShouldFireTracer ( )
{
	static UFunction* pFnShouldFireTracer = NULL;

	if ( ! pFnShouldFireTracer )
		pFnShouldFireTracer = (UFunction*) UObject::GObjObjects()->Data[ 67036 ];

	ATrDevice_execShouldFireTracer_Parms ShouldFireTracer_Parms;

	this->ProcessEvent ( pFnShouldFireTracer, &ShouldFireTracer_Parms, NULL );

	return ShouldFireTracer_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ShakeView
// [0x00020102] 
// Parameters infos:

void ATrDevice::ShakeView ( )
{
	static UFunction* pFnShakeView = NULL;

	if ( ! pFnShakeView )
		pFnShakeView = (UFunction*) UObject::GObjObjects()->Data[ 67034 ];

	ATrDevice_execShakeView_Parms ShakeView_Parms;

	this->ProcessEvent ( pFnShakeView, &ShakeView_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayFireAnimation
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::PlayFireAnimation ( unsigned char FireModeNum )
{
	static UFunction* pFnPlayFireAnimation = NULL;

	if ( ! pFnPlayFireAnimation )
		pFnPlayFireAnimation = (UFunction*) UObject::GObjObjects()->Data[ 67032 ];

	ATrDevice_execPlayFireAnimation_Parms PlayFireAnimation_Parms;
	PlayFireAnimation_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnPlayFireAnimation, &PlayFireAnimation_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67029 ];

	ATrDevice_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function TribesGame.TrDevice.ClientWeaponSet
// [0x010241C2] 
// Parameters infos:
// unsigned long                  bOptionalSet                   ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::ClientWeaponSet ( unsigned long bOptionalSet, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientWeaponSet = NULL;

	if ( ! pFnClientWeaponSet )
		pFnClientWeaponSet = (UFunction*) UObject::GObjObjects()->Data[ 67025 ];

	ATrDevice_execClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL );
};

// Function TribesGame.TrDevice.OnSwitchAwayFromWeapon
// [0x00020100] 
// Parameters infos:

void ATrDevice::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67024 ];

	ATrDevice_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice.OnSwitchToWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice::OnSwitchToWeapon ( )
{
	static UFunction* pFnOnSwitchToWeapon = NULL;

	if ( ! pFnOnSwitchToWeapon )
		pFnOnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67023 ];

	ATrDevice_execOnSwitchToWeapon_Parms OnSwitchToWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchToWeapon, &OnSwitchToWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice.WeaponEmpty
// [0x00020100] 
// Parameters infos:

void ATrDevice::WeaponEmpty ( )
{
	static UFunction* pFnWeaponEmpty = NULL;

	if ( ! pFnWeaponEmpty )
		pFnWeaponEmpty = (UFunction*) UObject::GObjObjects()->Data[ 67022 ];

	ATrDevice_execWeaponEmpty_Parms WeaponEmpty_Parms;

	this->ProcessEvent ( pFnWeaponEmpty, &WeaponEmpty_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 67017 ];

	ATrDevice_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice.OnPlayRetrieveAnim
// [0x00020100] 
// Parameters infos:

void ATrDevice::OnPlayRetrieveAnim ( )
{
	static UFunction* pFnOnPlayRetrieveAnim = NULL;

	if ( ! pFnOnPlayRetrieveAnim )
		pFnOnPlayRetrieveAnim = (UFunction*) UObject::GObjObjects()->Data[ 67016 ];

	ATrDevice_execOnPlayRetrieveAnim_Parms OnPlayRetrieveAnim_Parms;

	this->ProcessEvent ( pFnOnPlayRetrieveAnim, &OnPlayRetrieveAnim_Parms, NULL );
};

// Function TribesGame.TrDevice.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 67003 ];

	ATrDevice_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 67001 ];

	ATrDevice_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice.CreateOverlayMesh
// [0x00020102] 
// Parameters infos:

void ATrDevice::CreateOverlayMesh ( )
{
	static UFunction* pFnCreateOverlayMesh = NULL;

	if ( ! pFnCreateOverlayMesh )
		pFnCreateOverlayMesh = (UFunction*) UObject::GObjObjects()->Data[ 66995 ];

	ATrDevice_execCreateOverlayMesh_Parms CreateOverlayMesh_Parms;

	this->ProcessEvent ( pFnCreateOverlayMesh, &CreateOverlayMesh_Parms, NULL );
};

// Function TribesGame.TrDevice.UpdateHandsMesh
// [0x00020102] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )

void ATrDevice::UpdateHandsMesh ( class UClass* FamilyInfo )
{
	static UFunction* pFnUpdateHandsMesh = NULL;

	if ( ! pFnUpdateHandsMesh )
		pFnUpdateHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 66988 ];

	ATrDevice_execUpdateHandsMesh_Parms UpdateHandsMesh_Parms;
	UpdateHandsMesh_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnUpdateHandsMesh, &UpdateHandsMesh_Parms, NULL );
};

// Function TribesGame.TrDevice.CentralUpdateHandsMesh
// [0x00020102] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )

void ATrDevice::CentralUpdateHandsMesh ( class UClass* FamilyInfo )
{
	static UFunction* pFnCentralUpdateHandsMesh = NULL;

	if ( ! pFnCentralUpdateHandsMesh )
		pFnCentralUpdateHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 66985 ];

	ATrDevice_execCentralUpdateHandsMesh_Parms CentralUpdateHandsMesh_Parms;
	CentralUpdateHandsMesh_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnCentralUpdateHandsMesh, &CentralUpdateHandsMesh_Parms, NULL );
};

// Function TribesGame.TrDevice.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void ATrDevice::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 66983 ];

	ATrDevice_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function TribesGame.TrDevice.CreateFirstPersonHandsMesh
// [0x00020102] 
// Parameters infos:

void ATrDevice::CreateFirstPersonHandsMesh ( )
{
	static UFunction* pFnCreateFirstPersonHandsMesh = NULL;

	if ( ! pFnCreateFirstPersonHandsMesh )
		pFnCreateFirstPersonHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 66980 ];

	ATrDevice_execCreateFirstPersonHandsMesh_Parms CreateFirstPersonHandsMesh_Parms;

	this->ProcessEvent ( pFnCreateFirstPersonHandsMesh, &CreateFirstPersonHandsMesh_Parms, NULL );
};

// Function TribesGame.TrDevice.AttachWeaponTo
// [0x00024102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void ATrDevice::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 66971 ];

	ATrDevice_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function TribesGame.TrDevice.GetTraceOwner
// [0x00020102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ATrDevice::GetTraceOwner ( )
{
	static UFunction* pFnGetTraceOwner = NULL;

	if ( ! pFnGetTraceOwner )
		pFnGetTraceOwner = (UFunction*) UObject::GObjObjects()->Data[ 66968 ];

	ATrDevice_execGetTraceOwner_Parms GetTraceOwner_Parms;

	this->ProcessEvent ( pFnGetTraceOwner, &GetTraceOwner_Parms, NULL );

	return GetTraceOwner_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ConsumeAmmo
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 66966 ];

	ATrDevice_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice.ConsumeAmmo_Internal
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice::ConsumeAmmo_Internal ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo_Internal = NULL;

	if ( ! pFnConsumeAmmo_Internal )
		pFnConsumeAmmo_Internal = (UFunction*) UObject::GObjObjects()->Data[ 66964 ];

	ATrDevice_execConsumeAmmo_Internal_Parms ConsumeAmmo_Internal_Parms;
	ConsumeAmmo_Internal_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo_Internal, &ConsumeAmmo_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice.ReplicateAmmoOnWeaponFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice::ReplicateAmmoOnWeaponFire ( )
{
	static UFunction* pFnReplicateAmmoOnWeaponFire = NULL;

	if ( ! pFnReplicateAmmoOnWeaponFire )
		pFnReplicateAmmoOnWeaponFire = (UFunction*) UObject::GObjObjects()->Data[ 66962 ];

	ATrDevice_execReplicateAmmoOnWeaponFire_Parms ReplicateAmmoOnWeaponFire_Parms;

	this->ProcessEvent ( pFnReplicateAmmoOnWeaponFire, &ReplicateAmmoOnWeaponFire_Parms, NULL );

	return ReplicateAmmoOnWeaponFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AddAmmo
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 66959 ];

	ATrDevice_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDevice::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 66958 ];

	ATrDevice_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDevice.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 66956 ];

	ATrDevice_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice.GetObjectReferencerPackageName
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrDevice::GetObjectReferencerPackageName ( )
{
	static UFunction* pFnGetObjectReferencerPackageName = NULL;

	if ( ! pFnGetObjectReferencerPackageName )
		pFnGetObjectReferencerPackageName = (UFunction*) UObject::GObjObjects()->Data[ 66951 ];

	ATrDevice_execGetObjectReferencerPackageName_Parms GetObjectReferencerPackageName_Parms;

	pFnGetObjectReferencerPackageName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObjectReferencerPackageName, &GetObjectReferencerPackageName_Parms, NULL );

	pFnGetObjectReferencerPackageName->FunctionFlags |= 0x400;

	return GetObjectReferencerPackageName_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetObjectReferencerName
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrDevice::GetObjectReferencerName ( )
{
	static UFunction* pFnGetObjectReferencerName = NULL;

	if ( ! pFnGetObjectReferencerName )
		pFnGetObjectReferencerName = (UFunction*) UObject::GObjObjects()->Data[ 66949 ];

	ATrDevice_execGetObjectReferencerName_Parms GetObjectReferencerName_Parms;

	pFnGetObjectReferencerName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetObjectReferencerName, &GetObjectReferencerName_Parms, NULL );

	pFnGetObjectReferencerName->FunctionFlags |= 0x400;

	return GetObjectReferencerName_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ValidateClientReportedHitInternal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_Parm )
// unsigned long                  bDeviceIsFiring                ( CPF_Parm )

int ATrDevice::ValidateClientReportedHitInternal ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot, unsigned long bDeviceIsFiring )
{
	static UFunction* pFnValidateClientReportedHitInternal = NULL;

	if ( ! pFnValidateClientReportedHitInternal )
		pFnValidateClientReportedHitInternal = (UFunction*) UObject::GObjObjects()->Data[ 66943 ];

	ATrDevice_execValidateClientReportedHitInternal_Parms ValidateClientReportedHitInternal_Parms;
	ValidateClientReportedHitInternal_Parms.FiringMode = FiringMode;
	memcpy ( &ValidateClientReportedHitInternal_Parms.Impact, &Impact, 0x50 );
	ValidateClientReportedHitInternal_Parms.bHeadShot = bHeadShot;
	ValidateClientReportedHitInternal_Parms.bDeviceIsFiring = bDeviceIsFiring;

	pFnValidateClientReportedHitInternal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidateClientReportedHitInternal, &ValidateClientReportedHitInternal_Parms, NULL );

	pFnValidateClientReportedHitInternal->FunctionFlags |= 0x400;

	return ValidateClientReportedHitInternal_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ValidateClientReportedHit
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_Parm )
// unsigned long                  bDeviceIsFiring                ( CPF_Parm )

int ATrDevice::ValidateClientReportedHit ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot, unsigned long bDeviceIsFiring )
{
	static UFunction* pFnValidateClientReportedHit = NULL;

	if ( ! pFnValidateClientReportedHit )
		pFnValidateClientReportedHit = (UFunction*) UObject::GObjObjects()->Data[ 66937 ];

	ATrDevice_execValidateClientReportedHit_Parms ValidateClientReportedHit_Parms;
	ValidateClientReportedHit_Parms.FiringMode = FiringMode;
	memcpy ( &ValidateClientReportedHit_Parms.Impact, &Impact, 0x50 );
	ValidateClientReportedHit_Parms.bHeadShot = bHeadShot;
	ValidateClientReportedHit_Parms.bDeviceIsFiring = bDeviceIsFiring;

	pFnValidateClientReportedHit->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnValidateClientReportedHit, &ValidateClientReportedHit_Parms, NULL );

	pFnValidateClientReportedHit->FunctionFlags |= 0x400;

	return ValidateClientReportedHit_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.LoadMeshData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTrDeviceContentData*    ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTrDeviceContentData* ATrDevice::LoadMeshData ( )
{
	static UFunction* pFnLoadMeshData = NULL;

	if ( ! pFnLoadMeshData )
		pFnLoadMeshData = (UFunction*) UObject::GObjObjects()->Data[ 66935 ];

	ATrDevice_execLoadMeshData_Parms LoadMeshData_Parms;

	pFnLoadMeshData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadMeshData, &LoadMeshData_Parms, NULL );

	pFnLoadMeshData->FunctionFlags |= 0x400;

	return LoadMeshData_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.AttachHandsMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrDevice::AttachHandsMesh ( )
{
	static UFunction* pFnAttachHandsMesh = NULL;

	if ( ! pFnAttachHandsMesh )
		pFnAttachHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 66934 ];

	ATrDevice_execAttachHandsMesh_Parms AttachHandsMesh_Parms;

	pFnAttachHandsMesh->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAttachHandsMesh, &AttachHandsMesh_Parms, NULL );

	pFnAttachHandsMesh->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice.IsInLOS
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TouchedActor                   ( CPF_Parm )
// struct FVector                 ExpectedLocation               ( CPF_Parm )

bool ATrDevice::IsInLOS ( class AActor* TouchedActor, struct FVector ExpectedLocation )
{
	static UFunction* pFnIsInLOS = NULL;

	if ( ! pFnIsInLOS )
		pFnIsInLOS = (UFunction*) UObject::GObjObjects()->Data[ 66930 ];

	ATrDevice_execIsInLOS_Parms IsInLOS_Parms;
	IsInLOS_Parms.TouchedActor = TouchedActor;
	memcpy ( &IsInLOS_Parms.ExpectedLocation, &ExpectedLocation, 0xC );

	pFnIsInLOS->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInLOS, &IsInLOS_Parms, NULL );

	pFnIsInLOS->FunctionFlags |= 0x400;

	return IsInLOS_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.RestoreKickback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrDevice::RestoreKickback ( float DeltaSeconds )
{
	static UFunction* pFnRestoreKickback = NULL;

	if ( ! pFnRestoreKickback )
		pFnRestoreKickback = (UFunction*) UObject::GObjObjects()->Data[ 66928 ];

	ATrDevice_execRestoreKickback_Parms RestoreKickback_Parms;
	RestoreKickback_Parms.DeltaSeconds = DeltaSeconds;

	pFnRestoreKickback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreKickback, &RestoreKickback_Parms, NULL );

	pFnRestoreKickback->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice.RestoreAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTimeStep                      ( CPF_Parm )

void ATrDevice::RestoreAccuracy ( float fTimeStep )
{
	static UFunction* pFnRestoreAccuracy = NULL;

	if ( ! pFnRestoreAccuracy )
		pFnRestoreAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 66926 ];

	ATrDevice_execRestoreAccuracy_Parms RestoreAccuracy_Parms;
	RestoreAccuracy_Parms.fTimeStep = fTimeStep;

	pFnRestoreAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreAccuracy, &RestoreAccuracy_Parms, NULL );

	pFnRestoreAccuracy->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice.GetTargetAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetTargetAccuracy ( )
{
	static UFunction* pFnGetTargetAccuracy = NULL;

	if ( ! pFnGetTargetAccuracy )
		pFnGetTargetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 66924 ];

	ATrDevice_execGetTargetAccuracy_Parms GetTargetAccuracy_Parms;

	pFnGetTargetAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetAccuracy, &GetTargetAccuracy_Parms, NULL );

	pFnGetTargetAccuracy->FunctionFlags |= 0x400;

	return GetTargetAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice::GetAccuracy ( )
{
	static UFunction* pFnGetAccuracy = NULL;

	if ( ! pFnGetAccuracy )
		pFnGetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 61249 ];

	ATrDevice_execGetAccuracy_Parms GetAccuracy_Parms;

	pFnGetAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAccuracy, &GetAccuracy_Parms, NULL );

	pFnGetAccuracy->FunctionFlags |= 0x400;

	return GetAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.SpawnPet
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrDeployable*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPet                           ( CPF_Parm )

class ATrDeployable* ATrDevice::SpawnPet ( unsigned long bPet )
{
	static UFunction* pFnSpawnPet = NULL;

	if ( ! pFnSpawnPet )
		pFnSpawnPet = (UFunction*) UObject::GObjObjects()->Data[ 66921 ];

	ATrDevice_execSpawnPet_Parms SpawnPet_Parms;
	SpawnPet_Parms.bPet = bPet;

	pFnSpawnPet->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnPet, &SpawnPet_Parms, NULL );

	pFnSpawnPet->FunctionFlags |= 0x400;

	return SpawnPet_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetLockedTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ATrDevice::GetLockedTarget ( )
{
	static UFunction* pFnGetLockedTarget = NULL;

	if ( ! pFnGetLockedTarget )
		pFnGetLockedTarget = (UFunction*) UObject::GObjObjects()->Data[ 66919 ];

	ATrDevice_execGetLockedTarget_Parms GetLockedTarget_Parms;

	pFnGetLockedTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLockedTarget, &GetLockedTarget_Parms, NULL );

	pFnGetLockedTarget->FunctionFlags |= 0x400;

	return GetLockedTarget_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.ResetLock
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrDevice::ResetLock ( )
{
	static UFunction* pFnResetLock = NULL;

	if ( ! pFnResetLock )
		pFnResetLock = (UFunction*) UObject::GObjObjects()->Data[ 66918 ];

	ATrDevice_execResetLock_Parms ResetLock_Parms;

	pFnResetLock->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetLock, &ResetLock_Parms, NULL );

	pFnResetLock->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice.TickInHandWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrDevice::TickInHandWeapon ( float DeltaSeconds )
{
	static UFunction* pFnTickInHandWeapon = NULL;

	if ( ! pFnTickInHandWeapon )
		pFnTickInHandWeapon = (UFunction*) UObject::GObjObjects()->Data[ 66916 ];

	ATrDevice_execTickInHandWeapon_Parms TickInHandWeapon_Parms;
	TickInHandWeapon_Parms.DeltaSeconds = DeltaSeconds;

	pFnTickInHandWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickInHandWeapon, &TickInHandWeapon_Parms, NULL );

	pFnTickInHandWeapon->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice.ShouldAddToImpactList
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )
// TArray< struct FImpactInfo >   ImpactList                     ( CPF_Parm | CPF_NeedCtorLink )

bool ATrDevice::ShouldAddToImpactList ( class AActor* HitActor, TArray< struct FImpactInfo > ImpactList )
{
	static UFunction* pFnShouldAddToImpactList = NULL;

	if ( ! pFnShouldAddToImpactList )
		pFnShouldAddToImpactList = (UFunction*) UObject::GObjObjects()->Data[ 66911 ];

	ATrDevice_execShouldAddToImpactList_Parms ShouldAddToImpactList_Parms;
	ShouldAddToImpactList_Parms.HitActor = HitActor;
	memcpy ( &ShouldAddToImpactList_Parms.ImpactList, &ImpactList, 0xC );

	pFnShouldAddToImpactList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShouldAddToImpactList, &ShouldAddToImpactList_Parms, NULL );

	pFnShouldAddToImpactList->FunctionFlags |= 0x400;

	return ShouldAddToImpactList_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.IsInsideCone
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SourceLookDir                  ( CPF_Parm )
// class AActor*                  TargetActor                    ( CPF_Parm )
// struct FVector                 StartCone                      ( CPF_Parm )
// float                          MinCosine                      ( CPF_Parm )

bool ATrDevice::IsInsideCone ( struct FVector SourceLookDir, class AActor* TargetActor, struct FVector StartCone, float MinCosine )
{
	static UFunction* pFnIsInsideCone = NULL;

	if ( ! pFnIsInsideCone )
		pFnIsInsideCone = (UFunction*) UObject::GObjObjects()->Data[ 66905 ];

	ATrDevice_execIsInsideCone_Parms IsInsideCone_Parms;
	memcpy ( &IsInsideCone_Parms.SourceLookDir, &SourceLookDir, 0xC );
	IsInsideCone_Parms.TargetActor = TargetActor;
	memcpy ( &IsInsideCone_Parms.StartCone, &StartCone, 0xC );
	IsInsideCone_Parms.MinCosine = MinCosine;

	pFnIsInsideCone->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsInsideCone, &IsInsideCone_Parms, NULL );

	pFnIsInsideCone->FunctionFlags |= 0x400;

	return IsInsideCone_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.IsEnemy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool ATrDevice::IsEnemy ( class AActor* Target )
{
	static UFunction* pFnIsEnemy = NULL;

	if ( ! pFnIsEnemy )
		pFnIsEnemy = (UFunction*) UObject::GObjObjects()->Data[ 66902 ];

	ATrDevice_execIsEnemy_Parms IsEnemy_Parms;
	IsEnemy_Parms.Target = Target;

	pFnIsEnemy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEnemy, &IsEnemy_Parms, NULL );

	pFnIsEnemy->FunctionFlags |= 0x400;

	return IsEnemy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.IsValidTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// int                            nFireMode                      ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice::IsValidTarget ( class AActor* Target, int nFireMode )
{
	static UFunction* pFnIsValidTarget = NULL;

	if ( ! pFnIsValidTarget )
		pFnIsValidTarget = (UFunction*) UObject::GObjObjects()->Data[ 66898 ];

	ATrDevice_execIsValidTarget_Parms IsValidTarget_Parms;
	IsValidTarget_Parms.Target = Target;
	IsValidTarget_Parms.nFireMode = nFireMode;

	pFnIsValidTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidTarget, &IsValidTarget_Parms, NULL );

	pFnIsValidTarget->FunctionFlags |= 0x400;

	return IsValidTarget_Parms.ReturnValue;
};

// Function TribesGame.TrDevice.GetFireModeNum
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrDevice::GetFireModeNum ( )
{
	static UFunction* pFnGetFireModeNum = NULL;

	if ( ! pFnGetFireModeNum )
		pFnGetFireModeNum = (UFunction*) UObject::GObjObjects()->Data[ 66896 ];

	ATrDevice_execGetFireModeNum_Parms GetFireModeNum_Parms;

	pFnGetFireModeNum->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFireModeNum, &GetFireModeNum_Parms, NULL );

	pFnGetFireModeNum->FunctionFlags |= 0x400;

	return GetFireModeNum_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.HolderEnteredVehicle
// [0x00020102] 
// Parameters infos:

void ATrDevice_AutoFire::HolderEnteredVehicle ( )
{
	static UFunction* pFnHolderEnteredVehicle = NULL;

	if ( ! pFnHolderEnteredVehicle )
		pFnHolderEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 80530 ];

	ATrDevice_AutoFire_execHolderEnteredVehicle_Parms HolderEnteredVehicle_Parms;

	this->ProcessEvent ( pFnHolderEnteredVehicle, &HolderEnteredVehicle_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_AutoFire::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80529 ];

	ATrDevice_AutoFire_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_AutoFire::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 80523 ];

	ATrDevice_AutoFire_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.ConsumeAmmo_Internal
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_AutoFire::ConsumeAmmo_Internal ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo_Internal = NULL;

	if ( ! pFnConsumeAmmo_Internal )
		pFnConsumeAmmo_Internal = (UFunction*) UObject::GObjObjects()->Data[ 80521 ];

	ATrDevice_AutoFire_execConsumeAmmo_Internal_Parms ConsumeAmmo_Internal_Parms;
	ConsumeAmmo_Internal_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo_Internal, &ConsumeAmmo_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.ConsumeAmmo
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_AutoFire::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80519 ];

	ATrDevice_AutoFire_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.CanViewZoom
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_AutoFire::CanViewZoom ( )
{
	static UFunction* pFnCanViewZoom = NULL;

	if ( ! pFnCanViewZoom )
		pFnCanViewZoom = (UFunction*) UObject::GObjObjects()->Data[ 80517 ];

	ATrDevice_AutoFire_execCanViewZoom_Parms CanViewZoom_Parms;

	this->ProcessEvent ( pFnCanViewZoom, &CanViewZoom_Parms, NULL );

	return CanViewZoom_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.IncrementFlashCount
// [0x00020100] 
// Parameters infos:

void ATrDevice_AutoFire::IncrementFlashCount ( )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 80516 ];

	ATrDevice_AutoFire_execIncrementFlashCount_Parms IncrementFlashCount_Parms;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.OnReloadComplete
// [0x00020002] 
// Parameters infos:

void ATrDevice_AutoFire::OnReloadComplete ( )
{
	static UFunction* pFnOnReloadComplete = NULL;

	if ( ! pFnOnReloadComplete )
		pFnOnReloadComplete = (UFunction*) UObject::GObjObjects()->Data[ 80515 ];

	ATrDevice_AutoFire_execOnReloadComplete_Parms OnReloadComplete_Parms;

	this->ProcessEvent ( pFnOnReloadComplete, &OnReloadComplete_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.ClientFinishedReload
// [0x00020100] 
// Parameters infos:

void ATrDevice_AutoFire::ClientFinishedReload ( )
{
	static UFunction* pFnClientFinishedReload = NULL;

	if ( ! pFnClientFinishedReload )
		pFnClientFinishedReload = (UFunction*) UObject::GObjObjects()->Data[ 80514 ];

	ATrDevice_AutoFire_execClientFinishedReload_Parms ClientFinishedReload_Parms;

	this->ProcessEvent ( pFnClientFinishedReload, &ClientFinishedReload_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.OnClientReloaded
// [0x00020100] 
// Parameters infos:

void ATrDevice_AutoFire::OnClientReloaded ( )
{
	static UFunction* pFnOnClientReloaded = NULL;

	if ( ! pFnOnClientReloaded )
		pFnOnClientReloaded = (UFunction*) UObject::GObjObjects()->Data[ 80513 ];

	ATrDevice_AutoFire_execOnClientReloaded_Parms OnClientReloaded_Parms;

	this->ProcessEvent ( pFnOnClientReloaded, &OnClientReloaded_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.RequestReload
// [0x00020100] 
// Parameters infos:

void ATrDevice_AutoFire::RequestReload ( )
{
	static UFunction* pFnRequestReload = NULL;

	if ( ! pFnRequestReload )
		pFnRequestReload = (UFunction*) UObject::GObjObjects()->Data[ 80512 ];

	ATrDevice_AutoFire_execRequestReload_Parms RequestReload_Parms;

	this->ProcessEvent ( pFnRequestReload, &RequestReload_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.CanAutoDeviceFireNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_AutoFire::CanAutoDeviceFireNow ( )
{
	static UFunction* pFnCanAutoDeviceFireNow = NULL;

	if ( ! pFnCanAutoDeviceFireNow )
		pFnCanAutoDeviceFireNow = (UFunction*) UObject::GObjObjects()->Data[ 80510 ];

	ATrDevice_AutoFire_execCanAutoDeviceFireNow_Parms CanAutoDeviceFireNow_Parms;

	this->ProcessEvent ( pFnCanAutoDeviceFireNow, &CanAutoDeviceFireNow_Parms, NULL );

	return CanAutoDeviceFireNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.DoOverridePrevWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_AutoFire::DoOverridePrevWeapon ( )
{
	static UFunction* pFnDoOverridePrevWeapon = NULL;

	if ( ! pFnDoOverridePrevWeapon )
		pFnDoOverridePrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80508 ];

	ATrDevice_AutoFire_execDoOverridePrevWeapon_Parms DoOverridePrevWeapon_Parms;

	this->ProcessEvent ( pFnDoOverridePrevWeapon, &DoOverridePrevWeapon_Parms, NULL );

	return DoOverridePrevWeapon_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.DoOverrideNextWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_AutoFire::DoOverrideNextWeapon ( )
{
	static UFunction* pFnDoOverrideNextWeapon = NULL;

	if ( ! pFnDoOverrideNextWeapon )
		pFnDoOverrideNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80506 ];

	ATrDevice_AutoFire_execDoOverrideNextWeapon_Parms DoOverrideNextWeapon_Parms;

	this->ProcessEvent ( pFnDoOverrideNextWeapon, &DoOverrideNextWeapon_Parms, NULL );

	return DoOverrideNextWeapon_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.CanFireNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_AutoFire::CanFireNow ( )
{
	static UFunction* pFnCanFireNow = NULL;

	if ( ! pFnCanFireNow )
		pFnCanFireNow = (UFunction*) UObject::GObjObjects()->Data[ 80504 ];

	ATrDevice_AutoFire_execCanFireNow_Parms CanFireNow_Parms;

	this->ProcessEvent ( pFnCanFireNow, &CanFireNow_Parms, NULL );

	return CanFireNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_AutoFire::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 80500 ];

	ATrDevice_AutoFire_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.SwitchToPostFireDevice
// [0x00020102] 
// Parameters infos:

void ATrDevice_AutoFire::SwitchToPostFireDevice ( )
{
	static UFunction* pFnSwitchToPostFireDevice = NULL;

	if ( ! pFnSwitchToPostFireDevice )
		pFnSwitchToPostFireDevice = (UFunction*) UObject::GObjObjects()->Data[ 80499 ];

	ATrDevice_AutoFire_execSwitchToPostFireDevice_Parms SwitchToPostFireDevice_Parms;

	this->ProcessEvent ( pFnSwitchToPostFireDevice, &SwitchToPostFireDevice_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.SetPostFireDevice
// [0x00020102] 
// Parameters infos:
// class ATrDevice*               PostFireDevice                 ( CPF_Parm )

void ATrDevice_AutoFire::SetPostFireDevice ( class ATrDevice* PostFireDevice )
{
	static UFunction* pFnSetPostFireDevice = NULL;

	if ( ! pFnSetPostFireDevice )
		pFnSetPostFireDevice = (UFunction*) UObject::GObjObjects()->Data[ 80497 ];

	ATrDevice_AutoFire_execSetPostFireDevice_Parms SetPostFireDevice_Parms;
	SetPostFireDevice_Parms.PostFireDevice = PostFireDevice;

	this->ProcessEvent ( pFnSetPostFireDevice, &SetPostFireDevice_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_AutoFire::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 80495 ];

	ATrDevice_AutoFire_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_AutoFire::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80490 ];

	ATrDevice_AutoFire_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.PerformInactiveReload
// [0x00020000] 
// Parameters infos:

void ATrDevice_AutoFire::PerformInactiveReload ( )
{
	static UFunction* pFnPerformInactiveReload = NULL;

	if ( ! pFnPerformInactiveReload )
		pFnPerformInactiveReload = (UFunction*) UObject::GObjObjects()->Data[ 80489 ];

	ATrDevice_AutoFire_execPerformInactiveReload_Parms PerformInactiveReload_Parms;

	this->ProcessEvent ( pFnPerformInactiveReload, &PerformInactiveReload_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.AddCarriedAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice_AutoFire::AddCarriedAmmo ( int Amount )
{
	static UFunction* pFnAddCarriedAmmo = NULL;

	if ( ! pFnAddCarriedAmmo )
		pFnAddCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80486 ];

	ATrDevice_AutoFire_execAddCarriedAmmo_Parms AddCarriedAmmo_Parms;
	AddCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddCarriedAmmo, &AddCarriedAmmo_Parms, NULL );

	return AddCarriedAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_AutoFire::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 80477 ];

	ATrDevice_AutoFire_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.PlayFireAnimation
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_AutoFire::PlayFireAnimation ( unsigned char FireModeNum )
{
	static UFunction* pFnPlayFireAnimation = NULL;

	if ( ! pFnPlayFireAnimation )
		pFnPlayFireAnimation = (UFunction*) UObject::GObjObjects()->Data[ 80462 ];

	ATrDevice_AutoFire_execPlayFireAnimation_Parms PlayFireAnimation_Parms;
	PlayFireAnimation_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnPlayFireAnimation, &PlayFireAnimation_Parms, NULL );
};

// Function TribesGame.TrDevice_AutoFire.GetPutDownTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_AutoFire::GetPutDownTime ( )
{
	static UFunction* pFnGetPutDownTime = NULL;

	if ( ! pFnGetPutDownTime )
		pFnGetPutDownTime = (UFunction*) UObject::GObjObjects()->Data[ 80441 ];

	ATrDevice_AutoFire_execGetPutDownTime_Parms GetPutDownTime_Parms;

	this->ProcessEvent ( pFnGetPutDownTime, &GetPutDownTime_Parms, NULL );

	return GetPutDownTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.GetEquipTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_AutoFire::GetEquipTime ( )
{
	static UFunction* pFnGetEquipTime = NULL;

	if ( ! pFnGetEquipTime )
		pFnGetEquipTime = (UFunction*) UObject::GObjObjects()->Data[ 80439 ];

	ATrDevice_AutoFire_execGetEquipTime_Parms GetEquipTime_Parms;

	this->ProcessEvent ( pFnGetEquipTime, &GetEquipTime_Parms, NULL );

	return GetEquipTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_AutoFire.GetBuildUpTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_AutoFire::GetBuildUpTime ( )
{
	static UFunction* pFnGetBuildUpTime = NULL;

	if ( ! pFnGetBuildUpTime )
		pFnGetBuildUpTime = (UFunction*) UObject::GObjObjects()->Data[ 80432 ];

	ATrDevice_AutoFire_execGetBuildUpTime_Parms GetBuildUpTime_Parms;

	this->ProcessEvent ( pFnGetBuildUpTime, &GetBuildUpTime_Parms, NULL );

	return GetBuildUpTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_ConstantFire.PlayFireAnimation
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_ConstantFire::PlayFireAnimation ( unsigned char FireModeNum )
{
	static UFunction* pFnPlayFireAnimation = NULL;

	if ( ! pFnPlayFireAnimation )
		pFnPlayFireAnimation = (UFunction*) UObject::GObjObjects()->Data[ 80568 ];

	ATrDevice_ConstantFire_execPlayFireAnimation_Parms PlayFireAnimation_Parms;
	PlayFireAnimation_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnPlayFireAnimation, &PlayFireAnimation_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_ConstantFire::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 80550 ];

	ATrDevice_ConstantFire_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_ConstantFire::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 80548 ];

	ATrDevice_ConstantFire_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.OnTickConstantFire
// [0x00020100] 
// Parameters infos:

void ATrDevice_ConstantFire::OnTickConstantFire ( )
{
	static UFunction* pFnOnTickConstantFire = NULL;

	if ( ! pFnOnTickConstantFire )
		pFnOnTickConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80547 ];

	ATrDevice_ConstantFire_execOnTickConstantFire_Parms OnTickConstantFire_Parms;

	this->ProcessEvent ( pFnOnTickConstantFire, &OnTickConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.OnStartConstantFire
// [0x00020100] 
// Parameters infos:

void ATrDevice_ConstantFire::OnStartConstantFire ( )
{
	static UFunction* pFnOnStartConstantFire = NULL;

	if ( ! pFnOnStartConstantFire )
		pFnOnStartConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80546 ];

	ATrDevice_ConstantFire_execOnStartConstantFire_Parms OnStartConstantFire_Parms;

	this->ProcessEvent ( pFnOnStartConstantFire, &OnStartConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.OnEndConstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_ConstantFire::OnEndConstantFire ( )
{
	static UFunction* pFnOnEndConstantFire = NULL;

	if ( ! pFnOnEndConstantFire )
		pFnOnEndConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80545 ];

	ATrDevice_ConstantFire_execOnEndConstantFire_Parms OnEndConstantFire_Parms;

	this->ProcessEvent ( pFnOnEndConstantFire, &OnEndConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ConstantFire.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_ConstantFire::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 80543 ];

	ATrDevice_ConstantFire_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateWeaponMICs
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_LaserTargeter::eventUpdateWeaponMICs ( )
{
	static UFunction* pFnUpdateWeaponMICs = NULL;

	if ( ! pFnUpdateWeaponMICs )
		pFnUpdateWeaponMICs = (UFunction*) UObject::GObjObjects()->Data[ 82582 ];

	ATrDevice_LaserTargeter_eventUpdateWeaponMICs_Parms UpdateWeaponMICs_Parms;

	this->ProcessEvent ( pFnUpdateWeaponMICs, &UpdateWeaponMICs_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateCallInMaterial
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::UpdateCallInMaterial ( )
{
	static UFunction* pFnUpdateCallInMaterial = NULL;

	if ( ! pFnUpdateCallInMaterial )
		pFnUpdateCallInMaterial = (UFunction*) UObject::GObjObjects()->Data[ 82580 ];

	ATrDevice_LaserTargeter_execUpdateCallInMaterial_Parms UpdateCallInMaterial_Parms;

	this->ProcessEvent ( pFnUpdateCallInMaterial, &UpdateCallInMaterial_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 82579 ];

	ATrDevice_LaserTargeter_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateCreditMaterial
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::UpdateCreditMaterial ( )
{
	static UFunction* pFnUpdateCreditMaterial = NULL;

	if ( ! pFnUpdateCreditMaterial )
		pFnUpdateCreditMaterial = (UFunction*) UObject::GObjObjects()->Data[ 82577 ];

	ATrDevice_LaserTargeter_execUpdateCreditMaterial_Parms UpdateCreditMaterial_Parms;

	this->ProcessEvent ( pFnUpdateCreditMaterial, &UpdateCreditMaterial_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_LaserTargeter::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 82575 ];

	ATrDevice_LaserTargeter_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.GetTraceOwner
// [0x00020102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ATrDevice_LaserTargeter::GetTraceOwner ( )
{
	static UFunction* pFnGetTraceOwner = NULL;

	if ( ! pFnGetTraceOwner )
		pFnGetTraceOwner = (UFunction*) UObject::GObjObjects()->Data[ 82573 ];

	ATrDevice_LaserTargeter_execGetTraceOwner_Parms GetTraceOwner_Parms;

	this->ProcessEvent ( pFnGetTraceOwner, &GetTraceOwner_Parms, NULL );

	return GetTraceOwner_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.CalcHUDAimChargePercent
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_LaserTargeter::CalcHUDAimChargePercent ( )
{
	static UFunction* pFnCalcHUDAimChargePercent = NULL;

	if ( ! pFnCalcHUDAimChargePercent )
		pFnCalcHUDAimChargePercent = (UFunction*) UObject::GObjObjects()->Data[ 53452 ];

	ATrDevice_LaserTargeter_execCalcHUDAimChargePercent_Parms CalcHUDAimChargePercent_Parms;

	this->ProcessEvent ( pFnCalcHUDAimChargePercent, &CalcHUDAimChargePercent_Parms, NULL );

	return CalcHUDAimChargePercent_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateTarget
// [0x00020102] 
// Parameters infos:
// unsigned long                  hasHitSomething                ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_LaserTargeter::UpdateTarget ( unsigned long hasHitSomething, struct FVector End, float DeltaTime )
{
	static UFunction* pFnUpdateTarget = NULL;

	if ( ! pFnUpdateTarget )
		pFnUpdateTarget = (UFunction*) UObject::GObjObjects()->Data[ 82568 ];

	ATrDevice_LaserTargeter_execUpdateTarget_Parms UpdateTarget_Parms;
	UpdateTarget_Parms.hasHitSomething = hasHitSomething;
	memcpy ( &UpdateTarget_Parms.End, &End, 0xC );
	UpdateTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateTarget, &UpdateTarget_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.ServerPerformCallIn
// [0x002200C2] 
// Parameters infos:
// struct FVector                 EndLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrDevice_LaserTargeter::ServerPerformCallIn ( struct FVector EndLocation, struct FVector HitNormal )
{
	static UFunction* pFnServerPerformCallIn = NULL;

	if ( ! pFnServerPerformCallIn )
		pFnServerPerformCallIn = (UFunction*) UObject::GObjObjects()->Data[ 82564 ];

	ATrDevice_LaserTargeter_execServerPerformCallIn_Parms ServerPerformCallIn_Parms;
	memcpy ( &ServerPerformCallIn_Parms.EndLocation, &EndLocation, 0xC );
	memcpy ( &ServerPerformCallIn_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnServerPerformCallIn, &ServerPerformCallIn_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.CallInConfirmed
// [0x010201C2] 
// Parameters infos:

void ATrDevice_LaserTargeter::CallInConfirmed ( )
{
	static UFunction* pFnCallInConfirmed = NULL;

	if ( ! pFnCallInConfirmed )
		pFnCallInConfirmed = (UFunction*) UObject::GObjObjects()->Data[ 82563 ];

	ATrDevice_LaserTargeter_execCallInConfirmed_Parms CallInConfirmed_Parms;

	this->ProcessEvent ( pFnCallInConfirmed, &CallInConfirmed_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateLaserEffect
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_LaserTargeter::UpdateLaserEffect ( float DeltaTime )
{
	static UFunction* pFnUpdateLaserEffect = NULL;

	if ( ! pFnUpdateLaserEffect )
		pFnUpdateLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 82555 ];

	ATrDevice_LaserTargeter_execUpdateLaserEffect_Parms UpdateLaserEffect_Parms;
	UpdateLaserEffect_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateLaserEffect, &UpdateLaserEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.SpawnLaserEffect
// [0x00820102] 
// Parameters infos:

void ATrDevice_LaserTargeter::SpawnLaserEffect ( )
{
	static UFunction* pFnSpawnLaserEffect = NULL;

	if ( ! pFnSpawnLaserEffect )
		pFnSpawnLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 82546 ];

	ATrDevice_LaserTargeter_execSpawnLaserEffect_Parms SpawnLaserEffect_Parms;

	this->ProcessEvent ( pFnSpawnLaserEffect, &SpawnLaserEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.KillLaserEffect
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::KillLaserEffect ( )
{
	static UFunction* pFnKillLaserEffect = NULL;

	if ( ! pFnKillLaserEffect )
		pFnKillLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 82545 ];

	ATrDevice_LaserTargeter_execKillLaserEffect_Parms KillLaserEffect_Parms;

	this->ProcessEvent ( pFnKillLaserEffect, &KillLaserEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.GetLaserStartAndEnd
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartLocation                  ( CPF_Parm | CPF_OutParm )
// struct FVector                 EndLocation                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 EndLocationNormal              ( CPF_Parm | CPF_OutParm )

bool ATrDevice_LaserTargeter::GetLaserStartAndEnd ( struct FVector* StartLocation, struct FVector* EndLocation, struct FVector* EndLocationNormal )
{
	static UFunction* pFnGetLaserStartAndEnd = NULL;

	if ( ! pFnGetLaserStartAndEnd )
		pFnGetLaserStartAndEnd = (UFunction*) UObject::GObjObjects()->Data[ 82535 ];

	ATrDevice_LaserTargeter_execGetLaserStartAndEnd_Parms GetLaserStartAndEnd_Parms;

	this->ProcessEvent ( pFnGetLaserStartAndEnd, &GetLaserStartAndEnd_Parms, NULL );

	if ( StartLocation )
		memcpy ( StartLocation, &GetLaserStartAndEnd_Parms.StartLocation, 0xC );

	if ( EndLocation )
		memcpy ( EndLocation, &GetLaserStartAndEnd_Parms.EndLocation, 0xC );

	if ( EndLocationNormal )
		memcpy ( EndLocationNormal, &GetLaserStartAndEnd_Parms.EndLocationNormal, 0xC );

	return GetLaserStartAndEnd_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.OnStartConstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::OnStartConstantFire ( )
{
	static UFunction* pFnOnStartConstantFire = NULL;

	if ( ! pFnOnStartConstantFire )
		pFnOnStartConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 82523 ];

	ATrDevice_LaserTargeter_execOnStartConstantFire_Parms OnStartConstantFire_Parms;

	this->ProcessEvent ( pFnOnStartConstantFire, &OnStartConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.OnEndConstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::OnEndConstantFire ( )
{
	static UFunction* pFnOnEndConstantFire = NULL;

	if ( ! pFnOnEndConstantFire )
		pFnOnEndConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 82521 ];

	ATrDevice_LaserTargeter_execOnEndConstantFire_Parms OnEndConstantFire_Parms;

	this->ProcessEvent ( pFnOnEndConstantFire, &OnEndConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.SetActiveCallIn
// [0x00020102] 
// Parameters infos:
// unsigned char                  CallInIndex                    ( CPF_Parm )

void ATrDevice_LaserTargeter::SetActiveCallIn ( unsigned char CallInIndex )
{
	static UFunction* pFnSetActiveCallIn = NULL;

	if ( ! pFnSetActiveCallIn )
		pFnSetActiveCallIn = (UFunction*) UObject::GObjObjects()->Data[ 82519 ];

	ATrDevice_LaserTargeter_execSetActiveCallIn_Parms SetActiveCallIn_Parms;
	SetActiveCallIn_Parms.CallInIndex = CallInIndex;

	this->ProcessEvent ( pFnSetActiveCallIn, &SetActiveCallIn_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.IsValidCallIn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  CallInIndex                    ( CPF_Parm )

bool ATrDevice_LaserTargeter::IsValidCallIn ( unsigned char CallInIndex )
{
	static UFunction* pFnIsValidCallIn = NULL;

	if ( ! pFnIsValidCallIn )
		pFnIsValidCallIn = (UFunction*) UObject::GObjObjects()->Data[ 76388 ];

	ATrDevice_LaserTargeter_execIsValidCallIn_Parms IsValidCallIn_Parms;
	IsValidCallIn_Parms.CallInIndex = CallInIndex;

	this->ProcessEvent ( pFnIsValidCallIn, &IsValidCallIn_Parms, NULL );

	return IsValidCallIn_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.CanFireCallIn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_LaserTargeter::CanFireCallIn ( )
{
	static UFunction* pFnCanFireCallIn = NULL;

	if ( ! pFnCanFireCallIn )
		pFnCanFireCallIn = (UFunction*) UObject::GObjObjects()->Data[ 82515 ];

	ATrDevice_LaserTargeter_execCanFireCallIn_Parms CanFireCallIn_Parms;

	this->ProcessEvent ( pFnCanFireCallIn, &CanFireCallIn_Parms, NULL );

	return CanFireCallIn_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_LaserTargeter.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_LaserTargeter::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 82513 ];

	ATrDevice_LaserTargeter_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.UpdateCallins
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::UpdateCallins ( )
{
	static UFunction* pFnUpdateCallins = NULL;

	if ( ! pFnUpdateCallins )
		pFnUpdateCallins = (UFunction*) UObject::GObjObjects()->Data[ 82510 ];

	ATrDevice_LaserTargeter_execUpdateCallins_Parms UpdateCallins_Parms;

	this->ProcessEvent ( pFnUpdateCallins, &UpdateCallins_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDevice_LaserTargeter::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 82502 ];

	ATrDevice_LaserTargeter_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_LaserTargeter::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 82500 ];

	ATrDevice_LaserTargeter_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice_LaserTargeter.IsValidTargetLocation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 CurrentTarget                  ( CPF_Parm )
// struct FVector                 PreviousTarget                 ( CPF_Parm )
// class AActor*                  HitTarget                      ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_LaserTargeter::IsValidTargetLocation ( struct FVector CurrentTarget, struct FVector PreviousTarget, class AActor* HitTarget )
{
	static UFunction* pFnIsValidTargetLocation = NULL;

	if ( ! pFnIsValidTargetLocation )
		pFnIsValidTargetLocation = (UFunction*) UObject::GObjObjects()->Data[ 82495 ];

	ATrDevice_LaserTargeter_execIsValidTargetLocation_Parms IsValidTargetLocation_Parms;
	memcpy ( &IsValidTargetLocation_Parms.CurrentTarget, &CurrentTarget, 0xC );
	memcpy ( &IsValidTargetLocation_Parms.PreviousTarget, &PreviousTarget, 0xC );
	IsValidTargetLocation_Parms.HitTarget = HitTarget;

	pFnIsValidTargetLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidTargetLocation, &IsValidTargetLocation_Parms, NULL );

	pFnIsValidTargetLocation->FunctionFlags |= 0x400;

	return IsValidTargetLocation_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_Deployable::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80416 ];

	ATrDevice_Deployable_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.HasAnyAmmo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Deployable::HasAnyAmmo ( )
{
	static UFunction* pFnHasAnyAmmo = NULL;

	if ( ! pFnHasAnyAmmo )
		pFnHasAnyAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80414 ];

	ATrDevice_Deployable_execHasAnyAmmo_Parms HasAnyAmmo_Parms;

	this->ProcessEvent ( pFnHasAnyAmmo, &HasAnyAmmo_Parms, NULL );

	return HasAnyAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_Deployable::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 76030 ];

	ATrDevice_Deployable_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.CanAutoDeviceFireNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Deployable::CanAutoDeviceFireNow ( )
{
	static UFunction* pFnCanAutoDeviceFireNow = NULL;

	if ( ! pFnCanAutoDeviceFireNow )
		pFnCanAutoDeviceFireNow = (UFunction*) UObject::GObjObjects()->Data[ 80412 ];

	ATrDevice_Deployable_execCanAutoDeviceFireNow_Parms CanAutoDeviceFireNow_Parms;

	this->ProcessEvent ( pFnCanAutoDeviceFireNow, &CanAutoDeviceFireNow_Parms, NULL );

	return CanAutoDeviceFireNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.CustomFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_Deployable::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 80411 ];

	ATrDevice_Deployable_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.ServerRequestDeploy
// [0x002200C2] 
// Parameters infos:
// struct FVector                 DesiredPlacement               ( CPF_Parm )
// struct FRotator                DesiredRotation                ( CPF_Parm )

void ATrDevice_Deployable::ServerRequestDeploy ( struct FVector DesiredPlacement, struct FRotator DesiredRotation )
{
	static UFunction* pFnServerRequestDeploy = NULL;

	if ( ! pFnServerRequestDeploy )
		pFnServerRequestDeploy = (UFunction*) UObject::GObjObjects()->Data[ 80406 ];

	ATrDevice_Deployable_execServerRequestDeploy_Parms ServerRequestDeploy_Parms;
	memcpy ( &ServerRequestDeploy_Parms.DesiredPlacement, &DesiredPlacement, 0xC );
	memcpy ( &ServerRequestDeploy_Parms.DesiredRotation, &DesiredRotation, 0xC );

	this->ProcessEvent ( pFnServerRequestDeploy, &ServerRequestDeploy_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.IsValidDesiredDeploy
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 DesiredPlacement               ( CPF_Parm )
// struct FRotator                DesiredRotation                ( CPF_Parm )

bool ATrDevice_Deployable::IsValidDesiredDeploy ( struct FVector DesiredPlacement, struct FRotator DesiredRotation )
{
	static UFunction* pFnIsValidDesiredDeploy = NULL;

	if ( ! pFnIsValidDesiredDeploy )
		pFnIsValidDesiredDeploy = (UFunction*) UObject::GObjObjects()->Data[ 80402 ];

	ATrDevice_Deployable_execIsValidDesiredDeploy_Parms IsValidDesiredDeploy_Parms;
	memcpy ( &IsValidDesiredDeploy_Parms.DesiredPlacement, &DesiredPlacement, 0xC );
	memcpy ( &IsValidDesiredDeploy_Parms.DesiredRotation, &DesiredRotation, 0xC );

	this->ProcessEvent ( pFnIsValidDesiredDeploy, &IsValidDesiredDeploy_Parms, NULL );

	return IsValidDesiredDeploy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Deployable::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 80400 ];

	ATrDevice_Deployable_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.ExitDeployModeDisplay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_Deployable::eventExitDeployModeDisplay ( )
{
	static UFunction* pFnExitDeployModeDisplay = NULL;

	if ( ! pFnExitDeployModeDisplay )
		pFnExitDeployModeDisplay = (UFunction*) UObject::GObjObjects()->Data[ 80394 ];

	ATrDevice_Deployable_eventExitDeployModeDisplay_Parms ExitDeployModeDisplay_Parms;

	this->ProcessEvent ( pFnExitDeployModeDisplay, &ExitDeployModeDisplay_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.EnterDeployModeDisplay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_Deployable::eventEnterDeployModeDisplay ( )
{
	static UFunction* pFnEnterDeployModeDisplay = NULL;

	if ( ! pFnEnterDeployModeDisplay )
		pFnEnterDeployModeDisplay = (UFunction*) UObject::GObjObjects()->Data[ 80393 ];

	ATrDevice_Deployable_eventEnterDeployModeDisplay_Parms EnterDeployModeDisplay_Parms;

	this->ProcessEvent ( pFnEnterDeployModeDisplay, &EnterDeployModeDisplay_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.ChangeVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bIsVisible                     ( CPF_Parm )

void ATrDevice_Deployable::ChangeVisibility ( unsigned long bIsVisible )
{
	static UFunction* pFnChangeVisibility = NULL;

	if ( ! pFnChangeVisibility )
		pFnChangeVisibility = (UFunction*) UObject::GObjObjects()->Data[ 80391 ];

	ATrDevice_Deployable_execChangeVisibility_Parms ChangeVisibility_Parms;
	ChangeVisibility_Parms.bIsVisible = bIsVisible;

	this->ProcessEvent ( pFnChangeVisibility, &ChangeVisibility_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.EndZoom
// [0x00024102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )
// unsigned long                  bReturningTo3P                 ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_Deployable::EndZoom ( class AUTPlayerController* PC, unsigned long bReturningTo3P )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 80387 ];

	ATrDevice_Deployable_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;
	EndZoom_Parms.bReturningTo3P = bReturningTo3P;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.AttachWeaponTo
// [0x00024102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_Deployable::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 80384 ];

	ATrDevice_Deployable_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.ExitDeployMode
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_Deployable::eventExitDeployMode ( )
{
	static UFunction* pFnExitDeployMode = NULL;

	if ( ! pFnExitDeployMode )
		pFnExitDeployMode = (UFunction*) UObject::GObjObjects()->Data[ 80382 ];

	ATrDevice_Deployable_eventExitDeployMode_Parms ExitDeployMode_Parms;

	this->ProcessEvent ( pFnExitDeployMode, &ExitDeployMode_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.EnterDeployMode
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_Deployable::eventEnterDeployMode ( )
{
	static UFunction* pFnEnterDeployMode = NULL;

	if ( ! pFnEnterDeployMode )
		pFnEnterDeployMode = (UFunction*) UObject::GObjObjects()->Data[ 80380 ];

	ATrDevice_Deployable_eventEnterDeployMode_Parms EnterDeployMode_Parms;

	this->ProcessEvent ( pFnEnterDeployMode, &EnterDeployMode_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.CanAttemptDeploy
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Deployable::eventCanAttemptDeploy ( )
{
	static UFunction* pFnCanAttemptDeploy = NULL;

	if ( ! pFnCanAttemptDeploy )
		pFnCanAttemptDeploy = (UFunction*) UObject::GObjObjects()->Data[ 76056 ];

	ATrDevice_Deployable_eventCanAttemptDeploy_Parms CanAttemptDeploy_Parms;

	this->ProcessEvent ( pFnCanAttemptDeploy, &CanAttemptDeploy_Parms, NULL );

	return CanAttemptDeploy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.AddAmmo
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice_Deployable::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80377 ];

	ATrDevice_Deployable_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.AddCarriedAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice_Deployable::AddCarriedAmmo ( int Amount )
{
	static UFunction* pFnAddCarriedAmmo = NULL;

	if ( ! pFnAddCarriedAmmo )
		pFnAddCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80374 ];

	ATrDevice_Deployable_execAddCarriedAmmo_Parms AddCarriedAmmo_Parms;
	AddCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddCarriedAmmo, &AddCarriedAmmo_Parms, NULL );

	return AddCarriedAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.ConsumeAmmo
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Deployable::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80372 ];

	ATrDevice_Deployable_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.BelowMaxCountLimit
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bDestroyOldest                 ( CPF_Parm )

bool ATrDevice_Deployable::BelowMaxCountLimit ( unsigned long bDestroyOldest )
{
	static UFunction* pFnBelowMaxCountLimit = NULL;

	if ( ! pFnBelowMaxCountLimit )
		pFnBelowMaxCountLimit = (UFunction*) UObject::GObjObjects()->Data[ 80363 ];

	ATrDevice_Deployable_execBelowMaxCountLimit_Parms BelowMaxCountLimit_Parms;
	BelowMaxCountLimit_Parms.bDestroyOldest = bDestroyOldest;

	this->ProcessEvent ( pFnBelowMaxCountLimit, &BelowMaxCountLimit_Parms, NULL );

	return BelowMaxCountLimit_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.IsDeployableOldest
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrDeployable*           OtherDep                       ( CPF_Parm )

bool ATrDevice_Deployable::eventIsDeployableOldest ( class ATrDeployable* OtherDep )
{
	static UFunction* pFnIsDeployableOldest = NULL;

	if ( ! pFnIsDeployableOldest )
		pFnIsDeployableOldest = (UFunction*) UObject::GObjObjects()->Data[ 80357 ];

	ATrDevice_Deployable_eventIsDeployableOldest_Parms IsDeployableOldest_Parms;
	IsDeployableOldest_Parms.OtherDep = OtherDep;

	this->ProcessEvent ( pFnIsDeployableOldest, &IsDeployableOldest_Parms, NULL );

	return IsDeployableOldest_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.GetMaxDeployedLimit
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_Deployable::GetMaxDeployedLimit ( )
{
	static UFunction* pFnGetMaxDeployedLimit = NULL;

	if ( ! pFnGetMaxDeployedLimit )
		pFnGetMaxDeployedLimit = (UFunction*) UObject::GObjObjects()->Data[ 80352 ];

	ATrDevice_Deployable_execGetMaxDeployedLimit_Parms GetMaxDeployedLimit_Parms;

	this->ProcessEvent ( pFnGetMaxDeployedLimit, &GetMaxDeployedLimit_Parms, NULL );

	return GetMaxDeployedLimit_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.TryPutDown
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Deployable::TryPutDown ( )
{
	static UFunction* pFnTryPutDown = NULL;

	if ( ! pFnTryPutDown )
		pFnTryPutDown = (UFunction*) UObject::GObjObjects()->Data[ 80349 ];

	ATrDevice_Deployable_execTryPutDown_Parms TryPutDown_Parms;

	this->ProcessEvent ( pFnTryPutDown, &TryPutDown_Parms, NULL );

	return TryPutDown_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.ResumeInhandWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_Deployable::ResumeInhandWeapon ( )
{
	static UFunction* pFnResumeInhandWeapon = NULL;

	if ( ! pFnResumeInhandWeapon )
		pFnResumeInhandWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80347 ];

	ATrDevice_Deployable_execResumeInhandWeapon_Parms ResumeInhandWeapon_Parms;

	this->ProcessEvent ( pFnResumeInhandWeapon, &ResumeInhandWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.HolderEnteredVehicle
// [0x00020102] 
// Parameters infos:

void ATrDevice_Deployable::HolderEnteredVehicle ( )
{
	static UFunction* pFnHolderEnteredVehicle = NULL;

	if ( ! pFnHolderEnteredVehicle )
		pFnHolderEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 80346 ];

	ATrDevice_Deployable_execHolderEnteredVehicle_Parms HolderEnteredVehicle_Parms;

	this->ProcessEvent ( pFnHolderEnteredVehicle, &HolderEnteredVehicle_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_Deployable::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 80345 ];

	ATrDevice_Deployable_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.CheckInHandWeapon
// [0x00020100] 
// Parameters infos:

void ATrDevice_Deployable::CheckInHandWeapon ( )
{
	static UFunction* pFnCheckInHandWeapon = NULL;

	if ( ! pFnCheckInHandWeapon )
		pFnCheckInHandWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80344 ];

	ATrDevice_Deployable_execCheckInHandWeapon_Parms CheckInHandWeapon_Parms;

	this->ProcessEvent ( pFnCheckInHandWeapon, &CheckInHandWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_Deployable::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80343 ];

	ATrDevice_Deployable_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.OnSwitchToWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_Deployable::OnSwitchToWeapon ( )
{
	static UFunction* pFnOnSwitchToWeapon = NULL;

	if ( ! pFnOnSwitchToWeapon )
		pFnOnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80342 ];

	ATrDevice_Deployable_execOnSwitchToWeapon_Parms OnSwitchToWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchToWeapon, &OnSwitchToWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.UpdateReplicatedCarriedAmmo
// [0x00020002] 
// Parameters infos:

void ATrDevice_Deployable::UpdateReplicatedCarriedAmmo ( )
{
	static UFunction* pFnUpdateReplicatedCarriedAmmo = NULL;

	if ( ! pFnUpdateReplicatedCarriedAmmo )
		pFnUpdateReplicatedCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80341 ];

	ATrDevice_Deployable_execUpdateReplicatedCarriedAmmo_Parms UpdateReplicatedCarriedAmmo_Parms;

	this->ProcessEvent ( pFnUpdateReplicatedCarriedAmmo, &UpdateReplicatedCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_Deployable::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 80339 ];

	ATrDevice_Deployable_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice_Deployable.IsValidOutsideCheck
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 DeployLocation                 ( CPF_Parm )
// unsigned long                  VerificationCheck              ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_Deployable::IsValidOutsideCheck ( struct FVector DeployLocation, unsigned long VerificationCheck )
{
	static UFunction* pFnIsValidOutsideCheck = NULL;

	if ( ! pFnIsValidOutsideCheck )
		pFnIsValidOutsideCheck = (UFunction*) UObject::GObjObjects()->Data[ 80335 ];

	ATrDevice_Deployable_execIsValidOutsideCheck_Parms IsValidOutsideCheck_Parms;
	memcpy ( &IsValidOutsideCheck_Parms.DeployLocation, &DeployLocation, 0xC );
	IsValidOutsideCheck_Parms.VerificationCheck = VerificationCheck;

	pFnIsValidOutsideCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidOutsideCheck, &IsValidOutsideCheck_Parms, NULL );

	pFnIsValidOutsideCheck->FunctionFlags |= 0x400;

	return IsValidOutsideCheck_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.IsValidDeployProximity
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 DeployLocation                 ( CPF_Parm )
// unsigned long                  VerificationCheck              ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_Deployable::IsValidDeployProximity ( struct FVector DeployLocation, unsigned long VerificationCheck )
{
	static UFunction* pFnIsValidDeployProximity = NULL;

	if ( ! pFnIsValidDeployProximity )
		pFnIsValidDeployProximity = (UFunction*) UObject::GObjObjects()->Data[ 80331 ];

	ATrDevice_Deployable_execIsValidDeployProximity_Parms IsValidDeployProximity_Parms;
	memcpy ( &IsValidDeployProximity_Parms.DeployLocation, &DeployLocation, 0xC );
	IsValidDeployProximity_Parms.VerificationCheck = VerificationCheck;

	pFnIsValidDeployProximity->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidDeployProximity, &IsValidDeployProximity_Parms, NULL );

	pFnIsValidDeployProximity->FunctionFlags |= 0x400;

	return IsValidDeployProximity_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.IsValidDeployVolume
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  VerificationCheck              ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 OutLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutRotation                    ( CPF_Parm | CPF_OutParm )

bool ATrDevice_Deployable::IsValidDeployVolume ( unsigned long VerificationCheck, struct FVector* OutLocation, struct FRotator* OutRotation )
{
	static UFunction* pFnIsValidDeployVolume = NULL;

	if ( ! pFnIsValidDeployVolume )
		pFnIsValidDeployVolume = (UFunction*) UObject::GObjObjects()->Data[ 80326 ];

	ATrDevice_Deployable_execIsValidDeployVolume_Parms IsValidDeployVolume_Parms;
	IsValidDeployVolume_Parms.VerificationCheck = VerificationCheck;

	pFnIsValidDeployVolume->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidDeployVolume, &IsValidDeployVolume_Parms, NULL );

	pFnIsValidDeployVolume->FunctionFlags |= 0x400;

	if ( OutLocation )
		memcpy ( OutLocation, &IsValidDeployVolume_Parms.OutLocation, 0xC );

	if ( OutRotation )
		memcpy ( OutRotation, &IsValidDeployVolume_Parms.OutRotation, 0xC );

	return IsValidDeployVolume_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.IsValidDeployTerrain
// [0x00424400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  VerificationCheck              ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 OutLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                OutRotation                    ( CPF_Parm | CPF_OutParm )

bool ATrDevice_Deployable::IsValidDeployTerrain ( unsigned long VerificationCheck, struct FVector* OutLocation, struct FRotator* OutRotation )
{
	static UFunction* pFnIsValidDeployTerrain = NULL;

	if ( ! pFnIsValidDeployTerrain )
		pFnIsValidDeployTerrain = (UFunction*) UObject::GObjObjects()->Data[ 80321 ];

	ATrDevice_Deployable_execIsValidDeployTerrain_Parms IsValidDeployTerrain_Parms;
	IsValidDeployTerrain_Parms.VerificationCheck = VerificationCheck;

	pFnIsValidDeployTerrain->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsValidDeployTerrain, &IsValidDeployTerrain_Parms, NULL );

	pFnIsValidDeployTerrain->FunctionFlags |= 0x400;

	if ( OutLocation )
		memcpy ( OutLocation, &IsValidDeployTerrain_Parms.OutLocation, 0xC );

	if ( OutRotation )
		memcpy ( OutRotation, &IsValidDeployTerrain_Parms.OutRotation, 0xC );

	return IsValidDeployTerrain_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.Deploy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrDeployable*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrDeployable* ATrDevice_Deployable::Deploy ( )
{
	static UFunction* pFnDeploy = NULL;

	if ( ! pFnDeploy )
		pFnDeploy = (UFunction*) UObject::GObjObjects()->Data[ 80319 ];

	ATrDevice_Deployable_execDeploy_Parms Deploy_Parms;

	pFnDeploy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDeploy, &Deploy_Parms, NULL );

	pFnDeploy->FunctionFlags |= 0x400;

	return Deploy_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Deployable.TickInHandWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrDevice_Deployable::TickInHandWeapon ( float DeltaSeconds )
{
	static UFunction* pFnTickInHandWeapon = NULL;

	if ( ! pFnTickInHandWeapon )
		pFnTickInHandWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80317 ];

	ATrDevice_Deployable_execTickInHandWeapon_Parms TickInHandWeapon_Parms;
	TickInHandWeapon_Parms.DeltaSeconds = DeltaSeconds;

	pFnTickInHandWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTickInHandWeapon, &TickInHandWeapon_Parms, NULL );

	pFnTickInHandWeapon->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice_Deployable.UpdateDeployModeStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrDevice_Deployable::UpdateDeployModeStatus ( )
{
	static UFunction* pFnUpdateDeployModeStatus = NULL;

	if ( ! pFnUpdateDeployModeStatus )
		pFnUpdateDeployModeStatus = (UFunction*) UObject::GObjObjects()->Data[ 80316 ];

	ATrDevice_Deployable_execUpdateDeployModeStatus_Parms UpdateDeployModeStatus_Parms;

	pFnUpdateDeployModeStatus->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDeployModeStatus, &UpdateDeployModeStatus_Parms, NULL );

	pFnUpdateDeployModeStatus->FunctionFlags |= 0x400;
};

// Function TribesGame.TrDevice_Shotgun.OnAnimEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_Shotgun::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 80213 ];

	ATrDevice_Shotgun_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.ProcessInstantHit_Internal
// [0x00024002] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_Shotgun::ProcessInstantHit_Internal ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot )
{
	static UFunction* pFnProcessInstantHit_Internal = NULL;

	if ( ! pFnProcessInstantHit_Internal )
		pFnProcessInstantHit_Internal = (UFunction*) UObject::GObjObjects()->Data[ 80209 ];

	ATrDevice_Shotgun_execProcessInstantHit_Internal_Parms ProcessInstantHit_Internal_Parms;
	ProcessInstantHit_Internal_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Internal_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Internal_Parms.bHeadShot = bHeadShot;

	this->ProcessEvent ( pFnProcessInstantHit_Internal, &ProcessInstantHit_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.ConsumeAmmo_Internal
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Shotgun::ConsumeAmmo_Internal ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo_Internal = NULL;

	if ( ! pFnConsumeAmmo_Internal )
		pFnConsumeAmmo_Internal = (UFunction*) UObject::GObjObjects()->Data[ 80207 ];

	ATrDevice_Shotgun_execConsumeAmmo_Internal_Parms ConsumeAmmo_Internal_Parms;
	ConsumeAmmo_Internal_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo_Internal, &ConsumeAmmo_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.ConsumeAmmo
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Shotgun::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80205 ];

	ATrDevice_Shotgun_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Shotgun::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 80203 ];

	ATrDevice_Shotgun_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_Shotgun::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 80202 ];

	ATrDevice_Shotgun_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.CustomFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_Shotgun::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 80200 ];

	ATrDevice_Shotgun_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.PerformInactiveReload
// [0x00020002] 
// Parameters infos:

void ATrDevice_Shotgun::PerformInactiveReload ( )
{
	static UFunction* pFnPerformInactiveReload = NULL;

	if ( ! pFnPerformInactiveReload )
		pFnPerformInactiveReload = (UFunction*) UObject::GObjObjects()->Data[ 80198 ];

	ATrDevice_Shotgun_execPerformInactiveReload_Parms PerformInactiveReload_Parms;

	this->ProcessEvent ( pFnPerformInactiveReload, &PerformInactiveReload_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.SetFlashLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDevice_Shotgun::SetFlashLocation ( struct FVector HitLocation )
{
	static UFunction* pFnSetFlashLocation = NULL;

	if ( ! pFnSetFlashLocation )
		pFnSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 80196 ];

	ATrDevice_Shotgun_execSetFlashLocation_Parms SetFlashLocation_Parms;
	memcpy ( &SetFlashLocation_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSetFlashLocation, &SetFlashLocation_Parms, NULL );
};

// Function TribesGame.TrDevice_Shotgun.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_Shotgun::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 80194 ];

	ATrDevice_Shotgun_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDmgType_Base.GetRandomDeathAnimName
// [0x00022002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName UTrDmgType_Base::GetRandomDeathAnimName ( )
{
	static UFunction* pFnGetRandomDeathAnimName = NULL;

	if ( ! pFnGetRandomDeathAnimName )
		pFnGetRandomDeathAnimName = (UFunction*) UObject::GObjObjects()->Data[ 72650 ];

	UTrDmgType_Base_execGetRandomDeathAnimName_Parms GetRandomDeathAnimName_Parms;

	this->ProcessEvent ( pFnGetRandomDeathAnimName, &GetRandomDeathAnimName_Parms, NULL );

	return GetRandomDeathAnimName_Parms.ReturnValue;
};

// Function TribesGame.TrDmgType_Base.ModifyOverheadNumberLocation
// [0x00022002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 InLocation                     ( CPF_Parm )

struct FVector UTrDmgType_Base::ModifyOverheadNumberLocation ( struct FVector InLocation )
{
	static UFunction* pFnModifyOverheadNumberLocation = NULL;

	if ( ! pFnModifyOverheadNumberLocation )
		pFnModifyOverheadNumberLocation = (UFunction*) UObject::GObjObjects()->Data[ 71146 ];

	UTrDmgType_Base_execModifyOverheadNumberLocation_Parms ModifyOverheadNumberLocation_Parms;
	memcpy ( &ModifyOverheadNumberLocation_Parms.InLocation, &InLocation, 0xC );

	this->ProcessEvent ( pFnModifyOverheadNumberLocation, &ModifyOverheadNumberLocation_Parms, NULL );

	return ModifyOverheadNumberLocation_Parms.ReturnValue;
};

// Function TribesGame.TrDmgType_Base.GetCameraShake
// [0x00422002] 
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// struct FName                   outCameraShakeName             ( CPF_Parm | CPF_OutParm )
// float                          outScale                       ( CPF_Parm | CPF_OutParm )

void UTrDmgType_Base::GetCameraShake ( int Damage, struct FName* outCameraShakeName, float* outScale )
{
	static UFunction* pFnGetCameraShake = NULL;

	if ( ! pFnGetCameraShake )
		pFnGetCameraShake = (UFunction*) UObject::GObjObjects()->Data[ 85559 ];

	UTrDmgType_Base_execGetCameraShake_Parms GetCameraShake_Parms;
	GetCameraShake_Parms.Damage = Damage;

	this->ProcessEvent ( pFnGetCameraShake, &GetCameraShake_Parms, NULL );

	if ( outCameraShakeName )
		memcpy ( outCameraShakeName, &GetCameraShake_Parms.outCameraShakeName, 0x8 );

	if ( outScale )
		*outScale = GetCameraShake_Parms.outScale;
};

// Function TribesGame.TrDmgType_Base.GetDamageScale
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )
// class UClass*                  dmgType                        ( CPF_Parm )

float UTrDmgType_Base::GetDamageScale ( class AActor* DamageCauser, float Dist, class UClass* dmgType )
{
	static UFunction* pFnGetDamageScale = NULL;

	if ( ! pFnGetDamageScale )
		pFnGetDamageScale = (UFunction*) UObject::GObjObjects()->Data[ 71419 ];

	UTrDmgType_Base_execGetDamageScale_Parms GetDamageScale_Parms;
	GetDamageScale_Parms.DamageCauser = DamageCauser;
	GetDamageScale_Parms.Dist = Dist;
	GetDamageScale_Parms.dmgType = dmgType;

	this->ProcessEvent ( pFnGetDamageScale, &GetDamageScale_Parms, NULL );

	return GetDamageScale_Parms.ReturnValue;
};

// Function TribesGame.TrDmgType_Base.GetActorCausingDamage
// [0x00022002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )

class AActor* UTrDmgType_Base::GetActorCausingDamage ( class AController* EventInstigator, class AActor* DamageCauser )
{
	static UFunction* pFnGetActorCausingDamage = NULL;

	if ( ! pFnGetActorCausingDamage )
		pFnGetActorCausingDamage = (UFunction*) UObject::GObjObjects()->Data[ 71144 ];

	UTrDmgType_Base_execGetActorCausingDamage_Parms GetActorCausingDamage_Parms;
	GetActorCausingDamage_Parms.EventInstigator = EventInstigator;
	GetActorCausingDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnGetActorCausingDamage, &GetActorCausingDamage_Parms, NULL );

	return GetActorCausingDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDmgType_Base.CalculateRangeDamageFalloff
// [0x00026002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Dist                           ( CPF_Parm )
// float                          damageRange                    ( CPF_Parm )
// class ATrPlayerController*     TrPCDamager                    ( CPF_OptionalParm | CPF_Parm )
// unsigned char                  EquipPoint                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bMinDamageAlwaysApplied        ( CPF_OptionalParm | CPF_Parm )

float UTrDmgType_Base::CalculateRangeDamageFalloff ( float Dist, float damageRange, class ATrPlayerController* TrPCDamager, unsigned char EquipPoint, unsigned long bMinDamageAlwaysApplied )
{
	static UFunction* pFnCalculateRangeDamageFalloff = NULL;

	if ( ! pFnCalculateRangeDamageFalloff )
		pFnCalculateRangeDamageFalloff = (UFunction*) UObject::GObjObjects()->Data[ 67079 ];

	UTrDmgType_Base_execCalculateRangeDamageFalloff_Parms CalculateRangeDamageFalloff_Parms;
	CalculateRangeDamageFalloff_Parms.Dist = Dist;
	CalculateRangeDamageFalloff_Parms.damageRange = damageRange;
	CalculateRangeDamageFalloff_Parms.TrPCDamager = TrPCDamager;
	CalculateRangeDamageFalloff_Parms.EquipPoint = EquipPoint;
	CalculateRangeDamageFalloff_Parms.bMinDamageAlwaysApplied = bMinDamageAlwaysApplied;

	this->ProcessEvent ( pFnCalculateRangeDamageFalloff, &CalculateRangeDamageFalloff_Parms, NULL );

	return CalculateRangeDamageFalloff_Parms.ReturnValue;
};

// Function TribesGame.TrDmgType_Base.VehicleDamageScalingFor
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AVehicle*                V                              ( CPF_Parm )

float UTrDmgType_Base::VehicleDamageScalingFor ( class AVehicle* V )
{
	static UFunction* pFnVehicleDamageScalingFor = NULL;

	if ( ! pFnVehicleDamageScalingFor )
		pFnVehicleDamageScalingFor = (UFunction*) UObject::GObjObjects()->Data[ 85532 ];

	UTrDmgType_Base_execVehicleDamageScalingFor_Parms VehicleDamageScalingFor_Parms;
	VehicleDamageScalingFor_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDamageScalingFor, &VehicleDamageScalingFor_Parms, NULL );

	return VehicleDamageScalingFor_Parms.ReturnValue;
};

// Function TribesGame.TrEffectForm.GetMatApplyToAttachment
// [0x00020102] 
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  attClass                       ( CPF_Parm )

class UMaterial* UTrEffectForm::GetMatApplyToAttachment ( class UClass* attClass )
{
	static UFunction* pFnGetMatApplyToAttachment = NULL;

	if ( ! pFnGetMatApplyToAttachment )
		pFnGetMatApplyToAttachment = (UFunction*) UObject::GObjObjects()->Data[ 86326 ];

	UTrEffectForm_execGetMatApplyToAttachment_Parms GetMatApplyToAttachment_Parms;
	GetMatApplyToAttachment_Parms.attClass = attClass;

	this->ProcessEvent ( pFnGetMatApplyToAttachment, &GetMatApplyToAttachment_Parms, NULL );

	return GetMatApplyToAttachment_Parms.ReturnValue;
};

// Function TribesGame.TrEffectForm.GetMatApplyToWeapon
// [0x00020102] 
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  devClass                       ( CPF_Parm )

class UMaterial* UTrEffectForm::GetMatApplyToWeapon ( class UClass* devClass )
{
	static UFunction* pFnGetMatApplyToWeapon = NULL;

	if ( ! pFnGetMatApplyToWeapon )
		pFnGetMatApplyToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 86323 ];

	UTrEffectForm_execGetMatApplyToWeapon_Parms GetMatApplyToWeapon_Parms;
	GetMatApplyToWeapon_Parms.devClass = devClass;

	this->ProcessEvent ( pFnGetMatApplyToWeapon, &GetMatApplyToWeapon_Parms, NULL );

	return GetMatApplyToWeapon_Parms.ReturnValue;
};

// Function TribesGame.TrEffectForm.GetMatApplyToPawn
// [0x00020102] 
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  PawnClass                      ( CPF_Parm )

class UMaterial* UTrEffectForm::GetMatApplyToPawn ( class UClass* PawnClass )
{
	static UFunction* pFnGetMatApplyToPawn = NULL;

	if ( ! pFnGetMatApplyToPawn )
		pFnGetMatApplyToPawn = (UFunction*) UObject::GObjObjects()->Data[ 86320 ];

	UTrEffectForm_execGetMatApplyToPawn_Parms GetMatApplyToPawn_Parms;
	GetMatApplyToPawn_Parms.PawnClass = PawnClass;

	this->ProcessEvent ( pFnGetMatApplyToPawn, &GetMatApplyToPawn_Parms, NULL );

	return GetMatApplyToPawn_Parms.ReturnValue;
};

// Function TribesGame.TrEffectForm.GetOverwriteMat
// [0x00020102] 
// Parameters infos:
// class UMaterial*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< struct FEffectFormOverwrite > List                           ( CPF_Parm | CPF_NeedCtorLink )

class UMaterial* UTrEffectForm::GetOverwriteMat ( TArray< struct FEffectFormOverwrite > List )
{
	static UFunction* pFnGetOverwriteMat = NULL;

	if ( ! pFnGetOverwriteMat )
		pFnGetOverwriteMat = (UFunction*) UObject::GObjObjects()->Data[ 86315 ];

	UTrEffectForm_execGetOverwriteMat_Parms GetOverwriteMat_Parms;
	memcpy ( &GetOverwriteMat_Parms.List, &List, 0xC );

	this->ProcessEvent ( pFnGetOverwriteMat, &GetOverwriteMat_Parms, NULL );

	return GetOverwriteMat_Parms.ReturnValue;
};

// Function TribesGame.TrEmitCameraEffect_Speed.Deactivate
// [0x00020002] 
// Parameters infos:

void ATrEmitCameraEffect_Speed::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 86341 ];

	ATrEmitCameraEffect_Speed_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Speed.Activate
// [0x00020002] 
// Parameters infos:

void ATrEmitCameraEffect_Speed::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 86340 ];

	ATrEmitCameraEffect_Speed_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Speed.UpdateLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// float                          CamFOVDeg                      ( CPF_Parm )
// struct FVector                 CamLoc                         ( CPF_Const | CPF_Parm | CPF_OutParm )
// struct FRotator                CamRot                         ( CPF_Const | CPF_Parm | CPF_OutParm )

void ATrEmitCameraEffect_Speed::UpdateLocation ( float CamFOVDeg, struct FVector* CamLoc, struct FRotator* CamRot )
{
	static UFunction* pFnUpdateLocation = NULL;

	if ( ! pFnUpdateLocation )
		pFnUpdateLocation = (UFunction*) UObject::GObjObjects()->Data[ 86336 ];

	ATrEmitCameraEffect_Speed_execUpdateLocation_Parms UpdateLocation_Parms;
	UpdateLocation_Parms.CamFOVDeg = CamFOVDeg;

	pFnUpdateLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateLocation, &UpdateLocation_Parms, NULL );

	pFnUpdateLocation->FunctionFlags |= 0x400;

	if ( CamLoc )
		memcpy ( CamLoc, &UpdateLocation_Parms.CamLoc, 0xC );

	if ( CamRot )
		memcpy ( CamRot, &UpdateLocation_Parms.CamRot, 0xC );
};

// Function TribesGame.TrEntryGame.OnEngineHasLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrEntryGame::eventOnEngineHasLoaded ( )
{
	static UFunction* pFnOnEngineHasLoaded = NULL;

	if ( ! pFnOnEngineHasLoaded )
		pFnOnEngineHasLoaded = (UFunction*) UObject::GObjObjects()->Data[ 86372 ];

	ATrEntryGame_eventOnEngineHasLoaded_Parms OnEngineHasLoaded_Parms;

	this->ProcessEvent ( pFnOnEngineHasLoaded, &OnEngineHasLoaded_Parms, NULL );
};

// Function TribesGame.TrEntryGame.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* ATrEntryGame::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
{
	static UFunction* pFnSetGameType = NULL;

	if ( ! pFnSetGameType )
		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 86367 ];

	ATrEntryGame_eventSetGameType_Parms SetGameType_Parms;
	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );

	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );

	return SetGameType_Parms.ReturnValue;
};

// Function TribesGame.TrEntryGame.SendMenuEngineLoaded
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryGame::SendMenuEngineLoaded ( )
{
	static UFunction* pFnSendMenuEngineLoaded = NULL;

	if ( ! pFnSendMenuEngineLoaded )
		pFnSendMenuEngineLoaded = (UFunction*) UObject::GObjObjects()->Data[ 86366 ];

	ATrEntryGame_execSendMenuEngineLoaded_Parms SendMenuEngineLoaded_Parms;

	pFnSendMenuEngineLoaded->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMenuEngineLoaded, &SendMenuEngineLoaded_Parms, NULL );

	pFnSendMenuEngineLoaded->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryHUD.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrEntryHUD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86374 ];

	ATrEntryHUD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEntryHUD.CreateMainMenu
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryHUD::CreateMainMenu ( )
{
	static UFunction* pFnCreateMainMenu = NULL;

	if ( ! pFnCreateMainMenu )
		pFnCreateMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 86373 ];

	ATrEntryHUD_execCreateMainMenu_Parms CreateMainMenu_Parms;

	pFnCreateMainMenu->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateMainMenu, &CreateMainMenu_Parms, NULL );

	pFnCreateMainMenu->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.InitClassList
// [0x00020002] 
// Parameters infos:

void UTrEquipInterface::InitClassList ( )
{
	static UFunction* pFnInitClassList = NULL;

	if ( ! pFnInitClassList )
		pFnInitClassList = (UFunction*) UObject::GObjObjects()->Data[ 86659 ];

	UTrEquipInterface_execInitClassList_Parms InitClassList_Parms;

	this->ProcessEvent ( pFnInitClassList, &InitClassList_Parms, NULL );
};

// Function TribesGame.TrEquipInterface.InitEquipManager
// [0x00020002] 
// Parameters infos:

void UTrEquipInterface::InitEquipManager ( )
{
	static UFunction* pFnInitEquipManager = NULL;

	if ( ! pFnInitEquipManager )
		pFnInitEquipManager = (UFunction*) UObject::GObjObjects()->Data[ 86658 ];

	UTrEquipInterface_execInitEquipManager_Parms InitEquipManager_Parms;

	this->ProcessEvent ( pFnInitEquipManager, &InitEquipManager_Parms, NULL );
};

// Function TribesGame.TrEquipInterface.SetReticuleString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )
// unsigned char                  Type                           ( CPF_Parm )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

bool UTrEquipInterface::SetReticuleString ( int EquipId, unsigned char Type, struct FString sValue )
{
	static UFunction* pFnSetReticuleString = NULL;

	if ( ! pFnSetReticuleString )
		pFnSetReticuleString = (UFunction*) UObject::GObjObjects()->Data[ 58428 ];

	UTrEquipInterface_execSetReticuleString_Parms SetReticuleString_Parms;
	SetReticuleString_Parms.EquipId = EquipId;
	SetReticuleString_Parms.Type = Type;
	memcpy ( &SetReticuleString_Parms.sValue, &sValue, 0xC );

	pFnSetReticuleString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetReticuleString, &SetReticuleString_Parms, NULL );

	pFnSetReticuleString->FunctionFlags |= 0x400;

	return SetReticuleString_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetReticuleString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            EquipId                        ( CPF_Parm )
// unsigned char                  Type                           ( CPF_Parm )

struct FString UTrEquipInterface::GetReticuleString ( int EquipId, unsigned char Type )
{
	static UFunction* pFnGetReticuleString = NULL;

	if ( ! pFnGetReticuleString )
		pFnGetReticuleString = (UFunction*) UObject::GObjObjects()->Data[ 58265 ];

	UTrEquipInterface_execGetReticuleString_Parms GetReticuleString_Parms;
	GetReticuleString_Parms.EquipId = EquipId;
	GetReticuleString_Parms.Type = Type;

	pFnGetReticuleString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReticuleString, &GetReticuleString_Parms, NULL );

	pFnGetReticuleString->FunctionFlags |= 0x400;

	return GetReticuleString_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.SetReticuleValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )
// unsigned char                  Type                           ( CPF_Parm )
// int                            nValue                         ( CPF_Parm )

bool UTrEquipInterface::SetReticuleValue ( int EquipId, unsigned char Type, int nValue )
{
	static UFunction* pFnSetReticuleValue = NULL;

	if ( ! pFnSetReticuleValue )
		pFnSetReticuleValue = (UFunction*) UObject::GObjObjects()->Data[ 58426 ];

	UTrEquipInterface_execSetReticuleValue_Parms SetReticuleValue_Parms;
	SetReticuleValue_Parms.EquipId = EquipId;
	SetReticuleValue_Parms.Type = Type;
	SetReticuleValue_Parms.nValue = nValue;

	pFnSetReticuleValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetReticuleValue, &SetReticuleValue_Parms, NULL );

	pFnSetReticuleValue->FunctionFlags |= 0x400;

	return SetReticuleValue_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetReticuleValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )
// unsigned char                  Type                           ( CPF_Parm )

int UTrEquipInterface::GetReticuleValue ( int EquipId, unsigned char Type )
{
	static UFunction* pFnGetReticuleValue = NULL;

	if ( ! pFnGetReticuleValue )
		pFnGetReticuleValue = (UFunction*) UObject::GObjObjects()->Data[ 58263 ];

	UTrEquipInterface_execGetReticuleValue_Parms GetReticuleValue_Parms;
	GetReticuleValue_Parms.EquipId = EquipId;
	GetReticuleValue_Parms.Type = Type;

	pFnGetReticuleValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetReticuleValue, &GetReticuleValue_Parms, NULL );

	pFnGetReticuleValue->FunctionFlags |= 0x400;

	return GetReticuleValue_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.OwnsReticule
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )

bool UTrEquipInterface::OwnsReticule ( int EquipId )
{
	static UFunction* pFnOwnsReticule = NULL;

	if ( ! pFnOwnsReticule )
		pFnOwnsReticule = (UFunction*) UObject::GObjObjects()->Data[ 61215 ];

	UTrEquipInterface_execOwnsReticule_Parms OwnsReticule_Parms;
	OwnsReticule_Parms.EquipId = EquipId;

	pFnOwnsReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOwnsReticule, &OwnsReticule_Parms, NULL );

	pFnOwnsReticule->FunctionFlags |= 0x400;

	return OwnsReticule_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.HasReticule
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )

bool UTrEquipInterface::HasReticule ( int EquipId )
{
	static UFunction* pFnHasReticule = NULL;

	if ( ! pFnHasReticule )
		pFnHasReticule = (UFunction*) UObject::GObjObjects()->Data[ 58314 ];

	UTrEquipInterface_execHasReticule_Parms HasReticule_Parms;
	HasReticule_Parms.EquipId = EquipId;

	pFnHasReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnHasReticule, &HasReticule_Parms, NULL );

	pFnHasReticule->FunctionFlags |= 0x400;

	return HasReticule_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetVendorItemPrice
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )
// int                            VendorItemId                   ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )
// int                            Price                          ( CPF_Parm | CPF_OutParm )

bool UTrEquipInterface::GetVendorItemPrice ( int VendorId, int VendorItemId, int Currency, int* Price )
{
	static UFunction* pFnGetVendorItemPrice = NULL;

	if ( ! pFnGetVendorItemPrice )
		pFnGetVendorItemPrice = (UFunction*) UObject::GObjObjects()->Data[ 57522 ];

	UTrEquipInterface_execGetVendorItemPrice_Parms GetVendorItemPrice_Parms;
	GetVendorItemPrice_Parms.VendorId = VendorId;
	GetVendorItemPrice_Parms.VendorItemId = VendorItemId;
	GetVendorItemPrice_Parms.Currency = Currency;

	pFnGetVendorItemPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorItemPrice, &GetVendorItemPrice_Parms, NULL );

	pFnGetVendorItemPrice->FunctionFlags |= 0x400;

	if ( Price )
		*Price = GetVendorItemPrice_Parms.Price;

	return GetVendorItemPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetVendorItemInfo
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )
// int                            VendorItemId                   ( CPF_Parm )
// struct FString                 ItemName                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 itemDescr                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// struct FString                 ribbonDesc                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UTrEquipInterface::GetVendorItemInfo ( int VendorId, int VendorItemId, struct FString* ItemName, struct FString* itemDescr, struct FString* ribbonDesc )
{
	static UFunction* pFnGetVendorItemInfo = NULL;

	if ( ! pFnGetVendorItemInfo )
		pFnGetVendorItemInfo = (UFunction*) UObject::GObjObjects()->Data[ 57534 ];

	UTrEquipInterface_execGetVendorItemInfo_Parms GetVendorItemInfo_Parms;
	GetVendorItemInfo_Parms.VendorId = VendorId;
	GetVendorItemInfo_Parms.VendorItemId = VendorItemId;

	pFnGetVendorItemInfo->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorItemInfo, &GetVendorItemInfo_Parms, NULL );

	pFnGetVendorItemInfo->FunctionFlags |= 0x400;

	if ( ItemName )
		memcpy ( ItemName, &GetVendorItemInfo_Parms.ItemName, 0xC );

	if ( itemDescr )
		memcpy ( itemDescr, &GetVendorItemInfo_Parms.itemDescr, 0xC );

	if ( ribbonDesc )
		memcpy ( ribbonDesc, &GetVendorItemInfo_Parms.ribbonDesc, 0xC );

	return GetVendorItemInfo_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetVendorItemId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

int UTrEquipInterface::GetVendorItemId ( int VendorId, int Index )
{
	static UFunction* pFnGetVendorItemId = NULL;

	if ( ! pFnGetVendorItemId )
		pFnGetVendorItemId = (UFunction*) UObject::GObjObjects()->Data[ 57507 ];

	UTrEquipInterface_execGetVendorItemId_Parms GetVendorItemId_Parms;
	GetVendorItemId_Parms.VendorId = VendorId;
	GetVendorItemId_Parms.Index = Index;

	pFnGetVendorItemId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorItemId, &GetVendorItemId_Parms, NULL );

	pFnGetVendorItemId->FunctionFlags |= 0x400;

	return GetVendorItemId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetVendorSize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )

int UTrEquipInterface::GetVendorSize ( int VendorId )
{
	static UFunction* pFnGetVendorSize = NULL;

	if ( ! pFnGetVendorSize )
		pFnGetVendorSize = (UFunction*) UObject::GObjObjects()->Data[ 57505 ];

	UTrEquipInterface_execGetVendorSize_Parms GetVendorSize_Parms;
	GetVendorSize_Parms.VendorId = VendorId;

	pFnGetVendorSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetVendorSize, &GetVendorSize_Parms, NULL );

	pFnGetVendorSize->FunctionFlags |= 0x400;

	return GetVendorSize_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseGeneral
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            VendorId                       ( CPF_Parm )
// int                            VendorItemId                   ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )
// struct FString                 UserCustomInput                ( CPF_Parm | CPF_NeedCtorLink )

bool UTrEquipInterface::RequestPurchaseGeneral ( int VendorId, int VendorItemId, int Currency, struct FString UserCustomInput )
{
	static UFunction* pFnRequestPurchaseGeneral = NULL;

	if ( ! pFnRequestPurchaseGeneral )
		pFnRequestPurchaseGeneral = (UFunction*) UObject::GObjObjects()->Data[ 57577 ];

	UTrEquipInterface_execRequestPurchaseGeneral_Parms RequestPurchaseGeneral_Parms;
	RequestPurchaseGeneral_Parms.VendorId = VendorId;
	RequestPurchaseGeneral_Parms.VendorItemId = VendorItemId;
	RequestPurchaseGeneral_Parms.Currency = Currency;
	memcpy ( &RequestPurchaseGeneral_Parms.UserCustomInput, &UserCustomInput, 0xC );

	pFnRequestPurchaseGeneral->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseGeneral, &RequestPurchaseGeneral_Parms, NULL );

	pFnRequestPurchaseGeneral->FunctionFlags |= 0x400;

	return RequestPurchaseGeneral_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.SaveProfile
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrEquipInterface::SaveProfile ( )
{
	static UFunction* pFnSaveProfile = NULL;

	if ( ! pFnSaveProfile )
		pFnSaveProfile = (UFunction*) UObject::GObjObjects()->Data[ 86629 ];

	UTrEquipInterface_execSaveProfile_Parms SaveProfile_Parms;

	pFnSaveProfile->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSaveProfile, &SaveProfile_Parms, NULL );

	pFnSaveProfile->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseUpgrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )
// int                            Upgrade                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseUpgrade ( int ClassId, int Type, int equip, int Upgrade, int Currency )
{
	static UFunction* pFnRequestPurchaseUpgrade = NULL;

	if ( ! pFnRequestPurchaseUpgrade )
		pFnRequestPurchaseUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 86622 ];

	UTrEquipInterface_execRequestPurchaseUpgrade_Parms RequestPurchaseUpgrade_Parms;
	RequestPurchaseUpgrade_Parms.ClassId = ClassId;
	RequestPurchaseUpgrade_Parms.Type = Type;
	RequestPurchaseUpgrade_Parms.equip = equip;
	RequestPurchaseUpgrade_Parms.Upgrade = Upgrade;
	RequestPurchaseUpgrade_Parms.Currency = Currency;

	pFnRequestPurchaseUpgrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseUpgrade, &RequestPurchaseUpgrade_Parms, NULL );

	pFnRequestPurchaseUpgrade->FunctionFlags |= 0x400;

	return RequestPurchaseUpgrade_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseReticule
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseReticule ( int ClassId, int Type, int equip, int Currency )
{
	static UFunction* pFnRequestPurchaseReticule = NULL;

	if ( ! pFnRequestPurchaseReticule )
		pFnRequestPurchaseReticule = (UFunction*) UObject::GObjObjects()->Data[ 86616 ];

	UTrEquipInterface_execRequestPurchaseReticule_Parms RequestPurchaseReticule_Parms;
	RequestPurchaseReticule_Parms.ClassId = ClassId;
	RequestPurchaseReticule_Parms.Type = Type;
	RequestPurchaseReticule_Parms.equip = equip;
	RequestPurchaseReticule_Parms.Currency = Currency;

	pFnRequestPurchaseReticule->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseReticule, &RequestPurchaseReticule_Parms, NULL );

	pFnRequestPurchaseReticule->FunctionFlags |= 0x400;

	return RequestPurchaseReticule_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseEquip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseEquip ( int ClassId, int Type, int equip, int Currency )
{
	static UFunction* pFnRequestPurchaseEquip = NULL;

	if ( ! pFnRequestPurchaseEquip )
		pFnRequestPurchaseEquip = (UFunction*) UObject::GObjObjects()->Data[ 58422 ];

	UTrEquipInterface_execRequestPurchaseEquip_Parms RequestPurchaseEquip_Parms;
	RequestPurchaseEquip_Parms.ClassId = ClassId;
	RequestPurchaseEquip_Parms.Type = Type;
	RequestPurchaseEquip_Parms.equip = equip;
	RequestPurchaseEquip_Parms.Currency = Currency;

	pFnRequestPurchaseEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseEquip, &RequestPurchaseEquip_Parms, NULL );

	pFnRequestPurchaseEquip->FunctionFlags |= 0x400;

	return RequestPurchaseEquip_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseLoadout
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseLoadout ( int ClassId, int Loadout, int Currency )
{
	static UFunction* pFnRequestPurchaseLoadout = NULL;

	if ( ! pFnRequestPurchaseLoadout )
		pFnRequestPurchaseLoadout = (UFunction*) UObject::GObjObjects()->Data[ 59086 ];

	UTrEquipInterface_execRequestPurchaseLoadout_Parms RequestPurchaseLoadout_Parms;
	RequestPurchaseLoadout_Parms.ClassId = ClassId;
	RequestPurchaseLoadout_Parms.Loadout = Loadout;
	RequestPurchaseLoadout_Parms.Currency = Currency;

	pFnRequestPurchaseLoadout->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseLoadout, &RequestPurchaseLoadout_Parms, NULL );

	pFnRequestPurchaseLoadout->FunctionFlags |= 0x400;

	return RequestPurchaseLoadout_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseMastery
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseMastery ( int ClassId, int Type, int equip )
{
	static UFunction* pFnRequestPurchaseMastery = NULL;

	if ( ! pFnRequestPurchaseMastery )
		pFnRequestPurchaseMastery = (UFunction*) UObject::GObjObjects()->Data[ 58420 ];

	UTrEquipInterface_execRequestPurchaseMastery_Parms RequestPurchaseMastery_Parms;
	RequestPurchaseMastery_Parms.ClassId = ClassId;
	RequestPurchaseMastery_Parms.Type = Type;
	RequestPurchaseMastery_Parms.equip = equip;

	pFnRequestPurchaseMastery->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseMastery, &RequestPurchaseMastery_Parms, NULL );

	pFnRequestPurchaseMastery->FunctionFlags |= 0x400;

	return RequestPurchaseMastery_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseClass ( int ClassId, int Currency )
{
	static UFunction* pFnRequestPurchaseClass = NULL;

	if ( ! pFnRequestPurchaseClass )
		pFnRequestPurchaseClass = (UFunction*) UObject::GObjObjects()->Data[ 57947 ];

	UTrEquipInterface_execRequestPurchaseClass_Parms RequestPurchaseClass_Parms;
	RequestPurchaseClass_Parms.ClassId = ClassId;
	RequestPurchaseClass_Parms.Currency = Currency;

	pFnRequestPurchaseClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseClass, &RequestPurchaseClass_Parms, NULL );

	pFnRequestPurchaseClass->FunctionFlags |= 0x400;

	return RequestPurchaseClass_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetUpgradePrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )
// int                            Upgrade                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

int UTrEquipInterface::GetUpgradePrice ( int ClassId, int Type, int equip, int Upgrade, int Currency )
{
	static UFunction* pFnGetUpgradePrice = NULL;

	if ( ! pFnGetUpgradePrice )
		pFnGetUpgradePrice = (UFunction*) UObject::GObjObjects()->Data[ 86597 ];

	UTrEquipInterface_execGetUpgradePrice_Parms GetUpgradePrice_Parms;
	GetUpgradePrice_Parms.ClassId = ClassId;
	GetUpgradePrice_Parms.Type = Type;
	GetUpgradePrice_Parms.equip = equip;
	GetUpgradePrice_Parms.Upgrade = Upgrade;
	GetUpgradePrice_Parms.Currency = Currency;

	pFnGetUpgradePrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpgradePrice, &GetUpgradePrice_Parms, NULL );

	pFnGetUpgradePrice->FunctionFlags |= 0x400;

	return GetUpgradePrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.SetActiveEquipId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

bool UTrEquipInterface::SetActiveEquipId ( int ClassId, int Type, int Loadout, int equip )
{
	static UFunction* pFnSetActiveEquipId = NULL;

	if ( ! pFnSetActiveEquipId )
		pFnSetActiveEquipId = (UFunction*) UObject::GObjObjects()->Data[ 58275 ];

	UTrEquipInterface_execSetActiveEquipId_Parms SetActiveEquipId_Parms;
	SetActiveEquipId_Parms.ClassId = ClassId;
	SetActiveEquipId_Parms.Type = Type;
	SetActiveEquipId_Parms.Loadout = Loadout;
	SetActiveEquipId_Parms.equip = equip;

	pFnSetActiveEquipId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveEquipId, &SetActiveEquipId_Parms, NULL );

	pFnSetActiveEquipId->FunctionFlags |= 0x400;

	return SetActiveEquipId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetActiveEquipId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

int UTrEquipInterface::GetActiveEquipId ( int ClassId, int Type, int Loadout )
{
	static UFunction* pFnGetActiveEquipId = NULL;

	if ( ! pFnGetActiveEquipId )
		pFnGetActiveEquipId = (UFunction*) UObject::GObjObjects()->Data[ 57821 ];

	UTrEquipInterface_execGetActiveEquipId_Parms GetActiveEquipId_Parms;
	GetActiveEquipId_Parms.ClassId = ClassId;
	GetActiveEquipId_Parms.Type = Type;
	GetActiveEquipId_Parms.Loadout = Loadout;

	pFnGetActiveEquipId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetActiveEquipId, &GetActiveEquipId_Parms, NULL );

	pFnGetActiveEquipId->FunctionFlags |= 0x400;

	return GetActiveEquipId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RetrieveActives
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrEquipInterface::RetrieveActives ( )
{
	static UFunction* pFnRetrieveActives = NULL;

	if ( ! pFnRetrieveActives )
		pFnRetrieveActives = (UFunction*) UObject::GObjObjects()->Data[ 86589 ];

	UTrEquipInterface_execRetrieveActives_Parms RetrieveActives_Parms;

	pFnRetrieveActives->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRetrieveActives, &RetrieveActives_Parms, NULL );

	pFnRetrieveActives->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.RequestPurchaseDeal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Currency                       ( CPF_Parm )

bool UTrEquipInterface::RequestPurchaseDeal ( int Currency )
{
	static UFunction* pFnRequestPurchaseDeal = NULL;

	if ( ! pFnRequestPurchaseDeal )
		pFnRequestPurchaseDeal = (UFunction*) UObject::GObjObjects()->Data[ 60930 ];

	UTrEquipInterface_execRequestPurchaseDeal_Parms RequestPurchaseDeal_Parms;
	RequestPurchaseDeal_Parms.Currency = Currency;

	pFnRequestPurchaseDeal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPurchaseDeal, &RequestPurchaseDeal_Parms, NULL );

	pFnRequestPurchaseDeal->FunctionFlags |= 0x400;

	return RequestPurchaseDeal_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealPercentOff
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealPercentOff ( )
{
	static UFunction* pFnGetDailyDealPercentOff = NULL;

	if ( ! pFnGetDailyDealPercentOff )
		pFnGetDailyDealPercentOff = (UFunction*) UObject::GObjObjects()->Data[ 56522 ];

	UTrEquipInterface_execGetDailyDealPercentOff_Parms GetDailyDealPercentOff_Parms;

	pFnGetDailyDealPercentOff->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealPercentOff, &GetDailyDealPercentOff_Parms, NULL );

	pFnGetDailyDealPercentOff->FunctionFlags |= 0x400;

	return GetDailyDealPercentOff_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealSecsLeft
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealSecsLeft ( )
{
	static UFunction* pFnGetDailyDealSecsLeft = NULL;

	if ( ! pFnGetDailyDealSecsLeft )
		pFnGetDailyDealSecsLeft = (UFunction*) UObject::GObjObjects()->Data[ 59233 ];

	UTrEquipInterface_execGetDailyDealSecsLeft_Parms GetDailyDealSecsLeft_Parms;

	pFnGetDailyDealSecsLeft->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealSecsLeft, &GetDailyDealSecsLeft_Parms, NULL );

	pFnGetDailyDealSecsLeft->FunctionFlags |= 0x400;

	return GetDailyDealSecsLeft_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealNewPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealNewPrice ( )
{
	static UFunction* pFnGetDailyDealNewPrice = NULL;

	if ( ! pFnGetDailyDealNewPrice )
		pFnGetDailyDealNewPrice = (UFunction*) UObject::GObjObjects()->Data[ 59221 ];

	UTrEquipInterface_execGetDailyDealNewPrice_Parms GetDailyDealNewPrice_Parms;

	pFnGetDailyDealNewPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealNewPrice, &GetDailyDealNewPrice_Parms, NULL );

	pFnGetDailyDealNewPrice->FunctionFlags |= 0x400;

	return GetDailyDealNewPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealOldPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealOldPrice ( )
{
	static UFunction* pFnGetDailyDealOldPrice = NULL;

	if ( ! pFnGetDailyDealOldPrice )
		pFnGetDailyDealOldPrice = (UFunction*) UObject::GObjObjects()->Data[ 59219 ];

	UTrEquipInterface_execGetDailyDealOldPrice_Parms GetDailyDealOldPrice_Parms;

	pFnGetDailyDealOldPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealOldPrice, &GetDailyDealOldPrice_Parms, NULL );

	pFnGetDailyDealOldPrice->FunctionFlags |= 0x400;

	return GetDailyDealOldPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealXPPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealXPPrice ( )
{
	static UFunction* pFnGetDailyDealXPPrice = NULL;

	if ( ! pFnGetDailyDealXPPrice )
		pFnGetDailyDealXPPrice = (UFunction*) UObject::GObjObjects()->Data[ 60913 ];

	UTrEquipInterface_execGetDailyDealXPPrice_Parms GetDailyDealXPPrice_Parms;

	pFnGetDailyDealXPPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealXPPrice, &GetDailyDealXPPrice_Parms, NULL );

	pFnGetDailyDealXPPrice->FunctionFlags |= 0x400;

	return GetDailyDealXPPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealLootId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealLootId ( )
{
	static UFunction* pFnGetDailyDealLootId = NULL;

	if ( ! pFnGetDailyDealLootId )
		pFnGetDailyDealLootId = (UFunction*) UObject::GObjObjects()->Data[ 86586 ];

	UTrEquipInterface_execGetDailyDealLootId_Parms GetDailyDealLootId_Parms;

	pFnGetDailyDealLootId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealLootId, &GetDailyDealLootId_Parms, NULL );

	pFnGetDailyDealLootId->FunctionFlags |= 0x400;

	return GetDailyDealLootId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealItemId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealItemId ( )
{
	static UFunction* pFnGetDailyDealItemId = NULL;

	if ( ! pFnGetDailyDealItemId )
		pFnGetDailyDealItemId = (UFunction*) UObject::GObjObjects()->Data[ 56520 ];

	UTrEquipInterface_execGetDailyDealItemId_Parms GetDailyDealItemId_Parms;

	pFnGetDailyDealItemId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealItemId, &GetDailyDealItemId_Parms, NULL );

	pFnGetDailyDealItemId->FunctionFlags |= 0x400;

	return GetDailyDealItemId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealClass ( )
{
	static UFunction* pFnGetDailyDealClass = NULL;

	if ( ! pFnGetDailyDealClass )
		pFnGetDailyDealClass = (UFunction*) UObject::GObjObjects()->Data[ 59223 ];

	UTrEquipInterface_execGetDailyDealClass_Parms GetDailyDealClass_Parms;

	pFnGetDailyDealClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealClass, &GetDailyDealClass_Parms, NULL );

	pFnGetDailyDealClass->FunctionFlags |= 0x400;

	return GetDailyDealClass_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetDailyDealType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetDailyDealType ( )
{
	static UFunction* pFnGetDailyDealType = NULL;

	if ( ! pFnGetDailyDealType )
		pFnGetDailyDealType = (UFunction*) UObject::GObjObjects()->Data[ 59225 ];

	UTrEquipInterface_execGetDailyDealType_Parms GetDailyDealType_Parms;

	pFnGetDailyDealType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetDailyDealType, &GetDailyDealType_Parms, NULL );

	pFnGetDailyDealType->FunctionFlags |= 0x400;

	return GetDailyDealType_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsDailyDealOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrEquipInterface::IsDailyDealOwned ( )
{
	static UFunction* pFnIsDailyDealOwned = NULL;

	if ( ! pFnIsDailyDealOwned )
		pFnIsDailyDealOwned = (UFunction*) UObject::GObjObjects()->Data[ 59214 ];

	UTrEquipInterface_execIsDailyDealOwned_Parms IsDailyDealOwned_Parms;

	pFnIsDailyDealOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsDailyDealOwned, &IsDailyDealOwned_Parms, NULL );

	pFnIsDailyDealOwned->FunctionFlags |= 0x400;

	return IsDailyDealOwned_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetBundleParent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BundleId                       ( CPF_Parm )

int UTrEquipInterface::GetBundleParent ( int BundleId )
{
	static UFunction* pFnGetBundleParent = NULL;

	if ( ! pFnGetBundleParent )
		pFnGetBundleParent = (UFunction*) UObject::GObjObjects()->Data[ 57496 ];

	UTrEquipInterface_execGetBundleParent_Parms GetBundleParent_Parms;
	GetBundleParent_Parms.BundleId = BundleId;

	pFnGetBundleParent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetBundleParent, &GetBundleParent_Parms, NULL );

	pFnGetBundleParent->FunctionFlags |= 0x400;

	return GetBundleParent_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsBundleOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BundleId                       ( CPF_Parm )

bool UTrEquipInterface::IsBundleOwned ( int BundleId )
{
	static UFunction* pFnIsBundleOwned = NULL;

	if ( ! pFnIsBundleOwned )
		pFnIsBundleOwned = (UFunction*) UObject::GObjObjects()->Data[ 57498 ];

	UTrEquipInterface_execIsBundleOwned_Parms IsBundleOwned_Parms;
	IsBundleOwned_Parms.BundleId = BundleId;

	pFnIsBundleOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBundleOwned, &IsBundleOwned_Parms, NULL );

	pFnIsBundleOwned->FunctionFlags |= 0x400;

	return IsBundleOwned_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.SetLoadoutName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )
// struct FString                 loadoutName                    ( CPF_Parm | CPF_NeedCtorLink )

bool UTrEquipInterface::SetLoadoutName ( int ClassId, int Loadout, struct FString loadoutName )
{
	static UFunction* pFnSetLoadoutName = NULL;

	if ( ! pFnSetLoadoutName )
		pFnSetLoadoutName = (UFunction*) UObject::GObjObjects()->Data[ 57884 ];

	UTrEquipInterface_execSetLoadoutName_Parms SetLoadoutName_Parms;
	SetLoadoutName_Parms.ClassId = ClassId;
	SetLoadoutName_Parms.Loadout = Loadout;
	memcpy ( &SetLoadoutName_Parms.loadoutName, &loadoutName, 0xC );

	pFnSetLoadoutName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLoadoutName, &SetLoadoutName_Parms, NULL );

	pFnSetLoadoutName->FunctionFlags |= 0x400;

	return SetLoadoutName_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetLoadoutPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

int UTrEquipInterface::GetLoadoutPrice ( int ClassId, int Loadout, int Currency )
{
	static UFunction* pFnGetLoadoutPrice = NULL;

	if ( ! pFnGetLoadoutPrice )
		pFnGetLoadoutPrice = (UFunction*) UObject::GObjObjects()->Data[ 59071 ];

	UTrEquipInterface_execGetLoadoutPrice_Parms GetLoadoutPrice_Parms;
	GetLoadoutPrice_Parms.ClassId = ClassId;
	GetLoadoutPrice_Parms.Loadout = Loadout;
	GetLoadoutPrice_Parms.Currency = Currency;

	pFnGetLoadoutPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoadoutPrice, &GetLoadoutPrice_Parms, NULL );

	pFnGetLoadoutPrice->FunctionFlags |= 0x400;

	return GetLoadoutPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetLoadoutName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

struct FString UTrEquipInterface::GetLoadoutName ( int ClassId, int Loadout )
{
	static UFunction* pFnGetLoadoutName = NULL;

	if ( ! pFnGetLoadoutName )
		pFnGetLoadoutName = (UFunction*) UObject::GObjObjects()->Data[ 53306 ];

	UTrEquipInterface_execGetLoadoutName_Parms GetLoadoutName_Parms;
	GetLoadoutName_Parms.ClassId = ClassId;
	GetLoadoutName_Parms.Loadout = Loadout;

	pFnGetLoadoutName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLoadoutName, &GetLoadoutName_Parms, NULL );

	pFnGetLoadoutName->FunctionFlags |= 0x400;

	return GetLoadoutName_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsLoadoutOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool UTrEquipInterface::IsLoadoutOwned ( int ClassId, int Loadout )
{
	static UFunction* pFnIsLoadoutOwned = NULL;

	if ( ! pFnIsLoadoutOwned )
		pFnIsLoadoutOwned = (UFunction*) UObject::GObjObjects()->Data[ 53304 ];

	UTrEquipInterface_execIsLoadoutOwned_Parms IsLoadoutOwned_Parms;
	IsLoadoutOwned_Parms.ClassId = ClassId;
	IsLoadoutOwned_Parms.Loadout = Loadout;

	pFnIsLoadoutOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsLoadoutOwned, &IsLoadoutOwned_Parms, NULL );

	pFnIsLoadoutOwned->FunctionFlags |= 0x400;

	return IsLoadoutOwned_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetMasteryPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

int UTrEquipInterface::GetMasteryPrice ( int ClassId, int Type, int equip )
{
	static UFunction* pFnGetMasteryPrice = NULL;

	if ( ! pFnGetMasteryPrice )
		pFnGetMasteryPrice = (UFunction*) UObject::GObjObjects()->Data[ 58349 ];

	UTrEquipInterface_execGetMasteryPrice_Parms GetMasteryPrice_Parms;
	GetMasteryPrice_Parms.ClassId = ClassId;
	GetMasteryPrice_Parms.Type = Type;
	GetMasteryPrice_Parms.equip = equip;

	pFnGetMasteryPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMasteryPrice, &GetMasteryPrice_Parms, NULL );

	pFnGetMasteryPrice->FunctionFlags |= 0x400;

	return GetMasteryPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetFirstEquipId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )

int UTrEquipInterface::GetFirstEquipId ( int ClassId, int Type )
{
	static UFunction* pFnGetFirstEquipId = NULL;

	if ( ! pFnGetFirstEquipId )
		pFnGetFirstEquipId = (UFunction*) UObject::GObjObjects()->Data[ 86567 ];

	UTrEquipInterface_execGetFirstEquipId_Parms GetFirstEquipId_Parms;
	GetFirstEquipId_Parms.ClassId = ClassId;
	GetFirstEquipId_Parms.Type = Type;

	pFnGetFirstEquipId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFirstEquipId, &GetFirstEquipId_Parms, NULL );

	pFnGetFirstEquipId->FunctionFlags |= 0x400;

	return GetFirstEquipId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetEquipRibbon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

int UTrEquipInterface::GetEquipRibbon ( int ClassId, int Type, int equip )
{
	static UFunction* pFnGetEquipRibbon = NULL;

	if ( ! pFnGetEquipRibbon )
		pFnGetEquipRibbon = (UFunction*) UObject::GObjObjects()->Data[ 86562 ];

	UTrEquipInterface_execGetEquipRibbon_Parms GetEquipRibbon_Parms;
	GetEquipRibbon_Parms.ClassId = ClassId;
	GetEquipRibbon_Parms.Type = Type;
	GetEquipRibbon_Parms.equip = equip;

	pFnGetEquipRibbon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipRibbon, &GetEquipRibbon_Parms, NULL );

	pFnGetEquipRibbon->FunctionFlags |= 0x400;

	return GetEquipRibbon_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetNextEquipId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            PrevClass                      ( CPF_Parm )

int UTrEquipInterface::GetNextEquipId ( int ClassId, int Type, int PrevClass )
{
	static UFunction* pFnGetNextEquipId = NULL;

	if ( ! pFnGetNextEquipId )
		pFnGetNextEquipId = (UFunction*) UObject::GObjObjects()->Data[ 86557 ];

	UTrEquipInterface_execGetNextEquipId_Parms GetNextEquipId_Parms;
	GetNextEquipId_Parms.ClassId = ClassId;
	GetNextEquipId_Parms.Type = Type;
	GetNextEquipId_Parms.PrevClass = PrevClass;

	pFnGetNextEquipId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextEquipId, &GetNextEquipId_Parms, NULL );

	pFnGetNextEquipId->FunctionFlags |= 0x400;

	return GetNextEquipId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetEquipPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

int UTrEquipInterface::GetEquipPrice ( int ClassId, int Type, int equip, int Currency )
{
	static UFunction* pFnGetEquipPrice = NULL;

	if ( ! pFnGetEquipPrice )
		pFnGetEquipPrice = (UFunction*) UObject::GObjObjects()->Data[ 58364 ];

	UTrEquipInterface_execGetEquipPrice_Parms GetEquipPrice_Parms;
	GetEquipPrice_Parms.ClassId = ClassId;
	GetEquipPrice_Parms.Type = Type;
	GetEquipPrice_Parms.equip = equip;
	GetEquipPrice_Parms.Currency = Currency;

	pFnGetEquipPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipPrice, &GetEquipPrice_Parms, NULL );

	pFnGetEquipPrice->FunctionFlags |= 0x400;

	return GetEquipPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetEquipCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )

int UTrEquipInterface::GetEquipCount ( int ClassId, int Type )
{
	static UFunction* pFnGetEquipCount = NULL;

	if ( ! pFnGetEquipCount )
		pFnGetEquipCount = (UFunction*) UObject::GObjObjects()->Data[ 57827 ];

	UTrEquipInterface_execGetEquipCount_Parms GetEquipCount_Parms;
	GetEquipCount_Parms.ClassId = ClassId;
	GetEquipCount_Parms.Type = Type;

	pFnGetEquipCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipCount, &GetEquipCount_Parms, NULL );

	pFnGetEquipCount->FunctionFlags |= 0x400;

	return GetEquipCount_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetEquipLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

int UTrEquipInterface::GetEquipLevel ( int ClassId, int Type, int equip )
{
	static UFunction* pFnGetEquipLevel = NULL;

	if ( ! pFnGetEquipLevel )
		pFnGetEquipLevel = (UFunction*) UObject::GObjObjects()->Data[ 58309 ];

	UTrEquipInterface_execGetEquipLevel_Parms GetEquipLevel_Parms;
	GetEquipLevel_Parms.ClassId = ClassId;
	GetEquipLevel_Parms.Type = Type;
	GetEquipLevel_Parms.equip = equip;

	pFnGetEquipLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipLevel, &GetEquipLevel_Parms, NULL );

	pFnGetEquipLevel->FunctionFlags |= 0x400;

	return GetEquipLevel_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsEquipMaxed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

bool UTrEquipInterface::IsEquipMaxed ( int ClassId, int Type, int equip )
{
	static UFunction* pFnIsEquipMaxed = NULL;

	if ( ! pFnIsEquipMaxed )
		pFnIsEquipMaxed = (UFunction*) UObject::GObjObjects()->Data[ 58307 ];

	UTrEquipInterface_execIsEquipMaxed_Parms IsEquipMaxed_Parms;
	IsEquipMaxed_Parms.ClassId = ClassId;
	IsEquipMaxed_Parms.Type = Type;
	IsEquipMaxed_Parms.equip = equip;

	pFnIsEquipMaxed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEquipMaxed, &IsEquipMaxed_Parms, NULL );

	pFnIsEquipMaxed->FunctionFlags |= 0x400;

	return IsEquipMaxed_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsEquipOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

bool UTrEquipInterface::IsEquipOwned ( int ClassId, int Type, int equip )
{
	static UFunction* pFnIsEquipOwned = NULL;

	if ( ! pFnIsEquipOwned )
		pFnIsEquipOwned = (UFunction*) UObject::GObjObjects()->Data[ 58305 ];

	UTrEquipInterface_execIsEquipOwned_Parms IsEquipOwned_Parms;
	IsEquipOwned_Parms.ClassId = ClassId;
	IsEquipOwned_Parms.Type = Type;
	IsEquipOwned_Parms.equip = equip;

	pFnIsEquipOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsEquipOwned, &IsEquipOwned_Parms, NULL );

	pFnIsEquipOwned->FunctionFlags |= 0x400;

	return IsEquipOwned_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetEquipId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

int UTrEquipInterface::GetEquipId ( int ClassId, int Type, int Index )
{
	static UFunction* pFnGetEquipId = NULL;

	if ( ! pFnGetEquipId )
		pFnGetEquipId = (UFunction*) UObject::GObjObjects()->Data[ 57829 ];

	UTrEquipInterface_execGetEquipId_Parms GetEquipId_Parms;
	GetEquipId_Parms.ClassId = ClassId;
	GetEquipId_Parms.Type = Type;
	GetEquipId_Parms.Index = Index;

	pFnGetEquipId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetEquipId, &GetEquipId_Parms, NULL );

	pFnGetEquipId->FunctionFlags |= 0x400;

	return GetEquipId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetClassUnlockPercent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

float UTrEquipInterface::GetClassUnlockPercent ( int ClassId )
{
	static UFunction* pFnGetClassUnlockPercent = NULL;

	if ( ! pFnGetClassUnlockPercent )
		pFnGetClassUnlockPercent = (UFunction*) UObject::GObjObjects()->Data[ 56514 ];

	UTrEquipInterface_execGetClassUnlockPercent_Parms GetClassUnlockPercent_Parms;
	GetClassUnlockPercent_Parms.ClassId = ClassId;

	pFnGetClassUnlockPercent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassUnlockPercent, &GetClassUnlockPercent_Parms, NULL );

	pFnGetClassUnlockPercent->FunctionFlags |= 0x400;

	return GetClassUnlockPercent_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetFirstClassId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetFirstClassId ( )
{
	static UFunction* pFnGetFirstClassId = NULL;

	if ( ! pFnGetFirstClassId )
		pFnGetFirstClassId = (UFunction*) UObject::GObjObjects()->Data[ 57896 ];

	UTrEquipInterface_execGetFirstClassId_Parms GetFirstClassId_Parms;

	pFnGetFirstClassId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetFirstClassId, &GetFirstClassId_Parms, NULL );

	pFnGetFirstClassId->FunctionFlags |= 0x400;

	return GetFirstClassId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetClassRibbon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

int UTrEquipInterface::GetClassRibbon ( int ClassId )
{
	static UFunction* pFnGetClassRibbon = NULL;

	if ( ! pFnGetClassRibbon )
		pFnGetClassRibbon = (UFunction*) UObject::GObjObjects()->Data[ 86535 ];

	UTrEquipInterface_execGetClassRibbon_Parms GetClassRibbon_Parms;
	GetClassRibbon_Parms.ClassId = ClassId;

	pFnGetClassRibbon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassRibbon, &GetClassRibbon_Parms, NULL );

	pFnGetClassRibbon->FunctionFlags |= 0x400;

	return GetClassRibbon_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetNextClassId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PrevClass                      ( CPF_Parm )

int UTrEquipInterface::GetNextClassId ( int PrevClass )
{
	static UFunction* pFnGetNextClassId = NULL;

	if ( ! pFnGetNextClassId )
		pFnGetNextClassId = (UFunction*) UObject::GObjObjects()->Data[ 57898 ];

	UTrEquipInterface_execGetNextClassId_Parms GetNextClassId_Parms;
	GetNextClassId_Parms.PrevClass = PrevClass;

	pFnGetNextClassId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextClassId, &GetNextClassId_Parms, NULL );

	pFnGetNextClassId->FunctionFlags |= 0x400;

	return GetNextClassId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetClassPrice
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Currency                       ( CPF_Parm )

int UTrEquipInterface::GetClassPrice ( int ClassId, int Currency )
{
	static UFunction* pFnGetClassPrice = NULL;

	if ( ! pFnGetClassPrice )
		pFnGetClassPrice = (UFunction*) UObject::GObjObjects()->Data[ 56517 ];

	UTrEquipInterface_execGetClassPrice_Parms GetClassPrice_Parms;
	GetClassPrice_Parms.ClassId = ClassId;
	GetClassPrice_Parms.Currency = Currency;

	pFnGetClassPrice->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassPrice, &GetClassPrice_Parms, NULL );

	pFnGetClassPrice->FunctionFlags |= 0x400;

	return GetClassPrice_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetClassCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrEquipInterface::GetClassCount ( )
{
	static UFunction* pFnGetClassCount = NULL;

	if ( ! pFnGetClassCount )
		pFnGetClassCount = (UFunction*) UObject::GObjObjects()->Data[ 86530 ];

	UTrEquipInterface_execGetClassCount_Parms GetClassCount_Parms;

	pFnGetClassCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassCount, &GetClassCount_Parms, NULL );

	pFnGetClassCount->FunctionFlags |= 0x400;

	return GetClassCount_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.IsClassOwned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

bool UTrEquipInterface::IsClassOwned ( int ClassId )
{
	static UFunction* pFnIsClassOwned = NULL;

	if ( ! pFnIsClassOwned )
		pFnIsClassOwned = (UFunction*) UObject::GObjObjects()->Data[ 53294 ];

	UTrEquipInterface_execIsClassOwned_Parms IsClassOwned_Parms;
	IsClassOwned_Parms.ClassId = ClassId;

	pFnIsClassOwned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsClassOwned, &IsClassOwned_Parms, NULL );

	pFnIsClassOwned->FunctionFlags |= 0x400;

	return IsClassOwned_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.GetClassId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int UTrEquipInterface::GetClassId ( int Index )
{
	static UFunction* pFnGetClassId = NULL;

	if ( ! pFnGetClassId )
		pFnGetClassId = (UFunction*) UObject::GObjObjects()->Data[ 57910 ];

	UTrEquipInterface_execGetClassId_Parms GetClassId_Parms;
	GetClassId_Parms.Index = Index;

	pFnGetClassId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetClassId, &GetClassId_Parms, NULL );

	pFnGetClassId->FunctionFlags |= 0x400;

	return GetClassId_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.RegisterMarshalCallback
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FScriptDelegate         MarshalEventDelegate           ( CPF_Parm | CPF_NeedCtorLink )

bool UTrEquipInterface::RegisterMarshalCallback ( struct FScriptDelegate MarshalEventDelegate )
{
	static UFunction* pFnRegisterMarshalCallback = NULL;

	if ( ! pFnRegisterMarshalCallback )
		pFnRegisterMarshalCallback = (UFunction*) UObject::GObjObjects()->Data[ 86525 ];

	UTrEquipInterface_execRegisterMarshalCallback_Parms RegisterMarshalCallback_Parms;
	memcpy ( &RegisterMarshalCallback_Parms.MarshalEventDelegate, &MarshalEventDelegate, 0xC );

	pFnRegisterMarshalCallback->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterMarshalCallback, &RegisterMarshalCallback_Parms, NULL );

	pFnRegisterMarshalCallback->FunctionFlags |= 0x400;

	return RegisterMarshalCallback_Parms.ReturnValue;
};

// Function TribesGame.TrEquipInterface.OnMarshalEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FPointer                pMarEvent                      ( CPF_Parm )

void UTrEquipInterface::OnMarshalEvent ( struct FPointer pMarEvent )
{
	static UFunction* pFnOnMarshalEvent = NULL;

	if ( ! pFnOnMarshalEvent )
		pFnOnMarshalEvent = (UFunction*) UObject::GObjObjects()->Data[ 86523 ];

	UTrEquipInterface_execOnMarshalEvent_Parms OnMarshalEvent_Parms;
	memcpy ( &OnMarshalEvent_Parms.pMarEvent, &pMarEvent, 0x4 );

	pFnOnMarshalEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnMarshalEvent, &OnMarshalEvent_Parms, NULL );

	pFnOnMarshalEvent->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.SetDefaultEquip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// int                            equip                          ( CPF_Parm )

void UTrEquipInterface::SetDefaultEquip ( int ClassId, int Type, int equip )
{
	static UFunction* pFnSetDefaultEquip = NULL;

	if ( ! pFnSetDefaultEquip )
		pFnSetDefaultEquip = (UFunction*) UObject::GObjObjects()->Data[ 86519 ];

	UTrEquipInterface_execSetDefaultEquip_Parms SetDefaultEquip_Parms;
	SetDefaultEquip_Parms.ClassId = ClassId;
	SetDefaultEquip_Parms.Type = Type;
	SetDefaultEquip_Parms.equip = equip;

	pFnSetDefaultEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDefaultEquip, &SetDefaultEquip_Parms, NULL );

	pFnSetDefaultEquip->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.InitClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )

void UTrEquipInterface::InitClass ( int ClassId )
{
	static UFunction* pFnInitClass = NULL;

	if ( ! pFnInitClass )
		pFnInitClass = (UFunction*) UObject::GObjObjects()->Data[ 86517 ];

	UTrEquipInterface_execInitClass_Parms InitClass_Parms;
	InitClass_Parms.ClassId = ClassId;

	pFnInitClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitClass, &InitClass_Parms, NULL );

	pFnInitClass->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.LoadInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrEquipInterface::LoadInventory ( )
{
	static UFunction* pFnLoadInventory = NULL;

	if ( ! pFnLoadInventory )
		pFnLoadInventory = (UFunction*) UObject::GObjObjects()->Data[ 86516 ];

	UTrEquipInterface_execLoadInventory_Parms LoadInventory_Parms;

	pFnLoadInventory->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadInventory, &LoadInventory_Parms, NULL );

	pFnLoadInventory->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEquipInterface.DelegateOnMarshalEvent
// [0x00120000] 
// Parameters infos:
// struct FPointer                pMarEvent                      ( CPF_Parm )

void UTrEquipInterface::DelegateOnMarshalEvent ( struct FPointer pMarEvent )
{
	static UFunction* pFnDelegateOnMarshalEvent = NULL;

	if ( ! pFnDelegateOnMarshalEvent )
		pFnDelegateOnMarshalEvent = (UFunction*) UObject::GObjObjects()->Data[ 86513 ];

	UTrEquipInterface_execDelegateOnMarshalEvent_Parms DelegateOnMarshalEvent_Parms;
	memcpy ( &DelegateOnMarshalEvent_Parms.pMarEvent, &pMarEvent, 0x4 );

	this->ProcessEvent ( pFnDelegateOnMarshalEvent, &DelegateOnMarshalEvent_Parms, NULL );
};

// Function TribesGame.TrFamilyInfo.GetContentDeviceClassStringByEquipPoint
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  EquipPoint                     ( CPF_Parm )

struct FString UTrFamilyInfo::GetContentDeviceClassStringByEquipPoint ( unsigned char EquipPoint )
{
	static UFunction* pFnGetContentDeviceClassStringByEquipPoint = NULL;

	if ( ! pFnGetContentDeviceClassStringByEquipPoint )
		pFnGetContentDeviceClassStringByEquipPoint = (UFunction*) UObject::GObjObjects()->Data[ 86766 ];

	UTrFamilyInfo_execGetContentDeviceClassStringByEquipPoint_Parms GetContentDeviceClassStringByEquipPoint_Parms;
	GetContentDeviceClassStringByEquipPoint_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnGetContentDeviceClassStringByEquipPoint, &GetContentDeviceClassStringByEquipPoint_Parms, NULL );

	return GetContentDeviceClassStringByEquipPoint_Parms.ReturnValue;
};

// Function TribesGame.TrFamilyInfo.GetDeviceClassByEquipPoint
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  EquipPoint                     ( CPF_Parm )

class UClass* UTrFamilyInfo::GetDeviceClassByEquipPoint ( unsigned char EquipPoint )
{
	static UFunction* pFnGetDeviceClassByEquipPoint = NULL;

	if ( ! pFnGetDeviceClassByEquipPoint )
		pFnGetDeviceClassByEquipPoint = (UFunction*) UObject::GObjObjects()->Data[ 86762 ];

	UTrFamilyInfo_execGetDeviceClassByEquipPoint_Parms GetDeviceClassByEquipPoint_Parms;
	GetDeviceClassByEquipPoint_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnGetDeviceClassByEquipPoint, &GetDeviceClassByEquipPoint_Parms, NULL );

	return GetDeviceClassByEquipPoint_Parms.ReturnValue;
};

// Function TribesGame.TrFlagBase.OnCollisionProxyTouched
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrFlagBase::OnCollisionProxyTouched ( class ATrPawn* TRP )
{
	static UFunction* pFnOnCollisionProxyTouched = NULL;

	if ( ! pFnOnCollisionProxyTouched )
		pFnOnCollisionProxyTouched = (UFunction*) UObject::GObjObjects()->Data[ 87644 ];

	ATrFlagBase_execOnCollisionProxyTouched_Parms OnCollisionProxyTouched_Parms;
	OnCollisionProxyTouched_Parms.TRP = TRP;

	this->ProcessEvent ( pFnOnCollisionProxyTouched, &OnCollisionProxyTouched_Parms, NULL );
};

// Function TribesGame.TrFlagBase.GetSpectatorDescription
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrFlagBase::GetSpectatorDescription ( )
{
	static UFunction* pFnGetSpectatorDescription = NULL;

	if ( ! pFnGetSpectatorDescription )
		pFnGetSpectatorDescription = (UFunction*) UObject::GObjObjects()->Data[ 87642 ];

	ATrFlagBase_execGetSpectatorDescription_Parms GetSpectatorDescription_Parms;

	this->ProcessEvent ( pFnGetSpectatorDescription, &GetSpectatorDescription_Parms, NULL );

	return GetSpectatorDescription_Parms.ReturnValue;
};

// Function TribesGame.TrFlagBase.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrFlagBase::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 87640 ];

	ATrFlagBase_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrFlagBase.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void ATrFlagBase::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 87635 ];

	ATrFlagBase_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function TribesGame.TrFlagBase.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrFlagBase::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 87620 ];

	ATrFlagBase_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrFlagBase.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrFlagBase::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 87618 ];

	ATrFlagBase_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrFlagBase.SetFlagDynamicLightToNotBeDynamic
// [0x00020002] 
// Parameters infos:

void ATrFlagBase::SetFlagDynamicLightToNotBeDynamic ( )
{
	static UFunction* pFnSetFlagDynamicLightToNotBeDynamic = NULL;

	if ( ! pFnSetFlagDynamicLightToNotBeDynamic )
		pFnSetFlagDynamicLightToNotBeDynamic = (UFunction*) UObject::GObjObjects()->Data[ 87617 ];

	ATrFlagBase_execSetFlagDynamicLightToNotBeDynamic_Parms SetFlagDynamicLightToNotBeDynamic_Parms;

	this->ProcessEvent ( pFnSetFlagDynamicLightToNotBeDynamic, &SetFlagDynamicLightToNotBeDynamic_Parms, NULL );
};

// Function TribesGame.TrFlagBase.SetFlagPropertiesToStationaryFlagState
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::SetFlagPropertiesToStationaryFlagState ( )
{
	static UFunction* pFnSetFlagPropertiesToStationaryFlagState = NULL;

	if ( ! pFnSetFlagPropertiesToStationaryFlagState )
		pFnSetFlagPropertiesToStationaryFlagState = (UFunction*) UObject::GObjObjects()->Data[ 87616 ];

	ATrFlagBase_execSetFlagPropertiesToStationaryFlagState_Parms SetFlagPropertiesToStationaryFlagState_Parms;

	this->ProcessEvent ( pFnSetFlagPropertiesToStationaryFlagState, &SetFlagPropertiesToStationaryFlagState_Parms, NULL );
};

// Function TribesGame.TrFlagBase.Drop
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bNoThrow                       ( CPF_OptionalParm | CPF_Parm )

void ATrFlagBase::eventDrop ( class AController* Killer, unsigned long bNoThrow )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 87606 ];

	ATrFlagBase_eventDrop_Parms Drop_Parms;
	Drop_Parms.Killer = Killer;
	Drop_Parms.bNoThrow = bNoThrow;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );
};

// Function TribesGame.TrFlagBase.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrFlagBase::eventEncroachedBy ( class AActor* Other )
{
	static UFunction* pFnEncroachedBy = NULL;

	if ( ! pFnEncroachedBy )
		pFnEncroachedBy = (UFunction*) UObject::GObjObjects()->Data[ 87604 ];

	ATrFlagBase_eventEncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachedBy, &EncroachedBy_Parms, NULL );
};

// Function TribesGame.TrFlagBase.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ATrFlagBase::eventLanded ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 87596 ];

	ATrFlagBase_eventLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function TribesGame.TrFlagBase.CustomFadeOutEffects
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::CustomFadeOutEffects ( )
{
	static UFunction* pFnCustomFadeOutEffects = NULL;

	if ( ! pFnCustomFadeOutEffects )
		pFnCustomFadeOutEffects = (UFunction*) UObject::GObjObjects()->Data[ 87561 ];

	ATrFlagBase_execCustomFadeOutEffects_Parms CustomFadeOutEffects_Parms;

	this->ProcessEvent ( pFnCustomFadeOutEffects, &CustomFadeOutEffects_Parms, NULL );
};

// Function TribesGame.TrFlagBase.bringUpBrightOff
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::bringUpBrightOff ( )
{
	static UFunction* pFnbringUpBrightOff = NULL;

	if ( ! pFnbringUpBrightOff )
		pFnbringUpBrightOff = (UFunction*) UObject::GObjObjects()->Data[ 87559 ];

	ATrFlagBase_execbringUpBrightOff_Parms bringUpBrightOff_Parms;

	this->ProcessEvent ( pFnbringUpBrightOff, &bringUpBrightOff_Parms, NULL );
};

// Function TribesGame.TrFlagBase.CustomRespawnEffects
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::CustomRespawnEffects ( )
{
	static UFunction* pFnCustomRespawnEffects = NULL;

	if ( ! pFnCustomRespawnEffects )
		pFnCustomRespawnEffects = (UFunction*) UObject::GObjObjects()->Data[ 87557 ];

	ATrFlagBase_execCustomRespawnEffects_Parms CustomRespawnEffects_Parms;

	this->ProcessEvent ( pFnCustomRespawnEffects, &CustomRespawnEffects_Parms, NULL );
};

// Function TribesGame.TrFlagBase.SameTeamTouch
// [0x00020000] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ATrFlagBase::SameTeamTouch ( class AController* C )
{
	static UFunction* pFnSameTeamTouch = NULL;

	if ( ! pFnSameTeamTouch )
		pFnSameTeamTouch = (UFunction*) UObject::GObjObjects()->Data[ 87555 ];

	ATrFlagBase_execSameTeamTouch_Parms SameTeamTouch_Parms;
	SameTeamTouch_Parms.C = C;

	this->ProcessEvent ( pFnSameTeamTouch, &SameTeamTouch_Parms, NULL );
};

// Function TribesGame.TrFlagBase.ValidHolder
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ATrFlagBase::ValidHolder ( class AActor* Other )
{
	static UFunction* pFnValidHolder = NULL;

	if ( ! pFnValidHolder )
		pFnValidHolder = (UFunction*) UObject::GObjObjects()->Data[ 87550 ];

	ATrFlagBase_execValidHolder_Parms ValidHolder_Parms;
	ValidHolder_Parms.Other = Other;

	this->ProcessEvent ( pFnValidHolder, &ValidHolder_Parms, NULL );

	return ValidHolder_Parms.ReturnValue;
};

// Function TribesGame.TrFlagBase.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ATrFlagBase::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 87543 ];

	ATrFlagBase_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function TribesGame.TrFlagBase.ClientReturnedHome
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::ClientReturnedHome ( )
{
	static UFunction* pFnClientReturnedHome = NULL;

	if ( ! pFnClientReturnedHome )
		pFnClientReturnedHome = (UFunction*) UObject::GObjObjects()->Data[ 87542 ];

	ATrFlagBase_execClientReturnedHome_Parms ClientReturnedHome_Parms;

	this->ProcessEvent ( pFnClientReturnedHome, &ClientReturnedHome_Parms, NULL );
};

// Function TribesGame.TrFlagBase.ShouldMinimapRenderFor
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )

bool ATrFlagBase::ShouldMinimapRenderFor ( class APlayerController* PC )
{
	static UFunction* pFnShouldMinimapRenderFor = NULL;

	if ( ! pFnShouldMinimapRenderFor )
		pFnShouldMinimapRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 87539 ];

	ATrFlagBase_execShouldMinimapRenderFor_Parms ShouldMinimapRenderFor_Parms;
	ShouldMinimapRenderFor_Parms.PC = PC;

	this->ProcessEvent ( pFnShouldMinimapRenderFor, &ShouldMinimapRenderFor_Parms, NULL );

	return ShouldMinimapRenderFor_Parms.ReturnValue;
};

// Function TribesGame.TrFlagBase.OnBaseChainChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrFlagBase::eventOnBaseChainChanged ( )
{
	static UFunction* pFnOnBaseChainChanged = NULL;

	if ( ! pFnOnBaseChainChanged )
		pFnOnBaseChainChanged = (UFunction*) UObject::GObjObjects()->Data[ 87536 ];

	ATrFlagBase_eventOnBaseChainChanged_Parms OnBaseChainChanged_Parms;

	this->ProcessEvent ( pFnOnBaseChainChanged, &OnBaseChainChanged_Parms, NULL );
};

// Function TribesGame.TrFlagBase.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrFlagBase::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 87529 ];

	ATrFlagBase_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrFlagBase.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrFlagBase::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 87526 ];

	ATrFlagBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrFlagBase.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrFlagBase::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 87524 ];

	ATrFlagBase_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrGame.FindPlayerStart
// [0x00024002] 
// Parameters infos:
// class ANavigationPoint*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )
// struct FString                 IncomingName                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class ANavigationPoint* ATrGame::FindPlayerStart ( class AController* Player, unsigned char InTeam, struct FString IncomingName )
{
	static UFunction* pFnFindPlayerStart = NULL;

	if ( ! pFnFindPlayerStart )
		pFnFindPlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 89453 ];

	ATrGame_execFindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy ( &FindPlayerStart_Parms.IncomingName, &IncomingName, 0xC );

	this->ProcessEvent ( pFnFindPlayerStart, &FindPlayerStart_Parms, NULL );

	return FindPlayerStart_Parms.ReturnValue;
};

// Function TribesGame.TrGame.TgGetSpectators
// [0x00420800] ( FUNC_Event )
// Parameters infos:
// TArray< struct FString >       List                           ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrGame::eventTgGetSpectators ( TArray< struct FString >* List )
{
	static UFunction* pFnTgGetSpectators = NULL;

	if ( ! pFnTgGetSpectators )
		pFnTgGetSpectators = (UFunction*) UObject::GObjObjects()->Data[ 89450 ];

	ATrGame_eventTgGetSpectators_Parms TgGetSpectators_Parms;

	this->ProcessEvent ( pFnTgGetSpectators, &TgGetSpectators_Parms, NULL );

	if ( List )
		memcpy ( List, &TgGetSpectators_Parms.List, 0xC );
};

// Function TribesGame.TrGame.TgChangeTime
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            nSeconds                       ( CPF_Parm )

void ATrGame::eventTgChangeTime ( int nSeconds )
{
	static UFunction* pFnTgChangeTime = NULL;

	if ( ! pFnTgChangeTime )
		pFnTgChangeTime = (UFunction*) UObject::GObjObjects()->Data[ 89448 ];

	ATrGame_eventTgChangeTime_Parms TgChangeTime_Parms;
	TgChangeTime_Parms.nSeconds = nSeconds;

	this->ProcessEvent ( pFnTgChangeTime, &TgChangeTime_Parms, NULL );
};

// Function TribesGame.TrGame.TgChangeScore
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            nTeam                          ( CPF_Parm )
// int                            nCount                         ( CPF_OptionalParm | CPF_Parm )

void ATrGame::eventTgChangeScore ( int nTeam, int nCount )
{
	static UFunction* pFnTgChangeScore = NULL;

	if ( ! pFnTgChangeScore )
		pFnTgChangeScore = (UFunction*) UObject::GObjObjects()->Data[ 89445 ];

	ATrGame_eventTgChangeScore_Parms TgChangeScore_Parms;
	TgChangeScore_Parms.nTeam = nTeam;
	TgChangeScore_Parms.nCount = nCount;

	this->ProcessEvent ( pFnTgChangeScore, &TgChangeScore_Parms, NULL );
};

// Function TribesGame.TrGame.TgEndGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrGame::eventTgEndGame ( struct FString* Reason )
{
	static UFunction* pFnTgEndGame = NULL;

	if ( ! pFnTgEndGame )
		pFnTgEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89443 ];

	ATrGame_eventTgEndGame_Parms TgEndGame_Parms;

	this->ProcessEvent ( pFnTgEndGame, &TgEndGame_Parms, NULL );

	if ( Reason )
		memcpy ( Reason, &TgEndGame_Parms.Reason, 0xC );
};

// Function TribesGame.TrGame.TgStartGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Reason                         ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrGame::eventTgStartGame ( struct FString* Reason )
{
	static UFunction* pFnTgStartGame = NULL;

	if ( ! pFnTgStartGame )
		pFnTgStartGame = (UFunction*) UObject::GObjObjects()->Data[ 89441 ];

	ATrGame_eventTgStartGame_Parms TgStartGame_Parms;

	this->ProcessEvent ( pFnTgStartGame, &TgStartGame_Parms, NULL );

	if ( Reason )
		memcpy ( Reason, &TgStartGame_Parms.Reason, 0xC );
};

// Function TribesGame.TrGame.OnGeneratorPowerChange
// [0x00020000] 
// Parameters infos:
// class ATrPowerGenerator*       G                              ( CPF_Parm )

void ATrGame::OnGeneratorPowerChange ( class ATrPowerGenerator* G )
{
	static UFunction* pFnOnGeneratorPowerChange = NULL;

	if ( ! pFnOnGeneratorPowerChange )
		pFnOnGeneratorPowerChange = (UFunction*) UObject::GObjObjects()->Data[ 89439 ];

	ATrGame_execOnGeneratorPowerChange_Parms OnGeneratorPowerChange_Parms;
	OnGeneratorPowerChange_Parms.G = G;

	this->ProcessEvent ( pFnOnGeneratorPowerChange, &OnGeneratorPowerChange_Parms, NULL );
};

// Function TribesGame.TrGame.CanEnterSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )
// unsigned long                  bNeutral                       ( CPF_Parm )

bool ATrGame::CanEnterSpectate ( class ATrPlayerController* TrPC, unsigned long bNeutral )
{
	static UFunction* pFnCanEnterSpectate = NULL;

	if ( ! pFnCanEnterSpectate )
		pFnCanEnterSpectate = (UFunction*) UObject::GObjObjects()->Data[ 76793 ];

	ATrGame_execCanEnterSpectate_Parms CanEnterSpectate_Parms;
	CanEnterSpectate_Parms.TrPC = TrPC;
	CanEnterSpectate_Parms.bNeutral = bNeutral;

	this->ProcessEvent ( pFnCanEnterSpectate, &CanEnterSpectate_Parms, NULL );

	return CanEnterSpectate_Parms.ReturnValue;
};

// Function TribesGame.TrGame.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89435 ];

	ATrGame_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame.FindGameTypeId
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame::eventFindGameTypeId ( )
{
	static UFunction* pFnFindGameTypeId = NULL;

	if ( ! pFnFindGameTypeId )
		pFnFindGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89433 ];

	ATrGame_eventFindGameTypeId_Parms FindGameTypeId_Parms;

	this->ProcessEvent ( pFnFindGameTypeId, &FindGameTypeId_Parms, NULL );

	return FindGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame.OnServerSpawnedPlayer
// [0x00020000] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrGame::OnServerSpawnedPlayer ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnOnServerSpawnedPlayer = NULL;

	if ( ! pFnOnServerSpawnedPlayer )
		pFnOnServerSpawnedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89431 ];

	ATrGame_execOnServerSpawnedPlayer_Parms OnServerSpawnedPlayer_Parms;
	OnServerSpawnedPlayer_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnOnServerSpawnedPlayer, &OnServerSpawnedPlayer_Parms, NULL );
};

// Function TribesGame.TrGame.SendMessageToAll
// [0x00020002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            Switch                         ( CPF_Parm )

void ATrGame::SendMessageToAll ( class UClass* InMessageClass, int Switch )
{
	static UFunction* pFnSendMessageToAll = NULL;

	if ( ! pFnSendMessageToAll )
		pFnSendMessageToAll = (UFunction*) UObject::GObjObjects()->Data[ 89427 ];

	ATrGame_execSendMessageToAll_Parms SendMessageToAll_Parms;
	SendMessageToAll_Parms.InMessageClass = InMessageClass;
	SendMessageToAll_Parms.Switch = Switch;

	this->ProcessEvent ( pFnSendMessageToAll, &SendMessageToAll_Parms, NULL );
};

// Function TribesGame.TrGame.BroadcastAccolade
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrGame::BroadcastAccolade ( struct FString Message )
{
	static UFunction* pFnBroadcastAccolade = NULL;

	if ( ! pFnBroadcastAccolade )
		pFnBroadcastAccolade = (UFunction*) UObject::GObjObjects()->Data[ 89424 ];

	ATrGame_execBroadcastAccolade_Parms BroadcastAccolade_Parms;
	memcpy ( &BroadcastAccolade_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnBroadcastAccolade, &BroadcastAccolade_Parms, NULL );
};

// Function TribesGame.TrGame.AllowRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

bool ATrGame::AllowRespawn ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnAllowRespawn = NULL;

	if ( ! pFnAllowRespawn )
		pFnAllowRespawn = (UFunction*) UObject::GObjObjects()->Data[ 76108 ];

	ATrGame_execAllowRespawn_Parms AllowRespawn_Parms;
	AllowRespawn_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnAllowRespawn, &AllowRespawn_Parms, NULL );

	return AllowRespawn_Parms.ReturnValue;
};

// Function TribesGame.TrGame.CanSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       Viewer                         ( CPF_Parm )
// class APlayerReplicationInfo*  ViewTarget                     ( CPF_Parm )

bool ATrGame::CanSpectate ( class APlayerController* Viewer, class APlayerReplicationInfo* ViewTarget )
{
	static UFunction* pFnCanSpectate = NULL;

	if ( ! pFnCanSpectate )
		pFnCanSpectate = (UFunction*) UObject::GObjObjects()->Data[ 89419 ];

	ATrGame_execCanSpectate_Parms CanSpectate_Parms;
	CanSpectate_Parms.Viewer = Viewer;
	CanSpectate_Parms.ViewTarget = ViewTarget;

	this->ProcessEvent ( pFnCanSpectate, &CanSpectate_Parms, NULL );

	return CanSpectate_Parms.ReturnValue;
};

// Function TribesGame.TrGame.GetRankFromXP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            XP                             ( CPF_Parm )

int ATrGame::GetRankFromXP ( int XP )
{
	static UFunction* pFnGetRankFromXP = NULL;

	if ( ! pFnGetRankFromXP )
		pFnGetRankFromXP = (UFunction*) UObject::GObjObjects()->Data[ 89413 ];

	ATrGame_execGetRankFromXP_Parms GetRankFromXP_Parms;
	GetRankFromXP_Parms.XP = XP;

	this->ProcessEvent ( pFnGetRankFromXP, &GetRankFromXP_Parms, NULL );

	return GetRankFromXP_Parms.ReturnValue;
};

// Function TribesGame.TrGame.SetPRI
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class APlayerReplicationInfo*  NewPRI                         ( CPF_Parm )

void ATrGame::SetPRI ( class APlayerController* PC, class APlayerReplicationInfo* NewPRI )
{
	static UFunction* pFnSetPRI = NULL;

	if ( ! pFnSetPRI )
		pFnSetPRI = (UFunction*) UObject::GObjObjects()->Data[ 89405 ];

	ATrGame_execSetPRI_Parms SetPRI_Parms;
	SetPRI_Parms.PC = PC;
	SetPRI_Parms.NewPRI = NewPRI;

	this->ProcessEvent ( pFnSetPRI, &SetPRI_Parms, NULL );
};

// Function TribesGame.TrGame.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrGame::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 89401 ];

	ATrGame_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function TribesGame.TrGame.MoveRandomPlayerFromTeam
// [0x00020002] 
// Parameters infos:
// TArray< class APlayerController* > TeamList                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            PlayersToMove                  ( CPF_Parm )

void ATrGame::MoveRandomPlayerFromTeam ( TArray< class APlayerController* > TeamList, int PlayersToMove )
{
	static UFunction* pFnMoveRandomPlayerFromTeam = NULL;

	if ( ! pFnMoveRandomPlayerFromTeam )
		pFnMoveRandomPlayerFromTeam = (UFunction*) UObject::GObjObjects()->Data[ 89393 ];

	ATrGame_execMoveRandomPlayerFromTeam_Parms MoveRandomPlayerFromTeam_Parms;
	memcpy ( &MoveRandomPlayerFromTeam_Parms.TeamList, &TeamList, 0xC );
	MoveRandomPlayerFromTeam_Parms.PlayersToMove = PlayersToMove;

	this->ProcessEvent ( pFnMoveRandomPlayerFromTeam, &MoveRandomPlayerFromTeam_Parms, NULL );
};

// Function TribesGame.TrGame.AutoBalanceTeams
// [0x00020002] 
// Parameters infos:

void ATrGame::AutoBalanceTeams ( )
{
	static UFunction* pFnAutoBalanceTeams = NULL;

	if ( ! pFnAutoBalanceTeams )
		pFnAutoBalanceTeams = (UFunction*) UObject::GObjObjects()->Data[ 89385 ];

	ATrGame_execAutoBalanceTeams_Parms AutoBalanceTeams_Parms;

	this->ProcessEvent ( pFnAutoBalanceTeams, &AutoBalanceTeams_Parms, NULL );
};

// Function TribesGame.TrGame.AutoBalanceInFive
// [0x00020002] 
// Parameters infos:

void ATrGame::AutoBalanceInFive ( )
{
	static UFunction* pFnAutoBalanceInFive = NULL;

	if ( ! pFnAutoBalanceInFive )
		pFnAutoBalanceInFive = (UFunction*) UObject::GObjObjects()->Data[ 89384 ];

	ATrGame_execAutoBalanceInFive_Parms AutoBalanceInFive_Parms;

	this->ProcessEvent ( pFnAutoBalanceInFive, &AutoBalanceInFive_Parms, NULL );
};

// Function TribesGame.TrGame.AutoBalanceInTwenty
// [0x00020002] 
// Parameters infos:

void ATrGame::AutoBalanceInTwenty ( )
{
	static UFunction* pFnAutoBalanceInTwenty = NULL;

	if ( ! pFnAutoBalanceInTwenty )
		pFnAutoBalanceInTwenty = (UFunction*) UObject::GObjObjects()->Data[ 89383 ];

	ATrGame_execAutoBalanceInTwenty_Parms AutoBalanceInTwenty_Parms;

	this->ProcessEvent ( pFnAutoBalanceInTwenty, &AutoBalanceInTwenty_Parms, NULL );
};

// Function TribesGame.TrGame.CheckForAutoBalance
// [0x00020002] 
// Parameters infos:

void ATrGame::CheckForAutoBalance ( )
{
	static UFunction* pFnCheckForAutoBalance = NULL;

	if ( ! pFnCheckForAutoBalance )
		pFnCheckForAutoBalance = (UFunction*) UObject::GObjObjects()->Data[ 89382 ];

	ATrGame_execCheckForAutoBalance_Parms CheckForAutoBalance_Parms;

	this->ProcessEvent ( pFnCheckForAutoBalance, &CheckForAutoBalance_Parms, NULL );
};

// Function TribesGame.TrGame.AreTeamsUnbalanced
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGame::AreTeamsUnbalanced ( )
{
	static UFunction* pFnAreTeamsUnbalanced = NULL;

	if ( ! pFnAreTeamsUnbalanced )
		pFnAreTeamsUnbalanced = (UFunction*) UObject::GObjObjects()->Data[ 89377 ];

	ATrGame_execAreTeamsUnbalanced_Parms AreTeamsUnbalanced_Parms;

	this->ProcessEvent ( pFnAreTeamsUnbalanced, &AreTeamsUnbalanced_Parms, NULL );

	return AreTeamsUnbalanced_Parms.ReturnValue;
};

// Function TribesGame.TrGame.AllowCheats
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       P                              ( CPF_Parm )

bool ATrGame::AllowCheats ( class APlayerController* P )
{
	static UFunction* pFnAllowCheats = NULL;

	if ( ! pFnAllowCheats )
		pFnAllowCheats = (UFunction*) UObject::GObjObjects()->Data[ 89374 ];

	ATrGame_execAllowCheats_Parms AllowCheats_Parms;
	AllowCheats_Parms.P = P;

	this->ProcessEvent ( pFnAllowCheats, &AllowCheats_Parms, NULL );

	return AllowCheats_Parms.ReturnValue;
};

// Function TribesGame.TrGame.CreditsSortViaPC
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       A                              ( CPF_Parm )
// class APlayerController*       B                              ( CPF_Parm )

int ATrGame::CreditsSortViaPC ( class APlayerController* A, class APlayerController* B )
{
	static UFunction* pFnCreditsSortViaPC = NULL;

	if ( ! pFnCreditsSortViaPC )
		pFnCreditsSortViaPC = (UFunction*) UObject::GObjObjects()->Data[ 89115 ];

	ATrGame_execCreditsSortViaPC_Parms CreditsSortViaPC_Parms;
	CreditsSortViaPC_Parms.A = A;
	CreditsSortViaPC_Parms.B = B;

	this->ProcessEvent ( pFnCreditsSortViaPC, &CreditsSortViaPC_Parms, NULL );

	return CreditsSortViaPC_Parms.ReturnValue;
};

// Function TribesGame.TrGame.CreditSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  A                              ( CPF_Parm )
// class APlayerReplicationInfo*  B                              ( CPF_Parm )

int ATrGame::CreditSort ( class APlayerReplicationInfo* A, class APlayerReplicationInfo* B )
{
	static UFunction* pFnCreditSort = NULL;

	if ( ! pFnCreditSort )
		pFnCreditSort = (UFunction*) UObject::GObjObjects()->Data[ 89117 ];

	ATrGame_execCreditSort_Parms CreditSort_Parms;
	CreditSort_Parms.A = A;
	CreditSort_Parms.B = B;

	this->ProcessEvent ( pFnCreditSort, &CreditSort_Parms, NULL );

	return CreditSort_Parms.ReturnValue;
};

// Function TribesGame.TrGame.ScoreSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  A                              ( CPF_Parm )
// class APlayerReplicationInfo*  B                              ( CPF_Parm )

int ATrGame::ScoreSort ( class APlayerReplicationInfo* A, class APlayerReplicationInfo* B )
{
	static UFunction* pFnScoreSort = NULL;

	if ( ! pFnScoreSort )
		pFnScoreSort = (UFunction*) UObject::GObjObjects()->Data[ 89119 ];

	ATrGame_execScoreSort_Parms ScoreSort_Parms;
	ScoreSort_Parms.A = A;
	ScoreSort_Parms.B = B;

	this->ProcessEvent ( pFnScoreSort, &ScoreSort_Parms, NULL );

	return ScoreSort_Parms.ReturnValue;
};

// Function TribesGame.TrGame.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ATrGame::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 89356 ];

	ATrGame_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function TribesGame.TrGame.SetPlayerDefaults
// [0x00020002] 
// Parameters infos:
// class APawn*                   PlayerPawn                     ( CPF_Parm )

void ATrGame::SetPlayerDefaults ( class APawn* PlayerPawn )
{
	static UFunction* pFnSetPlayerDefaults = NULL;

	if ( ! pFnSetPlayerDefaults )
		pFnSetPlayerDefaults = (UFunction*) UObject::GObjObjects()->Data[ 89352 ];

	ATrGame_execSetPlayerDefaults_Parms SetPlayerDefaults_Parms;
	SetPlayerDefaults_Parms.PlayerPawn = PlayerPawn;

	this->ProcessEvent ( pFnSetPlayerDefaults, &SetPlayerDefaults_Parms, NULL );
};

// Function TribesGame.TrGame.HandleSeamlessTravelPlayer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:
// class AController*             C                              ( CPF_Parm | CPF_OutParm )

void ATrGame::eventHandleSeamlessTravelPlayer ( class AController** C )
{
	static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

	if ( ! pFnHandleSeamlessTravelPlayer )
		pFnHandleSeamlessTravelPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89343 ];

	ATrGame_eventHandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;

	this->ProcessEvent ( pFnHandleSeamlessTravelPlayer, &HandleSeamlessTravelPlayer_Parms, NULL );

	if ( C )
		*C = HandleSeamlessTravelPlayer_Parms.C;
};

// Function TribesGame.TrGame.AutoAssignTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool ATrGame::AutoAssignTeam ( class AController* C )
{
	static UFunction* pFnAutoAssignTeam = NULL;

	if ( ! pFnAutoAssignTeam )
		pFnAutoAssignTeam = (UFunction*) UObject::GObjObjects()->Data[ 76084 ];

	ATrGame_execAutoAssignTeam_Parms AutoAssignTeam_Parms;
	AutoAssignTeam_Parms.C = C;

	this->ProcessEvent ( pFnAutoAssignTeam, &AutoAssignTeam_Parms, NULL );

	return AutoAssignTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame.RequestTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedTeamNum               ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

bool ATrGame::RequestTeam ( unsigned char RequestedTeamNum, class AController* C )
{
	static UFunction* pFnRequestTeam = NULL;

	if ( ! pFnRequestTeam )
		pFnRequestTeam = (UFunction*) UObject::GObjObjects()->Data[ 76075 ];

	ATrGame_execRequestTeam_Parms RequestTeam_Parms;
	RequestTeam_Parms.RequestedTeamNum = RequestedTeamNum;
	RequestTeam_Parms.C = C;

	this->ProcessEvent ( pFnRequestTeam, &RequestTeam_Parms, NULL );

	return RequestTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame.PickTeamForMigration
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame::PickTeamForMigration ( class AController* C )
{
	static UFunction* pFnPickTeamForMigration = NULL;

	if ( ! pFnPickTeamForMigration )
		pFnPickTeamForMigration = (UFunction*) UObject::GObjObjects()->Data[ 89332 ];

	ATrGame_execPickTeamForMigration_Parms PickTeamForMigration_Parms;
	PickTeamForMigration_Parms.C = C;

	this->ProcessEvent ( pFnPickTeamForMigration, &PickTeamForMigration_Parms, NULL );

	return PickTeamForMigration_Parms.ReturnValue;
};

// Function TribesGame.TrGame.PickTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Num                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame::PickTeam ( unsigned char Num, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 89328 ];

	ATrGame_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Num = Num;
	PickTeam_Parms.C = C;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	return PickTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame.ChangeTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

bool ATrGame::ChangeTeam ( class AController* Other, int Num, unsigned long bNewTeam )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 89322 ];

	ATrGame_execChangeTeam_Parms ChangeTeam_Parms;
	ChangeTeam_Parms.Other = Other;
	ChangeTeam_Parms.Num = Num;
	ChangeTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );

	return ChangeTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             aPlayer                        ( CPF_Parm )

void ATrGame::RestartPlayer ( class AController* aPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89319 ];

	ATrGame_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.aPlayer = aPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function TribesGame.TrGame.ForceRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGame::ForceRespawn ( )
{
	static UFunction* pFnForceRespawn = NULL;

	if ( ! pFnForceRespawn )
		pFnForceRespawn = (UFunction*) UObject::GObjObjects()->Data[ 89317 ];

	ATrGame_execForceRespawn_Parms ForceRespawn_Parms;

	this->ProcessEvent ( pFnForceRespawn, &ForceRespawn_Parms, NULL );

	return ForceRespawn_Parms.ReturnValue;
};

// Function TribesGame.TrGame.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 89296 ];

	ATrGame_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame.SendMatchCountdown
// [0x00020002] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrGame::SendMatchCountdown ( int Seconds )
{
	static UFunction* pFnSendMatchCountdown = NULL;

	if ( ! pFnSendMatchCountdown )
		pFnSendMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 89292 ];

	ATrGame_execSendMatchCountdown_Parms SendMatchCountdown_Parms;
	SendMatchCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnSendMatchCountdown, &SendMatchCountdown_Parms, NULL );
};

// Function TribesGame.TrGame.SendNextMatchCountdown
// [0x00020002] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrGame::SendNextMatchCountdown ( int Seconds )
{
	static UFunction* pFnSendNextMatchCountdown = NULL;

	if ( ! pFnSendNextMatchCountdown )
		pFnSendNextMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 89289 ];

	ATrGame_execSendNextMatchCountdown_Parms SendNextMatchCountdown_Parms;
	SendNextMatchCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnSendNextMatchCountdown, &SendNextMatchCountdown_Parms, NULL );
};

// Function TribesGame.TrGame.SendShowSummary
// [0x00020002] 
// Parameters infos:

void ATrGame::SendShowSummary ( )
{
	static UFunction* pFnSendShowSummary = NULL;

	if ( ! pFnSendShowSummary )
		pFnSendShowSummary = (UFunction*) UObject::GObjObjects()->Data[ 89287 ];

	ATrGame_execSendShowSummary_Parms SendShowSummary_Parms;

	this->ProcessEvent ( pFnSendShowSummary, &SendShowSummary_Parms, NULL );
};

// Function TribesGame.TrGame.SendMatchOver
// [0x00020002] 
// Parameters infos:

void ATrGame::SendMatchOver ( )
{
	static UFunction* pFnSendMatchOver = NULL;

	if ( ! pFnSendMatchOver )
		pFnSendMatchOver = (UFunction*) UObject::GObjObjects()->Data[ 89285 ];

	ATrGame_execSendMatchOver_Parms SendMatchOver_Parms;

	this->ProcessEvent ( pFnSendMatchOver, &SendMatchOver_Parms, NULL );
};

// Function TribesGame.TrGame.PlayEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void ATrGame::PlayEndOfMatchMessage ( )
{
	static UFunction* pFnPlayEndOfMatchMessage = NULL;

	if ( ! pFnPlayEndOfMatchMessage )
		pFnPlayEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 89283 ];

	ATrGame_execPlayEndOfMatchMessage_Parms PlayEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayEndOfMatchMessage, &PlayEndOfMatchMessage_Parms, NULL );
};

// Function TribesGame.TrGame.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* ATrGame::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
{
	static UFunction* pFnSetGameType = NULL;

	if ( ! pFnSetGameType )
		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 89272 ];

	ATrGame_eventSetGameType_Parms SetGameType_Parms;
	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );

	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );

	return SetGameType_Parms.ReturnValue;
};

// Function TribesGame.TrGame.GenericPlayerInitialization
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ATrGame::GenericPlayerInitialization ( class AController* C )
{
	static UFunction* pFnGenericPlayerInitialization = NULL;

	if ( ! pFnGenericPlayerInitialization )
		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 89269 ];

	ATrGame_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
	GenericPlayerInitialization_Parms.C = C;

	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
};

// Function TribesGame.TrGame.EndSpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Killer                         ( CPF_Parm )
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )

void ATrGame::EndSpree ( class AUTPlayerReplicationInfo* Killer, class AUTPlayerReplicationInfo* Other )
{
	static UFunction* pFnEndSpree = NULL;

	if ( ! pFnEndSpree )
		pFnEndSpree = (UFunction*) UObject::GObjObjects()->Data[ 89264 ];

	ATrGame_execEndSpree_Parms EndSpree_Parms;
	EndSpree_Parms.Killer = Killer;
	EndSpree_Parms.Other = Other;

	this->ProcessEvent ( pFnEndSpree, &EndSpree_Parms, NULL );
};

// Function TribesGame.TrGame.NotifySpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

void ATrGame::NotifySpree ( class AUTPlayerReplicationInfo* Other, int Num )
{
	static UFunction* pFnNotifySpree = NULL;

	if ( ! pFnNotifySpree )
		pFnNotifySpree = (UFunction*) UObject::GObjObjects()->Data[ 89260 ];

	ATrGame_execNotifySpree_Parms NotifySpree_Parms;
	NotifySpree_Parms.Other = Other;
	NotifySpree_Parms.Num = Num;

	this->ProcessEvent ( pFnNotifySpree, &NotifySpree_Parms, NULL );
};

// Function TribesGame.TrGame.ForceRoundStart
// [0x00020000] 
// Parameters infos:

void ATrGame::ForceRoundStart ( )
{
	static UFunction* pFnForceRoundStart = NULL;

	if ( ! pFnForceRoundStart )
		pFnForceRoundStart = (UFunction*) UObject::GObjObjects()->Data[ 89254 ];

	ATrGame_execForceRoundStart_Parms ForceRoundStart_Parms;

	this->ProcessEvent ( pFnForceRoundStart, &ForceRoundStart_Parms, NULL );
};

// Function TribesGame.TrGame.ResetRound
// [0x00020002] 
// Parameters infos:

void ATrGame::ResetRound ( )
{
	static UFunction* pFnResetRound = NULL;

	if ( ! pFnResetRound )
		pFnResetRound = (UFunction*) UObject::GObjObjects()->Data[ 89228 ];

	ATrGame_execResetRound_Parms ResetRound_Parms;

	this->ProcessEvent ( pFnResetRound, &ResetRound_Parms, NULL );
};

// Function TribesGame.TrGame.ResetScores
// [0x00020000] 
// Parameters infos:

void ATrGame::ResetScores ( )
{
	static UFunction* pFnResetScores = NULL;

	if ( ! pFnResetScores )
		pFnResetScores = (UFunction*) UObject::GObjObjects()->Data[ 89227 ];

	ATrGame_execResetScores_Parms ResetScores_Parms;

	this->ProcessEvent ( pFnResetScores, &ResetScores_Parms, NULL );
};

// Function TribesGame.TrGame.RespawnPlayers
// [0x00020002] 
// Parameters infos:

void ATrGame::RespawnPlayers ( )
{
	static UFunction* pFnRespawnPlayers = NULL;

	if ( ! pFnRespawnPlayers )
		pFnRespawnPlayers = (UFunction*) UObject::GObjObjects()->Data[ 89225 ];

	ATrGame_execRespawnPlayers_Parms RespawnPlayers_Parms;

	this->ProcessEvent ( pFnRespawnPlayers, &RespawnPlayers_Parms, NULL );
};

// Function TribesGame.TrGame.TrackPlayerMovement
// [0x00020000] 
// Parameters infos:

void ATrGame::TrackPlayerMovement ( )
{
	static UFunction* pFnTrackPlayerMovement = NULL;

	if ( ! pFnTrackPlayerMovement )
		pFnTrackPlayerMovement = (UFunction*) UObject::GObjObjects()->Data[ 89224 ];

	ATrGame_execTrackPlayerMovement_Parms TrackPlayerMovement_Parms;

	this->ProcessEvent ( pFnTrackPlayerMovement, &TrackPlayerMovement_Parms, NULL );
};

// Function TribesGame.TrGame.SetEndGameFocus
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )

void ATrGame::SetEndGameFocus ( class APlayerReplicationInfo* Winner )
{
	static UFunction* pFnSetEndGameFocus = NULL;

	if ( ! pFnSetEndGameFocus )
		pFnSetEndGameFocus = (UFunction*) UObject::GObjObjects()->Data[ 89213 ];

	ATrGame_execSetEndGameFocus_Parms SetEndGameFocus_Parms;
	SetEndGameFocus_Parms.Winner = Winner;

	this->ProcessEvent ( pFnSetEndGameFocus, &SetEndGameFocus_Parms, NULL );
};

// Function TribesGame.TrGame.EndOnlineGame
// [0x00020002] 
// Parameters infos:

void ATrGame::EndOnlineGame ( )
{
	static UFunction* pFnEndOnlineGame = NULL;

	if ( ! pFnEndOnlineGame )
		pFnEndOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 89211 ];

	ATrGame_execEndOnlineGame_Parms EndOnlineGame_Parms;

	this->ProcessEvent ( pFnEndOnlineGame, &EndOnlineGame_Parms, NULL );
};

// Function TribesGame.TrGame.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrGame::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89203 ];

	ATrGame_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function TribesGame.TrGame.DetermineWinningTeam
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame::DetermineWinningTeam ( )
{
	static UFunction* pFnDetermineWinningTeam = NULL;

	if ( ! pFnDetermineWinningTeam )
		pFnDetermineWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 89200 ];

	ATrGame_execDetermineWinningTeam_Parms DetermineWinningTeam_Parms;

	this->ProcessEvent ( pFnDetermineWinningTeam, &DetermineWinningTeam_Parms, NULL );

	return DetermineWinningTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame.SpawnDefaultPawnFor
// [0x00820002] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             NewPlayer                      ( CPF_Parm )
// class ANavigationPoint*        StartSpot                      ( CPF_Parm )

class APawn* ATrGame::SpawnDefaultPawnFor ( class AController* NewPlayer, class ANavigationPoint* StartSpot )
{
	static UFunction* pFnSpawnDefaultPawnFor = NULL;

	if ( ! pFnSpawnDefaultPawnFor )
		pFnSpawnDefaultPawnFor = (UFunction*) UObject::GObjObjects()->Data[ 89193 ];

	ATrGame_execSpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;
	SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
	SpawnDefaultPawnFor_Parms.StartSpot = StartSpot;

	this->ProcessEvent ( pFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Parms, NULL );

	return SpawnDefaultPawnFor_Parms.ReturnValue;
};

// Function TribesGame.TrGame.Login
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FUniqueNetId            UniqueId                       ( CPF_Const | CPF_Parm )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

class APlayerController* ATrGame::eventLogin ( struct FString Portal, struct FString Options, struct FUniqueNetId UniqueId, struct FString* ErrorMessage )
{
	static UFunction* pFnLogin = NULL;

	if ( ! pFnLogin )
		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 89186 ];

	ATrGame_eventLogin_Parms Login_Parms;
	memcpy ( &Login_Parms.Portal, &Portal, 0xC );
	memcpy ( &Login_Parms.Options, &Options, 0xC );
	memcpy ( &Login_Parms.UniqueId, &UniqueId, 0x8 );

	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &Login_Parms.ErrorMessage, 0xC );

	return Login_Parms.ReturnValue;
};

// Function TribesGame.TrGame.KickIdler
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ATrGame::eventKickIdler ( class APlayerController* PC )
{
	static UFunction* pFnKickIdler = NULL;

	if ( ! pFnKickIdler )
		pFnKickIdler = (UFunction*) UObject::GObjObjects()->Data[ 89183 ];

	ATrGame_eventKickIdler_Parms KickIdler_Parms;
	KickIdler_Parms.PC = PC;

	this->ProcessEvent ( pFnKickIdler, &KickIdler_Parms, NULL );
};

// Function TribesGame.TrGame.StartBots
// [0x00020000] 
// Parameters infos:

void ATrGame::StartBots ( )
{
	static UFunction* pFnStartBots = NULL;

	if ( ! pFnStartBots )
		pFnStartBots = (UFunction*) UObject::GObjObjects()->Data[ 89182 ];

	ATrGame_execStartBots_Parms StartBots_Parms;

	this->ProcessEvent ( pFnStartBots, &StartBots_Parms, NULL );
};

// Function TribesGame.TrGame.InitializeBot
// [0x00420000] 
// Parameters infos:
// class AUTBot*                  NewBot                         ( CPF_Parm )
// class AUTTeamInfo*             BotTeam                        ( CPF_Parm )
// struct FCharacterInfo          BotInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrGame::InitializeBot ( class AUTBot* NewBot, class AUTTeamInfo* BotTeam, struct FCharacterInfo* BotInfo )
{
	static UFunction* pFnInitializeBot = NULL;

	if ( ! pFnInitializeBot )
		pFnInitializeBot = (UFunction*) UObject::GObjObjects()->Data[ 89178 ];

	ATrGame_execInitializeBot_Parms InitializeBot_Parms;
	InitializeBot_Parms.NewBot = NewBot;
	InitializeBot_Parms.BotTeam = BotTeam;

	this->ProcessEvent ( pFnInitializeBot, &InitializeBot_Parms, NULL );

	if ( BotInfo )
		memcpy ( BotInfo, &InitializeBot_Parms.BotInfo, 0x70 );
};

// Function TribesGame.TrGame.SpawnBot
// [0x00024000] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* ATrGame::SpawnBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnSpawnBot = NULL;

	if ( ! pFnSpawnBot )
		pFnSpawnBot = (UFunction*) UObject::GObjObjects()->Data[ 89173 ];

	ATrGame_execSpawnBot_Parms SpawnBot_Parms;
	memcpy ( &SpawnBot_Parms.BotName, &BotName, 0xC );
	SpawnBot_Parms.bUseTeamIndex = bUseTeamIndex;
	SpawnBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSpawnBot, &SpawnBot_Parms, NULL );

	return SpawnBot_Parms.ReturnValue;
};

// Function TribesGame.TrGame.AddBots
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void ATrGame::AddBots ( int Num )
{
	static UFunction* pFnAddBots = NULL;

	if ( ! pFnAddBots )
		pFnAddBots = (UFunction*) UObject::GObjObjects()->Data[ 89171 ];

	ATrGame_execAddBots_Parms AddBots_Parms;
	AddBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddBots, &AddBots_Parms, NULL );
};

// Function TribesGame.TrGame.AddBot
// [0x00024000] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* ATrGame::AddBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnAddBot = NULL;

	if ( ! pFnAddBot )
		pFnAddBot = (UFunction*) UObject::GObjObjects()->Data[ 89166 ];

	ATrGame_execAddBot_Parms AddBot_Parms;
	memcpy ( &AddBot_Parms.BotName, &BotName, 0xC );
	AddBot_Parms.bUseTeamIndex = bUseTeamIndex;
	AddBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnAddBot, &AddBot_Parms, NULL );

	return AddBot_Parms.ReturnValue;
};

// Function TribesGame.TrGame.AddInitialBots
// [0x00020000] 
// Parameters infos:

void ATrGame::AddInitialBots ( )
{
	static UFunction* pFnAddInitialBots = NULL;

	if ( ! pFnAddInitialBots )
		pFnAddInitialBots = (UFunction*) UObject::GObjObjects()->Data[ 89165 ];

	ATrGame_execAddInitialBots_Parms AddInitialBots_Parms;

	this->ProcessEvent ( pFnAddInitialBots, &AddInitialBots_Parms, NULL );
};

// Function TribesGame.TrGame.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89164 ];

	ATrGame_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame.ReduceDamage
// [0x00420002] 
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void ATrGame::ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnReduceDamage = NULL;

	if ( ! pFnReduceDamage )
		pFnReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 89155 ];

	ATrGame_execReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	ReduceDamage_Parms.DamageType = DamageType;
	ReduceDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnReduceDamage, &ReduceDamage_Parms, NULL );

	if ( Damage )
		*Damage = ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &ReduceDamage_Parms.Momentum, 0xC );
};

// Function TribesGame.TrGame.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89148 ];

	ATrGame_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGame.OnServerInitialized
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrGame::OnServerInitialized ( )
{
	static UFunction* pFnOnServerInitialized = NULL;

	if ( ! pFnOnServerInitialized )
		pFnOnServerInitialized = (UFunction*) UObject::GObjObjects()->Data[ 89147 ];

	ATrGame_execOnServerInitialized_Parms OnServerInitialized_Parms;

	pFnOnServerInitialized->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOnServerInitialized, &OnServerInitialized_Parms, NULL );

	pFnOnServerInitialized->FunctionFlags |= 0x400;
};

// Function TribesGame.TrGame.LocalLeaveGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrGame::LocalLeaveGame ( )
{
	static UFunction* pFnLocalLeaveGame = NULL;

	if ( ! pFnLocalLeaveGame )
		pFnLocalLeaveGame = (UFunction*) UObject::GObjObjects()->Data[ 89146 ];

	ATrGame_execLocalLeaveGame_Parms LocalLeaveGame_Parms;

	pFnLocalLeaveGame->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLocalLeaveGame, &LocalLeaveGame_Parms, NULL );

	pFnLocalLeaveGame->FunctionFlags |= 0x400;
};

// Function TribesGame.TrGame.GetNextEffectInstanceId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame::GetNextEffectInstanceId ( )
{
	static UFunction* pFnGetNextEffectInstanceId = NULL;

	if ( ! pFnGetNextEffectInstanceId )
		pFnGetNextEffectInstanceId = (UFunction*) UObject::GObjObjects()->Data[ 89144 ];

	ATrGame_execGetNextEffectInstanceId_Parms GetNextEffectInstanceId_Parms;

	pFnGetNextEffectInstanceId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextEffectInstanceId, &GetNextEffectInstanceId_Parms, NULL );

	pFnGetNextEffectInstanceId->FunctionFlags |= 0x400;

	return GetNextEffectInstanceId_Parms.ReturnValue;
};

// Function TribesGame.TrCaHCapturePoint.IsPawnConsideredNearby
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPawn*                 TRP                            ( CPF_Parm )

bool ATrCaHCapturePoint::IsPawnConsideredNearby ( class ATrPawn* TRP )
{
	static UFunction* pFnIsPawnConsideredNearby = NULL;

	if ( ! pFnIsPawnConsideredNearby )
		pFnIsPawnConsideredNearby = (UFunction*) UObject::GObjObjects()->Data[ 73435 ];

	ATrCaHCapturePoint_execIsPawnConsideredNearby_Parms IsPawnConsideredNearby_Parms;
	IsPawnConsideredNearby_Parms.TRP = TRP;

	this->ProcessEvent ( pFnIsPawnConsideredNearby, &IsPawnConsideredNearby_Parms, NULL );

	return IsPawnConsideredNearby_Parms.ReturnValue;
};

// Function TribesGame.TrCaHCapturePoint.CheckNearbyPlayersTimer
// [0x00020002] 
// Parameters infos:

void ATrCaHCapturePoint::CheckNearbyPlayersTimer ( )
{
	static UFunction* pFnCheckNearbyPlayersTimer = NULL;

	if ( ! pFnCheckNearbyPlayersTimer )
		pFnCheckNearbyPlayersTimer = (UFunction*) UObject::GObjObjects()->Data[ 73430 ];

	ATrCaHCapturePoint_execCheckNearbyPlayersTimer_Parms CheckNearbyPlayersTimer_Parms;

	this->ProcessEvent ( pFnCheckNearbyPlayersTimer, &CheckNearbyPlayersTimer_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrCaHCapturePoint::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 73419 ];

	ATrCaHCapturePoint_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.GetScreenName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_Parm )

struct FString ATrCaHCapturePoint::GetScreenName ( class APlayerController* PC )
{
	static UFunction* pFnGetScreenName = NULL;

	if ( ! pFnGetScreenName )
		pFnGetScreenName = (UFunction*) UObject::GObjObjects()->Data[ 73416 ];

	ATrCaHCapturePoint_execGetScreenName_Parms GetScreenName_Parms;
	GetScreenName_Parms.PC = PC;

	this->ProcessEvent ( pFnGetScreenName, &GetScreenName_Parms, NULL );

	return GetScreenName_Parms.ReturnValue;
};

// Function TribesGame.TrCaHCapturePoint.ShouldPostRenderForCaH
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrCaHCapturePoint::ShouldPostRenderForCaH ( )
{
	static UFunction* pFnShouldPostRenderForCaH = NULL;

	if ( ! pFnShouldPostRenderForCaH )
		pFnShouldPostRenderForCaH = (UFunction*) UObject::GObjObjects()->Data[ 73414 ];

	ATrCaHCapturePoint_execShouldPostRenderForCaH_Parms ShouldPostRenderForCaH_Parms;

	this->ProcessEvent ( pFnShouldPostRenderForCaH, &ShouldPostRenderForCaH_Parms, NULL );

	return ShouldPostRenderForCaH_Parms.ReturnValue;
};

// Function TribesGame.TrCaHCapturePoint.AwardPointTimer
// [0x00020002] 
// Parameters infos:

void ATrCaHCapturePoint::AwardPointTimer ( )
{
	static UFunction* pFnAwardPointTimer = NULL;

	if ( ! pFnAwardPointTimer )
		pFnAwardPointTimer = (UFunction*) UObject::GObjObjects()->Data[ 73412 ];

	ATrCaHCapturePoint_execAwardPointTimer_Parms AwardPointTimer_Parms;

	this->ProcessEvent ( pFnAwardPointTimer, &AwardPointTimer_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PostCapturePointTimer
// [0x00020002] 
// Parameters infos:

void ATrCaHCapturePoint::PostCapturePointTimer ( )
{
	static UFunction* pFnPostCapturePointTimer = NULL;

	if ( ! pFnPostCapturePointTimer )
		pFnPostCapturePointTimer = (UFunction*) UObject::GObjObjects()->Data[ 73408 ];

	ATrCaHCapturePoint_execPostCapturePointTimer_Parms PostCapturePointTimer_Parms;

	this->ProcessEvent ( pFnPostCapturePointTimer, &PostCapturePointTimer_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.OnPawnTouched
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrCaHCapturePoint::OnPawnTouched ( class ATrPawn* TRP )
{
	static UFunction* pFnOnPawnTouched = NULL;

	if ( ! pFnOnPawnTouched )
		pFnOnPawnTouched = (UFunction*) UObject::GObjObjects()->Data[ 73400 ];

	ATrCaHCapturePoint_execOnPawnTouched_Parms OnPawnTouched_Parms;
	OnPawnTouched_Parms.TRP = TRP;

	this->ProcessEvent ( pFnOnPawnTouched, &OnPawnTouched_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrCaHCapturePoint::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 73394 ];

	ATrCaHCapturePoint_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrCaHCapturePoint::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 73392 ];

	ATrCaHCapturePoint_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.UpdateHologramVisibility
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrCaHCapturePoint::eventUpdateHologramVisibility ( )
{
	static UFunction* pFnUpdateHologramVisibility = NULL;

	if ( ! pFnUpdateHologramVisibility )
		pFnUpdateHologramVisibility = (UFunction*) UObject::GObjObjects()->Data[ 73390 ];

	ATrCaHCapturePoint_eventUpdateHologramVisibility_Parms UpdateHologramVisibility_Parms;

	this->ProcessEvent ( pFnUpdateHologramVisibility, &UpdateHologramVisibility_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PointPulseMarker
// [0x00020102] 
// Parameters infos:

void ATrCaHCapturePoint::PointPulseMarker ( )
{
	static UFunction* pFnPointPulseMarker = NULL;

	if ( ! pFnPointPulseMarker )
		pFnPointPulseMarker = (UFunction*) UObject::GObjObjects()->Data[ 73389 ];

	ATrCaHCapturePoint_execPointPulseMarker_Parms PointPulseMarker_Parms;

	this->ProcessEvent ( pFnPointPulseMarker, &PointPulseMarker_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PulseMarker
// [0x00020102] 
// Parameters infos:

void ATrCaHCapturePoint::PulseMarker ( )
{
	static UFunction* pFnPulseMarker = NULL;

	if ( ! pFnPulseMarker )
		pFnPulseMarker = (UFunction*) UObject::GObjObjects()->Data[ 73388 ];

	ATrCaHCapturePoint_execPulseMarker_Parms PulseMarker_Parms;

	this->ProcessEvent ( pFnPulseMarker, &PulseMarker_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrCaHCapturePoint::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 73386 ];

	ATrCaHCapturePoint_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrCaHCapturePoint.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrCaHCapturePoint::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 73383 ];

	ATrCaHCapturePoint_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrDeployable_PrismMine::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 79851 ];

	ATrDeployable_PrismMine_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.NoConnectionExists
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrDeployable_PrismMine* AdjacentMine                   ( CPF_Parm )

bool ATrDeployable_PrismMine::NoConnectionExists ( class ATrDeployable_PrismMine* AdjacentMine )
{
	static UFunction* pFnNoConnectionExists = NULL;

	if ( ! pFnNoConnectionExists )
		pFnNoConnectionExists = (UFunction*) UObject::GObjObjects()->Data[ 79845 ];

	ATrDeployable_PrismMine_execNoConnectionExists_Parms NoConnectionExists_Parms;
	NoConnectionExists_Parms.AdjacentMine = AdjacentMine;

	this->ProcessEvent ( pFnNoConnectionExists, &NoConnectionExists_Parms, NULL );

	return NoConnectionExists_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_PrismMine.DeployComplete
// [0x00820102] 
// Parameters infos:

void ATrDeployable_PrismMine::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 79841 ];

	ATrDeployable_PrismMine_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.OnTripSleep
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_PrismMine::eventOnTripSleep ( )
{
	static UFunction* pFnOnTripSleep = NULL;

	if ( ! pFnOnTripSleep )
		pFnOnTripSleep = (UFunction*) UObject::GObjObjects()->Data[ 79840 ];

	ATrDeployable_PrismMine_eventOnTripSleep_Parms OnTripSleep_Parms;

	this->ProcessEvent ( pFnOnTripSleep, &OnTripSleep_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.OnTripAwake
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_PrismMine::eventOnTripAwake ( )
{
	static UFunction* pFnOnTripAwake = NULL;

	if ( ! pFnOnTripAwake )
		pFnOnTripAwake = (UFunction*) UObject::GObjObjects()->Data[ 79839 ];

	ATrDeployable_PrismMine_eventOnTripAwake_Parms OnTripAwake_Parms;

	this->ProcessEvent ( pFnOnTripAwake, &OnTripAwake_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.GetTripSocketPosition
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsLeft                        ( CPF_Parm )
// struct FVector                 SocketPosition                 ( CPF_Parm | CPF_OutParm )

bool ATrDeployable_PrismMine::eventGetTripSocketPosition ( unsigned long bIsLeft, struct FVector* SocketPosition )
{
	static UFunction* pFnGetTripSocketPosition = NULL;

	if ( ! pFnGetTripSocketPosition )
		pFnGetTripSocketPosition = (UFunction*) UObject::GObjObjects()->Data[ 79834 ];

	ATrDeployable_PrismMine_eventGetTripSocketPosition_Parms GetTripSocketPosition_Parms;
	GetTripSocketPosition_Parms.bIsLeft = bIsLeft;

	this->ProcessEvent ( pFnGetTripSocketPosition, &GetTripSocketPosition_Parms, NULL );

	if ( SocketPosition )
		memcpy ( SocketPosition, &GetTripSocketPosition_Parms.SocketPosition, 0xC );

	return GetTripSocketPosition_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_PrismMine.GetParticleSystemName
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UParticleSystem* ATrDeployable_PrismMine::GetParticleSystemName ( )
{
	static UFunction* pFnGetParticleSystemName = NULL;

	if ( ! pFnGetParticleSystemName )
		pFnGetParticleSystemName = (UFunction*) UObject::GObjObjects()->Data[ 79832 ];

	ATrDeployable_PrismMine_execGetParticleSystemName_Parms GetParticleSystemName_Parms;

	this->ProcessEvent ( pFnGetParticleSystemName, &GetParticleSystemName_Parms, NULL );

	return GetParticleSystemName_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_PrismMine.TripActivated
// [0x00020102] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// struct FVector                 ActivateLocation               ( CPF_Parm )
// class ATrTripActor*            TripActor                      ( CPF_Parm )

void ATrDeployable_PrismMine::TripActivated ( class APawn* Other, struct FVector ActivateLocation, class ATrTripActor* TripActor )
{
	static UFunction* pFnTripActivated = NULL;

	if ( ! pFnTripActivated )
		pFnTripActivated = (UFunction*) UObject::GObjObjects()->Data[ 79828 ];

	ATrDeployable_PrismMine_execTripActivated_Parms TripActivated_Parms;
	TripActivated_Parms.Other = Other;
	memcpy ( &TripActivated_Parms.ActivateLocation, &ActivateLocation, 0xC );
	TripActivated_Parms.TripActor = TripActor;

	this->ProcessEvent ( pFnTripActivated, &TripActivated_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.RemoveTripActor
// [0x00020102] 
// Parameters infos:
// class ATrTripActor*            RemoveTrip                     ( CPF_Parm )

void ATrDeployable_PrismMine::RemoveTripActor ( class ATrTripActor* RemoveTrip )
{
	static UFunction* pFnRemoveTripActor = NULL;

	if ( ! pFnRemoveTripActor )
		pFnRemoveTripActor = (UFunction*) UObject::GObjObjects()->Data[ 79825 ];

	ATrDeployable_PrismMine_execRemoveTripActor_Parms RemoveTripActor_Parms;
	RemoveTripActor_Parms.RemoveTrip = RemoveTrip;

	this->ProcessEvent ( pFnRemoveTripActor, &RemoveTripActor_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.AddTripActor
// [0x00020102] 
// Parameters infos:
// class ATrTripActor*            NewTrip                        ( CPF_Parm )

void ATrDeployable_PrismMine::AddTripActor ( class ATrTripActor* NewTrip )
{
	static UFunction* pFnAddTripActor = NULL;

	if ( ! pFnAddTripActor )
		pFnAddTripActor = (UFunction*) UObject::GObjObjects()->Data[ 79822 ];

	ATrDeployable_PrismMine_execAddTripActor_Parms AddTripActor_Parms;
	AddTripActor_Parms.NewTrip = NewTrip;

	this->ProcessEvent ( pFnAddTripActor, &AddTripActor_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.DestroyTripActor
// [0x00020102] 
// Parameters infos:
// class ATrTripActor*            DestroyTrip                    ( CPF_Parm )

void ATrDeployable_PrismMine::DestroyTripActor ( class ATrTripActor* DestroyTrip )
{
	static UFunction* pFnDestroyTripActor = NULL;

	if ( ! pFnDestroyTripActor )
		pFnDestroyTripActor = (UFunction*) UObject::GObjObjects()->Data[ 79820 ];

	ATrDeployable_PrismMine_execDestroyTripActor_Parms DestroyTripActor_Parms;
	DestroyTripActor_Parms.DestroyTrip = DestroyTrip;

	this->ProcessEvent ( pFnDestroyTripActor, &DestroyTripActor_Parms, NULL );
};

// Function TribesGame.TrDeployable_PrismMine.CreateTripActor
// [0x00820102] 
// Parameters infos:
// class ATrDeployable_PrismMine* Right                          ( CPF_Parm )
// struct FVector                 LeftLocation                   ( CPF_Parm )
// struct FVector                 RightLocation                  ( CPF_Parm )

void ATrDeployable_PrismMine::CreateTripActor ( class ATrDeployable_PrismMine* Right, struct FVector LeftLocation, struct FVector RightLocation )
{
	static UFunction* pFnCreateTripActor = NULL;

	if ( ! pFnCreateTripActor )
		pFnCreateTripActor = (UFunction*) UObject::GObjObjects()->Data[ 79812 ];

	ATrDeployable_PrismMine_execCreateTripActor_Parms CreateTripActor_Parms;
	CreateTripActor_Parms.Right = Right;
	memcpy ( &CreateTripActor_Parms.LeftLocation, &LeftLocation, 0xC );
	memcpy ( &CreateTripActor_Parms.RightLocation, &RightLocation, 0xC );

	this->ProcessEvent ( pFnCreateTripActor, &CreateTripActor_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_Sensor::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79572 ];

	ATrDeployable_Sensor_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Sensor.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Sensor::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 79565 ];

	ATrDeployable_Sensor_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.ScanTargets
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Sensor::ScanTargets ( )
{
	static UFunction* pFnScanTargets = NULL;

	if ( ! pFnScanTargets )
		pFnScanTargets = (UFunction*) UObject::GObjObjects()->Data[ 79563 ];

	ATrDeployable_Sensor_execScanTargets_Parms ScanTargets_Parms;

	this->ProcessEvent ( pFnScanTargets, &ScanTargets_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.IsDeployed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable_Sensor::IsDeployed ( )
{
	static UFunction* pFnIsDeployed = NULL;

	if ( ! pFnIsDeployed )
		pFnIsDeployed = (UFunction*) UObject::GObjObjects()->Data[ 79561 ];

	ATrDeployable_Sensor_execIsDeployed_Parms IsDeployed_Parms;

	this->ProcessEvent ( pFnIsDeployed, &IsDeployed_Parms, NULL );

	return IsDeployed_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Sensor.OnPawnExitedCollisionProxy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable_Sensor::OnPawnExitedCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnExitedCollisionProxy = NULL;

	if ( ! pFnOnPawnExitedCollisionProxy )
		pFnOnPawnExitedCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 79559 ];

	ATrDeployable_Sensor_execOnPawnExitedCollisionProxy_Parms OnPawnExitedCollisionProxy_Parms;
	OnPawnExitedCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnExitedCollisionProxy, &OnPawnExitedCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.IsInRange
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ATrDeployable_Sensor::IsInRange ( class APawn* P )
{
	static UFunction* pFnIsInRange = NULL;

	if ( ! pFnIsInRange )
		pFnIsInRange = (UFunction*) UObject::GObjObjects()->Data[ 79552 ];

	ATrDeployable_Sensor_execIsInRange_Parms IsInRange_Parms;
	IsInRange_Parms.P = P;

	this->ProcessEvent ( pFnIsInRange, &IsInRange_Parms, NULL );

	return IsInRange_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Sensor.OnPawnDetectedByCollisionProxy
// [0x00820002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable_Sensor::OnPawnDetectedByCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnDetectedByCollisionProxy = NULL;

	if ( ! pFnOnPawnDetectedByCollisionProxy )
		pFnOnPawnDetectedByCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 79549 ];

	ATrDeployable_Sensor_execOnPawnDetectedByCollisionProxy_Parms OnPawnDetectedByCollisionProxy_Parms;
	OnPawnDetectedByCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnDetectedByCollisionProxy, &OnPawnDetectedByCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.ShouldDetectPawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ATrDeployable_Sensor::ShouldDetectPawn ( class APawn* P )
{
	static UFunction* pFnShouldDetectPawn = NULL;

	if ( ! pFnShouldDetectPawn )
		pFnShouldDetectPawn = (UFunction*) UObject::GObjObjects()->Data[ 79546 ];

	ATrDeployable_Sensor_execShouldDetectPawn_Parms ShouldDetectPawn_Parms;
	ShouldDetectPawn_Parms.P = P;

	this->ProcessEvent ( pFnShouldDetectPawn, &ShouldDetectPawn_Parms, NULL );

	return ShouldDetectPawn_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Sensor.ReleaseOutOfSightEnemies
// [0x00020002] 
// Parameters infos:

void ATrDeployable_Sensor::ReleaseOutOfSightEnemies ( )
{
	static UFunction* pFnReleaseOutOfSightEnemies = NULL;

	if ( ! pFnReleaseOutOfSightEnemies )
		pFnReleaseOutOfSightEnemies = (UFunction*) UObject::GObjObjects()->Data[ 79542 ];

	ATrDeployable_Sensor_execReleaseOutOfSightEnemies_Parms ReleaseOutOfSightEnemies_Parms;

	this->ProcessEvent ( pFnReleaseOutOfSightEnemies, &ReleaseOutOfSightEnemies_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.ManageEnemiesOutOfSight
// [0x00020002] 
// Parameters infos:

void ATrDeployable_Sensor::ManageEnemiesOutOfSight ( )
{
	static UFunction* pFnManageEnemiesOutOfSight = NULL;

	if ( ! pFnManageEnemiesOutOfSight )
		pFnManageEnemiesOutOfSight = (UFunction*) UObject::GObjObjects()->Data[ 79541 ];

	ATrDeployable_Sensor_execManageEnemiesOutOfSight_Parms ManageEnemiesOutOfSight_Parms;

	this->ProcessEvent ( pFnManageEnemiesOutOfSight, &ManageEnemiesOutOfSight_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.ReleaseAllDetectedPawns
// [0x00020002] 
// Parameters infos:

void ATrDeployable_Sensor::ReleaseAllDetectedPawns ( )
{
	static UFunction* pFnReleaseAllDetectedPawns = NULL;

	if ( ! pFnReleaseAllDetectedPawns )
		pFnReleaseAllDetectedPawns = (UFunction*) UObject::GObjObjects()->Data[ 79540 ];

	ATrDeployable_Sensor_execReleaseAllDetectedPawns_Parms ReleaseAllDetectedPawns_Parms;

	this->ProcessEvent ( pFnReleaseAllDetectedPawns, &ReleaseAllDetectedPawns_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.RemoveDetectedPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )

void ATrDeployable_Sensor::RemoveDetectedPawn ( class APawn* DetectedPawn )
{
	static UFunction* pFnRemoveDetectedPawn = NULL;

	if ( ! pFnRemoveDetectedPawn )
		pFnRemoveDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79538 ];

	ATrDeployable_Sensor_execRemoveDetectedPawn_Parms RemoveDetectedPawn_Parms;
	RemoveDetectedPawn_Parms.DetectedPawn = DetectedPawn;

	this->ProcessEvent ( pFnRemoveDetectedPawn, &RemoveDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.AddDetectedPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )

void ATrDeployable_Sensor::AddDetectedPawn ( class APawn* DetectedPawn )
{
	static UFunction* pFnAddDetectedPawn = NULL;

	if ( ! pFnAddDetectedPawn )
		pFnAddDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79535 ];

	ATrDeployable_Sensor_execAddDetectedPawn_Parms AddDetectedPawn_Parms;
	AddDetectedPawn_Parms.DetectedPawn = DetectedPawn;

	this->ProcessEvent ( pFnAddDetectedPawn, &AddDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.SetPowered
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDeployable_Sensor::SetPowered ( unsigned long bEnabled )
{
	static UFunction* pFnSetPowered = NULL;

	if ( ! pFnSetPowered )
		pFnSetPowered = (UFunction*) UObject::GObjObjects()->Data[ 79533 ];

	ATrDeployable_Sensor_execSetPowered_Parms SetPowered_Parms;
	SetPowered_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetPowered, &SetPowered_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.ModifyDetectedPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )
// unsigned long                  detected                       ( CPF_Parm )

void ATrDeployable_Sensor::ModifyDetectedPawn ( class APawn* DetectedPawn, unsigned long detected )
{
	static UFunction* pFnModifyDetectedPawn = NULL;

	if ( ! pFnModifyDetectedPawn )
		pFnModifyDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79525 ];

	ATrDeployable_Sensor_execModifyDetectedPawn_Parms ModifyDetectedPawn_Parms;
	ModifyDetectedPawn_Parms.DetectedPawn = DetectedPawn;
	ModifyDetectedPawn_Parms.detected = detected;

	this->ProcessEvent ( pFnModifyDetectedPawn, &ModifyDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.DeployComplete
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Sensor::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 79524 ];

	ATrDeployable_Sensor_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrDeployable_Sensor.CheckLOS
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Target                         ( CPF_Parm )

bool ATrDeployable_Sensor::CheckLOS ( class APawn* Target )
{
	static UFunction* pFnCheckLOS = NULL;

	if ( ! pFnCheckLOS )
		pFnCheckLOS = (UFunction*) UObject::GObjObjects()->Data[ 79518 ];

	ATrDeployable_Sensor_execCheckLOS_Parms CheckLOS_Parms;
	CheckLOS_Parms.Target = Target;

	this->ProcessEvent ( pFnCheckLOS, &CheckLOS_Parms, NULL );

	return CheckLOS_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_TripSensor.OnTripSleep
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_TripSensor::eventOnTripSleep ( )
{
	static UFunction* pFnOnTripSleep = NULL;

	if ( ! pFnOnTripSleep )
		pFnOnTripSleep = (UFunction*) UObject::GObjObjects()->Data[ 80029 ];

	ATrDeployable_TripSensor_eventOnTripSleep_Parms OnTripSleep_Parms;

	this->ProcessEvent ( pFnOnTripSleep, &OnTripSleep_Parms, NULL );
};

// Function TribesGame.TrDeployable_TripSensor.OnTripAwake
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_TripSensor::eventOnTripAwake ( )
{
	static UFunction* pFnOnTripAwake = NULL;

	if ( ! pFnOnTripAwake )
		pFnOnTripAwake = (UFunction*) UObject::GObjObjects()->Data[ 80028 ];

	ATrDeployable_TripSensor_eventOnTripAwake_Parms OnTripAwake_Parms;

	this->ProcessEvent ( pFnOnTripAwake, &OnTripAwake_Parms, NULL );
};

// Function TribesGame.TrDeployable_TripSensor.GetTripSocketPosition
// [0x00420900] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsLeft                        ( CPF_Parm )
// struct FVector                 SocketPosition                 ( CPF_Parm | CPF_OutParm )

bool ATrDeployable_TripSensor::eventGetTripSocketPosition ( unsigned long bIsLeft, struct FVector* SocketPosition )
{
	static UFunction* pFnGetTripSocketPosition = NULL;

	if ( ! pFnGetTripSocketPosition )
		pFnGetTripSocketPosition = (UFunction*) UObject::GObjObjects()->Data[ 80024 ];

	ATrDeployable_TripSensor_eventGetTripSocketPosition_Parms GetTripSocketPosition_Parms;
	GetTripSocketPosition_Parms.bIsLeft = bIsLeft;

	this->ProcessEvent ( pFnGetTripSocketPosition, &GetTripSocketPosition_Parms, NULL );

	if ( SocketPosition )
		memcpy ( SocketPosition, &GetTripSocketPosition_Parms.SocketPosition, 0xC );

	return GetTripSocketPosition_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_TripSensor.GetParticleSystemName
// [0x00020100] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UParticleSystem* ATrDeployable_TripSensor::GetParticleSystemName ( )
{
	static UFunction* pFnGetParticleSystemName = NULL;

	if ( ! pFnGetParticleSystemName )
		pFnGetParticleSystemName = (UFunction*) UObject::GObjObjects()->Data[ 80022 ];

	ATrDeployable_TripSensor_execGetParticleSystemName_Parms GetParticleSystemName_Parms;

	this->ProcessEvent ( pFnGetParticleSystemName, &GetParticleSystemName_Parms, NULL );

	return GetParticleSystemName_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_TripSensor.TripActivated
// [0x00020100] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// struct FVector                 ActivateLocation               ( CPF_Parm )
// class ATrTripActor*            TripActor                      ( CPF_Parm )

void ATrDeployable_TripSensor::TripActivated ( class APawn* Other, struct FVector ActivateLocation, class ATrTripActor* TripActor )
{
	static UFunction* pFnTripActivated = NULL;

	if ( ! pFnTripActivated )
		pFnTripActivated = (UFunction*) UObject::GObjObjects()->Data[ 80018 ];

	ATrDeployable_TripSensor_execTripActivated_Parms TripActivated_Parms;
	TripActivated_Parms.Other = Other;
	memcpy ( &TripActivated_Parms.ActivateLocation, &ActivateLocation, 0xC );
	TripActivated_Parms.TripActor = TripActor;

	this->ProcessEvent ( pFnTripActivated, &TripActivated_Parms, NULL );
};

// Function TribesGame.TrDeployable_TripSensor.RemoveTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            RemoveTrip                     ( CPF_Parm )

void ATrDeployable_TripSensor::RemoveTripActor ( class ATrTripActor* RemoveTrip )
{
	static UFunction* pFnRemoveTripActor = NULL;

	if ( ! pFnRemoveTripActor )
		pFnRemoveTripActor = (UFunction*) UObject::GObjObjects()->Data[ 80016 ];

	ATrDeployable_TripSensor_execRemoveTripActor_Parms RemoveTripActor_Parms;
	RemoveTripActor_Parms.RemoveTrip = RemoveTrip;

	this->ProcessEvent ( pFnRemoveTripActor, &RemoveTripActor_Parms, NULL );
};

// Function TribesGame.TrDeployable_TripSensor.AddTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            NewTrip                        ( CPF_Parm )

void ATrDeployable_TripSensor::AddTripActor ( class ATrTripActor* NewTrip )
{
	static UFunction* pFnAddTripActor = NULL;

	if ( ! pFnAddTripActor )
		pFnAddTripActor = (UFunction*) UObject::GObjObjects()->Data[ 80014 ];

	ATrDeployable_TripSensor_execAddTripActor_Parms AddTripActor_Parms;
	AddTripActor_Parms.NewTrip = NewTrip;

	this->ProcessEvent ( pFnAddTripActor, &AddTripActor_Parms, NULL );
};

// Function TribesGame.TrStation.BlocksLineChecksFromSourceActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  SourceActor                    ( CPF_Parm )

bool ATrStation::eventBlocksLineChecksFromSourceActor ( class AActor* SourceActor )
{
	static UFunction* pFnBlocksLineChecksFromSourceActor = NULL;

	if ( ! pFnBlocksLineChecksFromSourceActor )
		pFnBlocksLineChecksFromSourceActor = (UFunction*) UObject::GObjObjects()->Data[ 97235 ];

	ATrStation_eventBlocksLineChecksFromSourceActor_Parms BlocksLineChecksFromSourceActor_Parms;
	BlocksLineChecksFromSourceActor_Parms.SourceActor = SourceActor;

	this->ProcessEvent ( pFnBlocksLineChecksFromSourceActor, &BlocksLineChecksFromSourceActor_Parms, NULL );

	return BlocksLineChecksFromSourceActor_Parms.ReturnValue;
};

// Function TribesGame.TrStation.PlayStationLeftEffects
// [0x00020100] 
// Parameters infos:

void ATrStation::PlayStationLeftEffects ( )
{
	static UFunction* pFnPlayStationLeftEffects = NULL;

	if ( ! pFnPlayStationLeftEffects )
		pFnPlayStationLeftEffects = (UFunction*) UObject::GObjObjects()->Data[ 97234 ];

	ATrStation_execPlayStationLeftEffects_Parms PlayStationLeftEffects_Parms;

	this->ProcessEvent ( pFnPlayStationLeftEffects, &PlayStationLeftEffects_Parms, NULL );
};

// Function TribesGame.TrStation.PlayStationEnteredEffects
// [0x00020102] 
// Parameters infos:

void ATrStation::PlayStationEnteredEffects ( )
{
	static UFunction* pFnPlayStationEnteredEffects = NULL;

	if ( ! pFnPlayStationEnteredEffects )
		pFnPlayStationEnteredEffects = (UFunction*) UObject::GObjObjects()->Data[ 97231 ];

	ATrStation_execPlayStationEnteredEffects_Parms PlayStationEnteredEffects_Parms;

	this->ProcessEvent ( pFnPlayStationEnteredEffects, &PlayStationEnteredEffects_Parms, NULL );
};

// Function TribesGame.TrStation.PawnLeftStation
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrStation::PawnLeftStation ( class ATrPawn* P )
{
	static UFunction* pFnPawnLeftStation = NULL;

	if ( ! pFnPawnLeftStation )
		pFnPawnLeftStation = (UFunction*) UObject::GObjObjects()->Data[ 97228 ];

	ATrStation_execPawnLeftStation_Parms PawnLeftStation_Parms;
	PawnLeftStation_Parms.P = P;

	this->ProcessEvent ( pFnPawnLeftStation, &PawnLeftStation_Parms, NULL );
};

// Function TribesGame.TrStation.PawnEnteredStation
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrStation::PawnEnteredStation ( class ATrPawn* P )
{
	static UFunction* pFnPawnEnteredStation = NULL;

	if ( ! pFnPawnEnteredStation )
		pFnPawnEnteredStation = (UFunction*) UObject::GObjObjects()->Data[ 97225 ];

	ATrStation_execPawnEnteredStation_Parms PawnEnteredStation_Parms;
	PawnEnteredStation_Parms.P = P;

	this->ProcessEvent ( pFnPawnEnteredStation, &PawnEnteredStation_Parms, NULL );
};

// Function TribesGame.TrStation.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrStation::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 97224 ];

	ATrStation_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrStation.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrStation::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 97222 ];

	ATrStation_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrStation.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrStation::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 97221 ];

	ATrStation_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrInventoryStation.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrInventoryStation::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 97268 ];

	ATrInventoryStation_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryStation.Timer
// [0x00020002] 
// Parameters infos:

void ATrInventoryStation::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 97266 ];

	ATrInventoryStation_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function TribesGame.TrInventoryStation.PlayStationEnteredEffects
// [0x00820102] 
// Parameters infos:

void ATrInventoryStation::PlayStationEnteredEffects ( )
{
	static UFunction* pFnPlayStationEnteredEffects = NULL;

	if ( ! pFnPlayStationEnteredEffects )
		pFnPlayStationEnteredEffects = (UFunction*) UObject::GObjObjects()->Data[ 97262 ];

	ATrInventoryStation_execPlayStationEnteredEffects_Parms PlayStationEnteredEffects_Parms;

	this->ProcessEvent ( pFnPlayStationEnteredEffects, &PlayStationEnteredEffects_Parms, NULL );
};

// Function TribesGame.TrInventoryStation.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrInventoryStation::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 97261 ];

	ATrInventoryStation_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrInventoryStation.PawnEnteredStation
// [0x00820002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrInventoryStation::PawnEnteredStation ( class ATrPawn* P )
{
	static UFunction* pFnPawnEnteredStation = NULL;

	if ( ! pFnPawnEnteredStation )
		pFnPawnEnteredStation = (UFunction*) UObject::GObjObjects()->Data[ 97256 ];

	ATrInventoryStation_execPawnEnteredStation_Parms PawnEnteredStation_Parms;
	PawnEnteredStation_Parms.P = P;

	this->ProcessEvent ( pFnPawnEnteredStation, &PawnEnteredStation_Parms, NULL );
};

// Function TribesGame.TrInventoryStation_Spawnable.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrInventoryStation_Spawnable::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 97326 ];

	ATrInventoryStation_Spawnable_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrGameObjectiveUpgrade.InitUpgrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrGameObjective*        OwnerObject                    ( CPF_Parm )

void UTrGameObjectiveUpgrade::InitUpgrade ( class ATrGameObjective* OwnerObject )
{
	static UFunction* pFnInitUpgrade = NULL;

	if ( ! pFnInitUpgrade )
		pFnInitUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 90217 ];

	UTrGameObjectiveUpgrade_execInitUpgrade_Parms InitUpgrade_Parms;
	InitUpgrade_Parms.OwnerObject = OwnerObject;

	pFnInitUpgrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitUpgrade, &InitUpgrade_Parms, NULL );

	pFnInitUpgrade->FunctionFlags |= 0x400;
};

// Function TribesGame.TrGameReplicationInfo.CanJoinTeam
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedTeam                  ( CPF_Parm )
// unsigned char                  CurrentTeam                    ( CPF_Parm )

bool ATrGameReplicationInfo::CanJoinTeam ( unsigned char RequestedTeam, unsigned char CurrentTeam )
{
	static UFunction* pFnCanJoinTeam = NULL;

	if ( ! pFnCanJoinTeam )
		pFnCanJoinTeam = (UFunction*) UObject::GObjObjects()->Data[ 64812 ];

	ATrGameReplicationInfo_execCanJoinTeam_Parms CanJoinTeam_Parms;
	CanJoinTeam_Parms.RequestedTeam = RequestedTeam;
	CanJoinTeam_Parms.CurrentTeam = CurrentTeam;

	this->ProcessEvent ( pFnCanJoinTeam, &CanJoinTeam_Parms, NULL );

	return CanJoinTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.GetTeamSize
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TeamNum                        ( CPF_Parm )

int ATrGameReplicationInfo::GetTeamSize ( unsigned char TeamNum )
{
	static UFunction* pFnGetTeamSize = NULL;

	if ( ! pFnGetTeamSize )
		pFnGetTeamSize = (UFunction*) UObject::GObjObjects()->Data[ 64810 ];

	ATrGameReplicationInfo_execGetTeamSize_Parms GetTeamSize_Parms;
	GetTeamSize_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetTeamSize, &GetTeamSize_Parms, NULL );

	return GetTeamSize_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.AddPRI
// [0x00020102] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void ATrGameReplicationInfo::AddPRI ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnAddPRI = NULL;

	if ( ! pFnAddPRI )
		pFnAddPRI = (UFunction*) UObject::GObjObjects()->Data[ 91645 ];

	ATrGameReplicationInfo_execAddPRI_Parms AddPRI_Parms;
	AddPRI_Parms.PRI = PRI;

	this->ProcessEvent ( pFnAddPRI, &AddPRI_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.SetWarmingUp
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWarmup                        ( CPF_Parm )

void ATrGameReplicationInfo::SetWarmingUp ( unsigned long bWarmup )
{
	static UFunction* pFnSetWarmingUp = NULL;

	if ( ! pFnSetWarmingUp )
		pFnSetWarmingUp = (UFunction*) UObject::GObjObjects()->Data[ 91642 ];

	ATrGameReplicationInfo_execSetWarmingUp_Parms SetWarmingUp_Parms;
	SetWarmingUp_Parms.bWarmup = bWarmup;

	this->ProcessEvent ( pFnSetWarmingUp, &SetWarmingUp_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.IsValidTeamPlayer
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* TrPRI                          ( CPF_Parm )

bool ATrGameReplicationInfo::IsValidTeamPlayer ( class ATrPlayerReplicationInfo* TrPRI )
{
	static UFunction* pFnIsValidTeamPlayer = NULL;

	if ( ! pFnIsValidTeamPlayer )
		pFnIsValidTeamPlayer = (UFunction*) UObject::GObjObjects()->Data[ 91639 ];

	ATrGameReplicationInfo_execIsValidTeamPlayer_Parms IsValidTeamPlayer_Parms;
	IsValidTeamPlayer_Parms.TrPRI = TrPRI;

	this->ProcessEvent ( pFnIsValidTeamPlayer, &IsValidTeamPlayer_Parms, NULL );

	return IsValidTeamPlayer_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.IsClassAllowed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamNum                        ( CPF_Parm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

bool ATrGameReplicationInfo::IsClassAllowed ( int TeamNum, class UClass* FamilyInfo )
{
	static UFunction* pFnIsClassAllowed = NULL;

	if ( ! pFnIsClassAllowed )
		pFnIsClassAllowed = (UFunction*) UObject::GObjObjects()->Data[ 56504 ];

	ATrGameReplicationInfo_execIsClassAllowed_Parms IsClassAllowed_Parms;
	IsClassAllowed_Parms.TeamNum = TeamNum;
	IsClassAllowed_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnIsClassAllowed, &IsClassAllowed_Parms, NULL );

	return IsClassAllowed_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.ChangePhysicsType
// [0x00020002] 
// Parameters infos:
// int                            Type                           ( CPF_Parm )

void ATrGameReplicationInfo::ChangePhysicsType ( int Type )
{
	static UFunction* pFnChangePhysicsType = NULL;

	if ( ! pFnChangePhysicsType )
		pFnChangePhysicsType = (UFunction*) UObject::GObjObjects()->Data[ 91629 ];

	ATrGameReplicationInfo_execChangePhysicsType_Parms ChangePhysicsType_Parms;
	ChangePhysicsType_Parms.Type = Type;

	this->ProcessEvent ( pFnChangePhysicsType, &ChangePhysicsType_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.GetGlobalMaxJetpackThrustSpeedMultiplier
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrGameReplicationInfo::GetGlobalMaxJetpackThrustSpeedMultiplier ( )
{
	static UFunction* pFnGetGlobalMaxJetpackThrustSpeedMultiplier = NULL;

	if ( ! pFnGetGlobalMaxJetpackThrustSpeedMultiplier )
		pFnGetGlobalMaxJetpackThrustSpeedMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 72156 ];

	ATrGameReplicationInfo_execGetGlobalMaxJetpackThrustSpeedMultiplier_Parms GetGlobalMaxJetpackThrustSpeedMultiplier_Parms;

	this->ProcessEvent ( pFnGetGlobalMaxJetpackThrustSpeedMultiplier, &GetGlobalMaxJetpackThrustSpeedMultiplier_Parms, NULL );

	return GetGlobalMaxJetpackThrustSpeedMultiplier_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.GetGlobalAirSpeedMultiplier
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrGameReplicationInfo::GetGlobalAirSpeedMultiplier ( )
{
	static UFunction* pFnGetGlobalAirSpeedMultiplier = NULL;

	if ( ! pFnGetGlobalAirSpeedMultiplier )
		pFnGetGlobalAirSpeedMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 72154 ];

	ATrGameReplicationInfo_execGetGlobalAirSpeedMultiplier_Parms GetGlobalAirSpeedMultiplier_Parms;

	this->ProcessEvent ( pFnGetGlobalAirSpeedMultiplier, &GetGlobalAirSpeedMultiplier_Parms, NULL );

	return GetGlobalAirSpeedMultiplier_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.GetGlobalAccelerationMultiplier
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrGameReplicationInfo::GetGlobalAccelerationMultiplier ( )
{
	static UFunction* pFnGetGlobalAccelerationMultiplier = NULL;

	if ( ! pFnGetGlobalAccelerationMultiplier )
		pFnGetGlobalAccelerationMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 72152 ];

	ATrGameReplicationInfo_execGetGlobalAccelerationMultiplier_Parms GetGlobalAccelerationMultiplier_Parms;

	this->ProcessEvent ( pFnGetGlobalAccelerationMultiplier, &GetGlobalAccelerationMultiplier_Parms, NULL );

	return GetGlobalAccelerationMultiplier_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.GetGlobalSpeedCapMultiplier
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrGameReplicationInfo::GetGlobalSpeedCapMultiplier ( )
{
	static UFunction* pFnGetGlobalSpeedCapMultiplier = NULL;

	if ( ! pFnGetGlobalSpeedCapMultiplier )
		pFnGetGlobalSpeedCapMultiplier = (UFunction*) UObject::GObjObjects()->Data[ 72121 ];

	ATrGameReplicationInfo_execGetGlobalSpeedCapMultiplier_Parms GetGlobalSpeedCapMultiplier_Parms;

	this->ProcessEvent ( pFnGetGlobalSpeedCapMultiplier, &GetGlobalSpeedCapMultiplier_Parms, NULL );

	return GetGlobalSpeedCapMultiplier_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrGameReplicationInfo::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 91627 ];

	ATrGameReplicationInfo_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.Blip
// [0x00020102] 
// Parameters infos:

void ATrGameReplicationInfo::Blip ( )
{
	static UFunction* pFnBlip = NULL;

	if ( ! pFnBlip )
		pFnBlip = (UFunction*) UObject::GObjObjects()->Data[ 91626 ];

	ATrGameReplicationInfo_execBlip_Parms Blip_Parms;

	this->ProcessEvent ( pFnBlip, &Blip_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.OnSameTeam
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )
// class AActor*                  B                              ( CPF_Parm )

bool ATrGameReplicationInfo::OnSameTeam ( class AActor* A, class AActor* B )
{
	static UFunction* pFnOnSameTeam = NULL;

	if ( ! pFnOnSameTeam )
		pFnOnSameTeam = (UFunction*) UObject::GObjObjects()->Data[ 91622 ];

	ATrGameReplicationInfo_execOnSameTeam_Parms OnSameTeam_Parms;
	OnSameTeam_Parms.A = A;
	OnSameTeam_Parms.B = B;

	this->ProcessEvent ( pFnOnSameTeam, &OnSameTeam_Parms, NULL );

	return OnSameTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGameReplicationInfo.Timer
// [0x00020102] 
// Parameters infos:

void ATrGameReplicationInfo::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 91619 ];

	ATrGameReplicationInfo_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.OnResetGame
// [0x00020102] 
// Parameters infos:

void ATrGameReplicationInfo::OnResetGame ( )
{
	static UFunction* pFnOnResetGame = NULL;

	if ( ! pFnOnResetGame )
		pFnOnResetGame = (UFunction*) UObject::GObjObjects()->Data[ 91617 ];

	ATrGameReplicationInfo_execOnResetGame_Parms OnResetGame_Parms;

	this->ProcessEvent ( pFnOnResetGame, &OnResetGame_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.OnPhase0SiegeEnded
// [0x00020102] 
// Parameters infos:

void ATrGameReplicationInfo::OnPhase0SiegeEnded ( )
{
	static UFunction* pFnOnPhase0SiegeEnded = NULL;

	if ( ! pFnOnPhase0SiegeEnded )
		pFnOnPhase0SiegeEnded = (UFunction*) UObject::GObjObjects()->Data[ 91615 ];

	ATrGameReplicationInfo_execOnPhase0SiegeEnded_Parms OnPhase0SiegeEnded_Parms;

	this->ProcessEvent ( pFnOnPhase0SiegeEnded, &OnPhase0SiegeEnded_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.CanPlaceDeployables
// [0x00020102] 
// Parameters infos:
// unsigned long                  Value                          ( CPF_Parm )

void ATrGameReplicationInfo::CanPlaceDeployables ( unsigned long Value )
{
	static UFunction* pFnCanPlaceDeployables = NULL;

	if ( ! pFnCanPlaceDeployables )
		pFnCanPlaceDeployables = (UFunction*) UObject::GObjObjects()->Data[ 91613 ];

	ATrGameReplicationInfo_execCanPlaceDeployables_Parms CanPlaceDeployables_Parms;
	CanPlaceDeployables_Parms.Value = Value;

	this->ProcessEvent ( pFnCanPlaceDeployables, &CanPlaceDeployables_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGameReplicationInfo::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 91609 ];

	ATrGameReplicationInfo_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrGameReplicationInfo::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 91606 ];

	ATrGameReplicationInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGameReplicationInfo::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 91605 ];

	ATrGameReplicationInfo_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGameReplicationInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrGameReplicationInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 91603 ];

	ATrGameReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.SaveInterceptKeys
// [0x00020002] 
// Parameters infos:

void UTrKeyBindings::SaveInterceptKeys ( )
{
	static UFunction* pFnSaveInterceptKeys = NULL;

	if ( ! pFnSaveInterceptKeys )
		pFnSaveInterceptKeys = (UFunction*) UObject::GObjObjects()->Data[ 97507 ];

	UTrKeyBindings_execSaveInterceptKeys_Parms SaveInterceptKeys_Parms;

	this->ProcessEvent ( pFnSaveInterceptKeys, &SaveInterceptKeys_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.UpdateRuntimeSpectator
// [0x00020002] 
// Parameters infos:
// class UTrPlayerInput_Spectator* SpecInput                      ( CPF_Parm )

void UTrKeyBindings::UpdateRuntimeSpectator ( class UTrPlayerInput_Spectator* SpecInput )
{
	static UFunction* pFnUpdateRuntimeSpectator = NULL;

	if ( ! pFnUpdateRuntimeSpectator )
		pFnUpdateRuntimeSpectator = (UFunction*) UObject::GObjObjects()->Data[ 97504 ];

	UTrKeyBindings_execUpdateRuntimeSpectator_Parms UpdateRuntimeSpectator_Parms;
	UpdateRuntimeSpectator_Parms.SpecInput = SpecInput;

	this->ProcessEvent ( pFnUpdateRuntimeSpectator, &UpdateRuntimeSpectator_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.UpdateRuntimePlayer
// [0x00020002] 
// Parameters infos:
// class UPlayerInput*            EngineInput                    ( CPF_Parm )

void UTrKeyBindings::UpdateRuntimePlayer ( class UPlayerInput* EngineInput )
{
	static UFunction* pFnUpdateRuntimePlayer = NULL;

	if ( ! pFnUpdateRuntimePlayer )
		pFnUpdateRuntimePlayer = (UFunction*) UObject::GObjObjects()->Data[ 97501 ];

	UTrKeyBindings_execUpdateRuntimePlayer_Parms UpdateRuntimePlayer_Parms;
	UpdateRuntimePlayer_Parms.EngineInput = EngineInput;

	this->ProcessEvent ( pFnUpdateRuntimePlayer, &UpdateRuntimePlayer_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.GetSpectatorInput
// [0x00020002] 
// Parameters infos:
// class UTrPlayerInput_Spectator* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTrPlayerInput_Spectator* UTrKeyBindings::GetSpectatorInput ( )
{
	static UFunction* pFnGetSpectatorInput = NULL;

	if ( ! pFnGetSpectatorInput )
		pFnGetSpectatorInput = (UFunction*) UObject::GObjObjects()->Data[ 97498 ];

	UTrKeyBindings_execGetSpectatorInput_Parms GetSpectatorInput_Parms;

	this->ProcessEvent ( pFnGetSpectatorInput, &GetSpectatorInput_Parms, NULL );

	return GetSpectatorInput_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.GetPlayerInput
// [0x00020002] 
// Parameters infos:
// class UPlayerInput*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UPlayerInput* UTrKeyBindings::GetPlayerInput ( )
{
	static UFunction* pFnGetPlayerInput = NULL;

	if ( ! pFnGetPlayerInput )
		pFnGetPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 97495 ];

	UTrKeyBindings_execGetPlayerInput_Parms GetPlayerInput_Parms;

	this->ProcessEvent ( pFnGetPlayerInput, &GetPlayerInput_Parms, NULL );

	return GetPlayerInput_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.ApplyDefaultSettings
// [0x00020002] 
// Parameters infos:

void UTrKeyBindings::ApplyDefaultSettings ( )
{
	static UFunction* pFnApplyDefaultSettings = NULL;

	if ( ! pFnApplyDefaultSettings )
		pFnApplyDefaultSettings = (UFunction*) UObject::GObjObjects()->Data[ 97491 ];

	UTrKeyBindings_execApplyDefaultSettings_Parms ApplyDefaultSettings_Parms;

	this->ProcessEvent ( pFnApplyDefaultSettings, &ApplyDefaultSettings_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.GetCommandName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Index                          ( CPF_Parm )

struct FString UTrKeyBindings::GetCommandName ( unsigned char Index )
{
	static UFunction* pFnGetCommandName = NULL;

	if ( ! pFnGetCommandName )
		pFnGetCommandName = (UFunction*) UObject::GObjObjects()->Data[ 97488 ];

	UTrKeyBindings_execGetCommandName_Parms GetCommandName_Parms;
	GetCommandName_Parms.Index = Index;

	this->ProcessEvent ( pFnGetCommandName, &GetCommandName_Parms, NULL );

	return GetCommandName_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.GetCurrentBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UPlayerInput*            pInput                         ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

struct FString UTrKeyBindings::GetCurrentBinding ( class UPlayerInput* pInput, struct FString Command )
{
	static UFunction* pFnGetCurrentBinding = NULL;

	if ( ! pFnGetCurrentBinding )
		pFnGetCurrentBinding = (UFunction*) UObject::GObjObjects()->Data[ 97483 ];

	UTrKeyBindings_execGetCurrentBinding_Parms GetCurrentBinding_Parms;
	GetCurrentBinding_Parms.pInput = pInput;
	memcpy ( &GetCurrentBinding_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnGetCurrentBinding, &GetCurrentBinding_Parms, NULL );

	return GetCurrentBinding_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.UnbindSpectatorCommand
// [0x00020002] 
// Parameters infos:
// class UTrPlayerInput_Spectator* pInput                         ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::UnbindSpectatorCommand ( class UTrPlayerInput_Spectator* pInput, struct FString Command )
{
	static UFunction* pFnUnbindSpectatorCommand = NULL;

	if ( ! pFnUnbindSpectatorCommand )
		pFnUnbindSpectatorCommand = (UFunction*) UObject::GObjObjects()->Data[ 97478 ];

	UTrKeyBindings_execUnbindSpectatorCommand_Parms UnbindSpectatorCommand_Parms;
	UnbindSpectatorCommand_Parms.pInput = pInput;
	memcpy ( &UnbindSpectatorCommand_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnUnbindSpectatorCommand, &UnbindSpectatorCommand_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.UnbindPlayerCommand
// [0x00020002] 
// Parameters infos:
// class UPlayerInput*            pInput                         ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::UnbindPlayerCommand ( class UPlayerInput* pInput, struct FString Command )
{
	static UFunction* pFnUnbindPlayerCommand = NULL;

	if ( ! pFnUnbindPlayerCommand )
		pFnUnbindPlayerCommand = (UFunction*) UObject::GObjObjects()->Data[ 97473 ];

	UTrKeyBindings_execUnbindPlayerCommand_Parms UnbindPlayerCommand_Parms;
	UnbindPlayerCommand_Parms.pInput = pInput;
	memcpy ( &UnbindPlayerCommand_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnUnbindPlayerCommand, &UnbindPlayerCommand_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.SaveSpectatorKeyBind
// [0x00820002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStore                         ( CPF_Parm )

struct FString UTrKeyBindings::SaveSpectatorKeyBind ( int Index, struct FString KeyName, unsigned long bStore )
{
	static UFunction* pFnSaveSpectatorKeyBind = NULL;

	if ( ! pFnSaveSpectatorKeyBind )
		pFnSaveSpectatorKeyBind = (UFunction*) UObject::GObjObjects()->Data[ 97464 ];

	UTrKeyBindings_execSaveSpectatorKeyBind_Parms SaveSpectatorKeyBind_Parms;
	SaveSpectatorKeyBind_Parms.Index = Index;
	memcpy ( &SaveSpectatorKeyBind_Parms.KeyName, &KeyName, 0xC );
	SaveSpectatorKeyBind_Parms.bStore = bStore;

	this->ProcessEvent ( pFnSaveSpectatorKeyBind, &SaveSpectatorKeyBind_Parms, NULL );

	return SaveSpectatorKeyBind_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.SavePlayerKeyBind
// [0x00820002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStore                         ( CPF_Parm )

struct FString UTrKeyBindings::SavePlayerKeyBind ( int Index, struct FString KeyName, unsigned long bStore )
{
	static UFunction* pFnSavePlayerKeyBind = NULL;

	if ( ! pFnSavePlayerKeyBind )
		pFnSavePlayerKeyBind = (UFunction*) UObject::GObjObjects()->Data[ 97455 ];

	UTrKeyBindings_execSavePlayerKeyBind_Parms SavePlayerKeyBind_Parms;
	SavePlayerKeyBind_Parms.Index = Index;
	memcpy ( &SavePlayerKeyBind_Parms.KeyName, &KeyName, 0xC );
	SavePlayerKeyBind_Parms.bStore = bStore;

	this->ProcessEvent ( pFnSavePlayerKeyBind, &SavePlayerKeyBind_Parms, NULL );

	return SavePlayerKeyBind_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.SaveKeyBind
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bStore                         ( CPF_OptionalParm | CPF_Parm )

struct FString UTrKeyBindings::SaveKeyBind ( int Index, struct FString KeyName, unsigned long bStore )
{
	static UFunction* pFnSaveKeyBind = NULL;

	if ( ! pFnSaveKeyBind )
		pFnSaveKeyBind = (UFunction*) UObject::GObjObjects()->Data[ 58936 ];

	UTrKeyBindings_execSaveKeyBind_Parms SaveKeyBind_Parms;
	SaveKeyBind_Parms.Index = Index;
	memcpy ( &SaveKeyBind_Parms.KeyName, &KeyName, 0xC );
	SaveKeyBind_Parms.bStore = bStore;

	this->ProcessEvent ( pFnSaveKeyBind, &SaveKeyBind_Parms, NULL );

	return SaveKeyBind_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.ApplyKeyBinding
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::ApplyKeyBinding ( int Index, struct FString val )
{
	static UFunction* pFnApplyKeyBinding = NULL;

	if ( ! pFnApplyKeyBinding )
		pFnApplyKeyBinding = (UFunction*) UObject::GObjObjects()->Data[ 97448 ];

	UTrKeyBindings_execApplyKeyBinding_Parms ApplyKeyBinding_Parms;
	ApplyKeyBinding_Parms.Index = Index;
	memcpy ( &ApplyKeyBinding_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnApplyKeyBinding, &ApplyKeyBinding_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.AddBinding
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 KeyName                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::AddBinding ( struct FString Command, struct FString KeyName )
{
	static UFunction* pFnAddBinding = NULL;

	if ( ! pFnAddBinding )
		pFnAddBinding = (UFunction*) UObject::GObjObjects()->Data[ 97444 ];

	UTrKeyBindings_execAddBinding_Parms AddBinding_Parms;
	memcpy ( &AddBinding_Parms.Command, &Command, 0xC );
	memcpy ( &AddBinding_Parms.KeyName, &KeyName, 0xC );

	this->ProcessEvent ( pFnAddBinding, &AddBinding_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.GetCurrentBind
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Key                            ( CPF_Parm )

struct FString UTrKeyBindings::GetCurrentBind ( unsigned char Key )
{
	static UFunction* pFnGetCurrentBind = NULL;

	if ( ! pFnGetCurrentBind )
		pFnGetCurrentBind = (UFunction*) UObject::GObjObjects()->Data[ 58923 ];

	UTrKeyBindings_execGetCurrentBind_Parms GetCurrentBind_Parms;
	GetCurrentBind_Parms.Key = Key;

	this->ProcessEvent ( pFnGetCurrentBind, &GetCurrentBind_Parms, NULL );

	return GetCurrentBind_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.ReadBindings
// [0x00020002] 
// Parameters infos:

void UTrKeyBindings::ReadBindings ( )
{
	static UFunction* pFnReadBindings = NULL;

	if ( ! pFnReadBindings )
		pFnReadBindings = (UFunction*) UObject::GObjObjects()->Data[ 97438 ];

	UTrKeyBindings_execReadBindings_Parms ReadBindings_Parms;

	this->ProcessEvent ( pFnReadBindings, &ReadBindings_Parms, NULL );
};

// Function TribesGame.TrKeyBindings.ResetDefaultSpectatorBindings
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UTrPlayerInput_Spectator* pInput                         ( CPF_Parm )

void UTrKeyBindings::ResetDefaultSpectatorBindings ( class UTrPlayerInput_Spectator* pInput )
{
	static UFunction* pFnResetDefaultSpectatorBindings = NULL;

	if ( ! pFnResetDefaultSpectatorBindings )
		pFnResetDefaultSpectatorBindings = (UFunction*) UObject::GObjObjects()->Data[ 97436 ];

	UTrKeyBindings_execResetDefaultSpectatorBindings_Parms ResetDefaultSpectatorBindings_Parms;
	ResetDefaultSpectatorBindings_Parms.pInput = pInput;

	pFnResetDefaultSpectatorBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetDefaultSpectatorBindings, &ResetDefaultSpectatorBindings_Parms, NULL );

	pFnResetDefaultSpectatorBindings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.ResetDefaultKeyBindings
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UPlayerInput*            pInput                         ( CPF_Parm )

void UTrKeyBindings::ResetDefaultKeyBindings ( class UPlayerInput* pInput )
{
	static UFunction* pFnResetDefaultKeyBindings = NULL;

	if ( ! pFnResetDefaultKeyBindings )
		pFnResetDefaultKeyBindings = (UFunction*) UObject::GObjObjects()->Data[ 97434 ];

	UTrKeyBindings_execResetDefaultKeyBindings_Parms ResetDefaultKeyBindings_Parms;
	ResetDefaultKeyBindings_Parms.pInput = pInput;

	pFnResetDefaultKeyBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResetDefaultKeyBindings, &ResetDefaultKeyBindings_Parms, NULL );

	pFnResetDefaultKeyBindings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.CaptureNextKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrKeyBindings::CaptureNextKey ( )
{
	static UFunction* pFnCaptureNextKey = NULL;

	if ( ! pFnCaptureNextKey )
		pFnCaptureNextKey = (UFunction*) UObject::GObjObjects()->Data[ 97433 ];

	UTrKeyBindings_execCaptureNextKey_Parms CaptureNextKey_Parms;

	pFnCaptureNextKey->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCaptureNextKey, &CaptureNextKey_Parms, NULL );

	pFnCaptureNextKey->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.ReadSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            SettingId                      ( CPF_Parm )

struct FString UTrKeyBindings::ReadSetting ( int SettingId )
{
	static UFunction* pFnReadSetting = NULL;

	if ( ! pFnReadSetting )
		pFnReadSetting = (UFunction*) UObject::GObjObjects()->Data[ 97430 ];

	UTrKeyBindings_execReadSetting_Parms ReadSetting_Parms;
	ReadSetting_Parms.SettingId = SettingId;

	pFnReadSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnReadSetting, &ReadSetting_Parms, NULL );

	pFnReadSetting->FunctionFlags |= 0x400;

	return ReadSetting_Parms.ReturnValue;
};

// Function TribesGame.TrKeyBindings.StoreSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SettingId                      ( CPF_Parm )
// struct FString                 KeyBind                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::StoreSetting ( int SettingId, struct FString KeyBind )
{
	static UFunction* pFnStoreSetting = NULL;

	if ( ! pFnStoreSetting )
		pFnStoreSetting = (UFunction*) UObject::GObjObjects()->Data[ 97427 ];

	UTrKeyBindings_execStoreSetting_Parms StoreSetting_Parms;
	StoreSetting_Parms.SettingId = SettingId;
	memcpy ( &StoreSetting_Parms.KeyBind, &KeyBind, 0xC );

	pFnStoreSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnStoreSetting, &StoreSetting_Parms, NULL );

	pFnStoreSetting->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.ClearSettingByValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 StrValue                       ( CPF_Parm | CPF_NeedCtorLink )

void UTrKeyBindings::ClearSettingByValue ( struct FString StrValue )
{
	static UFunction* pFnClearSettingByValue = NULL;

	if ( ! pFnClearSettingByValue )
		pFnClearSettingByValue = (UFunction*) UObject::GObjObjects()->Data[ 97425 ];

	UTrKeyBindings_execClearSettingByValue_Parms ClearSettingByValue_Parms;
	memcpy ( &ClearSettingByValue_Parms.StrValue, &StrValue, 0xC );

	pFnClearSettingByValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSettingByValue, &ClearSettingByValue_Parms, NULL );

	pFnClearSettingByValue->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.ClearSettingById
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            SettingId                      ( CPF_Parm )

void UTrKeyBindings::ClearSettingById ( int SettingId )
{
	static UFunction* pFnClearSettingById = NULL;

	if ( ! pFnClearSettingById )
		pFnClearSettingById = (UFunction*) UObject::GObjObjects()->Data[ 97423 ];

	UTrKeyBindings_execClearSettingById_Parms ClearSettingById_Parms;
	ClearSettingById_Parms.SettingId = SettingId;

	pFnClearSettingById->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnClearSettingById, &ClearSettingById_Parms, NULL );

	pFnClearSettingById->FunctionFlags |= 0x400;
};

// Function TribesGame.TrKeyBindings.FlushSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrKeyBindings::FlushSettings ( )
{
	static UFunction* pFnFlushSettings = NULL;

	if ( ! pFnFlushSettings )
		pFnFlushSettings = (UFunction*) UObject::GObjObjects()->Data[ 97422 ];

	UTrKeyBindings_execFlushSettings_Parms FlushSettings_Parms;

	pFnFlushSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlushSettings, &FlushSettings_Parms, NULL );

	pFnFlushSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrLaserTarget.RenderForTeammate
// [0x00840103] ( FUNC_Final )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )
// float                          Distance                       ( CPF_Parm )

void ATrLaserTarget::RenderForTeammate ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir, float Distance )
{
	static UFunction* pFnRenderForTeammate = NULL;

	if ( ! pFnRenderForTeammate )
		pFnRenderForTeammate = (UFunction*) UObject::GObjObjects()->Data[ 97585 ];

	ATrLaserTarget_execRenderForTeammate_Parms RenderForTeammate_Parms;
	RenderForTeammate_Parms.PC = PC;
	RenderForTeammate_Parms.Canvas = Canvas;
	memcpy ( &RenderForTeammate_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &RenderForTeammate_Parms.CameraDir, &CameraDir, 0xC );
	RenderForTeammate_Parms.Distance = Distance;

	this->ProcessEvent ( pFnRenderForTeammate, &RenderForTeammate_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.RenderForOwner
// [0x00040103] ( FUNC_Final )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )
// float                          Distance                       ( CPF_Parm )

void ATrLaserTarget::RenderForOwner ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir, float Distance )
{
	static UFunction* pFnRenderForOwner = NULL;

	if ( ! pFnRenderForOwner )
		pFnRenderForOwner = (UFunction*) UObject::GObjObjects()->Data[ 97574 ];

	ATrLaserTarget_execRenderForOwner_Parms RenderForOwner_Parms;
	RenderForOwner_Parms.PC = PC;
	RenderForOwner_Parms.Canvas = Canvas;
	memcpy ( &RenderForOwner_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &RenderForOwner_Parms.CameraDir, &CameraDir, 0xC );
	RenderForOwner_Parms.Distance = Distance;

	this->ProcessEvent ( pFnRenderForOwner, &RenderForOwner_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.PostRenderFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrLaserTarget::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 97568 ];

	ATrLaserTarget_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrLaserTarget::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 97566 ];

	ATrLaserTarget_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrLaserTarget::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 97564 ];

	ATrLaserTarget_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.UpdateLocation
// [0x00020102] 
// Parameters infos:
// struct FVector                 NewLocation                    ( CPF_Parm )

void ATrLaserTarget::UpdateLocation ( struct FVector NewLocation )
{
	static UFunction* pFnUpdateLocation = NULL;

	if ( ! pFnUpdateLocation )
		pFnUpdateLocation = (UFunction*) UObject::GObjObjects()->Data[ 97562 ];

	ATrLaserTarget_execUpdateLocation_Parms UpdateLocation_Parms;
	memcpy ( &UpdateLocation_Parms.NewLocation, &NewLocation, 0xC );

	this->ProcessEvent ( pFnUpdateLocation, &UpdateLocation_Parms, NULL );
};

// Function TribesGame.TrLaserTarget.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrLaserTarget::GetTeamNum ( )
{
	static UFunction* pFnGetTeamNum = NULL;

	if ( ! pFnGetTeamNum )
		pFnGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 97560 ];

	ATrLaserTarget_execGetTeamNum_Parms GetTeamNum_Parms;

	pFnGetTeamNum->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTeamNum, &GetTeamNum_Parms, NULL );

	pFnGetTeamNum->FunctionFlags |= 0x400;

	return GetTeamNum_Parms.ReturnValue;
};

// Function TribesGame.TrLaserTarget.SetTeamNum
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamID                         ( CPF_Parm )

void ATrLaserTarget::SetTeamNum ( unsigned char TeamID )
{
	static UFunction* pFnSetTeamNum = NULL;

	if ( ! pFnSetTeamNum )
		pFnSetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 97558 ];

	ATrLaserTarget_execSetTeamNum_Parms SetTeamNum_Parms;
	SetTeamNum_Parms.TeamID = TeamID;

	this->ProcessEvent ( pFnSetTeamNum, &SetTeamNum_Parms, NULL );
};

// Function TribesGame.TrLoadingData.SetDataFields
// [0x00020002] 
// Parameters infos:

void UTrLoadingData::SetDataFields ( )
{
	static UFunction* pFnSetDataFields = NULL;

	if ( ! pFnSetDataFields )
		pFnSetDataFields = (UFunction*) UObject::GObjObjects()->Data[ 97662 ];

	UTrLoadingData_execSetDataFields_Parms SetDataFields_Parms;

	this->ProcessEvent ( pFnSetDataFields, &SetDataFields_Parms, NULL );
};

// Function TribesGame.TrLoadingData.Initialize
// [0x00020000] 
// Parameters infos:

void UTrLoadingData::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 97661 ];

	UTrLoadingData_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrLoadingData.GetRandomTip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            GameIndex                      ( CPF_Parm )

struct FString UTrLoadingData::GetRandomTip ( int GameIndex )
{
	static UFunction* pFnGetRandomTip = NULL;

	if ( ! pFnGetRandomTip )
		pFnGetRandomTip = (UFunction*) UObject::GObjObjects()->Data[ 97658 ];

	UTrLoadingData_execGetRandomTip_Parms GetRandomTip_Parms;
	GetRandomTip_Parms.GameIndex = GameIndex;

	pFnGetRandomTip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetRandomTip, &GetRandomTip_Parms, NULL );

	pFnGetRandomTip->FunctionFlags |= 0x400;

	return GetRandomTip_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.AddFriendScoreboard
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrFriendManager::AddFriendScoreboard ( struct FString PlayerName )
{
	static UFunction* pFnAddFriendScoreboard = NULL;

	if ( ! pFnAddFriendScoreboard )
		pFnAddFriendScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 57416 ];

	UTrFriendManager_execAddFriendScoreboard_Parms AddFriendScoreboard_Parms;
	memcpy ( &AddFriendScoreboard_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnAddFriendScoreboard, &AddFriendScoreboard_Parms, NULL );
};

// Function TribesGame.TrFriendManager.GetFriendListIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

int UTrFriendManager::GetFriendListIndex ( struct FString PlayerName )
{
	static UFunction* pFnGetFriendListIndex = NULL;

	if ( ! pFnGetFriendListIndex )
		pFnGetFriendListIndex = (UFunction*) UObject::GObjObjects()->Data[ 57412 ];

	UTrFriendManager_execGetFriendListIndex_Parms GetFriendListIndex_Parms;
	memcpy ( &GetFriendListIndex_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnGetFriendListIndex, &GetFriendListIndex_Parms, NULL );

	return GetFriendListIndex_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.IsFriend
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UTrFriendManager::IsFriend ( struct FString PlayerName )
{
	static UFunction* pFnIsFriend = NULL;

	if ( ! pFnIsFriend )
		pFnIsFriend = (UFunction*) UObject::GObjObjects()->Data[ 57408 ];

	UTrFriendManager_execIsFriend_Parms IsFriend_Parms;
	memcpy ( &IsFriend_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnIsFriend, &IsFriend_Parms, NULL );

	return IsFriend_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.GetOnlineFollowerCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrFriendManager::GetOnlineFollowerCount ( )
{
	static UFunction* pFnGetOnlineFollowerCount = NULL;

	if ( ! pFnGetOnlineFollowerCount )
		pFnGetOnlineFollowerCount = (UFunction*) UObject::GObjObjects()->Data[ 57404 ];

	UTrFriendManager_execGetOnlineFollowerCount_Parms GetOnlineFollowerCount_Parms;

	this->ProcessEvent ( pFnGetOnlineFollowerCount, &GetOnlineFollowerCount_Parms, NULL );

	return GetOnlineFollowerCount_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.GetInGameFriendCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrFriendManager::GetInGameFriendCount ( )
{
	static UFunction* pFnGetInGameFriendCount = NULL;

	if ( ! pFnGetInGameFriendCount )
		pFnGetInGameFriendCount = (UFunction*) UObject::GObjObjects()->Data[ 57400 ];

	UTrFriendManager_execGetInGameFriendCount_Parms GetInGameFriendCount_Parms;

	this->ProcessEvent ( pFnGetInGameFriendCount, &GetInGameFriendCount_Parms, NULL );

	return GetInGameFriendCount_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.GetOnlineFriendCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrFriendManager::GetOnlineFriendCount ( )
{
	static UFunction* pFnGetOnlineFriendCount = NULL;

	if ( ! pFnGetOnlineFriendCount )
		pFnGetOnlineFriendCount = (UFunction*) UObject::GObjObjects()->Data[ 57395 ];

	UTrFriendManager_execGetOnlineFriendCount_Parms GetOnlineFriendCount_Parms;

	this->ProcessEvent ( pFnGetOnlineFriendCount, &GetOnlineFriendCount_Parms, NULL );

	return GetOnlineFriendCount_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.RemoveFromList
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrFriendManager::RemoveFromList ( struct FString PlayerName )
{
	static UFunction* pFnRemoveFromList = NULL;

	if ( ! pFnRemoveFromList )
		pFnRemoveFromList = (UFunction*) UObject::GObjObjects()->Data[ 57391 ];

	UTrFriendManager_execRemoveFromList_Parms RemoveFromList_Parms;
	memcpy ( &RemoveFromList_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnRemoveFromList, &RemoveFromList_Parms, NULL );
};

// Function TribesGame.TrFriendManager.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrFriendManager::eventUpdate ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57386 ];

	UTrFriendManager_eventUpdate_Parms Update_Parms;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function TribesGame.TrFriendManager.RemoveFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrFriendManager::RemoveFriend ( struct FString PlayerName )
{
	static UFunction* pFnRemoveFriend = NULL;

	if ( ! pFnRemoveFriend )
		pFnRemoveFriend = (UFunction*) UObject::GObjObjects()->Data[ 57384 ];

	UTrFriendManager_execRemoveFriend_Parms RemoveFriend_Parms;
	memcpy ( &RemoveFriend_Parms.PlayerName, &PlayerName, 0xC );

	pFnRemoveFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRemoveFriend, &RemoveFriend_Parms, NULL );

	pFnRemoveFriend->FunctionFlags |= 0x400;
};

// Function TribesGame.TrFriendManager.IgnoreFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIgnore                        ( CPF_Parm )

void UTrFriendManager::IgnoreFriend ( struct FString PlayerName, unsigned long bIgnore )
{
	static UFunction* pFnIgnoreFriend = NULL;

	if ( ! pFnIgnoreFriend )
		pFnIgnoreFriend = (UFunction*) UObject::GObjObjects()->Data[ 57381 ];

	UTrFriendManager_execIgnoreFriend_Parms IgnoreFriend_Parms;
	memcpy ( &IgnoreFriend_Parms.PlayerName, &PlayerName, 0xC );
	IgnoreFriend_Parms.bIgnore = bIgnore;

	pFnIgnoreFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIgnoreFriend, &IgnoreFriend_Parms, NULL );

	pFnIgnoreFriend->FunctionFlags |= 0x400;
};

// Function TribesGame.TrFriendManager.JoinFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

bool UTrFriendManager::JoinFriend ( struct FString PlayerName, struct FString Password )
{
	static UFunction* pFnJoinFriend = NULL;

	if ( ! pFnJoinFriend )
		pFnJoinFriend = (UFunction*) UObject::GObjObjects()->Data[ 57377 ];

	UTrFriendManager_execJoinFriend_Parms JoinFriend_Parms;
	memcpy ( &JoinFriend_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &JoinFriend_Parms.Password, &Password, 0xC );

	pFnJoinFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnJoinFriend, &JoinFriend_Parms, NULL );

	pFnJoinFriend->FunctionFlags |= 0x400;

	return JoinFriend_Parms.ReturnValue;
};

// Function TribesGame.TrFriendManager.AddFriend
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrFriendManager::AddFriend ( struct FString PlayerName )
{
	static UFunction* pFnAddFriend = NULL;

	if ( ! pFnAddFriend )
		pFnAddFriend = (UFunction*) UObject::GObjObjects()->Data[ 57375 ];

	UTrFriendManager_execAddFriend_Parms AddFriend_Parms;
	memcpy ( &AddFriend_Parms.PlayerName, &PlayerName, 0xC );

	pFnAddFriend->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFriend, &AddFriend_Parms, NULL );

	pFnAddFriend->FunctionFlags |= 0x400;
};

// Function TribesGame.TrFriendManager.RequestFriendsList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrFriendManager::RequestFriendsList ( )
{
	static UFunction* pFnRequestFriendsList = NULL;

	if ( ! pFnRequestFriendsList )
		pFnRequestFriendsList = (UFunction*) UObject::GObjObjects()->Data[ 57374 ];

	UTrFriendManager_execRequestFriendsList_Parms RequestFriendsList_Parms;

	pFnRequestFriendsList->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestFriendsList, &RequestFriendsList_Parms, NULL );

	pFnRequestFriendsList->FunctionFlags |= 0x400;
};

// Function TribesGame.TrOrientedBoxComponent.SetBoxSize
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          NewHeight                      ( CPF_Parm )
// float                          NewLength                      ( CPF_Parm )
// float                          NewWidth                       ( CPF_Parm )
// unsigned long                  IsRadii                        ( CPF_OptionalParm | CPF_Parm )

void UTrOrientedBoxComponent::SetBoxSize ( float NewHeight, float NewLength, float NewWidth, unsigned long IsRadii )
{
	static UFunction* pFnSetBoxSize = NULL;

	if ( ! pFnSetBoxSize )
		pFnSetBoxSize = (UFunction*) UObject::GObjObjects()->Data[ 99207 ];

	UTrOrientedBoxComponent_execSetBoxSize_Parms SetBoxSize_Parms;
	SetBoxSize_Parms.NewHeight = NewHeight;
	SetBoxSize_Parms.NewLength = NewLength;
	SetBoxSize_Parms.NewWidth = NewWidth;
	SetBoxSize_Parms.IsRadii = IsRadii;

	pFnSetBoxSize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetBoxSize, &SetBoxSize_Parms, NULL );

	pFnSetBoxSize->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPaperDoll.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPaperDoll::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 99527 ];

	ATrPaperDoll_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.SetMainMesh
// [0x00020002] 
// Parameters infos:
// struct FPaperDollInfo          NewInfo                        ( CPF_Parm )

void ATrPaperDoll::SetMainMesh ( struct FPaperDollInfo NewInfo )
{
	static UFunction* pFnSetMainMesh = NULL;

	if ( ! pFnSetMainMesh )
		pFnSetMainMesh = (UFunction*) UObject::GObjObjects()->Data[ 99522 ];

	ATrPaperDoll_execSetMainMesh_Parms SetMainMesh_Parms;
	memcpy ( &SetMainMesh_Parms.NewInfo, &NewInfo, 0x38 );

	this->ProcessEvent ( pFnSetMainMesh, &SetMainMesh_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.GetDevicePaperDollInfo
// [0x00020002] 
// Parameters infos:
// struct FPaperDollInfo          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  WeaponClass                    ( CPF_Parm )

struct FPaperDollInfo ATrPaperDoll::GetDevicePaperDollInfo ( class UClass* WeaponClass )
{
	static UFunction* pFnGetDevicePaperDollInfo = NULL;

	if ( ! pFnGetDevicePaperDollInfo )
		pFnGetDevicePaperDollInfo = (UFunction*) UObject::GObjObjects()->Data[ 99519 ];

	ATrPaperDoll_execGetDevicePaperDollInfo_Parms GetDevicePaperDollInfo_Parms;
	GetDevicePaperDollInfo_Parms.WeaponClass = WeaponClass;

	this->ProcessEvent ( pFnGetDevicePaperDollInfo, &GetDevicePaperDollInfo_Parms, NULL );

	return GetDevicePaperDollInfo_Parms.ReturnValue;
};

// Function TribesGame.TrPaperDoll.SetWeaponOnlyMesh
// [0x00020002] 
// Parameters infos:
// class UClass*                  WeaponClass                    ( CPF_Parm )

void ATrPaperDoll::SetWeaponOnlyMesh ( class UClass* WeaponClass )
{
	static UFunction* pFnSetWeaponOnlyMesh = NULL;

	if ( ! pFnSetWeaponOnlyMesh )
		pFnSetWeaponOnlyMesh = (UFunction*) UObject::GObjObjects()->Data[ 99517 ];

	ATrPaperDoll_execSetWeaponOnlyMesh_Parms SetWeaponOnlyMesh_Parms;
	SetWeaponOnlyMesh_Parms.WeaponClass = WeaponClass;

	this->ProcessEvent ( pFnSetWeaponOnlyMesh, &SetWeaponOnlyMesh_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.OnWeaponFinishedStreaming
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FPaperDollInfo          NewPaperDollInfo               ( CPF_Parm )

void ATrPaperDoll::eventOnWeaponFinishedStreaming ( struct FPaperDollInfo NewPaperDollInfo )
{
	static UFunction* pFnOnWeaponFinishedStreaming = NULL;

	if ( ! pFnOnWeaponFinishedStreaming )
		pFnOnWeaponFinishedStreaming = (UFunction*) UObject::GObjObjects()->Data[ 99515 ];

	ATrPaperDoll_eventOnWeaponFinishedStreaming_Parms OnWeaponFinishedStreaming_Parms;
	memcpy ( &OnWeaponFinishedStreaming_Parms.NewPaperDollInfo, &NewPaperDollInfo, 0x38 );

	this->ProcessEvent ( pFnOnWeaponFinishedStreaming, &OnWeaponFinishedStreaming_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.StopLoadingGraphic
// [0x00020002] 
// Parameters infos:

void ATrPaperDoll::StopLoadingGraphic ( )
{
	static UFunction* pFnStopLoadingGraphic = NULL;

	if ( ! pFnStopLoadingGraphic )
		pFnStopLoadingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 99514 ];

	ATrPaperDoll_execStopLoadingGraphic_Parms StopLoadingGraphic_Parms;

	this->ProcessEvent ( pFnStopLoadingGraphic, &StopLoadingGraphic_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.PlayLoadingGraphic
// [0x00020002] 
// Parameters infos:

void ATrPaperDoll::PlayLoadingGraphic ( )
{
	static UFunction* pFnPlayLoadingGraphic = NULL;

	if ( ! pFnPlayLoadingGraphic )
		pFnPlayLoadingGraphic = (UFunction*) UObject::GObjObjects()->Data[ 99513 ];

	ATrPaperDoll_execPlayLoadingGraphic_Parms PlayLoadingGraphic_Parms;

	this->ProcessEvent ( pFnPlayLoadingGraphic, &PlayLoadingGraphic_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.OnDeviceContentDataClassLoaded
// [0x00820002] 
// Parameters infos:
// class UClass*                  DeviceContentDataClass         ( CPF_Parm )

void ATrPaperDoll::OnDeviceContentDataClassLoaded ( class UClass* DeviceContentDataClass )
{
	static UFunction* pFnOnDeviceContentDataClassLoaded = NULL;

	if ( ! pFnOnDeviceContentDataClassLoaded )
		pFnOnDeviceContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 99507 ];

	ATrPaperDoll_execOnDeviceContentDataClassLoaded_Parms OnDeviceContentDataClassLoaded_Parms;
	OnDeviceContentDataClassLoaded_Parms.DeviceContentDataClass = DeviceContentDataClass;

	this->ProcessEvent ( pFnOnDeviceContentDataClassLoaded, &OnDeviceContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.OnAnimEnd
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrPaperDoll::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 99503 ];

	ATrPaperDoll_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.ResetCustomAnimTimer
// [0x00020002] 
// Parameters infos:

void ATrPaperDoll::ResetCustomAnimTimer ( )
{
	static UFunction* pFnResetCustomAnimTimer = NULL;

	if ( ! pFnResetCustomAnimTimer )
		pFnResetCustomAnimTimer = (UFunction*) UObject::GObjObjects()->Data[ 99502 ];

	ATrPaperDoll_execResetCustomAnimTimer_Parms ResetCustomAnimTimer_Parms;

	this->ProcessEvent ( pFnResetCustomAnimTimer, &ResetCustomAnimTimer_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.StopCustomAnimation
// [0x00020002] 
// Parameters infos:
// float                          FadeOutTime                    ( CPF_Parm )

void ATrPaperDoll::StopCustomAnimation ( float FadeOutTime )
{
	static UFunction* pFnStopCustomAnimation = NULL;

	if ( ! pFnStopCustomAnimation )
		pFnStopCustomAnimation = (UFunction*) UObject::GObjObjects()->Data[ 99500 ];

	ATrPaperDoll_execStopCustomAnimation_Parms StopCustomAnimation_Parms;
	StopCustomAnimation_Parms.FadeOutTime = FadeOutTime;

	this->ProcessEvent ( pFnStopCustomAnimation, &StopCustomAnimation_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.PlayCustomAnimation
// [0x00020002] 
// Parameters infos:

void ATrPaperDoll::PlayCustomAnimation ( )
{
	static UFunction* pFnPlayCustomAnimation = NULL;

	if ( ! pFnPlayCustomAnimation )
		pFnPlayCustomAnimation = (UFunction*) UObject::GObjObjects()->Data[ 99499 ];

	ATrPaperDoll_execPlayCustomAnimation_Parms PlayCustomAnimation_Parms;

	this->ProcessEvent ( pFnPlayCustomAnimation, &PlayCustomAnimation_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.SetFamilyInfo
// [0x00020002] 
// Parameters infos:
// class UClass*                  NewFamilyInfoClass             ( CPF_Parm )
// class UClass*                  DeviceClass                    ( CPF_Parm )
// class UClass*                  skinClass                      ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void ATrPaperDoll::SetFamilyInfo ( class UClass* NewFamilyInfoClass, class UClass* DeviceClass, class UClass* skinClass, int TeamNum )
{
	static UFunction* pFnSetFamilyInfo = NULL;

	if ( ! pFnSetFamilyInfo )
		pFnSetFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 99493 ];

	ATrPaperDoll_execSetFamilyInfo_Parms SetFamilyInfo_Parms;
	SetFamilyInfo_Parms.NewFamilyInfoClass = NewFamilyInfoClass;
	SetFamilyInfo_Parms.DeviceClass = DeviceClass;
	SetFamilyInfo_Parms.skinClass = skinClass;
	SetFamilyInfo_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnSetFamilyInfo, &SetFamilyInfo_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.TryUpdatingPaperDoll
// [0x00020002] 
// Parameters infos:

void ATrPaperDoll::TryUpdatingPaperDoll ( )
{
	static UFunction* pFnTryUpdatingPaperDoll = NULL;

	if ( ! pFnTryUpdatingPaperDoll )
		pFnTryUpdatingPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 99490 ];

	ATrPaperDoll_execTryUpdatingPaperDoll_Parms TryUpdatingPaperDoll_Parms;

	this->ProcessEvent ( pFnTryUpdatingPaperDoll, &TryUpdatingPaperDoll_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.OnSkeletalMeshFinishedStreaming
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class USkeletalMesh*           NewSkelMesh                    ( CPF_Parm )

void ATrPaperDoll::eventOnSkeletalMeshFinishedStreaming ( class USkeletalMesh* NewSkelMesh )
{
	static UFunction* pFnOnSkeletalMeshFinishedStreaming = NULL;

	if ( ! pFnOnSkeletalMeshFinishedStreaming )
		pFnOnSkeletalMeshFinishedStreaming = (UFunction*) UObject::GObjObjects()->Data[ 99488 ];

	ATrPaperDoll_eventOnSkeletalMeshFinishedStreaming_Parms OnSkeletalMeshFinishedStreaming_Parms;
	OnSkeletalMeshFinishedStreaming_Parms.NewSkelMesh = NewSkelMesh;

	this->ProcessEvent ( pFnOnSkeletalMeshFinishedStreaming, &OnSkeletalMeshFinishedStreaming_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.OnCharacterMeshContentDataClassLoaded
// [0x00820002] 
// Parameters infos:
// class UClass*                  Skin3PDataClass                ( CPF_Parm )

void ATrPaperDoll::OnCharacterMeshContentDataClassLoaded ( class UClass* Skin3PDataClass )
{
	static UFunction* pFnOnCharacterMeshContentDataClassLoaded = NULL;

	if ( ! pFnOnCharacterMeshContentDataClassLoaded )
		pFnOnCharacterMeshContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 99484 ];

	ATrPaperDoll_execOnCharacterMeshContentDataClassLoaded_Parms OnCharacterMeshContentDataClassLoaded_Parms;
	OnCharacterMeshContentDataClassLoaded_Parms.Skin3PDataClass = Skin3PDataClass;

	this->ProcessEvent ( pFnOnCharacterMeshContentDataClassLoaded, &OnCharacterMeshContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.GetCharacterSkeletalMesh
// [0x00020002] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfoClass                ( CPF_Parm )
// unsigned char                  TeamNum                        ( CPF_Parm )

class USkeletalMesh* ATrPaperDoll::GetCharacterSkeletalMesh ( class UClass* FamilyInfoClass, unsigned char TeamNum )
{
	static UFunction* pFnGetCharacterSkeletalMesh = NULL;

	if ( ! pFnGetCharacterSkeletalMesh )
		pFnGetCharacterSkeletalMesh = (UFunction*) UObject::GObjObjects()->Data[ 99478 ];

	ATrPaperDoll_execGetCharacterSkeletalMesh_Parms GetCharacterSkeletalMesh_Parms;
	GetCharacterSkeletalMesh_Parms.FamilyInfoClass = FamilyInfoClass;
	GetCharacterSkeletalMesh_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnGetCharacterSkeletalMesh, &GetCharacterSkeletalMesh_Parms, NULL );

	return GetCharacterSkeletalMesh_Parms.ReturnValue;
};

// Function TribesGame.TrPaperDoll.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrPaperDoll::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 99475 ];

	ATrPaperDoll_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPaperDoll::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 99473 ];

	ATrPaperDoll_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPaperDoll.IsFullyStreamed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FPaperDollInfo          PaperDoll                      ( CPF_Parm )

bool ATrPaperDoll::IsFullyStreamed ( struct FPaperDollInfo PaperDoll )
{
	static UFunction* pFnIsFullyStreamed = NULL;

	if ( ! pFnIsFullyStreamed )
		pFnIsFullyStreamed = (UFunction*) UObject::GObjObjects()->Data[ 99470 ];

	ATrPaperDoll_execIsFullyStreamed_Parms IsFullyStreamed_Parms;
	memcpy ( &IsFullyStreamed_Parms.PaperDoll, &PaperDoll, 0x38 );

	pFnIsFullyStreamed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsFullyStreamed, &IsFullyStreamed_Parms, NULL );

	pFnIsFullyStreamed->FunctionFlags |= 0x400;

	return IsFullyStreamed_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.LeaveParty
// [0x00024002] 
// Parameters infos:
// unsigned long                  bHandle                        ( CPF_OptionalParm | CPF_Parm )

void UTrPartyManager::LeaveParty ( unsigned long bHandle )
{
	static UFunction* pFnLeaveParty = NULL;

	if ( ! pFnLeaveParty )
		pFnLeaveParty = (UFunction*) UObject::GObjObjects()->Data[ 99644 ];

	UTrPartyManager_execLeaveParty_Parms LeaveParty_Parms;
	LeaveParty_Parms.bHandle = bHandle;

	this->ProcessEvent ( pFnLeaveParty, &LeaveParty_Parms, NULL );
};

// Function TribesGame.TrPartyManager.OnUpdate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrPartyManager::eventOnUpdate ( )
{
	static UFunction* pFnOnUpdate = NULL;

	if ( ! pFnOnUpdate )
		pFnOnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 99643 ];

	UTrPartyManager_eventOnUpdate_Parms OnUpdate_Parms;

	this->ProcessEvent ( pFnOnUpdate, &OnUpdate_Parms, NULL );
};

// Function TribesGame.TrPartyManager.InvitationComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )

void UTrPartyManager::InvitationComplete ( int Action )
{
	static UFunction* pFnInvitationComplete = NULL;

	if ( ! pFnInvitationComplete )
		pFnInvitationComplete = (UFunction*) UObject::GObjObjects()->Data[ 99641 ];

	UTrPartyManager_execInvitationComplete_Parms InvitationComplete_Parms;
	InvitationComplete_Parms.Action = Action;

	this->ProcessEvent ( pFnInvitationComplete, &InvitationComplete_Parms, NULL );
};

// Function TribesGame.TrPartyManager.InvitationPopup
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UTrPartyManager::InvitationPopup ( class UGFxObject* Obj )
{
	static UFunction* pFnInvitationPopup = NULL;

	if ( ! pFnInvitationPopup )
		pFnInvitationPopup = (UFunction*) UObject::GObjObjects()->Data[ 99636 ];

	UTrPartyManager_execInvitationPopup_Parms InvitationPopup_Parms;
	InvitationPopup_Parms.Obj = Obj;

	this->ProcessEvent ( pFnInvitationPopup, &InvitationPopup_Parms, NULL );
};

// Function TribesGame.TrPartyManager.ShowInvitation
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FString                 LeaderName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrPartyManager::eventShowInvitation ( struct FString LeaderName )
{
	static UFunction* pFnShowInvitation = NULL;

	if ( ! pFnShowInvitation )
		pFnShowInvitation = (UFunction*) UObject::GObjObjects()->Data[ 99634 ];

	UTrPartyManager_eventShowInvitation_Parms ShowInvitation_Parms;
	memcpy ( &ShowInvitation_Parms.LeaderName, &LeaderName, 0xC );

	this->ProcessEvent ( pFnShowInvitation, &ShowInvitation_Parms, NULL );
};

// Function TribesGame.TrPartyManager.Initialize
// [0x00020000] 
// Parameters infos:

void UTrPartyManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 99633 ];

	UTrPartyManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrPartyManager.GetMemberName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UTrPartyManager::GetMemberName ( int Index )
{
	static UFunction* pFnGetMemberName = NULL;

	if ( ! pFnGetMemberName )
		pFnGetMemberName = (UFunction*) UObject::GObjObjects()->Data[ 59579 ];

	UTrPartyManager_execGetMemberName_Parms GetMemberName_Parms;
	GetMemberName_Parms.Index = Index;

	pFnGetMemberName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberName, &GetMemberName_Parms, NULL );

	pFnGetMemberName->FunctionFlags |= 0x400;

	return GetMemberName_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.GetLeaderName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrPartyManager::GetLeaderName ( )
{
	static UFunction* pFnGetLeaderName = NULL;

	if ( ! pFnGetLeaderName )
		pFnGetLeaderName = (UFunction*) UObject::GObjObjects()->Data[ 99630 ];

	UTrPartyManager_execGetLeaderName_Parms GetLeaderName_Parms;

	pFnGetLeaderName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetLeaderName, &GetLeaderName_Parms, NULL );

	pFnGetLeaderName->FunctionFlags |= 0x400;

	return GetLeaderName_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.AcceptInvite
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPartyManager::AcceptInvite ( )
{
	static UFunction* pFnAcceptInvite = NULL;

	if ( ! pFnAcceptInvite )
		pFnAcceptInvite = (UFunction*) UObject::GObjObjects()->Data[ 99628 ];

	UTrPartyManager_execAcceptInvite_Parms AcceptInvite_Parms;

	pFnAcceptInvite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAcceptInvite, &AcceptInvite_Parms, NULL );

	pFnAcceptInvite->FunctionFlags |= 0x400;

	return AcceptInvite_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.ActiveMember
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UTrPartyManager::ActiveMember ( int Index )
{
	static UFunction* pFnActiveMember = NULL;

	if ( ! pFnActiveMember )
		pFnActiveMember = (UFunction*) UObject::GObjObjects()->Data[ 59581 ];

	UTrPartyManager_execActiveMember_Parms ActiveMember_Parms;
	ActiveMember_Parms.Index = Index;

	pFnActiveMember->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnActiveMember, &ActiveMember_Parms, NULL );

	pFnActiveMember->FunctionFlags |= 0x400;

	return ActiveMember_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.SendInvite
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UTrPartyManager::SendInvite ( struct FString PlayerName )
{
	static UFunction* pFnSendInvite = NULL;

	if ( ! pFnSendInvite )
		pFnSendInvite = (UFunction*) UObject::GObjObjects()->Data[ 59532 ];

	UTrPartyManager_execSendInvite_Parms SendInvite_Parms;
	memcpy ( &SendInvite_Parms.PlayerName, &PlayerName, 0xC );

	pFnSendInvite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendInvite, &SendInvite_Parms, NULL );

	pFnSendInvite->FunctionFlags |= 0x400;

	return SendInvite_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.Kick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UTrPartyManager::Kick ( struct FString PlayerName )
{
	static UFunction* pFnKick = NULL;

	if ( ! pFnKick )
		pFnKick = (UFunction*) UObject::GObjObjects()->Data[ 59507 ];

	UTrPartyManager_execKick_Parms Kick_Parms;
	memcpy ( &Kick_Parms.PlayerName, &PlayerName, 0xC );

	pFnKick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnKick, &Kick_Parms, NULL );

	pFnKick->FunctionFlags |= 0x400;

	return Kick_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.Leave
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPartyManager::Leave ( )
{
	static UFunction* pFnLeave = NULL;

	if ( ! pFnLeave )
		pFnLeave = (UFunction*) UObject::GObjObjects()->Data[ 99623 ];

	UTrPartyManager_execLeave_Parms Leave_Parms;

	pFnLeave->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLeave, &Leave_Parms, NULL );

	pFnLeave->FunctionFlags |= 0x400;

	return Leave_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.CanInvite
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPartyManager::CanInvite ( )
{
	static UFunction* pFnCanInvite = NULL;

	if ( ! pFnCanInvite )
		pFnCanInvite = (UFunction*) UObject::GObjObjects()->Data[ 59467 ];

	UTrPartyManager_execCanInvite_Parms CanInvite_Parms;

	pFnCanInvite->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCanInvite, &CanInvite_Parms, NULL );

	pFnCanInvite->FunctionFlags |= 0x400;

	return CanInvite_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.AmLeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPartyManager::AmLeader ( )
{
	static UFunction* pFnAmLeader = NULL;

	if ( ! pFnAmLeader )
		pFnAmLeader = (UFunction*) UObject::GObjObjects()->Data[ 54334 ];

	UTrPartyManager_execAmLeader_Parms AmLeader_Parms;

	pFnAmLeader->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAmLeader, &AmLeader_Parms, NULL );

	pFnAmLeader->FunctionFlags |= 0x400;

	return AmLeader_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.InParty
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPartyManager::InParty ( )
{
	static UFunction* pFnInParty = NULL;

	if ( ! pFnInParty )
		pFnInParty = (UFunction*) UObject::GObjObjects()->Data[ 54332 ];

	UTrPartyManager_execInParty_Parms InParty_Parms;

	pFnInParty->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInParty, &InParty_Parms, NULL );

	pFnInParty->FunctionFlags |= 0x400;

	return InParty_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.GetMemberCap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrPartyManager::GetMemberCap ( )
{
	static UFunction* pFnGetMemberCap = NULL;

	if ( ! pFnGetMemberCap )
		pFnGetMemberCap = (UFunction*) UObject::GObjObjects()->Data[ 59469 ];

	UTrPartyManager_execGetMemberCap_Parms GetMemberCap_Parms;

	pFnGetMemberCap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberCap, &GetMemberCap_Parms, NULL );

	pFnGetMemberCap->FunctionFlags |= 0x400;

	return GetMemberCap_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.GetMemberCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrPartyManager::GetMemberCount ( )
{
	static UFunction* pFnGetMemberCount = NULL;

	if ( ! pFnGetMemberCount )
		pFnGetMemberCount = (UFunction*) UObject::GObjObjects()->Data[ 59471 ];

	UTrPartyManager_execGetMemberCount_Parms GetMemberCount_Parms;

	pFnGetMemberCount->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberCount, &GetMemberCount_Parms, NULL );

	pFnGetMemberCount->FunctionFlags |= 0x400;

	return GetMemberCount_Parms.ReturnValue;
};

// Function TribesGame.TrPartyManager.GetMemberId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int UTrPartyManager::GetMemberId ( int Index )
{
	static UFunction* pFnGetMemberId = NULL;

	if ( ! pFnGetMemberId )
		pFnGetMemberId = (UFunction*) UObject::GObjObjects()->Data[ 59562 ];

	UTrPartyManager_execGetMemberId_Parms GetMemberId_Parms;
	GetMemberId_Parms.Index = Index;

	pFnGetMemberId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMemberId, &GetMemberId_Parms, NULL );

	pFnGetMemberId->FunctionFlags |= 0x400;

	return GetMemberId_Parms.ReturnValue;
};

// Function TribesGame.TrTurretPawn.IncrementFlashCount
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 W                              ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrTurretPawn::IncrementFlashCount ( class AWeapon* W, unsigned char FireModeNum )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 112402 ];

	ATrTurretPawn_execIncrementFlashCount_Parms IncrementFlashCount_Parms;
	IncrementFlashCount_Parms.W = W;
	IncrementFlashCount_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.PostRenderFor
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrTurretPawn::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 112397 ];

	ATrTurretPawn_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.SetCharacterClassFromInfo
// [0x00024100] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ATrTurretPawn::SetCharacterClassFromInfo ( class UClass* Info, unsigned long bForce )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 112394 ];

	ATrTurretPawn_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;
	SetCharacterClassFromInfo_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.RefreshInventory
// [0x00024100] 
// Parameters infos:
// unsigned long                  bIsRespawn                     ( CPF_Parm )
// unsigned long                  bCallin                        ( CPF_OptionalParm | CPF_Parm )

void ATrTurretPawn::RefreshInventory ( unsigned long bIsRespawn, unsigned long bCallin )
{
	static UFunction* pFnRefreshInventory = NULL;

	if ( ! pFnRefreshInventory )
		pFnRefreshInventory = (UFunction*) UObject::GObjObjects()->Data[ 112391 ];

	ATrTurretPawn_execRefreshInventory_Parms RefreshInventory_Parms;
	RefreshInventory_Parms.bIsRespawn = bIsRespawn;
	RefreshInventory_Parms.bCallin = bCallin;

	this->ProcessEvent ( pFnRefreshInventory, &RefreshInventory_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.RefreshPlayer
// [0x00020100] 
// Parameters infos:

void ATrTurretPawn::RefreshPlayer ( )
{
	static UFunction* pFnRefreshPlayer = NULL;

	if ( ! pFnRefreshPlayer )
		pFnRefreshPlayer = (UFunction*) UObject::GObjObjects()->Data[ 112390 ];

	ATrTurretPawn_execRefreshPlayer_Parms RefreshPlayer_Parms;

	this->ProcessEvent ( pFnRefreshPlayer, &RefreshPlayer_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.TakeRadiusDamage
// [0x00024100] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrTurretPawn::TakeRadiusDamage ( class AController* EventInstigator, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 112380 ];

	ATrTurretPawn_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.EventInstigator = EventInstigator;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.TakeDamage
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrTurretPawn::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 112372 ];

	ATrTurretPawn_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.Reset
// [0x00020002] 
// Parameters infos:

void ATrTurretPawn::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 112371 ];

	ATrTurretPawn_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.GetWeaponStartTraceLocation
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrTurretPawn::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 112368 ];

	ATrTurretPawn_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function TribesGame.TrTurretPawn.LeadingAimLocation
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Enemy                          ( CPF_Parm )

struct FVector ATrTurretPawn::LeadingAimLocation ( class AActor* Enemy )
{
	static UFunction* pFnLeadingAimLocation = NULL;

	if ( ! pFnLeadingAimLocation )
		pFnLeadingAimLocation = (UFunction*) UObject::GObjObjects()->Data[ 71606 ];

	ATrTurretPawn_execLeadingAimLocation_Parms LeadingAimLocation_Parms;
	LeadingAimLocation_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnLeadingAimLocation, &LeadingAimLocation_Parms, NULL );

	return LeadingAimLocation_Parms.ReturnValue;
};

// Function TribesGame.TrTurretPawn.GetAdjustedAimFor
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 projStart                      ( CPF_Parm )

struct FRotator ATrTurretPawn::GetAdjustedAimFor ( class AWeapon* InWeapon, struct FVector projStart )
{
	static UFunction* pFnGetAdjustedAimFor = NULL;

	if ( ! pFnGetAdjustedAimFor )
		pFnGetAdjustedAimFor = (UFunction*) UObject::GObjObjects()->Data[ 112363 ];

	ATrTurretPawn_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;
	GetAdjustedAimFor_Parms.InWeapon = InWeapon;
	memcpy ( &GetAdjustedAimFor_Parms.projStart, &projStart, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL );

	return GetAdjustedAimFor_Parms.ReturnValue;
};

// Function TribesGame.TrTurretPawn.GetAimVectorFor
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 projStart                      ( CPF_Parm )
// class AActor*                  Enemy                          ( CPF_Parm )

struct FVector ATrTurretPawn::GetAimVectorFor ( class AWeapon* InWeapon, struct FVector projStart, class AActor* Enemy )
{
	static UFunction* pFnGetAimVectorFor = NULL;

	if ( ! pFnGetAimVectorFor )
		pFnGetAimVectorFor = (UFunction*) UObject::GObjObjects()->Data[ 112350 ];

	ATrTurretPawn_execGetAimVectorFor_Parms GetAimVectorFor_Parms;
	GetAimVectorFor_Parms.InWeapon = InWeapon;
	memcpy ( &GetAimVectorFor_Parms.projStart, &projStart, 0xC );
	GetAimVectorFor_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnGetAimVectorFor, &GetAimVectorFor_Parms, NULL );

	return GetAimVectorFor_Parms.ReturnValue;
};

// Function TribesGame.TrTurretPawn.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrTurretPawn::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 112346 ];

	ATrTurretPawn_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrTurretPawn::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 112345 ];

	ATrTurretPawn_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrTurretPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 112344 ];

	ATrTurretPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrTurretPawn.GetValidAimTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 PawnLocation                   ( CPF_Parm )
// struct FVector                 PawnTargetLocation             ( CPF_Parm )

struct FVector ATrTurretPawn::GetValidAimTarget ( struct FVector PawnLocation, struct FVector PawnTargetLocation )
{
	static UFunction* pFnGetValidAimTarget = NULL;

	if ( ! pFnGetValidAimTarget )
		pFnGetValidAimTarget = (UFunction*) UObject::GObjObjects()->Data[ 112340 ];

	ATrTurretPawn_execGetValidAimTarget_Parms GetValidAimTarget_Parms;
	memcpy ( &GetValidAimTarget_Parms.PawnLocation, &PawnLocation, 0xC );
	memcpy ( &GetValidAimTarget_Parms.PawnTargetLocation, &PawnTargetLocation, 0xC );

	pFnGetValidAimTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetValidAimTarget, &GetValidAimTarget_Parms, NULL );

	pFnGetValidAimTarget->FunctionFlags |= 0x400;

	return GetValidAimTarget_Parms.ReturnValue;
};

// Function TribesGame.TrEntryPlayerController.ShowPeachTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::ShowPeachTimer ( )
{
	static UFunction* pFnShowPeachTimer = NULL;

	if ( ! pFnShowPeachTimer )
		pFnShowPeachTimer = (UFunction*) UObject::GObjObjects()->Data[ 86498 ];

	ATrEntryPlayerController_execShowPeachTimer_Parms ShowPeachTimer_Parms;

	this->ProcessEvent ( pFnShowPeachTimer, &ShowPeachTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.SwapModelTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::SwapModelTimer ( )
{
	static UFunction* pFnSwapModelTimer = NULL;

	if ( ! pFnSwapModelTimer )
		pFnSwapModelTimer = (UFunction*) UObject::GObjObjects()->Data[ 86497 ];

	ATrEntryPlayerController_execSwapModelTimer_Parms SwapModelTimer_Parms;

	this->ProcessEvent ( pFnSwapModelTimer, &SwapModelTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.RefreshFriendsTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::RefreshFriendsTimer ( )
{
	static UFunction* pFnRefreshFriendsTimer = NULL;

	if ( ! pFnRefreshFriendsTimer )
		pFnRefreshFriendsTimer = (UFunction*) UObject::GObjObjects()->Data[ 86496 ];

	ATrEntryPlayerController_execRefreshFriendsTimer_Parms RefreshFriendsTimer_Parms;

	this->ProcessEvent ( pFnRefreshFriendsTimer, &RefreshFriendsTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.On3PSkinContentLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  Skin3PDataClass                ( CPF_Parm )

void ATrEntryPlayerController::eventOn3PSkinContentLoaded ( class UClass* Skin3PDataClass )
{
	static UFunction* pFnOn3PSkinContentLoaded = NULL;

	if ( ! pFnOn3PSkinContentLoaded )
		pFnOn3PSkinContentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 86494 ];

	ATrEntryPlayerController_eventOn3PSkinContentLoaded_Parms On3PSkinContentLoaded_Parms;
	On3PSkinContentLoaded_Parms.Skin3PDataClass = Skin3PDataClass;

	this->ProcessEvent ( pFnOn3PSkinContentLoaded, &On3PSkinContentLoaded_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnClassSelectedMainMenu
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::OnClassSelectedMainMenu ( )
{
	static UFunction* pFnOnClassSelectedMainMenu = NULL;

	if ( ! pFnOnClassSelectedMainMenu )
		pFnOnClassSelectedMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 86493 ];

	ATrEntryPlayerController_execOnClassSelectedMainMenu_Parms OnClassSelectedMainMenu_Parms;

	this->ProcessEvent ( pFnOnClassSelectedMainMenu, &OnClassSelectedMainMenu_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnDeviceContentDataClassLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  DeviceContentDataClass         ( CPF_Parm )

void ATrEntryPlayerController::eventOnDeviceContentDataClassLoaded ( class UClass* DeviceContentDataClass )
{
	static UFunction* pFnOnDeviceContentDataClassLoaded = NULL;

	if ( ! pFnOnDeviceContentDataClassLoaded )
		pFnOnDeviceContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 86491 ];

	ATrEntryPlayerController_eventOnDeviceContentDataClassLoaded_Parms OnDeviceContentDataClassLoaded_Parms;
	OnDeviceContentDataClassLoaded_Parms.DeviceContentDataClass = DeviceContentDataClass;

	this->ProcessEvent ( pFnOnDeviceContentDataClassLoaded, &OnDeviceContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.UpdatePaperDoll
// [0x00024002] 
// Parameters infos:
// class UClass*                  FamilyInfoClass                ( CPF_Parm )
// class UClass*                  DeviceClass                    ( CPF_Parm )
// class UClass*                  skinClass                      ( CPF_OptionalParm | CPF_Parm )
// int                            TeamNum                        ( CPF_OptionalParm | CPF_Parm )

void ATrEntryPlayerController::UpdatePaperDoll ( class UClass* FamilyInfoClass, class UClass* DeviceClass, class UClass* skinClass, int TeamNum )
{
	static UFunction* pFnUpdatePaperDoll = NULL;

	if ( ! pFnUpdatePaperDoll )
		pFnUpdatePaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 86486 ];

	ATrEntryPlayerController_execUpdatePaperDoll_Parms UpdatePaperDoll_Parms;
	UpdatePaperDoll_Parms.FamilyInfoClass = FamilyInfoClass;
	UpdatePaperDoll_Parms.DeviceClass = DeviceClass;
	UpdatePaperDoll_Parms.skinClass = skinClass;
	UpdatePaperDoll_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnUpdatePaperDoll, &UpdatePaperDoll_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.UpdateMainMenuPaperDoll_Mesh
// [0x00020002] 
// Parameters infos:
// unsigned char                  Type                           ( CPF_Parm )

void ATrEntryPlayerController::UpdateMainMenuPaperDoll_Mesh ( unsigned char Type )
{
	static UFunction* pFnUpdateMainMenuPaperDoll_Mesh = NULL;

	if ( ! pFnUpdateMainMenuPaperDoll_Mesh )
		pFnUpdateMainMenuPaperDoll_Mesh = (UFunction*) UObject::GObjObjects()->Data[ 86483 ];

	ATrEntryPlayerController_execUpdateMainMenuPaperDoll_Mesh_Parms UpdateMainMenuPaperDoll_Mesh_Parms;
	UpdateMainMenuPaperDoll_Mesh_Parms.Type = Type;

	this->ProcessEvent ( pFnUpdateMainMenuPaperDoll_Mesh, &UpdateMainMenuPaperDoll_Mesh_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.ClearMainMenuPaperDoll
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::ClearMainMenuPaperDoll ( )
{
	static UFunction* pFnClearMainMenuPaperDoll = NULL;

	if ( ! pFnClearMainMenuPaperDoll )
		pFnClearMainMenuPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 86482 ];

	ATrEntryPlayerController_execClearMainMenuPaperDoll_Parms ClearMainMenuPaperDoll_Parms;

	this->ProcessEvent ( pFnClearMainMenuPaperDoll, &ClearMainMenuPaperDoll_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.UpdatePaperDoll_Device
// [0x00020002] 
// Parameters infos:
// class UClass*                  DeviceClass                    ( CPF_Parm )

void ATrEntryPlayerController::UpdatePaperDoll_Device ( class UClass* DeviceClass )
{
	static UFunction* pFnUpdatePaperDoll_Device = NULL;

	if ( ! pFnUpdatePaperDoll_Device )
		pFnUpdatePaperDoll_Device = (UFunction*) UObject::GObjObjects()->Data[ 86480 ];

	ATrEntryPlayerController_execUpdatePaperDoll_Device_Parms UpdatePaperDoll_Device_Parms;
	UpdatePaperDoll_Device_Parms.DeviceClass = DeviceClass;

	this->ProcessEvent ( pFnUpdatePaperDoll_Device, &UpdatePaperDoll_Device_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.Char
// [0x00020002] 
// Parameters infos:
// int                            CharID                         ( CPF_Parm )

void ATrEntryPlayerController::Char ( int CharID )
{
	static UFunction* pFnChar = NULL;

	if ( ! pFnChar )
		pFnChar = (UFunction*) UObject::GObjObjects()->Data[ 86471 ];

	ATrEntryPlayerController_execChar_Parms Char_Parms;
	Char_Parms.CharID = CharID;

	this->ProcessEvent ( pFnChar, &Char_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.Weap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            WeapId                         ( CPF_Parm )

void ATrEntryPlayerController::Weap ( int WeapId )
{
	static UFunction* pFnWeap = NULL;

	if ( ! pFnWeap )
		pFnWeap = (UFunction*) UObject::GObjObjects()->Data[ 86469 ];

	ATrEntryPlayerController_execWeap_Parms Weap_Parms;
	Weap_Parms.WeapId = WeapId;

	this->ProcessEvent ( pFnWeap, &Weap_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.Pose
// [0x00020002] 
// Parameters infos:
// int                            PoseId                         ( CPF_Parm )

void ATrEntryPlayerController::Pose ( int PoseId )
{
	static UFunction* pFnPose = NULL;

	if ( ! pFnPose )
		pFnPose = (UFunction*) UObject::GObjObjects()->Data[ 86467 ];

	ATrEntryPlayerController_execPose_Parms Pose_Parms;
	Pose_Parms.PoseId = PoseId;

	this->ProcessEvent ( pFnPose, &Pose_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.ShowScoreboard
// [0x00020000] 
// Parameters infos:

void ATrEntryPlayerController::ShowScoreboard ( )
{
	static UFunction* pFnShowScoreboard = NULL;

	if ( ! pFnShowScoreboard )
		pFnShowScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 86466 ];

	ATrEntryPlayerController_execShowScoreboard_Parms ShowScoreboard_Parms;

	this->ProcessEvent ( pFnShowScoreboard, &ShowScoreboard_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.ShowMidGameMenu
// [0x00024000] 
// Parameters infos:
// struct FName                   TabTag                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bEnableInput                   ( CPF_OptionalParm | CPF_Parm )

void ATrEntryPlayerController::ShowMidGameMenu ( struct FName TabTag, unsigned long bEnableInput )
{
	static UFunction* pFnShowMidGameMenu = NULL;

	if ( ! pFnShowMidGameMenu )
		pFnShowMidGameMenu = (UFunction*) UObject::GObjObjects()->Data[ 86463 ];

	ATrEntryPlayerController_execShowMidGameMenu_Parms ShowMidGameMenu_Parms;
	memcpy ( &ShowMidGameMenu_Parms.TabTag, &TabTag, 0x8 );
	ShowMidGameMenu_Parms.bEnableInput = bEnableInput;

	this->ProcessEvent ( pFnShowMidGameMenu, &ShowMidGameMenu_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.SetPawnConstructionScene
// [0x00020000] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ATrEntryPlayerController::SetPawnConstructionScene ( unsigned long bShow )
{
	static UFunction* pFnSetPawnConstructionScene = NULL;

	if ( ! pFnSetPawnConstructionScene )
		pFnSetPawnConstructionScene = (UFunction*) UObject::GObjObjects()->Data[ 86461 ];

	ATrEntryPlayerController_execSetPawnConstructionScene_Parms SetPawnConstructionScene_Parms;
	SetPawnConstructionScene_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetPawnConstructionScene, &SetPawnConstructionScene_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.QuitToMainMenu
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::QuitToMainMenu ( )
{
	static UFunction* pFnQuitToMainMenu = NULL;

	if ( ! pFnQuitToMainMenu )
		pFnQuitToMainMenu = (UFunction*) UObject::GObjObjects()->Data[ 86460 ];

	ATrEntryPlayerController_execQuitToMainMenu_Parms QuitToMainMenu_Parms;

	this->ProcessEvent ( pFnQuitToMainMenu, &QuitToMainMenu_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnLinkStatusChanged
// [0x00020002] 
// Parameters infos:
// unsigned long                  bConnected                     ( CPF_Parm )

void ATrEntryPlayerController::OnLinkStatusChanged ( unsigned long bConnected )
{
	static UFunction* pFnOnLinkStatusChanged = NULL;

	if ( ! pFnOnLinkStatusChanged )
		pFnOnLinkStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 86457 ];

	ATrEntryPlayerController_execOnLinkStatusChanged_Parms OnLinkStatusChanged_Parms;
	OnLinkStatusChanged_Parms.bConnected = bConnected;

	this->ProcessEvent ( pFnOnLinkStatusChanged, &OnLinkStatusChanged_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnConnectionStatusChange
// [0x00020002] 
// Parameters infos:
// unsigned char                  ConnectionStatus               ( CPF_Parm )

void ATrEntryPlayerController::OnConnectionStatusChange ( unsigned char ConnectionStatus )
{
	static UFunction* pFnOnConnectionStatusChange = NULL;

	if ( ! pFnOnConnectionStatusChange )
		pFnOnConnectionStatusChange = (UFunction*) UObject::GObjObjects()->Data[ 86454 ];

	ATrEntryPlayerController_execOnConnectionStatusChange_Parms OnConnectionStatusChange_Parms;
	OnConnectionStatusChange_Parms.ConnectionStatus = ConnectionStatus;

	this->ProcessEvent ( pFnOnConnectionStatusChange, &OnConnectionStatusChange_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnFriendMessageReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            SendingPlayer                  ( CPF_Parm )
// struct FString                 SendingNick                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrEntryPlayerController::OnFriendMessageReceived ( unsigned char LocalUserNum, struct FUniqueNetId SendingPlayer, struct FString SendingNick, struct FString Message )
{
	static UFunction* pFnOnFriendMessageReceived = NULL;

	if ( ! pFnOnFriendMessageReceived )
		pFnOnFriendMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 86449 ];

	ATrEntryPlayerController_execOnFriendMessageReceived_Parms OnFriendMessageReceived_Parms;
	OnFriendMessageReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendMessageReceived_Parms.SendingPlayer, &SendingPlayer, 0x8 );
	memcpy ( &OnFriendMessageReceived_Parms.SendingNick, &SendingNick, 0xC );
	memcpy ( &OnFriendMessageReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendMessageReceived, &OnFriendMessageReceived_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnFriendInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FUniqueNetId            RequestingPlayer               ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrEntryPlayerController::OnFriendInviteReceived ( unsigned char LocalUserNum, struct FUniqueNetId RequestingPlayer, struct FString RequestingNick, struct FString Message )
{
	static UFunction* pFnOnFriendInviteReceived = NULL;

	if ( ! pFnOnFriendInviteReceived )
		pFnOnFriendInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 86444 ];

	ATrEntryPlayerController_execOnFriendInviteReceived_Parms OnFriendInviteReceived_Parms;
	OnFriendInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnFriendInviteReceived_Parms.RequestingPlayer, &RequestingPlayer, 0x8 );
	memcpy ( &OnFriendInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );
	memcpy ( &OnFriendInviteReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnOnFriendInviteReceived, &OnFriendInviteReceived_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnGameInviteReceived
// [0x00020000] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// struct FString                 RequestingNick                 ( CPF_Parm | CPF_NeedCtorLink )

void ATrEntryPlayerController::OnGameInviteReceived ( unsigned char LocalUserNum, struct FString RequestingNick )
{
	static UFunction* pFnOnGameInviteReceived = NULL;

	if ( ! pFnOnGameInviteReceived )
		pFnOnGameInviteReceived = (UFunction*) UObject::GObjObjects()->Data[ 86441 ];

	ATrEntryPlayerController_execOnGameInviteReceived_Parms OnGameInviteReceived_Parms;
	OnGameInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy ( &OnGameInviteReceived_Parms.RequestingNick, &RequestingNick, 0xC );

	this->ProcessEvent ( pFnOnGameInviteReceived, &OnGameInviteReceived_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.OnControllerChanged
// [0x00020002] 
// Parameters infos:
// int                            ControllerId                   ( CPF_Parm )
// unsigned long                  bIsConnected                   ( CPF_Parm )

void ATrEntryPlayerController::OnControllerChanged ( int ControllerId, unsigned long bIsConnected )
{
	static UFunction* pFnOnControllerChanged = NULL;

	if ( ! pFnOnControllerChanged )
		pFnOnControllerChanged = (UFunction*) UObject::GObjObjects()->Data[ 86437 ];

	ATrEntryPlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;

	this->ProcessEvent ( pFnOnControllerChanged, &OnControllerChanged_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEntryPlayerController::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 86436 ];

	ATrEntryPlayerController_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrEntryPlayerController::eventInitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 86435 ];

	ATrEntryPlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.LoadingTimer
// [0x00020002] 
// Parameters infos:
// unsigned long                  bStart                         ( CPF_Parm )

void ATrEntryPlayerController::LoadingTimer ( unsigned long bStart )
{
	static UFunction* pFnLoadingTimer = NULL;

	if ( ! pFnLoadingTimer )
		pFnLoadingTimer = (UFunction*) UObject::GObjObjects()->Data[ 86433 ];

	ATrEntryPlayerController_execLoadingTimer_Parms LoadingTimer_Parms;
	LoadingTimer_Parms.bStart = bStart;

	this->ProcessEvent ( pFnLoadingTimer, &LoadingTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.ClearQueueResendTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::ClearQueueResendTimer ( )
{
	static UFunction* pFnClearQueueResendTimer = NULL;

	if ( ! pFnClearQueueResendTimer )
		pFnClearQueueResendTimer = (UFunction*) UObject::GObjObjects()->Data[ 86432 ];

	ATrEntryPlayerController_execClearQueueResendTimer_Parms ClearQueueResendTimer_Parms;

	this->ProcessEvent ( pFnClearQueueResendTimer, &ClearQueueResendTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.BeginQueueResendTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            SecondsLeft                    ( CPF_Parm )

void ATrEntryPlayerController::eventBeginQueueResendTimer ( int SecondsLeft )
{
	static UFunction* pFnBeginQueueResendTimer = NULL;

	if ( ! pFnBeginQueueResendTimer )
		pFnBeginQueueResendTimer = (UFunction*) UObject::GObjObjects()->Data[ 86430 ];

	ATrEntryPlayerController_eventBeginQueueResendTimer_Parms BeginQueueResendTimer_Parms;
	BeginQueueResendTimer_Parms.SecondsLeft = SecondsLeft;

	this->ProcessEvent ( pFnBeginQueueResendTimer, &BeginQueueResendTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.RequestPaperDollTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::RequestPaperDollTimer ( )
{
	static UFunction* pFnRequestPaperDollTimer = NULL;

	if ( ! pFnRequestPaperDollTimer )
		pFnRequestPaperDollTimer = (UFunction*) UObject::GObjObjects()->Data[ 86429 ];

	ATrEntryPlayerController_execRequestPaperDollTimer_Parms RequestPaperDollTimer_Parms;

	this->ProcessEvent ( pFnRequestPaperDollTimer, &RequestPaperDollTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.NotifyMenuReadyTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::NotifyMenuReadyTimer ( )
{
	static UFunction* pFnNotifyMenuReadyTimer = NULL;

	if ( ! pFnNotifyMenuReadyTimer )
		pFnNotifyMenuReadyTimer = (UFunction*) UObject::GObjObjects()->Data[ 86428 ];

	ATrEntryPlayerController_execNotifyMenuReadyTimer_Parms NotifyMenuReadyTimer_Parms;

	this->ProcessEvent ( pFnNotifyMenuReadyTimer, &NotifyMenuReadyTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.PreloadTexturesTimer
// [0x00020002] 
// Parameters infos:

void ATrEntryPlayerController::PreloadTexturesTimer ( )
{
	static UFunction* pFnPreloadTexturesTimer = NULL;

	if ( ! pFnPreloadTexturesTimer )
		pFnPreloadTexturesTimer = (UFunction*) UObject::GObjObjects()->Data[ 86427 ];

	ATrEntryPlayerController_execPreloadTexturesTimer_Parms PreloadTexturesTimer_Parms;

	this->ProcessEvent ( pFnPreloadTexturesTimer, &PreloadTexturesTimer_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.SwingCameraBack
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrEntryPlayerController::SwingCameraBack ( )
{
	static UFunction* pFnSwingCameraBack = NULL;

	if ( ! pFnSwingCameraBack )
		pFnSwingCameraBack = (UFunction*) UObject::GObjObjects()->Data[ 86425 ];

	ATrEntryPlayerController_execSwingCameraBack_Parms SwingCameraBack_Parms;

	this->ProcessEvent ( pFnSwingCameraBack, &SwingCameraBack_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.SwingCamera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          TargetPitch                    ( CPF_Parm )
// float                          TargetYaw                      ( CPF_Parm )
// float                          TargetRoll                     ( CPF_Parm )

void ATrEntryPlayerController::SwingCamera ( float TargetPitch, float TargetYaw, float TargetRoll )
{
	static UFunction* pFnSwingCamera = NULL;

	if ( ! pFnSwingCamera )
		pFnSwingCamera = (UFunction*) UObject::GObjObjects()->Data[ 86420 ];

	ATrEntryPlayerController_execSwingCamera_Parms SwingCamera_Parms;
	SwingCamera_Parms.TargetPitch = TargetPitch;
	SwingCamera_Parms.TargetYaw = TargetYaw;
	SwingCamera_Parms.TargetRoll = TargetRoll;

	this->ProcessEvent ( pFnSwingCamera, &SwingCamera_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.GetPlayerViewPoint
// [0x00C20902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 POVLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                POVRotation                    ( CPF_Parm | CPF_OutParm )

void ATrEntryPlayerController::eventGetPlayerViewPoint ( struct FVector* POVLocation, struct FRotator* POVRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 86413 ];

	ATrEntryPlayerController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( POVLocation )
		memcpy ( POVLocation, &GetPlayerViewPoint_Parms.POVLocation, 0xC );

	if ( POVRotation )
		memcpy ( POVRotation, &GetPlayerViewPoint_Parms.POVRotation, 0xC );
};

// Function TribesGame.TrEntryPlayerController.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrEntryPlayerController::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86409 ];

	ATrEntryPlayerController_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEntryPlayerController.ToggleMenuVisible
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::ToggleMenuVisible ( )
{
	static UFunction* pFnToggleMenuVisible = NULL;

	if ( ! pFnToggleMenuVisible )
		pFnToggleMenuVisible = (UFunction*) UObject::GObjObjects()->Data[ 86408 ];

	ATrEntryPlayerController_execToggleMenuVisible_Parms ToggleMenuVisible_Parms;

	pFnToggleMenuVisible->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnToggleMenuVisible, &ToggleMenuVisible_Parms, NULL );

	pFnToggleMenuVisible->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.ShowPeach
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::ShowPeach ( )
{
	static UFunction* pFnShowPeach = NULL;

	if ( ! pFnShowPeach )
		pFnShowPeach = (UFunction*) UObject::GObjObjects()->Data[ 86407 ];

	ATrEntryPlayerController_execShowPeach_Parms ShowPeach_Parms;

	pFnShowPeach->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnShowPeach, &ShowPeach_Parms, NULL );

	pFnShowPeach->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.SwapModel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::SwapModel ( )
{
	static UFunction* pFnSwapModel = NULL;

	if ( ! pFnSwapModel )
		pFnSwapModel = (UFunction*) UObject::GObjObjects()->Data[ 86406 ];

	ATrEntryPlayerController_execSwapModel_Parms SwapModel_Parms;

	pFnSwapModel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSwapModel, &SwapModel_Parms, NULL );

	pFnSwapModel->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.RefreshFriends
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::RefreshFriends ( )
{
	static UFunction* pFnRefreshFriends = NULL;

	if ( ! pFnRefreshFriends )
		pFnRefreshFriends = (UFunction*) UObject::GObjObjects()->Data[ 86405 ];

	ATrEntryPlayerController_execRefreshFriends_Parms RefreshFriends_Parms;

	pFnRefreshFriends->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefreshFriends, &RefreshFriends_Parms, NULL );

	pFnRefreshFriends->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.NotifyMenuReady
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::NotifyMenuReady ( )
{
	static UFunction* pFnNotifyMenuReady = NULL;

	if ( ! pFnNotifyMenuReady )
		pFnNotifyMenuReady = (UFunction*) UObject::GObjObjects()->Data[ 86404 ];

	ATrEntryPlayerController_execNotifyMenuReady_Parms NotifyMenuReady_Parms;

	pFnNotifyMenuReady->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNotifyMenuReady, &NotifyMenuReady_Parms, NULL );

	pFnNotifyMenuReady->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.GetWaitRemaining
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrEntryPlayerController::GetWaitRemaining ( )
{
	static UFunction* pFnGetWaitRemaining = NULL;

	if ( ! pFnGetWaitRemaining )
		pFnGetWaitRemaining = (UFunction*) UObject::GObjObjects()->Data[ 86402 ];

	ATrEntryPlayerController_execGetWaitRemaining_Parms GetWaitRemaining_Parms;

	pFnGetWaitRemaining->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetWaitRemaining, &GetWaitRemaining_Parms, NULL );

	pFnGetWaitRemaining->FunctionFlags |= 0x400;

	return GetWaitRemaining_Parms.ReturnValue;
};

// Function TribesGame.TrEntryPlayerController.UpdateMenuTimer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrEntryPlayerController::UpdateMenuTimer ( int Seconds )
{
	static UFunction* pFnUpdateMenuTimer = NULL;

	if ( ! pFnUpdateMenuTimer )
		pFnUpdateMenuTimer = (UFunction*) UObject::GObjObjects()->Data[ 86400 ];

	ATrEntryPlayerController_execUpdateMenuTimer_Parms UpdateMenuTimer_Parms;
	UpdateMenuTimer_Parms.Seconds = Seconds;

	pFnUpdateMenuTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateMenuTimer, &UpdateMenuTimer_Parms, NULL );

	pFnUpdateMenuTimer->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.ResendReadyCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::ResendReadyCheck ( )
{
	static UFunction* pFnResendReadyCheck = NULL;

	if ( ! pFnResendReadyCheck )
		pFnResendReadyCheck = (UFunction*) UObject::GObjObjects()->Data[ 86399 ];

	ATrEntryPlayerController_execResendReadyCheck_Parms ResendReadyCheck_Parms;

	pFnResendReadyCheck->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnResendReadyCheck, &ResendReadyCheck_Parms, NULL );

	pFnResendReadyCheck->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.SendMenuToLobby
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrEntryPlayerController::SendMenuToLobby ( )
{
	static UFunction* pFnSendMenuToLobby = NULL;

	if ( ! pFnSendMenuToLobby )
		pFnSendMenuToLobby = (UFunction*) UObject::GObjObjects()->Data[ 86398 ];

	ATrEntryPlayerController_execSendMenuToLobby_Parms SendMenuToLobby_Parms;

	pFnSendMenuToLobby->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSendMenuToLobby, &SendMenuToLobby_Parms, NULL );

	pFnSendMenuToLobby->FunctionFlags |= 0x400;
};

// Function TribesGame.TrEntryPlayerController.RequestPaperDoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrEntryPlayerController::RequestPaperDoll ( )
{
	static UFunction* pFnRequestPaperDoll = NULL;

	if ( ! pFnRequestPaperDoll )
		pFnRequestPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 86396 ];

	ATrEntryPlayerController_execRequestPaperDoll_Parms RequestPaperDoll_Parms;

	pFnRequestPaperDoll->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestPaperDoll, &RequestPaperDoll_Parms, NULL );

	pFnRequestPaperDoll->FunctionFlags |= 0x400;

	return RequestPaperDoll_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.GetVGSClassId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrPlayerInput::GetVGSClassId ( )
{
	static UFunction* pFnGetVGSClassId = NULL;

	if ( ! pFnGetVGSClassId )
		pFnGetVGSClassId = (UFunction*) UObject::GObjObjects()->Data[ 53300 ];

	UTrPlayerInput_execGetVGSClassId_Parms GetVGSClassId_Parms;

	this->ProcessEvent ( pFnGetVGSClassId, &GetVGSClassId_Parms, NULL );

	return GetVGSClassId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.InVGSLoadoutMode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPlayerInput::InVGSLoadoutMode ( )
{
	static UFunction* pFnInVGSLoadoutMode = NULL;

	if ( ! pFnInVGSLoadoutMode )
		pFnInVGSLoadoutMode = (UFunction*) UObject::GObjObjects()->Data[ 53298 ];

	UTrPlayerInput_execInVGSLoadoutMode_Parms InVGSLoadoutMode_Parms;

	this->ProcessEvent ( pFnInVGSLoadoutMode, &InVGSLoadoutMode_Parms, NULL );

	return InVGSLoadoutMode_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.InVGSClassMode
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPlayerInput::InVGSClassMode ( )
{
	static UFunction* pFnInVGSClassMode = NULL;

	if ( ! pFnInVGSClassMode )
		pFnInVGSClassMode = (UFunction*) UObject::GObjObjects()->Data[ 53288 ];

	UTrPlayerInput_execInVGSClassMode_Parms InVGSClassMode_Parms;

	this->ProcessEvent ( pFnInVGSClassMode, &InVGSClassMode_Parms, NULL );

	return InVGSClassMode_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.SetFlyingYawSensitivity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void UTrPlayerInput::SetFlyingYawSensitivity ( float F )
{
	static UFunction* pFnSetFlyingYawSensitivity = NULL;

	if ( ! pFnSetFlyingYawSensitivity )
		pFnSetFlyingYawSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 77607 ];

	UTrPlayerInput_execSetFlyingYawSensitivity_Parms SetFlyingYawSensitivity_Parms;
	SetFlyingYawSensitivity_Parms.F = F;

	this->ProcessEvent ( pFnSetFlyingYawSensitivity, &SetFlyingYawSensitivity_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.SetFlyingPitchSensitivity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void UTrPlayerInput::SetFlyingPitchSensitivity ( float F )
{
	static UFunction* pFnSetFlyingPitchSensitivity = NULL;

	if ( ! pFnSetFlyingPitchSensitivity )
		pFnSetFlyingPitchSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 77605 ];

	UTrPlayerInput_execSetFlyingPitchSensitivity_Parms SetFlyingPitchSensitivity_Parms;
	SetFlyingPitchSensitivity_Parms.F = F;

	this->ProcessEvent ( pFnSetFlyingPitchSensitivity, &SetFlyingPitchSensitivity_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.PlayerInput
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrPlayerInput::eventPlayerInput ( float DeltaTime )
{
	static UFunction* pFnPlayerInput = NULL;

	if ( ! pFnPlayerInput )
		pFnPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 77599 ];

	UTrPlayerInput_eventPlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayerInput, &PlayerInput_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrPlayerInput::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 77597 ];

	UTrPlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.PushAnalogJoysticksToScaleform
// [0x00020102] 
// Parameters infos:

void UTrPlayerInput::PushAnalogJoysticksToScaleform ( )
{
	static UFunction* pFnPushAnalogJoysticksToScaleform = NULL;

	if ( ! pFnPushAnalogJoysticksToScaleform )
		pFnPushAnalogJoysticksToScaleform = (UFunction*) UObject::GObjObjects()->Data[ 77594 ];

	UTrPlayerInput_execPushAnalogJoysticksToScaleform_Parms PushAnalogJoysticksToScaleform_Parms;

	this->ProcessEvent ( pFnPushAnalogJoysticksToScaleform, &PushAnalogJoysticksToScaleform_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.GetStickAngle
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          UpDown                         ( CPF_Parm )
// float                          LeftRight                      ( CPF_Parm )

int UTrPlayerInput::GetStickAngle ( float UpDown, float LeftRight )
{
	static UFunction* pFnGetStickAngle = NULL;

	if ( ! pFnGetStickAngle )
		pFnGetStickAngle = (UFunction*) UObject::GObjObjects()->Data[ 77587 ];

	UTrPlayerInput_execGetStickAngle_Parms GetStickAngle_Parms;
	GetStickAngle_Parms.UpDown = UpDown;
	GetStickAngle_Parms.LeftRight = LeftRight;

	this->ProcessEvent ( pFnGetStickAngle, &GetStickAngle_Parms, NULL );

	return GetStickAngle_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.SetHUDTarget
// [0x00020102] 
// Parameters infos:
// class ATrHUD*                  TrH                            ( CPF_Parm )

void UTrPlayerInput::SetHUDTarget ( class ATrHUD* TrH )
{
	static UFunction* pFnSetHUDTarget = NULL;

	if ( ! pFnSetHUDTarget )
		pFnSetHUDTarget = (UFunction*) UObject::GObjObjects()->Data[ 77585 ];

	UTrPlayerInput_execSetHUDTarget_Parms SetHUDTarget_Parms;
	SetHUDTarget_Parms.TrH = TrH;

	this->ProcessEvent ( pFnSetHUDTarget, &SetHUDTarget_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.EndVGS
// [0x00020102] 
// Parameters infos:

void UTrPlayerInput::EndVGS ( )
{
	static UFunction* pFnEndVGS = NULL;

	if ( ! pFnEndVGS )
		pFnEndVGS = (UFunction*) UObject::GObjObjects()->Data[ 77584 ];

	UTrPlayerInput_execEndVGS_Parms EndVGS_Parms;

	this->ProcessEvent ( pFnEndVGS, &EndVGS_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.StartVGSLoadouts
// [0x00020102] 
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )

void UTrPlayerInput::StartVGSLoadouts ( int ClassId )
{
	static UFunction* pFnStartVGSLoadouts = NULL;

	if ( ! pFnStartVGSLoadouts )
		pFnStartVGSLoadouts = (UFunction*) UObject::GObjObjects()->Data[ 77582 ];

	UTrPlayerInput_execStartVGSLoadouts_Parms StartVGSLoadouts_Parms;
	StartVGSLoadouts_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnStartVGSLoadouts, &StartVGSLoadouts_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.StartVGSClasses
// [0x00020102] 
// Parameters infos:

void UTrPlayerInput::StartVGSClasses ( )
{
	static UFunction* pFnStartVGSClasses = NULL;

	if ( ! pFnStartVGSClasses )
		pFnStartVGSClasses = (UFunction*) UObject::GObjObjects()->Data[ 77581 ];

	UTrPlayerInput_execStartVGSClasses_Parms StartVGSClasses_Parms;

	this->ProcessEvent ( pFnStartVGSClasses, &StartVGSClasses_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.StartVGS
// [0x00020102] 
// Parameters infos:

void UTrPlayerInput::StartVGS ( )
{
	static UFunction* pFnStartVGS = NULL;

	if ( ! pFnStartVGS )
		pFnStartVGS = (UFunction*) UObject::GObjObjects()->Data[ 77579 ];

	UTrPlayerInput_execStartVGS_Parms StartVGS_Parms;

	this->ProcessEvent ( pFnStartVGS, &StartVGS_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.IsValidVGSTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  ActorUnderReticule             ( CPF_Parm )

bool UTrPlayerInput::IsValidVGSTarget ( class AActor* ActorUnderReticule )
{
	static UFunction* pFnIsValidVGSTarget = NULL;

	if ( ! pFnIsValidVGSTarget )
		pFnIsValidVGSTarget = (UFunction*) UObject::GObjObjects()->Data[ 77573 ];

	UTrPlayerInput_execIsValidVGSTarget_Parms IsValidVGSTarget_Parms;
	IsValidVGSTarget_Parms.ActorUnderReticule = ActorUnderReticule;

	this->ProcessEvent ( pFnIsValidVGSTarget, &IsValidVGSTarget_Parms, NULL );

	return IsValidVGSTarget_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.PlayVGSCommand
// [0x00020102] 
// Parameters infos:
// unsigned char                  VGSCommandIndex                ( CPF_Parm )

void UTrPlayerInput::PlayVGSCommand ( unsigned char VGSCommandIndex )
{
	static UFunction* pFnPlayVGSCommand = NULL;

	if ( ! pFnPlayVGSCommand )
		pFnPlayVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 77571 ];

	UTrPlayerInput_execPlayVGSCommand_Parms PlayVGSCommand_Parms;
	PlayVGSCommand_Parms.VGSCommandIndex = VGSCommandIndex;

	this->ProcessEvent ( pFnPlayVGSCommand, &PlayVGSCommand_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.PlaySpottedCommand
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPlayerInput::PlaySpottedCommand ( )
{
	static UFunction* pFnPlaySpottedCommand = NULL;

	if ( ! pFnPlaySpottedCommand )
		pFnPlaySpottedCommand = (UFunction*) UObject::GObjObjects()->Data[ 76683 ];

	UTrPlayerInput_execPlaySpottedCommand_Parms PlaySpottedCommand_Parms;

	this->ProcessEvent ( pFnPlaySpottedCommand, &PlaySpottedCommand_Parms, NULL );

	return PlaySpottedCommand_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.OnVGSNumKeyPressed
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrPlayerInput::eventOnVGSNumKeyPressed ( int Index )
{
	static UFunction* pFnOnVGSNumKeyPressed = NULL;

	if ( ! pFnOnVGSNumKeyPressed )
		pFnOnVGSNumKeyPressed = (UFunction*) UObject::GObjObjects()->Data[ 77544 ];

	UTrPlayerInput_eventOnVGSNumKeyPressed_Parms OnVGSNumKeyPressed_Parms;
	OnVGSNumKeyPressed_Parms.Index = Index;

	this->ProcessEvent ( pFnOnVGSNumKeyPressed, &OnVGSNumKeyPressed_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.OnVGSKeyPressed
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   KeyPressed                     ( CPF_Parm )

void UTrPlayerInput::eventOnVGSKeyPressed ( struct FName KeyPressed )
{
	static UFunction* pFnOnVGSKeyPressed = NULL;

	if ( ! pFnOnVGSKeyPressed )
		pFnOnVGSKeyPressed = (UFunction*) UObject::GObjObjects()->Data[ 77535 ];

	UTrPlayerInput_eventOnVGSKeyPressed_Parms OnVGSKeyPressed_Parms;
	memcpy ( &OnVGSKeyPressed_Parms.KeyPressed, &KeyPressed, 0x8 );

	this->ProcessEvent ( pFnOnVGSKeyPressed, &OnVGSKeyPressed_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.IsMouseSmoothEnabled
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrPlayerInput::IsMouseSmoothEnabled ( )
{
	static UFunction* pFnIsMouseSmoothEnabled = NULL;

	if ( ! pFnIsMouseSmoothEnabled )
		pFnIsMouseSmoothEnabled = (UFunction*) UObject::GObjObjects()->Data[ 77533 ];

	UTrPlayerInput_execIsMouseSmoothEnabled_Parms IsMouseSmoothEnabled_Parms;

	this->ProcessEvent ( pFnIsMouseSmoothEnabled, &IsMouseSmoothEnabled_Parms, NULL );

	return IsMouseSmoothEnabled_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerInput.AdjustMouseSensitivity
// [0x00020002] 
// Parameters infos:
// float                          FOVScale                       ( CPF_Parm )

void UTrPlayerInput::AdjustMouseSensitivity ( float FOVScale )
{
	static UFunction* pFnAdjustMouseSensitivity = NULL;

	if ( ! pFnAdjustMouseSensitivity )
		pFnAdjustMouseSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 77531 ];

	UTrPlayerInput_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;

	this->ProcessEvent ( pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms, NULL );
};

// Function TribesGame.TrPlayerInput.InitInputSystem
// [0x00020002] 
// Parameters infos:

void UTrPlayerInput::InitInputSystem ( )
{
	static UFunction* pFnInitInputSystem = NULL;

	if ( ! pFnInitInputSystem )
		pFnInitInputSystem = (UFunction*) UObject::GObjObjects()->Data[ 77530 ];

	UTrPlayerInput_execInitInputSystem_Parms InitInputSystem_Parms;

	this->ProcessEvent ( pFnInitInputSystem, &InitInputSystem_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.ServerPingRedFlag
// [0x002200C0] 
// Parameters infos:
// float                          CurrentPingMS                  ( CPF_Parm )

void ATrPlayerReplicationInfo::ServerPingRedFlag ( float CurrentPingMS )
{
	static UFunction* pFnServerPingRedFlag = NULL;

	if ( ! pFnServerPingRedFlag )
		pFnServerPingRedFlag = (UFunction*) UObject::GObjObjects()->Data[ 100627 ];

	ATrPlayerReplicationInfo_execServerPingRedFlag_Parms ServerPingRedFlag_Parms;
	ServerPingRedFlag_Parms.CurrentPingMS = CurrentPingMS;

	this->ProcessEvent ( pFnServerPingRedFlag, &ServerPingRedFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.OnPingRedFlagged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerReplicationInfo::eventOnPingRedFlagged ( )
{
	static UFunction* pFnOnPingRedFlagged = NULL;

	if ( ! pFnOnPingRedFlagged )
		pFnOnPingRedFlagged = (UFunction*) UObject::GObjObjects()->Data[ 100626 ];

	ATrPlayerReplicationInfo_eventOnPingRedFlagged_Parms OnPingRedFlagged_Parms;

	this->ProcessEvent ( pFnOnPingRedFlagged, &OnPingRedFlagged_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetJetpackSocketCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

int ATrPlayerReplicationInfo::GetJetpackSocketCount ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetJetpackSocketCount = NULL;

	if ( ! pFnGetJetpackSocketCount )
		pFnGetJetpackSocketCount = (UFunction*) UObject::GObjObjects()->Data[ 73122 ];

	ATrPlayerReplicationInfo_execGetJetpackSocketCount_Parms GetJetpackSocketCount_Parms;
	GetJetpackSocketCount_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetJetpackSocketCount, &GetJetpackSocketCount_Parms, NULL );

	return GetJetpackSocketCount_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetJetpackSocket
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// int                            Socket                         ( CPF_Parm )

struct FName ATrPlayerReplicationInfo::GetJetpackSocket ( class UClass* FamilyInfo, int Socket )
{
	static UFunction* pFnGetJetpackSocket = NULL;

	if ( ! pFnGetJetpackSocket )
		pFnGetJetpackSocket = (UFunction*) UObject::GObjObjects()->Data[ 73126 ];

	ATrPlayerReplicationInfo_execGetJetpackSocket_Parms GetJetpackSocket_Parms;
	GetJetpackSocket_Parms.FamilyInfo = FamilyInfo;
	GetJetpackSocket_Parms.Socket = Socket;

	this->ProcessEvent ( pFnGetJetpackSocket, &GetJetpackSocket_Parms, NULL );

	return GetJetpackSocket_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetSkiThrust
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// class UParticleSystem*         DefaultSystem                  ( CPF_Parm )

class UParticleSystem* ATrPlayerReplicationInfo::GetSkiThrust ( class UClass* FamilyInfo, class UParticleSystem* DefaultSystem )
{
	static UFunction* pFnGetSkiThrust = NULL;

	if ( ! pFnGetSkiThrust )
		pFnGetSkiThrust = (UFunction*) UObject::GObjObjects()->Data[ 73109 ];

	ATrPlayerReplicationInfo_execGetSkiThrust_Parms GetSkiThrust_Parms;
	GetSkiThrust_Parms.FamilyInfo = FamilyInfo;
	GetSkiThrust_Parms.DefaultSystem = DefaultSystem;

	this->ProcessEvent ( pFnGetSkiThrust, &GetSkiThrust_Parms, NULL );

	return GetSkiThrust_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetJetpackTrail
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class UParticleSystem* ATrPlayerReplicationInfo::GetJetpackTrail ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetJetpackTrail = NULL;

	if ( ! pFnGetJetpackTrail )
		pFnGetJetpackTrail = (UFunction*) UObject::GObjObjects()->Data[ 73128 ];

	ATrPlayerReplicationInfo_execGetJetpackTrail_Parms GetJetpackTrail_Parms;
	GetJetpackTrail_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetJetpackTrail, &GetJetpackTrail_Parms, NULL );

	return GetJetpackTrail_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetJetpackThrust
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class UParticleSystem* ATrPlayerReplicationInfo::GetJetpackThrust ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetJetpackThrust = NULL;

	if ( ! pFnGetJetpackThrust )
		pFnGetJetpackThrust = (UFunction*) UObject::GObjObjects()->Data[ 73124 ];

	ATrPlayerReplicationInfo_execGetJetpackThrust_Parms GetJetpackThrust_Parms;
	GetJetpackThrust_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetJetpackThrust, &GetJetpackThrust_Parms, NULL );

	return GetJetpackThrust_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetGibMesh
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class USkeletalMesh* ATrPlayerReplicationInfo::GetGibMesh ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetGibMesh = NULL;

	if ( ! pFnGetGibMesh )
		pFnGetGibMesh = (UFunction*) UObject::GObjObjects()->Data[ 72126 ];

	ATrPlayerReplicationInfo_execGetGibMesh_Parms GetGibMesh_Parms;
	GetGibMesh_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetGibMesh, &GetGibMesh_Parms, NULL );

	return GetGibMesh_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetHandsMesh
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* ATrPlayerReplicationInfo::GetHandsMesh ( )
{
	static UFunction* pFnGetHandsMesh = NULL;

	if ( ! pFnGetHandsMesh )
		pFnGetHandsMesh = (UFunction*) UObject::GObjObjects()->Data[ 72952 ];

	ATrPlayerReplicationInfo_execGetHandsMesh_Parms GetHandsMesh_Parms;

	this->ProcessEvent ( pFnGetHandsMesh, &GetHandsMesh_Parms, NULL );

	return GetHandsMesh_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetBodyMesh
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* ATrPlayerReplicationInfo::GetBodyMesh ( )
{
	static UFunction* pFnGetBodyMesh = NULL;

	if ( ! pFnGetBodyMesh )
		pFnGetBodyMesh = (UFunction*) UObject::GObjObjects()->Data[ 72130 ];

	ATrPlayerReplicationInfo_execGetBodyMesh_Parms GetBodyMesh_Parms;

	this->ProcessEvent ( pFnGetBodyMesh, &GetBodyMesh_Parms, NULL );

	return GetBodyMesh_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.Update1PMesh
// [0x00020102] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )

void ATrPlayerReplicationInfo::Update1PMesh ( class UClass* FamilyInfo )
{
	static UFunction* pFnUpdate1PMesh = NULL;

	if ( ! pFnUpdate1PMesh )
		pFnUpdate1PMesh = (UFunction*) UObject::GObjObjects()->Data[ 100595 ];

	ATrPlayerReplicationInfo_execUpdate1PMesh_Parms Update1PMesh_Parms;
	Update1PMesh_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnUpdate1PMesh, &Update1PMesh_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.Get3PSkin
// [0x00020102] 
// Parameters infos:
// class USkeletalMesh*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class USkeletalMesh* ATrPlayerReplicationInfo::Get3PSkin ( )
{
	static UFunction* pFnGet3PSkin = NULL;

	if ( ! pFnGet3PSkin )
		pFnGet3PSkin = (UFunction*) UObject::GObjObjects()->Data[ 72128 ];

	ATrPlayerReplicationInfo_execGet3PSkin_Parms Get3PSkin_Parms;

	this->ProcessEvent ( pFnGet3PSkin, &Get3PSkin_Parms, NULL );

	return Get3PSkin_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.On1PSkinContentLoaded
// [0x00020100] 
// Parameters infos:
// class UClass*                  Skin1PDataClass                ( CPF_Parm )

void ATrPlayerReplicationInfo::On1PSkinContentLoaded ( class UClass* Skin1PDataClass )
{
	static UFunction* pFnOn1PSkinContentLoaded = NULL;

	if ( ! pFnOn1PSkinContentLoaded )
		pFnOn1PSkinContentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 100593 ];

	ATrPlayerReplicationInfo_execOn1PSkinContentLoaded_Parms On1PSkinContentLoaded_Parms;
	On1PSkinContentLoaded_Parms.Skin1PDataClass = Skin1PDataClass;

	this->ProcessEvent ( pFnOn1PSkinContentLoaded, &On1PSkinContentLoaded_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.On3PSkinContentLoaded
// [0x00020102] 
// Parameters infos:
// class UClass*                  Skin3PDataClass                ( CPF_Parm )

void ATrPlayerReplicationInfo::On3PSkinContentLoaded ( class UClass* Skin3PDataClass )
{
	static UFunction* pFnOn3PSkinContentLoaded = NULL;

	if ( ! pFnOn3PSkinContentLoaded )
		pFnOn3PSkinContentLoaded = (UFunction*) UObject::GObjObjects()->Data[ 100590 ];

	ATrPlayerReplicationInfo_execOn3PSkinContentLoaded_Parms On3PSkinContentLoaded_Parms;
	On3PSkinContentLoaded_Parms.Skin3PDataClass = Skin3PDataClass;

	this->ProcessEvent ( pFnOn3PSkinContentLoaded, &On3PSkinContentLoaded_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.UpdateCachedSkin
// [0x00020102] 
// Parameters infos:

void ATrPlayerReplicationInfo::UpdateCachedSkin ( )
{
	static UFunction* pFnUpdateCachedSkin = NULL;

	if ( ! pFnUpdateCachedSkin )
		pFnUpdateCachedSkin = (UFunction*) UObject::GObjObjects()->Data[ 100582 ];

	ATrPlayerReplicationInfo_execUpdateCachedSkin_Parms UpdateCachedSkin_Parms;

	this->ProcessEvent ( pFnUpdateCachedSkin, &UpdateCachedSkin_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetCurrentVoiceClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class UClass* ATrPlayerReplicationInfo::GetCurrentVoiceClass ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetCurrentVoiceClass = NULL;

	if ( ! pFnGetCurrentVoiceClass )
		pFnGetCurrentVoiceClass = (UFunction*) UObject::GObjObjects()->Data[ 100578 ];

	ATrPlayerReplicationInfo_execGetCurrentVoiceClass_Parms GetCurrentVoiceClass_Parms;
	GetCurrentVoiceClass_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetCurrentVoiceClass, &GetCurrentVoiceClass_Parms, NULL );

	return GetCurrentVoiceClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetCurrentSkinClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

class UClass* ATrPlayerReplicationInfo::GetCurrentSkinClass ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetCurrentSkinClass = NULL;

	if ( ! pFnGetCurrentSkinClass )
		pFnGetCurrentSkinClass = (UFunction*) UObject::GObjObjects()->Data[ 72124 ];

	ATrPlayerReplicationInfo_execGetCurrentSkinClass_Parms GetCurrentSkinClass_Parms;
	GetCurrentSkinClass_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetCurrentSkinClass, &GetCurrentSkinClass_Parms, NULL );

	return GetCurrentSkinClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.SetCached3PSkin
// [0x00020102] 
// Parameters infos:
// class UClass*                  NewCachedSkin                  ( CPF_Parm )

void ATrPlayerReplicationInfo::SetCached3PSkin ( class UClass* NewCachedSkin )
{
	static UFunction* pFnSetCached3PSkin = NULL;

	if ( ! pFnSetCached3PSkin )
		pFnSetCached3PSkin = (UFunction*) UObject::GObjObjects()->Data[ 100574 ];

	ATrPlayerReplicationInfo_execSetCached3PSkin_Parms SetCached3PSkin_Parms;
	SetCached3PSkin_Parms.NewCachedSkin = NewCachedSkin;

	this->ProcessEvent ( pFnSetCached3PSkin, &SetCached3PSkin_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.CopyProperties
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

void ATrPlayerReplicationInfo::CopyProperties ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnCopyProperties = NULL;

	if ( ! pFnCopyProperties )
		pFnCopyProperties = (UFunction*) UObject::GObjObjects()->Data[ 100571 ];

	ATrPlayerReplicationInfo_execCopyProperties_Parms CopyProperties_Parms;
	CopyProperties_Parms.PRI = PRI;

	this->ProcessEvent ( pFnCopyProperties, &CopyProperties_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.Duplicate
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APlayerReplicationInfo* ATrPlayerReplicationInfo::Duplicate ( )
{
	static UFunction* pFnDuplicate = NULL;

	if ( ! pFnDuplicate )
		pFnDuplicate = (UFunction*) UObject::GObjObjects()->Data[ 100568 ];

	ATrPlayerReplicationInfo_execDuplicate_Parms Duplicate_Parms;

	this->ProcessEvent ( pFnDuplicate, &Duplicate_Parms, NULL );

	return Duplicate_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.SetFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        NewFlag                        ( CPF_Parm )

void ATrPlayerReplicationInfo::SetFlag ( class AUTCarriedObject* NewFlag )
{
	static UFunction* pFnSetFlag = NULL;

	if ( ! pFnSetFlag )
		pFnSetFlag = (UFunction*) UObject::GObjObjects()->Data[ 100565 ];

	ATrPlayerReplicationInfo_execSetFlag_Parms SetFlag_Parms;
	SetFlag_Parms.NewFlag = NewFlag;

	this->ProcessEvent ( pFnSetFlag, &SetFlag_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetPerkFromId
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PerkId                         ( CPF_Parm )

class UClass* ATrPlayerReplicationInfo::eventGetPerkFromId ( int PerkId )
{
	static UFunction* pFnGetPerkFromId = NULL;

	if ( ! pFnGetPerkFromId )
		pFnGetPerkFromId = (UFunction*) UObject::GObjObjects()->Data[ 100559 ];

	ATrPlayerReplicationInfo_eventGetPerkFromId_Parms GetPerkFromId_Parms;
	GetPerkFromId_Parms.PerkId = PerkId;

	this->ProcessEvent ( pFnGetPerkFromId, &GetPerkFromId_Parms, NULL );

	return GetPerkFromId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetRankFromXP
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            XP                             ( CPF_Parm )

class UClass* ATrPlayerReplicationInfo::GetRankFromXP ( int XP )
{
	static UFunction* pFnGetRankFromXP = NULL;

	if ( ! pFnGetRankFromXP )
		pFnGetRankFromXP = (UFunction*) UObject::GObjObjects()->Data[ 100553 ];

	ATrPlayerReplicationInfo_execGetRankFromXP_Parms GetRankFromXP_Parms;
	GetRankFromXP_Parms.XP = XP;

	this->ProcessEvent ( pFnGetRankFromXP, &GetRankFromXP_Parms, NULL );

	return GetRankFromXP_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.SetPlayerXP
// [0x00020002] 
// Parameters infos:
// int                            XP                             ( CPF_Parm )

void ATrPlayerReplicationInfo::SetPlayerXP ( int XP )
{
	static UFunction* pFnSetPlayerXP = NULL;

	if ( ! pFnSetPlayerXP )
		pFnSetPlayerXP = (UFunction*) UObject::GObjObjects()->Data[ 100551 ];

	ATrPlayerReplicationInfo_execSetPlayerXP_Parms SetPlayerXP_Parms;
	SetPlayerXP_Parms.XP = XP;

	this->ProcessEvent ( pFnSetPlayerXP, &SetPlayerXP_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.SetPlayerGP
// [0x00020002] 
// Parameters infos:
// int                            GP                             ( CPF_Parm )

void ATrPlayerReplicationInfo::SetPlayerGP ( int GP )
{
	static UFunction* pFnSetPlayerGP = NULL;

	if ( ! pFnSetPlayerGP )
		pFnSetPlayerGP = (UFunction*) UObject::GObjObjects()->Data[ 100549 ];

	ATrPlayerReplicationInfo_execSetPlayerGP_Parms SetPlayerGP_Parms;
	SetPlayerGP_Parms.GP = GP;

	this->ProcessEvent ( pFnSetPlayerGP, &SetPlayerGP_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetBaseXP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerReplicationInfo::GetBaseXP ( )
{
	static UFunction* pFnGetBaseXP = NULL;

	if ( ! pFnGetBaseXP )
		pFnGetBaseXP = (UFunction*) UObject::GObjObjects()->Data[ 100547 ];

	ATrPlayerReplicationInfo_execGetBaseXP_Parms GetBaseXP_Parms;

	this->ProcessEvent ( pFnGetBaseXP, &GetBaseXP_Parms, NULL );

	return GetBaseXP_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetBaseGP
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerReplicationInfo::GetBaseGP ( )
{
	static UFunction* pFnGetBaseGP = NULL;

	if ( ! pFnGetBaseGP )
		pFnGetBaseGP = (UFunction*) UObject::GObjObjects()->Data[ 100545 ];

	ATrPlayerReplicationInfo_execGetBaseGP_Parms GetBaseGP_Parms;

	this->ProcessEvent ( pFnGetBaseGP, &GetBaseGP_Parms, NULL );

	return GetBaseGP_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetRankIcon
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerReplicationInfo::GetRankIcon ( )
{
	static UFunction* pFnGetRankIcon = NULL;

	if ( ! pFnGetRankIcon )
		pFnGetRankIcon = (UFunction*) UObject::GObjObjects()->Data[ 63300 ];

	ATrPlayerReplicationInfo_execGetRankIcon_Parms GetRankIcon_Parms;

	this->ProcessEvent ( pFnGetRankIcon, &GetRankIcon_Parms, NULL );

	return GetRankIcon_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetPlayerRankNum
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerReplicationInfo::GetPlayerRankNum ( )
{
	static UFunction* pFnGetPlayerRankNum = NULL;

	if ( ! pFnGetPlayerRankNum )
		pFnGetPlayerRankNum = (UFunction*) UObject::GObjObjects()->Data[ 100543 ];

	ATrPlayerReplicationInfo_execGetPlayerRankNum_Parms GetPlayerRankNum_Parms;

	this->ProcessEvent ( pFnGetPlayerRankNum, &GetPlayerRankNum_Parms, NULL );

	return GetPlayerRankNum_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetPlayerRank
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrPlayerReplicationInfo::GetPlayerRank ( )
{
	static UFunction* pFnGetPlayerRank = NULL;

	if ( ! pFnGetPlayerRank )
		pFnGetPlayerRank = (UFunction*) UObject::GObjObjects()->Data[ 53725 ];

	ATrPlayerReplicationInfo_execGetPlayerRank_Parms GetPlayerRank_Parms;

	this->ProcessEvent ( pFnGetPlayerRank, &GetPlayerRank_Parms, NULL );

	return GetPlayerRank_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetCurrentClassAbb
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrPlayerReplicationInfo::GetCurrentClassAbb ( )
{
	static UFunction* pFnGetCurrentClassAbb = NULL;

	if ( ! pFnGetCurrentClassAbb )
		pFnGetCurrentClassAbb = (UFunction*) UObject::GObjObjects()->Data[ 100541 ];

	ATrPlayerReplicationInfo_execGetCurrentClassAbb_Parms GetCurrentClassAbb_Parms;

	this->ProcessEvent ( pFnGetCurrentClassAbb, &GetCurrentClassAbb_Parms, NULL );

	return GetCurrentClassAbb_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetPendingClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrPlayerReplicationInfo::GetPendingClass ( )
{
	static UFunction* pFnGetPendingClass = NULL;

	if ( ! pFnGetPendingClass )
		pFnGetPendingClass = (UFunction*) UObject::GObjObjects()->Data[ 97397 ];

	ATrPlayerReplicationInfo_execGetPendingClass_Parms GetPendingClass_Parms;

	this->ProcessEvent ( pFnGetPendingClass, &GetPendingClass_Parms, NULL );

	return GetPendingClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetCurrentClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrPlayerReplicationInfo::GetCurrentClass ( )
{
	static UFunction* pFnGetCurrentClass = NULL;

	if ( ! pFnGetCurrentClass )
		pFnGetCurrentClass = (UFunction*) UObject::GObjObjects()->Data[ 53727 ];

	ATrPlayerReplicationInfo_execGetCurrentClass_Parms GetCurrentClass_Parms;

	this->ProcessEvent ( pFnGetCurrentClass, &GetCurrentClass_Parms, NULL );

	return GetCurrentClass_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetPlayerClassId
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrPlayerReplicationInfo::GetPlayerClassId ( )
{
	static UFunction* pFnGetPlayerClassId = NULL;

	if ( ! pFnGetPlayerClassId )
		pFnGetPlayerClassId = (UFunction*) UObject::GObjObjects()->Data[ 100539 ];

	ATrPlayerReplicationInfo_execGetPlayerClassId_Parms GetPlayerClassId_Parms;

	this->ProcessEvent ( pFnGetPlayerClassId, &GetPlayerClassId_Parms, NULL );

	return GetPlayerClassId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.CheckMultiKill
// [0x00020002] 
// Parameters infos:

void ATrPlayerReplicationInfo::CheckMultiKill ( )
{
	static UFunction* pFnCheckMultiKill = NULL;

	if ( ! pFnCheckMultiKill )
		pFnCheckMultiKill = (UFunction*) UObject::GObjObjects()->Data[ 100537 ];

	ATrPlayerReplicationInfo_execCheckMultiKill_Parms CheckMultiKill_Parms;

	this->ProcessEvent ( pFnCheckMultiKill, &CheckMultiKill_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.IncrementKills
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnemyKill                     ( CPF_Parm )

void ATrPlayerReplicationInfo::IncrementKills ( unsigned long bEnemyKill )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 100535 ];

	ATrPlayerReplicationInfo_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.bEnemyKill = bEnemyKill;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.SetActiveEquip
// [0x00020002] 
// Parameters infos:
// unsigned char                  EquipId                        ( CPF_Parm )
// int                            ItemId                         ( CPF_Parm )

void ATrPlayerReplicationInfo::SetActiveEquip ( unsigned char EquipId, int ItemId )
{
	static UFunction* pFnSetActiveEquip = NULL;

	if ( ! pFnSetActiveEquip )
		pFnSetActiveEquip = (UFunction*) UObject::GObjObjects()->Data[ 100532 ];

	ATrPlayerReplicationInfo_execSetActiveEquip_Parms SetActiveEquip_Parms;
	SetActiveEquip_Parms.EquipId = EquipId;
	SetActiveEquip_Parms.ItemId = ItemId;

	this->ProcessEvent ( pFnSetActiveEquip, &SetActiveEquip_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetEquipPointByWeaponId
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WeaponId                       ( CPF_Parm )

unsigned char ATrPlayerReplicationInfo::GetEquipPointByWeaponId ( int WeaponId )
{
	static UFunction* pFnGetEquipPointByWeaponId = NULL;

	if ( ! pFnGetEquipPointByWeaponId )
		pFnGetEquipPointByWeaponId = (UFunction*) UObject::GObjObjects()->Data[ 67534 ];

	ATrPlayerReplicationInfo_execGetEquipPointByWeaponId_Parms GetEquipPointByWeaponId_Parms;
	GetEquipPointByWeaponId_Parms.WeaponId = WeaponId;

	this->ProcessEvent ( pFnGetEquipPointByWeaponId, &GetEquipPointByWeaponId_Parms, NULL );

	return GetEquipPointByWeaponId_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetEquipDevice
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// unsigned char                  equipSlot                      ( CPF_Parm )

class UClass* ATrPlayerReplicationInfo::GetEquipDevice ( class UClass* FamilyInfo, unsigned char equipSlot )
{
	static UFunction* pFnGetEquipDevice = NULL;

	if ( ! pFnGetEquipDevice )
		pFnGetEquipDevice = (UFunction*) UObject::GObjObjects()->Data[ 53729 ];

	ATrPlayerReplicationInfo_execGetEquipDevice_Parms GetEquipDevice_Parms;
	GetEquipDevice_Parms.FamilyInfo = FamilyInfo;
	GetEquipDevice_Parms.equipSlot = equipSlot;

	this->ProcessEvent ( pFnGetEquipDevice, &GetEquipDevice_Parms, NULL );

	return GetEquipDevice_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.ResolveDefaultEquip
// [0x00020002] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )

void ATrPlayerReplicationInfo::ResolveDefaultEquip ( class UClass* FamilyInfo )
{
	static UFunction* pFnResolveDefaultEquip = NULL;

	if ( ! pFnResolveDefaultEquip )
		pFnResolveDefaultEquip = (UFunction*) UObject::GObjObjects()->Data[ 100519 ];

	ATrPlayerReplicationInfo_execResolveDefaultEquip_Parms ResolveDefaultEquip_Parms;
	ResolveDefaultEquip_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnResolveDefaultEquip, &ResolveDefaultEquip_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.ShouldVisitStation
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPlayerReplicationInfo::ShouldVisitStation ( )
{
	static UFunction* pFnShouldVisitStation = NULL;

	if ( ! pFnShouldVisitStation )
		pFnShouldVisitStation = (UFunction*) UObject::GObjObjects()->Data[ 100517 ];

	ATrPlayerReplicationInfo_execShouldVisitStation_Parms ShouldVisitStation_Parms;

	this->ProcessEvent ( pFnShouldVisitStation, &ShouldVisitStation_Parms, NULL );

	return ShouldVisitStation_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetSelectedLoadout
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrPlayerReplicationInfo::GetSelectedLoadout ( )
{
	static UFunction* pFnGetSelectedLoadout = NULL;

	if ( ! pFnGetSelectedLoadout )
		pFnGetSelectedLoadout = (UFunction*) UObject::GObjObjects()->Data[ 100515 ];

	ATrPlayerReplicationInfo_execGetSelectedLoadout_Parms GetSelectedLoadout_Parms;

	this->ProcessEvent ( pFnGetSelectedLoadout, &GetSelectedLoadout_Parms, NULL );

	return GetSelectedLoadout_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.RequestLoadoutChange
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool ATrPlayerReplicationInfo::RequestLoadoutChange ( class UClass* FamilyInfo, int Loadout )
{
	static UFunction* pFnRequestLoadoutChange = NULL;

	if ( ! pFnRequestLoadoutChange )
		pFnRequestLoadoutChange = (UFunction*) UObject::GObjObjects()->Data[ 76417 ];

	ATrPlayerReplicationInfo_execRequestLoadoutChange_Parms RequestLoadoutChange_Parms;
	RequestLoadoutChange_Parms.FamilyInfo = FamilyInfo;
	RequestLoadoutChange_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnRequestLoadoutChange, &RequestLoadoutChange_Parms, NULL );

	return RequestLoadoutChange_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.VerifyAndLoadCharacter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool ATrPlayerReplicationInfo::VerifyAndLoadCharacter ( class UClass* FamilyInfo, int Loadout )
{
	static UFunction* pFnVerifyAndLoadCharacter = NULL;

	if ( ! pFnVerifyAndLoadCharacter )
		pFnVerifyAndLoadCharacter = (UFunction*) UObject::GObjObjects()->Data[ 100502 ];

	ATrPlayerReplicationInfo_execVerifyAndLoadCharacter_Parms VerifyAndLoadCharacter_Parms;
	VerifyAndLoadCharacter_Parms.FamilyInfo = FamilyInfo;
	VerifyAndLoadCharacter_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnVerifyAndLoadCharacter, &VerifyAndLoadCharacter_Parms, NULL );

	return VerifyAndLoadCharacter_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.SwapToPendingCharClass
// [0x00024002] 
// Parameters infos:
// unsigned long                  bIsRespawn                     ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerReplicationInfo::SwapToPendingCharClass ( unsigned long bIsRespawn )
{
	static UFunction* pFnSwapToPendingCharClass = NULL;

	if ( ! pFnSwapToPendingCharClass )
		pFnSwapToPendingCharClass = (UFunction*) UObject::GObjObjects()->Data[ 100493 ];

	ATrPlayerReplicationInfo_execSwapToPendingCharClass_Parms SwapToPendingCharClass_Parms;
	SwapToPendingCharClass_Parms.bIsRespawn = bIsRespawn;

	this->ProcessEvent ( pFnSwapToPendingCharClass, &SwapToPendingCharClass_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetArmorType
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrPlayerReplicationInfo::eventGetArmorType ( )
{
	static UFunction* pFnGetArmorType = NULL;

	if ( ! pFnGetArmorType )
		pFnGetArmorType = (UFunction*) UObject::GObjObjects()->Data[ 72082 ];

	ATrPlayerReplicationInfo_eventGetArmorType_Parms GetArmorType_Parms;

	this->ProcessEvent ( pFnGetArmorType, &GetArmorType_Parms, NULL );

	return GetArmorType_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.SetPlayerTeam
// [0x00020002] 
// Parameters infos:
// class ATeamInfo*               NewTeam                        ( CPF_Parm )

void ATrPlayerReplicationInfo::SetPlayerTeam ( class ATeamInfo* NewTeam )
{
	static UFunction* pFnSetPlayerTeam = NULL;

	if ( ! pFnSetPlayerTeam )
		pFnSetPlayerTeam = (UFunction*) UObject::GObjObjects()->Data[ 100488 ];

	ATrPlayerReplicationInfo_execSetPlayerTeam_Parms SetPlayerTeam_Parms;
	SetPlayerTeam_Parms.NewTeam = NewTeam;

	this->ProcessEvent ( pFnSetPlayerTeam, &SetPlayerTeam_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.Reset
// [0x00020002] 
// Parameters infos:

void ATrPlayerReplicationInfo::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 100487 ];

	ATrPlayerReplicationInfo_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.GetCurrentValueModifier
// [0x00020102] 
// Parameters infos:
// class UTrValueModifier*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTrValueModifier* ATrPlayerReplicationInfo::GetCurrentValueModifier ( )
{
	static UFunction* pFnGetCurrentValueModifier = NULL;

	if ( ! pFnGetCurrentValueModifier )
		pFnGetCurrentValueModifier = (UFunction*) UObject::GObjObjects()->Data[ 67012 ];

	ATrPlayerReplicationInfo_execGetCurrentValueModifier_Parms GetCurrentValueModifier_Parms;

	this->ProcessEvent ( pFnGetCurrentValueModifier, &GetCurrentValueModifier_Parms, NULL );

	return GetCurrentValueModifier_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.UpdateValueModifier
// [0x00020122] 
// Parameters infos:

void ATrPlayerReplicationInfo::UpdateValueModifier ( )
{
	static UFunction* pFnUpdateValueModifier = NULL;

	if ( ! pFnUpdateValueModifier )
		pFnUpdateValueModifier = (UFunction*) UObject::GObjObjects()->Data[ 100481 ];

	ATrPlayerReplicationInfo_execUpdateValueModifier_Parms UpdateValueModifier_Parms;

	this->ProcessEvent ( pFnUpdateValueModifier, &UpdateValueModifier_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.RegisterPlayerWithSession
// [0x00020102] 
// Parameters infos:

void ATrPlayerReplicationInfo::RegisterPlayerWithSession ( )
{
	static UFunction* pFnRegisterPlayerWithSession = NULL;

	if ( ! pFnRegisterPlayerWithSession )
		pFnRegisterPlayerWithSession = (UFunction*) UObject::GObjObjects()->Data[ 100480 ];

	ATrPlayerReplicationInfo_execRegisterPlayerWithSession_Parms RegisterPlayerWithSession_Parms;

	this->ProcessEvent ( pFnRegisterPlayerWithSession, &RegisterPlayerWithSession_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerReplicationInfo::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 100479 ];

	ATrPlayerReplicationInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrPlayerReplicationInfo::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 100474 ];

	ATrPlayerReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerReplicationInfo.Load1PData
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ContentPath                    ( CPF_Parm | CPF_NeedCtorLink )

class UClass* ATrPlayerReplicationInfo::Load1PData ( struct FString ContentPath )
{
	static UFunction* pFnLoad1PData = NULL;

	if ( ! pFnLoad1PData )
		pFnLoad1PData = (UFunction*) UObject::GObjObjects()->Data[ 100471 ];

	ATrPlayerReplicationInfo_execLoad1PData_Parms Load1PData_Parms;
	memcpy ( &Load1PData_Parms.ContentPath, &ContentPath, 0xC );

	pFnLoad1PData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoad1PData, &Load1PData_Parms, NULL );

	pFnLoad1PData->FunctionFlags |= 0x400;

	return Load1PData_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.RegisterBuddy
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrPlayerReplicationInfo::RegisterBuddy ( )
{
	static UFunction* pFnRegisterBuddy = NULL;

	if ( ! pFnRegisterBuddy )
		pFnRegisterBuddy = (UFunction*) UObject::GObjObjects()->Data[ 100470 ];

	ATrPlayerReplicationInfo_execRegisterBuddy_Parms RegisterBuddy_Parms;

	pFnRegisterBuddy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegisterBuddy, &RegisterBuddy_Parms, NULL );

	pFnRegisterBuddy->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerReplicationInfo.UpdatePing
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          TimeStamp                      ( CPF_Parm )

void ATrPlayerReplicationInfo::UpdatePing ( float TimeStamp )
{
	static UFunction* pFnUpdatePing = NULL;

	if ( ! pFnUpdatePing )
		pFnUpdatePing = (UFunction*) UObject::GObjObjects()->Data[ 100468 ];

	ATrPlayerReplicationInfo_execUpdatePing_Parms UpdatePing_Parms;
	UpdatePing_Parms.TimeStamp = TimeStamp;

	pFnUpdatePing->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdatePing, &UpdatePing_Parms, NULL );

	pFnUpdatePing->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerReplicationInfo.GetUpgradeLevelLocal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// TArray< int >                  UpgradeList                    ( CPF_Parm | CPF_NeedCtorLink )

int ATrPlayerReplicationInfo::GetUpgradeLevelLocal ( int ClassId, int Type, TArray< int > UpgradeList )
{
	static UFunction* pFnGetUpgradeLevelLocal = NULL;

	if ( ! pFnGetUpgradeLevelLocal )
		pFnGetUpgradeLevelLocal = (UFunction*) UObject::GObjObjects()->Data[ 100462 ];

	ATrPlayerReplicationInfo_execGetUpgradeLevelLocal_Parms GetUpgradeLevelLocal_Parms;
	GetUpgradeLevelLocal_Parms.ClassId = ClassId;
	GetUpgradeLevelLocal_Parms.Type = Type;
	memcpy ( &GetUpgradeLevelLocal_Parms.UpgradeList, &UpgradeList, 0xC );

	pFnGetUpgradeLevelLocal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpgradeLevelLocal, &GetUpgradeLevelLocal_Parms, NULL );

	pFnGetUpgradeLevelLocal->FunctionFlags |= 0x400;

	return GetUpgradeLevelLocal_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetUpgradeLevel
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )
// TArray< int >                  UpgradeList                    ( CPF_Parm | CPF_NeedCtorLink )

int ATrPlayerReplicationInfo::GetUpgradeLevel ( int ClassId, int Type, TArray< int > UpgradeList )
{
	static UFunction* pFnGetUpgradeLevel = NULL;

	if ( ! pFnGetUpgradeLevel )
		pFnGetUpgradeLevel = (UFunction*) UObject::GObjObjects()->Data[ 100456 ];

	ATrPlayerReplicationInfo_execGetUpgradeLevel_Parms GetUpgradeLevel_Parms;
	GetUpgradeLevel_Parms.ClassId = ClassId;
	GetUpgradeLevel_Parms.Type = Type;
	memcpy ( &GetUpgradeLevel_Parms.UpgradeList, &UpgradeList, 0xC );

	pFnGetUpgradeLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetUpgradeLevel, &GetUpgradeLevel_Parms, NULL );

	pFnGetUpgradeLevel->FunctionFlags |= 0x400;

	return GetUpgradeLevel_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerReplicationInfo.GetCharacterEquipLocal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

void ATrPlayerReplicationInfo::GetCharacterEquipLocal ( int ClassId, int Loadout )
{
	static UFunction* pFnGetCharacterEquipLocal = NULL;

	if ( ! pFnGetCharacterEquipLocal )
		pFnGetCharacterEquipLocal = (UFunction*) UObject::GObjObjects()->Data[ 100453 ];

	ATrPlayerReplicationInfo_execGetCharacterEquipLocal_Parms GetCharacterEquipLocal_Parms;
	GetCharacterEquipLocal_Parms.ClassId = ClassId;
	GetCharacterEquipLocal_Parms.Loadout = Loadout;

	pFnGetCharacterEquipLocal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterEquipLocal, &GetCharacterEquipLocal_Parms, NULL );

	pFnGetCharacterEquipLocal->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerReplicationInfo.GetCharacterEquip
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

void ATrPlayerReplicationInfo::GetCharacterEquip ( int ClassId, int Loadout )
{
	static UFunction* pFnGetCharacterEquip = NULL;

	if ( ! pFnGetCharacterEquip )
		pFnGetCharacterEquip = (UFunction*) UObject::GObjObjects()->Data[ 100450 ];

	ATrPlayerReplicationInfo_execGetCharacterEquip_Parms GetCharacterEquip_Parms;
	GetCharacterEquip_Parms.ClassId = ClassId;
	GetCharacterEquip_Parms.Loadout = Loadout;

	pFnGetCharacterEquip->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCharacterEquip, &GetCharacterEquip_Parms, NULL );

	pFnGetCharacterEquip->FunctionFlags |= 0x400;
};

// Function TribesGame.TrPlayerReplicationInfo.VerifyCharacter
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

bool ATrPlayerReplicationInfo::VerifyCharacter ( int ClassId )
{
	static UFunction* pFnVerifyCharacter = NULL;

	if ( ! pFnVerifyCharacter )
		pFnVerifyCharacter = (UFunction*) UObject::GObjObjects()->Data[ 100447 ];

	ATrPlayerReplicationInfo_execVerifyCharacter_Parms VerifyCharacter_Parms;
	VerifyCharacter_Parms.ClassId = ClassId;

	pFnVerifyCharacter->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVerifyCharacter, &VerifyCharacter_Parms, NULL );

	pFnVerifyCharacter->FunctionFlags |= 0x400;

	return VerifyCharacter_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProjectile::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 106820 ];

	ATrProjectile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProjectile.Touch
// [0x00020922] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProjectile::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 106815 ];

	ATrProjectile_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrProjectile.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProjectile::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 106805 ];

	ATrProjectile_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProjectile.HurtRadius_Internal
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DamageAmount                   ( CPF_Parm )
// float                          InDamageRadius                 ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// struct FVector                 AltHurtOrigin                  ( CPF_Parm )
// class AActor*                  IgnoredActor                   ( CPF_OptionalParm | CPF_Parm )
// class AController*             InstigatedByController         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoFullDamage                  ( CPF_OptionalParm | CPF_Parm )

bool ATrProjectile::HurtRadius_Internal ( float DamageAmount, float InDamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, struct FVector AltHurtOrigin, class AActor* IgnoredActor, class AController* InstigatedByController, unsigned long bDoFullDamage )
{
	static UFunction* pFnHurtRadius_Internal = NULL;

	if ( ! pFnHurtRadius_Internal )
		pFnHurtRadius_Internal = (UFunction*) UObject::GObjObjects()->Data[ 106783 ];

	ATrProjectile_execHurtRadius_Internal_Parms HurtRadius_Internal_Parms;
	HurtRadius_Internal_Parms.DamageAmount = DamageAmount;
	HurtRadius_Internal_Parms.InDamageRadius = InDamageRadius;
	HurtRadius_Internal_Parms.DamageType = DamageType;
	HurtRadius_Internal_Parms.Momentum = Momentum;
	memcpy ( &HurtRadius_Internal_Parms.HurtOrigin, &HurtOrigin, 0xC );
	memcpy ( &HurtRadius_Internal_Parms.AltHurtOrigin, &AltHurtOrigin, 0xC );
	HurtRadius_Internal_Parms.IgnoredActor = IgnoredActor;
	HurtRadius_Internal_Parms.InstigatedByController = InstigatedByController;
	HurtRadius_Internal_Parms.bDoFullDamage = bDoFullDamage;

	this->ProcessEvent ( pFnHurtRadius_Internal, &HurtRadius_Internal_Parms, NULL );

	return HurtRadius_Internal_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.ProjectileHurtRadius
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProjectile::ProjectileHurtRadius ( struct FVector HurtOrigin, struct FVector HitNormal )
{
	static UFunction* pFnProjectileHurtRadius = NULL;

	if ( ! pFnProjectileHurtRadius )
		pFnProjectileHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 106774 ];

	ATrProjectile_execProjectileHurtRadius_Parms ProjectileHurtRadius_Parms;
	memcpy ( &ProjectileHurtRadius_Parms.HurtOrigin, &HurtOrigin, 0xC );
	memcpy ( &ProjectileHurtRadius_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProjectileHurtRadius, &ProjectileHurtRadius_Parms, NULL );

	return ProjectileHurtRadius_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.Bounce
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 WallNormal                     ( CPF_Parm )

void ATrProjectile::Bounce ( class AActor* Other, struct FVector WallNormal )
{
	static UFunction* pFnBounce = NULL;

	if ( ! pFnBounce )
		pFnBounce = (UFunction*) UObject::GObjObjects()->Data[ 106771 ];

	ATrProjectile_execBounce_Parms Bounce_Parms;
	Bounce_Parms.Other = Other;
	memcpy ( &Bounce_Parms.WallNormal, &WallNormal, 0xC );

	this->ProcessEvent ( pFnBounce, &Bounce_Parms, NULL );
};

// Function TribesGame.TrProjectile.ShutDown
// [0x00020102] 
// Parameters infos:

void ATrProjectile::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 106769 ];

	ATrProjectile_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function TribesGame.TrProjectile.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProjectile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 106766 ];

	ATrProjectile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProjectile.GetExplosionSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

class USoundCue* ATrProjectile::GetExplosionSound ( class UPhysicalMaterial* HitMaterial, class AActor* HitActor )
{
	static UFunction* pFnGetExplosionSound = NULL;

	if ( ! pFnGetExplosionSound )
		pFnGetExplosionSound = (UFunction*) UObject::GObjObjects()->Data[ 106758 ];

	ATrProjectile_execGetExplosionSound_Parms GetExplosionSound_Parms;
	GetExplosionSound_Parms.HitMaterial = HitMaterial;
	GetExplosionSound_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetExplosionSound, &GetExplosionSound_Parms, NULL );

	return GetExplosionSound_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.SpawnExplosionEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProjectile::SpawnExplosionEffects ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnSpawnExplosionEffects = NULL;

	if ( ! pFnSpawnExplosionEffects )
		pFnSpawnExplosionEffects = (UFunction*) UObject::GObjObjects()->Data[ 106744 ];

	ATrProjectile_execSpawnExplosionEffects_Parms SpawnExplosionEffects_Parms;
	memcpy ( &SpawnExplosionEffects_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnExplosionEffects_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnSpawnExplosionEffects, &SpawnExplosionEffects_Parms, NULL );
};

// Function TribesGame.TrProjectile.ClientCheckFastSpawnExplode
// [0x00820102] 
// Parameters infos:

void ATrProjectile::ClientCheckFastSpawnExplode ( )
{
	static UFunction* pFnClientCheckFastSpawnExplode = NULL;

	if ( ! pFnClientCheckFastSpawnExplode )
		pFnClientCheckFastSpawnExplode = (UFunction*) UObject::GObjObjects()->Data[ 106740 ];

	ATrProjectile_execClientCheckFastSpawnExplode_Parms ClientCheckFastSpawnExplode_Parms;

	this->ProcessEvent ( pFnClientCheckFastSpawnExplode, &ClientCheckFastSpawnExplode_Parms, NULL );
};

// Function TribesGame.TrProjectile.ApplyInheritance
// [0x00020102] 
// Parameters infos:
// struct FVector                 ProjectileDir                  ( CPF_Parm )

void ATrProjectile::ApplyInheritance ( struct FVector ProjectileDir )
{
	static UFunction* pFnApplyInheritance = NULL;

	if ( ! pFnApplyInheritance )
		pFnApplyInheritance = (UFunction*) UObject::GObjObjects()->Data[ 106736 ];

	ATrProjectile_execApplyInheritance_Parms ApplyInheritance_Parms;
	memcpy ( &ApplyInheritance_Parms.ProjectileDir, &ProjectileDir, 0xC );

	this->ProcessEvent ( pFnApplyInheritance, &ApplyInheritance_Parms, NULL );
};

// Function TribesGame.TrProjectile.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProjectile::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 106733 ];

	ATrProjectile_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProjectile.Init
// [0x00020022] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ATrProjectile::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 106731 ];

	ATrProjectile_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrProjectile.GetMaxDeployedLimit
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrProjectile::GetMaxDeployedLimit ( )
{
	static UFunction* pFnGetMaxDeployedLimit = NULL;

	if ( ! pFnGetMaxDeployedLimit )
		pFnGetMaxDeployedLimit = (UFunction*) UObject::GObjObjects()->Data[ 106725 ];

	ATrProjectile_execGetMaxDeployedLimit_Parms GetMaxDeployedLimit_Parms;

	this->ProcessEvent ( pFnGetMaxDeployedLimit, &GetMaxDeployedLimit_Parms, NULL );

	return GetMaxDeployedLimit_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.DestroyOldestOverLimit
// [0x00020102] 
// Parameters infos:

void ATrProjectile::DestroyOldestOverLimit ( )
{
	static UFunction* pFnDestroyOldestOverLimit = NULL;

	if ( ! pFnDestroyOldestOverLimit )
		pFnDestroyOldestOverLimit = (UFunction*) UObject::GObjObjects()->Data[ 106718 ];

	ATrProjectile_execDestroyOldestOverLimit_Parms DestroyOldestOverLimit_Parms;

	this->ProcessEvent ( pFnDestroyOldestOverLimit, &DestroyOldestOverLimit_Parms, NULL );
};

// Function TribesGame.TrProjectile.DetonateObsolete
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDetonateFromAOE               ( CPF_OptionalParm | CPF_Parm )

void ATrProjectile::DetonateObsolete ( unsigned long bDetonateFromAOE )
{
	static UFunction* pFnDetonateObsolete = NULL;

	if ( ! pFnDetonateObsolete )
		pFnDetonateObsolete = (UFunction*) UObject::GObjObjects()->Data[ 106716 ];

	ATrProjectile_execDetonateObsolete_Parms DetonateObsolete_Parms;
	DetonateObsolete_Parms.bDetonateFromAOE = bDetonateFromAOE;

	this->ProcessEvent ( pFnDetonateObsolete, &DetonateObsolete_Parms, NULL );
};

// Function TribesGame.TrProjectile.CreateProjectileLight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProjectile::eventCreateProjectileLight ( )
{
	static UFunction* pFnCreateProjectileLight = NULL;

	if ( ! pFnCreateProjectileLight )
		pFnCreateProjectileLight = (UFunction*) UObject::GObjObjects()->Data[ 106715 ];

	ATrProjectile_eventCreateProjectileLight_Parms CreateProjectileLight_Parms;

	this->ProcessEvent ( pFnCreateProjectileLight, &CreateProjectileLight_Parms, NULL );
};

// Function TribesGame.TrProjectile.ClientReceivedProjectileToTether
// [0x00020102] 
// Parameters infos:

void ATrProjectile::ClientReceivedProjectileToTether ( )
{
	static UFunction* pFnClientReceivedProjectileToTether = NULL;

	if ( ! pFnClientReceivedProjectileToTether )
		pFnClientReceivedProjectileToTether = (UFunction*) UObject::GObjObjects()->Data[ 106709 ];

	ATrProjectile_execClientReceivedProjectileToTether_Parms ClientReceivedProjectileToTether_Parms;

	this->ProcessEvent ( pFnClientReceivedProjectileToTether, &ClientReceivedProjectileToTether_Parms, NULL );
};

// Function TribesGame.TrProjectile.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProjectile::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 106706 ];

	ATrProjectile_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProjectile.ExplodeFromTimeLimit
// [0x00020002] 
// Parameters infos:

void ATrProjectile::ExplodeFromTimeLimit ( )
{
	static UFunction* pFnExplodeFromTimeLimit = NULL;

	if ( ! pFnExplodeFromTimeLimit )
		pFnExplodeFromTimeLimit = (UFunction*) UObject::GObjObjects()->Data[ 106705 ];

	ATrProjectile_execExplodeFromTimeLimit_Parms ExplodeFromTimeLimit_Parms;

	this->ProcessEvent ( pFnExplodeFromTimeLimit, &ExplodeFromTimeLimit_Parms, NULL );
};

// Function TribesGame.TrProjectile.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrProjectile::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 106703 ];

	ATrProjectile_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProjectile.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrProjectile::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 106701 ];

	ATrProjectile_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrProjectile.CalculateHitLocation
// [0x00022400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  shooter                        ( CPF_Parm )
// struct FVector                 ShotDirection                  ( CPF_Parm )
// struct FVector                 ShotLocation                   ( CPF_Parm )
// float                          ClampedMaxSpeed                ( CPF_Parm )

struct FVector ATrProjectile::CalculateHitLocation ( class AActor* shooter, struct FVector ShotDirection, struct FVector ShotLocation, float ClampedMaxSpeed )
{
	static UFunction* pFnCalculateHitLocation = NULL;

	if ( ! pFnCalculateHitLocation )
		pFnCalculateHitLocation = (UFunction*) UObject::GObjObjects()->Data[ 106695 ];

	ATrProjectile_execCalculateHitLocation_Parms CalculateHitLocation_Parms;
	CalculateHitLocation_Parms.shooter = shooter;
	memcpy ( &CalculateHitLocation_Parms.ShotDirection, &ShotDirection, 0xC );
	memcpy ( &CalculateHitLocation_Parms.ShotLocation, &ShotLocation, 0xC );
	CalculateHitLocation_Parms.ClampedMaxSpeed = ClampedMaxSpeed;

	pFnCalculateHitLocation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCalculateHitLocation, &CalculateHitLocation_Parms, NULL );

	pFnCalculateHitLocation->FunctionFlags |= 0x400;

	return CalculateHitLocation_Parms.ReturnValue;
};

// Function TribesGame.TrProjectile.OrientToSlope
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProjectile::OrientToSlope ( struct FVector HitNormal )
{
	static UFunction* pFnOrientToSlope = NULL;

	if ( ! pFnOrientToSlope )
		pFnOrientToSlope = (UFunction*) UObject::GObjObjects()->Data[ 106693 ];

	ATrProjectile_execOrientToSlope_Parms OrientToSlope_Parms;
	memcpy ( &OrientToSlope_Parms.HitNormal, &HitNormal, 0xC );

	pFnOrientToSlope->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOrientToSlope, &OrientToSlope_Parms, NULL );

	pFnOrientToSlope->FunctionFlags |= 0x400;
};

// Function TribesGame.TrProjectile.IsBlockedByBlocker
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  DamageInstigator               ( CPF_Parm )
// class AActor*                  Target                         ( CPF_Parm )
// class AActor*                  OriginActor                    ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  CheckWorldGeometry             ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 AltOriginLocation              ( CPF_OptionalParm | CPF_Parm )

bool ATrProjectile::IsBlockedByBlocker ( class AActor* DamageInstigator, class AActor* Target, class AActor* OriginActor, unsigned long CheckWorldGeometry, struct FVector AltOriginLocation )
{
	static UFunction* pFnIsBlockedByBlocker = NULL;

	if ( ! pFnIsBlockedByBlocker )
		pFnIsBlockedByBlocker = (UFunction*) UObject::GObjObjects()->Data[ 71394 ];

	ATrProjectile_execIsBlockedByBlocker_Parms IsBlockedByBlocker_Parms;
	IsBlockedByBlocker_Parms.DamageInstigator = DamageInstigator;
	IsBlockedByBlocker_Parms.Target = Target;
	IsBlockedByBlocker_Parms.OriginActor = OriginActor;
	IsBlockedByBlocker_Parms.CheckWorldGeometry = CheckWorldGeometry;
	memcpy ( &IsBlockedByBlocker_Parms.AltOriginLocation, &AltOriginLocation, 0xC );

	pFnIsBlockedByBlocker->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnIsBlockedByBlocker, &IsBlockedByBlocker_Parms, NULL );

	pFnIsBlockedByBlocker->FunctionFlags |= 0x400;

	return IsBlockedByBlocker_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Grenade.NativeExplode
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Grenade::eventNativeExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnNativeExplode = NULL;

	if ( ! pFnNativeExplode )
		pFnNativeExplode = (UFunction*) UObject::GObjObjects()->Data[ 106904 ];

	ATrProj_Grenade_eventNativeExplode_Parms NativeExplode_Parms;
	memcpy ( &NativeExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &NativeExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNativeExplode, &NativeExplode_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.PawnLeftDetonationArea
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_Grenade::PawnLeftDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnLeftDetonationArea = NULL;

	if ( ! pFnPawnLeftDetonationArea )
		pFnPawnLeftDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 106902 ];

	ATrProj_Grenade_execPawnLeftDetonationArea_Parms PawnLeftDetonationArea_Parms;
	PawnLeftDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeftDetonationArea, &PawnLeftDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.PawnEnteredDetonationArea
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_Grenade::PawnEnteredDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredDetonationArea = NULL;

	if ( ! pFnPawnEnteredDetonationArea )
		pFnPawnEnteredDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 106900 ];

	ATrProj_Grenade_execPawnEnteredDetonationArea_Parms PawnEnteredDetonationArea_Parms;
	PawnEnteredDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredDetonationArea, &PawnEnteredDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.MyOnParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ATrProj_Grenade::MyOnParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnMyOnParticleSystemFinished = NULL;

	if ( ! pFnMyOnParticleSystemFinished )
		pFnMyOnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 106898 ];

	ATrProj_Grenade_execMyOnParticleSystemFinished_Parms MyOnParticleSystemFinished_Parms;
	MyOnParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnMyOnParticleSystemFinished, &MyOnParticleSystemFinished_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.PlayStuckOnEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::PlayStuckOnEffects ( )
{
	static UFunction* pFnPlayStuckOnEffects = NULL;

	if ( ! pFnPlayStuckOnEffects )
		pFnPlayStuckOnEffects = (UFunction*) UObject::GObjObjects()->Data[ 106896 ];

	ATrProj_Grenade_execPlayStuckOnEffects_Parms PlayStuckOnEffects_Parms;

	this->ProcessEvent ( pFnPlayStuckOnEffects, &PlayStuckOnEffects_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.StickToTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProj_Grenade::StickToTarget ( class AActor* Target, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStickToTarget = NULL;

	if ( ! pFnStickToTarget )
		pFnStickToTarget = (UFunction*) UObject::GObjObjects()->Data[ 106890 ];

	ATrProj_Grenade_execStickToTarget_Parms StickToTarget_Parms;
	StickToTarget_Parms.Target = Target;
	memcpy ( &StickToTarget_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &StickToTarget_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStickToTarget, &StickToTarget_Parms, NULL );

	return StickToTarget_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Grenade.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Grenade::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 106887 ];

	ATrProj_Grenade_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.PhysicsVolumeChange
// [0x00020102] 
// Parameters infos:
// class APhysicsVolume*          NewVolume                      ( CPF_Parm )

void ATrProj_Grenade::PhysicsVolumeChange ( class APhysicsVolume* NewVolume )
{
	static UFunction* pFnPhysicsVolumeChange = NULL;

	if ( ! pFnPhysicsVolumeChange )
		pFnPhysicsVolumeChange = (UFunction*) UObject::GObjObjects()->Data[ 106885 ];

	ATrProj_Grenade_execPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;

	this->ProcessEvent ( pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Grenade::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 106881 ];

	ATrProj_Grenade_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_Grenade::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 106877 ];

	ATrProj_Grenade_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.Timer
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 106876 ];

	ATrProj_Grenade_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.ApplyInheritance
// [0x00020102] 
// Parameters infos:
// struct FVector                 ProjectileDir                  ( CPF_Parm )

void ATrProj_Grenade::ApplyInheritance ( struct FVector ProjectileDir )
{
	static UFunction* pFnApplyInheritance = NULL;

	if ( ! pFnApplyInheritance )
		pFnApplyInheritance = (UFunction*) UObject::GObjObjects()->Data[ 106873 ];

	ATrProj_Grenade_execApplyInheritance_Parms ApplyInheritance_Parms;
	memcpy ( &ApplyInheritance_Parms.ProjectileDir, &ProjectileDir, 0xC );

	this->ProcessEvent ( pFnApplyInheritance, &ApplyInheritance_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.ShutDown
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 106872 ];

	ATrProj_Grenade_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.DestroyCollisionProxy
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::DestroyCollisionProxy ( )
{
	static UFunction* pFnDestroyCollisionProxy = NULL;

	if ( ! pFnDestroyCollisionProxy )
		pFnDestroyCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 106871 ];

	ATrProj_Grenade_execDestroyCollisionProxy_Parms DestroyCollisionProxy_Parms;

	this->ProcessEvent ( pFnDestroyCollisionProxy, &DestroyCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.SpawnCollisionProxy
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::SpawnCollisionProxy ( )
{
	static UFunction* pFnSpawnCollisionProxy = NULL;

	if ( ! pFnSpawnCollisionProxy )
		pFnSpawnCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 106870 ];

	ATrProj_Grenade_execSpawnCollisionProxy_Parms SpawnCollisionProxy_Parms;

	this->ProcessEvent ( pFnSpawnCollisionProxy, &SpawnCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.InitProjectile
// [0x00824102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Grenade::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 106866 ];

	ATrProj_Grenade_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_Grenade.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_Grenade::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 106865 ];

	ATrProj_Grenade_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_StickyGrenade.OnBaseChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProj_StickyGrenade::eventOnBaseChanged ( )
{
	static UFunction* pFnOnBaseChanged = NULL;

	if ( ! pFnOnBaseChanged )
		pFnOnBaseChanged = (UFunction*) UObject::GObjObjects()->Data[ 107126 ];

	ATrProj_StickyGrenade_eventOnBaseChanged_Parms OnBaseChanged_Parms;

	this->ProcessEvent ( pFnOnBaseChanged, &OnBaseChanged_Parms, NULL );
};

// Function TribesGame.TrProj_StickyGrenade.StickToTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProj_StickyGrenade::StickToTarget ( class AActor* Target, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStickToTarget = NULL;

	if ( ! pFnStickToTarget )
		pFnStickToTarget = (UFunction*) UObject::GObjObjects()->Data[ 107121 ];

	ATrProj_StickyGrenade_execStickToTarget_Parms StickToTarget_Parms;
	StickToTarget_Parms.Target = Target;
	memcpy ( &StickToTarget_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &StickToTarget_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStickToTarget, &StickToTarget_Parms, NULL );

	return StickToTarget_Parms.ReturnValue;
};

// Function TribesGame.TrProj_StickyGrenade.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_StickyGrenade::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107117 ];

	ATrProj_StickyGrenade_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_StickyGrenade.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_StickyGrenade::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 107113 ];

	ATrProj_StickyGrenade_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_StickyGrenade.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_StickyGrenade::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107112 ];

	ATrProj_StickyGrenade_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.MyOnParticleSystemFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ATrProj_Lacerator::MyOnParticleSystemFinished ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnMyOnParticleSystemFinished = NULL;

	if ( ! pFnMyOnParticleSystemFinished )
		pFnMyOnParticleSystemFinished = (UFunction*) UObject::GObjObjects()->Data[ 107636 ];

	ATrProj_Lacerator_execMyOnParticleSystemFinished_Parms MyOnParticleSystemFinished_Parms;
	MyOnParticleSystemFinished_Parms.PSC = PSC;

	this->ProcessEvent ( pFnMyOnParticleSystemFinished, &MyOnParticleSystemFinished_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.StartToShrink
// [0x00020102] 
// Parameters infos:

void ATrProj_Lacerator::StartToShrink ( )
{
	static UFunction* pFnStartToShrink = NULL;

	if ( ! pFnStartToShrink )
		pFnStartToShrink = (UFunction*) UObject::GObjObjects()->Data[ 107635 ];

	ATrProj_Lacerator_execStartToShrink_Parms StartToShrink_Parms;

	this->ProcessEvent ( pFnStartToShrink, &StartToShrink_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_Lacerator::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 107629 ];

	ATrProj_Lacerator_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.SpawnImpactEffect
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProj_Lacerator::SpawnImpactEffect ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnSpawnImpactEffect = NULL;

	if ( ! pFnSpawnImpactEffect )
		pFnSpawnImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 107625 ];

	ATrProj_Lacerator_execSpawnImpactEffect_Parms SpawnImpactEffect_Parms;
	memcpy ( &SpawnImpactEffect_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnImpactEffect_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnSpawnImpactEffect, &SpawnImpactEffect_Parms, NULL );

	return SpawnImpactEffect_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Lacerator.Landed
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  FloorActor                     ( CPF_Parm )

void ATrProj_Lacerator::Landed ( struct FVector HitNormal, class AActor* FloorActor )
{
	static UFunction* pFnLanded = NULL;

	if ( ! pFnLanded )
		pFnLanded = (UFunction*) UObject::GObjObjects()->Data[ 107622 ];

	ATrProj_Lacerator_execLanded_Parms Landed_Parms;
	memcpy ( &Landed_Parms.HitNormal, &HitNormal, 0xC );
	Landed_Parms.FloorActor = FloorActor;

	this->ProcessEvent ( pFnLanded, &Landed_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Lacerator::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107616 ];

	ATrProj_Lacerator_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.GetMomentumTransfer
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrProj_Lacerator::GetMomentumTransfer ( )
{
	static UFunction* pFnGetMomentumTransfer = NULL;

	if ( ! pFnGetMomentumTransfer )
		pFnGetMomentumTransfer = (UFunction*) UObject::GObjObjects()->Data[ 107614 ];

	ATrProj_Lacerator_execGetMomentumTransfer_Parms GetMomentumTransfer_Parms;

	this->ProcessEvent ( pFnGetMomentumTransfer, &GetMomentumTransfer_Parms, NULL );

	return GetMomentumTransfer_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Lacerator.GetDamage
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

float ATrProj_Lacerator::GetDamage ( class AActor* Other, struct FVector HitLocation )
{
	static UFunction* pFnGetDamage = NULL;

	if ( ! pFnGetDamage )
		pFnGetDamage = (UFunction*) UObject::GObjObjects()->Data[ 107610 ];

	ATrProj_Lacerator_execGetDamage_Parms GetDamage_Parms;
	GetDamage_Parms.Other = Other;
	memcpy ( &GetDamage_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnGetDamage, &GetDamage_Parms, NULL );

	return GetDamage_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Lacerator.InternalSpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Lacerator::InternalSpawnFlightEffects ( )
{
	static UFunction* pFnInternalSpawnFlightEffects = NULL;

	if ( ! pFnInternalSpawnFlightEffects )
		pFnInternalSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107609 ];

	ATrProj_Lacerator_execInternalSpawnFlightEffects_Parms InternalSpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnInternalSpawnFlightEffects, &InternalSpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Lacerator::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107608 ];

	ATrProj_Lacerator_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_Lacerator.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Lacerator::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107605 ];

	ATrProj_Lacerator_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrProj_Mine::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 107024 ];

	ATrProj_Mine_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrProj_Mine::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 107022 ];

	ATrProj_Mine_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Mine.ShutDown
// [0x00020102] 
// Parameters infos:

void ATrProj_Mine::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 107021 ];

	ATrProj_Mine_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.Bounce
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 WallNormal                     ( CPF_Parm )

void ATrProj_Mine::Bounce ( class AActor* Other, struct FVector WallNormal )
{
	static UFunction* pFnBounce = NULL;

	if ( ! pFnBounce )
		pFnBounce = (UFunction*) UObject::GObjObjects()->Data[ 107018 ];

	ATrProj_Mine_execBounce_Parms Bounce_Parms;
	Bounce_Parms.Other = Other;
	memcpy ( &Bounce_Parms.WallNormal, &WallNormal, 0xC );

	this->ProcessEvent ( pFnBounce, &Bounce_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Mine::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107014 ];

	ATrProj_Mine_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.NativeExplode
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Mine::eventNativeExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnNativeExplode = NULL;

	if ( ! pFnNativeExplode )
		pFnNativeExplode = (UFunction*) UObject::GObjObjects()->Data[ 107011 ];

	ATrProj_Mine_eventNativeExplode_Parms NativeExplode_Parms;
	memcpy ( &NativeExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &NativeExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNativeExplode, &NativeExplode_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.PawnLeftDetonationArea
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_Mine::PawnLeftDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnLeftDetonationArea = NULL;

	if ( ! pFnPawnLeftDetonationArea )
		pFnPawnLeftDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 107009 ];

	ATrProj_Mine_execPawnLeftDetonationArea_Parms PawnLeftDetonationArea_Parms;
	PawnLeftDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeftDetonationArea, &PawnLeftDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.PawnEnteredDetonationArea
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_Mine::PawnEnteredDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredDetonationArea = NULL;

	if ( ! pFnPawnEnteredDetonationArea )
		pFnPawnEnteredDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 107007 ];

	ATrProj_Mine_execPawnEnteredDetonationArea_Parms PawnEnteredDetonationArea_Parms;
	PawnEnteredDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredDetonationArea, &PawnEnteredDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Mine::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107004 ];

	ATrProj_Mine_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Mine::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 106996 ];

	ATrProj_Mine_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.TakeRadiusDamage
// [0x00024102] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          InDamageRadius                 ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Mine::TakeRadiusDamage ( class AController* EventInstigator, float BaseDamage, float InDamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 106985 ];

	ATrProj_Mine_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.EventInstigator = EventInstigator;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.InDamageRadius = InDamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.HitWall
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_Mine::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 106980 ];

	ATrProj_Mine_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.ArmedTimer
// [0x00820102] 
// Parameters infos:

void ATrProj_Mine::ArmedTimer ( )
{
	static UFunction* pFnArmedTimer = NULL;

	if ( ! pFnArmedTimer )
		pFnArmedTimer = (UFunction*) UObject::GObjObjects()->Data[ 106978 ];

	ATrProj_Mine_execArmedTimer_Parms ArmedTimer_Parms;

	this->ProcessEvent ( pFnArmedTimer, &ArmedTimer_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_Mine::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 106976 ];

	ATrProj_Mine_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.IsAliveAndWell
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrProj_Mine::IsAliveAndWell ( )
{
	static UFunction* pFnIsAliveAndWell = NULL;

	if ( ! pFnIsAliveAndWell )
		pFnIsAliveAndWell = (UFunction*) UObject::GObjObjects()->Data[ 95596 ];

	ATrProj_Mine_execIsAliveAndWell_Parms IsAliveAndWell_Parms;

	this->ProcessEvent ( pFnIsAliveAndWell, &IsAliveAndWell_Parms, NULL );

	return IsAliveAndWell_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Mine.OnPRIReplicated
// [0x00020102] 
// Parameters infos:

void ATrProj_Mine::OnPRIReplicated ( )
{
	static UFunction* pFnOnPRIReplicated = NULL;

	if ( ! pFnOnPRIReplicated )
		pFnOnPRIReplicated = (UFunction*) UObject::GObjObjects()->Data[ 106974 ];

	ATrProj_Mine_execOnPRIReplicated_Parms OnPRIReplicated_Parms;

	this->ProcessEvent ( pFnOnPRIReplicated, &OnPRIReplicated_Parms, NULL );
};

// Function TribesGame.TrProj_Mine.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrProj_Mine::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 106972 ];

	ATrProj_Mine_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrProj_Claymore.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrProj_Claymore::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 107066 ];

	ATrProj_Claymore_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrProj_Claymore.PawnEnteredDetonationArea
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_Claymore::PawnEnteredDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredDetonationArea = NULL;

	if ( ! pFnPawnEnteredDetonationArea )
		pFnPawnEnteredDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 107064 ];

	ATrProj_Claymore_execPawnEnteredDetonationArea_Parms PawnEnteredDetonationArea_Parms;
	PawnEnteredDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredDetonationArea, &PawnEnteredDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_Claymore.SetExplosionEffectParameters
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void ATrProj_Claymore::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 107062 ];

	ATrProj_Claymore_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function TribesGame.TrProj_Claymore.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_Claymore::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107059 ];

	ATrProj_Claymore_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.RemoveTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            RemoveTrip                     ( CPF_Parm )

void ATrProj_PrismMine::RemoveTripActor ( class ATrTripActor* RemoveTrip )
{
	static UFunction* pFnRemoveTripActor = NULL;

	if ( ! pFnRemoveTripActor )
		pFnRemoveTripActor = (UFunction*) UObject::GObjObjects()->Data[ 107954 ];

	ATrProj_PrismMine_execRemoveTripActor_Parms RemoveTripActor_Parms;
	RemoveTripActor_Parms.RemoveTrip = RemoveTrip;

	this->ProcessEvent ( pFnRemoveTripActor, &RemoveTripActor_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.AddTripActor
// [0x00020100] 
// Parameters infos:
// class ATrTripActor*            NewTrip                        ( CPF_Parm )

void ATrProj_PrismMine::AddTripActor ( class ATrTripActor* NewTrip )
{
	static UFunction* pFnAddTripActor = NULL;

	if ( ! pFnAddTripActor )
		pFnAddTripActor = (UFunction*) UObject::GObjObjects()->Data[ 107952 ];

	ATrProj_PrismMine_execAddTripActor_Parms AddTripActor_Parms;
	AddTripActor_Parms.NewTrip = NewTrip;

	this->ProcessEvent ( pFnAddTripActor, &AddTripActor_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.OnTripSleep
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ATrProj_PrismMine::eventOnTripSleep ( )
{
	static UFunction* pFnOnTripSleep = NULL;

	if ( ! pFnOnTripSleep )
		pFnOnTripSleep = (UFunction*) UObject::GObjObjects()->Data[ 107951 ];

	ATrProj_PrismMine_eventOnTripSleep_Parms OnTripSleep_Parms;

	this->ProcessEvent ( pFnOnTripSleep, &OnTripSleep_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.OnTripAwake
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProj_PrismMine::eventOnTripAwake ( )
{
	static UFunction* pFnOnTripAwake = NULL;

	if ( ! pFnOnTripAwake )
		pFnOnTripAwake = (UFunction*) UObject::GObjObjects()->Data[ 107950 ];

	ATrProj_PrismMine_eventOnTripAwake_Parms OnTripAwake_Parms;

	this->ProcessEvent ( pFnOnTripAwake, &OnTripAwake_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.GetTripSocketPosition
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bIsLeft                        ( CPF_Parm )
// struct FVector                 SocketPosition                 ( CPF_Parm | CPF_OutParm )

bool ATrProj_PrismMine::eventGetTripSocketPosition ( unsigned long bIsLeft, struct FVector* SocketPosition )
{
	static UFunction* pFnGetTripSocketPosition = NULL;

	if ( ! pFnGetTripSocketPosition )
		pFnGetTripSocketPosition = (UFunction*) UObject::GObjObjects()->Data[ 107946 ];

	ATrProj_PrismMine_eventGetTripSocketPosition_Parms GetTripSocketPosition_Parms;
	GetTripSocketPosition_Parms.bIsLeft = bIsLeft;

	this->ProcessEvent ( pFnGetTripSocketPosition, &GetTripSocketPosition_Parms, NULL );

	if ( SocketPosition )
		memcpy ( SocketPosition, &GetTripSocketPosition_Parms.SocketPosition, 0xC );

	return GetTripSocketPosition_Parms.ReturnValue;
};

// Function TribesGame.TrProj_PrismMine.GetParticleSystemName
// [0x00020102] 
// Parameters infos:
// class UParticleSystem*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UParticleSystem* ATrProj_PrismMine::GetParticleSystemName ( )
{
	static UFunction* pFnGetParticleSystemName = NULL;

	if ( ! pFnGetParticleSystemName )
		pFnGetParticleSystemName = (UFunction*) UObject::GObjObjects()->Data[ 107944 ];

	ATrProj_PrismMine_execGetParticleSystemName_Parms GetParticleSystemName_Parms;

	this->ProcessEvent ( pFnGetParticleSystemName, &GetParticleSystemName_Parms, NULL );

	return GetParticleSystemName_Parms.ReturnValue;
};

// Function TribesGame.TrProj_PrismMine.TripActivated
// [0x00020102] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// struct FVector                 ActivateLocation               ( CPF_Parm )
// class ATrTripActor*            TripActor                      ( CPF_Parm )

void ATrProj_PrismMine::TripActivated ( class APawn* Other, struct FVector ActivateLocation, class ATrTripActor* TripActor )
{
	static UFunction* pFnTripActivated = NULL;

	if ( ! pFnTripActivated )
		pFnTripActivated = (UFunction*) UObject::GObjObjects()->Data[ 107940 ];

	ATrProj_PrismMine_execTripActivated_Parms TripActivated_Parms;
	TripActivated_Parms.Other = Other;
	memcpy ( &TripActivated_Parms.ActivateLocation, &ActivateLocation, 0xC );
	TripActivated_Parms.TripActor = TripActor;

	this->ProcessEvent ( pFnTripActivated, &TripActivated_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.CreateTripActor
// [0x00820102] 
// Parameters infos:

void ATrProj_PrismMine::CreateTripActor ( )
{
	static UFunction* pFnCreateTripActor = NULL;

	if ( ! pFnCreateTripActor )
		pFnCreateTripActor = (UFunction*) UObject::GObjObjects()->Data[ 107936 ];

	ATrProj_PrismMine_execCreateTripActor_Parms CreateTripActor_Parms;

	this->ProcessEvent ( pFnCreateTripActor, &CreateTripActor_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.ShutDown
// [0x00020102] 
// Parameters infos:

void ATrProj_PrismMine::ShutDown ( )
{
	static UFunction* pFnShutDown = NULL;

	if ( ! pFnShutDown )
		pFnShutDown = (UFunction*) UObject::GObjObjects()->Data[ 107935 ];

	ATrProj_PrismMine_execShutDown_Parms ShutDown_Parms;

	this->ProcessEvent ( pFnShutDown, &ShutDown_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.ArmedTimer
// [0x00820102] 
// Parameters infos:

void ATrProj_PrismMine::ArmedTimer ( )
{
	static UFunction* pFnArmedTimer = NULL;

	if ( ! pFnArmedTimer )
		pFnArmedTimer = (UFunction*) UObject::GObjObjects()->Data[ 107926 ];

	ATrProj_PrismMine_execArmedTimer_Parms ArmedTimer_Parms;

	this->ProcessEvent ( pFnArmedTimer, &ArmedTimer_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_PrismMine::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107923 ];

	ATrProj_PrismMine_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_PrismMine.PawnEnteredDetonationArea
// [0x00020000] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrProj_PrismMine::PawnEnteredDetonationArea ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredDetonationArea = NULL;

	if ( ! pFnPawnEnteredDetonationArea )
		pFnPawnEnteredDetonationArea = (UFunction*) UObject::GObjObjects()->Data[ 107921 ];

	ATrProj_PrismMine_execPawnEnteredDetonationArea_Parms PawnEnteredDetonationArea_Parms;
	PawnEnteredDetonationArea_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredDetonationArea, &PawnEnteredDetonationArea_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.DetonateObsolete
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDetonateFromDamage            ( CPF_OptionalParm | CPF_Parm )

void ATrProj_RepairDeployable::DetonateObsolete ( unsigned long bDetonateFromDamage )
{
	static UFunction* pFnDetonateObsolete = NULL;

	if ( ! pFnDetonateObsolete )
		pFnDetonateObsolete = (UFunction*) UObject::GObjObjects()->Data[ 108043 ];

	ATrProj_RepairDeployable_execDetonateObsolete_Parms DetonateObsolete_Parms;
	DetonateObsolete_Parms.bDetonateFromDamage = bDetonateFromDamage;

	this->ProcessEvent ( pFnDetonateObsolete, &DetonateObsolete_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_RepairDeployable::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 108040 ];

	ATrProj_RepairDeployable_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.CheckRepair
// [0x00020102] 
// Parameters infos:

void ATrProj_RepairDeployable::CheckRepair ( )
{
	static UFunction* pFnCheckRepair = NULL;

	if ( ! pFnCheckRepair )
		pFnCheckRepair = (UFunction*) UObject::GObjObjects()->Data[ 108035 ];

	ATrProj_RepairDeployable_execCheckRepair_Parms CheckRepair_Parms;

	this->ProcessEvent ( pFnCheckRepair, &CheckRepair_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.HitWall
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_RepairDeployable::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 108030 ];

	ATrProj_RepairDeployable_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.ArmedTimer
// [0x00020102] 
// Parameters infos:

void ATrProj_RepairDeployable::ArmedTimer ( )
{
	static UFunction* pFnArmedTimer = NULL;

	if ( ! pFnArmedTimer )
		pFnArmedTimer = (UFunction*) UObject::GObjObjects()->Data[ 108029 ];

	ATrProj_RepairDeployable_execArmedTimer_Parms ArmedTimer_Parms;

	this->ProcessEvent ( pFnArmedTimer, &ArmedTimer_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_RepairDeployable::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 108023 ];

	ATrProj_RepairDeployable_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_RepairDeployable.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_RepairDeployable::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 108022 ];

	ATrProj_RepairDeployable_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_ThrowDeployable.ArmedTimer
// [0x00020102] 
// Parameters infos:

void ATrProj_ThrowDeployable::ArmedTimer ( )
{
	static UFunction* pFnArmedTimer = NULL;

	if ( ! pFnArmedTimer )
		pFnArmedTimer = (UFunction*) UObject::GObjObjects()->Data[ 108304 ];

	ATrProj_ThrowDeployable_execArmedTimer_Parms ArmedTimer_Parms;

	this->ProcessEvent ( pFnArmedTimer, &ArmedTimer_Parms, NULL );
};

// Function TribesGame.TrProj_ThrowDeployable.GetMaxDeployedLimit
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrProj_ThrowDeployable::GetMaxDeployedLimit ( )
{
	static UFunction* pFnGetMaxDeployedLimit = NULL;

	if ( ! pFnGetMaxDeployedLimit )
		pFnGetMaxDeployedLimit = (UFunction*) UObject::GObjObjects()->Data[ 108300 ];

	ATrProj_ThrowDeployable_execGetMaxDeployedLimit_Parms GetMaxDeployedLimit_Parms;

	this->ProcessEvent ( pFnGetMaxDeployedLimit, &GetMaxDeployedLimit_Parms, NULL );

	return GetMaxDeployedLimit_Parms.ReturnValue;
};

// Function TribesGame.TrProj_ThrowDeployable.DestroyOldestOverLimit
// [0x00020102] 
// Parameters infos:

void ATrProj_ThrowDeployable::DestroyOldestOverLimit ( )
{
	static UFunction* pFnDestroyOldestOverLimit = NULL;

	if ( ! pFnDestroyOldestOverLimit )
		pFnDestroyOldestOverLimit = (UFunction*) UObject::GObjObjects()->Data[ 108293 ];

	ATrProj_ThrowDeployable_execDestroyOldestOverLimit_Parms DestroyOldestOverLimit_Parms;

	this->ProcessEvent ( pFnDestroyOldestOverLimit, &DestroyOldestOverLimit_Parms, NULL );
};

// Function TribesGame.TrProj_ThrowDeployable.SpawnDeployable
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrDeployable*           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrDeployable* ATrProj_ThrowDeployable::SpawnDeployable ( )
{
	static UFunction* pFnSpawnDeployable = NULL;

	if ( ! pFnSpawnDeployable )
		pFnSpawnDeployable = (UFunction*) UObject::GObjObjects()->Data[ 108291 ];

	ATrProj_ThrowDeployable_execSpawnDeployable_Parms SpawnDeployable_Parms;

	pFnSpawnDeployable->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpawnDeployable, &SpawnDeployable_Parms, NULL );

	pFnSpawnDeployable->FunctionFlags |= 0x400;

	return SpawnDeployable_Parms.ReturnValue;
};

// Function TribesGame.TrProj_TrackingMissile.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrProj_TrackingMissile::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 108449 ];

	ATrProj_TrackingMissile_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrProj_TrackingMissile::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 108447 ];

	ATrProj_TrackingMissile_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrProj_TrackingMissile::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 108435 ];

	ATrProj_TrackingMissile_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.SpawnFlightEffectsTimer
// [0x00020102] 
// Parameters infos:

void ATrProj_TrackingMissile::SpawnFlightEffectsTimer ( )
{
	static UFunction* pFnSpawnFlightEffectsTimer = NULL;

	if ( ! pFnSpawnFlightEffectsTimer )
		pFnSpawnFlightEffectsTimer = (UFunction*) UObject::GObjObjects()->Data[ 108429 ];

	ATrProj_TrackingMissile_execSpawnFlightEffectsTimer_Parms SpawnFlightEffectsTimer_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffectsTimer, &SpawnFlightEffectsTimer_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_TrackingMissile::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108428 ];

	ATrProj_TrackingMissile_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.GetSeekingMissileManager
// [0x00020002] 
// Parameters infos:
// class ATrSeekingMissileManager* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrSeekingMissileManager* ATrProj_TrackingMissile::GetSeekingMissileManager ( )
{
	static UFunction* pFnGetSeekingMissileManager = NULL;

	if ( ! pFnGetSeekingMissileManager )
		pFnGetSeekingMissileManager = (UFunction*) UObject::GObjObjects()->Data[ 108425 ];

	ATrProj_TrackingMissile_execGetSeekingMissileManager_Parms GetSeekingMissileManager_Parms;

	this->ProcessEvent ( pFnGetSeekingMissileManager, &GetSeekingMissileManager_Parms, NULL );

	return GetSeekingMissileManager_Parms.ReturnValue;
};

// Function TribesGame.TrProj_TrackingMissile.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProj_TrackingMissile::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 108424 ];

	ATrProj_TrackingMissile_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_TrackingMissile::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 108421 ];

	ATrProj_TrackingMissile_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.OnExploded
// [0x00020102] 
// Parameters infos:

void ATrProj_TrackingMissile::OnExploded ( )
{
	static UFunction* pFnOnExploded = NULL;

	if ( ! pFnOnExploded )
		pFnOnExploded = (UFunction*) UObject::GObjObjects()->Data[ 108419 ];

	ATrProj_TrackingMissile_execOnExploded_Parms OnExploded_Parms;

	this->ProcessEvent ( pFnOnExploded, &OnExploded_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.NativeExplode
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_TrackingMissile::eventNativeExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnNativeExplode = NULL;

	if ( ! pFnNativeExplode )
		pFnNativeExplode = (UFunction*) UObject::GObjObjects()->Data[ 108416 ];

	ATrProj_TrackingMissile_eventNativeExplode_Parms NativeExplode_Parms;
	memcpy ( &NativeExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &NativeExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNativeExplode, &NativeExplode_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.SetSeekTarget
// [0x00020102] 
// Parameters infos:
// class AActor*                  NewSeekTarget                  ( CPF_Parm )

void ATrProj_TrackingMissile::SetSeekTarget ( class AActor* NewSeekTarget )
{
	static UFunction* pFnSetSeekTarget = NULL;

	if ( ! pFnSetSeekTarget )
		pFnSetSeekTarget = (UFunction*) UObject::GObjObjects()->Data[ 108413 ];

	ATrProj_TrackingMissile_execSetSeekTarget_Parms SetSeekTarget_Parms;
	SetSeekTarget_Parms.NewSeekTarget = NewSeekTarget;

	this->ProcessEvent ( pFnSetSeekTarget, &SetSeekTarget_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.EnableCollisionTimer
// [0x00020002] 
// Parameters infos:

void ATrProj_TrackingMissile::EnableCollisionTimer ( )
{
	static UFunction* pFnEnableCollisionTimer = NULL;

	if ( ! pFnEnableCollisionTimer )
		pFnEnableCollisionTimer = (UFunction*) UObject::GObjObjects()->Data[ 108412 ];

	ATrProj_TrackingMissile_execEnableCollisionTimer_Parms EnableCollisionTimer_Parms;

	this->ProcessEvent ( pFnEnableCollisionTimer, &EnableCollisionTimer_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_TrackingMissile::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 108408 ];

	ATrProj_TrackingMissile_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.Init
// [0x00020102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ATrProj_TrackingMissile::Init ( struct FVector Direction )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 108406 ];

	ATrProj_TrackingMissile_execInit_Parms Init_Parms;
	memcpy ( &Init_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_TrackingMissile::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 108404 ];

	ATrProj_TrackingMissile_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrQueueManager.IsGameTypeFiltered
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Id                             ( CPF_Parm )

bool UTrQueueManager::IsGameTypeFiltered ( int Id )
{
	static UFunction* pFnIsGameTypeFiltered = NULL;

	if ( ! pFnIsGameTypeFiltered )
		pFnIsGameTypeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 58834 ];

	UTrQueueManager_execIsGameTypeFiltered_Parms IsGameTypeFiltered_Parms;
	IsGameTypeFiltered_Parms.Id = Id;

	this->ProcessEvent ( pFnIsGameTypeFiltered, &IsGameTypeFiltered_Parms, NULL );

	return IsGameTypeFiltered_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.FilterGameType
// [0x00020002] 
// Parameters infos:
// int                            Id                             ( CPF_Parm )
// unsigned long                  bFilter                        ( CPF_Parm )

void UTrQueueManager::FilterGameType ( int Id, unsigned long bFilter )
{
	static UFunction* pFnFilterGameType = NULL;

	if ( ! pFnFilterGameType )
		pFnFilterGameType = (UFunction*) UObject::GObjObjects()->Data[ 108772 ];

	UTrQueueManager_execFilterGameType_Parms FilterGameType_Parms;
	FilterGameType_Parms.Id = Id;
	FilterGameType_Parms.bFilter = bFilter;

	this->ProcessEvent ( pFnFilterGameType, &FilterGameType_Parms, NULL );
};

// Function TribesGame.TrQueueManager.MarkFavorite
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::eventMarkFavorite ( int Index )
{
	static UFunction* pFnMarkFavorite = NULL;

	if ( ! pFnMarkFavorite )
		pFnMarkFavorite = (UFunction*) UObject::GObjObjects()->Data[ 108770 ];

	UTrQueueManager_eventMarkFavorite_Parms MarkFavorite_Parms;
	MarkFavorite_Parms.Index = Index;

	this->ProcessEvent ( pFnMarkFavorite, &MarkFavorite_Parms, NULL );
};

// Function TribesGame.TrQueueManager.GetDefaultMapId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetDefaultMapId ( )
{
	static UFunction* pFnGetDefaultMapId = NULL;

	if ( ! pFnGetDefaultMapId )
		pFnGetDefaultMapId = (UFunction*) UObject::GObjObjects()->Data[ 108768 ];

	UTrQueueManager_execGetDefaultMapId_Parms GetDefaultMapId_Parms;

	this->ProcessEvent ( pFnGetDefaultMapId, &GetDefaultMapId_Parms, NULL );

	return GetDefaultMapId_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.ResetRotation
// [0x00020002] 
// Parameters infos:

void UTrQueueManager::ResetRotation ( )
{
	static UFunction* pFnResetRotation = NULL;

	if ( ! pFnResetRotation )
		pFnResetRotation = (UFunction*) UObject::GObjObjects()->Data[ 108766 ];

	UTrQueueManager_execResetRotation_Parms ResetRotation_Parms;

	this->ProcessEvent ( pFnResetRotation, &ResetRotation_Parms, NULL );
};

// Function TribesGame.TrQueueManager.AddProfileConfig
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FProfileConfig          Data                           ( CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::eventAddProfileConfig ( int Index, struct FProfileConfig Data )
{
	static UFunction* pFnAddProfileConfig = NULL;

	if ( ! pFnAddProfileConfig )
		pFnAddProfileConfig = (UFunction*) UObject::GObjObjects()->Data[ 108763 ];

	UTrQueueManager_eventAddProfileConfig_Parms AddProfileConfig_Parms;
	AddProfileConfig_Parms.Index = Index;
	memcpy ( &AddProfileConfig_Parms.Data, &Data, 0x3C );

	this->ProcessEvent ( pFnAddProfileConfig, &AddProfileConfig_Parms, NULL );
};

// Function TribesGame.TrQueueManager.AddServerConfig
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// int                            MatchQueueId                   ( CPF_Parm )

void UTrQueueManager::eventAddServerConfig ( int MatchQueueId )
{
	static UFunction* pFnAddServerConfig = NULL;

	if ( ! pFnAddServerConfig )
		pFnAddServerConfig = (UFunction*) UObject::GObjObjects()->Data[ 108760 ];

	UTrQueueManager_eventAddServerConfig_Parms AddServerConfig_Parms;
	AddServerConfig_Parms.MatchQueueId = MatchQueueId;

	this->ProcessEvent ( pFnAddServerConfig, &AddServerConfig_Parms, NULL );
};

// Function TribesGame.TrQueueManager.GetServerRotationName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetServerRotationName ( )
{
	static UFunction* pFnGetServerRotationName = NULL;

	if ( ! pFnGetServerRotationName )
		pFnGetServerRotationName = (UFunction*) UObject::GObjObjects()->Data[ 58763 ];

	UTrQueueManager_execGetServerRotationName_Parms GetServerRotationName_Parms;

	this->ProcessEvent ( pFnGetServerRotationName, &GetServerRotationName_Parms, NULL );

	return GetServerRotationName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerGameTypeName
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_OptionalParm | CPF_Parm )

struct FString UTrQueueManager::GetServerGameTypeName ( int Index )
{
	static UFunction* pFnGetServerGameTypeName = NULL;

	if ( ! pFnGetServerGameTypeName )
		pFnGetServerGameTypeName = (UFunction*) UObject::GObjObjects()->Data[ 58220 ];

	UTrQueueManager_execGetServerGameTypeName_Parms GetServerGameTypeName_Parms;
	GetServerGameTypeName_Parms.Index = Index;

	this->ProcessEvent ( pFnGetServerGameTypeName, &GetServerGameTypeName_Parms, NULL );

	return GetServerGameTypeName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerTimeFormat
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetServerTimeFormat ( )
{
	static UFunction* pFnGetServerTimeFormat = NULL;

	if ( ! pFnGetServerTimeFormat )
		pFnGetServerTimeFormat = (UFunction*) UObject::GObjObjects()->Data[ 59315 ];

	UTrQueueManager_execGetServerTimeFormat_Parms GetServerTimeFormat_Parms;

	this->ProcessEvent ( pFnGetServerTimeFormat, &GetServerTimeFormat_Parms, NULL );

	return GetServerTimeFormat_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerTime
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetServerTime ( )
{
	static UFunction* pFnGetServerTime = NULL;

	if ( ! pFnGetServerTime )
		pFnGetServerTime = (UFunction*) UObject::GObjObjects()->Data[ 60200 ];

	UTrQueueManager_execGetServerTime_Parms GetServerTime_Parms;

	this->ProcessEvent ( pFnGetServerTime, &GetServerTime_Parms, NULL );

	return GetServerTime_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.AmServerOwner
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::AmServerOwner ( )
{
	static UFunction* pFnAmServerOwner = NULL;

	if ( ! pFnAmServerOwner )
		pFnAmServerOwner = (UFunction*) UObject::GObjObjects()->Data[ 59304 ];

	UTrQueueManager_execAmServerOwner_Parms AmServerOwner_Parms;

	this->ProcessEvent ( pFnAmServerOwner, &AmServerOwner_Parms, NULL );

	return AmServerOwner_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerExpired
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::GetServerExpired ( )
{
	static UFunction* pFnGetServerExpired = NULL;

	if ( ! pFnGetServerExpired )
		pFnGetServerExpired = (UFunction*) UObject::GObjObjects()->Data[ 60196 ];

	UTrQueueManager_execGetServerExpired_Parms GetServerExpired_Parms;

	this->ProcessEvent ( pFnGetServerExpired, &GetServerExpired_Parms, NULL );

	return GetServerExpired_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerOnline
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UTrQueueManager::GetServerOnline ( int Index )
{
	static UFunction* pFnGetServerOnline = NULL;

	if ( ! pFnGetServerOnline )
		pFnGetServerOnline = (UFunction*) UObject::GObjObjects()->Data[ 59351 ];

	UTrQueueManager_execGetServerOnline_Parms GetServerOnline_Parms;
	GetServerOnline_Parms.Index = Index;

	this->ProcessEvent ( pFnGetServerOnline, &GetServerOnline_Parms, NULL );

	return GetServerOnline_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetServerName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UTrQueueManager::GetServerName ( int Index )
{
	static UFunction* pFnGetServerName = NULL;

	if ( ! pFnGetServerName )
		pFnGetServerName = (UFunction*) UObject::GObjObjects()->Data[ 59353 ];

	UTrQueueManager_execGetServerName_Parms GetServerName_Parms;
	GetServerName_Parms.Index = Index;

	this->ProcessEvent ( pFnGetServerName, &GetServerName_Parms, NULL );

	return GetServerName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetProfileRegion
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetProfileRegion ( )
{
	static UFunction* pFnGetProfileRegion = NULL;

	if ( ! pFnGetProfileRegion )
		pFnGetProfileRegion = (UFunction*) UObject::GObjObjects()->Data[ 60610 ];

	UTrQueueManager_execGetProfileRegion_Parms GetProfileRegion_Parms;

	this->ProcessEvent ( pFnGetProfileRegion, &GetProfileRegion_Parms, NULL );

	return GetProfileRegion_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetProfileRotation
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetProfileRotation ( )
{
	static UFunction* pFnGetProfileRotation = NULL;

	if ( ! pFnGetProfileRotation )
		pFnGetProfileRotation = (UFunction*) UObject::GObjObjects()->Data[ 60167 ];

	UTrQueueManager_execGetProfileRotation_Parms GetProfileRotation_Parms;

	this->ProcessEvent ( pFnGetProfileRotation, &GetProfileRotation_Parms, NULL );

	return GetProfileRotation_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetProfileGameType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetProfileGameType ( )
{
	static UFunction* pFnGetProfileGameType = NULL;

	if ( ! pFnGetProfileGameType )
		pFnGetProfileGameType = (UFunction*) UObject::GObjObjects()->Data[ 58757 ];

	UTrQueueManager_execGetProfileGameType_Parms GetProfileGameType_Parms;

	this->ProcessEvent ( pFnGetProfileGameType, &GetProfileGameType_Parms, NULL );

	return GetProfileGameType_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetPublicPassword
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetPublicPassword ( )
{
	static UFunction* pFnGetPublicPassword = NULL;

	if ( ! pFnGetPublicPassword )
		pFnGetPublicPassword = (UFunction*) UObject::GObjObjects()->Data[ 60594 ];

	UTrQueueManager_execGetPublicPassword_Parms GetPublicPassword_Parms;

	this->ProcessEvent ( pFnGetPublicPassword, &GetPublicPassword_Parms, NULL );

	return GetPublicPassword_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetAdminPassword
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetAdminPassword ( )
{
	static UFunction* pFnGetAdminPassword = NULL;

	if ( ! pFnGetAdminPassword )
		pFnGetAdminPassword = (UFunction*) UObject::GObjObjects()->Data[ 60591 ];

	UTrQueueManager_execGetAdminPassword_Parms GetAdminPassword_Parms;

	this->ProcessEvent ( pFnGetAdminPassword, &GetAdminPassword_Parms, NULL );

	return GetAdminPassword_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetProfileDesc
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetProfileDesc ( )
{
	static UFunction* pFnGetProfileDesc = NULL;

	if ( ! pFnGetProfileDesc )
		pFnGetProfileDesc = (UFunction*) UObject::GObjObjects()->Data[ 57693 ];

	UTrQueueManager_execGetProfileDesc_Parms GetProfileDesc_Parms;

	this->ProcessEvent ( pFnGetProfileDesc, &GetProfileDesc_Parms, NULL );

	return GetProfileDesc_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetProfileName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetProfileName ( )
{
	static UFunction* pFnGetProfileName = NULL;

	if ( ! pFnGetProfileName )
		pFnGetProfileName = (UFunction*) UObject::GObjObjects()->Data[ 57691 ];

	UTrQueueManager_execGetProfileName_Parms GetProfileName_Parms;

	this->ProcessEvent ( pFnGetProfileName, &GetProfileName_Parms, NULL );

	return GetProfileName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetQueueCaseId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetQueueCaseId ( )
{
	static UFunction* pFnGetQueueCaseId = NULL;

	if ( ! pFnGetQueueCaseId )
		pFnGetQueueCaseId = (UFunction*) UObject::GObjObjects()->Data[ 59344 ];

	UTrQueueManager_execGetQueueCaseId_Parms GetQueueCaseId_Parms;

	this->ProcessEvent ( pFnGetQueueCaseId, &GetQueueCaseId_Parms, NULL );

	return GetQueueCaseId_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetGameCaseId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetGameCaseId ( )
{
	static UFunction* pFnGetGameCaseId = NULL;

	if ( ! pFnGetGameCaseId )
		pFnGetGameCaseId = (UFunction*) UObject::GObjObjects()->Data[ 108748 ];

	UTrQueueManager_execGetGameCaseId_Parms GetGameCaseId_Parms;

	this->ProcessEvent ( pFnGetGameCaseId, &GetGameCaseId_Parms, NULL );

	return GetGameCaseId_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetSlots
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrQueueManager::GetSlots ( )
{
	static UFunction* pFnGetSlots = NULL;

	if ( ! pFnGetSlots )
		pFnGetSlots = (UFunction*) UObject::GObjObjects()->Data[ 108746 ];

	UTrQueueManager_execGetSlots_Parms GetSlots_Parms;

	this->ProcessEvent ( pFnGetSlots, &GetSlots_Parms, NULL );

	return GetSlots_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.FavoriteSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::FavoriteSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnFavoriteSortB = NULL;

	if ( ! pFnFavoriteSortB )
		pFnFavoriteSortB = (UFunction*) UObject::GObjObjects()->Data[ 108551 ];

	UTrQueueManager_execFavoriteSortB_Parms FavoriteSortB_Parms;
	memcpy ( &FavoriteSortB_Parms.A, &A, 0x50 );
	memcpy ( &FavoriteSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnFavoriteSortB, &FavoriteSortB_Parms, NULL );

	return FavoriteSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.PasswordSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::PasswordSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnPasswordSortB = NULL;

	if ( ! pFnPasswordSortB )
		pFnPasswordSortB = (UFunction*) UObject::GObjObjects()->Data[ 108553 ];

	UTrQueueManager_execPasswordSortB_Parms PasswordSortB_Parms;
	memcpy ( &PasswordSortB_Parms.A, &A, 0x50 );
	memcpy ( &PasswordSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnPasswordSortB, &PasswordSortB_Parms, NULL );

	return PasswordSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SlotsSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::SlotsSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnSlotsSortB = NULL;

	if ( ! pFnSlotsSortB )
		pFnSlotsSortB = (UFunction*) UObject::GObjObjects()->Data[ 108555 ];

	UTrQueueManager_execSlotsSortB_Parms SlotsSortB_Parms;
	memcpy ( &SlotsSortB_Parms.A, &A, 0x50 );
	memcpy ( &SlotsSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnSlotsSortB, &SlotsSortB_Parms, NULL );

	return SlotsSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.RangeSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::RangeSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnRangeSortB = NULL;

	if ( ! pFnRangeSortB )
		pFnRangeSortB = (UFunction*) UObject::GObjObjects()->Data[ 108557 ];

	UTrQueueManager_execRangeSortB_Parms RangeSortB_Parms;
	memcpy ( &RangeSortB_Parms.A, &A, 0x50 );
	memcpy ( &RangeSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnRangeSortB, &RangeSortB_Parms, NULL );

	return RangeSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.RulesSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::RulesSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnRulesSortB = NULL;

	if ( ! pFnRulesSortB )
		pFnRulesSortB = (UFunction*) UObject::GObjObjects()->Data[ 108559 ];

	UTrQueueManager_execRulesSortB_Parms RulesSortB_Parms;
	memcpy ( &RulesSortB_Parms.A, &A, 0x50 );
	memcpy ( &RulesSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnRulesSortB, &RulesSortB_Parms, NULL );

	return RulesSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.TypeSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::TypeSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnTypeSortB = NULL;

	if ( ! pFnTypeSortB )
		pFnTypeSortB = (UFunction*) UObject::GObjObjects()->Data[ 108561 ];

	UTrQueueManager_execTypeSortB_Parms TypeSortB_Parms;
	memcpy ( &TypeSortB_Parms.A, &A, 0x50 );
	memcpy ( &TypeSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnTypeSortB, &TypeSortB_Parms, NULL );

	return TypeSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.PingSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::PingSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnPingSortB = NULL;

	if ( ! pFnPingSortB )
		pFnPingSortB = (UFunction*) UObject::GObjObjects()->Data[ 108563 ];

	UTrQueueManager_execPingSortB_Parms PingSortB_Parms;
	memcpy ( &PingSortB_Parms.A, &A, 0x50 );
	memcpy ( &PingSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnPingSortB, &PingSortB_Parms, NULL );

	return PingSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.NameSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::NameSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnNameSortB = NULL;

	if ( ! pFnNameSortB )
		pFnNameSortB = (UFunction*) UObject::GObjObjects()->Data[ 108565 ];

	UTrQueueManager_execNameSortB_Parms NameSortB_Parms;
	memcpy ( &NameSortB_Parms.A, &A, 0x50 );
	memcpy ( &NameSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnNameSortB, &NameSortB_Parms, NULL );

	return NameSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.MapSortB
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::MapSortB ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnMapSortB = NULL;

	if ( ! pFnMapSortB )
		pFnMapSortB = (UFunction*) UObject::GObjObjects()->Data[ 108567 ];

	UTrQueueManager_execMapSortB_Parms MapSortB_Parms;
	memcpy ( &MapSortB_Parms.A, &A, 0x50 );
	memcpy ( &MapSortB_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnMapSortB, &MapSortB_Parms, NULL );

	return MapSortB_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.FavoriteSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::FavoriteSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnFavoriteSortA = NULL;

	if ( ! pFnFavoriteSortA )
		pFnFavoriteSortA = (UFunction*) UObject::GObjObjects()->Data[ 108569 ];

	UTrQueueManager_execFavoriteSortA_Parms FavoriteSortA_Parms;
	memcpy ( &FavoriteSortA_Parms.A, &A, 0x50 );
	memcpy ( &FavoriteSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnFavoriteSortA, &FavoriteSortA_Parms, NULL );

	return FavoriteSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.PasswordSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::PasswordSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnPasswordSortA = NULL;

	if ( ! pFnPasswordSortA )
		pFnPasswordSortA = (UFunction*) UObject::GObjObjects()->Data[ 108571 ];

	UTrQueueManager_execPasswordSortA_Parms PasswordSortA_Parms;
	memcpy ( &PasswordSortA_Parms.A, &A, 0x50 );
	memcpy ( &PasswordSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnPasswordSortA, &PasswordSortA_Parms, NULL );

	return PasswordSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SlotsSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::SlotsSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnSlotsSortA = NULL;

	if ( ! pFnSlotsSortA )
		pFnSlotsSortA = (UFunction*) UObject::GObjObjects()->Data[ 108573 ];

	UTrQueueManager_execSlotsSortA_Parms SlotsSortA_Parms;
	memcpy ( &SlotsSortA_Parms.A, &A, 0x50 );
	memcpy ( &SlotsSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnSlotsSortA, &SlotsSortA_Parms, NULL );

	return SlotsSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.RangeSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::RangeSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnRangeSortA = NULL;

	if ( ! pFnRangeSortA )
		pFnRangeSortA = (UFunction*) UObject::GObjObjects()->Data[ 108575 ];

	UTrQueueManager_execRangeSortA_Parms RangeSortA_Parms;
	memcpy ( &RangeSortA_Parms.A, &A, 0x50 );
	memcpy ( &RangeSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnRangeSortA, &RangeSortA_Parms, NULL );

	return RangeSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.RulesSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::RulesSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnRulesSortA = NULL;

	if ( ! pFnRulesSortA )
		pFnRulesSortA = (UFunction*) UObject::GObjObjects()->Data[ 108577 ];

	UTrQueueManager_execRulesSortA_Parms RulesSortA_Parms;
	memcpy ( &RulesSortA_Parms.A, &A, 0x50 );
	memcpy ( &RulesSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnRulesSortA, &RulesSortA_Parms, NULL );

	return RulesSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.TypeSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::TypeSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnTypeSortA = NULL;

	if ( ! pFnTypeSortA )
		pFnTypeSortA = (UFunction*) UObject::GObjObjects()->Data[ 108579 ];

	UTrQueueManager_execTypeSortA_Parms TypeSortA_Parms;
	memcpy ( &TypeSortA_Parms.A, &A, 0x50 );
	memcpy ( &TypeSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnTypeSortA, &TypeSortA_Parms, NULL );

	return TypeSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.PingSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::PingSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnPingSortA = NULL;

	if ( ! pFnPingSortA )
		pFnPingSortA = (UFunction*) UObject::GObjObjects()->Data[ 108581 ];

	UTrQueueManager_execPingSortA_Parms PingSortA_Parms;
	memcpy ( &PingSortA_Parms.A, &A, 0x50 );
	memcpy ( &PingSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnPingSortA, &PingSortA_Parms, NULL );

	return PingSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.NameSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::NameSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnNameSortA = NULL;

	if ( ! pFnNameSortA )
		pFnNameSortA = (UFunction*) UObject::GObjObjects()->Data[ 108583 ];

	UTrQueueManager_execNameSortA_Parms NameSortA_Parms;
	memcpy ( &NameSortA_Parms.A, &A, 0x50 );
	memcpy ( &NameSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnNameSortA, &NameSortA_Parms, NULL );

	return NameSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.MapSortA
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FServerInfo             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FServerInfo             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrQueueManager::MapSortA ( struct FServerInfo A, struct FServerInfo B )
{
	static UFunction* pFnMapSortA = NULL;

	if ( ! pFnMapSortA )
		pFnMapSortA = (UFunction*) UObject::GObjObjects()->Data[ 108585 ];

	UTrQueueManager_execMapSortA_Parms MapSortA_Parms;
	memcpy ( &MapSortA_Parms.A, &A, 0x50 );
	memcpy ( &MapSortA_Parms.B, &B, 0x50 );

	this->ProcessEvent ( pFnMapSortA, &MapSortA_Parms, NULL );

	return MapSortA_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SortOn
// [0x00020002] 
// Parameters infos:
// struct FString                 SortName                       ( CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::SortOn ( struct FString SortName )
{
	static UFunction* pFnSortOn = NULL;

	if ( ! pFnSortOn )
		pFnSortOn = (UFunction*) UObject::GObjObjects()->Data[ 108690 ];

	UTrQueueManager_execSortOn_Parms SortOn_Parms;
	memcpy ( &SortOn_Parms.SortName, &SortName, 0xC );

	this->ProcessEvent ( pFnSortOn, &SortOn_Parms, NULL );
};

// Function TribesGame.TrQueueManager.ServerSort
// [0x00020002] 
// Parameters infos:
// struct FString                 SortName                       ( CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::ServerSort ( struct FString SortName )
{
	static UFunction* pFnServerSort = NULL;

	if ( ! pFnServerSort )
		pFnServerSort = (UFunction*) UObject::GObjObjects()->Data[ 108688 ];

	UTrQueueManager_execServerSort_Parms ServerSort_Parms;
	memcpy ( &ServerSort_Parms.SortName, &SortName, 0xC );

	this->ProcessEvent ( pFnServerSort, &ServerSort_Parms, NULL );
};

// Function TribesGame.TrQueueManager.ServerPage
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::ServerPage ( int Index )
{
	static UFunction* pFnServerPage = NULL;

	if ( ! pFnServerPage )
		pFnServerPage = (UFunction*) UObject::GObjObjects()->Data[ 108686 ];

	UTrQueueManager_execServerPage_Parms ServerPage_Parms;
	ServerPage_Parms.Index = Index;

	this->ProcessEvent ( pFnServerPage, &ServerPage_Parms, NULL );
};

// Function TribesGame.TrQueueManager.SetActiveServer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::SetActiveServer ( int Index )
{
	static UFunction* pFnSetActiveServer = NULL;

	if ( ! pFnSetActiveServer )
		pFnSetActiveServer = (UFunction*) UObject::GObjObjects()->Data[ 108684 ];

	UTrQueueManager_execSetActiveServer_Parms SetActiveServer_Parms;
	SetActiveServer_Parms.Index = Index;

	this->ProcessEvent ( pFnSetActiveServer, &SetActiveServer_Parms, NULL );
};

// Function TribesGame.TrQueueManager.PasswordServer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::PasswordServer ( int Index )
{
	static UFunction* pFnPasswordServer = NULL;

	if ( ! pFnPasswordServer )
		pFnPasswordServer = (UFunction*) UObject::GObjObjects()->Data[ 108682 ];

	UTrQueueManager_execPasswordServer_Parms PasswordServer_Parms;
	PasswordServer_Parms.Index = Index;

	this->ProcessEvent ( pFnPasswordServer, &PasswordServer_Parms, NULL );
};

// Function TribesGame.TrQueueManager.FavoriteServer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::FavoriteServer ( int Index )
{
	static UFunction* pFnFavoriteServer = NULL;

	if ( ! pFnFavoriteServer )
		pFnFavoriteServer = (UFunction*) UObject::GObjObjects()->Data[ 108680 ];

	UTrQueueManager_execFavoriteServer_Parms FavoriteServer_Parms;
	FavoriteServer_Parms.Index = Index;

	this->ProcessEvent ( pFnFavoriteServer, &FavoriteServer_Parms, NULL );
};

// Function TribesGame.TrQueueManager.JoinProtectedServer
// [0x00020002] 
// Parameters infos:
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::JoinProtectedServer ( struct FString Password )
{
	static UFunction* pFnJoinProtectedServer = NULL;

	if ( ! pFnJoinProtectedServer )
		pFnJoinProtectedServer = (UFunction*) UObject::GObjObjects()->Data[ 108678 ];

	UTrQueueManager_execJoinProtectedServer_Parms JoinProtectedServer_Parms;
	memcpy ( &JoinProtectedServer_Parms.Password, &Password, 0xC );

	this->ProcessEvent ( pFnJoinProtectedServer, &JoinProtectedServer_Parms, NULL );
};

// Function TribesGame.TrQueueManager.JoinCustomServer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrQueueManager::JoinCustomServer ( int Index )
{
	static UFunction* pFnJoinCustomServer = NULL;

	if ( ! pFnJoinCustomServer )
		pFnJoinCustomServer = (UFunction*) UObject::GObjObjects()->Data[ 108676 ];

	UTrQueueManager_execJoinCustomServer_Parms JoinCustomServer_Parms;
	JoinCustomServer_Parms.Index = Index;

	this->ProcessEvent ( pFnJoinCustomServer, &JoinCustomServer_Parms, NULL );
};

// Function TribesGame.TrQueueManager.ServerInfoLoaded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrQueueManager::eventServerInfoLoaded ( )
{
	static UFunction* pFnServerInfoLoaded = NULL;

	if ( ! pFnServerInfoLoaded )
		pFnServerInfoLoaded = (UFunction*) UObject::GObjObjects()->Data[ 108675 ];

	UTrQueueManager_eventServerInfoLoaded_Parms ServerInfoLoaded_Parms;

	this->ProcessEvent ( pFnServerInfoLoaded, &ServerInfoLoaded_Parms, NULL );
};

// Function TribesGame.TrQueueManager.ExitGameInProgress
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForceDrop                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bKicked                        ( CPF_OptionalParm | CPF_Parm )

void UTrQueueManager::eventExitGameInProgress ( unsigned long bForceDrop, unsigned long bKicked )
{
	static UFunction* pFnExitGameInProgress = NULL;

	if ( ! pFnExitGameInProgress )
		pFnExitGameInProgress = (UFunction*) UObject::GObjObjects()->Data[ 108671 ];

	UTrQueueManager_eventExitGameInProgress_Parms ExitGameInProgress_Parms;
	ExitGameInProgress_Parms.bForceDrop = bForceDrop;
	ExitGameInProgress_Parms.bKicked = bKicked;

	this->ProcessEvent ( pFnExitGameInProgress, &ExitGameInProgress_Parms, NULL );
};

// Function TribesGame.TrQueueManager.JoinFriend
// [0x00024002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::JoinFriend ( struct FString PlayerName, struct FString Password )
{
	static UFunction* pFnJoinFriend = NULL;

	if ( ! pFnJoinFriend )
		pFnJoinFriend = (UFunction*) UObject::GObjObjects()->Data[ 108668 ];

	UTrQueueManager_execJoinFriend_Parms JoinFriend_Parms;
	memcpy ( &JoinFriend_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &JoinFriend_Parms.Password, &Password, 0xC );

	this->ProcessEvent ( pFnJoinFriend, &JoinFriend_Parms, NULL );
};

// Function TribesGame.TrQueueManager.GetStatus
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrQueueManager::GetStatus ( )
{
	static UFunction* pFnGetStatus = NULL;

	if ( ! pFnGetStatus )
		pFnGetStatus = (UFunction*) UObject::GObjObjects()->Data[ 54403 ];

	UTrQueueManager_execGetStatus_Parms GetStatus_Parms;

	this->ProcessEvent ( pFnGetStatus, &GetStatus_Parms, NULL );

	return GetStatus_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SetPlayerQueued
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrQueueManager::eventSetPlayerQueued ( )
{
	static UFunction* pFnSetPlayerQueued = NULL;

	if ( ! pFnSetPlayerQueued )
		pFnSetPlayerQueued = (UFunction*) UObject::GObjObjects()->Data[ 108667 ];

	UTrQueueManager_eventSetPlayerQueued_Parms SetPlayerQueued_Parms;

	this->ProcessEvent ( pFnSetPlayerQueued, &SetPlayerQueued_Parms, NULL );
};

// Function TribesGame.TrQueueManager.JoinQueue
// [0x00020002] 
// Parameters infos:
// int                            nQueueId                       ( CPF_Parm )

void UTrQueueManager::JoinQueue ( int nQueueId )
{
	static UFunction* pFnJoinQueue = NULL;

	if ( ! pFnJoinQueue )
		pFnJoinQueue = (UFunction*) UObject::GObjObjects()->Data[ 108665 ];

	UTrQueueManager_execJoinQueue_Parms JoinQueue_Parms;
	JoinQueue_Parms.nQueueId = nQueueId;

	this->ProcessEvent ( pFnJoinQueue, &JoinQueue_Parms, NULL );
};

// Function TribesGame.TrQueueManager.LeaveMatchmaking
// [0x00024002] 
// Parameters infos:
// unsigned long                  bForced                        ( CPF_OptionalParm | CPF_Parm )

void UTrQueueManager::LeaveMatchmaking ( unsigned long bForced )
{
	static UFunction* pFnLeaveMatchmaking = NULL;

	if ( ! pFnLeaveMatchmaking )
		pFnLeaveMatchmaking = (UFunction*) UObject::GObjObjects()->Data[ 108663 ];

	UTrQueueManager_execLeaveMatchmaking_Parms LeaveMatchmaking_Parms;
	LeaveMatchmaking_Parms.bForced = bForced;

	this->ProcessEvent ( pFnLeaveMatchmaking, &LeaveMatchmaking_Parms, NULL );
};

// Function TribesGame.TrQueueManager.Initialize
// [0x00820002] 
// Parameters infos:

void UTrQueueManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 108661 ];

	UTrQueueManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrQueueManager.MatchQueueJoin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Queue                          ( CPF_Parm )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::MatchQueueJoin ( int Queue, struct FString Password )
{
	static UFunction* pFnMatchQueueJoin = NULL;

	if ( ! pFnMatchQueueJoin )
		pFnMatchQueueJoin = (UFunction*) UObject::GObjObjects()->Data[ 108657 ];

	UTrQueueManager_execMatchQueueJoin_Parms MatchQueueJoin_Parms;
	MatchQueueJoin_Parms.Queue = Queue;
	memcpy ( &MatchQueueJoin_Parms.Password, &Password, 0xC );

	pFnMatchQueueJoin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnMatchQueueJoin, &MatchQueueJoin_Parms, NULL );

	pFnMatchQueueJoin->FunctionFlags |= 0x400;

	return MatchQueueJoin_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomSetName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 QueueName                      ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::CustomSetName ( struct FString QueueName )
{
	static UFunction* pFnCustomSetName = NULL;

	if ( ! pFnCustomSetName )
		pFnCustomSetName = (UFunction*) UObject::GObjObjects()->Data[ 60600 ];

	UTrQueueManager_execCustomSetName_Parms CustomSetName_Parms;
	memcpy ( &CustomSetName_Parms.QueueName, &QueueName, 0xC );

	pFnCustomSetName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomSetName, &CustomSetName_Parms, NULL );

	pFnCustomSetName->FunctionFlags |= 0x400;

	return CustomSetName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomBan
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::CustomBan ( struct FString PlayerName )
{
	static UFunction* pFnCustomBan = NULL;

	if ( ! pFnCustomBan )
		pFnCustomBan = (UFunction*) UObject::GObjObjects()->Data[ 60228 ];

	UTrQueueManager_execCustomBan_Parms CustomBan_Parms;
	memcpy ( &CustomBan_Parms.PlayerName, &PlayerName, 0xC );

	pFnCustomBan->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomBan, &CustomBan_Parms, NULL );

	pFnCustomBan->FunctionFlags |= 0x400;

	return CustomBan_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomKick
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::CustomKick ( struct FString PlayerName )
{
	static UFunction* pFnCustomKick = NULL;

	if ( ! pFnCustomKick )
		pFnCustomKick = (UFunction*) UObject::GObjObjects()->Data[ 60226 ];

	UTrQueueManager_execCustomKick_Parms CustomKick_Parms;
	memcpy ( &CustomKick_Parms.PlayerName, &PlayerName, 0xC );

	pFnCustomKick->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomKick, &CustomKick_Parms, NULL );

	pFnCustomKick->FunctionFlags |= 0x400;

	return CustomKick_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomNextMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MapId                          ( CPF_Parm )

bool UTrQueueManager::CustomNextMap ( int MapId )
{
	static UFunction* pFnCustomNextMap = NULL;

	if ( ! pFnCustomNextMap )
		pFnCustomNextMap = (UFunction*) UObject::GObjObjects()->Data[ 60224 ];

	UTrQueueManager_execCustomNextMap_Parms CustomNextMap_Parms;
	CustomNextMap_Parms.MapId = MapId;

	pFnCustomNextMap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomNextMap, &CustomNextMap_Parms, NULL );

	pFnCustomNextMap->FunctionFlags |= 0x400;

	return CustomNextMap_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomShutdown
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::CustomShutdown ( )
{
	static UFunction* pFnCustomShutdown = NULL;

	if ( ! pFnCustomShutdown )
		pFnCustomShutdown = (UFunction*) UObject::GObjObjects()->Data[ 60222 ];

	UTrQueueManager_execCustomShutdown_Parms CustomShutdown_Parms;

	pFnCustomShutdown->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomShutdown, &CustomShutdown_Parms, NULL );

	pFnCustomShutdown->FunctionFlags |= 0x400;

	return CustomShutdown_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomStop
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::CustomStop ( )
{
	static UFunction* pFnCustomStop = NULL;

	if ( ! pFnCustomStop )
		pFnCustomStop = (UFunction*) UObject::GObjObjects()->Data[ 60220 ];

	UTrQueueManager_execCustomStop_Parms CustomStop_Parms;

	pFnCustomStop->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomStop, &CustomStop_Parms, NULL );

	pFnCustomStop->FunctionFlags |= 0x400;

	return CustomStop_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::CustomStart ( )
{
	static UFunction* pFnCustomStart = NULL;

	if ( ! pFnCustomStart )
		pFnCustomStart = (UFunction*) UObject::GObjObjects()->Data[ 60218 ];

	UTrQueueManager_execCustomStart_Parms CustomStart_Parms;

	pFnCustomStart->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomStart, &CustomStart_Parms, NULL );

	pFnCustomStart->FunctionFlags |= 0x400;

	return CustomStart_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.CustomLogin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::CustomLogin ( struct FString Password )
{
	static UFunction* pFnCustomLogin = NULL;

	if ( ! pFnCustomLogin )
		pFnCustomLogin = (UFunction*) UObject::GObjObjects()->Data[ 99385 ];

	UTrQueueManager_execCustomLogin_Parms CustomLogin_Parms;
	memcpy ( &CustomLogin_Parms.Password, &Password, 0xC );

	pFnCustomLogin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCustomLogin, &CustomLogin_Parms, NULL );

	pFnCustomLogin->FunctionFlags |= 0x400;

	return CustomLogin_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetPropMax
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )
// int                            val                            ( CPF_Parm | CPF_OutParm )

bool UTrQueueManager::GetPropMax ( int PropId, int PropType, int* val )
{
	static UFunction* pFnGetPropMax = NULL;

	if ( ! pFnGetPropMax )
		pFnGetPropMax = (UFunction*) UObject::GObjObjects()->Data[ 60397 ];

	UTrQueueManager_execGetPropMax_Parms GetPropMax_Parms;
	GetPropMax_Parms.PropId = PropId;
	GetPropMax_Parms.PropType = PropType;

	pFnGetPropMax->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropMax, &GetPropMax_Parms, NULL );

	pFnGetPropMax->FunctionFlags |= 0x400;

	if ( val )
		*val = GetPropMax_Parms.val;

	return GetPropMax_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetPropMin
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )
// int                            val                            ( CPF_Parm | CPF_OutParm )

bool UTrQueueManager::GetPropMin ( int PropId, int PropType, int* val )
{
	static UFunction* pFnGetPropMin = NULL;

	if ( ! pFnGetPropMin )
		pFnGetPropMin = (UFunction*) UObject::GObjObjects()->Data[ 60395 ];

	UTrQueueManager_execGetPropMin_Parms GetPropMin_Parms;
	GetPropMin_Parms.PropId = PropId;
	GetPropMin_Parms.PropType = PropType;

	pFnGetPropMin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropMin, &GetPropMin_Parms, NULL );

	pFnGetPropMin->FunctionFlags |= 0x400;

	if ( val )
		*val = GetPropMin_Parms.val;

	return GetPropMin_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.AddCustomServerTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            LootId                         ( CPF_Parm )

bool UTrQueueManager::AddCustomServerTime ( int LootId )
{
	static UFunction* pFnAddCustomServerTime = NULL;

	if ( ! pFnAddCustomServerTime )
		pFnAddCustomServerTime = (UFunction*) UObject::GObjObjects()->Data[ 60264 ];

	UTrQueueManager_execAddCustomServerTime_Parms AddCustomServerTime_Parms;
	AddCustomServerTime_Parms.LootId = LootId;

	pFnAddCustomServerTime->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCustomServerTime, &AddCustomServerTime_Parms, NULL );

	pFnAddCustomServerTime->FunctionFlags |= 0x400;

	return AddCustomServerTime_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.AddCustomServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrQueueManager::AddCustomServer ( )
{
	static UFunction* pFnAddCustomServer = NULL;

	if ( ! pFnAddCustomServer )
		pFnAddCustomServer = (UFunction*) UObject::GObjObjects()->Data[ 59365 ];

	UTrQueueManager_execAddCustomServer_Parms AddCustomServer_Parms;

	pFnAddCustomServer->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCustomServer, &AddCustomServer_Parms, NULL );

	pFnAddCustomServer->FunctionFlags |= 0x400;

	return AddCustomServer_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SetLocalName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

bool UTrQueueManager::SetLocalName ( struct FString val )
{
	static UFunction* pFnSetLocalName = NULL;

	if ( ! pFnSetLocalName )
		pFnSetLocalName = (UFunction*) UObject::GObjObjects()->Data[ 108642 ];

	UTrQueueManager_execSetLocalName_Parms SetLocalName_Parms;
	memcpy ( &SetLocalName_Parms.val, &val, 0xC );

	pFnSetLocalName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetLocalName, &SetLocalName_Parms, NULL );

	pFnSetLocalName->FunctionFlags |= 0x400;

	return SetLocalName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SetPropString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )
// int                            PropType                       ( CPF_Parm )

bool UTrQueueManager::SetPropString ( int PropId, struct FString val, int PropType )
{
	static UFunction* pFnSetPropString = NULL;

	if ( ! pFnSetPropString )
		pFnSetPropString = (UFunction*) UObject::GObjObjects()->Data[ 60602 ];

	UTrQueueManager_execSetPropString_Parms SetPropString_Parms;
	SetPropString_Parms.PropId = PropId;
	memcpy ( &SetPropString_Parms.val, &val, 0xC );
	SetPropString_Parms.PropType = PropType;

	pFnSetPropString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPropString, &SetPropString_Parms, NULL );

	pFnSetPropString->FunctionFlags |= 0x400;

	return SetPropString_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.SetPropNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// int                            val                            ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

bool UTrQueueManager::SetPropNumber ( int PropId, int val, int PropType )
{
	static UFunction* pFnSetPropNumber = NULL;

	if ( ! pFnSetPropNumber )
		pFnSetPropNumber = (UFunction*) UObject::GObjObjects()->Data[ 57662 ];

	UTrQueueManager_execSetPropNumber_Parms SetPropNumber_Parms;
	SetPropNumber_Parms.PropId = PropId;
	SetPropNumber_Parms.val = val;
	SetPropNumber_Parms.PropType = PropType;

	pFnSetPropNumber->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPropNumber, &SetPropNumber_Parms, NULL );

	pFnSetPropNumber->FunctionFlags |= 0x400;

	return SetPropNumber_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetPropString
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

struct FString UTrQueueManager::GetPropString ( int PropId, int PropType )
{
	static UFunction* pFnGetPropString = NULL;

	if ( ! pFnGetPropString )
		pFnGetPropString = (UFunction*) UObject::GObjObjects()->Data[ 108632 ];

	UTrQueueManager_execGetPropString_Parms GetPropString_Parms;
	GetPropString_Parms.PropId = PropId;
	GetPropString_Parms.PropType = PropType;

	pFnGetPropString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropString, &GetPropString_Parms, NULL );

	pFnGetPropString->FunctionFlags |= 0x400;

	return GetPropString_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetPropNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

int UTrQueueManager::GetPropNumber ( int PropId, int PropType )
{
	static UFunction* pFnGetPropNumber = NULL;

	if ( ! pFnGetPropNumber )
		pFnGetPropNumber = (UFunction*) UObject::GObjObjects()->Data[ 59309 ];

	UTrQueueManager_execGetPropNumber_Parms GetPropNumber_Parms;
	GetPropNumber_Parms.PropId = PropId;
	GetPropNumber_Parms.PropType = PropType;

	pFnGetPropNumber->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropNumber, &GetPropNumber_Parms, NULL );

	pFnGetPropNumber->FunctionFlags |= 0x400;

	return GetPropNumber_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetNextMapId
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bStart                         ( CPF_Parm )
// int                            MapId                          ( CPF_Parm | CPF_OutParm )

bool UTrQueueManager::GetNextMapId ( unsigned long bStart, int* MapId )
{
	static UFunction* pFnGetNextMapId = NULL;

	if ( ! pFnGetNextMapId )
		pFnGetNextMapId = (UFunction*) UObject::GObjObjects()->Data[ 57672 ];

	UTrQueueManager_execGetNextMapId_Parms GetNextMapId_Parms;
	GetNextMapId_Parms.bStart = bStart;

	pFnGetNextMapId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetNextMapId, &GetNextMapId_Parms, NULL );

	pFnGetNextMapId->FunctionFlags |= 0x400;

	if ( MapId )
		*MapId = GetNextMapId_Parms.MapId;

	return GetNextMapId_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.GetMapName
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            MapId                          ( CPF_Parm )

struct FString UTrQueueManager::GetMapName ( int MapId )
{
	static UFunction* pFnGetMapName = NULL;

	if ( ! pFnGetMapName )
		pFnGetMapName = (UFunction*) UObject::GObjObjects()->Data[ 57681 ];

	UTrQueueManager_execGetMapName_Parms GetMapName_Parms;
	GetMapName_Parms.MapId = MapId;

	pFnGetMapName->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetMapName, &GetMapName_Parms, NULL );

	pFnGetMapName->FunctionFlags |= 0x400;

	return GetMapName_Parms.ReturnValue;
};

// Function TribesGame.TrQueueManager.RefreshRentedServers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrQueueManager::RefreshRentedServers ( )
{
	static UFunction* pFnRefreshRentedServers = NULL;

	if ( ! pFnRefreshRentedServers )
		pFnRefreshRentedServers = (UFunction*) UObject::GObjObjects()->Data[ 108626 ];

	UTrQueueManager_execRefreshRentedServers_Parms RefreshRentedServers_Parms;

	pFnRefreshRentedServers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRefreshRentedServers, &RefreshRentedServers_Parms, NULL );

	pFnRefreshRentedServers->FunctionFlags |= 0x400;
};

// Function TribesGame.TrQueueManager.RequestCustomServers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrQueueManager::RequestCustomServers ( )
{
	static UFunction* pFnRequestCustomServers = NULL;

	if ( ! pFnRequestCustomServers )
		pFnRequestCustomServers = (UFunction*) UObject::GObjObjects()->Data[ 108625 ];

	UTrQueueManager_execRequestCustomServers_Parms RequestCustomServers_Parms;

	pFnRequestCustomServers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRequestCustomServers, &RequestCustomServers_Parms, NULL );

	pFnRequestCustomServers->FunctionFlags |= 0x400;
};

// Function TribesGame.TrQueueManager.GetCustomServers
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrQueueManager::GetCustomServers ( )
{
	static UFunction* pFnGetCustomServers = NULL;

	if ( ! pFnGetCustomServers )
		pFnGetCustomServers = (UFunction*) UObject::GObjObjects()->Data[ 108624 ];

	UTrQueueManager_execGetCustomServers_Parms GetCustomServers_Parms;

	pFnGetCustomServers->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCustomServers, &GetCustomServers_Parms, NULL );

	pFnGetCustomServers->FunctionFlags |= 0x400;
};

// Function TribesGame.TrQueueManager.OpenLocal
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrQueueManager::OpenLocal ( struct FString URL )
{
	static UFunction* pFnOpenLocal = NULL;

	if ( ! pFnOpenLocal )
		pFnOpenLocal = (UFunction*) UObject::GObjObjects()->Data[ 108622 ];

	UTrQueueManager_execOpenLocal_Parms OpenLocal_Parms;
	memcpy ( &OpenLocal_Parms.URL, &URL, 0xC );

	pFnOpenLocal->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenLocal, &OpenLocal_Parms, NULL );

	pFnOpenLocal->FunctionFlags |= 0x400;
};

// Function TribesGame.TrQueueManager.ForceGoHome
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrQueueManager::ForceGoHome ( )
{
	static UFunction* pFnForceGoHome = NULL;

	if ( ! pFnForceGoHome )
		pFnForceGoHome = (UFunction*) UObject::GObjObjects()->Data[ 108621 ];

	UTrQueueManager_execForceGoHome_Parms ForceGoHome_Parms;

	pFnForceGoHome->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnForceGoHome, &ForceGoHome_Parms, NULL );

	pFnForceGoHome->FunctionFlags |= 0x400;
};

// Function TribesGame.TrRegionSettings.AddSetting
// [0x00020002] 
// Parameters infos:
// struct FName                   RegionName                     ( CPF_Parm )
// int                            Id                             ( CPF_Parm )

void UTrRegionSettings::AddSetting ( struct FName RegionName, int Id )
{
	static UFunction* pFnAddSetting = NULL;

	if ( ! pFnAddSetting )
		pFnAddSetting = (UFunction*) UObject::GObjObjects()->Data[ 109562 ];

	UTrRegionSettings_execAddSetting_Parms AddSetting_Parms;
	memcpy ( &AddSetting_Parms.RegionName, &RegionName, 0x8 );
	AddSetting_Parms.Id = Id;

	this->ProcessEvent ( pFnAddSetting, &AddSetting_Parms, NULL );
};

// Function TribesGame.TrRegionSettings.AddRegion
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FString                 RegionName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Id                             ( CPF_Parm )
// unsigned long                  bCustomOnly                    ( CPF_Parm )

void UTrRegionSettings::eventAddRegion ( struct FString RegionName, int Id, unsigned long bCustomOnly )
{
	static UFunction* pFnAddRegion = NULL;

	if ( ! pFnAddRegion )
		pFnAddRegion = (UFunction*) UObject::GObjObjects()->Data[ 109556 ];

	UTrRegionSettings_eventAddRegion_Parms AddRegion_Parms;
	memcpy ( &AddRegion_Parms.RegionName, &RegionName, 0xC );
	AddRegion_Parms.Id = Id;
	AddRegion_Parms.bCustomOnly = bCustomOnly;

	this->ProcessEvent ( pFnAddRegion, &AddRegion_Parms, NULL );
};

// Function TribesGame.TrRegionSettings.SetPreferredRegion
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrRegionSettings::SetPreferredRegion ( int Index )
{
	static UFunction* pFnSetPreferredRegion = NULL;

	if ( ! pFnSetPreferredRegion )
		pFnSetPreferredRegion = (UFunction*) UObject::GObjObjects()->Data[ 109554 ];

	UTrRegionSettings_execSetPreferredRegion_Parms SetPreferredRegion_Parms;
	SetPreferredRegion_Parms.Index = Index;

	this->ProcessEvent ( pFnSetPreferredRegion, &SetPreferredRegion_Parms, NULL );
};

// Function TribesGame.TrRegionSettings.GetRegionName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            siteId                         ( CPF_Parm )

struct FString UTrRegionSettings::GetRegionName ( int siteId )
{
	static UFunction* pFnGetRegionName = NULL;

	if ( ! pFnGetRegionName )
		pFnGetRegionName = (UFunction*) UObject::GObjObjects()->Data[ 58230 ];

	UTrRegionSettings_execGetRegionName_Parms GetRegionName_Parms;
	GetRegionName_Parms.siteId = siteId;

	this->ProcessEvent ( pFnGetRegionName, &GetRegionName_Parms, NULL );

	return GetRegionName_Parms.ReturnValue;
};

// Function TribesGame.TrRegionSettings.GetRegionIdAtIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int UTrRegionSettings::GetRegionIdAtIndex ( int Index )
{
	static UFunction* pFnGetRegionIdAtIndex = NULL;

	if ( ! pFnGetRegionIdAtIndex )
		pFnGetRegionIdAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 60078 ];

	UTrRegionSettings_execGetRegionIdAtIndex_Parms GetRegionIdAtIndex_Parms;
	GetRegionIdAtIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnGetRegionIdAtIndex, &GetRegionIdAtIndex_Parms, NULL );

	return GetRegionIdAtIndex_Parms.ReturnValue;
};

// Function TribesGame.TrRegionSettings.LoadRegionSetting
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrRegionSettings::LoadRegionSetting ( )
{
	static UFunction* pFnLoadRegionSetting = NULL;

	if ( ! pFnLoadRegionSetting )
		pFnLoadRegionSetting = (UFunction*) UObject::GObjObjects()->Data[ 54405 ];

	UTrRegionSettings_execLoadRegionSetting_Parms LoadRegionSetting_Parms;

	this->ProcessEvent ( pFnLoadRegionSetting, &LoadRegionSetting_Parms, NULL );

	return LoadRegionSetting_Parms.ReturnValue;
};

// Function TribesGame.TrRegionSettings.LoadRegionLabels
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrRegionSettings::LoadRegionLabels ( class UGFxObject* List )
{
	static UFunction* pFnLoadRegionLabels = NULL;

	if ( ! pFnLoadRegionLabels )
		pFnLoadRegionLabels = (UFunction*) UObject::GObjObjects()->Data[ 109546 ];

	UTrRegionSettings_execLoadRegionLabels_Parms LoadRegionLabels_Parms;
	LoadRegionLabels_Parms.List = List;

	this->ProcessEvent ( pFnLoadRegionLabels, &LoadRegionLabels_Parms, NULL );
};

// Function TribesGame.TrRegionSettings.SetPreferredSiteId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            siteId                         ( CPF_Parm )

void UTrRegionSettings::SetPreferredSiteId ( int siteId )
{
	static UFunction* pFnSetPreferredSiteId = NULL;

	if ( ! pFnSetPreferredSiteId )
		pFnSetPreferredSiteId = (UFunction*) UObject::GObjObjects()->Data[ 109544 ];

	UTrRegionSettings_execSetPreferredSiteId_Parms SetPreferredSiteId_Parms;
	SetPreferredSiteId_Parms.siteId = siteId;

	pFnSetPreferredSiteId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetPreferredSiteId, &SetPreferredSiteId_Parms, NULL );

	pFnSetPreferredSiteId->FunctionFlags |= 0x400;
};

// Function TribesGame.TrRegionSettings.GetPreferredSiteId
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrRegionSettings::GetPreferredSiteId ( )
{
	static UFunction* pFnGetPreferredSiteId = NULL;

	if ( ! pFnGetPreferredSiteId )
		pFnGetPreferredSiteId = (UFunction*) UObject::GObjObjects()->Data[ 54312 ];

	UTrRegionSettings_execGetPreferredSiteId_Parms GetPreferredSiteId_Parms;

	pFnGetPreferredSiteId->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPreferredSiteId, &GetPreferredSiteId_Parms, NULL );

	pFnGetPreferredSiteId->FunctionFlags |= 0x400;

	return GetPreferredSiteId_Parms.ReturnValue;
};

// Function TribesGame.TrRegionSettings.LoadRegions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrRegionSettings::LoadRegions ( )
{
	static UFunction* pFnLoadRegions = NULL;

	if ( ! pFnLoadRegions )
		pFnLoadRegions = (UFunction*) UObject::GObjObjects()->Data[ 109543 ];

	UTrRegionSettings_execLoadRegions_Parms LoadRegions_Parms;

	pFnLoadRegions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadRegions, &LoadRegions_Parms, NULL );

	pFnLoadRegions->FunctionFlags |= 0x400;
};

// Function TribesGame.TrServerSettingsInfo.GetClassCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ClassType                      ( CPF_Parm )

int ATrServerSettingsInfo::GetClassCount ( unsigned char ClassType )
{
	static UFunction* pFnGetClassCount = NULL;

	if ( ! pFnGetClassCount )
		pFnGetClassCount = (UFunction*) UObject::GObjObjects()->Data[ 56508 ];

	ATrServerSettingsInfo_execGetClassCount_Parms GetClassCount_Parms;
	GetClassCount_Parms.ClassType = ClassType;

	this->ProcessEvent ( pFnGetClassCount, &GetClassCount_Parms, NULL );

	return GetClassCount_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.IsClassAllowed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ClassType                      ( CPF_Parm )
// int                            CurrentCount                   ( CPF_Parm )

bool ATrServerSettingsInfo::IsClassAllowed ( unsigned char ClassType, int CurrentCount )
{
	static UFunction* pFnIsClassAllowed = NULL;

	if ( ! pFnIsClassAllowed )
		pFnIsClassAllowed = (UFunction*) UObject::GObjObjects()->Data[ 91637 ];

	ATrServerSettingsInfo_execIsClassAllowed_Parms IsClassAllowed_Parms;
	IsClassAllowed_Parms.ClassType = ClassType;
	IsClassAllowed_Parms.CurrentCount = CurrentCount;

	this->ProcessEvent ( pFnIsClassAllowed, &IsClassAllowed_Parms, NULL );

	return IsClassAllowed_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.IsCallinAllowed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool ATrServerSettingsInfo::IsCallinAllowed ( int Index )
{
	static UFunction* pFnIsCallinAllowed = NULL;

	if ( ! pFnIsCallinAllowed )
		pFnIsCallinAllowed = (UFunction*) UObject::GObjObjects()->Data[ 82505 ];

	ATrServerSettingsInfo_execIsCallinAllowed_Parms IsCallinAllowed_Parms;
	IsCallinAllowed_Parms.Index = Index;

	this->ProcessEvent ( pFnIsCallinAllowed, &IsCallinAllowed_Parms, NULL );

	return IsCallinAllowed_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.GetVehicleLimit
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int ATrServerSettingsInfo::GetVehicleLimit ( int Index )
{
	static UFunction* pFnGetVehicleLimit = NULL;

	if ( ! pFnGetVehicleLimit )
		pFnGetVehicleLimit = (UFunction*) UObject::GObjObjects()->Data[ 111384 ];

	ATrServerSettingsInfo_execGetVehicleLimit_Parms GetVehicleLimit_Parms;
	GetVehicleLimit_Parms.Index = Index;

	this->ProcessEvent ( pFnGetVehicleLimit, &GetVehicleLimit_Parms, NULL );

	return GetVehicleLimit_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.LoadServerSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrServerSettingsInfo::eventLoadServerSettings ( )
{
	static UFunction* pFnLoadServerSettings = NULL;

	if ( ! pFnLoadServerSettings )
		pFnLoadServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 111382 ];

	ATrServerSettingsInfo_eventLoadServerSettings_Parms LoadServerSettings_Parms;

	this->ProcessEvent ( pFnLoadServerSettings, &LoadServerSettings_Parms, NULL );
};

// Function TribesGame.TrServerSettingsInfo.ApplyServerSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrServerSettingsInfo::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 111381 ];

	ATrServerSettingsInfo_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	pFnApplyServerSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );

	pFnApplyServerSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrServerSettingsInfo.GetPropAsString
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// struct FString                 Value                          ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool ATrServerSettingsInfo::GetPropAsString ( int PropId, struct FString* Value )
{
	static UFunction* pFnGetPropAsString = NULL;

	if ( ! pFnGetPropAsString )
		pFnGetPropAsString = (UFunction*) UObject::GObjObjects()->Data[ 111377 ];

	ATrServerSettingsInfo_execGetPropAsString_Parms GetPropAsString_Parms;
	GetPropAsString_Parms.PropId = PropId;

	pFnGetPropAsString->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropAsString, &GetPropAsString_Parms, NULL );

	pFnGetPropAsString->FunctionFlags |= 0x400;

	if ( Value )
		memcpy ( Value, &GetPropAsString_Parms.Value, 0xC );

	return GetPropAsString_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.GetPropAsInt
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// int                            Value                          ( CPF_Parm | CPF_OutParm )

bool ATrServerSettingsInfo::GetPropAsInt ( int PropId, int* Value )
{
	static UFunction* pFnGetPropAsInt = NULL;

	if ( ! pFnGetPropAsInt )
		pFnGetPropAsInt = (UFunction*) UObject::GObjObjects()->Data[ 111373 ];

	ATrServerSettingsInfo_execGetPropAsInt_Parms GetPropAsInt_Parms;
	GetPropAsInt_Parms.PropId = PropId;

	pFnGetPropAsInt->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropAsInt, &GetPropAsInt_Parms, NULL );

	pFnGetPropAsInt->FunctionFlags |= 0x400;

	if ( Value )
		*Value = GetPropAsInt_Parms.Value;

	return GetPropAsInt_Parms.ReturnValue;
};

// Function TribesGame.TrServerSettingsInfo.GetPropAsFloat
// [0x00422400] ( FUNC_Native )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PropId                         ( CPF_Parm )
// float                          Value                          ( CPF_Parm | CPF_OutParm )

bool ATrServerSettingsInfo::GetPropAsFloat ( int PropId, float* Value )
{
	static UFunction* pFnGetPropAsFloat = NULL;

	if ( ! pFnGetPropAsFloat )
		pFnGetPropAsFloat = (UFunction*) UObject::GObjObjects()->Data[ 111369 ];

	ATrServerSettingsInfo_execGetPropAsFloat_Parms GetPropAsFloat_Parms;
	GetPropAsFloat_Parms.PropId = PropId;

	pFnGetPropAsFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPropAsFloat, &GetPropAsFloat_Parms, NULL );

	pFnGetPropAsFloat->FunctionFlags |= 0x400;

	if ( Value )
		*Value = GetPropAsFloat_Parms.Value;

	return GetPropAsFloat_Parms.ReturnValue;
};

// Function TribesGame.TrSkelControl_SpinControl.SpinToTargetRotation
// [0x00024400] ( FUNC_Native )
// Parameters infos:
// struct FRotator                TargetRotation                 ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bReset                         ( CPF_OptionalParm | CPF_Parm )

void UTrSkelControl_SpinControl::SpinToTargetRotation ( struct FRotator TargetRotation, float Time, unsigned long bReset )
{
	static UFunction* pFnSpinToTargetRotation = NULL;

	if ( ! pFnSpinToTargetRotation )
		pFnSpinToTargetRotation = (UFunction*) UObject::GObjObjects()->Data[ 111420 ];

	UTrSkelControl_SpinControl_execSpinToTargetRotation_Parms SpinToTargetRotation_Parms;
	memcpy ( &SpinToTargetRotation_Parms.TargetRotation, &TargetRotation, 0xC );
	SpinToTargetRotation_Parms.Time = Time;
	SpinToTargetRotation_Parms.bReset = bReset;

	pFnSpinToTargetRotation->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpinToTargetRotation, &SpinToTargetRotation_Parms, NULL );

	pFnSpinToTargetRotation->FunctionFlags |= 0x400;
};

// Function TribesGame.TrSkelControl_SpinControl.Spin
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void UTrSkelControl_SpinControl::Spin ( unsigned long bEnabled )
{
	static UFunction* pFnSpin = NULL;

	if ( ! pFnSpin )
		pFnSpin = (UFunction*) UObject::GObjObjects()->Data[ 111418 ];

	UTrSkelControl_SpinControl_execSpin_Parms Spin_Parms;
	Spin_Parms.bEnabled = bEnabled;

	pFnSpin->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSpin, &Spin_Parms, NULL );

	pFnSpin->FunctionFlags |= 0x400;
};

// Function TribesGame.TrSkeletalMeshComponent.SetFOV
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:
// float                          NewFOV                         ( CPF_Parm )

void UTrSkeletalMeshComponent::SetFOV ( float NewFOV )
{
	static UFunction* pFnSetFOV = NULL;

	if ( ! pFnSetFOV )
		pFnSetFOV = (UFunction*) UObject::GObjObjects()->Data[ 111460 ];

	UTrSkeletalMeshComponent_execSetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.NewFOV = NewFOV;

	pFnSetFOV->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetFOV, &SetFOV_Parms, NULL );

	pFnSetFOV->FunctionFlags |= 0x400;
};

// Function TribesGame.TrSkeletalMeshComponent.PreloadTextures
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForcePreload                  ( CPF_Parm )
// float                          ClearTime                      ( CPF_Parm )

void UTrSkeletalMeshComponent::eventPreloadTextures ( unsigned long bForcePreload, float ClearTime )
{
	static UFunction* pFnPreloadTextures = NULL;

	if ( ! pFnPreloadTextures )
		pFnPreloadTextures = (UFunction*) UObject::GObjObjects()->Data[ 111456 ];

	UTrSkeletalMeshComponent_eventPreloadTextures_Parms PreloadTextures_Parms;
	PreloadTextures_Parms.bForcePreload = bForcePreload;
	PreloadTextures_Parms.ClearTime = ClearTime;

	this->ProcessEvent ( pFnPreloadTextures, &PreloadTextures_Parms, NULL );
};

// Function TribesGame.TrSpottedTarget.GetMarkerColor
// [0x00020102] 
// Parameters infos:
// struct FLinearColor            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FLinearColor ATrSpottedTarget::GetMarkerColor ( )
{
	static UFunction* pFnGetMarkerColor = NULL;

	if ( ! pFnGetMarkerColor )
		pFnGetMarkerColor = (UFunction*) UObject::GObjObjects()->Data[ 111614 ];

	ATrSpottedTarget_execGetMarkerColor_Parms GetMarkerColor_Parms;

	this->ProcessEvent ( pFnGetMarkerColor, &GetMarkerColor_Parms, NULL );

	return GetMarkerColor_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrSpottedTarget::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 111612 ];

	ATrSpottedTarget_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget.ShouldRenderMarker
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrSpottedTarget::ShouldRenderMarker ( )
{
	static UFunction* pFnShouldRenderMarker = NULL;

	if ( ! pFnShouldRenderMarker )
		pFnShouldRenderMarker = (UFunction*) UObject::GObjObjects()->Data[ 111610 ];

	ATrSpottedTarget_execShouldRenderMarker_Parms ShouldRenderMarker_Parms;

	this->ProcessEvent ( pFnShouldRenderMarker, &ShouldRenderMarker_Parms, NULL );

	return ShouldRenderMarker_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrSpottedTarget::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 111601 ];

	ATrSpottedTarget_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrSpottedTarget.SetSpottedActor
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewSpottedActor                ( CPF_Parm )

void ATrSpottedTarget::SetSpottedActor ( class AActor* NewSpottedActor )
{
	static UFunction* pFnSetSpottedActor = NULL;

	if ( ! pFnSetSpottedActor )
		pFnSetSpottedActor = (UFunction*) UObject::GObjObjects()->Data[ 111599 ];

	ATrSpottedTarget_execSetSpottedActor_Parms SetSpottedActor_Parms;
	SetSpottedActor_Parms.NewSpottedActor = NewSpottedActor;

	this->ProcessEvent ( pFnSetSpottedActor, &SetSpottedActor_Parms, NULL );
};

// Function TribesGame.TrSpottedTarget.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrSpottedTarget::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 111597 ];

	ATrSpottedTarget_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrSpottedTarget_MotionMine.ShouldRenderMarker
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrSpottedTarget_MotionMine::ShouldRenderMarker ( )
{
	static UFunction* pFnShouldRenderMarker = NULL;

	if ( ! pFnShouldRenderMarker )
		pFnShouldRenderMarker = (UFunction*) UObject::GObjObjects()->Data[ 111624 ];

	ATrSpottedTarget_MotionMine_execShouldRenderMarker_Parms ShouldRenderMarker_Parms;

	this->ProcessEvent ( pFnShouldRenderMarker, &ShouldRenderMarker_Parms, NULL );

	return ShouldRenderMarker_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget_MotionMine.GetMarkerColor
// [0x00020102] 
// Parameters infos:
// struct FLinearColor            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FLinearColor ATrSpottedTarget_MotionMine::GetMarkerColor ( )
{
	static UFunction* pFnGetMarkerColor = NULL;

	if ( ! pFnGetMarkerColor )
		pFnGetMarkerColor = (UFunction*) UObject::GObjObjects()->Data[ 111622 ];

	ATrSpottedTarget_MotionMine_execGetMarkerColor_Parms GetMarkerColor_Parms;

	this->ProcessEvent ( pFnGetMarkerColor, &GetMarkerColor_Parms, NULL );

	return GetMarkerColor_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget_MotionMine.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrSpottedTarget_MotionMine::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 111620 ];

	ATrSpottedTarget_MotionMine_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrSpottedTarget_MotionMine.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrSpottedTarget_MotionMine::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 111618 ];

	ATrSpottedTarget_MotionMine_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrStatsInterface.Flush
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStatsInterface::Flush ( )
{
	static UFunction* pFnFlush = NULL;

	if ( ! pFnFlush )
		pFnFlush = (UFunction*) UObject::GObjObjects()->Data[ 111768 ];

	UTrStatsInterface_execFlush_Parms Flush_Parms;

	pFnFlush->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlush, &Flush_Parms, NULL );

	pFnFlush->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.GameEnd
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStatsInterface::GameEnd ( )
{
	static UFunction* pFnGameEnd = NULL;

	if ( ! pFnGameEnd )
		pFnGameEnd = (UFunction*) UObject::GObjObjects()->Data[ 111767 ];

	UTrStatsInterface_execGameEnd_Parms GameEnd_Parms;

	pFnGameEnd->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGameEnd, &GameEnd_Parms, NULL );

	pFnGameEnd->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.WritePlayerStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// TArray< class APlayerReplicationInfo* > PRIArray                       ( CPF_Parm | CPF_NeedCtorLink )

void UTrStatsInterface::WritePlayerStats ( TArray< class APlayerReplicationInfo* > PRIArray )
{
	static UFunction* pFnWritePlayerStats = NULL;

	if ( ! pFnWritePlayerStats )
		pFnWritePlayerStats = (UFunction*) UObject::GObjObjects()->Data[ 111764 ];

	UTrStatsInterface_execWritePlayerStats_Parms WritePlayerStats_Parms;
	memcpy ( &WritePlayerStats_Parms.PRIArray, &PRIArray, 0xC );

	pFnWritePlayerStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWritePlayerStats, &WritePlayerStats_Parms, NULL );

	pFnWritePlayerStats->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.WriteMatchStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStatsInterface::WriteMatchStats ( )
{
	static UFunction* pFnWriteMatchStats = NULL;

	if ( ! pFnWriteMatchStats )
		pFnWriteMatchStats = (UFunction*) UObject::GObjObjects()->Data[ 111763 ];

	UTrStatsInterface_execWriteMatchStats_Parms WriteMatchStats_Parms;

	pFnWriteMatchStats->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnWriteMatchStats, &WriteMatchStats_Parms, NULL );

	pFnWriteMatchStats->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddGeneratorDestruction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStatsInterface::AddGeneratorDestruction ( )
{
	static UFunction* pFnAddGeneratorDestruction = NULL;

	if ( ! pFnAddGeneratorDestruction )
		pFnAddGeneratorDestruction = (UFunction*) UObject::GObjObjects()->Data[ 111762 ];

	UTrStatsInterface_execAddGeneratorDestruction_Parms AddGeneratorDestruction_Parms;

	pFnAddGeneratorDestruction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddGeneratorDestruction, &AddGeneratorDestruction_Parms, NULL );

	pFnAddGeneratorDestruction->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddVehicleSpawn
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStatsInterface::AddVehicleSpawn ( )
{
	static UFunction* pFnAddVehicleSpawn = NULL;

	if ( ! pFnAddVehicleSpawn )
		pFnAddVehicleSpawn = (UFunction*) UObject::GObjObjects()->Data[ 111761 ];

	UTrStatsInterface_execAddVehicleSpawn_Parms AddVehicleSpawn_Parms;

	pFnAddVehicleSpawn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddVehicleSpawn, &AddVehicleSpawn_Parms, NULL );

	pFnAddVehicleSpawn->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.TrackPlayerMovement
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            TimeStamp                      ( CPF_Parm )

void UTrStatsInterface::TrackPlayerMovement ( class ATrPlayerController* PC, int TimeStamp )
{
	static UFunction* pFnTrackPlayerMovement = NULL;

	if ( ! pFnTrackPlayerMovement )
		pFnTrackPlayerMovement = (UFunction*) UObject::GObjObjects()->Data[ 111758 ];

	UTrStatsInterface_execTrackPlayerMovement_Parms TrackPlayerMovement_Parms;
	TrackPlayerMovement_Parms.PC = PC;
	TrackPlayerMovement_Parms.TimeStamp = TimeStamp;

	pFnTrackPlayerMovement->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnTrackPlayerMovement, &TrackPlayerMovement_Parms, NULL );

	pFnTrackPlayerMovement->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.BaseUpgrade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::BaseUpgrade ( class ATrPlayerController* PC )
{
	static UFunction* pFnBaseUpgrade = NULL;

	if ( ! pFnBaseUpgrade )
		pFnBaseUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 111756 ];

	UTrStatsInterface_execBaseUpgrade_Parms BaseUpgrade_Parms;
	BaseUpgrade_Parms.PC = PC;

	pFnBaseUpgrade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBaseUpgrade, &BaseUpgrade_Parms, NULL );

	pFnBaseUpgrade->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SkiSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            Speed                          ( CPF_Parm )

void UTrStatsInterface::SkiSpeed ( class ATrPlayerController* PC, int Speed )
{
	static UFunction* pFnSkiSpeed = NULL;

	if ( ! pFnSkiSpeed )
		pFnSkiSpeed = (UFunction*) UObject::GObjObjects()->Data[ 111753 ];

	UTrStatsInterface_execSkiSpeed_Parms SkiSpeed_Parms;
	SkiSpeed_Parms.PC = PC;
	SkiSpeed_Parms.Speed = Speed;

	pFnSkiSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkiSpeed, &SkiSpeed_Parms, NULL );

	pFnSkiSpeed->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.InvStationVisited
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::InvStationVisited ( class ATrPlayerController* PC )
{
	static UFunction* pFnInvStationVisited = NULL;

	if ( ! pFnInvStationVisited )
		pFnInvStationVisited = (UFunction*) UObject::GObjObjects()->Data[ 111751 ];

	UTrStatsInterface_execInvStationVisited_Parms InvStationVisited_Parms;
	InvStationVisited_Parms.PC = PC;

	pFnInvStationVisited->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInvStationVisited, &InvStationVisited_Parms, NULL );

	pFnInvStationVisited->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.VEHICLEKILL
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::VEHICLEKILL ( class ATrPlayerController* PC )
{
	static UFunction* pFnVEHICLEKILL = NULL;

	if ( ! pFnVEHICLEKILL )
		pFnVEHICLEKILL = (UFunction*) UObject::GObjObjects()->Data[ 111749 ];

	UTrStatsInterface_execVEHICLEKILL_Parms VEHICLEKILL_Parms;
	VEHICLEKILL_Parms.PC = PC;

	pFnVEHICLEKILL->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnVEHICLEKILL, &VEHICLEKILL_Parms, NULL );

	pFnVEHICLEKILL->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.FlagGrabSpeed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            Speed                          ( CPF_Parm )

void UTrStatsInterface::FlagGrabSpeed ( class ATrPlayerController* PC, int Speed )
{
	static UFunction* pFnFlagGrabSpeed = NULL;

	if ( ! pFnFlagGrabSpeed )
		pFnFlagGrabSpeed = (UFunction*) UObject::GObjObjects()->Data[ 111746 ];

	UTrStatsInterface_execFlagGrabSpeed_Parms FlagGrabSpeed_Parms;
	FlagGrabSpeed_Parms.PC = PC;
	FlagGrabSpeed_Parms.Speed = Speed;

	pFnFlagGrabSpeed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFlagGrabSpeed, &FlagGrabSpeed_Parms, NULL );

	pFnFlagGrabSpeed->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.RegeneratedToFull
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::RegeneratedToFull ( class ATrPlayerController* PC )
{
	static UFunction* pFnRegeneratedToFull = NULL;

	if ( ! pFnRegeneratedToFull )
		pFnRegeneratedToFull = (UFunction*) UObject::GObjObjects()->Data[ 111744 ];

	UTrStatsInterface_execRegeneratedToFull_Parms RegeneratedToFull_Parms;
	RegeneratedToFull_Parms.PC = PC;

	pFnRegeneratedToFull->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegeneratedToFull, &RegeneratedToFull_Parms, NULL );

	pFnRegeneratedToFull->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.CallInKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::CallInKill ( class ATrPlayerController* PC )
{
	static UFunction* pFnCallInKill = NULL;

	if ( ! pFnCallInKill )
		pFnCallInKill = (UFunction*) UObject::GObjObjects()->Data[ 111742 ];

	UTrStatsInterface_execCallInKill_Parms CallInKill_Parms;
	CallInKill_Parms.PC = PC;

	pFnCallInKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallInKill, &CallInKill_Parms, NULL );

	pFnCallInKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.CallIn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::CallIn ( class ATrPlayerController* PC )
{
	static UFunction* pFnCallIn = NULL;

	if ( ! pFnCallIn )
		pFnCallIn = (UFunction*) UObject::GObjObjects()->Data[ 111740 ];

	UTrStatsInterface_execCallIn_Parms CallIn_Parms;
	CallIn_Parms.PC = PC;

	pFnCallIn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCallIn, &CallIn_Parms, NULL );

	pFnCallIn->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.BeltKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::BeltKill ( class ATrPlayerController* PC )
{
	static UFunction* pFnBeltKill = NULL;

	if ( ! pFnBeltKill )
		pFnBeltKill = (UFunction*) UObject::GObjObjects()->Data[ 111738 ];

	UTrStatsInterface_execBeltKill_Parms BeltKill_Parms;
	BeltKill_Parms.PC = PC;

	pFnBeltKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnBeltKill, &BeltKill_Parms, NULL );

	pFnBeltKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SkiDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            Distance                       ( CPF_Parm )

void UTrStatsInterface::SkiDistance ( class ATrPlayerController* PC, int Distance )
{
	static UFunction* pFnSkiDistance = NULL;

	if ( ! pFnSkiDistance )
		pFnSkiDistance = (UFunction*) UObject::GObjObjects()->Data[ 111735 ];

	UTrStatsInterface_execSkiDistance_Parms SkiDistance_Parms;
	SkiDistance_Parms.PC = PC;
	SkiDistance_Parms.Distance = Distance;

	pFnSkiDistance->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSkiDistance, &SkiDistance_Parms, NULL );

	pFnSkiDistance->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.FallingDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::FallingDeath ( class ATrPlayerController* PC )
{
	static UFunction* pFnFallingDeath = NULL;

	if ( ! pFnFallingDeath )
		pFnFallingDeath = (UFunction*) UObject::GObjObjects()->Data[ 111733 ];

	UTrStatsInterface_execFallingDeath_Parms FallingDeath_Parms;
	FallingDeath_Parms.PC = PC;

	pFnFallingDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnFallingDeath, &FallingDeath_Parms, NULL );

	pFnFallingDeath->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetDistanceHeadshot
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetDistanceHeadshot ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetDistanceHeadshot = NULL;

	if ( ! pFnSetDistanceHeadshot )
		pFnSetDistanceHeadshot = (UFunction*) UObject::GObjObjects()->Data[ 111730 ];

	UTrStatsInterface_execSetDistanceHeadshot_Parms SetDistanceHeadshot_Parms;
	SetDistanceHeadshot_Parms.PC = PC;
	SetDistanceHeadshot_Parms.val = val;

	pFnSetDistanceHeadshot->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDistanceHeadshot, &SetDistanceHeadshot_Parms, NULL );

	pFnSetDistanceHeadshot->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetSpeedFlagGrab
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetSpeedFlagGrab ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetSpeedFlagGrab = NULL;

	if ( ! pFnSetSpeedFlagGrab )
		pFnSetSpeedFlagGrab = (UFunction*) UObject::GObjObjects()->Data[ 111727 ];

	UTrStatsInterface_execSetSpeedFlagGrab_Parms SetSpeedFlagGrab_Parms;
	SetSpeedFlagGrab_Parms.PC = PC;
	SetSpeedFlagGrab_Parms.val = val;

	pFnSetSpeedFlagGrab->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSpeedFlagGrab, &SetSpeedFlagGrab_Parms, NULL );

	pFnSetSpeedFlagGrab->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddDistanceSkied
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::AddDistanceSkied ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnAddDistanceSkied = NULL;

	if ( ! pFnAddDistanceSkied )
		pFnAddDistanceSkied = (UFunction*) UObject::GObjObjects()->Data[ 111724 ];

	UTrStatsInterface_execAddDistanceSkied_Parms AddDistanceSkied_Parms;
	AddDistanceSkied_Parms.PC = PC;
	AddDistanceSkied_Parms.val = val;

	pFnAddDistanceSkied->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddDistanceSkied, &AddDistanceSkied_Parms, NULL );

	pFnAddDistanceSkied->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddCreditsEarned
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::AddCreditsEarned ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnAddCreditsEarned = NULL;

	if ( ! pFnAddCreditsEarned )
		pFnAddCreditsEarned = (UFunction*) UObject::GObjObjects()->Data[ 111721 ];

	UTrStatsInterface_execAddCreditsEarned_Parms AddCreditsEarned_Parms;
	AddCreditsEarned_Parms.PC = PC;
	AddCreditsEarned_Parms.val = val;

	pFnAddCreditsEarned->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCreditsEarned, &AddCreditsEarned_Parms, NULL );

	pFnAddCreditsEarned->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetSpeedFlagCap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetSpeedFlagCap ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetSpeedFlagCap = NULL;

	if ( ! pFnSetSpeedFlagCap )
		pFnSetSpeedFlagCap = (UFunction*) UObject::GObjObjects()->Data[ 111718 ];

	UTrStatsInterface_execSetSpeedFlagCap_Parms SetSpeedFlagCap_Parms;
	SetSpeedFlagCap_Parms.PC = PC;
	SetSpeedFlagCap_Parms.val = val;

	pFnSetSpeedFlagCap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSpeedFlagCap, &SetSpeedFlagCap_Parms, NULL );

	pFnSetSpeedFlagCap->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetDistanceKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetDistanceKill ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetDistanceKill = NULL;

	if ( ! pFnSetDistanceKill )
		pFnSetDistanceKill = (UFunction*) UObject::GObjObjects()->Data[ 111715 ];

	UTrStatsInterface_execSetDistanceKill_Parms SetDistanceKill_Parms;
	SetDistanceKill_Parms.PC = PC;
	SetDistanceKill_Parms.val = val;

	pFnSetDistanceKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetDistanceKill, &SetDistanceKill_Parms, NULL );

	pFnSetDistanceKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddCreditsSpent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::AddCreditsSpent ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnAddCreditsSpent = NULL;

	if ( ! pFnAddCreditsSpent )
		pFnAddCreditsSpent = (UFunction*) UObject::GObjObjects()->Data[ 111712 ];

	UTrStatsInterface_execAddCreditsSpent_Parms AddCreditsSpent_Parms;
	AddCreditsSpent_Parms.PC = PC;
	AddCreditsSpent_Parms.val = val;

	pFnAddCreditsSpent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCreditsSpent, &AddCreditsSpent_Parms, NULL );

	pFnAddCreditsSpent->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddDeployableDestruction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddDeployableDestruction ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddDeployableDestruction = NULL;

	if ( ! pFnAddDeployableDestruction )
		pFnAddDeployableDestruction = (UFunction*) UObject::GObjObjects()->Data[ 111710 ];

	UTrStatsInterface_execAddDeployableDestruction_Parms AddDeployableDestruction_Parms;
	AddDeployableDestruction_Parms.PC = PC;

	pFnAddDeployableDestruction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddDeployableDestruction, &AddDeployableDestruction_Parms, NULL );

	pFnAddDeployableDestruction->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetSpeedSkied
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetSpeedSkied ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetSpeedSkied = NULL;

	if ( ! pFnSetSpeedSkied )
		pFnSetSpeedSkied = (UFunction*) UObject::GObjObjects()->Data[ 111707 ];

	UTrStatsInterface_execSetSpeedSkied_Parms SetSpeedSkied_Parms;
	SetSpeedSkied_Parms.PC = PC;
	SetSpeedSkied_Parms.val = val;

	pFnSetSpeedSkied->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetSpeedSkied, &SetSpeedSkied_Parms, NULL );

	pFnSetSpeedSkied->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddVehicleDestruction
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddVehicleDestruction ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddVehicleDestruction = NULL;

	if ( ! pFnAddVehicleDestruction )
		pFnAddVehicleDestruction = (UFunction*) UObject::GObjObjects()->Data[ 111705 ];

	UTrStatsInterface_execAddVehicleDestruction_Parms AddVehicleDestruction_Parms;
	AddVehicleDestruction_Parms.PC = PC;

	pFnAddVehicleDestruction->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddVehicleDestruction, &AddVehicleDestruction_Parms, NULL );

	pFnAddVehicleDestruction->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetTeam
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void UTrStatsInterface::SetTeam ( class ATrPlayerController* PC, int TeamNum )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 111702 ];

	UTrStatsInterface_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.PC = PC;
	SetTeam_Parms.TeamNum = TeamNum;

	pFnSetTeam->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );

	pFnSetTeam->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetXP
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrStatsInterface::SetXP ( class ATrPlayerController* PC, int val )
{
	static UFunction* pFnSetXP = NULL;

	if ( ! pFnSetXP )
		pFnSetXP = (UFunction*) UObject::GObjObjects()->Data[ 111699 ];

	UTrStatsInterface_execSetXP_Parms SetXP_Parms;
	SetXP_Parms.PC = PC;
	SetXP_Parms.val = val;

	pFnSetXP->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetXP, &SetXP_Parms, NULL );

	pFnSetXP->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddVehicleKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddVehicleKill ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddVehicleKill = NULL;

	if ( ! pFnAddVehicleKill )
		pFnAddVehicleKill = (UFunction*) UObject::GObjObjects()->Data[ 111697 ];

	UTrStatsInterface_execAddVehicleKill_Parms AddVehicleKill_Parms;
	AddVehicleKill_Parms.PC = PC;

	pFnAddVehicleKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddVehicleKill, &AddVehicleKill_Parms, NULL );

	pFnAddVehicleKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddMidairKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddMidairKill ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddMidairKill = NULL;

	if ( ! pFnAddMidairKill )
		pFnAddMidairKill = (UFunction*) UObject::GObjObjects()->Data[ 111695 ];

	UTrStatsInterface_execAddMidairKill_Parms AddMidairKill_Parms;
	AddMidairKill_Parms.PC = PC;

	pFnAddMidairKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddMidairKill, &AddMidairKill_Parms, NULL );

	pFnAddMidairKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddFlagReturn
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddFlagReturn ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddFlagReturn = NULL;

	if ( ! pFnAddFlagReturn )
		pFnAddFlagReturn = (UFunction*) UObject::GObjObjects()->Data[ 111693 ];

	UTrStatsInterface_execAddFlagReturn_Parms AddFlagReturn_Parms;
	AddFlagReturn_Parms.PC = PC;

	pFnAddFlagReturn->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFlagReturn, &AddFlagReturn_Parms, NULL );

	pFnAddFlagReturn->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddFlagGrab
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddFlagGrab ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddFlagGrab = NULL;

	if ( ! pFnAddFlagGrab )
		pFnAddFlagGrab = (UFunction*) UObject::GObjObjects()->Data[ 111691 ];

	UTrStatsInterface_execAddFlagGrab_Parms AddFlagGrab_Parms;
	AddFlagGrab_Parms.PC = PC;

	pFnAddFlagGrab->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFlagGrab, &AddFlagGrab_Parms, NULL );

	pFnAddFlagGrab->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddFlagCap
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddFlagCap ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddFlagCap = NULL;

	if ( ! pFnAddFlagCap )
		pFnAddFlagCap = (UFunction*) UObject::GObjObjects()->Data[ 111689 ];

	UTrStatsInterface_execAddFlagCap_Parms AddFlagCap_Parms;
	AddFlagCap_Parms.PC = PC;

	pFnAddFlagCap->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddFlagCap, &AddFlagCap_Parms, NULL );

	pFnAddFlagCap->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddRepair
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddRepair ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddRepair = NULL;

	if ( ! pFnAddRepair )
		pFnAddRepair = (UFunction*) UObject::GObjObjects()->Data[ 111687 ];

	UTrStatsInterface_execAddRepair_Parms AddRepair_Parms;
	AddRepair_Parms.PC = PC;

	pFnAddRepair->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddRepair, &AddRepair_Parms, NULL );

	pFnAddRepair->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetActiveClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            ClassId                        ( CPF_Parm )

void UTrStatsInterface::SetActiveClass ( class ATrPlayerController* PC, int ClassId )
{
	static UFunction* pFnSetActiveClass = NULL;

	if ( ! pFnSetActiveClass )
		pFnSetActiveClass = (UFunction*) UObject::GObjObjects()->Data[ 111684 ];

	UTrStatsInterface_execSetActiveClass_Parms SetActiveClass_Parms;
	SetActiveClass_Parms.PC = PC;
	SetActiveClass_Parms.ClassId = ClassId;

	pFnSetActiveClass->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetActiveClass, &SetActiveClass_Parms, NULL );

	pFnSetActiveClass->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.SetIdentification
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::SetIdentification ( class ATrPlayerController* PC )
{
	static UFunction* pFnSetIdentification = NULL;

	if ( ! pFnSetIdentification )
		pFnSetIdentification = (UFunction*) UObject::GObjObjects()->Data[ 111682 ];

	UTrStatsInterface_execSetIdentification_Parms SetIdentification_Parms;
	SetIdentification_Parms.PC = PC;

	pFnSetIdentification->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetIdentification, &SetIdentification_Parms, NULL );

	pFnSetIdentification->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.UpdateDamage
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            WeaponId                       ( CPF_Parm )
// int                            Amount                         ( CPF_Parm )
// int                            Dist                           ( CPF_Parm )
// unsigned long                  bKill                          ( CPF_Parm )
// unsigned long                  bVehicle                       ( CPF_Parm )

void UTrStatsInterface::UpdateDamage ( class ATrPlayerController* PC, int WeaponId, int Amount, int Dist, unsigned long bKill, unsigned long bVehicle )
{
	static UFunction* pFnUpdateDamage = NULL;

	if ( ! pFnUpdateDamage )
		pFnUpdateDamage = (UFunction*) UObject::GObjObjects()->Data[ 111675 ];

	UTrStatsInterface_execUpdateDamage_Parms UpdateDamage_Parms;
	UpdateDamage_Parms.PC = PC;
	UpdateDamage_Parms.WeaponId = WeaponId;
	UpdateDamage_Parms.Amount = Amount;
	UpdateDamage_Parms.Dist = Dist;
	UpdateDamage_Parms.bKill = bKill;
	UpdateDamage_Parms.bVehicle = bVehicle;

	pFnUpdateDamage->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateDamage, &UpdateDamage_Parms, NULL );

	pFnUpdateDamage->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.UpdateWeapon
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            WeaponId                       ( CPF_Parm )
// int                            ActivityId                     ( CPF_Parm )
// int                            ShotsFired                     ( CPF_Parm )
// int                            TimeUsed                       ( CPF_Parm )

void UTrStatsInterface::UpdateWeapon ( class ATrPlayerController* PC, int WeaponId, int ActivityId, int ShotsFired, int TimeUsed )
{
	static UFunction* pFnUpdateWeapon = NULL;

	if ( ! pFnUpdateWeapon )
		pFnUpdateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 111669 ];

	UTrStatsInterface_execUpdateWeapon_Parms UpdateWeapon_Parms;
	UpdateWeapon_Parms.PC = PC;
	UpdateWeapon_Parms.WeaponId = WeaponId;
	UpdateWeapon_Parms.ActivityId = ActivityId;
	UpdateWeapon_Parms.ShotsFired = ShotsFired;
	UpdateWeapon_Parms.TimeUsed = TimeUsed;

	pFnUpdateWeapon->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateWeapon, &UpdateWeapon_Parms, NULL );

	pFnUpdateWeapon->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.UpdateTimePlayed
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            TimeUsed                       ( CPF_Parm )

void UTrStatsInterface::UpdateTimePlayed ( class ATrPlayerController* PC, int TimeUsed )
{
	static UFunction* pFnUpdateTimePlayed = NULL;

	if ( ! pFnUpdateTimePlayed )
		pFnUpdateTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 111666 ];

	UTrStatsInterface_execUpdateTimePlayed_Parms UpdateTimePlayed_Parms;
	UpdateTimePlayed_Parms.PC = PC;
	UpdateTimePlayed_Parms.TimeUsed = TimeUsed;

	pFnUpdateTimePlayed->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnUpdateTimePlayed, &UpdateTimePlayed_Parms, NULL );

	pFnUpdateTimePlayed->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddCredits
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            val                            ( CPF_Parm )
// unsigned long                  bSpent                         ( CPF_Parm )
// unsigned long                  bFree                          ( CPF_Parm )

void UTrStatsInterface::AddCredits ( class ATrPlayerController* PC, int val, unsigned long bSpent, unsigned long bFree )
{
	static UFunction* pFnAddCredits = NULL;

	if ( ! pFnAddCredits )
		pFnAddCredits = (UFunction*) UObject::GObjObjects()->Data[ 111661 ];

	UTrStatsInterface_execAddCredits_Parms AddCredits_Parms;
	AddCredits_Parms.PC = PC;
	AddCredits_Parms.val = val;
	AddCredits_Parms.bSpent = bSpent;
	AddCredits_Parms.bFree = bFree;

	pFnAddCredits->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddCredits, &AddCredits_Parms, NULL );

	pFnAddCredits->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddAccolade
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// int                            Id                             ( CPF_Parm )
// int                            ActivityId                     ( CPF_Parm )

void UTrStatsInterface::AddAccolade ( class ATrPlayerController* PC, int Id, int ActivityId )
{
	static UFunction* pFnAddAccolade = NULL;

	if ( ! pFnAddAccolade )
		pFnAddAccolade = (UFunction*) UObject::GObjObjects()->Data[ 111657 ];

	UTrStatsInterface_execAddAccolade_Parms AddAccolade_Parms;
	AddAccolade_Parms.PC = PC;
	AddAccolade_Parms.Id = Id;
	AddAccolade_Parms.ActivityId = ActivityId;

	pFnAddAccolade->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddAccolade, &AddAccolade_Parms, NULL );

	pFnAddAccolade->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddAssist
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddAssist ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddAssist = NULL;

	if ( ! pFnAddAssist )
		pFnAddAssist = (UFunction*) UObject::GObjObjects()->Data[ 111655 ];

	UTrStatsInterface_execAddAssist_Parms AddAssist_Parms;
	AddAssist_Parms.PC = PC;

	pFnAddAssist->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddAssist, &AddAssist_Parms, NULL );

	pFnAddAssist->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddDeath ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddDeath = NULL;

	if ( ! pFnAddDeath )
		pFnAddDeath = (UFunction*) UObject::GObjObjects()->Data[ 111653 ];

	UTrStatsInterface_execAddDeath_Parms AddDeath_Parms;
	AddDeath_Parms.PC = PC;

	pFnAddDeath->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddDeath, &AddDeath_Parms, NULL );

	pFnAddDeath->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.AddKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )

void UTrStatsInterface::AddKill ( class ATrPlayerController* PC )
{
	static UFunction* pFnAddKill = NULL;

	if ( ! pFnAddKill )
		pFnAddKill = (UFunction*) UObject::GObjObjects()->Data[ 111651 ];

	UTrStatsInterface_execAddKill_Parms AddKill_Parms;
	AddKill_Parms.PC = PC;

	pFnAddKill->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnAddKill, &AddKill_Parms, NULL );

	pFnAddKill->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStatsInterface.Initialize
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// class UOnlineSubsystem*        Sub                            ( CPF_Parm )

void UTrStatsInterface::Initialize ( class UOnlineSubsystem* Sub )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 111649 ];

	UTrStatsInterface_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.Sub = Sub;

	pFnInitialize->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	pFnInitialize->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStreamManager.GetFeatureDescription
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Count                          ( CPF_OptionalParm | CPF_Parm )

struct FString UTrStreamManager::GetFeatureDescription ( int Count )
{
	static UFunction* pFnGetFeatureDescription = NULL;

	if ( ! pFnGetFeatureDescription )
		pFnGetFeatureDescription = (UFunction*) UObject::GObjObjects()->Data[ 61165 ];

	UTrStreamManager_execGetFeatureDescription_Parms GetFeatureDescription_Parms;
	GetFeatureDescription_Parms.Count = Count;

	this->ProcessEvent ( pFnGetFeatureDescription, &GetFeatureDescription_Parms, NULL );

	return GetFeatureDescription_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetFeatureName
// [0x00024002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Count                          ( CPF_OptionalParm | CPF_Parm )

struct FString UTrStreamManager::GetFeatureName ( int Count )
{
	static UFunction* pFnGetFeatureName = NULL;

	if ( ! pFnGetFeatureName )
		pFnGetFeatureName = (UFunction*) UObject::GObjObjects()->Data[ 59248 ];

	UTrStreamManager_execGetFeatureName_Parms GetFeatureName_Parms;
	GetFeatureName_Parms.Count = Count;

	this->ProcessEvent ( pFnGetFeatureName, &GetFeatureName_Parms, NULL );

	return GetFeatureName_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.HaveFeature
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrStreamManager::HaveFeature ( )
{
	static UFunction* pFnHaveFeature = NULL;

	if ( ! pFnHaveFeature )
		pFnHaveFeature = (UFunction*) UObject::GObjObjects()->Data[ 59246 ];

	UTrStreamManager_execHaveFeature_Parms HaveFeature_Parms;

	this->ProcessEvent ( pFnHaveFeature, &HaveFeature_Parms, NULL );

	return HaveFeature_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.IsLiveAtIndex
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UTrStreamManager::IsLiveAtIndex ( int Index )
{
	static UFunction* pFnIsLiveAtIndex = NULL;

	if ( ! pFnIsLiveAtIndex )
		pFnIsLiveAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 59017 ];

	UTrStreamManager_execIsLiveAtIndex_Parms IsLiveAtIndex_Parms;
	IsLiveAtIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnIsLiveAtIndex, &IsLiveAtIndex_Parms, NULL );

	return IsLiveAtIndex_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetDescriptionAtIndex
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UTrStreamManager::GetDescriptionAtIndex ( int Index )
{
	static UFunction* pFnGetDescriptionAtIndex = NULL;

	if ( ! pFnGetDescriptionAtIndex )
		pFnGetDescriptionAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 59027 ];

	UTrStreamManager_execGetDescriptionAtIndex_Parms GetDescriptionAtIndex_Parms;
	GetDescriptionAtIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnGetDescriptionAtIndex, &GetDescriptionAtIndex_Parms, NULL );

	return GetDescriptionAtIndex_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetViewersAtIndex
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UTrStreamManager::GetViewersAtIndex ( int Index )
{
	static UFunction* pFnGetViewersAtIndex = NULL;

	if ( ! pFnGetViewersAtIndex )
		pFnGetViewersAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 59019 ];

	UTrStreamManager_execGetViewersAtIndex_Parms GetViewersAtIndex_Parms;
	GetViewersAtIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnGetViewersAtIndex, &GetViewersAtIndex_Parms, NULL );

	return GetViewersAtIndex_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetTitleAtIndex
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

struct FString UTrStreamManager::GetTitleAtIndex ( int Index )
{
	static UFunction* pFnGetTitleAtIndex = NULL;

	if ( ! pFnGetTitleAtIndex )
		pFnGetTitleAtIndex = (UFunction*) UObject::GObjObjects()->Data[ 58102 ];

	UTrStreamManager_execGetTitleAtIndex_Parms GetTitleAtIndex_Parms;
	GetTitleAtIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnGetTitleAtIndex, &GetTitleAtIndex_Parms, NULL );

	return GetTitleAtIndex_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.IsStream
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UTrStreamManager::IsStream ( int Index )
{
	static UFunction* pFnIsStream = NULL;

	if ( ! pFnIsStream )
		pFnIsStream = (UFunction*) UObject::GObjObjects()->Data[ 61136 ];

	UTrStreamManager_execIsStream_Parms IsStream_Parms;
	IsStream_Parms.Index = Index;

	this->ProcessEvent ( pFnIsStream, &IsStream_Parms, NULL );

	return IsStream_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetTypeCountWatching
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )

int UTrStreamManager::GetTypeCountWatching ( unsigned char Type )
{
	static UFunction* pFnGetTypeCountWatching = NULL;

	if ( ! pFnGetTypeCountWatching )
		pFnGetTypeCountWatching = (UFunction*) UObject::GObjObjects()->Data[ 61156 ];

	UTrStreamManager_execGetTypeCountWatching_Parms GetTypeCountWatching_Parms;
	GetTypeCountWatching_Parms.Type = Type;

	this->ProcessEvent ( pFnGetTypeCountWatching, &GetTypeCountWatching_Parms, NULL );

	return GetTypeCountWatching_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.GetTypeCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )

int UTrStreamManager::GetTypeCount ( unsigned char Type )
{
	static UFunction* pFnGetTypeCount = NULL;

	if ( ! pFnGetTypeCount )
		pFnGetTypeCount = (UFunction*) UObject::GObjObjects()->Data[ 61158 ];

	UTrStreamManager_execGetTypeCount_Parms GetTypeCount_Parms;
	GetTypeCount_Parms.Type = Type;

	this->ProcessEvent ( pFnGetTypeCount, &GetTypeCount_Parms, NULL );

	return GetTypeCount_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.ViewerSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FGameStream             A                              ( CPF_Parm | CPF_NeedCtorLink )
// struct FGameStream             B                              ( CPF_Parm | CPF_NeedCtorLink )

int UTrStreamManager::ViewerSort ( struct FGameStream A, struct FGameStream B )
{
	static UFunction* pFnViewerSort = NULL;

	if ( ! pFnViewerSort )
		pFnViewerSort = (UFunction*) UObject::GObjObjects()->Data[ 111969 ];

	UTrStreamManager_execViewerSort_Parms ViewerSort_Parms;
	memcpy ( &ViewerSort_Parms.A, &A, 0x44 );
	memcpy ( &ViewerSort_Parms.B, &B, 0x44 );

	this->ProcessEvent ( pFnViewerSort, &ViewerSort_Parms, NULL );

	return ViewerSort_Parms.ReturnValue;
};

// Function TribesGame.TrStreamManager.CompleteUpdate
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrStreamManager::eventCompleteUpdate ( )
{
	static UFunction* pFnCompleteUpdate = NULL;

	if ( ! pFnCompleteUpdate )
		pFnCompleteUpdate = (UFunction*) UObject::GObjObjects()->Data[ 112001 ];

	UTrStreamManager_eventCompleteUpdate_Parms CompleteUpdate_Parms;

	this->ProcessEvent ( pFnCompleteUpdate, &CompleteUpdate_Parms, NULL );
};

// Function TribesGame.TrStreamManager.GetLatestNews
// [0x00020002] 
// Parameters infos:

void UTrStreamManager::GetLatestNews ( )
{
	static UFunction* pFnGetLatestNews = NULL;

	if ( ! pFnGetLatestNews )
		pFnGetLatestNews = (UFunction*) UObject::GObjObjects()->Data[ 111998 ];

	UTrStreamManager_execGetLatestNews_Parms GetLatestNews_Parms;

	this->ProcessEvent ( pFnGetLatestNews, &GetLatestNews_Parms, NULL );
};

// Function TribesGame.TrStreamManager.CheckForUpdate
// [0x00024002] 
// Parameters infos:
// unsigned long                  bRunIfReady                    ( CPF_OptionalParm | CPF_Parm )

void UTrStreamManager::CheckForUpdate ( unsigned long bRunIfReady )
{
	static UFunction* pFnCheckForUpdate = NULL;

	if ( ! pFnCheckForUpdate )
		pFnCheckForUpdate = (UFunction*) UObject::GObjObjects()->Data[ 111996 ];

	UTrStreamManager_execCheckForUpdate_Parms CheckForUpdate_Parms;
	CheckForUpdate_Parms.bRunIfReady = bRunIfReady;

	this->ProcessEvent ( pFnCheckForUpdate, &CheckForUpdate_Parms, NULL );
};

// Function TribesGame.TrStreamManager.UpdateStreams
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void UTrStreamManager::eventUpdateStreams ( unsigned long bForce )
{
	static UFunction* pFnUpdateStreams = NULL;

	if ( ! pFnUpdateStreams )
		pFnUpdateStreams = (UFunction*) UObject::GObjObjects()->Data[ 111994 ];

	UTrStreamManager_eventUpdateStreams_Parms UpdateStreams_Parms;
	UpdateStreams_Parms.bForce = bForce;

	this->ProcessEvent ( pFnUpdateStreams, &UpdateStreams_Parms, NULL );
};

// Function TribesGame.TrStreamManager.StartTVTimer
// [0x00020002] 
// Parameters infos:

void UTrStreamManager::StartTVTimer ( )
{
	static UFunction* pFnStartTVTimer = NULL;

	if ( ! pFnStartTVTimer )
		pFnStartTVTimer = (UFunction*) UObject::GObjObjects()->Data[ 111992 ];

	UTrStreamManager_execStartTVTimer_Parms StartTVTimer_Parms;

	this->ProcessEvent ( pFnStartTVTimer, &StartTVTimer_Parms, NULL );
};

// Function TribesGame.TrStreamManager.ViewVideoIndex
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrStreamManager::ViewVideoIndex ( int Index )
{
	static UFunction* pFnViewVideoIndex = NULL;

	if ( ! pFnViewVideoIndex )
		pFnViewVideoIndex = (UFunction*) UObject::GObjObjects()->Data[ 111990 ];

	UTrStreamManager_execViewVideoIndex_Parms ViewVideoIndex_Parms;
	ViewVideoIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnViewVideoIndex, &ViewVideoIndex_Parms, NULL );
};

// Function TribesGame.TrStreamManager.ViewStreamIndex
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrStreamManager::ViewStreamIndex ( int Index )
{
	static UFunction* pFnViewStreamIndex = NULL;

	if ( ! pFnViewStreamIndex )
		pFnViewStreamIndex = (UFunction*) UObject::GObjObjects()->Data[ 111988 ];

	UTrStreamManager_execViewStreamIndex_Parms ViewStreamIndex_Parms;
	ViewStreamIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnViewStreamIndex, &ViewStreamIndex_Parms, NULL );
};

// Function TribesGame.TrStreamManager.Initialize
// [0x00020000] 
// Parameters infos:

void UTrStreamManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 111987 ];

	UTrStreamManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrStreamManager.OpenStream
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void UTrStreamManager::OpenStream ( struct FString URL )
{
	static UFunction* pFnOpenStream = NULL;

	if ( ! pFnOpenStream )
		pFnOpenStream = (UFunction*) UObject::GObjObjects()->Data[ 111985 ];

	UTrStreamManager_execOpenStream_Parms OpenStream_Parms;
	memcpy ( &OpenStream_Parms.URL, &URL, 0xC );

	pFnOpenStream->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnOpenStream, &OpenStream_Parms, NULL );

	pFnOpenStream->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStreamManager.GetStreamData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStreamManager::GetStreamData ( )
{
	static UFunction* pFnGetStreamData = NULL;

	if ( ! pFnGetStreamData )
		pFnGetStreamData = (UFunction*) UObject::GObjObjects()->Data[ 111984 ];

	UTrStreamManager_execGetStreamData_Parms GetStreamData_Parms;

	pFnGetStreamData->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetStreamData, &GetStreamData_Parms, NULL );

	pFnGetStreamData->FunctionFlags |= 0x400;
};

// Function TribesGame.TrStreamManager.LoadStreams
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrStreamManager::LoadStreams ( )
{
	static UFunction* pFnLoadStreams = NULL;

	if ( ! pFnLoadStreams )
		pFnLoadStreams = (UFunction*) UObject::GObjObjects()->Data[ 111983 ];

	UTrStreamManager_execLoadStreams_Parms LoadStreams_Parms;

	pFnLoadStreams->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnLoadStreams, &LoadStreams_Parms, NULL );

	pFnLoadStreams->FunctionFlags |= 0x400;
};

// Function TribesGame.TrSummaryHelper.GetNextRank
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  Rank                           ( CPF_Parm )

class UClass* UTrSummaryHelper::GetNextRank ( class UClass* Rank )
{
	static UFunction* pFnGetNextRank = NULL;

	if ( ! pFnGetNextRank )
		pFnGetNextRank = (UFunction*) UObject::GObjObjects()->Data[ 63379 ];

	UTrSummaryHelper_execGetNextRank_Parms GetNextRank_Parms;
	GetNextRank_Parms.Rank = Rank;

	this->ProcessEvent ( pFnGetNextRank, &GetNextRank_Parms, NULL );

	return GetNextRank_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetRankFromXP
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            XP                             ( CPF_Parm )

class UClass* UTrSummaryHelper::GetRankFromXP ( int XP )
{
	static UFunction* pFnGetRankFromXP = NULL;

	if ( ! pFnGetRankFromXP )
		pFnGetRankFromXP = (UFunction*) UObject::GObjObjects()->Data[ 63377 ];

	UTrSummaryHelper_execGetRankFromXP_Parms GetRankFromXP_Parms;
	GetRankFromXP_Parms.XP = XP;

	this->ProcessEvent ( pFnGetRankFromXP, &GetRankFromXP_Parms, NULL );

	return GetRankFromXP_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetAccoladeFromId
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AccoladeId                     ( CPF_Parm )

class UClass* UTrSummaryHelper::GetAccoladeFromId ( int AccoladeId )
{
	static UFunction* pFnGetAccoladeFromId = NULL;

	if ( ! pFnGetAccoladeFromId )
		pFnGetAccoladeFromId = (UFunction*) UObject::GObjObjects()->Data[ 63261 ];

	UTrSummaryHelper_execGetAccoladeFromId_Parms GetAccoladeFromId_Parms;
	GetAccoladeFromId_Parms.AccoladeId = AccoladeId;

	this->ProcessEvent ( pFnGetAccoladeFromId, &GetAccoladeFromId_Parms, NULL );

	return GetAccoladeFromId_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetAwardFromId
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AwardId                        ( CPF_Parm )

class UClass* UTrSummaryHelper::GetAwardFromId ( int AwardId )
{
	static UFunction* pFnGetAwardFromId = NULL;

	if ( ! pFnGetAwardFromId )
		pFnGetAwardFromId = (UFunction*) UObject::GObjObjects()->Data[ 63250 ];

	UTrSummaryHelper_execGetAwardFromId_Parms GetAwardFromId_Parms;
	GetAwardFromId_Parms.AwardId = AwardId;

	this->ProcessEvent ( pFnGetAwardFromId, &GetAwardFromId_Parms, NULL );

	return GetAwardFromId_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetTierTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )
// class UClass*                  award                          ( CPF_Parm )

struct FString UTrSummaryHelper::GetTierTitle ( int val, class UClass* award )
{
	static UFunction* pFnGetTierTitle = NULL;

	if ( ! pFnGetTierTitle )
		pFnGetTierTitle = (UFunction*) UObject::GObjObjects()->Data[ 63253 ];

	UTrSummaryHelper_execGetTierTitle_Parms GetTierTitle_Parms;
	GetTierTitle_Parms.val = val;
	GetTierTitle_Parms.award = award;

	this->ProcessEvent ( pFnGetTierTitle, &GetTierTitle_Parms, NULL );

	return GetTierTitle_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetTieredWeight
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AwardId                        ( CPF_Parm )
// int                            val                            ( CPF_Parm )

float UTrSummaryHelper::GetTieredWeight ( int AwardId, int val )
{
	static UFunction* pFnGetTieredWeight = NULL;

	if ( ! pFnGetTieredWeight )
		pFnGetTieredWeight = (UFunction*) UObject::GObjObjects()->Data[ 112115 ];

	UTrSummaryHelper_execGetTieredWeight_Parms GetTieredWeight_Parms;
	GetTieredWeight_Parms.AwardId = AwardId;
	GetTieredWeight_Parms.val = val;

	this->ProcessEvent ( pFnGetTieredWeight, &GetTieredWeight_Parms, NULL );

	return GetTieredWeight_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.GetMinTierValue
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AwardId                        ( CPF_Parm )

int UTrSummaryHelper::GetMinTierValue ( int AwardId )
{
	static UFunction* pFnGetMinTierValue = NULL;

	if ( ! pFnGetMinTierValue )
		pFnGetMinTierValue = (UFunction*) UObject::GObjObjects()->Data[ 112111 ];

	UTrSummaryHelper_execGetMinTierValue_Parms GetMinTierValue_Parms;
	GetMinTierValue_Parms.AwardId = AwardId;

	this->ProcessEvent ( pFnGetMinTierValue, &GetMinTierValue_Parms, NULL );

	return GetMinTierValue_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.AwardSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FPropertyPair           A                              ( CPF_Parm )
// struct FPropertyPair           B                              ( CPF_Parm )

int UTrSummaryHelper::AwardSort ( struct FPropertyPair A, struct FPropertyPair B )
{
	static UFunction* pFnAwardSort = NULL;

	if ( ! pFnAwardSort )
		pFnAwardSort = (UFunction*) UObject::GObjObjects()->Data[ 62965 ];

	UTrSummaryHelper_execAwardSort_Parms AwardSort_Parms;
	memcpy ( &AwardSort_Parms.A, &A, 0x8 );
	memcpy ( &AwardSort_Parms.B, &B, 0x8 );

	this->ProcessEvent ( pFnAwardSort, &AwardSort_Parms, NULL );

	return AwardSort_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.MVPSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FMVPAward               A                              ( CPF_Parm )
// struct FMVPAward               B                              ( CPF_Parm )

int UTrSummaryHelper::MVPSort ( struct FMVPAward A, struct FMVPAward B )
{
	static UFunction* pFnMVPSort = NULL;

	if ( ! pFnMVPSort )
		pFnMVPSort = (UFunction*) UObject::GObjObjects()->Data[ 62961 ];

	UTrSummaryHelper_execMVPSort_Parms MVPSort_Parms;
	memcpy ( &MVPSort_Parms.A, &A, 0xC );
	memcpy ( &MVPSort_Parms.B, &B, 0xC );

	this->ProcessEvent ( pFnMVPSort, &MVPSort_Parms, NULL );

	return MVPSort_Parms.ReturnValue;
};

// Function TribesGame.TrSummaryHelper.SortMVPAwards
// [0x00C20002] 
// Parameters infos:
// TArray< struct FMVPAward >     AwardArray                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrSummaryHelper::SortMVPAwards ( TArray< struct FMVPAward >* AwardArray )
{
	static UFunction* pFnSortMVPAwards = NULL;

	if ( ! pFnSortMVPAwards )
		pFnSortMVPAwards = (UFunction*) UObject::GObjObjects()->Data[ 62949 ];

	UTrSummaryHelper_execSortMVPAwards_Parms SortMVPAwards_Parms;

	this->ProcessEvent ( pFnSortMVPAwards, &SortMVPAwards_Parms, NULL );

	if ( AwardArray )
		memcpy ( AwardArray, &SortMVPAwards_Parms.AwardArray, 0xC );
};

// Function TribesGame.TrSummaryHelper.SortPlayerAwards
// [0x00C20002] 
// Parameters infos:
// TArray< struct FPropertyPair > AwardArray                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrSummaryHelper::SortPlayerAwards ( TArray< struct FPropertyPair >* AwardArray )
{
	static UFunction* pFnSortPlayerAwards = NULL;

	if ( ! pFnSortPlayerAwards )
		pFnSortPlayerAwards = (UFunction*) UObject::GObjObjects()->Data[ 62941 ];

	UTrSummaryHelper_execSortPlayerAwards_Parms SortPlayerAwards_Parms;

	this->ProcessEvent ( pFnSortPlayerAwards, &SortPlayerAwards_Parms, NULL );

	if ( AwardArray )
		memcpy ( AwardArray, &SortPlayerAwards_Parms.AwardArray, 0xC );
};

// Function TribesGame.TrTeamBlockerStaticMeshActor.CreateMICs
// [0x00020102] 
// Parameters infos:

void ATrTeamBlockerStaticMeshActor::CreateMICs ( )
{
	static UFunction* pFnCreateMICs = NULL;

	if ( ! pFnCreateMICs )
		pFnCreateMICs = (UFunction*) UObject::GObjObjects()->Data[ 112157 ];

	ATrTeamBlockerStaticMeshActor_execCreateMICs_Parms CreateMICs_Parms;

	this->ProcessEvent ( pFnCreateMICs, &CreateMICs_Parms, NULL );
};

// Function TribesGame.TrTeamBlockerStaticMeshActor.UpdateMaterialForPawn
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrTeamBlockerStaticMeshActor::UpdateMaterialForPawn ( class ATrPawn* P )
{
	static UFunction* pFnUpdateMaterialForPawn = NULL;

	if ( ! pFnUpdateMaterialForPawn )
		pFnUpdateMaterialForPawn = (UFunction*) UObject::GObjObjects()->Data[ 112154 ];

	ATrTeamBlockerStaticMeshActor_execUpdateMaterialForPawn_Parms UpdateMaterialForPawn_Parms;
	UpdateMaterialForPawn_Parms.P = P;

	this->ProcessEvent ( pFnUpdateMaterialForPawn, &UpdateMaterialForPawn_Parms, NULL );
};

// Function TribesGame.TrTeamBlockerStaticMeshActor.EnableBlocking
// [0x00020102] 
// Parameters infos:

void ATrTeamBlockerStaticMeshActor::EnableBlocking ( )
{
	static UFunction* pFnEnableBlocking = NULL;

	if ( ! pFnEnableBlocking )
		pFnEnableBlocking = (UFunction*) UObject::GObjObjects()->Data[ 112153 ];

	ATrTeamBlockerStaticMeshActor_execEnableBlocking_Parms EnableBlocking_Parms;

	this->ProcessEvent ( pFnEnableBlocking, &EnableBlocking_Parms, NULL );
};

// Function TribesGame.TrTeamBlockerStaticMeshActor.DisableBlocking
// [0x00020102] 
// Parameters infos:

void ATrTeamBlockerStaticMeshActor::DisableBlocking ( )
{
	static UFunction* pFnDisableBlocking = NULL;

	if ( ! pFnDisableBlocking )
		pFnDisableBlocking = (UFunction*) UObject::GObjObjects()->Data[ 112152 ];

	ATrTeamBlockerStaticMeshActor_execDisableBlocking_Parms DisableBlocking_Parms;

	this->ProcessEvent ( pFnDisableBlocking, &DisableBlocking_Parms, NULL );
};

// Function TribesGame.TrTeamBlockerStaticMeshActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrTeamBlockerStaticMeshActor::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 112151 ];

	ATrTeamBlockerStaticMeshActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrTripActor.Touch
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrTripActor::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 112316 ];

	ATrTripActor_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrTripActor.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrTripActor::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 112313 ];

	ATrTripActor_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrTripActor.GoToSleep
// [0x00024102] 
// Parameters infos:
// unsigned long                  bIsPowered                     ( CPF_OptionalParm | CPF_Parm )

void ATrTripActor::GoToSleep ( unsigned long bIsPowered )
{
	static UFunction* pFnGoToSleep = NULL;

	if ( ! pFnGoToSleep )
		pFnGoToSleep = (UFunction*) UObject::GObjObjects()->Data[ 112311 ];

	ATrTripActor_execGoToSleep_Parms GoToSleep_Parms;
	GoToSleep_Parms.bIsPowered = bIsPowered;

	this->ProcessEvent ( pFnGoToSleep, &GoToSleep_Parms, NULL );
};

// Function TribesGame.TrTripActor.InitializeTripPhysics
// [0x00020102] 
// Parameters infos:
// class UInterface_TrTripNotifier* Left                           ( CPF_Parm )
// class UInterface_TrTripNotifier* Right                          ( CPF_Parm )

void ATrTripActor::InitializeTripPhysics ( class UInterface_TrTripNotifier* Left, class UInterface_TrTripNotifier* Right )
{
	static UFunction* pFnInitializeTripPhysics = NULL;

	if ( ! pFnInitializeTripPhysics )
		pFnInitializeTripPhysics = (UFunction*) UObject::GObjObjects()->Data[ 112308 ];

	ATrTripActor_execInitializeTripPhysics_Parms InitializeTripPhysics_Parms;
	InitializeTripPhysics_Parms.Left = Left;
	InitializeTripPhysics_Parms.Right = Right;

	this->ProcessEvent ( pFnInitializeTripPhysics, &InitializeTripPhysics_Parms, NULL );
};

// Function TribesGame.TrTripActor.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrTripActor::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 112307 ];

	ATrTripActor_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrTripActor.DestroyNotify
// [0x00020102] 
// Parameters infos:
// class UInterface_TrTripNotifier* Notifier                       ( CPF_Parm )

void ATrTripActor::DestroyNotify ( class UInterface_TrTripNotifier* Notifier )
{
	static UFunction* pFnDestroyNotify = NULL;

	if ( ! pFnDestroyNotify )
		pFnDestroyNotify = (UFunction*) UObject::GObjObjects()->Data[ 112305 ];

	ATrTripActor_execDestroyNotify_Parms DestroyNotify_Parms;
	DestroyNotify_Parms.Notifier = Notifier;

	this->ProcessEvent ( pFnDestroyNotify, &DestroyNotify_Parms, NULL );
};

// Function TribesGame.TrTripActor.ClientCreateVisualEffect
// [0x00820102] 
// Parameters infos:

void ATrTripActor::ClientCreateVisualEffect ( )
{
	static UFunction* pFnClientCreateVisualEffect = NULL;

	if ( ! pFnClientCreateVisualEffect )
		pFnClientCreateVisualEffect = (UFunction*) UObject::GObjObjects()->Data[ 112301 ];

	ATrTripActor_execClientCreateVisualEffect_Parms ClientCreateVisualEffect_Parms;

	this->ProcessEvent ( pFnClientCreateVisualEffect, &ClientCreateVisualEffect_Parms, NULL );
};

// Function TribesGame.TrTripActor.CreateTripComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ATrTripActor::CreateTripComponent ( )
{
	static UFunction* pFnCreateTripComponent = NULL;

	if ( ! pFnCreateTripComponent )
		pFnCreateTripComponent = (UFunction*) UObject::GObjObjects()->Data[ 112300 ];

	ATrTripActor_execCreateTripComponent_Parms CreateTripComponent_Parms;

	pFnCreateTripComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnCreateTripComponent, &CreateTripComponent_Parms, NULL );

	pFnCreateTripComponent->FunctionFlags |= 0x400;
};

// Function TribesGame.TrTripActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrTripActor::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 112298 ];

	ATrTripActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrUser.IsFavoriteServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ServerID                       ( CPF_Parm )

bool UTrUser::IsFavoriteServer ( int ServerID )
{
	static UFunction* pFnIsFavoriteServer = NULL;

	if ( ! pFnIsFavoriteServer )
		pFnIsFavoriteServer = (UFunction*) UObject::GObjObjects()->Data[ 58215 ];

	UTrUser_execIsFavoriteServer_Parms IsFavoriteServer_Parms;
	IsFavoriteServer_Parms.ServerID = ServerID;

	this->ProcessEvent ( pFnIsFavoriteServer, &IsFavoriteServer_Parms, NULL );

	return IsFavoriteServer_Parms.ReturnValue;
};

// Function TribesGame.TrUser.SetFavoriteServer
// [0x00020002] 
// Parameters infos:
// int                            ServerID                       ( CPF_Parm )

void UTrUser::SetFavoriteServer ( int ServerID )
{
	static UFunction* pFnSetFavoriteServer = NULL;

	if ( ! pFnSetFavoriteServer )
		pFnSetFavoriteServer = (UFunction*) UObject::GObjObjects()->Data[ 112510 ];

	UTrUser_execSetFavoriteServer_Parms SetFavoriteServer_Parms;
	SetFavoriteServer_Parms.ServerID = ServerID;

	this->ProcessEvent ( pFnSetFavoriteServer, &SetFavoriteServer_Parms, NULL );
};

// Function TribesGame.TrUser.NeedToSeeNewBundle
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ItemId                         ( CPF_OptionalParm | CPF_Parm )

bool UTrUser::NeedToSeeNewBundle ( int ItemId )
{
	static UFunction* pFnNeedToSeeNewBundle = NULL;

	if ( ! pFnNeedToSeeNewBundle )
		pFnNeedToSeeNewBundle = (UFunction*) UObject::GObjObjects()->Data[ 57537 ];

	UTrUser_execNeedToSeeNewBundle_Parms NeedToSeeNewBundle_Parms;
	NeedToSeeNewBundle_Parms.ItemId = ItemId;

	this->ProcessEvent ( pFnNeedToSeeNewBundle, &NeedToSeeNewBundle_Parms, NULL );

	return NeedToSeeNewBundle_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedToSeeAnyNewItem
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrUser::NeedToSeeAnyNewItem ( )
{
	static UFunction* pFnNeedToSeeAnyNewItem = NULL;

	if ( ! pFnNeedToSeeAnyNewItem )
		pFnNeedToSeeAnyNewItem = (UFunction*) UObject::GObjObjects()->Data[ 57919 ];

	UTrUser_execNeedToSeeAnyNewItem_Parms NeedToSeeAnyNewItem_Parms;

	this->ProcessEvent ( pFnNeedToSeeAnyNewItem, &NeedToSeeAnyNewItem_Parms, NULL );

	return NeedToSeeAnyNewItem_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedsToSeeNewBundle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ItemId                         ( CPF_Parm )

bool UTrUser::NeedsToSeeNewBundle ( int ItemId )
{
	static UFunction* pFnNeedsToSeeNewBundle = NULL;

	if ( ! pFnNeedsToSeeNewBundle )
		pFnNeedsToSeeNewBundle = (UFunction*) UObject::GObjObjects()->Data[ 112499 ];

	UTrUser_execNeedsToSeeNewBundle_Parms NeedsToSeeNewBundle_Parms;
	NeedsToSeeNewBundle_Parms.ItemId = ItemId;

	this->ProcessEvent ( pFnNeedsToSeeNewBundle, &NeedsToSeeNewBundle_Parms, NULL );

	return NeedsToSeeNewBundle_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedsToSeeNewItem
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )

bool UTrUser::NeedsToSeeNewItem ( int EquipId )
{
	static UFunction* pFnNeedsToSeeNewItem = NULL;

	if ( ! pFnNeedsToSeeNewItem )
		pFnNeedsToSeeNewItem = (UFunction*) UObject::GObjObjects()->Data[ 58312 ];

	UTrUser_execNeedsToSeeNewItem_Parms NeedsToSeeNewItem_Parms;
	NeedsToSeeNewItem_Parms.EquipId = EquipId;

	this->ProcessEvent ( pFnNeedsToSeeNewItem, &NeedsToSeeNewItem_Parms, NULL );

	return NeedsToSeeNewItem_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedsToSeeNewItemsType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )

bool UTrUser::NeedsToSeeNewItemsType ( int ClassId, int Type )
{
	static UFunction* pFnNeedsToSeeNewItemsType = NULL;

	if ( ! pFnNeedsToSeeNewItemsType )
		pFnNeedsToSeeNewItemsType = (UFunction*) UObject::GObjObjects()->Data[ 56540 ];

	UTrUser_execNeedsToSeeNewItemsType_Parms NeedsToSeeNewItemsType_Parms;
	NeedsToSeeNewItemsType_Parms.ClassId = ClassId;
	NeedsToSeeNewItemsType_Parms.Type = Type;

	this->ProcessEvent ( pFnNeedsToSeeNewItemsType, &NeedsToSeeNewItemsType_Parms, NULL );

	return NeedsToSeeNewItemsType_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedsToSeeNewItemsClass
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

bool UTrUser::NeedsToSeeNewItemsClass ( int ClassId )
{
	static UFunction* pFnNeedsToSeeNewItemsClass = NULL;

	if ( ! pFnNeedsToSeeNewItemsClass )
		pFnNeedsToSeeNewItemsClass = (UFunction*) UObject::GObjObjects()->Data[ 56524 ];

	UTrUser_execNeedsToSeeNewItemsClass_Parms NeedsToSeeNewItemsClass_Parms;
	NeedsToSeeNewItemsClass_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnNeedsToSeeNewItemsClass, &NeedsToSeeNewItemsClass_Parms, NULL );

	return NeedsToSeeNewItemsClass_Parms.ReturnValue;
};

// Function TribesGame.TrUser.NeedsToSeeClanTags
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrUser::NeedsToSeeClanTags ( )
{
	static UFunction* pFnNeedsToSeeClanTags = NULL;

	if ( ! pFnNeedsToSeeClanTags )
		pFnNeedsToSeeClanTags = (UFunction*) UObject::GObjObjects()->Data[ 57775 ];

	UTrUser_execNeedsToSeeClanTags_Parms NeedsToSeeClanTags_Parms;

	this->ProcessEvent ( pFnNeedsToSeeClanTags, &NeedsToSeeClanTags_Parms, NULL );

	return NeedsToSeeClanTags_Parms.ReturnValue;
};

// Function TribesGame.TrUser.SeenNewItemsType
// [0x00820002] 
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )

void UTrUser::SeenNewItemsType ( int ClassId, int Type )
{
	static UFunction* pFnSeenNewItemsType = NULL;

	if ( ! pFnSeenNewItemsType )
		pFnSeenNewItemsType = (UFunction*) UObject::GObjObjects()->Data[ 112488 ];

	UTrUser_execSeenNewItemsType_Parms SeenNewItemsType_Parms;
	SeenNewItemsType_Parms.ClassId = ClassId;
	SeenNewItemsType_Parms.Type = Type;

	this->ProcessEvent ( pFnSeenNewItemsType, &SeenNewItemsType_Parms, NULL );
};

// Function TribesGame.TrUser.SeenNewItemsClass
// [0x00820002] 
// Parameters infos:
// int                            ClassId                        ( CPF_Parm )

void UTrUser::SeenNewItemsClass ( int ClassId )
{
	static UFunction* pFnSeenNewItemsClass = NULL;

	if ( ! pFnSeenNewItemsClass )
		pFnSeenNewItemsClass = (UFunction*) UObject::GObjObjects()->Data[ 112485 ];

	UTrUser_execSeenNewItemsClass_Parms SeenNewItemsClass_Parms;
	SeenNewItemsClass_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnSeenNewItemsClass, &SeenNewItemsClass_Parms, NULL );
};

// Function TribesGame.TrUser.SeenNewBundle
// [0x00820002] 
// Parameters infos:
// int                            ItemId                         ( CPF_Parm )

void UTrUser::SeenNewBundle ( int ItemId )
{
	static UFunction* pFnSeenNewBundle = NULL;

	if ( ! pFnSeenNewBundle )
		pFnSeenNewBundle = (UFunction*) UObject::GObjObjects()->Data[ 112482 ];

	UTrUser_execSeenNewBundle_Parms SeenNewBundle_Parms;
	SeenNewBundle_Parms.ItemId = ItemId;

	this->ProcessEvent ( pFnSeenNewBundle, &SeenNewBundle_Parms, NULL );
};

// Function TribesGame.TrUser.SeenClanTags
// [0x00020002] 
// Parameters infos:

void UTrUser::SeenClanTags ( )
{
	static UFunction* pFnSeenClanTags = NULL;

	if ( ! pFnSeenClanTags )
		pFnSeenClanTags = (UFunction*) UObject::GObjObjects()->Data[ 112481 ];

	UTrUser_execSeenClanTags_Parms SeenClanTags_Parms;

	this->ProcessEvent ( pFnSeenClanTags, &SeenClanTags_Parms, NULL );
};

// Function TribesGame.TrUser.SeenNewBundlesMain
// [0x00020002] 
// Parameters infos:

void UTrUser::SeenNewBundlesMain ( )
{
	static UFunction* pFnSeenNewBundlesMain = NULL;

	if ( ! pFnSeenNewBundlesMain )
		pFnSeenNewBundlesMain = (UFunction*) UObject::GObjObjects()->Data[ 112480 ];

	UTrUser_execSeenNewBundlesMain_Parms SeenNewBundlesMain_Parms;

	this->ProcessEvent ( pFnSeenNewBundlesMain, &SeenNewBundlesMain_Parms, NULL );
};

// Function TribesGame.TrUser.SeenNewItemsMain
// [0x00020002] 
// Parameters infos:

void UTrUser::SeenNewItemsMain ( )
{
	static UFunction* pFnSeenNewItemsMain = NULL;

	if ( ! pFnSeenNewItemsMain )
		pFnSeenNewItemsMain = (UFunction*) UObject::GObjObjects()->Data[ 112479 ];

	UTrUser_execSeenNewItemsMain_Parms SeenNewItemsMain_Parms;

	this->ProcessEvent ( pFnSeenNewItemsMain, &SeenNewItemsMain_Parms, NULL );
};

// Function TribesGame.TrUser.SeenNewGametype
// [0x00020002] 
// Parameters infos:

void UTrUser::SeenNewGametype ( )
{
	static UFunction* pFnSeenNewGametype = NULL;

	if ( ! pFnSeenNewGametype )
		pFnSeenNewGametype = (UFunction*) UObject::GObjObjects()->Data[ 112478 ];

	UTrUser_execSeenNewGametype_Parms SeenNewGametype_Parms;

	this->ProcessEvent ( pFnSeenNewGametype, &SeenNewGametype_Parms, NULL );
};

// Function TribesGame.TrUser.SaveChoseRegion
// [0x00020002] 
// Parameters infos:

void UTrUser::SaveChoseRegion ( )
{
	static UFunction* pFnSaveChoseRegion = NULL;

	if ( ! pFnSaveChoseRegion )
		pFnSaveChoseRegion = (UFunction*) UObject::GObjObjects()->Data[ 112477 ];

	UTrUser_execSaveChoseRegion_Parms SaveChoseRegion_Parms;

	this->ProcessEvent ( pFnSaveChoseRegion, &SaveChoseRegion_Parms, NULL );
};

// Function TribesGame.TrUser.SaveDidLogin
// [0x00020002] 
// Parameters infos:

void UTrUser::SaveDidLogin ( )
{
	static UFunction* pFnSaveDidLogin = NULL;

	if ( ! pFnSaveDidLogin )
		pFnSaveDidLogin = (UFunction*) UObject::GObjObjects()->Data[ 112476 ];

	UTrUser_execSaveDidLogin_Parms SaveDidLogin_Parms;

	this->ProcessEvent ( pFnSaveDidLogin, &SaveDidLogin_Parms, NULL );
};

// Function TribesGame.TrUser.SaveGameType
// [0x00020002] 
// Parameters infos:
// struct FString                 NewGameType                    ( CPF_Parm | CPF_NeedCtorLink )

void UTrUser::SaveGameType ( struct FString NewGameType )
{
	static UFunction* pFnSaveGameType = NULL;

	if ( ! pFnSaveGameType )
		pFnSaveGameType = (UFunction*) UObject::GObjObjects()->Data[ 112474 ];

	UTrUser_execSaveGameType_Parms SaveGameType_Parms;
	memcpy ( &SaveGameType_Parms.NewGameType, &NewGameType, 0xC );

	this->ProcessEvent ( pFnSaveGameType, &SaveGameType_Parms, NULL );
};

// Function TribesGame.TrUser.SaveClassId
// [0x00020002] 
// Parameters infos:
// int                            NewClassId                     ( CPF_Parm )

void UTrUser::SaveClassId ( int NewClassId )
{
	static UFunction* pFnSaveClassId = NULL;

	if ( ! pFnSaveClassId )
		pFnSaveClassId = (UFunction*) UObject::GObjObjects()->Data[ 112472 ];

	UTrUser_execSaveClassId_Parms SaveClassId_Parms;
	SaveClassId_Parms.NewClassId = NewClassId;

	this->ProcessEvent ( pFnSaveClassId, &SaveClassId_Parms, NULL );
};

// Function TribesGame.TrUser.SaveCredentials
// [0x00020002] 
// Parameters infos:
// struct FString                 NewUserName                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NewPassword                    ( CPF_Parm | CPF_NeedCtorLink )

void UTrUser::SaveCredentials ( struct FString NewUserName, struct FString NewPassword )
{
	static UFunction* pFnSaveCredentials = NULL;

	if ( ! pFnSaveCredentials )
		pFnSaveCredentials = (UFunction*) UObject::GObjObjects()->Data[ 112469 ];

	UTrUser_execSaveCredentials_Parms SaveCredentials_Parms;
	memcpy ( &SaveCredentials_Parms.NewUserName, &NewUserName, 0xC );
	memcpy ( &SaveCredentials_Parms.NewPassword, &NewPassword, 0xC );

	this->ProcessEvent ( pFnSaveCredentials, &SaveCredentials_Parms, NULL );
};

// Function TribesGame.TrUser.Initialize
// [0x00020002] 
// Parameters infos:
// class UGFxTrMenuMoviePlayer*   Movie                          ( CPF_Parm )

void UTrUser::Initialize ( class UGFxTrMenuMoviePlayer* Movie )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 112467 ];

	UTrUser_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.Movie = Movie;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrUser.DecryptPassword
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrUser::DecryptPassword ( )
{
	static UFunction* pFnDecryptPassword = NULL;

	if ( ! pFnDecryptPassword )
		pFnDecryptPassword = (UFunction*) UObject::GObjObjects()->Data[ 59143 ];

	UTrUser_execDecryptPassword_Parms DecryptPassword_Parms;

	pFnDecryptPassword->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnDecryptPassword, &DecryptPassword_Parms, NULL );

	pFnDecryptPassword->FunctionFlags |= 0x400;

	return DecryptPassword_Parms.ReturnValue;
};

// Function TribesGame.TrUser.EncryptPassword
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )

struct FString UTrUser::EncryptPassword ( struct FString Password )
{
	static UFunction* pFnEncryptPassword = NULL;

	if ( ! pFnEncryptPassword )
		pFnEncryptPassword = (UFunction*) UObject::GObjObjects()->Data[ 112464 ];

	UTrUser_execEncryptPassword_Parms EncryptPassword_Parms;
	memcpy ( &EncryptPassword_Parms.Password, &Password, 0xC );

	pFnEncryptPassword->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnEncryptPassword, &EncryptPassword_Parms, NULL );

	pFnEncryptPassword->FunctionFlags |= 0x400;

	return EncryptPassword_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.ClearInvulnerability
// [0x00020002] 
// Parameters infos:

void ATrVehicle::ClearInvulnerability ( )
{
	static UFunction* pFnClearInvulnerability = NULL;

	if ( ! pFnClearInvulnerability )
		pFnClearInvulnerability = (UFunction*) UObject::GObjObjects()->Data[ 113680 ];

	ATrVehicle_execClearInvulnerability_Parms ClearInvulnerability_Parms;

	this->ProcessEvent ( pFnClearInvulnerability, &ClearInvulnerability_Parms, NULL );
};

// Function TribesGame.TrVehicle.GoInvulnerable
// [0x00024002] 
// Parameters infos:
// float                          InvulnerableTime               ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::GoInvulnerable ( float InvulnerableTime )
{
	static UFunction* pFnGoInvulnerable = NULL;

	if ( ! pFnGoInvulnerable )
		pFnGoInvulnerable = (UFunction*) UObject::GObjObjects()->Data[ 113678 ];

	ATrVehicle_execGoInvulnerable_Parms GoInvulnerable_Parms;
	GoInvulnerable_Parms.InvulnerableTime = InvulnerableTime;

	this->ProcessEvent ( pFnGoInvulnerable, &GoInvulnerable_Parms, NULL );
};

// Function TribesGame.TrVehicle.PlayHorn
// [0x00020002] 
// Parameters infos:

void ATrVehicle::PlayHorn ( )
{
	static UFunction* pFnPlayHorn = NULL;

	if ( ! pFnPlayHorn )
		pFnPlayHorn = (UFunction*) UObject::GObjObjects()->Data[ 113677 ];

	ATrVehicle_execPlayHorn_Parms PlayHorn_Parms;

	this->ProcessEvent ( pFnPlayHorn, &PlayHorn_Parms, NULL );
};

// Function TribesGame.TrVehicle.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrVehicle::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 113601 ];

	ATrVehicle_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetCameraFocus
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector ATrVehicle::GetCameraFocus ( int SeatIndex )
{
	static UFunction* pFnGetCameraFocus = NULL;

	if ( ! pFnGetCameraFocus )
		pFnGetCameraFocus = (UFunction*) UObject::GObjObjects()->Data[ 113591 ];

	ATrVehicle_execGetCameraFocus_Parms GetCameraFocus_Parms;
	GetCameraFocus_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraFocus, &GetCameraFocus_Parms, NULL );

	return GetCameraFocus_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.CalcOtherWatchingCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// class ATrPlayerController*     WatcherController              ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ATrVehicle::CalcOtherWatchingCam ( float fDeltaTime, class ATrPlayerController* WatcherController, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcOtherWatchingCam = NULL;

	if ( ! pFnCalcOtherWatchingCam )
		pFnCalcOtherWatchingCam = (UFunction*) UObject::GObjObjects()->Data[ 77109 ];

	ATrVehicle_execCalcOtherWatchingCam_Parms CalcOtherWatchingCam_Parms;
	CalcOtherWatchingCam_Parms.fDeltaTime = fDeltaTime;
	CalcOtherWatchingCam_Parms.WatcherController = WatcherController;

	this->ProcessEvent ( pFnCalcOtherWatchingCam, &CalcOtherWatchingCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcOtherWatchingCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcOtherWatchingCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcOtherWatchingCam_Parms.out_FOV;

	return CalcOtherWatchingCam_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.StopVehicleSounds
// [0x00020102] 
// Parameters infos:

void ATrVehicle::StopVehicleSounds ( )
{
	static UFunction* pFnStopVehicleSounds = NULL;

	if ( ! pFnStopVehicleSounds )
		pFnStopVehicleSounds = (UFunction*) UObject::GObjObjects()->Data[ 113576 ];

	ATrVehicle_execStopVehicleSounds_Parms StopVehicleSounds_Parms;

	this->ProcessEvent ( pFnStopVehicleSounds, &StopVehicleSounds_Parms, NULL );
};

// Function TribesGame.TrVehicle.MigrateVehicleSounds
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// unsigned long                  bIsRiding                      ( CPF_Parm )

void ATrVehicle::MigrateVehicleSounds ( class APawn* P, unsigned long bIsRiding )
{
	static UFunction* pFnMigrateVehicleSounds = NULL;

	if ( ! pFnMigrateVehicleSounds )
		pFnMigrateVehicleSounds = (UFunction*) UObject::GObjObjects()->Data[ 113571 ];

	ATrVehicle_execMigrateVehicleSounds_Parms MigrateVehicleSounds_Parms;
	MigrateVehicleSounds_Parms.P = P;
	MigrateVehicleSounds_Parms.bIsRiding = bIsRiding;

	this->ProcessEvent ( pFnMigrateVehicleSounds, &MigrateVehicleSounds_Parms, NULL );
};

// Function TribesGame.TrVehicle.PlayClientVehicleSound
// [0x010201C2] 
// Parameters infos:
// struct FName                   SoundTag                       ( CPF_Parm )

void ATrVehicle::PlayClientVehicleSound ( struct FName SoundTag )
{
	static UFunction* pFnPlayClientVehicleSound = NULL;

	if ( ! pFnPlayClientVehicleSound )
		pFnPlayClientVehicleSound = (UFunction*) UObject::GObjObjects()->Data[ 113567 ];

	ATrVehicle_execPlayClientVehicleSound_Parms PlayClientVehicleSound_Parms;
	memcpy ( &PlayClientVehicleSound_Parms.SoundTag, &SoundTag, 0x8 );

	this->ProcessEvent ( pFnPlayClientVehicleSound, &PlayClientVehicleSound_Parms, NULL );
};

// Function TribesGame.TrVehicle.VehicleEvent
// [0x00020102] 
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void ATrVehicle::VehicleEvent ( struct FName EventTag )
{
	static UFunction* pFnVehicleEvent = NULL;

	if ( ! pFnVehicleEvent )
		pFnVehicleEvent = (UFunction*) UObject::GObjObjects()->Data[ 113565 ];

	ATrVehicle_execVehicleEvent_Parms VehicleEvent_Parms;
	memcpy ( &VehicleEvent_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnVehicleEvent, &VehicleEvent_Parms, NULL );
};

// Function TribesGame.TrVehicle.PlayVehicleEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void ATrVehicle::eventPlayVehicleEvent ( struct FName EventTag )
{
	static UFunction* pFnPlayVehicleEvent = NULL;

	if ( ! pFnPlayVehicleEvent )
		pFnPlayVehicleEvent = (UFunction*) UObject::GObjObjects()->Data[ 113563 ];

	ATrVehicle_eventPlayVehicleEvent_Parms PlayVehicleEvent_Parms;
	memcpy ( &PlayVehicleEvent_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnPlayVehicleEvent, &PlayVehicleEvent_Parms, NULL );
};

// Function TribesGame.TrVehicle.SetDriving
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewDriving                    ( CPF_Parm )

void ATrVehicle::SetDriving ( unsigned long bNewDriving )
{
	static UFunction* pFnSetDriving = NULL;

	if ( ! pFnSetDriving )
		pFnSetDriving = (UFunction*) UObject::GObjObjects()->Data[ 113561 ];

	ATrVehicle_execSetDriving_Parms SetDriving_Parms;
	SetDriving_Parms.bNewDriving = bNewDriving;

	this->ProcessEvent ( pFnSetDriving, &SetDriving_Parms, NULL );
};

// Function TribesGame.TrVehicle.ShouldShowUseable
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// float                          Dist                           ( CPF_Parm )

bool ATrVehicle::ShouldShowUseable ( class APlayerController* PC, float Dist )
{
	static UFunction* pFnShouldShowUseable = NULL;

	if ( ! pFnShouldShowUseable )
		pFnShouldShowUseable = (UFunction*) UObject::GObjObjects()->Data[ 113557 ];

	ATrVehicle_execShouldShowUseable_Parms ShouldShowUseable_Parms;
	ShouldShowUseable_Parms.PC = PC;
	ShouldShowUseable_Parms.Dist = Dist;

	this->ProcessEvent ( pFnShouldShowUseable, &ShouldShowUseable_Parms, NULL );

	return ShouldShowUseable_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.ProcessViewRotationBasedOnSeat
// [0x00420102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ATrVehicle::ProcessViewRotationBasedOnSeat ( int SeatIndex, float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotationBasedOnSeat = NULL;

	if ( ! pFnProcessViewRotationBasedOnSeat )
		pFnProcessViewRotationBasedOnSeat = (UFunction*) UObject::GObjObjects()->Data[ 113552 ];

	ATrVehicle_execProcessViewRotationBasedOnSeat_Parms ProcessViewRotationBasedOnSeat_Parms;
	ProcessViewRotationBasedOnSeat_Parms.SeatIndex = SeatIndex;
	ProcessViewRotationBasedOnSeat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotationBasedOnSeat, &ProcessViewRotationBasedOnSeat_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotationBasedOnSeat_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotationBasedOnSeat_Parms.out_DeltaRot, 0xC );
};

// Function TribesGame.TrVehicle.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ATrVehicle::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 113548 ];

	ATrVehicle_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function TribesGame.TrVehicle.SpawnTracerEffect
// [0x00820102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TracerType                     ( CPF_Parm )
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          HitDistance                    ( CPF_Parm )

class ATrProj_Tracer* ATrVehicle::SpawnTracerEffect ( unsigned char TracerType, struct FVector EffectLocation, struct FVector HitLocation, float HitDistance )
{
	static UFunction* pFnSpawnTracerEffect = NULL;

	if ( ! pFnSpawnTracerEffect )
		pFnSpawnTracerEffect = (UFunction*) UObject::GObjObjects()->Data[ 113539 ];

	ATrVehicle_execSpawnTracerEffect_Parms SpawnTracerEffect_Parms;
	SpawnTracerEffect_Parms.TracerType = TracerType;
	memcpy ( &SpawnTracerEffect_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracerEffect_Parms.HitLocation, &HitLocation, 0xC );
	SpawnTracerEffect_Parms.HitDistance = HitDistance;

	this->ProcessEvent ( pFnSpawnTracerEffect, &SpawnTracerEffect_Parms, NULL );

	return SpawnTracerEffect_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SpawnTracerBeam
// [0x00020102] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )
// class UParticleSystem*         TracerBeamTemplate             ( CPF_Parm )

void ATrVehicle::SpawnTracerBeam ( struct FVector Start, struct FVector End, class UParticleSystem* TracerBeamTemplate )
{
	static UFunction* pFnSpawnTracerBeam = NULL;

	if ( ! pFnSpawnTracerBeam )
		pFnSpawnTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 113534 ];

	ATrVehicle_execSpawnTracerBeam_Parms SpawnTracerBeam_Parms;
	memcpy ( &SpawnTracerBeam_Parms.Start, &Start, 0xC );
	memcpy ( &SpawnTracerBeam_Parms.End, &End, 0xC );
	SpawnTracerBeam_Parms.TracerBeamTemplate = TracerBeamTemplate;

	this->ProcessEvent ( pFnSpawnTracerBeam, &SpawnTracerBeam_Parms, NULL );
};

// Function TribesGame.TrVehicle.ThirdPersonFireEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::ThirdPersonFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 113522 ];

	ATrVehicle_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	ThirdPersonFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrVehicle.VehicleWeaponStoppedFiring
// [0x00020102] 
// Parameters infos:
// unsigned long                  bViaReplication                ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::VehicleWeaponStoppedFiring ( unsigned long bViaReplication, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponStoppedFiring = NULL;

	if ( ! pFnVehicleWeaponStoppedFiring )
		pFnVehicleWeaponStoppedFiring = (UFunction*) UObject::GObjObjects()->Data[ 113517 ];

	ATrVehicle_execVehicleWeaponStoppedFiring_Parms VehicleWeaponStoppedFiring_Parms;
	VehicleWeaponStoppedFiring_Parms.bViaReplication = bViaReplication;
	VehicleWeaponStoppedFiring_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponStoppedFiring, &VehicleWeaponStoppedFiring_Parms, NULL );
};

// Function TribesGame.TrVehicle.VehicleWeaponFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 113513 ];

	ATrVehicle_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function TribesGame.TrVehicle.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void ATrVehicle::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 113512 ];

	ATrVehicle_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function TribesGame.TrVehicle.CheckDamageSmoke
// [0x00020102] 
// Parameters infos:

void ATrVehicle::CheckDamageSmoke ( )
{
	static UFunction* pFnCheckDamageSmoke = NULL;

	if ( ! pFnCheckDamageSmoke )
		pFnCheckDamageSmoke = (UFunction*) UObject::GObjObjects()->Data[ 113510 ];

	ATrVehicle_execCheckDamageSmoke_Parms CheckDamageSmoke_Parms;

	this->ProcessEvent ( pFnCheckDamageSmoke, &CheckDamageSmoke_Parms, NULL );
};

// Function TribesGame.TrVehicle.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 113478 ];

	ATrVehicle_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrVehicle.TakeRadiusDamage
// [0x00824102] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::TakeRadiusDamage ( class AController* InstigatedBy, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 113462 ];

	ATrVehicle_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrVehicle.Suicide
// [0x00020002] 
// Parameters infos:

void ATrVehicle::Suicide ( )
{
	static UFunction* pFnSuicide = NULL;

	if ( ! pFnSuicide )
		pFnSuicide = (UFunction*) UObject::GObjObjects()->Data[ 113461 ];

	ATrVehicle_execSuicide_Parms Suicide_Parms;

	this->ProcessEvent ( pFnSuicide, &Suicide_Parms, NULL );
};

// Function TribesGame.TrVehicle.DriverRadiusDamage
// [0x00824002] 
// Parameters infos:
// float                          DamageAmount                   ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::DriverRadiusDamage ( float DamageAmount, float DamageRadius, class AController* EventInstigator, class UClass* DamageType, float Momentum, struct FVector HitLocation, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnDriverRadiusDamage = NULL;

	if ( ! pFnDriverRadiusDamage )
		pFnDriverRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 113443 ];

	ATrVehicle_execDriverRadiusDamage_Parms DriverRadiusDamage_Parms;
	DriverRadiusDamage_Parms.DamageAmount = DamageAmount;
	DriverRadiusDamage_Parms.DamageRadius = DamageRadius;
	DriverRadiusDamage_Parms.EventInstigator = EventInstigator;
	DriverRadiusDamage_Parms.DamageType = DamageType;
	DriverRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &DriverRadiusDamage_Parms.HitLocation, &HitLocation, 0xC );
	DriverRadiusDamage_Parms.DamageCauser = DamageCauser;
	DriverRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnDriverRadiusDamage, &DriverRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrVehicle.DoRepairs
// [0x00024102] 
// Parameters infos:
// int                            HealAmount                     ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::DoRepairs ( int HealAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnDoRepairs = NULL;

	if ( ! pFnDoRepairs )
		pFnDoRepairs = (UFunction*) UObject::GObjObjects()->Data[ 113433 ];

	ATrVehicle_execDoRepairs_Parms DoRepairs_Parms;
	DoRepairs_Parms.HealAmount = HealAmount;
	DoRepairs_Parms.EventInstigator = EventInstigator;
	memcpy ( &DoRepairs_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &DoRepairs_Parms.Momentum, &Momentum, 0xC );
	DoRepairs_Parms.DamageType = DamageType;
	memcpy ( &DoRepairs_Parms.HitInfo, &HitInfo, 0x1C );
	DoRepairs_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnDoRepairs, &DoRepairs_Parms, NULL );
};

// Function TribesGame.TrVehicle.HealDamage
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )
// class AController*             Healer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

bool ATrVehicle::HealDamage ( int Amount, class AController* Healer, class UClass* DamageType )
{
	static UFunction* pFnHealDamage = NULL;

	if ( ! pFnHealDamage )
		pFnHealDamage = (UFunction*) UObject::GObjObjects()->Data[ 113428 ];

	ATrVehicle_execHealDamage_Parms HealDamage_Parms;
	HealDamage_Parms.Amount = Amount;
	HealDamage_Parms.Healer = Healer;
	HealDamage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnHealDamage, &HealDamage_Parms, NULL );

	return HealDamage_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.WeaponRotationChanged
// [0x00020102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::WeaponRotationChanged ( int SeatIndex )
{
	static UFunction* pFnWeaponRotationChanged = NULL;

	if ( ! pFnWeaponRotationChanged )
		pFnWeaponRotationChanged = (UFunction*) UObject::GObjObjects()->Data[ 113423 ];

	ATrVehicle_execWeaponRotationChanged_Parms WeaponRotationChanged_Parms;
	WeaponRotationChanged_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnWeaponRotationChanged, &WeaponRotationChanged_Parms, NULL );
};

// Function TribesGame.TrVehicle.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator ATrVehicle::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 113413 ];

	ATrVehicle_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.AnySeatAvailable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::AnySeatAvailable ( )
{
	static UFunction* pFnAnySeatAvailable = NULL;

	if ( ! pFnAnySeatAvailable )
		pFnAnySeatAvailable = (UFunction*) UObject::GObjObjects()->Data[ 113410 ];

	ATrVehicle_execAnySeatAvailable_Parms AnySeatAvailable_Parms;

	this->ProcessEvent ( pFnAnySeatAvailable, &AnySeatAvailable_Parms, NULL );

	return AnySeatAvailable_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SeatAvailable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

bool ATrVehicle::SeatAvailable ( int SeatIndex )
{
	static UFunction* pFnSeatAvailable = NULL;

	if ( ! pFnSeatAvailable )
		pFnSeatAvailable = (UFunction*) UObject::GObjObjects()->Data[ 113407 ];

	ATrVehicle_execSeatAvailable_Parms SeatAvailable_Parms;
	SeatAvailable_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSeatAvailable, &SeatAvailable_Parms, NULL );

	return SeatAvailable_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.TryExitPos
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )
// struct FVector                 ExitPos                        ( CPF_Parm )
// unsigned long                  bMustFindGround                ( CPF_Parm )

bool ATrVehicle::TryExitPos ( class APawn* ExitingDriver, struct FVector ExitPos, unsigned long bMustFindGround )
{
	static UFunction* pFnTryExitPos = NULL;

	if ( ! pFnTryExitPos )
		pFnTryExitPos = (UFunction*) UObject::GObjObjects()->Data[ 113397 ];

	ATrVehicle_execTryExitPos_Parms TryExitPos_Parms;
	TryExitPos_Parms.ExitingDriver = ExitingDriver;
	memcpy ( &TryExitPos_Parms.ExitPos, &ExitPos, 0xC );
	TryExitPos_Parms.bMustFindGround = bMustFindGround;

	this->ProcessEvent ( pFnTryExitPos, &TryExitPos_Parms, NULL );

	return TryExitPos_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.PlaceExitingDriver
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_OptionalParm | CPF_Parm )

bool ATrVehicle::PlaceExitingDriver ( class APawn* ExitingDriver )
{
	static UFunction* pFnPlaceExitingDriver = NULL;

	if ( ! pFnPlaceExitingDriver )
		pFnPlaceExitingDriver = (UFunction*) UObject::GObjObjects()->Data[ 113390 ];

	ATrVehicle_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL );

	return PlaceExitingDriver_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetSeatIndexForStoragePawn
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

int ATrVehicle::GetSeatIndexForStoragePawn ( class APawn* P )
{
	static UFunction* pFnGetSeatIndexForStoragePawn = NULL;

	if ( ! pFnGetSeatIndexForStoragePawn )
		pFnGetSeatIndexForStoragePawn = (UFunction*) UObject::GObjObjects()->Data[ 113386 ];

	ATrVehicle_execGetSeatIndexForStoragePawn_Parms GetSeatIndexForStoragePawn_Parms;
	GetSeatIndexForStoragePawn_Parms.P = P;

	this->ProcessEvent ( pFnGetSeatIndexForStoragePawn, &GetSeatIndexForStoragePawn_Parms, NULL );

	return GetSeatIndexForStoragePawn_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetSeatIndexForController
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             ControllerToMove               ( CPF_Parm )

int ATrVehicle::GetSeatIndexForController ( class AController* ControllerToMove )
{
	static UFunction* pFnGetSeatIndexForController = NULL;

	if ( ! pFnGetSeatIndexForController )
		pFnGetSeatIndexForController = (UFunction*) UObject::GObjObjects()->Data[ 76362 ];

	ATrVehicle_execGetSeatIndexForController_Parms GetSeatIndexForController_Parms;
	GetSeatIndexForController_Parms.ControllerToMove = ControllerToMove;

	this->ProcessEvent ( pFnGetSeatIndexForController, &GetSeatIndexForController_Parms, NULL );

	return GetSeatIndexForController_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SwitchWeapon
// [0x00020100] 
// Parameters infos:
// unsigned char                  NewGroup                       ( CPF_Parm )

void ATrVehicle::SwitchWeapon ( unsigned char NewGroup )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 113382 ];

	ATrVehicle_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.NewGroup = NewGroup;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function TribesGame.TrVehicle.ChangeSeat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             ControllerToMove               ( CPF_Parm )
// int                            RequestedSeat                  ( CPF_Parm )

bool ATrVehicle::ChangeSeat ( class AController* ControllerToMove, int RequestedSeat )
{
	static UFunction* pFnChangeSeat = NULL;

	if ( ! pFnChangeSeat )
		pFnChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 113375 ];

	ATrVehicle_execChangeSeat_Parms ChangeSeat_Parms;
	ChangeSeat_Parms.ControllerToMove = ControllerToMove;
	ChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnChangeSeat, &ChangeSeat_Parms, NULL );

	return ChangeSeat_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SwitchSeat
// [0x00020002] 
// Parameters infos:
// int                            RequestedSeat                  ( CPF_Parm )
// class AController*             ControllerRequestingSeatChange ( CPF_Parm )

void ATrVehicle::SwitchSeat ( int RequestedSeat, class AController* ControllerRequestingSeatChange )
{
	static UFunction* pFnSwitchSeat = NULL;

	if ( ! pFnSwitchSeat )
		pFnSwitchSeat = (UFunction*) UObject::GObjObjects()->Data[ 113372 ];

	ATrVehicle_execSwitchSeat_Parms SwitchSeat_Parms;
	SwitchSeat_Parms.RequestedSeat = RequestedSeat;
	SwitchSeat_Parms.ControllerRequestingSeatChange = ControllerRequestingSeatChange;

	this->ProcessEvent ( pFnSwitchSeat, &SwitchSeat_Parms, NULL );
};

// Function TribesGame.TrVehicle.ServerChangeSeat
// [0x002200C0] 
// Parameters infos:
// int                            RequestedSeat                  ( CPF_Parm )

void ATrVehicle::ServerChangeSeat ( int RequestedSeat )
{
	static UFunction* pFnServerChangeSeat = NULL;

	if ( ! pFnServerChangeSeat )
		pFnServerChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 113370 ];

	ATrVehicle_execServerChangeSeat_Parms ServerChangeSeat_Parms;
	ServerChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnServerChangeSeat, &ServerChangeSeat_Parms, NULL );
};

// Function TribesGame.TrVehicle.GetSeatPRI
// [0x00020102] 
// Parameters infos:
// class APlayerReplicationInfo*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatNum                        ( CPF_Parm )

class APlayerReplicationInfo* ATrVehicle::GetSeatPRI ( int SeatNum )
{
	static UFunction* pFnGetSeatPRI = NULL;

	if ( ! pFnGetSeatPRI )
		pFnGetSeatPRI = (UFunction*) UObject::GObjObjects()->Data[ 113367 ];

	ATrVehicle_execGetSeatPRI_Parms GetSeatPRI_Parms;
	GetSeatPRI_Parms.SeatNum = SeatNum;

	this->ProcessEvent ( pFnGetSeatPRI, &GetSeatPRI_Parms, NULL );

	return GetSeatPRI_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ATrVehicle::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 113361 ];

	ATrVehicle_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.RidingPawnLeave
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ATrVehicle::RidingPawnLeave ( int SeatIndex, unsigned long bForceLeave )
{
	static UFunction* pFnRidingPawnLeave = NULL;

	if ( ! pFnRidingPawnLeave )
		pFnRidingPawnLeave = (UFunction*) UObject::GObjObjects()->Data[ 72624 ];

	ATrVehicle_execRidingPawnLeave_Parms RidingPawnLeave_Parms;
	RidingPawnLeave_Parms.SeatIndex = SeatIndex;
	RidingPawnLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnRidingPawnLeave, &RidingPawnLeave_Parms, NULL );

	return RidingPawnLeave_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.HandleEnteringFlag
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* EnteringPRI                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::HandleEnteringFlag ( class AUTPlayerReplicationInfo* EnteringPRI, int SeatIndex )
{
	static UFunction* pFnHandleEnteringFlag = NULL;

	if ( ! pFnHandleEnteringFlag )
		pFnHandleEnteringFlag = (UFunction*) UObject::GObjObjects()->Data[ 113351 ];

	ATrVehicle_execHandleEnteringFlag_Parms HandleEnteringFlag_Parms;
	HandleEnteringFlag_Parms.EnteringPRI = EnteringPRI;
	HandleEnteringFlag_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnHandleEnteringFlag, &HandleEnteringFlag_Parms, NULL );
};

// Function TribesGame.TrVehicle.HoldGameObject
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class AUDKCarriedObject*       GameObj                        ( CPF_Parm )

void ATrVehicle::eventHoldGameObject ( class AUDKCarriedObject* GameObj )
{
	static UFunction* pFnHoldGameObject = NULL;

	if ( ! pFnHoldGameObject )
		pFnHoldGameObject = (UFunction*) UObject::GObjObjects()->Data[ 113349 ];

	ATrVehicle_eventHoldGameObject_Parms HoldGameObject_Parms;
	HoldGameObject_Parms.GameObj = GameObj;

	this->ProcessEvent ( pFnHoldGameObject, &HoldGameObject_Parms, NULL );
};

// Function TribesGame.TrVehicle.UpdateSeatAnimations
// [0x00820102] 
// Parameters infos:
// class ATrPawn*                 PawnToSit                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::UpdateSeatAnimations ( class ATrPawn* PawnToSit, int SeatIndex )
{
	static UFunction* pFnUpdateSeatAnimations = NULL;

	if ( ! pFnUpdateSeatAnimations )
		pFnUpdateSeatAnimations = (UFunction*) UObject::GObjObjects()->Data[ 113340 ];

	ATrVehicle_execUpdateSeatAnimations_Parms UpdateSeatAnimations_Parms;
	UpdateSeatAnimations_Parms.PawnToSit = PawnToSit;
	UpdateSeatAnimations_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnUpdateSeatAnimations, &UpdateSeatAnimations_Parms, NULL );
};

// Function TribesGame.TrVehicle.DetachRidingPawn
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 PawnLeft                       ( CPF_Parm )

void ATrVehicle::DetachRidingPawn ( class ATrPawn* PawnLeft )
{
	static UFunction* pFnDetachRidingPawn = NULL;

	if ( ! pFnDetachRidingPawn )
		pFnDetachRidingPawn = (UFunction*) UObject::GObjObjects()->Data[ 113338 ];

	ATrVehicle_execDetachRidingPawn_Parms DetachRidingPawn_Parms;
	DetachRidingPawn_Parms.PawnLeft = PawnLeft;

	this->ProcessEvent ( pFnDetachRidingPawn, &DetachRidingPawn_Parms, NULL );
};

// Function TribesGame.TrVehicle.AttachRidingPawn
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 PawnToSit                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::AttachRidingPawn ( class ATrPawn* PawnToSit, int SeatIndex )
{
	static UFunction* pFnAttachRidingPawn = NULL;

	if ( ! pFnAttachRidingPawn )
		pFnAttachRidingPawn = (UFunction*) UObject::GObjObjects()->Data[ 113334 ];

	ATrVehicle_execAttachRidingPawn_Parms AttachRidingPawn_Parms;
	AttachRidingPawn_Parms.PawnToSit = PawnToSit;
	AttachRidingPawn_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnAttachRidingPawn, &AttachRidingPawn_Parms, NULL );
};

// Function TribesGame.TrVehicle.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrVehicle::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 113332 ];

	ATrVehicle_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function TribesGame.TrVehicle.PassengerEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool ATrVehicle::PassengerEnter ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnPassengerEnter = NULL;

	if ( ! pFnPassengerEnter )
		pFnPassengerEnter = (UFunction*) UObject::GObjObjects()->Data[ 113325 ];

	ATrVehicle_execPassengerEnter_Parms PassengerEnter_Parms;
	PassengerEnter_Parms.P = P;
	PassengerEnter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerEnter, &PassengerEnter_Parms, NULL );

	return PassengerEnter_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.InitializeSeats
// [0x00020002] 
// Parameters infos:

void ATrVehicle::InitializeSeats ( )
{
	static UFunction* pFnInitializeSeats = NULL;

	if ( ! pFnInitializeSeats )
		pFnInitializeSeats = (UFunction*) UObject::GObjObjects()->Data[ 113323 ];

	ATrVehicle_execInitializeSeats_Parms InitializeSeats_Parms;

	this->ProcessEvent ( pFnInitializeSeats, &InitializeSeats_Parms, NULL );
};

// Function TribesGame.TrVehicle.GetSVehicleDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrVehicle::GetSVehicleDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetSVehicleDebug = NULL;

	if ( ! pFnGetSVehicleDebug )
		pFnGetSVehicleDebug = (UFunction*) UObject::GObjObjects()->Data[ 113320 ];

	ATrVehicle_execGetSVehicleDebug_Parms GetSVehicleDebug_Parms;

	this->ProcessEvent ( pFnGetSVehicleDebug, &GetSVehicleDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetSVehicleDebug_Parms.DebugInfo, 0xC );
};

// Function TribesGame.TrVehicle.SetSeatStoragePawn
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// class APawn*                   PawnToSit                      ( CPF_Parm )

void ATrVehicle::SetSeatStoragePawn ( int SeatIndex, class APawn* PawnToSit )
{
	static UFunction* pFnSetSeatStoragePawn = NULL;

	if ( ! pFnSetSeatStoragePawn )
		pFnSetSeatStoragePawn = (UFunction*) UObject::GObjObjects()->Data[ 113316 ];

	ATrVehicle_execSetSeatStoragePawn_Parms SetSeatStoragePawn_Parms;
	SetSeatStoragePawn_Parms.SeatIndex = SeatIndex;
	SetSeatStoragePawn_Parms.PawnToSit = PawnToSit;

	this->ProcessEvent ( pFnSetSeatStoragePawn, &SetSeatStoragePawn_Parms, NULL );
};

// Function TribesGame.TrVehicle.RenderDriverPassengerMarker
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// unsigned long                  friendly                       ( CPF_Parm )
// class ATrHUD*                  HUD                            ( CPF_Parm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

bool ATrVehicle::RenderDriverPassengerMarker ( class UCanvas* Canvas, unsigned long friendly, class ATrHUD* HUD, class ATrPlayerController* TrPC )
{
	static UFunction* pFnRenderDriverPassengerMarker = NULL;

	if ( ! pFnRenderDriverPassengerMarker )
		pFnRenderDriverPassengerMarker = (UFunction*) UObject::GObjObjects()->Data[ 113299 ];

	ATrVehicle_execRenderDriverPassengerMarker_Parms RenderDriverPassengerMarker_Parms;
	RenderDriverPassengerMarker_Parms.Canvas = Canvas;
	RenderDriverPassengerMarker_Parms.friendly = friendly;
	RenderDriverPassengerMarker_Parms.HUD = HUD;
	RenderDriverPassengerMarker_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnRenderDriverPassengerMarker, &RenderDriverPassengerMarker_Parms, NULL );

	return RenderDriverPassengerMarker_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrVehicle::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 113268 ];

	ATrVehicle_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrVehicle.Occupied
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::Occupied ( )
{
	static UFunction* pFnOccupied = NULL;

	if ( ! pFnOccupied )
		pFnOccupied = (UFunction*) UObject::GObjObjects()->Data[ 113265 ];

	ATrVehicle_execOccupied_Parms Occupied_Parms;

	this->ProcessEvent ( pFnOccupied, &Occupied_Parms, NULL );

	return Occupied_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrVehicle::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 113263 ];

	ATrVehicle_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrVehicle.PlayMissileLockSounds
// [0x00020102] 
// Parameters infos:

void ATrVehicle::PlayMissileLockSounds ( )
{
	static UFunction* pFnPlayMissileLockSounds = NULL;

	if ( ! pFnPlayMissileLockSounds )
		pFnPlayMissileLockSounds = (UFunction*) UObject::GObjObjects()->Data[ 113260 ];

	ATrVehicle_execPlayMissileLockSounds_Parms PlayMissileLockSounds_Parms;

	this->ProcessEvent ( pFnPlayMissileLockSounds, &PlayMissileLockSounds_Parms, NULL );
};

// Function TribesGame.TrVehicle.PlayBoosterEffects
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrVehicle::PlayBoosterEffects ( unsigned long bEnabled )
{
	static UFunction* pFnPlayBoosterEffects = NULL;

	if ( ! pFnPlayBoosterEffects )
		pFnPlayBoosterEffects = (UFunction*) UObject::GObjObjects()->Data[ 113258 ];

	ATrVehicle_execPlayBoosterEffects_Parms PlayBoosterEffects_Parms;
	PlayBoosterEffects_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnPlayBoosterEffects, &PlayBoosterEffects_Parms, NULL );
};

// Function TribesGame.TrVehicle.BoostSoundFinished
// [0x00020102] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void ATrVehicle::BoostSoundFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnBoostSoundFinished = NULL;

	if ( ! pFnBoostSoundFinished )
		pFnBoostSoundFinished = (UFunction*) UObject::GObjObjects()->Data[ 113256 ];

	ATrVehicle_execBoostSoundFinished_Parms BoostSoundFinished_Parms;
	BoostSoundFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnBoostSoundFinished, &BoostSoundFinished_Parms, NULL );
};

// Function TribesGame.TrVehicle.ServerToggleLevelFlight
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrVehicle::ServerToggleLevelFlight ( unsigned long bEnabled )
{
	static UFunction* pFnServerToggleLevelFlight = NULL;

	if ( ! pFnServerToggleLevelFlight )
		pFnServerToggleLevelFlight = (UFunction*) UObject::GObjObjects()->Data[ 113254 ];

	ATrVehicle_execServerToggleLevelFlight_Parms ServerToggleLevelFlight_Parms;
	ServerToggleLevelFlight_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnServerToggleLevelFlight, &ServerToggleLevelFlight_Parms, NULL );
};

// Function TribesGame.TrVehicle.ShouldRechargePowerPool
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::eventShouldRechargePowerPool ( )
{
	static UFunction* pFnShouldRechargePowerPool = NULL;

	if ( ! pFnShouldRechargePowerPool )
		pFnShouldRechargePowerPool = (UFunction*) UObject::GObjObjects()->Data[ 113252 ];

	ATrVehicle_eventShouldRechargePowerPool_Parms ShouldRechargePowerPool_Parms;

	this->ProcessEvent ( pFnShouldRechargePowerPool, &ShouldRechargePowerPool_Parms, NULL );

	return ShouldRechargePowerPool_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.CanActivateBoosters
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::CanActivateBoosters ( )
{
	static UFunction* pFnCanActivateBoosters = NULL;

	if ( ! pFnCanActivateBoosters )
		pFnCanActivateBoosters = (UFunction*) UObject::GObjObjects()->Data[ 113250 ];

	ATrVehicle_execCanActivateBoosters_Parms CanActivateBoosters_Parms;

	this->ProcessEvent ( pFnCanActivateBoosters, &CanActivateBoosters_Parms, NULL );

	return CanActivateBoosters_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.ConsumeBoostPowerPool
// [0x00020002] 
// Parameters infos:

void ATrVehicle::ConsumeBoostPowerPool ( )
{
	static UFunction* pFnConsumeBoostPowerPool = NULL;

	if ( ! pFnConsumeBoostPowerPool )
		pFnConsumeBoostPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 113249 ];

	ATrVehicle_execConsumeBoostPowerPool_Parms ConsumeBoostPowerPool_Parms;

	this->ProcessEvent ( pFnConsumeBoostPowerPool, &ConsumeBoostPowerPool_Parms, NULL );
};

// Function TribesGame.TrVehicle.ToggleBoosters
// [0x00024002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )
// unsigned long                  ToggleTimer                    ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::ToggleBoosters ( unsigned long bEnabled, unsigned long ToggleTimer )
{
	static UFunction* pFnToggleBoosters = NULL;

	if ( ! pFnToggleBoosters )
		pFnToggleBoosters = (UFunction*) UObject::GObjObjects()->Data[ 113245 ];

	ATrVehicle_execToggleBoosters_Parms ToggleBoosters_Parms;
	ToggleBoosters_Parms.bEnabled = bEnabled;
	ToggleBoosters_Parms.ToggleTimer = ToggleTimer;

	this->ProcessEvent ( pFnToggleBoosters, &ToggleBoosters_Parms, NULL );
};

// Function TribesGame.TrVehicle.HandleMomentum
// [0x00024000] 
// Parameters infos:
// struct FVector                 Momentum                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )

void ATrVehicle::HandleMomentum ( struct FVector Momentum, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnHandleMomentum = NULL;

	if ( ! pFnHandleMomentum )
		pFnHandleMomentum = (UFunction*) UObject::GObjObjects()->Data[ 113240 ];

	ATrVehicle_execHandleMomentum_Parms HandleMomentum_Parms;
	memcpy ( &HandleMomentum_Parms.Momentum, &Momentum, 0xC );
	memcpy ( &HandleMomentum_Parms.HitLocation, &HitLocation, 0xC );
	HandleMomentum_Parms.DamageType = DamageType;
	memcpy ( &HandleMomentum_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnHandleMomentum, &HandleMomentum_Parms, NULL );
};

// Function TribesGame.TrVehicle.ResetResetTime
// [0x00020002] 
// Parameters infos:

void ATrVehicle::ResetResetTime ( )
{
	static UFunction* pFnResetResetTime = NULL;

	if ( ! pFnResetResetTime )
		pFnResetResetTime = (UFunction*) UObject::GObjObjects()->Data[ 113239 ];

	ATrVehicle_execResetResetTime_Parms ResetResetTime_Parms;

	this->ProcessEvent ( pFnResetResetTime, &ResetResetTime_Parms, NULL );
};

// Function TribesGame.TrVehicle.CheckReset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrVehicle::eventCheckReset ( )
{
	static UFunction* pFnCheckReset = NULL;

	if ( ! pFnCheckReset )
		pFnCheckReset = (UFunction*) UObject::GObjObjects()->Data[ 113238 ];

	ATrVehicle_eventCheckReset_Parms CheckReset_Parms;

	this->ProcessEvent ( pFnCheckReset, &CheckReset_Parms, NULL );
};

// Function TribesGame.TrVehicle.PassengerLeave
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::PassengerLeave ( int SeatIndex )
{
	static UFunction* pFnPassengerLeave = NULL;

	if ( ! pFnPassengerLeave )
		pFnPassengerLeave = (UFunction*) UObject::GObjObjects()->Data[ 113235 ];

	ATrVehicle_execPassengerLeave_Parms PassengerLeave_Parms;
	PassengerLeave_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerLeave, &PassengerLeave_Parms, NULL );
};

// Function TribesGame.TrVehicle.DriverLeft
// [0x00820002] 
// Parameters infos:

void ATrVehicle::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 113230 ];

	ATrVehicle_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function TribesGame.TrVehicle.TryToDrive
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ATrVehicle::TryToDrive ( class APawn* P )
{
	static UFunction* pFnTryToDrive = NULL;

	if ( ! pFnTryToDrive )
		pFnTryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 113218 ];

	ATrVehicle_execTryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;

	this->ProcessEvent ( pFnTryToDrive, &TryToDrive_Parms, NULL );

	return TryToDrive_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetFirstAvailableSeat
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSeatMustAllowFlag             ( CPF_OptionalParm | CPF_Parm )

int ATrVehicle::GetFirstAvailableSeat ( unsigned long bSeatMustAllowFlag )
{
	static UFunction* pFnGetFirstAvailableSeat = NULL;

	if ( ! pFnGetFirstAvailableSeat )
		pFnGetFirstAvailableSeat = (UFunction*) UObject::GObjObjects()->Data[ 113214 ];

	ATrVehicle_execGetFirstAvailableSeat_Parms GetFirstAvailableSeat_Parms;
	GetFirstAvailableSeat_Parms.bSeatMustAllowFlag = bSeatMustAllowFlag;

	this->ProcessEvent ( pFnGetFirstAvailableSeat, &GetFirstAvailableSeat_Parms, NULL );

	return GetFirstAvailableSeat_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.CanArmorEnterVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

bool ATrVehicle::CanArmorEnterVehicle ( class UClass* FamilyInfo )
{
	static UFunction* pFnCanArmorEnterVehicle = NULL;

	if ( ! pFnCanArmorEnterVehicle )
		pFnCanArmorEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 113209 ];

	ATrVehicle_execCanArmorEnterVehicle_Parms CanArmorEnterVehicle_Parms;
	CanArmorEnterVehicle_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnCanArmorEnterVehicle, &CanArmorEnterVehicle_Parms, NULL );

	return CanArmorEnterVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.CanArmorDriveVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

bool ATrVehicle::CanArmorDriveVehicle ( class UClass* FamilyInfo )
{
	static UFunction* pFnCanArmorDriveVehicle = NULL;

	if ( ! pFnCanArmorDriveVehicle )
		pFnCanArmorDriveVehicle = (UFunction*) UObject::GObjObjects()->Data[ 113204 ];

	ATrVehicle_execCanArmorDriveVehicle_Parms CanArmorDriveVehicle_Parms;
	CanArmorDriveVehicle_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnCanArmorDriveVehicle, &CanArmorDriveVehicle_Parms, NULL );

	return CanArmorDriveVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.TeleportDriverToSeat
// [0x00020002] 
// Parameters infos:

void ATrVehicle::TeleportDriverToSeat ( )
{
	static UFunction* pFnTeleportDriverToSeat = NULL;

	if ( ! pFnTeleportDriverToSeat )
		pFnTeleportDriverToSeat = (UFunction*) UObject::GObjObjects()->Data[ 113203 ];

	ATrVehicle_execTeleportDriverToSeat_Parms TeleportDriverToSeat_Parms;

	this->ProcessEvent ( pFnTeleportDriverToSeat, &TeleportDriverToSeat_Parms, NULL );
};

// Function TribesGame.TrVehicle.KillControllerForTeamChange
// [0x00020002] 
// Parameters infos:
// class AController*             ControllerToKill               ( CPF_Parm )

void ATrVehicle::KillControllerForTeamChange ( class AController* ControllerToKill )
{
	static UFunction* pFnKillControllerForTeamChange = NULL;

	if ( ! pFnKillControllerForTeamChange )
		pFnKillControllerForTeamChange = (UFunction*) UObject::GObjObjects()->Data[ 113199 ];

	ATrVehicle_execKillControllerForTeamChange_Parms KillControllerForTeamChange_Parms;
	KillControllerForTeamChange_Parms.ControllerToKill = ControllerToKill;

	this->ProcessEvent ( pFnKillControllerForTeamChange, &KillControllerForTeamChange_Parms, NULL );
};

// Function TribesGame.TrVehicle.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ATrVehicle::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 113189 ];

	ATrVehicle_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SendLockOnMessage
// [0x00020102] 
// Parameters infos:
// int                            Switch                         ( CPF_Parm )

void ATrVehicle::SendLockOnMessage ( int Switch )
{
	static UFunction* pFnSendLockOnMessage = NULL;

	if ( ! pFnSendLockOnMessage )
		pFnSendLockOnMessage = (UFunction*) UObject::GObjObjects()->Data[ 113185 ];

	ATrVehicle_execSendLockOnMessage_Parms SendLockOnMessage_Parms;
	SendLockOnMessage_Parms.Switch = Switch;

	this->ProcessEvent ( pFnSendLockOnMessage, &SendLockOnMessage_Parms, NULL );
};

// Function TribesGame.TrVehicle.SetPostSpawnLocked
// [0x00020002] 
// Parameters infos:
// unsigned long                  bLocked                        ( CPF_Parm )

void ATrVehicle::SetPostSpawnLocked ( unsigned long bLocked )
{
	static UFunction* pFnSetPostSpawnLocked = NULL;

	if ( ! pFnSetPostSpawnLocked )
		pFnSetPostSpawnLocked = (UFunction*) UObject::GObjObjects()->Data[ 113183 ];

	ATrVehicle_execSetPostSpawnLocked_Parms SetPostSpawnLocked_Parms;
	SetPostSpawnLocked_Parms.bLocked = bLocked;

	this->ProcessEvent ( pFnSetPostSpawnLocked, &SetPostSpawnLocked_Parms, NULL );
};

// Function TribesGame.TrVehicle.SetPawnToTeleport
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrVehicle::SetPawnToTeleport ( class ATrPawn* P )
{
	static UFunction* pFnSetPawnToTeleport = NULL;

	if ( ! pFnSetPawnToTeleport )
		pFnSetPawnToTeleport = (UFunction*) UObject::GObjObjects()->Data[ 113177 ];

	ATrVehicle_execSetPawnToTeleport_Parms SetPawnToTeleport_Parms;
	SetPawnToTeleport_Parms.P = P;

	this->ProcessEvent ( pFnSetPawnToTeleport, &SetPawnToTeleport_Parms, NULL );
};

// Function TribesGame.TrVehicle.IsEmpty
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::IsEmpty ( )
{
	static UFunction* pFnIsEmpty = NULL;

	if ( ! pFnIsEmpty )
		pFnIsEmpty = (UFunction*) UObject::GObjObjects()->Data[ 71568 ];

	ATrVehicle_execIsEmpty_Parms IsEmpty_Parms;

	this->ProcessEvent ( pFnIsEmpty, &IsEmpty_Parms, NULL );

	return IsEmpty_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrVehicle::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 113174 ];

	ATrVehicle_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function TribesGame.TrVehicle.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 113171 ];

	ATrVehicle_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function TribesGame.TrVehicle.StopsProjectile
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AProjectile*             P                              ( CPF_Parm )

bool ATrVehicle::StopsProjectile ( class AProjectile* P )
{
	static UFunction* pFnStopsProjectile = NULL;

	if ( ! pFnStopsProjectile )
		pFnStopsProjectile = (UFunction*) UObject::GObjObjects()->Data[ 106813 ];

	ATrVehicle_execStopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;

	this->ProcessEvent ( pFnStopsProjectile, &StopsProjectile_Parms, NULL );

	return StopsProjectile_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.RanInto
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrVehicle::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 113158 ];

	ATrVehicle_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function TribesGame.TrVehicle.RigidBodyCollision
// [0x00C20902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    Collision                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrVehicle::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* Collision )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 113144 ];

	ATrVehicle_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( Collision )
		memcpy ( Collision, &RigidBodyCollision_Parms.Collision, 0x24 );
};

// Function TribesGame.TrVehicle.GetDamageAmountForCollision
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Speed                          ( CPF_Parm )

float ATrVehicle::GetDamageAmountForCollision ( float Speed )
{
	static UFunction* pFnGetDamageAmountForCollision = NULL;

	if ( ! pFnGetDamageAmountForCollision )
		pFnGetDamageAmountForCollision = (UFunction*) UObject::GObjObjects()->Data[ 113141 ];

	ATrVehicle_execGetDamageAmountForCollision_Parms GetDamageAmountForCollision_Parms;
	GetDamageAmountForCollision_Parms.Speed = Speed;

	this->ProcessEvent ( pFnGetDamageAmountForCollision, &GetDamageAmountForCollision_Parms, NULL );

	return GetDamageAmountForCollision_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetCollisionDamageInstigator
// [0x00020002] 
// Parameters infos:
// class AController*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AController* ATrVehicle::GetCollisionDamageInstigator ( )
{
	static UFunction* pFnGetCollisionDamageInstigator = NULL;

	if ( ! pFnGetCollisionDamageInstigator )
		pFnGetCollisionDamageInstigator = (UFunction*) UObject::GObjObjects()->Data[ 113139 ];

	ATrVehicle_execGetCollisionDamageInstigator_Parms GetCollisionDamageInstigator_Parms;

	this->ProcessEvent ( pFnGetCollisionDamageInstigator, &GetCollisionDamageInstigator_Parms, NULL );

	return GetCollisionDamageInstigator_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.PancakeOther
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrVehicle::PancakeOther ( class APawn* Other )
{
	static UFunction* pFnPancakeOther = NULL;

	if ( ! pFnPancakeOther )
		pFnPancakeOther = (UFunction*) UObject::GObjObjects()->Data[ 113137 ];

	ATrVehicle_execPancakeOther_Parms PancakeOther_Parms;
	PancakeOther_Parms.Other = Other;

	this->ProcessEvent ( pFnPancakeOther, &PancakeOther_Parms, NULL );
};

// Function TribesGame.TrVehicle.SetScannerDetect
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  detected                       ( CPF_Parm )

bool ATrVehicle::SetScannerDetect ( unsigned long detected )
{
	static UFunction* pFnSetScannerDetect = NULL;

	if ( ! pFnSetScannerDetect )
		pFnSetScannerDetect = (UFunction*) UObject::GObjObjects()->Data[ 79531 ];

	ATrVehicle_execSetScannerDetect_Parms SetScannerDetect_Parms;
	SetScannerDetect_Parms.detected = detected;

	this->ProcessEvent ( pFnSetScannerDetect, &SetScannerDetect_Parms, NULL );

	return SetScannerDetect_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.GetDetectedByEnemyScanner
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicle::GetDetectedByEnemyScanner ( )
{
	static UFunction* pFnGetDetectedByEnemyScanner = NULL;

	if ( ! pFnGetDetectedByEnemyScanner )
		pFnGetDetectedByEnemyScanner = (UFunction*) UObject::GObjObjects()->Data[ 113134 ];

	ATrVehicle_execGetDetectedByEnemyScanner_Parms GetDetectedByEnemyScanner_Parms;

	this->ProcessEvent ( pFnGetDetectedByEnemyScanner, &GetDetectedByEnemyScanner_Parms, NULL );

	return GetDetectedByEnemyScanner_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.SetDetectedByEnemyScanner
// [0x00020002] 
// Parameters infos:
// unsigned long                  detected                       ( CPF_Parm )

void ATrVehicle::SetDetectedByEnemyScanner ( unsigned long detected )
{
	static UFunction* pFnSetDetectedByEnemyScanner = NULL;

	if ( ! pFnSetDetectedByEnemyScanner )
		pFnSetDetectedByEnemyScanner = (UFunction*) UObject::GObjObjects()->Data[ 113132 ];

	ATrVehicle_execSetDetectedByEnemyScanner_Parms SetDetectedByEnemyScanner_Parms;
	SetDetectedByEnemyScanner_Parms.detected = detected;

	this->ProcessEvent ( pFnSetDetectedByEnemyScanner, &SetDetectedByEnemyScanner_Parms, NULL );
};

// Function TribesGame.TrVehicle.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrVehicle::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 113126 ];

	ATrVehicle_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrVehicle.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrVehicle::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 113125 ];

	ATrVehicle_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicle.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrVehicle::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 113121 ];

	ATrVehicle_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrVehicle.SyncClientCurrentPowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATrVehicle::SyncClientCurrentPowerPool ( )
{
	static UFunction* pFnSyncClientCurrentPowerPool = NULL;

	if ( ! pFnSyncClientCurrentPowerPool )
		pFnSyncClientCurrentPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 113120 ];

	ATrVehicle_execSyncClientCurrentPowerPool_Parms SyncClientCurrentPowerPool_Parms;

	pFnSyncClientCurrentPowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSyncClientCurrentPowerPool, &SyncClientCurrentPowerPool_Parms, NULL );

	pFnSyncClientCurrentPowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicle.RegainPowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fDeltaTime                     ( CPF_Parm )

void ATrVehicle::RegainPowerPool ( float fDeltaTime )
{
	static UFunction* pFnRegainPowerPool = NULL;

	if ( ! pFnRegainPowerPool )
		pFnRegainPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 113118 ];

	ATrVehicle_execRegainPowerPool_Parms RegainPowerPool_Parms;
	RegainPowerPool_Parms.fDeltaTime = fDeltaTime;

	pFnRegainPowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRegainPowerPool, &RegainPowerPool_Parms, NULL );

	pFnRegainPowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicle.GetPowerPoolPercent
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrVehicle::GetPowerPoolPercent ( )
{
	static UFunction* pFnGetPowerPoolPercent = NULL;

	if ( ! pFnGetPowerPoolPercent )
		pFnGetPowerPoolPercent = (UFunction*) UObject::GObjObjects()->Data[ 113116 ];

	ATrVehicle_execGetPowerPoolPercent_Parms GetPowerPoolPercent_Parms;

	pFnGetPowerPoolPercent->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetPowerPoolPercent, &GetPowerPoolPercent_Parms, NULL );

	pFnGetPowerPoolPercent->FunctionFlags |= 0x400;

	return GetPowerPoolPercent_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle.ConsumePowerPool
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fAmount                        ( CPF_Parm )

void ATrVehicle::ConsumePowerPool ( float fAmount )
{
	static UFunction* pFnConsumePowerPool = NULL;

	if ( ! pFnConsumePowerPool )
		pFnConsumePowerPool = (UFunction*) UObject::GObjObjects()->Data[ 113114 ];

	ATrVehicle_execConsumePowerPool_Parms ConsumePowerPool_Parms;
	ConsumePowerPool_Parms.fAmount = fAmount;

	pFnConsumePowerPool->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnConsumePowerPool, &ConsumePowerPool_Parms, NULL );

	pFnConsumePowerPool->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicle.NativePostRenderFor
// [0x00020500] ( FUNC_Native )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrVehicle::NativePostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnNativePostRenderFor = NULL;

	if ( ! pFnNativePostRenderFor )
		pFnNativePostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 113109 ];

	ATrVehicle_execNativePostRenderFor_Parms NativePostRenderFor_Parms;
	NativePostRenderFor_Parms.PC = PC;
	NativePostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &NativePostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &NativePostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	pFnNativePostRenderFor->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnNativePostRenderFor, &NativePostRenderFor_Parms, NULL );

	pFnNativePostRenderFor->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicle_BaseFlying.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void ATrVehicle_BaseFlying::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 113713 ];

	ATrVehicle_BaseFlying_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function TribesGame.TrVehicle_BaseFlying.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ATrVehicle_BaseFlying::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 113709 ];

	ATrVehicle_BaseFlying_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function TribesGame.TrVehicle_BaseFlying.CreateParticleSystems
// [0x00020102] 
// Parameters infos:

void ATrVehicle_BaseFlying::CreateParticleSystems ( )
{
	static UFunction* pFnCreateParticleSystems = NULL;

	if ( ! pFnCreateParticleSystems )
		pFnCreateParticleSystems = (UFunction*) UObject::GObjObjects()->Data[ 113707 ];

	ATrVehicle_BaseFlying_execCreateParticleSystems_Parms CreateParticleSystems_Parms;

	this->ProcessEvent ( pFnCreateParticleSystems, &CreateParticleSystems_Parms, NULL );
};

// Function TribesGame.TrVehicle_BaseFlying.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrVehicle_BaseFlying::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 113706 ];

	ATrVehicle_BaseFlying_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicleSimChopper.SetVehicleControls
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bInvert                        ( CPF_Parm )

void UTrVehicleSimChopper::SetVehicleControls ( unsigned long bInvert )
{
	static UFunction* pFnSetVehicleControls = NULL;

	if ( ! pFnSetVehicleControls )
		pFnSetVehicleControls = (UFunction*) UObject::GObjObjects()->Data[ 113869 ];

	UTrVehicleSimChopper_execSetVehicleControls_Parms SetVehicleControls_Parms;
	SetVehicleControls_Parms.bInvert = bInvert;

	pFnSetVehicleControls->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVehicleControls, &SetVehicleControls_Parms, NULL );

	pFnSetVehicleControls->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicleWeapon.ResetAltReticule
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::ResetAltReticule ( )
{
	static UFunction* pFnResetAltReticule = NULL;

	if ( ! pFnResetAltReticule )
		pFnResetAltReticule = (UFunction*) UObject::GObjObjects()->Data[ 114309 ];

	ATrVehicleWeapon_execResetAltReticule_Parms ResetAltReticule_Parms;

	this->ProcessEvent ( pFnResetAltReticule, &ResetAltReticule_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.SetAltReticule
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::SetAltReticule ( )
{
	static UFunction* pFnSetAltReticule = NULL;

	if ( ! pFnSetAltReticule )
		pFnSetAltReticule = (UFunction*) UObject::GObjObjects()->Data[ 114304 ];

	ATrVehicleWeapon_execSetAltReticule_Parms SetAltReticule_Parms;

	this->ProcessEvent ( pFnSetAltReticule, &SetAltReticule_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.EndZoom
// [0x00024102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )
// unsigned long                  bReturningTo3P                 ( CPF_OptionalParm | CPF_Parm )

void ATrVehicleWeapon::EndZoom ( class AUTPlayerController* PC, unsigned long bReturningTo3P )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 114300 ];

	ATrVehicleWeapon_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;
	EndZoom_Parms.bReturningTo3P = bReturningTo3P;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.StartZoom
// [0x00820102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void ATrVehicleWeapon::StartZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 114296 ];

	ATrVehicleWeapon_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.CanViewZoom
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::CanViewZoom ( )
{
	static UFunction* pFnCanViewZoom = NULL;

	if ( ! pFnCanViewZoom )
		pFnCanViewZoom = (UFunction*) UObject::GObjObjects()->Data[ 76499 ];

	ATrVehicleWeapon_execCanViewZoom_Parms CanViewZoom_Parms;

	this->ProcessEvent ( pFnCanViewZoom, &CanViewZoom_Parms, NULL );

	return CanViewZoom_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.UpdateReplicatedCarriedAmmo
// [0x00020002] 
// Parameters infos:

void ATrVehicleWeapon::UpdateReplicatedCarriedAmmo ( )
{
	static UFunction* pFnUpdateReplicatedCarriedAmmo = NULL;

	if ( ! pFnUpdateReplicatedCarriedAmmo )
		pFnUpdateReplicatedCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 114295 ];

	ATrVehicleWeapon_execUpdateReplicatedCarriedAmmo_Parms UpdateReplicatedCarriedAmmo_Parms;

	this->ProcessEvent ( pFnUpdateReplicatedCarriedAmmo, &UpdateReplicatedCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.AddCarriedAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrVehicleWeapon::AddCarriedAmmo ( int Amount )
{
	static UFunction* pFnAddCarriedAmmo = NULL;

	if ( ! pFnAddCarriedAmmo )
		pFnAddCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 114292 ];

	ATrVehicleWeapon_execAddCarriedAmmo_Parms AddCarriedAmmo_Parms;
	AddCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddCarriedAmmo, &AddCarriedAmmo_Parms, NULL );

	return AddCarriedAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.BeginAReload
// [0x00020100] 
// Parameters infos:

void ATrVehicleWeapon::BeginAReload ( )
{
	static UFunction* pFnBeginAReload = NULL;

	if ( ! pFnBeginAReload )
		pFnBeginAReload = (UFunction*) UObject::GObjObjects()->Data[ 114291 ];

	ATrVehicleWeapon_execBeginAReload_Parms BeginAReload_Parms;

	this->ProcessEvent ( pFnBeginAReload, &BeginAReload_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.CalculateReloadPercentRemaining
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrVehicleWeapon::CalculateReloadPercentRemaining ( )
{
	static UFunction* pFnCalculateReloadPercentRemaining = NULL;

	if ( ! pFnCalculateReloadPercentRemaining )
		pFnCalculateReloadPercentRemaining = (UFunction*) UObject::GObjObjects()->Data[ 53436 ];

	ATrVehicleWeapon_execCalculateReloadPercentRemaining_Parms CalculateReloadPercentRemaining_Parms;

	this->ProcessEvent ( pFnCalculateReloadPercentRemaining, &CalculateReloadPercentRemaining_Parms, NULL );

	return CalculateReloadPercentRemaining_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.OnReloadComplete
// [0x00020002] 
// Parameters infos:

void ATrVehicleWeapon::OnReloadComplete ( )
{
	static UFunction* pFnOnReloadComplete = NULL;

	if ( ! pFnOnReloadComplete )
		pFnOnReloadComplete = (UFunction*) UObject::GObjObjects()->Data[ 114288 ];

	ATrVehicleWeapon_execOnReloadComplete_Parms OnReloadComplete_Parms;

	this->ProcessEvent ( pFnOnReloadComplete, &OnReloadComplete_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.ClientFinishedReload
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::ClientFinishedReload ( )
{
	static UFunction* pFnClientFinishedReload = NULL;

	if ( ! pFnClientFinishedReload )
		pFnClientFinishedReload = (UFunction*) UObject::GObjObjects()->Data[ 114287 ];

	ATrVehicleWeapon_execClientFinishedReload_Parms ClientFinishedReload_Parms;

	this->ProcessEvent ( pFnClientFinishedReload, &ClientFinishedReload_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.OnClientReloaded
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::OnClientReloaded ( )
{
	static UFunction* pFnOnClientReloaded = NULL;

	if ( ! pFnOnClientReloaded )
		pFnOnClientReloaded = (UFunction*) UObject::GObjObjects()->Data[ 114263 ];

	ATrVehicleWeapon_execOnClientReloaded_Parms OnClientReloaded_Parms;

	this->ProcessEvent ( pFnOnClientReloaded, &OnClientReloaded_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.RequestReload
// [0x00020002] 
// Parameters infos:

void ATrVehicleWeapon::RequestReload ( )
{
	static UFunction* pFnRequestReload = NULL;

	if ( ! pFnRequestReload )
		pFnRequestReload = (UFunction*) UObject::GObjObjects()->Data[ 114262 ];

	ATrVehicleWeapon_execRequestReload_Parms RequestReload_Parms;

	this->ProcessEvent ( pFnRequestReload, &RequestReload_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.CanClientRequestReloadNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::CanClientRequestReloadNow ( )
{
	static UFunction* pFnCanClientRequestReloadNow = NULL;

	if ( ! pFnCanClientRequestReloadNow )
		pFnCanClientRequestReloadNow = (UFunction*) UObject::GObjObjects()->Data[ 75994 ];

	ATrVehicleWeapon_execCanClientRequestReloadNow_Parms CanClientRequestReloadNow_Parms;

	this->ProcessEvent ( pFnCanClientRequestReloadNow, &CanClientRequestReloadNow_Parms, NULL );

	return CanClientRequestReloadNow_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.HasReticuleCharge
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::HasReticuleCharge ( )
{
	static UFunction* pFnHasReticuleCharge = NULL;

	if ( ! pFnHasReticuleCharge )
		pFnHasReticuleCharge = (UFunction*) UObject::GObjObjects()->Data[ 53434 ];

	ATrVehicleWeapon_execHasReticuleCharge_Parms HasReticuleCharge_Parms;

	this->ProcessEvent ( pFnHasReticuleCharge, &HasReticuleCharge_Parms, NULL );

	return HasReticuleCharge_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.PutDownWeapon
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::PutDownWeapon ( )
{
	static UFunction* pFnPutDownWeapon = NULL;

	if ( ! pFnPutDownWeapon )
		pFnPutDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 114243 ];

	ATrVehicleWeapon_execPutDownWeapon_Parms PutDownWeapon_Parms;

	this->ProcessEvent ( pFnPutDownWeapon, &PutDownWeapon_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrVehicleWeapon::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 114241 ];

	ATrVehicleWeapon_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 114240 ];

	ATrVehicleWeapon_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.AddSpread
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                BaseAim                        ( CPF_Parm )

struct FRotator ATrVehicleWeapon::AddSpread ( struct FRotator BaseAim )
{
	static UFunction* pFnAddSpread = NULL;

	if ( ! pFnAddSpread )
		pFnAddSpread = (UFunction*) UObject::GObjObjects()->Data[ 114237 ];

	ATrVehicleWeapon_execAddSpread_Parms AddSpread_Parms;
	memcpy ( &AddSpread_Parms.BaseAim, &BaseAim, 0xC );

	this->ProcessEvent ( pFnAddSpread, &AddSpread_Parms, NULL );

	return AddSpread_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.GetAdjustedAim
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ATrVehicleWeapon::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 114231 ];

	ATrVehicleWeapon_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.AddSpreadWithAccuracy
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                BaseAim                        ( CPF_Parm )
// float                          fAccuracy                      ( CPF_Parm )

struct FRotator ATrVehicleWeapon::AddSpreadWithAccuracy ( struct FRotator BaseAim, float fAccuracy )
{
	static UFunction* pFnAddSpreadWithAccuracy = NULL;

	if ( ! pFnAddSpreadWithAccuracy )
		pFnAddSpreadWithAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 114220 ];

	ATrVehicleWeapon_execAddSpreadWithAccuracy_Parms AddSpreadWithAccuracy_Parms;
	memcpy ( &AddSpreadWithAccuracy_Parms.BaseAim, &BaseAim, 0xC );
	AddSpreadWithAccuracy_Parms.fAccuracy = fAccuracy;

	this->ProcessEvent ( pFnAddSpreadWithAccuracy, &AddSpreadWithAccuracy_Parms, NULL );

	return AddSpreadWithAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.PayAccuracyForShot
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::PayAccuracyForShot ( )
{
	static UFunction* pFnPayAccuracyForShot = NULL;

	if ( ! pFnPayAccuracyForShot )
		pFnPayAccuracyForShot = (UFunction*) UObject::GObjObjects()->Data[ 114217 ];

	ATrVehicleWeapon_execPayAccuracyForShot_Parms PayAccuracyForShot_Parms;

	this->ProcessEvent ( pFnPayAccuracyForShot, &PayAccuracyForShot_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.GetTracer
// [0x00020102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )

class ATrProj_Tracer* ATrVehicleWeapon::GetTracer ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnGetTracer = NULL;

	if ( ! pFnGetTracer )
		pFnGetTracer = (UFunction*) UObject::GObjObjects()->Data[ 114213 ];

	ATrVehicleWeapon_execGetTracer_Parms GetTracer_Parms;
	memcpy ( &GetTracer_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &GetTracer_Parms.SpawnRotation, &SpawnRotation, 0xC );

	this->ProcessEvent ( pFnGetTracer, &GetTracer_Parms, NULL );

	return GetTracer_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.WeaponPlaySoundLocal
// [0x00024102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bStopWhenOwnerDestroyed        ( CPF_OptionalParm | CPF_Parm )

void ATrVehicleWeapon::WeaponPlaySoundLocal ( class USoundCue* Sound, float NoiseLoudness, unsigned long bStopWhenOwnerDestroyed )
{
	static UFunction* pFnWeaponPlaySoundLocal = NULL;

	if ( ! pFnWeaponPlaySoundLocal )
		pFnWeaponPlaySoundLocal = (UFunction*) UObject::GObjObjects()->Data[ 114209 ];

	ATrVehicleWeapon_execWeaponPlaySoundLocal_Parms WeaponPlaySoundLocal_Parms;
	WeaponPlaySoundLocal_Parms.Sound = Sound;
	WeaponPlaySoundLocal_Parms.NoiseLoudness = NoiseLoudness;
	WeaponPlaySoundLocal_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;

	this->ProcessEvent ( pFnWeaponPlaySoundLocal, &WeaponPlaySoundLocal_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.SpawnTracerEffect
// [0x00820102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          HitDistance                    ( CPF_Parm )

class ATrProj_Tracer* ATrVehicleWeapon::SpawnTracerEffect ( struct FVector HitLocation, float HitDistance )
{
	static UFunction* pFnSpawnTracerEffect = NULL;

	if ( ! pFnSpawnTracerEffect )
		pFnSpawnTracerEffect = (UFunction*) UObject::GObjObjects()->Data[ 114202 ];

	ATrVehicleWeapon_execSpawnTracerEffect_Parms SpawnTracerEffect_Parms;
	memcpy ( &SpawnTracerEffect_Parms.HitLocation, &HitLocation, 0xC );
	SpawnTracerEffect_Parms.HitDistance = HitDistance;

	this->ProcessEvent ( pFnSpawnTracerEffect, &SpawnTracerEffect_Parms, NULL );

	return SpawnTracerEffect_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.SpawnTracerBeam
// [0x00020102] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )

void ATrVehicleWeapon::SpawnTracerBeam ( struct FVector Start, struct FVector End )
{
	static UFunction* pFnSpawnTracerBeam = NULL;

	if ( ! pFnSpawnTracerBeam )
		pFnSpawnTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 114198 ];

	ATrVehicleWeapon_execSpawnTracerBeam_Parms SpawnTracerBeam_Parms;
	memcpy ( &SpawnTracerBeam_Parms.Start, &Start, 0xC );
	memcpy ( &SpawnTracerBeam_Parms.End, &End, 0xC );

	this->ProcessEvent ( pFnSpawnTracerBeam, &SpawnTracerBeam_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.ShouldFireTracerBeam
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::ShouldFireTracerBeam ( )
{
	static UFunction* pFnShouldFireTracerBeam = NULL;

	if ( ! pFnShouldFireTracerBeam )
		pFnShouldFireTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 114196 ];

	ATrVehicleWeapon_execShouldFireTracerBeam_Parms ShouldFireTracerBeam_Parms;

	this->ProcessEvent ( pFnShouldFireTracerBeam, &ShouldFireTracerBeam_Parms, NULL );

	return ShouldFireTracerBeam_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.ShouldFireTracer
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::ShouldFireTracer ( )
{
	static UFunction* pFnShouldFireTracer = NULL;

	if ( ! pFnShouldFireTracer )
		pFnShouldFireTracer = (UFunction*) UObject::GObjObjects()->Data[ 114194 ];

	ATrVehicleWeapon_execShouldFireTracer_Parms ShouldFireTracer_Parms;

	this->ProcessEvent ( pFnShouldFireTracer, &ShouldFireTracer_Parms, NULL );

	return ShouldFireTracer_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.ShakeView
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::ShakeView ( )
{
	static UFunction* pFnShakeView = NULL;

	if ( ! pFnShakeView )
		pFnShakeView = (UFunction*) UObject::GObjObjects()->Data[ 114192 ];

	ATrVehicleWeapon_execShakeView_Parms ShakeView_Parms;

	this->ProcessEvent ( pFnShakeView, &ShakeView_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrVehicleWeapon::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 114189 ];

	ATrVehicleWeapon_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.StopMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::StopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 114188 ];

	ATrVehicleWeapon_execStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.CauseMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::CauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 114186 ];

	ATrVehicleWeapon_execCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.MuzzleFlashTimer
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::MuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 114185 ];

	ATrVehicleWeapon_execMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 114183 ];

	ATrVehicleWeapon_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.GetEffectLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ATrVehicleWeapon::GetEffectLocation ( )
{
	static UFunction* pFnGetEffectLocation = NULL;

	if ( ! pFnGetEffectLocation )
		pFnGetEffectLocation = (UFunction*) UObject::GObjObjects()->Data[ 114180 ];

	ATrVehicleWeapon_execGetEffectLocation_Parms GetEffectLocation_Parms;

	this->ProcessEvent ( pFnGetEffectLocation, &GetEffectLocation_Parms, NULL );

	return GetEffectLocation_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.GetNumRoundsCurrentlyInClip
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrVehicleWeapon::GetNumRoundsCurrentlyInClip ( )
{
	static UFunction* pFnGetNumRoundsCurrentlyInClip = NULL;

	if ( ! pFnGetNumRoundsCurrentlyInClip )
		pFnGetNumRoundsCurrentlyInClip = (UFunction*) UObject::GObjObjects()->Data[ 114178 ];

	ATrVehicleWeapon_execGetNumRoundsCurrentlyInClip_Parms GetNumRoundsCurrentlyInClip_Parms;

	this->ProcessEvent ( pFnGetNumRoundsCurrentlyInClip, &GetNumRoundsCurrentlyInClip_Parms, NULL );

	return GetNumRoundsCurrentlyInClip_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.UpdateShotsFired
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  Reset                          ( CPF_OptionalParm | CPF_Parm )

void ATrVehicleWeapon::eventUpdateShotsFired ( unsigned long Reset )
{
	static UFunction* pFnUpdateShotsFired = NULL;

	if ( ! pFnUpdateShotsFired )
		pFnUpdateShotsFired = (UFunction*) UObject::GObjObjects()->Data[ 114176 ];

	ATrVehicleWeapon_eventUpdateShotsFired_Parms UpdateShotsFired_Parms;
	UpdateShotsFired_Parms.Reset = Reset;

	this->ProcessEvent ( pFnUpdateShotsFired, &UpdateShotsFired_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.GetProjectileClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ATrVehicleWeapon::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 114174 ];

	ATrVehicleWeapon_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.ProjectileFire
// [0x00820102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrVehicleWeapon::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 114169 ];

	ATrVehicleWeapon_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.IsWeaponInFiringCone
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleWeapon::IsWeaponInFiringCone ( )
{
	static UFunction* pFnIsWeaponInFiringCone = NULL;

	if ( ! pFnIsWeaponInFiringCone )
		pFnIsWeaponInFiringCone = (UFunction*) UObject::GObjObjects()->Data[ 114165 ];

	ATrVehicleWeapon_execIsWeaponInFiringCone_Parms IsWeaponInFiringCone_Parms;

	this->ProcessEvent ( pFnIsWeaponInFiringCone, &IsWeaponInFiringCone_Parms, NULL );

	return IsWeaponInFiringCone_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrVehicleWeapon::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 114163 ];

	ATrVehicleWeapon_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 114162 ];

	ATrVehicleWeapon_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.CalculateReloadTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrVehicleWeapon::CalculateReloadTime ( )
{
	static UFunction* pFnCalculateReloadTime = NULL;

	if ( ! pFnCalculateReloadTime )
		pFnCalculateReloadTime = (UFunction*) UObject::GObjObjects()->Data[ 114160 ];

	ATrVehicleWeapon_execCalculateReloadTime_Parms CalculateReloadTime_Parms;

	this->ProcessEvent ( pFnCalculateReloadTime, &CalculateReloadTime_Parms, NULL );

	return CalculateReloadTime_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.InitVehicleGun
// [0x00020100] 
// Parameters infos:

void ATrVehicleWeapon::InitVehicleGun ( )
{
	static UFunction* pFnInitVehicleGun = NULL;

	if ( ! pFnInitVehicleGun )
		pFnInitVehicleGun = (UFunction*) UObject::GObjObjects()->Data[ 114159 ];

	ATrVehicleWeapon_execInitVehicleGun_Parms InitVehicleGun_Parms;

	this->ProcessEvent ( pFnInitVehicleGun, &InitVehicleGun_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon.RestoreAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          fTimeStep                      ( CPF_Parm )

void ATrVehicleWeapon::RestoreAccuracy ( float fTimeStep )
{
	static UFunction* pFnRestoreAccuracy = NULL;

	if ( ! pFnRestoreAccuracy )
		pFnRestoreAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 114157 ];

	ATrVehicleWeapon_execRestoreAccuracy_Parms RestoreAccuracy_Parms;
	RestoreAccuracy_Parms.fTimeStep = fTimeStep;

	pFnRestoreAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnRestoreAccuracy, &RestoreAccuracy_Parms, NULL );

	pFnRestoreAccuracy->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVehicleWeapon.GetTargetAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrVehicleWeapon::GetTargetAccuracy ( )
{
	static UFunction* pFnGetTargetAccuracy = NULL;

	if ( ! pFnGetTargetAccuracy )
		pFnGetTargetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 114155 ];

	ATrVehicleWeapon_execGetTargetAccuracy_Parms GetTargetAccuracy_Parms;

	pFnGetTargetAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetTargetAccuracy, &GetTargetAccuracy_Parms, NULL );

	pFnGetTargetAccuracy->FunctionFlags |= 0x400;

	return GetTargetAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleWeapon.GetAccuracy
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrVehicleWeapon::GetAccuracy ( )
{
	static UFunction* pFnGetAccuracy = NULL;

	if ( ! pFnGetAccuracy )
		pFnGetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 61251 ];

	ATrVehicleWeapon_execGetAccuracy_Parms GetAccuracy_Parms;

	pFnGetAccuracy->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAccuracy, &GetAccuracy_Parms, NULL );

	pFnGetAccuracy->FunctionFlags |= 0x400;

	return GetAccuracy_Parms.ReturnValue;
};

// Function TribesGame.TrVideoSettings.SetSmoothFramerateValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UTrVideoSettings::eventSetSmoothFramerateValue ( int val )
{
	static UFunction* pFnSetSmoothFramerateValue = NULL;

	if ( ! pFnSetSmoothFramerateValue )
		pFnSetSmoothFramerateValue = (UFunction*) UObject::GObjObjects()->Data[ 114629 ];

	UTrVideoSettings_eventSetSmoothFramerateValue_Parms SetSmoothFramerateValue_Parms;
	SetSmoothFramerateValue_Parms.val = val;

	this->ProcessEvent ( pFnSetSmoothFramerateValue, &SetSmoothFramerateValue_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.GetSmoothFramerateValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrVideoSettings::eventGetSmoothFramerateValue ( )
{
	static UFunction* pFnGetSmoothFramerateValue = NULL;

	if ( ! pFnGetSmoothFramerateValue )
		pFnGetSmoothFramerateValue = (UFunction*) UObject::GObjObjects()->Data[ 61099 ];

	UTrVideoSettings_eventGetSmoothFramerateValue_Parms GetSmoothFramerateValue_Parms;

	this->ProcessEvent ( pFnGetSmoothFramerateValue, &GetSmoothFramerateValue_Parms, NULL );

	return GetSmoothFramerateValue_Parms.ReturnValue;
};

// Function TribesGame.TrVideoSettings.CacheVideoSetting
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            val                            ( CPF_Parm )

void UTrVideoSettings::CacheVideoSetting ( int Index, int val )
{
	static UFunction* pFnCacheVideoSetting = NULL;

	if ( ! pFnCacheVideoSetting )
		pFnCacheVideoSetting = (UFunction*) UObject::GObjObjects()->Data[ 114619 ];

	UTrVideoSettings_execCacheVideoSetting_Parms CacheVideoSetting_Parms;
	CacheVideoSetting_Parms.Index = Index;
	CacheVideoSetting_Parms.val = val;

	this->ProcessEvent ( pFnCacheVideoSetting, &CacheVideoSetting_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.GetSettingTypeFromName
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

unsigned char UTrVideoSettings::GetSettingTypeFromName ( struct FString val )
{
	static UFunction* pFnGetSettingTypeFromName = NULL;

	if ( ! pFnGetSettingTypeFromName )
		pFnGetSettingTypeFromName = (UFunction*) UObject::GObjObjects()->Data[ 114616 ];

	UTrVideoSettings_execGetSettingTypeFromName_Parms GetSettingTypeFromName_Parms;
	memcpy ( &GetSettingTypeFromName_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnGetSettingTypeFromName, &GetSettingTypeFromName_Parms, NULL );

	return GetSettingTypeFromName_Parms.ReturnValue;
};

// Function TribesGame.TrVideoSettings.GetSettingNameFromType
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Index                          ( CPF_Parm )

struct FString UTrVideoSettings::GetSettingNameFromType ( unsigned char Index )
{
	static UFunction* pFnGetSettingNameFromType = NULL;

	if ( ! pFnGetSettingNameFromType )
		pFnGetSettingNameFromType = (UFunction*) UObject::GObjObjects()->Data[ 114613 ];

	UTrVideoSettings_execGetSettingNameFromType_Parms GetSettingNameFromType_Parms;
	GetSettingNameFromType_Parms.Index = Index;

	this->ProcessEvent ( pFnGetSettingNameFromType, &GetSettingNameFromType_Parms, NULL );

	return GetSettingNameFromType_Parms.ReturnValue;
};

// Function TribesGame.TrVideoSettings.AddResolutionToList
// [0x00020002] 
// Parameters infos:
// struct FString                 Resolution                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrVideoSettings::AddResolutionToList ( struct FString Resolution )
{
	static UFunction* pFnAddResolutionToList = NULL;

	if ( ! pFnAddResolutionToList )
		pFnAddResolutionToList = (UFunction*) UObject::GObjObjects()->Data[ 114610 ];

	UTrVideoSettings_execAddResolutionToList_Parms AddResolutionToList_Parms;
	memcpy ( &AddResolutionToList_Parms.Resolution, &Resolution, 0xC );

	this->ProcessEvent ( pFnAddResolutionToList, &AddResolutionToList_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.LoadResolutions
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrVideoSettings::LoadResolutions ( class UGFxObject* List )
{
	static UFunction* pFnLoadResolutions = NULL;

	if ( ! pFnLoadResolutions )
		pFnLoadResolutions = (UFunction*) UObject::GObjObjects()->Data[ 114602 ];

	UTrVideoSettings_execLoadResolutions_Parms LoadResolutions_Parms;
	LoadResolutions_Parms.List = List;

	this->ProcessEvent ( pFnLoadResolutions, &LoadResolutions_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.LoadVideoResolutions
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrVideoSettings::LoadVideoResolutions ( class UGFxObject* List )
{
	static UFunction* pFnLoadVideoResolutions = NULL;

	if ( ! pFnLoadVideoResolutions )
		pFnLoadVideoResolutions = (UFunction*) UObject::GObjObjects()->Data[ 114600 ];

	UTrVideoSettings_execLoadVideoResolutions_Parms LoadVideoResolutions_Parms;
	LoadVideoResolutions_Parms.List = List;

	this->ProcessEvent ( pFnLoadVideoResolutions, &LoadVideoResolutions_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.AddVideoSettingToList
// [0x00020002] 
// Parameters infos:
// struct FString                 SettingName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            val                            ( CPF_Parm )

void UTrVideoSettings::AddVideoSettingToList ( struct FString SettingName, int val )
{
	static UFunction* pFnAddVideoSettingToList = NULL;

	if ( ! pFnAddVideoSettingToList )
		pFnAddVideoSettingToList = (UFunction*) UObject::GObjObjects()->Data[ 114596 ];

	UTrVideoSettings_execAddVideoSettingToList_Parms AddVideoSettingToList_Parms;
	memcpy ( &AddVideoSettingToList_Parms.SettingName, &SettingName, 0xC );
	AddVideoSettingToList_Parms.val = val;

	this->ProcessEvent ( pFnAddVideoSettingToList, &AddVideoSettingToList_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.LoadVideoSettings
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UTrVideoSettings::LoadVideoSettings ( class UGFxObject* List )
{
	static UFunction* pFnLoadVideoSettings = NULL;

	if ( ! pFnLoadVideoSettings )
		pFnLoadVideoSettings = (UFunction*) UObject::GObjObjects()->Data[ 114589 ];

	UTrVideoSettings_execLoadVideoSettings_Parms LoadVideoSettings_Parms;
	LoadVideoSettings_Parms.List = List;

	this->ProcessEvent ( pFnLoadVideoSettings, &LoadVideoSettings_Parms, NULL );
};

// Function TribesGame.TrVideoSettings.SetMotionBlur
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UTrVideoSettings::SetMotionBlur ( unsigned long bEnable )
{
	static UFunction* pFnSetMotionBlur = NULL;

	if ( ! pFnSetMotionBlur )
		pFnSetMotionBlur = (UFunction*) UObject::GObjObjects()->Data[ 114587 ];

	UTrVideoSettings_execSetMotionBlur_Parms SetMotionBlur_Parms;
	SetMotionBlur_Parms.bEnable = bEnable;

	pFnSetMotionBlur->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetMotionBlur, &SetMotionBlur_Parms, NULL );

	pFnSetMotionBlur->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.SetVSync
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UTrVideoSettings::SetVSync ( unsigned long bEnable )
{
	static UFunction* pFnSetVSync = NULL;

	if ( ! pFnSetVSync )
		pFnSetVSync = (UFunction*) UObject::GObjObjects()->Data[ 114585 ];

	UTrVideoSettings_execSetVSync_Parms SetVSync_Parms;
	SetVSync_Parms.bEnable = bEnable;

	pFnSetVSync->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnSetVSync, &SetVSync_Parms, NULL );

	pFnSetVSync->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.GetResolutions
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FPropertyPair > ResolutionList                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrVideoSettings::GetResolutions ( TArray< struct FPropertyPair >* ResolutionList )
{
	static UFunction* pFnGetResolutions = NULL;

	if ( ! pFnGetResolutions )
		pFnGetResolutions = (UFunction*) UObject::GObjObjects()->Data[ 114582 ];

	UTrVideoSettings_execGetResolutions_Parms GetResolutions_Parms;

	pFnGetResolutions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetResolutions, &GetResolutions_Parms, NULL );

	pFnGetResolutions->FunctionFlags |= 0x400;

	if ( ResolutionList )
		memcpy ( ResolutionList, &GetResolutions_Parms.ResolutionList, 0xC );
};

// Function TribesGame.TrVideoSettings.ChangeGraphicsDetail
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrVideoSettings::ChangeGraphicsDetail ( int Index )
{
	static UFunction* pFnChangeGraphicsDetail = NULL;

	if ( ! pFnChangeGraphicsDetail )
		pFnChangeGraphicsDetail = (UFunction*) UObject::GObjObjects()->Data[ 114580 ];

	UTrVideoSettings_execChangeGraphicsDetail_Parms ChangeGraphicsDetail_Parms;
	ChangeGraphicsDetail_Parms.Index = Index;

	pFnChangeGraphicsDetail->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeGraphicsDetail, &ChangeGraphicsDetail_Parms, NULL );

	pFnChangeGraphicsDetail->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.ChangeResolution
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrVideoSettings::ChangeResolution ( int Index )
{
	static UFunction* pFnChangeResolution = NULL;

	if ( ! pFnChangeResolution )
		pFnChangeResolution = (UFunction*) UObject::GObjObjects()->Data[ 114578 ];

	UTrVideoSettings_execChangeResolution_Parms ChangeResolution_Parms;
	ChangeResolution_Parms.Index = Index;

	pFnChangeResolution->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeResolution, &ChangeResolution_Parms, NULL );

	pFnChangeResolution->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.ChangeScreenType
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrVideoSettings::ChangeScreenType ( int Index )
{
	static UFunction* pFnChangeScreenType = NULL;

	if ( ! pFnChangeScreenType )
		pFnChangeScreenType = (UFunction*) UObject::GObjObjects()->Data[ 114576 ];

	UTrVideoSettings_execChangeScreenType_Parms ChangeScreenType_Parms;
	ChangeScreenType_Parms.Index = Index;

	pFnChangeScreenType->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnChangeScreenType, &ChangeScreenType_Parms, NULL );

	pFnChangeScreenType->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.ApplyVideoSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTrVideoSettings::ApplyVideoSettings ( )
{
	static UFunction* pFnApplyVideoSettings = NULL;

	if ( ! pFnApplyVideoSettings )
		pFnApplyVideoSettings = (UFunction*) UObject::GObjObjects()->Data[ 114575 ];

	UTrVideoSettings_execApplyVideoSettings_Parms ApplyVideoSettings_Parms;

	pFnApplyVideoSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnApplyVideoSettings, &ApplyVideoSettings_Parms, NULL );

	pFnApplyVideoSettings->FunctionFlags |= 0x400;
};

// Function TribesGame.TrVideoSettings.GetAllowedResolutions
// [0x00420400] ( FUNC_Native )
// Parameters infos:
// TArray< struct FResolutionData > ResolutionList                 ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrVideoSettings::GetAllowedResolutions ( TArray< struct FResolutionData >* ResolutionList )
{
	static UFunction* pFnGetAllowedResolutions = NULL;

	if ( ! pFnGetAllowedResolutions )
		pFnGetAllowedResolutions = (UFunction*) UObject::GObjObjects()->Data[ 114572 ];

	UTrVideoSettings_execGetAllowedResolutions_Parms GetAllowedResolutions_Parms;

	pFnGetAllowedResolutions->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetAllowedResolutions, &GetAllowedResolutions_Parms, NULL );

	pFnGetAllowedResolutions->FunctionFlags |= 0x400;

	if ( ResolutionList )
		memcpy ( ResolutionList, &GetAllowedResolutions_Parms.ResolutionList, 0xC );
};

// Function TribesGame.TrVideoSettings.GetCurrentSettingValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Type                           ( CPF_Parm )

int UTrVideoSettings::GetCurrentSettingValue ( unsigned char Type )
{
	static UFunction* pFnGetCurrentSettingValue = NULL;

	if ( ! pFnGetCurrentSettingValue )
		pFnGetCurrentSettingValue = (UFunction*) UObject::GObjObjects()->Data[ 61021 ];

	UTrVideoSettings_execGetCurrentSettingValue_Parms GetCurrentSettingValue_Parms;
	GetCurrentSettingValue_Parms.Type = Type;

	pFnGetCurrentSettingValue->FunctionFlags |= ~0x400;

	this->ProcessEvent ( pFnGetCurrentSettingValue, &GetCurrentSettingValue_Parms, NULL );

	pFnGetCurrentSettingValue->FunctionFlags |= 0x400;

	return GetCurrentSettingValue_Parms.ReturnValue;
};

// Function TribesGame.TrWeaponPawn.PlayLoopingSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               InSound                        ( CPF_Parm )
// unsigned long                  Play                           ( CPF_Parm )

void ATrWeaponPawn::PlayLoopingSound ( class USoundCue* InSound, unsigned long Play )
{
	static UFunction* pFnPlayLoopingSound = NULL;

	if ( ! pFnPlayLoopingSound )
		pFnPlayLoopingSound = (UFunction*) UObject::GObjObjects()->Data[ 114661 ];

	ATrWeaponPawn_execPlayLoopingSound_Parms PlayLoopingSound_Parms;
	PlayLoopingSound_Parms.InSound = InSound;
	PlayLoopingSound_Parms.Play = Play;

	this->ProcessEvent ( pFnPlayLoopingSound, &PlayLoopingSound_Parms, NULL );
};

// Function TribesGame.TrWeaponPawn.ClientPlayLoopSound
// [0x00020102] 
// Parameters infos:

void ATrWeaponPawn::ClientPlayLoopSound ( )
{
	static UFunction* pFnClientPlayLoopSound = NULL;

	if ( ! pFnClientPlayLoopSound )
		pFnClientPlayLoopSound = (UFunction*) UObject::GObjObjects()->Data[ 114660 ];

	ATrWeaponPawn_execClientPlayLoopSound_Parms ClientPlayLoopSound_Parms;

	this->ProcessEvent ( pFnClientPlayLoopSound, &ClientPlayLoopSound_Parms, NULL );
};

// Function TribesGame.TrWeaponPawn.ProcessViewRotation
// [0x00420102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ATrWeaponPawn::ProcessViewRotation ( float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 114656 ];

	ATrWeaponPawn_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotation_Parms.out_DeltaRot, 0xC );
};

// Function TribesGame.TrWeaponPawn.PlayReload
// [0x00020102] 
// Parameters infos:

void ATrWeaponPawn::PlayReload ( )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 114655 ];

	ATrWeaponPawn_execPlayReload_Parms PlayReload_Parms;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );
};

// Function TribesGame.TrWeaponPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrWeaponPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 114653 ];

	ATrWeaponPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.dsWebAdmin.Query
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UWebRequest*             Request                        ( CPF_Parm )
// class UWebResponse*            Response                       ( CPF_Parm )

void UdsWebAdmin::eventQuery ( class UWebRequest* Request, class UWebResponse* Response )
{
	static UFunction* pFnQuery = NULL;

	if ( ! pFnQuery )
		pFnQuery = (UFunction*) UObject::GObjObjects()->Data[ 50733 ];

	UdsWebAdmin_eventQuery_Parms Query_Parms;
	Query_Parms.Request = Request;
	Query_Parms.Response = Response;

	this->ProcessEvent ( pFnQuery, &Query_Parms, NULL );
};

// Function TribesGame.dsWebAdmin.Init
// [0x00020002] 
// Parameters infos:

void UdsWebAdmin::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50732 ];

	UdsWebAdmin_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.GFxDeviceAmmoCount.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            Player                         ( CPF_OptionalParm | CPF_Parm )

void UGFxDeviceAmmoCount::Init ( class ULocalPlayer* Player )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50743 ];

	UGFxDeviceAmmoCount_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.GFxTrPage.OnClose
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::OnClose ( )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = (UFunction*) UObject::GObjObjects()->Data[ 56574 ];

	UGFxTrPage_execOnClose_Parms OnClose_Parms;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
};

// Function TribesGame.GFxTrPage.SaveReticule
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UGFxTrPage::SaveReticule ( class UGFxObject* Data )
{
	static UFunction* pFnSaveReticule = NULL;

	if ( ! pFnSaveReticule )
		pFnSaveReticule = (UFunction*) UObject::GObjObjects()->Data[ 56572 ];

	UGFxTrPage_execSaveReticule_Parms SaveReticule_Parms;
	SaveReticule_Parms.Data = Data;

	this->ProcessEvent ( pFnSaveReticule, &SaveReticule_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ShowReticule
// [0x00020000] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UGFxTrPage::ShowReticule ( int Index )
{
	static UFunction* pFnShowReticule = NULL;

	if ( ! pFnShowReticule )
		pFnShowReticule = (UFunction*) UObject::GObjObjects()->Data[ 56570 ];

	UGFxTrPage_execShowReticule_Parms ShowReticule_Parms;
	ShowReticule_Parms.Index = Index;

	this->ProcessEvent ( pFnShowReticule, &ShowReticule_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ResetRunaway
// [0x00020002] 
// Parameters infos:

void UGFxTrPage::ResetRunaway ( )
{
	static UFunction* pFnResetRunaway = NULL;

	if ( ! pFnResetRunaway )
		pFnResetRunaway = (UFunction*) UObject::GObjObjects()->Data[ 56568 ];

	UGFxTrPage_execResetRunaway_Parms ResetRunaway_Parms;

	this->ProcessEvent ( pFnResetRunaway, &ResetRunaway_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ProfileDown
// [0x00020000] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage::ProfileDown ( int ActionIndex )
{
	static UFunction* pFnProfileDown = NULL;

	if ( ! pFnProfileDown )
		pFnProfileDown = (UFunction*) UObject::GObjObjects()->Data[ 56566 ];

	UGFxTrPage_execProfileDown_Parms ProfileDown_Parms;
	ProfileDown_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileDown, &ProfileDown_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ProfileUp
// [0x00020000] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage::ProfileUp ( int ActionIndex )
{
	static UFunction* pFnProfileUp = NULL;

	if ( ! pFnProfileUp )
		pFnProfileUp = (UFunction*) UObject::GObjObjects()->Data[ 56564 ];

	UGFxTrPage_execProfileUp_Parms ProfileUp_Parms;
	ProfileUp_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileUp, &ProfileUp_Parms, NULL );
};

// Function TribesGame.GFxTrPage.UpdateQueueTimer
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::UpdateQueueTimer ( )
{
	static UFunction* pFnUpdateQueueTimer = NULL;

	if ( ! pFnUpdateQueueTimer )
		pFnUpdateQueueTimer = (UFunction*) UObject::GObjObjects()->Data[ 56563 ];

	UGFxTrPage_execUpdateQueueTimer_Parms UpdateQueueTimer_Parms;

	this->ProcessEvent ( pFnUpdateQueueTimer, &UpdateQueueTimer_Parms, NULL );
};

// Function TribesGame.GFxTrPage.UpdateDealTimer
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::UpdateDealTimer ( )
{
	static UFunction* pFnUpdateDealTimer = NULL;

	if ( ! pFnUpdateDealTimer )
		pFnUpdateDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 56562 ];

	UGFxTrPage_execUpdateDealTimer_Parms UpdateDealTimer_Parms;

	this->ProcessEvent ( pFnUpdateDealTimer, &UpdateDealTimer_Parms, NULL );
};

// Function TribesGame.GFxTrPage.KeyEvent
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::KeyEvent ( )
{
	static UFunction* pFnKeyEvent = NULL;

	if ( ! pFnKeyEvent )
		pFnKeyEvent = (UFunction*) UObject::GObjObjects()->Data[ 56561 ];

	UGFxTrPage_execKeyEvent_Parms KeyEvent_Parms;

	this->ProcessEvent ( pFnKeyEvent, &KeyEvent_Parms, NULL );
};

// Function TribesGame.GFxTrPage.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 56557 ];

	UGFxTrPage_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ActionDown
// [0x00020002] 
// Parameters infos:

void UGFxTrPage::ActionDown ( )
{
	static UFunction* pFnActionDown = NULL;

	if ( ! pFnActionDown )
		pFnActionDown = (UFunction*) UObject::GObjObjects()->Data[ 56556 ];

	UGFxTrPage_execActionDown_Parms ActionDown_Parms;

	this->ProcessEvent ( pFnActionDown, &ActionDown_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ActionUp
// [0x00020002] 
// Parameters infos:

void UGFxTrPage::ActionUp ( )
{
	static UFunction* pFnActionUp = NULL;

	if ( ! pFnActionUp )
		pFnActionUp = (UFunction*) UObject::GObjObjects()->Data[ 56555 ];

	UGFxTrPage_execActionUp_Parms ActionUp_Parms;

	this->ProcessEvent ( pFnActionUp, &ActionUp_Parms, NULL );
};

// Function TribesGame.GFxTrPage.OnPurchaseSuccess
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::OnPurchaseSuccess ( )
{
	static UFunction* pFnOnPurchaseSuccess = NULL;

	if ( ! pFnOnPurchaseSuccess )
		pFnOnPurchaseSuccess = (UFunction*) UObject::GObjObjects()->Data[ 56554 ];

	UGFxTrPage_execOnPurchaseSuccess_Parms OnPurchaseSuccess_Parms;

	this->ProcessEvent ( pFnOnPurchaseSuccess, &OnPurchaseSuccess_Parms, NULL );
};

// Function TribesGame.GFxTrPage.RevertSetting
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::RevertSetting ( )
{
	static UFunction* pFnRevertSetting = NULL;

	if ( ! pFnRevertSetting )
		pFnRevertSetting = (UFunction*) UObject::GObjObjects()->Data[ 56553 ];

	UGFxTrPage_execRevertSetting_Parms RevertSetting_Parms;

	this->ProcessEvent ( pFnRevertSetting, &RevertSetting_Parms, NULL );
};

// Function TribesGame.GFxTrPage.NewEquipUpgrade
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )

bool UGFxTrPage::NewEquipUpgrade ( int EquipId )
{
	static UFunction* pFnNewEquipUpgrade = NULL;

	if ( ! pFnNewEquipUpgrade )
		pFnNewEquipUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 56550 ];

	UGFxTrPage_execNewEquipUpgrade_Parms NewEquipUpgrade_Parms;
	NewEquipUpgrade_Parms.EquipId = EquipId;

	this->ProcessEvent ( pFnNewEquipUpgrade, &NewEquipUpgrade_Parms, NULL );

	return NewEquipUpgrade_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.NewClassUpgrade
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

bool UGFxTrPage::NewClassUpgrade ( int ClassId )
{
	static UFunction* pFnNewClassUpgrade = NULL;

	if ( ! pFnNewClassUpgrade )
		pFnNewClassUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 56547 ];

	UGFxTrPage_execNewClassUpgrade_Parms NewClassUpgrade_Parms;
	NewClassUpgrade_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnNewClassUpgrade, &NewClassUpgrade_Parms, NULL );

	return NewClassUpgrade_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.NewClassEquip
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

bool UGFxTrPage::NewClassEquip ( int ClassId )
{
	static UFunction* pFnNewClassEquip = NULL;

	if ( ! pFnNewClassEquip )
		pFnNewClassEquip = (UFunction*) UObject::GObjObjects()->Data[ 56544 ];

	UGFxTrPage_execNewClassEquip_Parms NewClassEquip_Parms;
	NewClassEquip_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnNewClassEquip, &NewClassEquip_Parms, NULL );

	return NewClassEquip_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillEquipTypes
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillEquipTypes ( int EquipId, int ActionIndex )
{
	static UFunction* pFnFillEquipTypes = NULL;

	if ( ! pFnFillEquipTypes )
		pFnFillEquipTypes = (UFunction*) UObject::GObjObjects()->Data[ 56533 ];

	UGFxTrPage_execFillEquipTypes_Parms FillEquipTypes_Parms;
	FillEquipTypes_Parms.EquipId = EquipId;
	FillEquipTypes_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillEquipTypes, &FillEquipTypes_Parms, NULL );

	return FillEquipTypes_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillClass
// [0x00024002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            ActionIndex                    ( CPF_Parm )
// unsigned long                  bShowActive                    ( CPF_OptionalParm | CPF_Parm )

class UGFxObject* UGFxTrPage::FillClass ( int ClassId, int ActionIndex, unsigned long bShowActive )
{
	static UFunction* pFnFillClass = NULL;

	if ( ! pFnFillClass )
		pFnFillClass = (UFunction*) UObject::GObjObjects()->Data[ 56486 ];

	UGFxTrPage_execFillClass_Parms FillClass_Parms;
	FillClass_Parms.ClassId = ClassId;
	FillClass_Parms.ActionIndex = ActionIndex;
	FillClass_Parms.bShowActive = bShowActive;

	this->ProcessEvent ( pFnFillClass, &FillClass_Parms, NULL );

	return FillClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.ShowModel
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 56485 ];

	UGFxTrPage_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ClearActions
// [0x00020002] 
// Parameters infos:

void UGFxTrPage::ClearActions ( )
{
	static UFunction* pFnClearActions = NULL;

	if ( ! pFnClearActions )
		pFnClearActions = (UFunction*) UObject::GObjObjects()->Data[ 56483 ];

	UGFxTrPage_execClearActions_Parms ClearActions_Parms;

	this->ProcessEvent ( pFnClearActions, &ClearActions_Parms, NULL );
};

// Function TribesGame.GFxTrPage.FillPage
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage::FillPage ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPage = NULL;

	if ( ! pFnFillPage )
		pFnFillPage = (UFunction*) UObject::GObjObjects()->Data[ 56481 ];

	UGFxTrPage_execFillPage_Parms FillPage_Parms;
	FillPage_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPage, &FillPage_Parms, NULL );
};

// Function TribesGame.GFxTrPage.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 56478 ];

	UGFxTrPage_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 56474 ];

	UGFxTrPage_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage.FillPricing
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 56471 ];

	UGFxTrPage_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillUpgrades
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillUpgrades ( class UGFxObject* DataList )
{
	static UFunction* pFnFillUpgrades = NULL;

	if ( ! pFnFillUpgrades )
		pFnFillUpgrades = (UFunction*) UObject::GObjObjects()->Data[ 56468 ];

	UGFxTrPage_execFillUpgrades_Parms FillUpgrades_Parms;
	FillUpgrades_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillUpgrades, &FillUpgrades_Parms, NULL );

	return FillUpgrades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 56465 ];

	UGFxTrPage_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.CheckUpgrades
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage::CheckUpgrades ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckUpgrades = NULL;

	if ( ! pFnCheckUpgrades )
		pFnCheckUpgrades = (UFunction*) UObject::GObjObjects()->Data[ 56462 ];

	UGFxTrPage_execCheckUpgrades_Parms CheckUpgrades_Parms;
	CheckUpgrades_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckUpgrades, &CheckUpgrades_Parms, NULL );

	return CheckUpgrades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillDefault
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage::FillDefault ( )
{
	static UFunction* pFnFillDefault = NULL;

	if ( ! pFnFillDefault )
		pFnFillDefault = (UFunction*) UObject::GObjObjects()->Data[ 56459 ];

	UGFxTrPage_execFillDefault_Parms FillDefault_Parms;

	this->ProcessEvent ( pFnFillDefault, &FillDefault_Parms, NULL );

	return FillDefault_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 56455 ];

	UGFxTrPage_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.IsEquipMaxed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage::IsEquipMaxed ( int Index )
{
	static UFunction* pFnIsEquipMaxed = NULL;

	if ( ! pFnIsEquipMaxed )
		pFnIsEquipMaxed = (UFunction*) UObject::GObjObjects()->Data[ 56452 ];

	UGFxTrPage_execIsEquipMaxed_Parms IsEquipMaxed_Parms;
	IsEquipMaxed_Parms.Index = Index;

	this->ProcessEvent ( pFnIsEquipMaxed, &IsEquipMaxed_Parms, NULL );

	return IsEquipMaxed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.CheckPurchasable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrPage::CheckPurchasable ( )
{
	static UFunction* pFnCheckPurchasable = NULL;

	if ( ! pFnCheckPurchasable )
		pFnCheckPurchasable = (UFunction*) UObject::GObjObjects()->Data[ 56450 ];

	UGFxTrPage_execCheckPurchasable_Parms CheckPurchasable_Parms;

	this->ProcessEvent ( pFnCheckPurchasable, &CheckPurchasable_Parms, NULL );

	return CheckPurchasable_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.IsOwned
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage::IsOwned ( int Index )
{
	static UFunction* pFnIsOwned = NULL;

	if ( ! pFnIsOwned )
		pFnIsOwned = (UFunction*) UObject::GObjObjects()->Data[ 56447 ];

	UGFxTrPage_execIsOwned_Parms IsOwned_Parms;
	IsOwned_Parms.Index = Index;

	this->ProcessEvent ( pFnIsOwned, &IsOwned_Parms, NULL );

	return IsOwned_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillOptions
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage::FillOptions ( class UGFxObject* DataList )
{
	static UFunction* pFnFillOptions = NULL;

	if ( ! pFnFillOptions )
		pFnFillOptions = (UFunction*) UObject::GObjObjects()->Data[ 56441 ];

	UGFxTrPage_execFillOptions_Parms FillOptions_Parms;
	FillOptions_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillOptions, &FillOptions_Parms, NULL );

	return FillOptions_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 56437 ];

	UGFxTrPage_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage.PopupComplete
// [0x00020000] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 56434 ];

	UGFxTrPage_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage.PopupData
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 56432 ];

	UGFxTrPage_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage.SpecialAction
// [0x00020000] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 56430 ];

	UGFxTrPage_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage.HelpButton
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage::HelpButton ( int ActionIndex )
{
	static UFunction* pFnHelpButton = NULL;

	if ( ! pFnHelpButton )
		pFnHelpButton = (UFunction*) UObject::GObjObjects()->Data[ 56427 ];

	UGFxTrPage_execHelpButton_Parms HelpButton_Parms;
	HelpButton_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnHelpButton, &HelpButton_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ModifyFocus
// [0x00020000] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage::ModifyFocus ( int ActionIndex )
{
	static UFunction* pFnModifyFocus = NULL;

	if ( ! pFnModifyFocus )
		pFnModifyFocus = (UFunction*) UObject::GObjObjects()->Data[ 56425 ];

	UGFxTrPage_execModifyFocus_Parms ModifyFocus_Parms;
	ModifyFocus_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnModifyFocus, &ModifyFocus_Parms, NULL );
};

// Function TribesGame.GFxTrPage.ModifyAction
// [0x00020000] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 56421 ];

	UGFxTrPage_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 56415 ];

	UGFxTrPage_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 56410 ];

	UGFxTrPage_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.AddActionSet
// [0x00024002] 
// Parameters infos:
// class UGFxTrAction*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxTrPage*              ActionPage                     ( CPF_Parm )
// int                            ActionNumber                   ( CPF_OptionalParm | CPF_Parm )
// struct FString                 ActionString                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

class UGFxTrAction* UGFxTrPage::AddActionSet ( class UGFxTrPage* ActionPage, int ActionNumber, struct FString ActionString )
{
	static UFunction* pFnAddActionSet = NULL;

	if ( ! pFnAddActionSet )
		pFnAddActionSet = (UFunction*) UObject::GObjObjects()->Data[ 56404 ];

	UGFxTrPage_execAddActionSet_Parms AddActionSet_Parms;
	AddActionSet_Parms.ActionPage = ActionPage;
	AddActionSet_Parms.ActionNumber = ActionNumber;
	memcpy ( &AddActionSet_Parms.ActionString, &ActionString, 0xC );

	this->ProcessEvent ( pFnAddActionSet, &AddActionSet_Parms, NULL );

	return AddActionSet_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.AddActionPage
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxTrPage*              ActionPage                     ( CPF_Parm )

class UGFxTrAction* UGFxTrPage::AddActionPage ( class UGFxTrPage* ActionPage )
{
	static UFunction* pFnAddActionPage = NULL;

	if ( ! pFnAddActionPage )
		pFnAddActionPage = (UFunction*) UObject::GObjObjects()->Data[ 56400 ];

	UGFxTrPage_execAddActionPage_Parms AddActionPage_Parms;
	AddActionPage_Parms.ActionPage = ActionPage;

	this->ProcessEvent ( pFnAddActionPage, &AddActionPage_Parms, NULL );

	return AddActionPage_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.AddActionString
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ActionString                   ( CPF_Parm | CPF_NeedCtorLink )

class UGFxTrAction* UGFxTrPage::AddActionString ( struct FString ActionString )
{
	static UFunction* pFnAddActionString = NULL;

	if ( ! pFnAddActionString )
		pFnAddActionString = (UFunction*) UObject::GObjObjects()->Data[ 56396 ];

	UGFxTrPage_execAddActionString_Parms AddActionString_Parms;
	memcpy ( &AddActionString_Parms.ActionString, &ActionString, 0xC );

	this->ProcessEvent ( pFnAddActionString, &AddActionString_Parms, NULL );

	return AddActionString_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.AddActionNumber
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionNumber                   ( CPF_Parm )

class UGFxTrAction* UGFxTrPage::AddActionNumber ( int ActionNumber )
{
	static UFunction* pFnAddActionNumber = NULL;

	if ( ! pFnAddActionNumber )
		pFnAddActionNumber = (UFunction*) UObject::GObjObjects()->Data[ 56392 ];

	UGFxTrPage_execAddActionNumber_Parms AddActionNumber_Parms;
	AddActionNumber_Parms.ActionNumber = ActionNumber;

	this->ProcessEvent ( pFnAddActionNumber, &AddActionNumber_Parms, NULL );

	return AddActionNumber_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.AddAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxTrAction* UGFxTrPage::AddAction ( )
{
	static UFunction* pFnAddAction = NULL;

	if ( ! pFnAddAction )
		pFnAddAction = (UFunction*) UObject::GObjObjects()->Data[ 56389 ];

	UGFxTrPage_execAddAction_Parms AddAction_Parms;

	this->ProcessEvent ( pFnAddAction, &AddAction_Parms, NULL );

	return AddAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 56388 ];

	UGFxTrPage_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrDevices.Update
// [0x00020002] 
// Parameters infos:

void UGFxTrDevices::Update ( )
{
	static UFunction* pFnUpdate = NULL;

	if ( ! pFnUpdate )
		pFnUpdate = (UFunction*) UObject::GObjObjects()->Data[ 50766 ];

	UGFxTrDevices_execUpdate_Parms Update_Parms;

	this->ProcessEvent ( pFnUpdate, &Update_Parms, NULL );
};

// Function TribesGame.GFxTrDevices.UpdateData
// [0x00020002] 
// Parameters infos:

void UGFxTrDevices::UpdateData ( )
{
	static UFunction* pFnUpdateData = NULL;

	if ( ! pFnUpdateData )
		pFnUpdateData = (UFunction*) UObject::GObjObjects()->Data[ 50765 ];

	UGFxTrDevices_execUpdateData_Parms UpdateData_Parms;

	this->ProcessEvent ( pFnUpdateData, &UpdateData_Parms, NULL );
};

// Function TribesGame.GFxTrDevices.GetAmmonPool
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrDevices::GetAmmonPool ( )
{
	static UFunction* pFnGetAmmonPool = NULL;

	if ( ! pFnGetAmmonPool )
		pFnGetAmmonPool = (UFunction*) UObject::GObjObjects()->Data[ 50763 ];

	UGFxTrDevices_execGetAmmonPool_Parms GetAmmonPool_Parms;

	this->ProcessEvent ( pFnGetAmmonPool, &GetAmmonPool_Parms, NULL );

	return GetAmmonPool_Parms.ReturnValue;
};

// Function TribesGame.GFxTrDevices.GetAmmonClip
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrDevices::GetAmmonClip ( )
{
	static UFunction* pFnGetAmmonClip = NULL;

	if ( ! pFnGetAmmonClip )
		pFnGetAmmonClip = (UFunction*) UObject::GObjObjects()->Data[ 50761 ];

	UGFxTrDevices_execGetAmmonClip_Parms GetAmmonClip_Parms;

	this->ProcessEvent ( pFnGetAmmonClip, &GetAmmonClip_Parms, NULL );

	return GetAmmonClip_Parms.ReturnValue;
};

// Function TribesGame.GFxTrDevices.Init
// [0x00020002] 
// Parameters infos:
// class UGFxMinimapHud*          H                              ( CPF_Parm )

void UGFxTrDevices::Init ( class UGFxMinimapHud* H )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 50759 ];

	UGFxTrDevices_execInit_Parms Init_Parms;
	Init_Parms.H = H;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrVGSCommandList.GetContextLocationString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  Loc                            ( CPF_Parm )
// unsigned long                  bEnemyLocation                 ( CPF_Parm )

struct FString UTrVGSCommandList::GetContextLocationString ( unsigned char Loc, unsigned long bEnemyLocation )
{
	static UFunction* pFnGetContextLocationString = NULL;

	if ( ! pFnGetContextLocationString )
		pFnGetContextLocationString = (UFunction*) UObject::GObjObjects()->Data[ 51119 ];

	UTrVGSCommandList_execGetContextLocationString_Parms GetContextLocationString_Parms;
	GetContextLocationString_Parms.Loc = Loc;
	GetContextLocationString_Parms.bEnemyLocation = bEnemyLocation;

	this->ProcessEvent ( pFnGetContextLocationString, &GetContextLocationString_Parms, NULL );

	return GetContextLocationString_Parms.ReturnValue;
};

// Function TribesGame.TrVGSCommandList.Init
// [0x00020102] 
// Parameters infos:

void UTrVGSCommandList::Init ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 51118 ];

	UTrVGSCommandList_execInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSoundAccoladeDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSoundAccoladeDelegate ( struct FScriptDelegate InDelegate )
{
	static UFunction* pFnSetSoundAccoladeDelegate = NULL;

	if ( ! pFnSetSoundAccoladeDelegate )
		pFnSetSoundAccoladeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53262 ];

	UGfxTrHud_execSetSoundAccoladeDelegate_Parms SetSoundAccoladeDelegate_Parms;
	memcpy ( &SetSoundAccoladeDelegate_Parms.InDelegate, &InDelegate, 0xC );

	this->ProcessEvent ( pFnSetSoundAccoladeDelegate, &SetSoundAccoladeDelegate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetLoadVGSMenuDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetLoadVGSMenuDelegate ( struct FScriptDelegate InDelegate )
{
	static UFunction* pFnSetLoadVGSMenuDelegate = NULL;

	if ( ! pFnSetLoadVGSMenuDelegate )
		pFnSetLoadVGSMenuDelegate = (UFunction*) UObject::GObjObjects()->Data[ 53261 ];

	UGfxTrHud_execSetLoadVGSMenuDelegate_Parms SetLoadVGSMenuDelegate_Parms;
	memcpy ( &SetLoadVGSMenuDelegate_Parms.InDelegate, &InDelegate, 0xC );

	this->ProcessEvent ( pFnSetLoadVGSMenuDelegate, &SetLoadVGSMenuDelegate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddFlyingIcon
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            iconNumber                     ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Points                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            bIsBadge                       ( CPF_Parm )

void UGfxTrHud::AddFlyingIcon ( int iconNumber, struct FString Description, struct FString Points, int bIsBadge )
{
	static UFunction* pFnAddFlyingIcon = NULL;

	if ( ! pFnAddFlyingIcon )
		pFnAddFlyingIcon = (UFunction*) UObject::GObjObjects()->Data[ 53969 ];

	UGfxTrHud_execAddFlyingIcon_Parms AddFlyingIcon_Parms;
	AddFlyingIcon_Parms.iconNumber = iconNumber;
	memcpy ( &AddFlyingIcon_Parms.Description, &Description, 0xC );
	memcpy ( &AddFlyingIcon_Parms.Points, &Points, 0xC );
	AddFlyingIcon_Parms.bIsBadge = bIsBadge;

	this->ProcessEvent ( pFnAddFlyingIcon, &AddFlyingIcon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetFontIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            FontIdx                        ( CPF_Parm )

void UGfxTrHud::SetFontIndex ( int FontIdx )
{
	static UFunction* pFnSetFontIndex = NULL;

	if ( ! pFnSetFontIndex )
		pFnSetFontIndex = (UFunction*) UObject::GObjObjects()->Data[ 53267 ];

	UGfxTrHud_execSetFontIndex_Parms SetFontIndex_Parms;
	SetFontIndex_Parms.FontIdx = FontIdx;

	this->ProcessEvent ( pFnSetFontIndex, &SetFontIndex_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideSpectatorFloatCameraPanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideSpectatorFloatCameraPanel ( )
{
	static UFunction* pFnHideSpectatorFloatCameraPanel = NULL;

	if ( ! pFnHideSpectatorFloatCameraPanel )
		pFnHideSpectatorFloatCameraPanel = (UFunction*) UObject::GObjObjects()->Data[ 53967 ];

	UGfxTrHud_execHideSpectatorFloatCameraPanel_Parms HideSpectatorFloatCameraPanel_Parms;

	this->ProcessEvent ( pFnHideSpectatorFloatCameraPanel, &HideSpectatorFloatCameraPanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorFloatCameraPanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowSpectatorFloatCameraPanel ( )
{
	static UFunction* pFnShowSpectatorFloatCameraPanel = NULL;

	if ( ! pFnShowSpectatorFloatCameraPanel )
		pFnShowSpectatorFloatCameraPanel = (UFunction*) UObject::GObjObjects()->Data[ 53966 ];

	UGfxTrHud_execShowSpectatorFloatCameraPanel_Parms ShowSpectatorFloatCameraPanel_Parms;

	this->ProcessEvent ( pFnShowSpectatorFloatCameraPanel, &ShowSpectatorFloatCameraPanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideSpectatorObjectivePanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideSpectatorObjectivePanel ( )
{
	static UFunction* pFnHideSpectatorObjectivePanel = NULL;

	if ( ! pFnHideSpectatorObjectivePanel )
		pFnHideSpectatorObjectivePanel = (UFunction*) UObject::GObjObjects()->Data[ 53965 ];

	UGfxTrHud_execHideSpectatorObjectivePanel_Parms HideSpectatorObjectivePanel_Parms;

	this->ProcessEvent ( pFnHideSpectatorObjectivePanel, &HideSpectatorObjectivePanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorObjectivePanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowSpectatorObjectivePanel ( )
{
	static UFunction* pFnShowSpectatorObjectivePanel = NULL;

	if ( ! pFnShowSpectatorObjectivePanel )
		pFnShowSpectatorObjectivePanel = (UFunction*) UObject::GObjObjects()->Data[ 53964 ];

	UGfxTrHud_execShowSpectatorObjectivePanel_Parms ShowSpectatorObjectivePanel_Parms;

	this->ProcessEvent ( pFnShowSpectatorObjectivePanel, &ShowSpectatorObjectivePanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideSpectatorBookmark
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideSpectatorBookmark ( )
{
	static UFunction* pFnHideSpectatorBookmark = NULL;

	if ( ! pFnHideSpectatorBookmark )
		pFnHideSpectatorBookmark = (UFunction*) UObject::GObjObjects()->Data[ 53963 ];

	UGfxTrHud_execHideSpectatorBookmark_Parms HideSpectatorBookmark_Parms;

	this->ProcessEvent ( pFnHideSpectatorBookmark, &HideSpectatorBookmark_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorBookmark
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowSpectatorBookmark ( )
{
	static UFunction* pFnShowSpectatorBookmark = NULL;

	if ( ! pFnShowSpectatorBookmark )
		pFnShowSpectatorBookmark = (UFunction*) UObject::GObjObjects()->Data[ 53962 ];

	UGfxTrHud_execShowSpectatorBookmark_Parms ShowSpectatorBookmark_Parms;

	this->ProcessEvent ( pFnShowSpectatorBookmark, &ShowSpectatorBookmark_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideSpectatorVehicle
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideSpectatorVehicle ( )
{
	static UFunction* pFnHideSpectatorVehicle = NULL;

	if ( ! pFnHideSpectatorVehicle )
		pFnHideSpectatorVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53961 ];

	UGfxTrHud_execHideSpectatorVehicle_Parms HideSpectatorVehicle_Parms;

	this->ProcessEvent ( pFnHideSpectatorVehicle, &HideSpectatorVehicle_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorVehicle
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowSpectatorVehicle ( )
{
	static UFunction* pFnShowSpectatorVehicle = NULL;

	if ( ! pFnShowSpectatorVehicle )
		pFnShowSpectatorVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53960 ];

	UGfxTrHud_execShowSpectatorVehicle_Parms ShowSpectatorVehicle_Parms;

	this->ProcessEvent ( pFnShowSpectatorVehicle, &ShowSpectatorVehicle_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideSpectatorPlayer
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideSpectatorPlayer ( )
{
	static UFunction* pFnHideSpectatorPlayer = NULL;

	if ( ! pFnHideSpectatorPlayer )
		pFnHideSpectatorPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53959 ];

	UGfxTrHud_execHideSpectatorPlayer_Parms HideSpectatorPlayer_Parms;

	this->ProcessEvent ( pFnHideSpectatorPlayer, &HideSpectatorPlayer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorPlayer
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowSpectatorPlayer ( )
{
	static UFunction* pFnShowSpectatorPlayer = NULL;

	if ( ! pFnShowSpectatorPlayer )
		pFnShowSpectatorPlayer = (UFunction*) UObject::GObjObjects()->Data[ 53958 ];

	UGfxTrHud_execShowSpectatorPlayer_Parms ShowSpectatorPlayer_Parms;

	this->ProcessEvent ( pFnShowSpectatorPlayer, &ShowSpectatorPlayer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowKillCamInfo
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UGfxTrHud::ShowKillCamInfo ( class UGFxObject* Data )
{
	static UFunction* pFnShowKillCamInfo = NULL;

	if ( ! pFnShowKillCamInfo )
		pFnShowKillCamInfo = (UFunction*) UObject::GObjObjects()->Data[ 53738 ];

	UGfxTrHud_execShowKillCamInfo_Parms ShowKillCamInfo_Parms;
	ShowKillCamInfo_Parms.Data = Data;

	this->ProcessEvent ( pFnShowKillCamInfo, &ShowKillCamInfo_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddUpdateToKillMessage
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            RankIcon                       ( CPF_Parm )
// int                            PlayerIcon                     ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::AddUpdateToKillMessage ( int RankIcon, int PlayerIcon, struct FString PlayerName, struct FString Message )
{
	static UFunction* pFnAddUpdateToKillMessage = NULL;

	if ( ! pFnAddUpdateToKillMessage )
		pFnAddUpdateToKillMessage = (UFunction*) UObject::GObjObjects()->Data[ 53952 ];

	UGfxTrHud_execAddUpdateToKillMessage_Parms AddUpdateToKillMessage_Parms;
	AddUpdateToKillMessage_Parms.RankIcon = RankIcon;
	AddUpdateToKillMessage_Parms.PlayerIcon = PlayerIcon;
	memcpy ( &AddUpdateToKillMessage_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &AddUpdateToKillMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnAddUpdateToKillMessage, &AddUpdateToKillMessage_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddUpdateToCombatLog
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            CombatType                     ( CPF_Parm )
// struct FString                 Aggressor                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            WeaponIcon                     ( CPF_Parm )
// struct FString                 Victim                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::AddUpdateToCombatLog ( int CombatType, struct FString Aggressor, int WeaponIcon, struct FString Victim )
{
	static UFunction* pFnAddUpdateToCombatLog = NULL;

	if ( ! pFnAddUpdateToCombatLog )
		pFnAddUpdateToCombatLog = (UFunction*) UObject::GObjObjects()->Data[ 53947 ];

	UGfxTrHud_execAddUpdateToCombatLog_Parms AddUpdateToCombatLog_Parms;
	AddUpdateToCombatLog_Parms.CombatType = CombatType;
	memcpy ( &AddUpdateToCombatLog_Parms.Aggressor, &Aggressor, 0xC );
	AddUpdateToCombatLog_Parms.WeaponIcon = WeaponIcon;
	memcpy ( &AddUpdateToCombatLog_Parms.Victim, &Victim, 0xC );

	this->ProcessEvent ( pFnAddUpdateToCombatLog, &AddUpdateToCombatLog_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateTutorial
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Body                           ( CPF_Parm | CPF_NeedCtorLink )
// float                          Icon                           ( CPF_Parm )
// struct FString                 footer                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Suppress                       ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::UpdateTutorial ( struct FString Title, struct FString Body, float Icon, struct FString footer, struct FString Suppress )
{
	static UFunction* pFnUpdateTutorial = NULL;

	if ( ! pFnUpdateTutorial )
		pFnUpdateTutorial = (UFunction*) UObject::GObjObjects()->Data[ 53941 ];

	UGfxTrHud_execUpdateTutorial_Parms UpdateTutorial_Parms;
	memcpy ( &UpdateTutorial_Parms.Title, &Title, 0xC );
	memcpy ( &UpdateTutorial_Parms.Body, &Body, 0xC );
	UpdateTutorial_Parms.Icon = Icon;
	memcpy ( &UpdateTutorial_Parms.footer, &footer, 0xC );
	memcpy ( &UpdateTutorial_Parms.Suppress, &Suppress, 0xC );

	this->ProcessEvent ( pFnUpdateTutorial, &UpdateTutorial_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetHUDStageSize
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            HUDOriginX                     ( CPF_Parm )
// int                            HUDOriginY                     ( CPF_Parm )
// int                            Width                          ( CPF_Parm )
// int                            Height                         ( CPF_Parm )

void UGfxTrHud::SetHUDStageSize ( int HUDOriginX, int HUDOriginY, int Width, int Height )
{
	static UFunction* pFnSetHUDStageSize = NULL;

	if ( ! pFnSetHUDStageSize )
		pFnSetHUDStageSize = (UFunction*) UObject::GObjObjects()->Data[ 53381 ];

	UGfxTrHud_execSetHUDStageSize_Parms SetHUDStageSize_Parms;
	SetHUDStageSize_Parms.HUDOriginX = HUDOriginX;
	SetHUDStageSize_Parms.HUDOriginY = HUDOriginY;
	SetHUDStageSize_Parms.Width = Width;
	SetHUDStageSize_Parms.Height = Height;

	this->ProcessEvent ( pFnSetHUDStageSize, &SetHUDStageSize_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamScoreboardUpdateTeamScore
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::TeamScoreboardUpdateTeamScore ( int Index, int Score )
{
	static UFunction* pFnTeamScoreboardUpdateTeamScore = NULL;

	if ( ! pFnTeamScoreboardUpdateTeamScore )
		pFnTeamScoreboardUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 53934 ];

	UGfxTrHud_execTeamScoreboardUpdateTeamScore_Parms TeamScoreboardUpdateTeamScore_Parms;
	TeamScoreboardUpdateTeamScore_Parms.Index = Index;
	TeamScoreboardUpdateTeamScore_Parms.Score = Score;

	this->ProcessEvent ( pFnTeamScoreboardUpdateTeamScore, &TeamScoreboardUpdateTeamScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitScoreboardUpdateTime
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::RabbitScoreboardUpdateTime ( struct FString Time )
{
	static UFunction* pFnRabbitScoreboardUpdateTime = NULL;

	if ( ! pFnRabbitScoreboardUpdateTime )
		pFnRabbitScoreboardUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53932 ];

	UGfxTrHud_execRabbitScoreboardUpdateTime_Parms RabbitScoreboardUpdateTime_Parms;
	memcpy ( &RabbitScoreboardUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnRabbitScoreboardUpdateTime, &RabbitScoreboardUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamScoreboardUpdateTime
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamScoreboardUpdateTime ( struct FString Time )
{
	static UFunction* pFnTeamScoreboardUpdateTime = NULL;

	if ( ! pFnTeamScoreboardUpdateTime )
		pFnTeamScoreboardUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53930 ];

	UGfxTrHud_execTeamScoreboardUpdateTime_Parms TeamScoreboardUpdateTime_Parms;
	memcpy ( &TeamScoreboardUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamScoreboardUpdateTime, &TeamScoreboardUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamScoreboardActivePlayer
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UGfxTrHud::TeamScoreboardActivePlayer ( int Index )
{
	static UFunction* pFnTeamScoreboardActivePlayer = NULL;

	if ( ! pFnTeamScoreboardActivePlayer )
		pFnTeamScoreboardActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 53928 ];

	UGfxTrHud_execTeamScoreboardActivePlayer_Parms TeamScoreboardActivePlayer_Parms;
	TeamScoreboardActivePlayer_Parms.Index = Index;

	this->ProcessEvent ( pFnTeamScoreboardActivePlayer, &TeamScoreboardActivePlayer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RemoveFromPromptPanel
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::RemoveFromPromptPanel ( struct FString Message )
{
	static UFunction* pFnRemoveFromPromptPanel = NULL;

	if ( ! pFnRemoveFromPromptPanel )
		pFnRemoveFromPromptPanel = (UFunction*) UObject::GObjObjects()->Data[ 53271 ];

	UGfxTrHud_execRemoveFromPromptPanel_Parms RemoveFromPromptPanel_Parms;
	memcpy ( &RemoveFromPromptPanel_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnRemoveFromPromptPanel, &RemoveFromPromptPanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddtoPromptPanelAS
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::AddtoPromptPanelAS ( struct FString Message )
{
	static UFunction* pFnAddtoPromptPanelAS = NULL;

	if ( ! pFnAddtoPromptPanelAS )
		pFnAddtoPromptPanelAS = (UFunction*) UObject::GObjObjects()->Data[ 53320 ];

	UGfxTrHud_execAddtoPromptPanelAS_Parms AddtoPromptPanelAS_Parms;
	memcpy ( &AddtoPromptPanelAS_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnAddtoPromptPanelAS, &AddtoPromptPanelAS_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateChatLogInput
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::UpdateChatLogInput ( struct FString Message )
{
	static UFunction* pFnUpdateChatLogInput = NULL;

	if ( ! pFnUpdateChatLogInput )
		pFnUpdateChatLogInput = (UFunction*) UObject::GObjObjects()->Data[ 53924 ];

	UGfxTrHud_execUpdateChatLogInput_Parms UpdateChatLogInput_Parms;
	memcpy ( &UpdateChatLogInput_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnUpdateChatLogInput, &UpdateChatLogInput_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetPowerOscillation
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UGfxTrHud::SetPowerOscillation ( unsigned long bEnable )
{
	static UFunction* pFnSetPowerOscillation = NULL;

	if ( ! pFnSetPowerOscillation )
		pFnSetPowerOscillation = (UFunction*) UObject::GObjObjects()->Data[ 53922 ];

	UGfxTrHud_execSetPowerOscillation_Parms SetPowerOscillation_Parms;
	SetPowerOscillation_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnSetPowerOscillation, &SetPowerOscillation_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateChatLog
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// int                            ChannelColor                   ( CPF_Parm )
// unsigned long                  bPublic                        ( CPF_Parm )

void UGfxTrHud::UpdateChatLog ( struct FString Message, int ChannelColor, unsigned long bPublic )
{
	static UFunction* pFnUpdateChatLog = NULL;

	if ( ! pFnUpdateChatLog )
		pFnUpdateChatLog = (UFunction*) UObject::GObjObjects()->Data[ 53918 ];

	UGfxTrHud_execUpdateChatLog_Parms UpdateChatLog_Parms;
	memcpy ( &UpdateChatLog_Parms.Message, &Message, 0xC );
	UpdateChatLog_Parms.ChannelColor = ChannelColor;
	UpdateChatLog_Parms.bPublic = bPublic;

	this->ProcessEvent ( pFnUpdateChatLog, &UpdateChatLog_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASSetHeading
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Heading                        ( CPF_Parm )

void UGfxTrHud::ASSetHeading ( int Heading )
{
	static UFunction* pFnASSetHeading = NULL;

	if ( ! pFnASSetHeading )
		pFnASSetHeading = (UFunction*) UObject::GObjObjects()->Data[ 53425 ];

	UGfxTrHud_execASSetHeading_Parms ASSetHeading_Parms;
	ASSetHeading_Parms.Heading = Heading;

	this->ProcessEvent ( pFnASSetHeading, &ASSetHeading_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowEnding
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Winner                         ( CPF_Parm )

void UGfxTrHud::ShowEnding ( int Winner )
{
	static UFunction* pFnShowEnding = NULL;

	if ( ! pFnShowEnding )
		pFnShowEnding = (UFunction*) UObject::GObjObjects()->Data[ 53915 ];

	UGfxTrHud_execShowEnding_Parms ShowEnding_Parms;
	ShowEnding_Parms.Winner = Winner;

	this->ProcessEvent ( pFnShowEnding, &ShowEnding_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateVGSMenuList
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::UpdateVGSMenuList ( )
{
	static UFunction* pFnUpdateVGSMenuList = NULL;

	if ( ! pFnUpdateVGSMenuList )
		pFnUpdateVGSMenuList = (UFunction*) UObject::GObjObjects()->Data[ 53914 ];

	UGfxTrHud_execUpdateVGSMenuList_Parms UpdateVGSMenuList_Parms;

	this->ProcessEvent ( pFnUpdateVGSMenuList, &UpdateVGSMenuList_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideKillCamInfo
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideKillCamInfo ( )
{
	static UFunction* pFnHideKillCamInfo = NULL;

	if ( ! pFnHideKillCamInfo )
		pFnHideKillCamInfo = (UFunction*) UObject::GObjObjects()->Data[ 53913 ];

	UGfxTrHud_execHideKillCamInfo_Parms HideKillCamInfo_Parms;

	this->ProcessEvent ( pFnHideKillCamInfo, &HideKillCamInfo_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideFlagCarried
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideFlagCarried ( )
{
	static UFunction* pFnHideFlagCarried = NULL;

	if ( ! pFnHideFlagCarried )
		pFnHideFlagCarried = (UFunction*) UObject::GObjObjects()->Data[ 53912 ];

	UGfxTrHud_execHideFlagCarried_Parms HideFlagCarried_Parms;

	this->ProcessEvent ( pFnHideFlagCarried, &HideFlagCarried_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowFlagCarried
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowFlagCarried ( )
{
	static UFunction* pFnShowFlagCarried = NULL;

	if ( ! pFnShowFlagCarried )
		pFnShowFlagCarried = (UFunction*) UObject::GObjObjects()->Data[ 53911 ];

	UGfxTrHud_execShowFlagCarried_Parms ShowFlagCarried_Parms;

	this->ProcessEvent ( pFnShowFlagCarried, &ShowFlagCarried_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideTutorial
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideTutorial ( )
{
	static UFunction* pFnHideTutorial = NULL;

	if ( ! pFnHideTutorial )
		pFnHideTutorial = (UFunction*) UObject::GObjObjects()->Data[ 53910 ];

	UGfxTrHud_execHideTutorial_Parms HideTutorial_Parms;

	this->ProcessEvent ( pFnHideTutorial, &HideTutorial_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideVGSMenu
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideVGSMenu ( )
{
	static UFunction* pFnHideVGSMenu = NULL;

	if ( ! pFnHideVGSMenu )
		pFnHideVGSMenu = (UFunction*) UObject::GObjObjects()->Data[ 53909 ];

	UGfxTrHud_execHideVGSMenu_Parms HideVGSMenu_Parms;

	this->ProcessEvent ( pFnHideVGSMenu, &HideVGSMenu_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideChatLog
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::HideChatLog ( )
{
	static UFunction* pFnHideChatLog = NULL;

	if ( ! pFnHideChatLog )
		pFnHideChatLog = (UFunction*) UObject::GObjObjects()->Data[ 53358 ];

	UGfxTrHud_execHideChatLog_Parms HideChatLog_Parms;

	this->ProcessEvent ( pFnHideChatLog, &HideChatLog_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowChatLog
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ShowChatLog ( )
{
	static UFunction* pFnShowChatLog = NULL;

	if ( ! pFnShowChatLog )
		pFnShowChatLog = (UFunction*) UObject::GObjObjects()->Data[ 53357 ];

	UGfxTrHud_execShowChatLog_Parms ShowChatLog_Parms;

	this->ProcessEvent ( pFnShowChatLog, &ShowChatLog_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowSpectatorControls
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShowControls                  ( CPF_Parm )

void UGfxTrHud::ShowSpectatorControls ( unsigned long bShowControls )
{
	static UFunction* pFnShowSpectatorControls = NULL;

	if ( ! pFnShowSpectatorControls )
		pFnShowSpectatorControls = (UFunction*) UObject::GObjObjects()->Data[ 53907 ];

	UGfxTrHud_execShowSpectatorControls_Parms ShowSpectatorControls_Parms;
	ShowSpectatorControls_Parms.bShowControls = bShowControls;

	this->ProcessEvent ( pFnShowSpectatorControls, &ShowSpectatorControls_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorFloatCameraPanel_Description
// [0x00020002] 
// Parameters infos:
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorFloatCameraPanel_Description ( struct FString Description )
{
	static UFunction* pFnSetSpectatorFloatCameraPanel_Description = NULL;

	if ( ! pFnSetSpectatorFloatCameraPanel_Description )
		pFnSetSpectatorFloatCameraPanel_Description = (UFunction*) UObject::GObjObjects()->Data[ 53904 ];

	UGfxTrHud_execSetSpectatorFloatCameraPanel_Description_Parms SetSpectatorFloatCameraPanel_Description_Parms;
	memcpy ( &SetSpectatorFloatCameraPanel_Description_Parms.Description, &Description, 0xC );

	this->ProcessEvent ( pFnSetSpectatorFloatCameraPanel_Description, &SetSpectatorFloatCameraPanel_Description_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorFloatCameraPanel_Name
// [0x00020002] 
// Parameters infos:
// struct FString                 FloatCameraName                ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorFloatCameraPanel_Name ( struct FString FloatCameraName )
{
	static UFunction* pFnSetSpectatorFloatCameraPanel_Name = NULL;

	if ( ! pFnSetSpectatorFloatCameraPanel_Name )
		pFnSetSpectatorFloatCameraPanel_Name = (UFunction*) UObject::GObjObjects()->Data[ 53901 ];

	UGfxTrHud_execSetSpectatorFloatCameraPanel_Name_Parms SetSpectatorFloatCameraPanel_Name_Parms;
	memcpy ( &SetSpectatorFloatCameraPanel_Name_Parms.FloatCameraName, &FloatCameraName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorFloatCameraPanel_Name, &SetSpectatorFloatCameraPanel_Name_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorObjectivePanel_HealthFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )
// int                            Health                         ( CPF_Parm )

void UGfxTrHud::SetSpectatorObjectivePanel_HealthFillBar ( int FrameIndex, int Health )
{
	static UFunction* pFnSetSpectatorObjectivePanel_HealthFillBar = NULL;

	if ( ! pFnSetSpectatorObjectivePanel_HealthFillBar )
		pFnSetSpectatorObjectivePanel_HealthFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53897 ];

	UGfxTrHud_execSetSpectatorObjectivePanel_HealthFillBar_Parms SetSpectatorObjectivePanel_HealthFillBar_Parms;
	SetSpectatorObjectivePanel_HealthFillBar_Parms.FrameIndex = FrameIndex;
	SetSpectatorObjectivePanel_HealthFillBar_Parms.Health = Health;

	this->ProcessEvent ( pFnSetSpectatorObjectivePanel_HealthFillBar, &SetSpectatorObjectivePanel_HealthFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorObjectivePanel_ObjectiveDescription
// [0x00020002] 
// Parameters infos:
// struct FString                 ObjectiveDescription           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorObjectivePanel_ObjectiveDescription ( struct FString ObjectiveDescription )
{
	static UFunction* pFnSetSpectatorObjectivePanel_ObjectiveDescription = NULL;

	if ( ! pFnSetSpectatorObjectivePanel_ObjectiveDescription )
		pFnSetSpectatorObjectivePanel_ObjectiveDescription = (UFunction*) UObject::GObjObjects()->Data[ 53894 ];

	UGfxTrHud_execSetSpectatorObjectivePanel_ObjectiveDescription_Parms SetSpectatorObjectivePanel_ObjectiveDescription_Parms;
	memcpy ( &SetSpectatorObjectivePanel_ObjectiveDescription_Parms.ObjectiveDescription, &ObjectiveDescription, 0xC );

	this->ProcessEvent ( pFnSetSpectatorObjectivePanel_ObjectiveDescription, &SetSpectatorObjectivePanel_ObjectiveDescription_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorObjectivePanel_ObjectiveName
// [0x00020002] 
// Parameters infos:
// struct FString                 ObjectiveName                  ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorObjectivePanel_ObjectiveName ( struct FString ObjectiveName )
{
	static UFunction* pFnSetSpectatorObjectivePanel_ObjectiveName = NULL;

	if ( ! pFnSetSpectatorObjectivePanel_ObjectiveName )
		pFnSetSpectatorObjectivePanel_ObjectiveName = (UFunction*) UObject::GObjObjects()->Data[ 53891 ];

	UGfxTrHud_execSetSpectatorObjectivePanel_ObjectiveName_Parms SetSpectatorObjectivePanel_ObjectiveName_Parms;
	memcpy ( &SetSpectatorObjectivePanel_ObjectiveName_Parms.ObjectiveName, &ObjectiveName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorObjectivePanel_ObjectiveName, &SetSpectatorObjectivePanel_ObjectiveName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorBookmarkPanel_BookmarkName
// [0x00020002] 
// Parameters infos:
// struct FString                 BookmarkName                   ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorBookmarkPanel_BookmarkName ( struct FString BookmarkName )
{
	static UFunction* pFnSetSpectatorBookmarkPanel_BookmarkName = NULL;

	if ( ! pFnSetSpectatorBookmarkPanel_BookmarkName )
		pFnSetSpectatorBookmarkPanel_BookmarkName = (UFunction*) UObject::GObjObjects()->Data[ 53887 ];

	UGfxTrHud_execSetSpectatorBookmarkPanel_BookmarkName_Parms SetSpectatorBookmarkPanel_BookmarkName_Parms;
	memcpy ( &SetSpectatorBookmarkPanel_BookmarkName_Parms.BookmarkName, &BookmarkName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorBookmarkPanel_BookmarkName, &SetSpectatorBookmarkPanel_BookmarkName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_Selected
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_Selected ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorVehiclePanel_Selected = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_Selected )
		pFnSetSpectatorVehiclePanel_Selected = (UFunction*) UObject::GObjObjects()->Data[ 53884 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_Selected_Parms SetSpectatorVehiclePanel_Selected_Parms;
	SetSpectatorVehiclePanel_Selected_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_Selected, &SetSpectatorVehiclePanel_Selected_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_SkiIndicatorSpeed
// [0x00020002] 
// Parameters infos:
// struct FString                 Speed                          ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_SkiIndicatorSpeed ( struct FString Speed )
{
	static UFunction* pFnSetSpectatorVehiclePanel_SkiIndicatorSpeed = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_SkiIndicatorSpeed )
		pFnSetSpectatorVehiclePanel_SkiIndicatorSpeed = (UFunction*) UObject::GObjObjects()->Data[ 53881 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_SkiIndicatorSpeed_Parms SetSpectatorVehiclePanel_SkiIndicatorSpeed_Parms;
	memcpy ( &SetSpectatorVehiclePanel_SkiIndicatorSpeed_Parms.Speed, &Speed, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_SkiIndicatorSpeed, &SetSpectatorVehiclePanel_SkiIndicatorSpeed_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_SkiIndicatorFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_SkiIndicatorFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorVehiclePanel_SkiIndicatorFillBar = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_SkiIndicatorFillBar )
		pFnSetSpectatorVehiclePanel_SkiIndicatorFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53878 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_SkiIndicatorFillBar_Parms SetSpectatorVehiclePanel_SkiIndicatorFillBar_Parms;
	SetSpectatorVehiclePanel_SkiIndicatorFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_SkiIndicatorFillBar, &SetSpectatorVehiclePanel_SkiIndicatorFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_SecondaryWeaponVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_SecondaryWeaponVisible ( unsigned long bVisible )
{
	static UFunction* pFnSetSpectatorVehiclePanel_SecondaryWeaponVisible = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_SecondaryWeaponVisible )
		pFnSetSpectatorVehiclePanel_SecondaryWeaponVisible = (UFunction*) UObject::GObjObjects()->Data[ 53875 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_SecondaryWeaponVisible_Parms SetSpectatorVehiclePanel_SecondaryWeaponVisible_Parms;
	SetSpectatorVehiclePanel_SecondaryWeaponVisible_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_SecondaryWeaponVisible, &SetSpectatorVehiclePanel_SecondaryWeaponVisible_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_SecondaryWeaponReady
// [0x00020002] 
// Parameters infos:
// int                            Ready                          ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_SecondaryWeaponReady ( int Ready )
{
	static UFunction* pFnSetSpectatorVehiclePanel_SecondaryWeaponReady = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_SecondaryWeaponReady )
		pFnSetSpectatorVehiclePanel_SecondaryWeaponReady = (UFunction*) UObject::GObjObjects()->Data[ 53872 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_SecondaryWeaponReady_Parms SetSpectatorVehiclePanel_SecondaryWeaponReady_Parms;
	SetSpectatorVehiclePanel_SecondaryWeaponReady_Parms.Ready = Ready;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_SecondaryWeaponReady, &SetSpectatorVehiclePanel_SecondaryWeaponReady_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_SecondaryWeaponName
// [0x00020002] 
// Parameters infos:
// struct FString                 SecondaryWeaponName            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_SecondaryWeaponName ( struct FString SecondaryWeaponName )
{
	static UFunction* pFnSetSpectatorVehiclePanel_SecondaryWeaponName = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_SecondaryWeaponName )
		pFnSetSpectatorVehiclePanel_SecondaryWeaponName = (UFunction*) UObject::GObjObjects()->Data[ 53869 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_SecondaryWeaponName_Parms SetSpectatorVehiclePanel_SecondaryWeaponName_Parms;
	memcpy ( &SetSpectatorVehiclePanel_SecondaryWeaponName_Parms.SecondaryWeaponName, &SecondaryWeaponName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_SecondaryWeaponName, &SetSpectatorVehiclePanel_SecondaryWeaponName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_PrimaryWeaponVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_PrimaryWeaponVisible ( unsigned long bVisible )
{
	static UFunction* pFnSetSpectatorVehiclePanel_PrimaryWeaponVisible = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_PrimaryWeaponVisible )
		pFnSetSpectatorVehiclePanel_PrimaryWeaponVisible = (UFunction*) UObject::GObjObjects()->Data[ 53866 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_PrimaryWeaponVisible_Parms SetSpectatorVehiclePanel_PrimaryWeaponVisible_Parms;
	SetSpectatorVehiclePanel_PrimaryWeaponVisible_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_PrimaryWeaponVisible, &SetSpectatorVehiclePanel_PrimaryWeaponVisible_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_PrimaryWeaponReady
// [0x00020002] 
// Parameters infos:
// int                            Ready                          ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_PrimaryWeaponReady ( int Ready )
{
	static UFunction* pFnSetSpectatorVehiclePanel_PrimaryWeaponReady = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_PrimaryWeaponReady )
		pFnSetSpectatorVehiclePanel_PrimaryWeaponReady = (UFunction*) UObject::GObjObjects()->Data[ 53863 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_PrimaryWeaponReady_Parms SetSpectatorVehiclePanel_PrimaryWeaponReady_Parms;
	SetSpectatorVehiclePanel_PrimaryWeaponReady_Parms.Ready = Ready;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_PrimaryWeaponReady, &SetSpectatorVehiclePanel_PrimaryWeaponReady_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_PrimaryWeaponName
// [0x00020002] 
// Parameters infos:
// struct FString                 PrimaryWeaponName              ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_PrimaryWeaponName ( struct FString PrimaryWeaponName )
{
	static UFunction* pFnSetSpectatorVehiclePanel_PrimaryWeaponName = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_PrimaryWeaponName )
		pFnSetSpectatorVehiclePanel_PrimaryWeaponName = (UFunction*) UObject::GObjObjects()->Data[ 53860 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_PrimaryWeaponName_Parms SetSpectatorVehiclePanel_PrimaryWeaponName_Parms;
	memcpy ( &SetSpectatorVehiclePanel_PrimaryWeaponName_Parms.PrimaryWeaponName, &PrimaryWeaponName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_PrimaryWeaponName, &SetSpectatorVehiclePanel_PrimaryWeaponName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_Energy
// [0x00020002] 
// Parameters infos:
// struct FString                 Energy                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_Energy ( struct FString Energy )
{
	static UFunction* pFnSetSpectatorVehiclePanel_Energy = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_Energy )
		pFnSetSpectatorVehiclePanel_Energy = (UFunction*) UObject::GObjObjects()->Data[ 53857 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_Energy_Parms SetSpectatorVehiclePanel_Energy_Parms;
	memcpy ( &SetSpectatorVehiclePanel_Energy_Parms.Energy, &Energy, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_Energy, &SetSpectatorVehiclePanel_Energy_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_EnergyFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_EnergyFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorVehiclePanel_EnergyFillBar = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_EnergyFillBar )
		pFnSetSpectatorVehiclePanel_EnergyFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53854 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_EnergyFillBar_Parms SetSpectatorVehiclePanel_EnergyFillBar_Parms;
	SetSpectatorVehiclePanel_EnergyFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_EnergyFillBar, &SetSpectatorVehiclePanel_EnergyFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_Health
// [0x00020002] 
// Parameters infos:
// struct FString                 Health                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_Health ( struct FString Health )
{
	static UFunction* pFnSetSpectatorVehiclePanel_Health = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_Health )
		pFnSetSpectatorVehiclePanel_Health = (UFunction*) UObject::GObjObjects()->Data[ 53851 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_Health_Parms SetSpectatorVehiclePanel_Health_Parms;
	memcpy ( &SetSpectatorVehiclePanel_Health_Parms.Health, &Health, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_Health, &SetSpectatorVehiclePanel_Health_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_HealthFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_HealthFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorVehiclePanel_HealthFillBar = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_HealthFillBar )
		pFnSetSpectatorVehiclePanel_HealthFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53848 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_HealthFillBar_Parms SetSpectatorVehiclePanel_HealthFillBar_Parms;
	SetSpectatorVehiclePanel_HealthFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_HealthFillBar, &SetSpectatorVehiclePanel_HealthFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_PassengerName
// [0x00020002] 
// Parameters infos:
// struct FString                 PassengerName                  ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_PassengerName ( struct FString PassengerName )
{
	static UFunction* pFnSetSpectatorVehiclePanel_PassengerName = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_PassengerName )
		pFnSetSpectatorVehiclePanel_PassengerName = (UFunction*) UObject::GObjObjects()->Data[ 53845 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_PassengerName_Parms SetSpectatorVehiclePanel_PassengerName_Parms;
	memcpy ( &SetSpectatorVehiclePanel_PassengerName_Parms.PassengerName, &PassengerName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_PassengerName, &SetSpectatorVehiclePanel_PassengerName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_DriverName
// [0x00020002] 
// Parameters infos:
// struct FString                 DriverName                     ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_DriverName ( struct FString DriverName )
{
	static UFunction* pFnSetSpectatorVehiclePanel_DriverName = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_DriverName )
		pFnSetSpectatorVehiclePanel_DriverName = (UFunction*) UObject::GObjObjects()->Data[ 53842 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_DriverName_Parms SetSpectatorVehiclePanel_DriverName_Parms;
	memcpy ( &SetSpectatorVehiclePanel_DriverName_Parms.DriverName, &DriverName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_DriverName, &SetSpectatorVehiclePanel_DriverName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_VehicleName
// [0x00020002] 
// Parameters infos:
// struct FString                 VehicleName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorVehiclePanel_VehicleName ( struct FString VehicleName )
{
	static UFunction* pFnSetSpectatorVehiclePanel_VehicleName = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_VehicleName )
		pFnSetSpectatorVehiclePanel_VehicleName = (UFunction*) UObject::GObjObjects()->Data[ 53839 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_VehicleName_Parms SetSpectatorVehiclePanel_VehicleName_Parms;
	memcpy ( &SetSpectatorVehiclePanel_VehicleName_Parms.VehicleName, &VehicleName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_VehicleName, &SetSpectatorVehiclePanel_VehicleName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorVehiclePanel_FlagCarried
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCarried                       ( CPF_Parm )

void UGfxTrHud::SetSpectatorVehiclePanel_FlagCarried ( unsigned long bCarried )
{
	static UFunction* pFnSetSpectatorVehiclePanel_FlagCarried = NULL;

	if ( ! pFnSetSpectatorVehiclePanel_FlagCarried )
		pFnSetSpectatorVehiclePanel_FlagCarried = (UFunction*) UObject::GObjObjects()->Data[ 53836 ];

	UGfxTrHud_execSetSpectatorVehiclePanel_FlagCarried_Parms SetSpectatorVehiclePanel_FlagCarried_Parms;
	SetSpectatorVehiclePanel_FlagCarried_Parms.bCarried = bCarried;

	this->ProcessEvent ( pFnSetSpectatorVehiclePanel_FlagCarried, &SetSpectatorVehiclePanel_FlagCarried_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Selected
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_Selected ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Selected = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Selected )
		pFnSetSpectatorPlayerPanel_Selected = (UFunction*) UObject::GObjObjects()->Data[ 53833 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Selected_Parms SetSpectatorPlayerPanel_Selected_Parms;
	SetSpectatorPlayerPanel_Selected_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Selected, &SetSpectatorPlayerPanel_Selected_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_SkiIndicatorSpeed
// [0x00020002] 
// Parameters infos:
// struct FString                 Speed                          ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_SkiIndicatorSpeed ( struct FString Speed )
{
	static UFunction* pFnSetSpectatorPlayerPanel_SkiIndicatorSpeed = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_SkiIndicatorSpeed )
		pFnSetSpectatorPlayerPanel_SkiIndicatorSpeed = (UFunction*) UObject::GObjObjects()->Data[ 53830 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_SkiIndicatorSpeed_Parms SetSpectatorPlayerPanel_SkiIndicatorSpeed_Parms;
	memcpy ( &SetSpectatorPlayerPanel_SkiIndicatorSpeed_Parms.Speed, &Speed, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_SkiIndicatorSpeed, &SetSpectatorPlayerPanel_SkiIndicatorSpeed_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_SkiIndicatorFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_SkiIndicatorFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_SkiIndicatorFillBar = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_SkiIndicatorFillBar )
		pFnSetSpectatorPlayerPanel_SkiIndicatorFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53827 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_SkiIndicatorFillBar_Parms SetSpectatorPlayerPanel_SkiIndicatorFillBar_Parms;
	SetSpectatorPlayerPanel_SkiIndicatorFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_SkiIndicatorFillBar, &SetSpectatorPlayerPanel_SkiIndicatorFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Perk2Name
// [0x00020002] 
// Parameters infos:
// struct FString                 PerkName                       ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_Perk2Name ( struct FString PerkName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Perk2Name = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Perk2Name )
		pFnSetSpectatorPlayerPanel_Perk2Name = (UFunction*) UObject::GObjObjects()->Data[ 53824 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Perk2Name_Parms SetSpectatorPlayerPanel_Perk2Name_Parms;
	memcpy ( &SetSpectatorPlayerPanel_Perk2Name_Parms.PerkName, &PerkName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Perk2Name, &SetSpectatorPlayerPanel_Perk2Name_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Perk2Icon
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_Perk2Icon ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Perk2Icon = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Perk2Icon )
		pFnSetSpectatorPlayerPanel_Perk2Icon = (UFunction*) UObject::GObjObjects()->Data[ 53821 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Perk2Icon_Parms SetSpectatorPlayerPanel_Perk2Icon_Parms;
	SetSpectatorPlayerPanel_Perk2Icon_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Perk2Icon, &SetSpectatorPlayerPanel_Perk2Icon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Perk1Name
// [0x00020002] 
// Parameters infos:
// struct FString                 PerkName                       ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_Perk1Name ( struct FString PerkName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Perk1Name = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Perk1Name )
		pFnSetSpectatorPlayerPanel_Perk1Name = (UFunction*) UObject::GObjObjects()->Data[ 53818 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Perk1Name_Parms SetSpectatorPlayerPanel_Perk1Name_Parms;
	memcpy ( &SetSpectatorPlayerPanel_Perk1Name_Parms.PerkName, &PerkName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Perk1Name, &SetSpectatorPlayerPanel_Perk1Name_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Perk1Icon
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_Perk1Icon ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Perk1Icon = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Perk1Icon )
		pFnSetSpectatorPlayerPanel_Perk1Icon = (UFunction*) UObject::GObjObjects()->Data[ 53815 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Perk1Icon_Parms SetSpectatorPlayerPanel_Perk1Icon_Parms;
	SetSpectatorPlayerPanel_Perk1Icon_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Perk1Icon, &SetSpectatorPlayerPanel_Perk1Icon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PackName
// [0x00020002] 
// Parameters infos:
// struct FString                 PackName                       ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_PackName ( struct FString PackName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PackName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PackName )
		pFnSetSpectatorPlayerPanel_PackName = (UFunction*) UObject::GObjObjects()->Data[ 53812 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PackName_Parms SetSpectatorPlayerPanel_PackName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_PackName_Parms.PackName, &PackName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PackName, &SetSpectatorPlayerPanel_PackName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PackAmmo
// [0x00020002] 
// Parameters infos:
// struct FString                 PackAmmo                       ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_PackAmmo ( struct FString PackAmmo )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PackAmmo = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PackAmmo )
		pFnSetSpectatorPlayerPanel_PackAmmo = (UFunction*) UObject::GObjObjects()->Data[ 53809 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PackAmmo_Parms SetSpectatorPlayerPanel_PackAmmo_Parms;
	memcpy ( &SetSpectatorPlayerPanel_PackAmmo_Parms.PackAmmo, &PackAmmo, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PackAmmo, &SetSpectatorPlayerPanel_PackAmmo_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PackIcon
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_PackIcon ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PackIcon = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PackIcon )
		pFnSetSpectatorPlayerPanel_PackIcon = (UFunction*) UObject::GObjObjects()->Data[ 53806 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PackIcon_Parms SetSpectatorPlayerPanel_PackIcon_Parms;
	SetSpectatorPlayerPanel_PackIcon_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PackIcon, &SetSpectatorPlayerPanel_PackIcon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_OffhandName
// [0x00020002] 
// Parameters infos:
// struct FString                 OffhandName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_OffhandName ( struct FString OffhandName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_OffhandName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_OffhandName )
		pFnSetSpectatorPlayerPanel_OffhandName = (UFunction*) UObject::GObjObjects()->Data[ 53803 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_OffhandName_Parms SetSpectatorPlayerPanel_OffhandName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_OffhandName_Parms.OffhandName, &OffhandName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_OffhandName, &SetSpectatorPlayerPanel_OffhandName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_OffhandAmmo
// [0x00020002] 
// Parameters infos:
// struct FString                 OffhandAmmo                    ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_OffhandAmmo ( struct FString OffhandAmmo )
{
	static UFunction* pFnSetSpectatorPlayerPanel_OffhandAmmo = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_OffhandAmmo )
		pFnSetSpectatorPlayerPanel_OffhandAmmo = (UFunction*) UObject::GObjObjects()->Data[ 53800 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_OffhandAmmo_Parms SetSpectatorPlayerPanel_OffhandAmmo_Parms;
	memcpy ( &SetSpectatorPlayerPanel_OffhandAmmo_Parms.OffhandAmmo, &OffhandAmmo, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_OffhandAmmo, &SetSpectatorPlayerPanel_OffhandAmmo_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_OffhandIcon
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_OffhandIcon ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_OffhandIcon = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_OffhandIcon )
		pFnSetSpectatorPlayerPanel_OffhandIcon = (UFunction*) UObject::GObjObjects()->Data[ 53797 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_OffhandIcon_Parms SetSpectatorPlayerPanel_OffhandIcon_Parms;
	SetSpectatorPlayerPanel_OffhandIcon_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_OffhandIcon, &SetSpectatorPlayerPanel_OffhandIcon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_SecondaryAmmoCount
// [0x00020002] 
// Parameters infos:
// struct FString                 SecondaryAmmoCount             ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_SecondaryAmmoCount ( struct FString SecondaryAmmoCount )
{
	static UFunction* pFnSetSpectatorPlayerPanel_SecondaryAmmoCount = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_SecondaryAmmoCount )
		pFnSetSpectatorPlayerPanel_SecondaryAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 53794 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_SecondaryAmmoCount_Parms SetSpectatorPlayerPanel_SecondaryAmmoCount_Parms;
	memcpy ( &SetSpectatorPlayerPanel_SecondaryAmmoCount_Parms.SecondaryAmmoCount, &SecondaryAmmoCount, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_SecondaryAmmoCount, &SetSpectatorPlayerPanel_SecondaryAmmoCount_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_SecondaryWeaponName
// [0x00020002] 
// Parameters infos:
// struct FString                 SecondaryWeaponName            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_SecondaryWeaponName ( struct FString SecondaryWeaponName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_SecondaryWeaponName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_SecondaryWeaponName )
		pFnSetSpectatorPlayerPanel_SecondaryWeaponName = (UFunction*) UObject::GObjObjects()->Data[ 53791 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_SecondaryWeaponName_Parms SetSpectatorPlayerPanel_SecondaryWeaponName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_SecondaryWeaponName_Parms.SecondaryWeaponName, &SecondaryWeaponName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_SecondaryWeaponName, &SetSpectatorPlayerPanel_SecondaryWeaponName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PrimaryAmmoCount
// [0x00020002] 
// Parameters infos:
// struct FString                 PrimaryAmmoCount               ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_PrimaryAmmoCount ( struct FString PrimaryAmmoCount )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PrimaryAmmoCount = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PrimaryAmmoCount )
		pFnSetSpectatorPlayerPanel_PrimaryAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 53788 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PrimaryAmmoCount_Parms SetSpectatorPlayerPanel_PrimaryAmmoCount_Parms;
	memcpy ( &SetSpectatorPlayerPanel_PrimaryAmmoCount_Parms.PrimaryAmmoCount, &PrimaryAmmoCount, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PrimaryAmmoCount, &SetSpectatorPlayerPanel_PrimaryAmmoCount_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PrimaryWeaponName
// [0x00020002] 
// Parameters infos:
// struct FString                 PrimaryWeaponName              ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_PrimaryWeaponName ( struct FString PrimaryWeaponName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PrimaryWeaponName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PrimaryWeaponName )
		pFnSetSpectatorPlayerPanel_PrimaryWeaponName = (UFunction*) UObject::GObjObjects()->Data[ 53785 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PrimaryWeaponName_Parms SetSpectatorPlayerPanel_PrimaryWeaponName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_PrimaryWeaponName_Parms.PrimaryWeaponName, &PrimaryWeaponName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PrimaryWeaponName, &SetSpectatorPlayerPanel_PrimaryWeaponName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Energy
// [0x00020002] 
// Parameters infos:
// struct FString                 Energy                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_Energy ( struct FString Energy )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Energy = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Energy )
		pFnSetSpectatorPlayerPanel_Energy = (UFunction*) UObject::GObjObjects()->Data[ 53782 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Energy_Parms SetSpectatorPlayerPanel_Energy_Parms;
	memcpy ( &SetSpectatorPlayerPanel_Energy_Parms.Energy, &Energy, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Energy, &SetSpectatorPlayerPanel_Energy_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_EnergyFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_EnergyFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_EnergyFillBar = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_EnergyFillBar )
		pFnSetSpectatorPlayerPanel_EnergyFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53779 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_EnergyFillBar_Parms SetSpectatorPlayerPanel_EnergyFillBar_Parms;
	SetSpectatorPlayerPanel_EnergyFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_EnergyFillBar, &SetSpectatorPlayerPanel_EnergyFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_Health
// [0x00020002] 
// Parameters infos:
// struct FString                 Health                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_Health ( struct FString Health )
{
	static UFunction* pFnSetSpectatorPlayerPanel_Health = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_Health )
		pFnSetSpectatorPlayerPanel_Health = (UFunction*) UObject::GObjObjects()->Data[ 53776 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_Health_Parms SetSpectatorPlayerPanel_Health_Parms;
	memcpy ( &SetSpectatorPlayerPanel_Health_Parms.Health, &Health, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_Health, &SetSpectatorPlayerPanel_Health_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_HealthFillBar
// [0x00020002] 
// Parameters infos:
// int                            FrameIndex                     ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_HealthFillBar ( int FrameIndex )
{
	static UFunction* pFnSetSpectatorPlayerPanel_HealthFillBar = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_HealthFillBar )
		pFnSetSpectatorPlayerPanel_HealthFillBar = (UFunction*) UObject::GObjObjects()->Data[ 53773 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_HealthFillBar_Parms SetSpectatorPlayerPanel_HealthFillBar_Parms;
	SetSpectatorPlayerPanel_HealthFillBar_Parms.FrameIndex = FrameIndex;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_HealthFillBar, &SetSpectatorPlayerPanel_HealthFillBar_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_NextRegen
// [0x00020002] 
// Parameters infos:
// struct FString                 NextRegen                      ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_NextRegen ( struct FString NextRegen )
{
	static UFunction* pFnSetSpectatorPlayerPanel_NextRegen = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_NextRegen )
		pFnSetSpectatorPlayerPanel_NextRegen = (UFunction*) UObject::GObjObjects()->Data[ 53770 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_NextRegen_Parms SetSpectatorPlayerPanel_NextRegen_Parms;
	memcpy ( &SetSpectatorPlayerPanel_NextRegen_Parms.NextRegen, &NextRegen, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_NextRegen, &SetSpectatorPlayerPanel_NextRegen_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_ClassName
// [0x00020002] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_ClassName ( struct FString ClassName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_ClassName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_ClassName )
		pFnSetSpectatorPlayerPanel_ClassName = (UFunction*) UObject::GObjObjects()->Data[ 53767 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_ClassName_Parms SetSpectatorPlayerPanel_ClassName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_ClassName_Parms.ClassName, &ClassName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_ClassName, &SetSpectatorPlayerPanel_ClassName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_PlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetSpectatorPlayerPanel_PlayerName ( struct FString PlayerName )
{
	static UFunction* pFnSetSpectatorPlayerPanel_PlayerName = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_PlayerName )
		pFnSetSpectatorPlayerPanel_PlayerName = (UFunction*) UObject::GObjObjects()->Data[ 53764 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_PlayerName_Parms SetSpectatorPlayerPanel_PlayerName_Parms;
	memcpy ( &SetSpectatorPlayerPanel_PlayerName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_PlayerName, &SetSpectatorPlayerPanel_PlayerName_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpectatorPlayerPanel_FlagCarried
// [0x00020002] 
// Parameters infos:
// unsigned long                  bCarried                       ( CPF_Parm )

void UGfxTrHud::SetSpectatorPlayerPanel_FlagCarried ( unsigned long bCarried )
{
	static UFunction* pFnSetSpectatorPlayerPanel_FlagCarried = NULL;

	if ( ! pFnSetSpectatorPlayerPanel_FlagCarried )
		pFnSetSpectatorPlayerPanel_FlagCarried = (UFunction*) UObject::GObjObjects()->Data[ 53759 ];

	UGfxTrHud_execSetSpectatorPlayerPanel_FlagCarried_Parms SetSpectatorPlayerPanel_FlagCarried_Parms;
	SetSpectatorPlayerPanel_FlagCarried_Parms.bCarried = bCarried;

	this->ProcessEvent ( pFnSetSpectatorPlayerPanel_FlagCarried, &SetSpectatorPlayerPanel_FlagCarried_Parms, NULL );
};

// Function TribesGame.GfxTrHud.GetWeaponNameFromDamageType
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class ATrPlayerReplicationInfo* PRI                            ( CPF_Parm )
// class UClass*                  FamilyInfo                     ( CPF_Parm )
// class UClass*                  KillDamageType                 ( CPF_Parm )

struct FString UGfxTrHud::GetWeaponNameFromDamageType ( class ATrPlayerReplicationInfo* PRI, class UClass* FamilyInfo, class UClass* KillDamageType )
{
	static UFunction* pFnGetWeaponNameFromDamageType = NULL;

	if ( ! pFnGetWeaponNameFromDamageType )
		pFnGetWeaponNameFromDamageType = (UFunction*) UObject::GObjObjects()->Data[ 53739 ];

	UGfxTrHud_execGetWeaponNameFromDamageType_Parms GetWeaponNameFromDamageType_Parms;
	GetWeaponNameFromDamageType_Parms.PRI = PRI;
	GetWeaponNameFromDamageType_Parms.FamilyInfo = FamilyInfo;
	GetWeaponNameFromDamageType_Parms.KillDamageType = KillDamageType;

	this->ProcessEvent ( pFnGetWeaponNameFromDamageType, &GetWeaponNameFromDamageType_Parms, NULL );

	return GetWeaponNameFromDamageType_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.CreateKillCamInfo
// [0x00020002] 
// Parameters infos:
// class ATrPlayerReplicationInfo* KillerPRI                      ( CPF_Parm )
// class ATrPlayerReplicationInfo* VictimPRI                      ( CPF_Parm )
// class UClass*                  KillDamageType                 ( CPF_Parm )

void UGfxTrHud::CreateKillCamInfo ( class ATrPlayerReplicationInfo* KillerPRI, class ATrPlayerReplicationInfo* VictimPRI, class UClass* KillDamageType )
{
	static UFunction* pFnCreateKillCamInfo = NULL;

	if ( ! pFnCreateKillCamInfo )
		pFnCreateKillCamInfo = (UFunction*) UObject::GObjObjects()->Data[ 53700 ];

	UGfxTrHud_execCreateKillCamInfo_Parms CreateKillCamInfo_Parms;
	CreateKillCamInfo_Parms.KillerPRI = KillerPRI;
	CreateKillCamInfo_Parms.VictimPRI = VictimPRI;
	CreateKillCamInfo_Parms.KillDamageType = KillDamageType;

	this->ProcessEvent ( pFnCreateKillCamInfo, &CreateKillCamInfo_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideGlobalAlert
// [0x00020002] 
// Parameters infos:

void UGfxTrHud::HideGlobalAlert ( )
{
	static UFunction* pFnHideGlobalAlert = NULL;

	if ( ! pFnHideGlobalAlert )
		pFnHideGlobalAlert = (UFunction*) UObject::GObjObjects()->Data[ 53699 ];

	UGfxTrHud_execHideGlobalAlert_Parms HideGlobalAlert_Parms;

	this->ProcessEvent ( pFnHideGlobalAlert, &HideGlobalAlert_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetGlobalAlert
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetGlobalAlert ( struct FString Message )
{
	static UFunction* pFnSetGlobalAlert = NULL;

	if ( ! pFnSetGlobalAlert )
		pFnSetGlobalAlert = (UFunction*) UObject::GObjObjects()->Data[ 53697 ];

	UGfxTrHud_execSetGlobalAlert_Parms SetGlobalAlert_Parms;
	memcpy ( &SetGlobalAlert_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSetGlobalAlert, &SetGlobalAlert_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RetrieveGFxObject
// [0x00420002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ObjName                        ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Obj                            ( CPF_Parm | CPF_OutParm )

class UGFxObject* UGfxTrHud::RetrieveGFxObject ( struct FString ObjName, class UGFxObject** Obj )
{
	static UFunction* pFnRetrieveGFxObject = NULL;

	if ( ! pFnRetrieveGFxObject )
		pFnRetrieveGFxObject = (UFunction*) UObject::GObjObjects()->Data[ 53693 ];

	UGfxTrHud_execRetrieveGFxObject_Parms RetrieveGFxObject_Parms;
	memcpy ( &RetrieveGFxObject_Parms.ObjName, &ObjName, 0xC );

	this->ProcessEvent ( pFnRetrieveGFxObject, &RetrieveGFxObject_Parms, NULL );

	if ( Obj )
		*Obj = RetrieveGFxObject_Parms.Obj;

	return RetrieveGFxObject_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.UpdateCallIn
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bEnable                        ( CPF_Parm )
// unsigned long                  bAvailable                     ( CPF_Parm )

void UGfxTrHud::UpdateCallIn ( int Index, unsigned long bEnable, unsigned long bAvailable )
{
	static UFunction* pFnUpdateCallIn = NULL;

	if ( ! pFnUpdateCallIn )
		pFnUpdateCallIn = (UFunction*) UObject::GObjObjects()->Data[ 53689 ];

	UGfxTrHud_execUpdateCallIn_Parms UpdateCallIn_Parms;
	UpdateCallIn_Parms.Index = Index;
	UpdateCallIn_Parms.bEnable = bEnable;
	UpdateCallIn_Parms.bAvailable = bAvailable;

	this->ProcessEvent ( pFnUpdateCallIn, &UpdateCallIn_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SoundAccolade
// [0x00020002] 
// Parameters infos:

void UGfxTrHud::SoundAccolade ( )
{
	static UFunction* pFnSoundAccolade = NULL;

	if ( ! pFnSoundAccolade )
		pFnSoundAccolade = (UFunction*) UObject::GObjObjects()->Data[ 53684 ];

	UGfxTrHud_execSoundAccolade_Parms SoundAccolade_Parms;

	this->ProcessEvent ( pFnSoundAccolade, &SoundAccolade_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateOwnedItem
// [0x00024002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )
// int                            FrameId                        ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::UpdateOwnedItem ( int Index, unsigned long bVisible, int FrameId )
{
	static UFunction* pFnUpdateOwnedItem = NULL;

	if ( ! pFnUpdateOwnedItem )
		pFnUpdateOwnedItem = (UFunction*) UObject::GObjObjects()->Data[ 53680 ];

	UGfxTrHud_execUpdateOwnedItem_Parms UpdateOwnedItem_Parms;
	UpdateOwnedItem_Parms.Index = Index;
	UpdateOwnedItem_Parms.bVisible = bVisible;
	UpdateOwnedItem_Parms.FrameId = FrameId;

	this->ProcessEvent ( pFnUpdateOwnedItem, &UpdateOwnedItem_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateOffhand
// [0x00024002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )
// int                            FrameId                        ( CPF_OptionalParm | CPF_Parm )
// int                            Count                          ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::UpdateOffhand ( int Index, unsigned long bVisible, int FrameId, int Count )
{
	static UFunction* pFnUpdateOffhand = NULL;

	if ( ! pFnUpdateOffhand )
		pFnUpdateOffhand = (UFunction*) UObject::GObjObjects()->Data[ 53675 ];

	UGfxTrHud_execUpdateOffhand_Parms UpdateOffhand_Parms;
	UpdateOffhand_Parms.Index = Index;
	UpdateOffhand_Parms.bVisible = bVisible;
	UpdateOffhand_Parms.FrameId = FrameId;
	UpdateOffhand_Parms.Count = Count;

	this->ProcessEvent ( pFnUpdateOffhand, &UpdateOffhand_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateVehicleSeat
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            FrameId                        ( CPF_Parm )

void UGfxTrHud::UpdateVehicleSeat ( int Index, int FrameId )
{
	static UFunction* pFnUpdateVehicleSeat = NULL;

	if ( ! pFnUpdateVehicleSeat )
		pFnUpdateVehicleSeat = (UFunction*) UObject::GObjObjects()->Data[ 53672 ];

	UGfxTrHud_execUpdateVehicleSeat_Parms UpdateVehicleSeat_Parms;
	UpdateVehicleSeat_Parms.Index = Index;
	UpdateVehicleSeat_Parms.FrameId = FrameId;

	this->ProcessEvent ( pFnUpdateVehicleSeat, &UpdateVehicleSeat_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateVehicleEnergy
// [0x00020002] 
// Parameters infos:
// float                          Energy                         ( CPF_Parm )
// int                            FrameId                        ( CPF_Parm )

void UGfxTrHud::UpdateVehicleEnergy ( float Energy, int FrameId )
{
	static UFunction* pFnUpdateVehicleEnergy = NULL;

	if ( ! pFnUpdateVehicleEnergy )
		pFnUpdateVehicleEnergy = (UFunction*) UObject::GObjObjects()->Data[ 53669 ];

	UGfxTrHud_execUpdateVehicleEnergy_Parms UpdateVehicleEnergy_Parms;
	UpdateVehicleEnergy_Parms.Energy = Energy;
	UpdateVehicleEnergy_Parms.FrameId = FrameId;

	this->ProcessEvent ( pFnUpdateVehicleEnergy, &UpdateVehicleEnergy_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateVehicleHealth
// [0x00020002] 
// Parameters infos:
// int                            Health                         ( CPF_Parm )
// int                            FrameId                        ( CPF_Parm )

void UGfxTrHud::UpdateVehicleHealth ( int Health, int FrameId )
{
	static UFunction* pFnUpdateVehicleHealth = NULL;

	if ( ! pFnUpdateVehicleHealth )
		pFnUpdateVehicleHealth = (UFunction*) UObject::GObjObjects()->Data[ 53666 ];

	UGfxTrHud_execUpdateVehicleHealth_Parms UpdateVehicleHealth_Parms;
	UpdateVehicleHealth_Parms.Health = Health;
	UpdateVehicleHealth_Parms.FrameId = FrameId;

	this->ProcessEvent ( pFnUpdateVehicleHealth, &UpdateVehicleHealth_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateVehicleStats
// [0x00024002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )
// int                            FrameId                        ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::UpdateVehicleStats ( unsigned long bVisible, int FrameId )
{
	static UFunction* pFnUpdateVehicleStats = NULL;

	if ( ! pFnUpdateVehicleStats )
		pFnUpdateVehicleStats = (UFunction*) UObject::GObjObjects()->Data[ 53663 ];

	UGfxTrHud_execUpdateVehicleStats_Parms UpdateVehicleStats_Parms;
	UpdateVehicleStats_Parms.bVisible = bVisible;
	UpdateVehicleStats_Parms.FrameId = FrameId;

	this->ProcessEvent ( pFnUpdateVehicleStats, &UpdateVehicleStats_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateTeamStats
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )

void UGfxTrHud::UpdateTeamStats ( int Team )
{
	static UFunction* pFnUpdateTeamStats = NULL;

	if ( ! pFnUpdateTeamStats )
		pFnUpdateTeamStats = (UFunction*) UObject::GObjObjects()->Data[ 53661 ];

	UGfxTrHud_execUpdateTeamStats_Parms UpdateTeamStats_Parms;
	UpdateTeamStats_Parms.Team = Team;

	this->ProcessEvent ( pFnUpdateTeamStats, &UpdateTeamStats_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateSkiLevel
// [0x00020002] 
// Parameters infos:
// int                            Level                          ( CPF_Parm )

void UGfxTrHud::UpdateSkiLevel ( int Level )
{
	static UFunction* pFnUpdateSkiLevel = NULL;

	if ( ! pFnUpdateSkiLevel )
		pFnUpdateSkiLevel = (UFunction*) UObject::GObjObjects()->Data[ 53659 ];

	UGfxTrHud_execUpdateSkiLevel_Parms UpdateSkiLevel_Parms;
	UpdateSkiLevel_Parms.Level = Level;

	this->ProcessEvent ( pFnUpdateSkiLevel, &UpdateSkiLevel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateSkiing
// [0x00020002] 
// Parameters infos:
// unsigned long                  bSkiing                        ( CPF_Parm )

void UGfxTrHud::UpdateSkiing ( unsigned long bSkiing )
{
	static UFunction* pFnUpdateSkiing = NULL;

	if ( ! pFnUpdateSkiing )
		pFnUpdateSkiing = (UFunction*) UObject::GObjObjects()->Data[ 53657 ];

	UGfxTrHud_execUpdateSkiing_Parms UpdateSkiing_Parms;
	UpdateSkiing_Parms.bSkiing = bSkiing;

	this->ProcessEvent ( pFnUpdateSkiing, &UpdateSkiing_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateFlagInHand
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::UpdateFlagInHand ( unsigned long bVisible )
{
	static UFunction* pFnUpdateFlagInHand = NULL;

	if ( ! pFnUpdateFlagInHand )
		pFnUpdateFlagInHand = (UFunction*) UObject::GObjObjects()->Data[ 53655 ];

	UGfxTrHud_execUpdateFlagInHand_Parms UpdateFlagInHand_Parms;
	UpdateFlagInHand_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnUpdateFlagInHand, &UpdateFlagInHand_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateCredits
// [0x00020002] 
// Parameters infos:
// int                            Credits                        ( CPF_Parm )

void UGfxTrHud::UpdateCredits ( int Credits )
{
	static UFunction* pFnUpdateCredits = NULL;

	if ( ! pFnUpdateCredits )
		pFnUpdateCredits = (UFunction*) UObject::GObjObjects()->Data[ 53653 ];

	UGfxTrHud_execUpdateCredits_Parms UpdateCredits_Parms;
	UpdateCredits_Parms.Credits = Credits;

	this->ProcessEvent ( pFnUpdateCredits, &UpdateCredits_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitScoreboardShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::RabbitScoreboardShow ( unsigned long bVisible )
{
	static UFunction* pFnRabbitScoreboardShow = NULL;

	if ( ! pFnRabbitScoreboardShow )
		pFnRabbitScoreboardShow = (UFunction*) UObject::GObjObjects()->Data[ 53651 ];

	UGfxTrHud_execRabbitScoreboardShow_Parms RabbitScoreboardShow_Parms;
	RabbitScoreboardShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnRabbitScoreboardShow, &RabbitScoreboardShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamScoreboardShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::TeamScoreboardShow ( unsigned long bVisible )
{
	static UFunction* pFnTeamScoreboardShow = NULL;

	if ( ! pFnTeamScoreboardShow )
		pFnTeamScoreboardShow = (UFunction*) UObject::GObjObjects()->Data[ 53649 ];

	UGfxTrHud_execTeamScoreboardShow_Parms TeamScoreboardShow_Parms;
	TeamScoreboardShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnTeamScoreboardShow, &TeamScoreboardShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHEnemyPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::CaHEnemyPointBreak ( struct FString Value )
{
	static UFunction* pFnCaHEnemyPointBreak = NULL;

	if ( ! pFnCaHEnemyPointBreak )
		pFnCaHEnemyPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53647 ];

	UGfxTrHud_execCaHEnemyPointBreak_Parms CaHEnemyPointBreak_Parms;
	memcpy ( &CaHEnemyPointBreak_Parms.Value, &Value, 0xC );

	this->ProcessEvent ( pFnCaHEnemyPointBreak, &CaHEnemyPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHFriendlyPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 Value                          ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::CaHFriendlyPointBreak ( struct FString Value )
{
	static UFunction* pFnCaHFriendlyPointBreak = NULL;

	if ( ! pFnCaHFriendlyPointBreak )
		pFnCaHFriendlyPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53645 ];

	UGfxTrHud_execCaHFriendlyPointBreak_Parms CaHFriendlyPointBreak_Parms;
	memcpy ( &CaHFriendlyPointBreak_Parms.Value, &Value, 0xC );

	this->ProcessEvent ( pFnCaHFriendlyPointBreak, &CaHFriendlyPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHPointUpdate
// [0x00020002] 
// Parameters infos:
// struct FString                 PointName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            PointType                      ( CPF_Parm )
// int                            PctHeld                        ( CPF_Parm )

void UGfxTrHud::CaHPointUpdate ( struct FString PointName, int PointType, int PctHeld )
{
	static UFunction* pFnCaHPointUpdate = NULL;

	if ( ! pFnCaHPointUpdate )
		pFnCaHPointUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53641 ];

	UGfxTrHud_execCaHPointUpdate_Parms CaHPointUpdate_Parms;
	memcpy ( &CaHPointUpdate_Parms.PointName, &PointName, 0xC );
	CaHPointUpdate_Parms.PointType = PointType;
	CaHPointUpdate_Parms.PctHeld = PctHeld;

	this->ProcessEvent ( pFnCaHPointUpdate, &CaHPointUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHUpdate
// [0x00020002] 
// Parameters infos:
// int                            FriendlyHeld                   ( CPF_Parm )
// int                            FriendlyPoints                 ( CPF_Parm )
// int                            FriendlyPct                    ( CPF_Parm )
// int                            EnemyHeld                      ( CPF_Parm )
// int                            EnemyPoints                    ( CPF_Parm )
// int                            EnemyPct                       ( CPF_Parm )
// struct FString                 GenTime                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::CaHUpdate ( int FriendlyHeld, int FriendlyPoints, int FriendlyPct, int EnemyHeld, int EnemyPoints, int EnemyPct, struct FString GenTime )
{
	static UFunction* pFnCaHUpdate = NULL;

	if ( ! pFnCaHUpdate )
		pFnCaHUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53633 ];

	UGfxTrHud_execCaHUpdate_Parms CaHUpdate_Parms;
	CaHUpdate_Parms.FriendlyHeld = FriendlyHeld;
	CaHUpdate_Parms.FriendlyPoints = FriendlyPoints;
	CaHUpdate_Parms.FriendlyPct = FriendlyPct;
	CaHUpdate_Parms.EnemyHeld = EnemyHeld;
	CaHUpdate_Parms.EnemyPoints = EnemyPoints;
	CaHUpdate_Parms.EnemyPct = EnemyPct;
	memcpy ( &CaHUpdate_Parms.GenTime, &GenTime, 0xC );

	this->ProcessEvent ( pFnCaHUpdate, &CaHUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHControlPointEShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHControlPointEShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHControlPointEShow = NULL;

	if ( ! pFnCaHControlPointEShow )
		pFnCaHControlPointEShow = (UFunction*) UObject::GObjObjects()->Data[ 53631 ];

	UGfxTrHud_execCaHControlPointEShow_Parms CaHControlPointEShow_Parms;
	CaHControlPointEShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHControlPointEShow, &CaHControlPointEShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHControlPointDShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHControlPointDShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHControlPointDShow = NULL;

	if ( ! pFnCaHControlPointDShow )
		pFnCaHControlPointDShow = (UFunction*) UObject::GObjObjects()->Data[ 53629 ];

	UGfxTrHud_execCaHControlPointDShow_Parms CaHControlPointDShow_Parms;
	CaHControlPointDShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHControlPointDShow, &CaHControlPointDShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHControlPointCShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHControlPointCShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHControlPointCShow = NULL;

	if ( ! pFnCaHControlPointCShow )
		pFnCaHControlPointCShow = (UFunction*) UObject::GObjObjects()->Data[ 53627 ];

	UGfxTrHud_execCaHControlPointCShow_Parms CaHControlPointCShow_Parms;
	CaHControlPointCShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHControlPointCShow, &CaHControlPointCShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHControlPointBShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHControlPointBShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHControlPointBShow = NULL;

	if ( ! pFnCaHControlPointBShow )
		pFnCaHControlPointBShow = (UFunction*) UObject::GObjObjects()->Data[ 53625 ];

	UGfxTrHud_execCaHControlPointBShow_Parms CaHControlPointBShow_Parms;
	CaHControlPointBShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHControlPointBShow, &CaHControlPointBShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHControlPointAShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHControlPointAShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHControlPointAShow = NULL;

	if ( ! pFnCaHControlPointAShow )
		pFnCaHControlPointAShow = (UFunction*) UObject::GObjObjects()->Data[ 53623 ];

	UGfxTrHud_execCaHControlPointAShow_Parms CaHControlPointAShow_Parms;
	CaHControlPointAShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHControlPointAShow, &CaHControlPointAShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.CaHStatsShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::CaHStatsShow ( unsigned long bVisible )
{
	static UFunction* pFnCaHStatsShow = NULL;

	if ( ! pFnCaHStatsShow )
		pFnCaHStatsShow = (UFunction*) UObject::GObjObjects()->Data[ 53621 ];

	UGfxTrHud_execCaHStatsShow_Parms CaHStatsShow_Parms;
	CaHStatsShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnCaHStatsShow, &CaHStatsShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.DaDUpdateEnemyStats
// [0x00020002] 
// Parameters infos:
// int                            bGenOnline                     ( CPF_Parm )
// struct FString                 RemainingGenTime               ( CPF_Parm | CPF_NeedCtorLink )
// int                            CapAOnline                     ( CPF_Parm )
// int                            CapBOnline                     ( CPF_Parm )
// int                            CapCOnline                     ( CPF_Parm )
// int                            CoreHealth                     ( CPF_Parm )

void UGfxTrHud::DaDUpdateEnemyStats ( int bGenOnline, struct FString RemainingGenTime, int CapAOnline, int CapBOnline, int CapCOnline, int CoreHealth )
{
	static UFunction* pFnDaDUpdateEnemyStats = NULL;

	if ( ! pFnDaDUpdateEnemyStats )
		pFnDaDUpdateEnemyStats = (UFunction*) UObject::GObjObjects()->Data[ 53614 ];

	UGfxTrHud_execDaDUpdateEnemyStats_Parms DaDUpdateEnemyStats_Parms;
	DaDUpdateEnemyStats_Parms.bGenOnline = bGenOnline;
	memcpy ( &DaDUpdateEnemyStats_Parms.RemainingGenTime, &RemainingGenTime, 0xC );
	DaDUpdateEnemyStats_Parms.CapAOnline = CapAOnline;
	DaDUpdateEnemyStats_Parms.CapBOnline = CapBOnline;
	DaDUpdateEnemyStats_Parms.CapCOnline = CapCOnline;
	DaDUpdateEnemyStats_Parms.CoreHealth = CoreHealth;

	this->ProcessEvent ( pFnDaDUpdateEnemyStats, &DaDUpdateEnemyStats_Parms, NULL );
};

// Function TribesGame.GfxTrHud.DaDUpdateFriendlyStats
// [0x00020002] 
// Parameters infos:
// int                            bGenOnline                     ( CPF_Parm )
// struct FString                 RemainingGenTime               ( CPF_Parm | CPF_NeedCtorLink )
// int                            CapAOnline                     ( CPF_Parm )
// int                            CapBOnline                     ( CPF_Parm )
// int                            CapCOnline                     ( CPF_Parm )
// int                            CoreHealth                     ( CPF_Parm )

void UGfxTrHud::DaDUpdateFriendlyStats ( int bGenOnline, struct FString RemainingGenTime, int CapAOnline, int CapBOnline, int CapCOnline, int CoreHealth )
{
	static UFunction* pFnDaDUpdateFriendlyStats = NULL;

	if ( ! pFnDaDUpdateFriendlyStats )
		pFnDaDUpdateFriendlyStats = (UFunction*) UObject::GObjObjects()->Data[ 53607 ];

	UGfxTrHud_execDaDUpdateFriendlyStats_Parms DaDUpdateFriendlyStats_Parms;
	DaDUpdateFriendlyStats_Parms.bGenOnline = bGenOnline;
	memcpy ( &DaDUpdateFriendlyStats_Parms.RemainingGenTime, &RemainingGenTime, 0xC );
	DaDUpdateFriendlyStats_Parms.CapAOnline = CapAOnline;
	DaDUpdateFriendlyStats_Parms.CapBOnline = CapBOnline;
	DaDUpdateFriendlyStats_Parms.CapCOnline = CapCOnline;
	DaDUpdateFriendlyStats_Parms.CoreHealth = CoreHealth;

	this->ProcessEvent ( pFnDaDUpdateFriendlyStats, &DaDUpdateFriendlyStats_Parms, NULL );
};

// Function TribesGame.GfxTrHud.DaDStatsShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::DaDStatsShow ( unsigned long bVisible )
{
	static UFunction* pFnDaDStatsShow = NULL;

	if ( ! pFnDaDStatsShow )
		pFnDaDStatsShow = (UFunction*) UObject::GObjObjects()->Data[ 53605 ];

	UGfxTrHud_execDaDStatsShow_Parms DaDStatsShow_Parms;
	DaDStatsShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnDaDStatsShow, &DaDStatsShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_EnemyArenaLivesUpdate
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGfxTrHud::ASC_EnemyArenaLivesUpdate ( int val )
{
	static UFunction* pFnASC_EnemyArenaLivesUpdate = NULL;

	if ( ! pFnASC_EnemyArenaLivesUpdate )
		pFnASC_EnemyArenaLivesUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53603 ];

	UGfxTrHud_execASC_EnemyArenaLivesUpdate_Parms ASC_EnemyArenaLivesUpdate_Parms;
	ASC_EnemyArenaLivesUpdate_Parms.val = val;

	this->ProcessEvent ( pFnASC_EnemyArenaLivesUpdate, &ASC_EnemyArenaLivesUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_FriendlyArenaLivesUpdate
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGfxTrHud::ASC_FriendlyArenaLivesUpdate ( int val )
{
	static UFunction* pFnASC_FriendlyArenaLivesUpdate = NULL;

	if ( ! pFnASC_FriendlyArenaLivesUpdate )
		pFnASC_FriendlyArenaLivesUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53601 ];

	UGfxTrHud_execASC_FriendlyArenaLivesUpdate_Parms ASC_FriendlyArenaLivesUpdate_Parms;
	ASC_FriendlyArenaLivesUpdate_Parms.val = val;

	this->ProcessEvent ( pFnASC_FriendlyArenaLivesUpdate, &ASC_FriendlyArenaLivesUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsUpdateTeamScore
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::ArenaStatsUpdateTeamScore ( int Team, int Score )
{
	static UFunction* pFnArenaStatsUpdateTeamScore = NULL;

	if ( ! pFnArenaStatsUpdateTeamScore )
		pFnArenaStatsUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 53598 ];

	UGfxTrHud_execArenaStatsUpdateTeamScore_Parms ArenaStatsUpdateTeamScore_Parms;
	ArenaStatsUpdateTeamScore_Parms.Team = Team;
	ArenaStatsUpdateTeamScore_Parms.Score = Score;

	this->ProcessEvent ( pFnArenaStatsUpdateTeamScore, &ArenaStatsUpdateTeamScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_EnemyArenaPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ASC_EnemyArenaPointBreak ( struct FString val )
{
	static UFunction* pFnASC_EnemyArenaPointBreak = NULL;

	if ( ! pFnASC_EnemyArenaPointBreak )
		pFnASC_EnemyArenaPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53596 ];

	UGfxTrHud_execASC_EnemyArenaPointBreak_Parms ASC_EnemyArenaPointBreak_Parms;
	memcpy ( &ASC_EnemyArenaPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnASC_EnemyArenaPointBreak, &ASC_EnemyArenaPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_FriendlyArenaPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ASC_FriendlyArenaPointBreak ( struct FString val )
{
	static UFunction* pFnASC_FriendlyArenaPointBreak = NULL;

	if ( ! pFnASC_FriendlyArenaPointBreak )
		pFnASC_FriendlyArenaPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53594 ];

	UGfxTrHud_execASC_FriendlyArenaPointBreak_Parms ASC_FriendlyArenaPointBreak_Parms;
	memcpy ( &ASC_FriendlyArenaPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnASC_FriendlyArenaPointBreak, &ASC_FriendlyArenaPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsPointBreak
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ArenaStatsPointBreak ( int Team, struct FString val )
{
	static UFunction* pFnArenaStatsPointBreak = NULL;

	if ( ! pFnArenaStatsPointBreak )
		pFnArenaStatsPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53591 ];

	UGfxTrHud_execArenaStatsPointBreak_Parms ArenaStatsPointBreak_Parms;
	ArenaStatsPointBreak_Parms.Team = Team;
	memcpy ( &ArenaStatsPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnArenaStatsPointBreak, &ArenaStatsPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::ArenaStatsShow ( unsigned long bVisible )
{
	static UFunction* pFnArenaStatsShow = NULL;

	if ( ! pFnArenaStatsShow )
		pFnArenaStatsShow = (UFunction*) UObject::GObjObjects()->Data[ 53589 ];

	UGfxTrHud_execArenaStatsShow_Parms ArenaStatsShow_Parms;
	ArenaStatsShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnArenaStatsShow, &ArenaStatsShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsUpdateEnemyRoundScore
// [0x00020002] 
// Parameters infos:
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::ArenaStatsUpdateEnemyRoundScore ( int Score )
{
	static UFunction* pFnArenaStatsUpdateEnemyRoundScore = NULL;

	if ( ! pFnArenaStatsUpdateEnemyRoundScore )
		pFnArenaStatsUpdateEnemyRoundScore = (UFunction*) UObject::GObjObjects()->Data[ 53587 ];

	UGfxTrHud_execArenaStatsUpdateEnemyRoundScore_Parms ArenaStatsUpdateEnemyRoundScore_Parms;
	ArenaStatsUpdateEnemyRoundScore_Parms.Score = Score;

	this->ProcessEvent ( pFnArenaStatsUpdateEnemyRoundScore, &ArenaStatsUpdateEnemyRoundScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsUpdateFriendlyRoundScore
// [0x00020002] 
// Parameters infos:
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::ArenaStatsUpdateFriendlyRoundScore ( int Score )
{
	static UFunction* pFnArenaStatsUpdateFriendlyRoundScore = NULL;

	if ( ! pFnArenaStatsUpdateFriendlyRoundScore )
		pFnArenaStatsUpdateFriendlyRoundScore = (UFunction*) UObject::GObjObjects()->Data[ 53585 ];

	UGfxTrHud_execArenaStatsUpdateFriendlyRoundScore_Parms ArenaStatsUpdateFriendlyRoundScore_Parms;
	ArenaStatsUpdateFriendlyRoundScore_Parms.Score = Score;

	this->ProcessEvent ( pFnArenaStatsUpdateFriendlyRoundScore, &ArenaStatsUpdateFriendlyRoundScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsUpdateRoundCount
// [0x00020002] 
// Parameters infos:
// int                            RoundNum                       ( CPF_Parm )

void UGfxTrHud::ArenaStatsUpdateRoundCount ( int RoundNum )
{
	static UFunction* pFnArenaStatsUpdateRoundCount = NULL;

	if ( ! pFnArenaStatsUpdateRoundCount )
		pFnArenaStatsUpdateRoundCount = (UFunction*) UObject::GObjObjects()->Data[ 53583 ];

	UGfxTrHud_execArenaStatsUpdateRoundCount_Parms ArenaStatsUpdateRoundCount_Parms;
	ArenaStatsUpdateRoundCount_Parms.RoundNum = RoundNum;

	this->ProcessEvent ( pFnArenaStatsUpdateRoundCount, &ArenaStatsUpdateRoundCount_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaStatsUpdateTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ArenaStatsUpdateTime ( struct FString Time )
{
	static UFunction* pFnArenaStatsUpdateTime = NULL;

	if ( ! pFnArenaStatsUpdateTime )
		pFnArenaStatsUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53581 ];

	UGfxTrHud_execArenaStatsUpdateTime_Parms ArenaStatsUpdateTime_Parms;
	memcpy ( &ArenaStatsUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnArenaStatsUpdateTime, &ArenaStatsUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ArenaUpdateManGraphic
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )
// struct FString                 Path                           ( CPF_Parm | CPF_NeedCtorLink )
// int                            Index                          ( CPF_Parm )

void UGfxTrHud::ArenaUpdateManGraphic ( class UGFxObject* Obj, struct FString Path, int Index )
{
	static UFunction* pFnArenaUpdateManGraphic = NULL;

	if ( ! pFnArenaUpdateManGraphic )
		pFnArenaUpdateManGraphic = (UFunction*) UObject::GObjObjects()->Data[ 53577 ];

	UGfxTrHud_execArenaUpdateManGraphic_Parms ArenaUpdateManGraphic_Parms;
	ArenaUpdateManGraphic_Parms.Obj = Obj;
	memcpy ( &ArenaUpdateManGraphic_Parms.Path, &Path, 0xC );
	ArenaUpdateManGraphic_Parms.Index = Index;

	this->ProcessEvent ( pFnArenaUpdateManGraphic, &ArenaUpdateManGraphic_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamRabbitStatsShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::TeamRabbitStatsShow ( unsigned long bVisible )
{
	static UFunction* pFnTeamRabbitStatsShow = NULL;

	if ( ! pFnTeamRabbitStatsShow )
		pFnTeamRabbitStatsShow = (UFunction*) UObject::GObjObjects()->Data[ 53575 ];

	UGfxTrHud_execTeamRabbitStatsShow_Parms TeamRabbitStatsShow_Parms;
	TeamRabbitStatsShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnTeamRabbitStatsShow, &TeamRabbitStatsShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamRabbitStatsUpdateTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamRabbitStatsUpdateTime ( struct FString Time )
{
	static UFunction* pFnTeamRabbitStatsUpdateTime = NULL;

	if ( ! pFnTeamRabbitStatsUpdateTime )
		pFnTeamRabbitStatsUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53573 ];

	UGfxTrHud_execTeamRabbitStatsUpdateTime_Parms TeamRabbitStatsUpdateTime_Parms;
	memcpy ( &TeamRabbitStatsUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamRabbitStatsUpdateTime, &TeamRabbitStatsUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.HideNotification
// [0x00020002] 
// Parameters infos:

void UGfxTrHud::HideNotification ( )
{
	static UFunction* pFnHideNotification = NULL;

	if ( ! pFnHideNotification )
		pFnHideNotification = (UFunction*) UObject::GObjObjects()->Data[ 53572 ];

	UGfxTrHud_execHideNotification_Parms HideNotification_Parms;

	this->ProcessEvent ( pFnHideNotification, &HideNotification_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowNotification
// [0x00020002] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Val2                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ShowNotification ( struct FString val, struct FString Val2 )
{
	static UFunction* pFnShowNotification = NULL;

	if ( ! pFnShowNotification )
		pFnShowNotification = (UFunction*) UObject::GObjObjects()->Data[ 53569 ];

	UGfxTrHud_execShowNotification_Parms ShowNotification_Parms;
	memcpy ( &ShowNotification_Parms.val, &val, 0xC );
	memcpy ( &ShowNotification_Parms.Val2, &Val2, 0xC );

	this->ProcessEvent ( pFnShowNotification, &ShowNotification_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_EnemyTDMPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ASC_EnemyTDMPointBreak ( struct FString val )
{
	static UFunction* pFnASC_EnemyTDMPointBreak = NULL;

	if ( ! pFnASC_EnemyTDMPointBreak )
		pFnASC_EnemyTDMPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53567 ];

	UGfxTrHud_execASC_EnemyTDMPointBreak_Parms ASC_EnemyTDMPointBreak_Parms;
	memcpy ( &ASC_EnemyTDMPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnASC_EnemyTDMPointBreak, &ASC_EnemyTDMPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_FriendlyTDMPointBreak
// [0x00020002] 
// Parameters infos:
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ASC_FriendlyTDMPointBreak ( struct FString val )
{
	static UFunction* pFnASC_FriendlyTDMPointBreak = NULL;

	if ( ! pFnASC_FriendlyTDMPointBreak )
		pFnASC_FriendlyTDMPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53565 ];

	UGfxTrHud_execASC_FriendlyTDMPointBreak_Parms ASC_FriendlyTDMPointBreak_Parms;
	memcpy ( &ASC_FriendlyTDMPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnASC_FriendlyTDMPointBreak, &ASC_FriendlyTDMPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamRabbitStatsPointBreak
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// struct FString                 val                            ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamRabbitStatsPointBreak ( int Team, struct FString val )
{
	static UFunction* pFnTeamRabbitStatsPointBreak = NULL;

	if ( ! pFnTeamRabbitStatsPointBreak )
		pFnTeamRabbitStatsPointBreak = (UFunction*) UObject::GObjObjects()->Data[ 53562 ];

	UGfxTrHud_execTeamRabbitStatsPointBreak_Parms TeamRabbitStatsPointBreak_Parms;
	TeamRabbitStatsPointBreak_Parms.Team = Team;
	memcpy ( &TeamRabbitStatsPointBreak_Parms.val, &val, 0xC );

	this->ProcessEvent ( pFnTeamRabbitStatsPointBreak, &TeamRabbitStatsPointBreak_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_EnemyTDMScoreUpdate
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGfxTrHud::ASC_EnemyTDMScoreUpdate ( int val )
{
	static UFunction* pFnASC_EnemyTDMScoreUpdate = NULL;

	if ( ! pFnASC_EnemyTDMScoreUpdate )
		pFnASC_EnemyTDMScoreUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53560 ];

	UGfxTrHud_execASC_EnemyTDMScoreUpdate_Parms ASC_EnemyTDMScoreUpdate_Parms;
	ASC_EnemyTDMScoreUpdate_Parms.val = val;

	this->ProcessEvent ( pFnASC_EnemyTDMScoreUpdate, &ASC_EnemyTDMScoreUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ASC_FriendlyTDMScoreUpdate
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGfxTrHud::ASC_FriendlyTDMScoreUpdate ( int val )
{
	static UFunction* pFnASC_FriendlyTDMScoreUpdate = NULL;

	if ( ! pFnASC_FriendlyTDMScoreUpdate )
		pFnASC_FriendlyTDMScoreUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53558 ];

	UGfxTrHud_execASC_FriendlyTDMScoreUpdate_Parms ASC_FriendlyTDMScoreUpdate_Parms;
	ASC_FriendlyTDMScoreUpdate_Parms.val = val;

	this->ProcessEvent ( pFnASC_FriendlyTDMScoreUpdate, &ASC_FriendlyTDMScoreUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamRabbitStatsUpdateTeamScore
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::TeamRabbitStatsUpdateTeamScore ( int Team, int Score )
{
	static UFunction* pFnTeamRabbitStatsUpdateTeamScore = NULL;

	if ( ! pFnTeamRabbitStatsUpdateTeamScore )
		pFnTeamRabbitStatsUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 53555 ];

	UGfxTrHud_execTeamRabbitStatsUpdateTeamScore_Parms TeamRabbitStatsUpdateTeamScore_Parms;
	TeamRabbitStatsUpdateTeamScore_Parms.Team = Team;
	TeamRabbitStatsUpdateTeamScore_Parms.Score = Score;

	this->ProcessEvent ( pFnTeamRabbitStatsUpdateTeamScore, &TeamRabbitStatsUpdateTeamScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamRabbitStatsUpdateFlagStatus
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )

void UGfxTrHud::TeamRabbitStatsUpdateFlagStatus ( int Team )
{
	static UFunction* pFnTeamRabbitStatsUpdateFlagStatus = NULL;

	if ( ! pFnTeamRabbitStatsUpdateFlagStatus )
		pFnTeamRabbitStatsUpdateFlagStatus = (UFunction*) UObject::GObjObjects()->Data[ 53553 ];

	UGfxTrHud_execTeamRabbitStatsUpdateFlagStatus_Parms TeamRabbitStatsUpdateFlagStatus_Parms;
	TeamRabbitStatsUpdateFlagStatus_Parms.Team = Team;

	this->ProcessEvent ( pFnTeamRabbitStatsUpdateFlagStatus, &TeamRabbitStatsUpdateFlagStatus_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::TeamCTFStatsShow ( unsigned long bVisible )
{
	static UFunction* pFnTeamCTFStatsShow = NULL;

	if ( ! pFnTeamCTFStatsShow )
		pFnTeamCTFStatsShow = (UFunction*) UObject::GObjObjects()->Data[ 53550 ];

	UGfxTrHud_execTeamCTFStatsShow_Parms TeamCTFStatsShow_Parms;
	TeamCTFStatsShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnTeamCTFStatsShow, &TeamCTFStatsShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamCTFStatsUpdateTime ( struct FString Time )
{
	static UFunction* pFnTeamCTFStatsUpdateTime = NULL;

	if ( ! pFnTeamCTFStatsUpdateTime )
		pFnTeamCTFStatsUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53548 ];

	UGfxTrHud_execTeamCTFStatsUpdateTime_Parms TeamCTFStatsUpdateTime_Parms;
	memcpy ( &TeamCTFStatsUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamCTFStatsUpdateTime, &TeamCTFStatsUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateTeamScore
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void UGfxTrHud::TeamCTFStatsUpdateTeamScore ( int Team, int Score )
{
	static UFunction* pFnTeamCTFStatsUpdateTeamScore = NULL;

	if ( ! pFnTeamCTFStatsUpdateTeamScore )
		pFnTeamCTFStatsUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 53545 ];

	UGfxTrHud_execTeamCTFStatsUpdateTeamScore_Parms TeamCTFStatsUpdateTeamScore_Parms;
	TeamCTFStatsUpdateTeamScore_Parms.Team = Team;
	TeamCTFStatsUpdateTeamScore_Parms.Score = Score;

	this->ProcessEvent ( pFnTeamCTFStatsUpdateTeamScore, &TeamCTFStatsUpdateTeamScore_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateFlagStatus
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// unsigned long                  bAtBase                        ( CPF_Parm )

void UGfxTrHud::TeamCTFStatsUpdateFlagStatus ( int Team, unsigned long bAtBase )
{
	static UFunction* pFnTeamCTFStatsUpdateFlagStatus = NULL;

	if ( ! pFnTeamCTFStatsUpdateFlagStatus )
		pFnTeamCTFStatsUpdateFlagStatus = (UFunction*) UObject::GObjObjects()->Data[ 53542 ];

	UGfxTrHud_execTeamCTFStatsUpdateFlagStatus_Parms TeamCTFStatsUpdateFlagStatus_Parms;
	TeamCTFStatsUpdateFlagStatus_Parms.Team = Team;
	TeamCTFStatsUpdateFlagStatus_Parms.bAtBase = bAtBase;

	this->ProcessEvent ( pFnTeamCTFStatsUpdateFlagStatus, &TeamCTFStatsUpdateFlagStatus_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateFlagReturnTime
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamCTFStatsUpdateFlagReturnTime ( int Team, struct FString Time )
{
	static UFunction* pFnTeamCTFStatsUpdateFlagReturnTime = NULL;

	if ( ! pFnTeamCTFStatsUpdateFlagReturnTime )
		pFnTeamCTFStatsUpdateFlagReturnTime = (UFunction*) UObject::GObjObjects()->Data[ 53539 ];

	UGfxTrHud_execTeamCTFStatsUpdateFlagReturnTime_Parms TeamCTFStatsUpdateFlagReturnTime_Parms;
	TeamCTFStatsUpdateFlagReturnTime_Parms.Team = Team;
	memcpy ( &TeamCTFStatsUpdateFlagReturnTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamCTFStatsUpdateFlagReturnTime, &TeamCTFStatsUpdateFlagReturnTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateGeneratorTimer
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::TeamCTFStatsUpdateGeneratorTimer ( int Team, struct FString Time )
{
	static UFunction* pFnTeamCTFStatsUpdateGeneratorTimer = NULL;

	if ( ! pFnTeamCTFStatsUpdateGeneratorTimer )
		pFnTeamCTFStatsUpdateGeneratorTimer = (UFunction*) UObject::GObjObjects()->Data[ 53536 ];

	UGfxTrHud_execTeamCTFStatsUpdateGeneratorTimer_Parms TeamCTFStatsUpdateGeneratorTimer_Parms;
	TeamCTFStatsUpdateGeneratorTimer_Parms.Team = Team;
	memcpy ( &TeamCTFStatsUpdateGeneratorTimer_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamCTFStatsUpdateGeneratorTimer, &TeamCTFStatsUpdateGeneratorTimer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamCTFStatsUpdateGeneratorStatus
// [0x00020002] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )
// unsigned long                  bPowered                       ( CPF_Parm )

void UGfxTrHud::TeamCTFStatsUpdateGeneratorStatus ( int Team, unsigned long bPowered )
{
	static UFunction* pFnTeamCTFStatsUpdateGeneratorStatus = NULL;

	if ( ! pFnTeamCTFStatsUpdateGeneratorStatus )
		pFnTeamCTFStatsUpdateGeneratorStatus = (UFunction*) UObject::GObjObjects()->Data[ 53533 ];

	UGfxTrHud_execTeamCTFStatsUpdateGeneratorStatus_Parms TeamCTFStatsUpdateGeneratorStatus_Parms;
	TeamCTFStatsUpdateGeneratorStatus_Parms.Team = Team;
	TeamCTFStatsUpdateGeneratorStatus_Parms.bPowered = bPowered;

	this->ProcessEvent ( pFnTeamCTFStatsUpdateGeneratorStatus, &TeamCTFStatsUpdateGeneratorStatus_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitLeaderboardUpdateTime
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::RabbitLeaderboardUpdateTime ( struct FString Time )
{
	static UFunction* pFnRabbitLeaderboardUpdateTime = NULL;

	if ( ! pFnRabbitLeaderboardUpdateTime )
		pFnRabbitLeaderboardUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 53266 ];

	UGfxTrHud_execRabbitLeaderboardUpdateTime_Parms RabbitLeaderboardUpdateTime_Parms;
	memcpy ( &RabbitLeaderboardUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnRabbitLeaderboardUpdateTime, &RabbitLeaderboardUpdateTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitLeaderboardUpdateSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Score                          ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::RabbitLeaderboardUpdateSlot ( int Index, struct FString PlayerName, struct FString Score )
{
	static UFunction* pFnRabbitLeaderboardUpdateSlot = NULL;

	if ( ! pFnRabbitLeaderboardUpdateSlot )
		pFnRabbitLeaderboardUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 53265 ];

	UGfxTrHud_execRabbitLeaderboardUpdateSlot_Parms RabbitLeaderboardUpdateSlot_Parms;
	RabbitLeaderboardUpdateSlot_Parms.Index = Index;
	memcpy ( &RabbitLeaderboardUpdateSlot_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &RabbitLeaderboardUpdateSlot_Parms.Score, &Score, 0xC );

	this->ProcessEvent ( pFnRabbitLeaderboardUpdateSlot, &RabbitLeaderboardUpdateSlot_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitLeaderboardShow
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::RabbitLeaderboardShow ( unsigned long bVisible )
{
	static UFunction* pFnRabbitLeaderboardShow = NULL;

	if ( ! pFnRabbitLeaderboardShow )
		pFnRabbitLeaderboardShow = (UFunction*) UObject::GObjObjects()->Data[ 53527 ];

	UGfxTrHud_execRabbitLeaderboardShow_Parms RabbitLeaderboardShow_Parms;
	RabbitLeaderboardShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnRabbitLeaderboardShow, &RabbitLeaderboardShow_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitScoreboardActivePlayer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::RabbitScoreboardActivePlayer ( int Index, unsigned long bVisible )
{
	static UFunction* pFnRabbitScoreboardActivePlayer = NULL;

	if ( ! pFnRabbitScoreboardActivePlayer )
		pFnRabbitScoreboardActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 53524 ];

	UGfxTrHud_execRabbitScoreboardActivePlayer_Parms RabbitScoreboardActivePlayer_Parms;
	RabbitScoreboardActivePlayer_Parms.Index = Index;
	RabbitScoreboardActivePlayer_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnRabbitScoreboardActivePlayer, &RabbitScoreboardActivePlayer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.RabbitScoreboardUpdateSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Score                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Kills                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Assists                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Ping                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassAbb                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )
// int                            RankIcon                       ( CPF_Parm )

void UGfxTrHud::RabbitScoreboardUpdateSlot ( int Index, struct FString PlayerName, struct FString Score, struct FString Kills, struct FString Assists, struct FString Ping, struct FString ClassAbb, int Rank, int RankIcon )
{
	static UFunction* pFnRabbitScoreboardUpdateSlot = NULL;

	if ( ! pFnRabbitScoreboardUpdateSlot )
		pFnRabbitScoreboardUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 53514 ];

	UGfxTrHud_execRabbitScoreboardUpdateSlot_Parms RabbitScoreboardUpdateSlot_Parms;
	RabbitScoreboardUpdateSlot_Parms.Index = Index;
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Score, &Score, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Kills, &Kills, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Assists, &Assists, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Ping, &Ping, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.ClassAbb, &ClassAbb, 0xC );
	RabbitScoreboardUpdateSlot_Parms.Rank = Rank;
	RabbitScoreboardUpdateSlot_Parms.RankIcon = RankIcon;

	this->ProcessEvent ( pFnRabbitScoreboardUpdateSlot, &RabbitScoreboardUpdateSlot_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TeamScoreboardUpdateSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Score                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Kills                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Assists                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Ping                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassAbb                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )
// int                            RankIcon                       ( CPF_Parm )

void UGfxTrHud::TeamScoreboardUpdateSlot ( int Index, struct FString PlayerName, struct FString Score, struct FString Kills, struct FString Assists, struct FString Ping, struct FString ClassAbb, int Rank, int RankIcon )
{
	static UFunction* pFnTeamScoreboardUpdateSlot = NULL;

	if ( ! pFnTeamScoreboardUpdateSlot )
		pFnTeamScoreboardUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 53504 ];

	UGfxTrHud_execTeamScoreboardUpdateSlot_Parms TeamScoreboardUpdateSlot_Parms;
	TeamScoreboardUpdateSlot_Parms.Index = Index;
	memcpy ( &TeamScoreboardUpdateSlot_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Score, &Score, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Kills, &Kills, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Assists, &Assists, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Ping, &Ping, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.ClassAbb, &ClassAbb, 0xC );
	TeamScoreboardUpdateSlot_Parms.Rank = Rank;
	TeamScoreboardUpdateSlot_Parms.RankIcon = RankIcon;

	this->ProcessEvent ( pFnTeamScoreboardUpdateSlot, &TeamScoreboardUpdateSlot_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetOwnership
// [0x00020002] 
// Parameters infos:

void UGfxTrHud::SetOwnership ( )
{
	static UFunction* pFnSetOwnership = NULL;

	if ( ! pFnSetOwnership )
		pFnSetOwnership = (UFunction*) UObject::GObjObjects()->Data[ 53503 ];

	UGfxTrHud_execSetOwnership_Parms SetOwnership_Parms;

	this->ProcessEvent ( pFnSetOwnership, &SetOwnership_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateEnergy
// [0x00420002] 
// Parameters infos:
// float                          NewEnergy                      ( CPF_Parm )
// float                          EnergyMax                      ( CPF_Parm )
// struct FHeEnDisplay            Info                           ( CPF_Parm | CPF_OutParm )

void UGfxTrHud::UpdateEnergy ( float NewEnergy, float EnergyMax, struct FHeEnDisplay* Info )
{
	static UFunction* pFnUpdateEnergy = NULL;

	if ( ! pFnUpdateEnergy )
		pFnUpdateEnergy = (UFunction*) UObject::GObjObjects()->Data[ 53499 ];

	UGfxTrHud_execUpdateEnergy_Parms UpdateEnergy_Parms;
	UpdateEnergy_Parms.NewEnergy = NewEnergy;
	UpdateEnergy_Parms.EnergyMax = EnergyMax;

	this->ProcessEvent ( pFnUpdateEnergy, &UpdateEnergy_Parms, NULL );

	if ( Info )
		memcpy ( Info, &UpdateEnergy_Parms.Info, 0x24 );
};

// Function TribesGame.GfxTrHud.TickGhostHealth
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGfxTrHud::TickGhostHealth ( float DeltaTime )
{
	static UFunction* pFnTickGhostHealth = NULL;

	if ( ! pFnTickGhostHealth )
		pFnTickGhostHealth = (UFunction*) UObject::GObjObjects()->Data[ 53496 ];

	UGfxTrHud_execTickGhostHealth_Parms TickGhostHealth_Parms;
	TickGhostHealth_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickGhostHealth, &TickGhostHealth_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateHealth
// [0x00420002] 
// Parameters infos:
// float                          NewHealth                      ( CPF_Parm )
// float                          HealthMax                      ( CPF_Parm )
// struct FHeEnDisplay            Info                           ( CPF_Parm | CPF_OutParm )

void UGfxTrHud::UpdateHealth ( float NewHealth, float HealthMax, struct FHeEnDisplay* Info )
{
	static UFunction* pFnUpdateHealth = NULL;

	if ( ! pFnUpdateHealth )
		pFnUpdateHealth = (UFunction*) UObject::GObjObjects()->Data[ 53490 ];

	UGfxTrHud_execUpdateHealth_Parms UpdateHealth_Parms;
	UpdateHealth_Parms.NewHealth = NewHealth;
	UpdateHealth_Parms.HealthMax = HealthMax;

	this->ProcessEvent ( pFnUpdateHealth, &UpdateHealth_Parms, NULL );

	if ( Info )
		memcpy ( Info, &UpdateHealth_Parms.Info, 0x24 );
};

// Function TribesGame.GfxTrHud.DisplayHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 HitDir                         ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void UGfxTrHud::DisplayHit ( struct FVector HitDir, int Damage, class UClass* DamageType )
{
	static UFunction* pFnDisplayHit = NULL;

	if ( ! pFnDisplayHit )
		pFnDisplayHit = (UFunction*) UObject::GObjObjects()->Data[ 53476 ];

	UGfxTrHud_execDisplayHit_Parms DisplayHit_Parms;
	memcpy ( &DisplayHit_Parms.HitDir, &HitDir, 0xC );
	DisplayHit_Parms.Damage = Damage;
	DisplayHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnDisplayHit, &DisplayHit_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ApplyNearDeathEffect
// [0x00020002] 
// Parameters infos:
// float                          Value                          ( CPF_Parm )

void UGfxTrHud::ApplyNearDeathEffect ( float Value )
{
	static UFunction* pFnApplyNearDeathEffect = NULL;

	if ( ! pFnApplyNearDeathEffect )
		pFnApplyNearDeathEffect = (UFunction*) UObject::GObjObjects()->Data[ 53474 ];

	UGfxTrHud_execApplyNearDeathEffect_Parms ApplyNearDeathEffect_Parms;
	ApplyNearDeathEffect_Parms.Value = Value;

	this->ProcessEvent ( pFnApplyNearDeathEffect, &ApplyNearDeathEffect_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ApplyDirectionalDamageEffect
// [0x00020002] 
// Parameters infos:
// int                            EffectIndex                    ( CPF_Parm )
// float                          addValue                       ( CPF_Parm )

void UGfxTrHud::ApplyDirectionalDamageEffect ( int EffectIndex, float addValue )
{
	static UFunction* pFnApplyDirectionalDamageEffect = NULL;

	if ( ! pFnApplyDirectionalDamageEffect )
		pFnApplyDirectionalDamageEffect = (UFunction*) UObject::GObjObjects()->Data[ 53470 ];

	UGfxTrHud_execApplyDirectionalDamageEffect_Parms ApplyDirectionalDamageEffect_Parms;
	ApplyDirectionalDamageEffect_Parms.EffectIndex = EffectIndex;
	ApplyDirectionalDamageEffect_Parms.addValue = addValue;

	this->ProcessEvent ( pFnApplyDirectionalDamageEffect, &ApplyDirectionalDamageEffect_Parms, NULL );
};

// Function TribesGame.GfxTrHud.PlayDamageEffectWithNoDirectionalIndicator
// [0x00020002] 
// Parameters infos:
// float                          Amount                         ( CPF_Parm )

void UGfxTrHud::PlayDamageEffectWithNoDirectionalIndicator ( float Amount )
{
	static UFunction* pFnPlayDamageEffectWithNoDirectionalIndicator = NULL;

	if ( ! pFnPlayDamageEffectWithNoDirectionalIndicator )
		pFnPlayDamageEffectWithNoDirectionalIndicator = (UFunction*) UObject::GObjObjects()->Data[ 53468 ];

	UGfxTrHud_execPlayDamageEffectWithNoDirectionalIndicator_Parms PlayDamageEffectWithNoDirectionalIndicator_Parms;
	PlayDamageEffectWithNoDirectionalIndicator_Parms.Amount = Amount;

	this->ProcessEvent ( pFnPlayDamageEffectWithNoDirectionalIndicator, &PlayDamageEffectWithNoDirectionalIndicator_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ChangeDamageEffectParameter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ParamName                      ( CPF_Parm )
// float                          changeValue                    ( CPF_Parm )

bool UGfxTrHud::ChangeDamageEffectParameter ( struct FName ParamName, float changeValue )
{
	static UFunction* pFnChangeDamageEffectParameter = NULL;

	if ( ! pFnChangeDamageEffectParameter )
		pFnChangeDamageEffectParameter = (UFunction*) UObject::GObjObjects()->Data[ 53463 ];

	UGfxTrHud_execChangeDamageEffectParameter_Parms ChangeDamageEffectParameter_Parms;
	memcpy ( &ChangeDamageEffectParameter_Parms.ParamName, &ParamName, 0x8 );
	ChangeDamageEffectParameter_Parms.changeValue = changeValue;

	this->ProcessEvent ( pFnChangeDamageEffectParameter, &ChangeDamageEffectParameter_Parms, NULL );

	return ChangeDamageEffectParameter_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.TickDirectionalDamageEffect
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGfxTrHud::TickDirectionalDamageEffect ( float DeltaTime )
{
	static UFunction* pFnTickDirectionalDamageEffect = NULL;

	if ( ! pFnTickDirectionalDamageEffect )
		pFnTickDirectionalDamageEffect = (UFunction*) UObject::GObjObjects()->Data[ 53458 ];

	UGfxTrHud_execTickDirectionalDamageEffect_Parms TickDirectionalDamageEffect_Parms;
	TickDirectionalDamageEffect_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickDirectionalDamageEffect, &TickDirectionalDamageEffect_Parms, NULL );
};

// Function TribesGame.GfxTrHud.TickHud
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UGfxTrHud::TickHud ( float DeltaTime )
{
	static UFunction* pFnTickHud = NULL;

	if ( ! pFnTickHud )
		pFnTickHud = (UFunction*) UObject::GObjObjects()->Data[ 53403 ];

	UGfxTrHud_execTickHud_Parms TickHud_Parms;
	TickHud_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTickHud, &TickHud_Parms, NULL );
};

// Function TribesGame.GfxTrHud.GetFrameNumberForVehicle
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrVehicle*              V                              ( CPF_Parm )

int UGfxTrHud::GetFrameNumberForVehicle ( class ATrVehicle* V )
{
	static UFunction* pFnGetFrameNumberForVehicle = NULL;

	if ( ! pFnGetFrameNumberForVehicle )
		pFnGetFrameNumberForVehicle = (UFunction*) UObject::GObjObjects()->Data[ 53400 ];

	UGfxTrHud_execGetFrameNumberForVehicle_Parms GetFrameNumberForVehicle_Parms;
	GetFrameNumberForVehicle_Parms.V = V;

	this->ProcessEvent ( pFnGetFrameNumberForVehicle, &GetFrameNumberForVehicle_Parms, NULL );

	return GetFrameNumberForVehicle_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.ConfigureSkiSpeedSteps
// [0x00020002] 
// Parameters infos:
// float                          SoftCap                        ( CPF_Parm )

void UGfxTrHud::ConfigureSkiSpeedSteps ( float SoftCap )
{
	static UFunction* pFnConfigureSkiSpeedSteps = NULL;

	if ( ! pFnConfigureSkiSpeedSteps )
		pFnConfigureSkiSpeedSteps = (UFunction*) UObject::GObjObjects()->Data[ 53396 ];

	UGfxTrHud_execConfigureSkiSpeedSteps_Parms ConfigureSkiSpeedSteps_Parms;
	ConfigureSkiSpeedSteps_Parms.SoftCap = SoftCap;

	this->ProcessEvent ( pFnConfigureSkiSpeedSteps, &ConfigureSkiSpeedSteps_Parms, NULL );
};

// Function TribesGame.GfxTrHud.GetSkiSpeedStep
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          Speed                          ( CPF_Parm )

int UGfxTrHud::GetSkiSpeedStep ( float Speed )
{
	static UFunction* pFnGetSkiSpeedStep = NULL;

	if ( ! pFnGetSkiSpeedStep )
		pFnGetSkiSpeedStep = (UFunction*) UObject::GObjObjects()->Data[ 53392 ];

	UGfxTrHud_execGetSkiSpeedStep_Parms GetSkiSpeedStep_Parms;
	GetSkiSpeedStep_Parms.Speed = Speed;

	this->ProcessEvent ( pFnGetSkiSpeedStep, &GetSkiSpeedStep_Parms, NULL );

	return GetSkiSpeedStep_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.ForceHealthUpdate
// [0x00020002] 
// Parameters infos:
// int                            NewHealth                      ( CPF_Parm )
// int                            NewMaxHealth                   ( CPF_Parm )

void UGfxTrHud::ForceHealthUpdate ( int NewHealth, int NewMaxHealth )
{
	static UFunction* pFnForceHealthUpdate = NULL;

	if ( ! pFnForceHealthUpdate )
		pFnForceHealthUpdate = (UFunction*) UObject::GObjObjects()->Data[ 53389 ];

	UGfxTrHud_execForceHealthUpdate_Parms ForceHealthUpdate_Parms;
	ForceHealthUpdate_Parms.NewHealth = NewHealth;
	ForceHealthUpdate_Parms.NewMaxHealth = NewMaxHealth;

	this->ProcessEvent ( pFnForceHealthUpdate, &ForceHealthUpdate_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ClearStats
// [0x00824002] 
// Parameters infos:
// unsigned long                  clearScores                    ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::ClearStats ( unsigned long clearScores )
{
	static UFunction* pFnClearStats = NULL;

	if ( ! pFnClearStats )
		pFnClearStats = (UFunction*) UObject::GObjObjects()->Data[ 53386 ];

	UGfxTrHud_execClearStats_Parms ClearStats_Parms;
	ClearStats_Parms.clearScores = clearScores;

	this->ProcessEvent ( pFnClearStats, &ClearStats_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetAmmoCountTF
// [0x00020002] 
// Parameters infos:
// class AWeapon*                 Wep                            ( CPF_Parm )
// struct FString                 Ammo                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetAmmoCountTF ( class AWeapon* Wep, struct FString Ammo )
{
	static UFunction* pFnSetAmmoCountTF = NULL;

	if ( ! pFnSetAmmoCountTF )
		pFnSetAmmoCountTF = (UFunction*) UObject::GObjObjects()->Data[ 53382 ];

	UGfxTrHud_execSetAmmoCountTF_Parms SetAmmoCountTF_Parms;
	SetAmmoCountTF_Parms.Wep = Wep;
	memcpy ( &SetAmmoCountTF_Parms.Ammo, &Ammo, 0xC );

	this->ProcessEvent ( pFnSetAmmoCountTF, &SetAmmoCountTF_Parms, NULL );
};

// Function TribesGame.GfxTrHud.registerHUDView
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              MovieClip                      ( CPF_Parm )
// unsigned long                  secondPass                     ( CPF_Parm )

void UGfxTrHud::registerHUDView ( class UGFxObject* MovieClip, unsigned long secondPass )
{
	static UFunction* pFnregisterHUDView = NULL;

	if ( ! pFnregisterHUDView )
		pFnregisterHUDView = (UFunction*) UObject::GObjObjects()->Data[ 53378 ];

	UGfxTrHud_execregisterHUDView_Parms registerHUDView_Parms;
	registerHUDView_Parms.MovieClip = MovieClip;
	registerHUDView_Parms.secondPass = secondPass;

	this->ProcessEvent ( pFnregisterHUDView, &registerHUDView_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateHUDCredits
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            changeAmount                   ( CPF_Parm )
// int                            newTotal                       ( CPF_Parm )

void UGfxTrHud::UpdateHUDCredits ( int changeAmount, int newTotal )
{
	static UFunction* pFnUpdateHUDCredits = NULL;

	if ( ! pFnUpdateHUDCredits )
		pFnUpdateHUDCredits = (UFunction*) UObject::GObjObjects()->Data[ 53375 ];

	UGfxTrHud_execUpdateHUDCredits_Parms UpdateHUDCredits_Parms;
	UpdateHUDCredits_Parms.changeAmount = changeAmount;
	UpdateHUDCredits_Parms.newTotal = newTotal;

	this->ProcessEvent ( pFnUpdateHUDCredits, &UpdateHUDCredits_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateRespawnTimer
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            TimeRemaining                  ( CPF_Parm )

void UGfxTrHud::UpdateRespawnTimer ( int TimeRemaining )
{
	static UFunction* pFnUpdateRespawnTimer = NULL;

	if ( ! pFnUpdateRespawnTimer )
		pFnUpdateRespawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 53373 ];

	UGfxTrHud_execUpdateRespawnTimer_Parms UpdateRespawnTimer_Parms;
	UpdateRespawnTimer_Parms.TimeRemaining = TimeRemaining;

	this->ProcessEvent ( pFnUpdateRespawnTimer, &UpdateRespawnTimer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetRespawnText
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetRespawnText ( struct FString Text )
{
	static UFunction* pFnSetRespawnText = NULL;

	if ( ! pFnSetRespawnText )
		pFnSetRespawnText = (UFunction*) UObject::GObjObjects()->Data[ 53371 ];

	UGfxTrHud_execSetRespawnText_Parms SetRespawnText_Parms;
	memcpy ( &SetRespawnText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnSetRespawnText, &SetRespawnText_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateRespawnText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::UpdateRespawnText ( struct FString Text )
{
	static UFunction* pFnUpdateRespawnText = NULL;

	if ( ! pFnUpdateRespawnText )
		pFnUpdateRespawnText = (UFunction*) UObject::GObjObjects()->Data[ 53367 ];

	UGfxTrHud_execUpdateRespawnText_Parms UpdateRespawnText_Parms;
	memcpy ( &UpdateRespawnText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnUpdateRespawnText, &UpdateRespawnText_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetScoreboardTitle
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::SetScoreboardTitle ( struct FString sValue )
{
	static UFunction* pFnSetScoreboardTitle = NULL;

	if ( ! pFnSetScoreboardTitle )
		pFnSetScoreboardTitle = (UFunction*) UObject::GObjObjects()->Data[ 53365 ];

	UGfxTrHud_execSetScoreboardTitle_Parms SetScoreboardTitle_Parms;
	memcpy ( &SetScoreboardTitle_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnSetScoreboardTitle, &SetScoreboardTitle_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateCreditsAndStreaks
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::UpdateCreditsAndStreaks ( unsigned long bVisible )
{
	static UFunction* pFnUpdateCreditsAndStreaks = NULL;

	if ( ! pFnUpdateCreditsAndStreaks )
		pFnUpdateCreditsAndStreaks = (UFunction*) UObject::GObjObjects()->Data[ 53363 ];

	UGfxTrHud_execUpdateCreditsAndStreaks_Parms UpdateCreditsAndStreaks_Parms;
	UpdateCreditsAndStreaks_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnUpdateCreditsAndStreaks, &UpdateCreditsAndStreaks_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShowCenterHUDElements
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void UGfxTrHud::ShowCenterHUDElements ( unsigned long bVisible )
{
	static UFunction* pFnShowCenterHUDElements = NULL;

	if ( ! pFnShowCenterHUDElements )
		pFnShowCenterHUDElements = (UFunction*) UObject::GObjObjects()->Data[ 53360 ];

	UGfxTrHud_execShowCenterHUDElements_Parms ShowCenterHUDElements_Parms;
	ShowCenterHUDElements_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnShowCenterHUDElements, &ShowCenterHUDElements_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ConfigureHUDState
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bAlive                         ( CPF_Parm )
// unsigned long                  bReady                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForceCredits                  ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::ConfigureHUDState ( unsigned long bAlive, unsigned long bReady, unsigned long bForceCredits )
{
	static UFunction* pFnConfigureHUDState = NULL;

	if ( ! pFnConfigureHUDState )
		pFnConfigureHUDState = (UFunction*) UObject::GObjObjects()->Data[ 53350 ];

	UGfxTrHud_execConfigureHUDState_Parms ConfigureHUDState_Parms;
	ConfigureHUDState_Parms.bAlive = bAlive;
	ConfigureHUDState_Parms.bReady = bReady;
	ConfigureHUDState_Parms.bForceCredits = bForceCredits;

	this->ProcessEvent ( pFnConfigureHUDState, &ConfigureHUDState_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ConfigureSpectatorHUD
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bIsNeutral                     ( CPF_Parm )

void UGfxTrHud::ConfigureSpectatorHUD ( unsigned long bIsNeutral )
{
	static UFunction* pFnConfigureSpectatorHUD = NULL;

	if ( ! pFnConfigureSpectatorHUD )
		pFnConfigureSpectatorHUD = (UFunction*) UObject::GObjObjects()->Data[ 53341 ];

	UGfxTrHud_execConfigureSpectatorHUD_Parms ConfigureSpectatorHUD_Parms;
	ConfigureSpectatorHUD_Parms.bIsNeutral = bIsNeutral;

	this->ProcessEvent ( pFnConfigureSpectatorHUD, &ConfigureSpectatorHUD_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SystemEnableNotifies
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UGfxTrHud::SystemEnableNotifies ( unsigned long bEnable )
{
	static UFunction* pFnSystemEnableNotifies = NULL;

	if ( ! pFnSystemEnableNotifies )
		pFnSystemEnableNotifies = (UFunction*) UObject::GObjObjects()->Data[ 53339 ];

	UGfxTrHud_execSystemEnableNotifies_Parms SystemEnableNotifies_Parms;
	SystemEnableNotifies_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnSystemEnableNotifies, &SystemEnableNotifies_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ShouldShowSpectatorReticule
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGfxTrHud::ShouldShowSpectatorReticule ( )
{
	static UFunction* pFnShouldShowSpectatorReticule = NULL;

	if ( ! pFnShouldShowSpectatorReticule )
		pFnShouldShowSpectatorReticule = (UFunction*) UObject::GObjObjects()->Data[ 53335 ];

	UGfxTrHud_execShouldShowSpectatorReticule_Parms ShouldShowSpectatorReticule_Parms;

	this->ProcessEvent ( pFnShouldShowSpectatorReticule, &ShouldShowSpectatorReticule_Parms, NULL );

	return ShouldShowSpectatorReticule_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.SetPlayerClassObjects
// [0x00020000] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            PerkIcon1                      ( CPF_Parm )
// int                            PerkIcon2                      ( CPF_Parm )

void UGfxTrHud::SetPlayerClassObjects ( struct FString ClassName, int PerkIcon1, int PerkIcon2 )
{
	static UFunction* pFnSetPlayerClassObjects = NULL;

	if ( ! pFnSetPlayerClassObjects )
		pFnSetPlayerClassObjects = (UFunction*) UObject::GObjObjects()->Data[ 53331 ];

	UGfxTrHud_execSetPlayerClassObjects_Parms SetPlayerClassObjects_Parms;
	memcpy ( &SetPlayerClassObjects_Parms.ClassName, &ClassName, 0xC );
	SetPlayerClassObjects_Parms.PerkIcon1 = PerkIcon1;
	SetPlayerClassObjects_Parms.PerkIcon2 = PerkIcon2;

	this->ProcessEvent ( pFnSetPlayerClassObjects, &SetPlayerClassObjects_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetPlayerTeamIcon
// [0x00020000] 
// Parameters infos:
// int                            Team                           ( CPF_Parm )

void UGfxTrHud::SetPlayerTeamIcon ( int Team )
{
	static UFunction* pFnSetPlayerTeamIcon = NULL;

	if ( ! pFnSetPlayerTeamIcon )
		pFnSetPlayerTeamIcon = (UFunction*) UObject::GObjObjects()->Data[ 53329 ];

	UGfxTrHud_execSetPlayerTeamIcon_Parms SetPlayerTeamIcon_Parms;
	SetPlayerTeamIcon_Parms.Team = Team;

	this->ProcessEvent ( pFnSetPlayerTeamIcon, &SetPlayerTeamIcon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetPlayerRankIcon
// [0x00020000] 
// Parameters infos:
// int                            IconIndex                      ( CPF_Parm )

void UGfxTrHud::SetPlayerRankIcon ( int IconIndex )
{
	static UFunction* pFnSetPlayerRankIcon = NULL;

	if ( ! pFnSetPlayerRankIcon )
		pFnSetPlayerRankIcon = (UFunction*) UObject::GObjObjects()->Data[ 53327 ];

	UGfxTrHud_execSetPlayerRankIcon_Parms SetPlayerRankIcon_Parms;
	SetPlayerRankIcon_Parms.IconIndex = IconIndex;

	this->ProcessEvent ( pFnSetPlayerRankIcon, &SetPlayerRankIcon_Parms, NULL );
};

// Function TribesGame.GfxTrHud.SetSpeedometer
// [0x00020002] 
// Parameters infos:
// int                            Speed                          ( CPF_Parm )

void UGfxTrHud::SetSpeedometer ( int Speed )
{
	static UFunction* pFnSetSpeedometer = NULL;

	if ( ! pFnSetSpeedometer )
		pFnSetSpeedometer = (UFunction*) UObject::GObjObjects()->Data[ 53325 ];

	UGfxTrHud_execSetSpeedometer_Parms SetSpeedometer_Parms;
	SetSpeedometer_Parms.Speed = Speed;

	this->ProcessEvent ( pFnSetSpeedometer, &SetSpeedometer_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ClearHeroStatus
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGfxTrHud::ClearHeroStatus ( )
{
	static UFunction* pFnClearHeroStatus = NULL;

	if ( ! pFnClearHeroStatus )
		pFnClearHeroStatus = (UFunction*) UObject::GObjObjects()->Data[ 53324 ];

	UGfxTrHud_execClearHeroStatus_Parms ClearHeroStatus_Parms;

	this->ProcessEvent ( pFnClearHeroStatus, &ClearHeroStatus_Parms, NULL );
};

// Function TribesGame.GfxTrHud.UpdateHeroStatus
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          ShowTime                       ( CPF_Parm )

void UGfxTrHud::UpdateHeroStatus ( struct FString Message, float ShowTime )
{
	static UFunction* pFnUpdateHeroStatus = NULL;

	if ( ! pFnUpdateHeroStatus )
		pFnUpdateHeroStatus = (UFunction*) UObject::GObjObjects()->Data[ 53321 ];

	UGfxTrHud_execUpdateHeroStatus_Parms UpdateHeroStatus_Parms;
	memcpy ( &UpdateHeroStatus_Parms.Message, &Message, 0xC );
	UpdateHeroStatus_Parms.ShowTime = ShowTime;

	this->ProcessEvent ( pFnUpdateHeroStatus, &UpdateHeroStatus_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddToPromptPanelTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          EndTime                        ( CPF_Parm )
// unsigned char                  messagePriority                ( CPF_Parm )

void UGfxTrHud::AddToPromptPanelTime ( struct FString Message, float EndTime, unsigned char messagePriority )
{
	static UFunction* pFnAddToPromptPanelTime = NULL;

	if ( ! pFnAddToPromptPanelTime )
		pFnAddToPromptPanelTime = (UFunction*) UObject::GObjObjects()->Data[ 53316 ];

	UGfxTrHud_execAddToPromptPanelTime_Parms AddToPromptPanelTime_Parms;
	memcpy ( &AddToPromptPanelTime_Parms.Message, &Message, 0xC );
	AddToPromptPanelTime_Parms.EndTime = EndTime;
	AddToPromptPanelTime_Parms.messagePriority = messagePriority;

	this->ProcessEvent ( pFnAddToPromptPanelTime, &AddToPromptPanelTime_Parms, NULL );
};

// Function TribesGame.GfxTrHud.AddVGSEntry
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bBold                          ( CPF_Parm )

void UGfxTrHud::AddVGSEntry ( struct FString Command, unsigned long bBold )
{
	static UFunction* pFnAddVGSEntry = NULL;

	if ( ! pFnAddVGSEntry )
		pFnAddVGSEntry = (UFunction*) UObject::GObjObjects()->Data[ 53313 ];

	UGfxTrHud_execAddVGSEntry_Parms AddVGSEntry_Parms;
	memcpy ( &AddVGSEntry_Parms.Command, &Command, 0xC );
	AddVGSEntry_Parms.bBold = bBold;

	this->ProcessEvent ( pFnAddVGSEntry, &AddVGSEntry_Parms, NULL );
};

// Function TribesGame.GfxTrHud.LoadVGSMenu
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGfxTrHud::LoadVGSMenu ( class UGFxObject* List )
{
	static UFunction* pFnLoadVGSMenu = NULL;

	if ( ! pFnLoadVGSMenu )
		pFnLoadVGSMenu = (UFunction*) UObject::GObjObjects()->Data[ 53274 ];

	UGfxTrHud_execLoadVGSMenu_Parms LoadVGSMenu_Parms;
	LoadVGSMenu_Parms.List = List;

	this->ProcessEvent ( pFnLoadVGSMenu, &LoadVGSMenu_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ClearPromptPanelMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void UGfxTrHud::ClearPromptPanelMessage ( struct FString Message )
{
	static UFunction* pFnClearPromptPanelMessage = NULL;

	if ( ! pFnClearPromptPanelMessage )
		pFnClearPromptPanelMessage = (UFunction*) UObject::GObjObjects()->Data[ 53272 ];

	UGfxTrHud_execClearPromptPanelMessage_Parms ClearPromptPanelMessage_Parms;
	memcpy ( &ClearPromptPanelMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnClearPromptPanelMessage, &ClearPromptPanelMessage_Parms, NULL );
};

// Function TribesGame.GfxTrHud.ClearPromptPanel
// [0x00020002] 
// Parameters infos:

void UGfxTrHud::ClearPromptPanel ( )
{
	static UFunction* pFnClearPromptPanel = NULL;

	if ( ! pFnClearPromptPanel )
		pFnClearPromptPanel = (UFunction*) UObject::GObjObjects()->Data[ 53270 ];

	UGfxTrHud_execClearPromptPanel_Parms ClearPromptPanel_Parms;

	this->ProcessEvent ( pFnClearPromptPanel, &ClearPromptPanel_Parms, NULL );
};

// Function TribesGame.GfxTrHud.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            Player                         ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHud::Init ( class ULocalPlayer* Player )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 53258 ];

	UGfxTrHud_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.GfxTrHud.registerReticules
// [0x00020002] 
// Parameters infos:
// class UGFxTrReticules*         MC                             ( CPF_Parm )

void UGfxTrHud::registerReticules ( class UGFxTrReticules* MC )
{
	static UFunction* pFnregisterReticules = NULL;

	if ( ! pFnregisterReticules )
		pFnregisterReticules = (UFunction*) UObject::GObjObjects()->Data[ 53256 ];

	UGfxTrHud_execregisterReticules_Parms registerReticules_Parms;
	registerReticules_Parms.MC = MC;

	this->ProcessEvent ( pFnregisterReticules, &registerReticules_Parms, NULL );
};

// Function TribesGame.GfxTrHud.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGfxTrHud::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 53253 ];

	UGfxTrHud_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHud.DelegateSoundAccolade
// [0x00120000] 
// Parameters infos:

void UGfxTrHud::DelegateSoundAccolade ( )
{
	static UFunction* pFnDelegateSoundAccolade = NULL;

	if ( ! pFnDelegateSoundAccolade )
		pFnDelegateSoundAccolade = (UFunction*) UObject::GObjObjects()->Data[ 52994 ];

	UGfxTrHud_execDelegateSoundAccolade_Parms DelegateSoundAccolade_Parms;

	this->ProcessEvent ( pFnDelegateSoundAccolade, &DelegateSoundAccolade_Parms, NULL );
};

// Function TribesGame.GfxTrHud.DelegateLoadVGSMenu
// [0x00120000] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void UGfxTrHud::DelegateLoadVGSMenu ( class UGFxObject* List )
{
	static UFunction* pFnDelegateLoadVGSMenu = NULL;

	if ( ! pFnDelegateLoadVGSMenu )
		pFnDelegateLoadVGSMenu = (UFunction*) UObject::GObjObjects()->Data[ 52996 ];

	UGfxTrHud_execDelegateLoadVGSMenu_Parms DelegateLoadVGSMenu_Parms;
	DelegateLoadVGSMenu_Parms.List = List;

	this->ProcessEvent ( pFnDelegateLoadVGSMenu, &DelegateLoadVGSMenu_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.UpdateReticule
// [0x00024002] 
// Parameters infos:
// class APawn*                   pPawn                          ( CPF_Parm )
// unsigned long                  bForceUpdate                   ( CPF_OptionalParm | CPF_Parm )

void UGFxTrReticules::UpdateReticule ( class APawn* pPawn, unsigned long bForceUpdate )
{
	static UFunction* pFnUpdateReticule = NULL;

	if ( ! pFnUpdateReticule )
		pFnUpdateReticule = (UFunction*) UObject::GObjObjects()->Data[ 61239 ];

	UGFxTrReticules_execUpdateReticule_Parms UpdateReticule_Parms;
	UpdateReticule_Parms.pPawn = pPawn;
	UpdateReticule_Parms.bForceUpdate = bForceUpdate;

	this->ProcessEvent ( pFnUpdateReticule, &UpdateReticule_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetReticuleVisible
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewVisible                    ( CPF_Parm )

void UGFxTrReticules::SetReticuleVisible ( unsigned long bNewVisible )
{
	static UFunction* pFnSetReticuleVisible = NULL;

	if ( ! pFnSetReticuleVisible )
		pFnSetReticuleVisible = (UFunction*) UObject::GObjObjects()->Data[ 61237 ];

	UGFxTrReticules_execSetReticuleVisible_Parms SetReticuleVisible_Parms;
	SetReticuleVisible_Parms.bNewVisible = bNewVisible;

	this->ProcessEvent ( pFnSetReticuleVisible, &SetReticuleVisible_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.Init
// [0x00020002] 
// Parameters infos:
// class UGfxTrHud*               H                              ( CPF_Parm )

void UGFxTrReticules::Init ( class UGfxTrHud* H )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 61235 ];

	UGFxTrReticules_execInit_Parms Init_Parms;
	Init_Parms.H = H;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetGenericPowerupPercentage
// [0x00020002] 
// Parameters infos:
// int                            pPercentage                    ( CPF_Parm )

void UGFxTrReticules::SetGenericPowerupPercentage ( int pPercentage )
{
	static UFunction* pFnSetGenericPowerupPercentage = NULL;

	if ( ! pFnSetGenericPowerupPercentage )
		pFnSetGenericPowerupPercentage = (UFunction*) UObject::GObjObjects()->Data[ 61233 ];

	UGFxTrReticules_execSetGenericPowerupPercentage_Parms SetGenericPowerupPercentage_Parms;
	SetGenericPowerupPercentage_Parms.pPercentage = pPercentage;

	this->ProcessEvent ( pFnSetGenericPowerupPercentage, &SetGenericPowerupPercentage_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetVehiclePowerupPercentage
// [0x00020002] 
// Parameters infos:
// int                            pPercentage                    ( CPF_Parm )

void UGFxTrReticules::SetVehiclePowerupPercentage ( int pPercentage )
{
	static UFunction* pFnSetVehiclePowerupPercentage = NULL;

	if ( ! pFnSetVehiclePowerupPercentage )
		pFnSetVehiclePowerupPercentage = (UFunction*) UObject::GObjObjects()->Data[ 61231 ];

	UGFxTrReticules_execSetVehiclePowerupPercentage_Parms SetVehiclePowerupPercentage_Parms;
	SetVehiclePowerupPercentage_Parms.pPercentage = pPercentage;

	this->ProcessEvent ( pFnSetVehiclePowerupPercentage, &SetVehiclePowerupPercentage_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetLaserPowerupPercentage
// [0x00020002] 
// Parameters infos:
// int                            pPercentage                    ( CPF_Parm )

void UGFxTrReticules::SetLaserPowerupPercentage ( int pPercentage )
{
	static UFunction* pFnSetLaserPowerupPercentage = NULL;

	if ( ! pFnSetLaserPowerupPercentage )
		pFnSetLaserPowerupPercentage = (UFunction*) UObject::GObjObjects()->Data[ 61229 ];

	UGFxTrReticules_execSetLaserPowerupPercentage_Parms SetLaserPowerupPercentage_Parms;
	SetLaserPowerupPercentage_Parms.pPercentage = pPercentage;

	this->ProcessEvent ( pFnSetLaserPowerupPercentage, &SetLaserPowerupPercentage_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetPowerupPercentage
// [0x00020002] 
// Parameters infos:
// int                            pPercentage                    ( CPF_Parm )

void UGFxTrReticules::SetPowerupPercentage ( int pPercentage )
{
	static UFunction* pFnSetPowerupPercentage = NULL;

	if ( ! pFnSetPowerupPercentage )
		pFnSetPowerupPercentage = (UFunction*) UObject::GObjObjects()->Data[ 61227 ];

	UGFxTrReticules_execSetPowerupPercentage_Parms SetPowerupPercentage_Parms;
	SetPowerupPercentage_Parms.pPercentage = pPercentage;

	this->ProcessEvent ( pFnSetPowerupPercentage, &SetPowerupPercentage_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.SetVehicleAmmoClip
// [0x00020002] 
// Parameters infos:
// struct FString                 AmmoCount                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrReticules::SetVehicleAmmoClip ( struct FString AmmoCount )
{
	static UFunction* pFnSetVehicleAmmoClip = NULL;

	if ( ! pFnSetVehicleAmmoClip )
		pFnSetVehicleAmmoClip = (UFunction*) UObject::GObjObjects()->Data[ 61225 ];

	UGFxTrReticules_execSetVehicleAmmoClip_Parms SetVehicleAmmoClip_Parms;
	memcpy ( &SetVehicleAmmoClip_Parms.AmmoCount, &AmmoCount, 0xC );

	this->ProcessEvent ( pFnSetVehicleAmmoClip, &SetVehicleAmmoClip_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.EnableVehicleAmmoClip
// [0x00020002] 
// Parameters infos:

void UGFxTrReticules::EnableVehicleAmmoClip ( )
{
	static UFunction* pFnEnableVehicleAmmoClip = NULL;

	if ( ! pFnEnableVehicleAmmoClip )
		pFnEnableVehicleAmmoClip = (UFunction*) UObject::GObjObjects()->Data[ 61224 ];

	UGFxTrReticules_execEnableVehicleAmmoClip_Parms EnableVehicleAmmoClip_Parms;

	this->ProcessEvent ( pFnEnableVehicleAmmoClip, &EnableVehicleAmmoClip_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.DisableVehicleAmmoClip
// [0x00020002] 
// Parameters infos:

void UGFxTrReticules::DisableVehicleAmmoClip ( )
{
	static UFunction* pFnDisableVehicleAmmoClip = NULL;

	if ( ! pFnDisableVehicleAmmoClip )
		pFnDisableVehicleAmmoClip = (UFunction*) UObject::GObjObjects()->Data[ 61223 ];

	UGFxTrReticules_execDisableVehicleAmmoClip_Parms DisableVehicleAmmoClip_Parms;

	this->ProcessEvent ( pFnDisableVehicleAmmoClip, &DisableVehicleAmmoClip_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.CallShowHit
// [0x00020002] 
// Parameters infos:

void UGFxTrReticules::CallShowHit ( )
{
	static UFunction* pFnCallShowHit = NULL;

	if ( ! pFnCallShowHit )
		pFnCallShowHit = (UFunction*) UObject::GObjObjects()->Data[ 61222 ];

	UGFxTrReticules_execCallShowHit_Parms CallShowHit_Parms;

	this->ProcessEvent ( pFnCallShowHit, &CallShowHit_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.CallSetAccuracy
// [0x00020002] 
// Parameters infos:
// int                            nAccuracy                      ( CPF_Parm )

void UGFxTrReticules::CallSetAccuracy ( int nAccuracy )
{
	static UFunction* pFnCallSetAccuracy = NULL;

	if ( ! pFnCallSetAccuracy )
		pFnCallSetAccuracy = (UFunction*) UObject::GObjObjects()->Data[ 61220 ];

	UGFxTrReticules_execCallSetAccuracy_Parms CallSetAccuracy_Parms;
	CallSetAccuracy_Parms.nAccuracy = nAccuracy;

	this->ProcessEvent ( pFnCallSetAccuracy, &CallSetAccuracy_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.GetCurrentReticuleIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrReticules::GetCurrentReticuleIndex ( )
{
	static UFunction* pFnGetCurrentReticuleIndex = NULL;

	if ( ! pFnGetCurrentReticuleIndex )
		pFnGetCurrentReticuleIndex = (UFunction*) UObject::GObjObjects()->Data[ 61218 ];

	UGFxTrReticules_execGetCurrentReticuleIndex_Parms GetCurrentReticuleIndex_Parms;

	this->ProcessEvent ( pFnGetCurrentReticuleIndex, &GetCurrentReticuleIndex_Parms, NULL );

	return GetCurrentReticuleIndex_Parms.ReturnValue;
};

// Function TribesGame.GFxTrReticules.SetCustomReticule
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrReticules::SetCustomReticule ( )
{
	static UFunction* pFnSetCustomReticule = NULL;

	if ( ! pFnSetCustomReticule )
		pFnSetCustomReticule = (UFunction*) UObject::GObjObjects()->Data[ 61210 ];

	UGFxTrReticules_execSetCustomReticule_Parms SetCustomReticule_Parms;

	this->ProcessEvent ( pFnSetCustomReticule, &SetCustomReticule_Parms, NULL );

	return SetCustomReticule_Parms.ReturnValue;
};

// Function TribesGame.GFxTrReticules.ChangeReticule
// [0x00020002] 
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void UGFxTrReticules::ChangeReticule ( int nIndex )
{
	static UFunction* pFnChangeReticule = NULL;

	if ( ! pFnChangeReticule )
		pFnChangeReticule = (UFunction*) UObject::GObjObjects()->Data[ 61208 ];

	UGFxTrReticules_execChangeReticule_Parms ChangeReticule_Parms;
	ChangeReticule_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnChangeReticule, &ChangeReticule_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.CallSetReticuleDepth
// [0x00820002] 
// Parameters infos:
// float                          fDepth                         ( CPF_Parm )

void UGFxTrReticules::CallSetReticuleDepth ( float fDepth )
{
	static UFunction* pFnCallSetReticuleDepth = NULL;

	if ( ! pFnCallSetReticuleDepth )
		pFnCallSetReticuleDepth = (UFunction*) UObject::GObjObjects()->Data[ 61205 ];

	UGFxTrReticules_execCallSetReticuleDepth_Parms CallSetReticuleDepth_Parms;
	CallSetReticuleDepth_Parms.fDepth = fDepth;

	this->ProcessEvent ( pFnCallSetReticuleDepth, &CallSetReticuleDepth_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.ASC_SetCustomReticule
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UGFxTrReticules::ASC_SetCustomReticule ( class UGFxObject* Data )
{
	static UFunction* pFnASC_SetCustomReticule = NULL;

	if ( ! pFnASC_SetCustomReticule )
		pFnASC_SetCustomReticule = (UFunction*) UObject::GObjObjects()->Data[ 61203 ];

	UGFxTrReticules_execASC_SetCustomReticule_Parms ASC_SetCustomReticule_Parms;
	ASC_SetCustomReticule_Parms.Data = Data;

	this->ProcessEvent ( pFnASC_SetCustomReticule, &ASC_SetCustomReticule_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.CallSetReticuleColor
// [0x00020002] 
// Parameters infos:
// int                            nType                          ( CPF_Parm )

void UGFxTrReticules::CallSetReticuleColor ( int nType )
{
	static UFunction* pFnCallSetReticuleColor = NULL;

	if ( ! pFnCallSetReticuleColor )
		pFnCallSetReticuleColor = (UFunction*) UObject::GObjObjects()->Data[ 61201 ];

	UGFxTrReticules_execCallSetReticuleColor_Parms CallSetReticuleColor_Parms;
	CallSetReticuleColor_Parms.nType = nType;

	this->ProcessEvent ( pFnCallSetReticuleColor, &CallSetReticuleColor_Parms, NULL );
};

// Function TribesGame.GFxTrReticules.CallShowReticule
// [0x00020002] 
// Parameters infos:
// int                            nIndex                         ( CPF_Parm )

void UGFxTrReticules::CallShowReticule ( int nIndex )
{
	static UFunction* pFnCallShowReticule = NULL;

	if ( ! pFnCallShowReticule )
		pFnCallShowReticule = (UFunction*) UObject::GObjObjects()->Data[ 61199 ];

	UGFxTrReticules_execCallShowReticule_Parms CallShowReticule_Parms;
	CallShowReticule_Parms.nIndex = nIndex;

	this->ProcessEvent ( pFnCallShowReticule, &CallShowReticule_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateOwnedItems
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateOwnedItems ( )
{
	static UFunction* pFnUpdateOwnedItems = NULL;

	if ( ! pFnUpdateOwnedItems )
		pFnUpdateOwnedItems = (UFunction*) UObject::GObjObjects()->Data[ 95592 ];

	ATrHUD_execUpdateOwnedItems_Parms UpdateOwnedItems_Parms;

	this->ProcessEvent ( pFnUpdateOwnedItems, &UpdateOwnedItems_Parms, NULL );
};

// Function TribesGame.TrHUD.MineReplicated
// [0x00020002] 
// Parameters infos:
// class ATrProj_Mine*            NewMine                        ( CPF_Parm )

void ATrHUD::MineReplicated ( class ATrProj_Mine* NewMine )
{
	static UFunction* pFnMineReplicated = NULL;

	if ( ! pFnMineReplicated )
		pFnMineReplicated = (UFunction*) UObject::GObjObjects()->Data[ 95589 ];

	ATrHUD_execMineReplicated_Parms MineReplicated_Parms;
	MineReplicated_Parms.NewMine = NewMine;

	this->ProcessEvent ( pFnMineReplicated, &MineReplicated_Parms, NULL );
};

// Function TribesGame.TrHUD.DeployableReplicated
// [0x00020002] 
// Parameters infos:
// class ATrDeployable*           NewDep                         ( CPF_Parm )

void ATrHUD::DeployableReplicated ( class ATrDeployable* NewDep )
{
	static UFunction* pFnDeployableReplicated = NULL;

	if ( ! pFnDeployableReplicated )
		pFnDeployableReplicated = (UFunction*) UObject::GObjObjects()->Data[ 95587 ];

	ATrHUD_execDeployableReplicated_Parms DeployableReplicated_Parms;
	DeployableReplicated_Parms.NewDep = NewDep;

	this->ProcessEvent ( pFnDeployableReplicated, &DeployableReplicated_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearQueuedAccoladesTimer
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearQueuedAccoladesTimer ( )
{
	static UFunction* pFnClearQueuedAccoladesTimer = NULL;

	if ( ! pFnClearQueuedAccoladesTimer )
		pFnClearQueuedAccoladesTimer = (UFunction*) UObject::GObjObjects()->Data[ 95586 ];

	ATrHUD_execClearQueuedAccoladesTimer_Parms ClearQueuedAccoladesTimer_Parms;

	this->ProcessEvent ( pFnClearQueuedAccoladesTimer, &ClearQueuedAccoladesTimer_Parms, NULL );
};

// Function TribesGame.TrHUD.RunQueuedAccoladesTimer
// [0x00020002] 
// Parameters infos:
// unsigned long                  bIsBadge                       ( CPF_Parm )

void ATrHUD::RunQueuedAccoladesTimer ( unsigned long bIsBadge )
{
	static UFunction* pFnRunQueuedAccoladesTimer = NULL;

	if ( ! pFnRunQueuedAccoladesTimer )
		pFnRunQueuedAccoladesTimer = (UFunction*) UObject::GObjObjects()->Data[ 95583 ];

	ATrHUD_execRunQueuedAccoladesTimer_Parms RunQueuedAccoladesTimer_Parms;
	RunQueuedAccoladesTimer_Parms.bIsBadge = bIsBadge;

	this->ProcessEvent ( pFnRunQueuedAccoladesTimer, &RunQueuedAccoladesTimer_Parms, NULL );
};

// Function TribesGame.TrHUD.CheckQueuedAccolades
// [0x00020002] 
// Parameters infos:

void ATrHUD::CheckQueuedAccolades ( )
{
	static UFunction* pFnCheckQueuedAccolades = NULL;

	if ( ! pFnCheckQueuedAccolades )
		pFnCheckQueuedAccolades = (UFunction*) UObject::GObjObjects()->Data[ 95582 ];

	ATrHUD_execCheckQueuedAccolades_Parms CheckQueuedAccolades_Parms;

	this->ProcessEvent ( pFnCheckQueuedAccolades, &CheckQueuedAccolades_Parms, NULL );
};

// Function TribesGame.TrHUD.QueueAccolade
// [0x00824002] 
// Parameters infos:
// int                            Icon                           ( CPF_Parm )
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Subtitle                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bIsBadge                       ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::QueueAccolade ( int Icon, struct FString Title, struct FString Subtitle, unsigned long bIsBadge )
{
	static UFunction* pFnQueueAccolade = NULL;

	if ( ! pFnQueueAccolade )
		pFnQueueAccolade = (UFunction*) UObject::GObjObjects()->Data[ 95576 ];

	ATrHUD_execQueueAccolade_Parms QueueAccolade_Parms;
	QueueAccolade_Parms.Icon = Icon;
	memcpy ( &QueueAccolade_Parms.Title, &Title, 0xC );
	memcpy ( &QueueAccolade_Parms.Subtitle, &Subtitle, 0xC );
	QueueAccolade_Parms.bIsBadge = bIsBadge;

	this->ProcessEvent ( pFnQueueAccolade, &QueueAccolade_Parms, NULL );
};

// Function TribesGame.TrHUD.PlayAward
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )

void ATrHUD::PlayAward ( class UCanvas* DrawCanvas )
{
	static UFunction* pFnPlayAward = NULL;

	if ( ! pFnPlayAward )
		pFnPlayAward = (UFunction*) UObject::GObjObjects()->Data[ 95569 ];

	ATrHUD_execPlayAward_Parms PlayAward_Parms;
	PlayAward_Parms.DrawCanvas = DrawCanvas;

	this->ProcessEvent ( pFnPlayAward, &PlayAward_Parms, NULL );
};

// Function TribesGame.TrHUD.PostRenderFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrHUD::eventPostRenderFor ( class APlayerController* PC, class UCanvas* DrawCanvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 95564 ];

	ATrHUD_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.DrawCanvas = DrawCanvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrHUD.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrHUD::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 95562 ];

	ATrHUD_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateOverheadNumbers
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrHUD::UpdateOverheadNumbers ( float DeltaTime )
{
	static UFunction* pFnUpdateOverheadNumbers = NULL;

	if ( ! pFnUpdateOverheadNumbers )
		pFnUpdateOverheadNumbers = (UFunction*) UObject::GObjObjects()->Data[ 95553 ];

	ATrHUD_execUpdateOverheadNumbers_Parms UpdateOverheadNumbers_Parms;
	UpdateOverheadNumbers_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateOverheadNumbers, &UpdateOverheadNumbers_Parms, NULL );
};

// Function TribesGame.TrHUD.AddOverheadNumber
// [0x00820002] 
// Parameters infos:
// int                            Value                          ( CPF_Parm )
// struct FVector4                WorldLocation                  ( CPF_Parm )

void ATrHUD::AddOverheadNumber ( int Value, struct FVector4 WorldLocation )
{
	static UFunction* pFnAddOverheadNumber = NULL;

	if ( ! pFnAddOverheadNumber )
		pFnAddOverheadNumber = (UFunction*) UObject::GObjObjects()->Data[ 95549 ];

	ATrHUD_execAddOverheadNumber_Parms AddOverheadNumber_Parms;
	AddOverheadNumber_Parms.Value = Value;
	memcpy ( &AddOverheadNumber_Parms.WorldLocation, &WorldLocation, 0x10 );

	this->ProcessEvent ( pFnAddOverheadNumber, &AddOverheadNumber_Parms, NULL );
};

// Function TribesGame.TrHUD.TestNumber
// [0x00020200] ( FUNC_Exec )
// Parameters infos:
// int                            Value                          ( CPF_Parm )

void ATrHUD::TestNumber ( int Value )
{
	static UFunction* pFnTestNumber = NULL;

	if ( ! pFnTestNumber )
		pFnTestNumber = (UFunction*) UObject::GObjObjects()->Data[ 95547 ];

	ATrHUD_execTestNumber_Parms TestNumber_Parms;
	TestNumber_Parms.Value = Value;

	this->ProcessEvent ( pFnTestNumber, &TestNumber_Parms, NULL );
};

// Function TribesGame.TrHUD.OnViewTargetChange
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )

void ATrHUD::OnViewTargetChange ( class AActor* NewViewTarget )
{
	static UFunction* pFnOnViewTargetChange = NULL;

	if ( ! pFnOnViewTargetChange )
		pFnOnViewTargetChange = (UFunction*) UObject::GObjObjects()->Data[ 95545 ];

	ATrHUD_execOnViewTargetChange_Parms OnViewTargetChange_Parms;
	OnViewTargetChange_Parms.NewViewTarget = NewViewTarget;

	this->ProcessEvent ( pFnOnViewTargetChange, &OnViewTargetChange_Parms, NULL );
};

// Function TribesGame.TrHUD.HideAllSpectatorPanels
// [0x00020002] 
// Parameters infos:

void ATrHUD::HideAllSpectatorPanels ( )
{
	static UFunction* pFnHideAllSpectatorPanels = NULL;

	if ( ! pFnHideAllSpectatorPanels )
		pFnHideAllSpectatorPanels = (UFunction*) UObject::GObjObjects()->Data[ 95544 ];

	ATrHUD_execHideAllSpectatorPanels_Parms HideAllSpectatorPanels_Parms;

	this->ProcessEvent ( pFnHideAllSpectatorPanels, &HideAllSpectatorPanels_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSpectatorFloatCameraPanel
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateSpectatorFloatCameraPanel ( )
{
	static UFunction* pFnUpdateSpectatorFloatCameraPanel = NULL;

	if ( ! pFnUpdateSpectatorFloatCameraPanel )
		pFnUpdateSpectatorFloatCameraPanel = (UFunction*) UObject::GObjObjects()->Data[ 95543 ];

	ATrHUD_execUpdateSpectatorFloatCameraPanel_Parms UpdateSpectatorFloatCameraPanel_Parms;

	this->ProcessEvent ( pFnUpdateSpectatorFloatCameraPanel, &UpdateSpectatorFloatCameraPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.HideSpectatorFloatCameraPanel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideSpectatorFloatCameraPanel ( )
{
	static UFunction* pFnHideSpectatorFloatCameraPanel = NULL;

	if ( ! pFnHideSpectatorFloatCameraPanel )
		pFnHideSpectatorFloatCameraPanel = (UFunction*) UObject::GObjObjects()->Data[ 95542 ];

	ATrHUD_execHideSpectatorFloatCameraPanel_Parms HideSpectatorFloatCameraPanel_Parms;

	this->ProcessEvent ( pFnHideSpectatorFloatCameraPanel, &HideSpectatorFloatCameraPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorFloatCameraPanel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ShowSpectatorFloatCameraPanel ( )
{
	static UFunction* pFnShowSpectatorFloatCameraPanel = NULL;

	if ( ! pFnShowSpectatorFloatCameraPanel )
		pFnShowSpectatorFloatCameraPanel = (UFunction*) UObject::GObjObjects()->Data[ 95541 ];

	ATrHUD_execShowSpectatorFloatCameraPanel_Parms ShowSpectatorFloatCameraPanel_Parms;

	this->ProcessEvent ( pFnShowSpectatorFloatCameraPanel, &ShowSpectatorFloatCameraPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSpectatorObjectivePanel
// [0x00020002] 
// Parameters infos:
// class AActor*                  ObjectiveActor                 ( CPF_Parm )

void ATrHUD::UpdateSpectatorObjectivePanel ( class AActor* ObjectiveActor )
{
	static UFunction* pFnUpdateSpectatorObjectivePanel = NULL;

	if ( ! pFnUpdateSpectatorObjectivePanel )
		pFnUpdateSpectatorObjectivePanel = (UFunction*) UObject::GObjObjects()->Data[ 95537 ];

	ATrHUD_execUpdateSpectatorObjectivePanel_Parms UpdateSpectatorObjectivePanel_Parms;
	UpdateSpectatorObjectivePanel_Parms.ObjectiveActor = ObjectiveActor;

	this->ProcessEvent ( pFnUpdateSpectatorObjectivePanel, &UpdateSpectatorObjectivePanel_Parms, NULL );
};

// Function TribesGame.TrHUD.HideSpectatorObjectivePanel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideSpectatorObjectivePanel ( )
{
	static UFunction* pFnHideSpectatorObjectivePanel = NULL;

	if ( ! pFnHideSpectatorObjectivePanel )
		pFnHideSpectatorObjectivePanel = (UFunction*) UObject::GObjObjects()->Data[ 95536 ];

	ATrHUD_execHideSpectatorObjectivePanel_Parms HideSpectatorObjectivePanel_Parms;

	this->ProcessEvent ( pFnHideSpectatorObjectivePanel, &HideSpectatorObjectivePanel_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorObjectivePanel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ShowSpectatorObjectivePanel ( )
{
	static UFunction* pFnShowSpectatorObjectivePanel = NULL;

	if ( ! pFnShowSpectatorObjectivePanel )
		pFnShowSpectatorObjectivePanel = (UFunction*) UObject::GObjObjects()->Data[ 95535 ];

	ATrHUD_execShowSpectatorObjectivePanel_Parms ShowSpectatorObjectivePanel_Parms;

	this->ProcessEvent ( pFnShowSpectatorObjectivePanel, &ShowSpectatorObjectivePanel_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSpectatorBookmarkPanel
// [0x00020002] 
// Parameters infos:
// class ATrCamera_SpectatorBookmark* BookMark                       ( CPF_Parm )

void ATrHUD::UpdateSpectatorBookmarkPanel ( class ATrCamera_SpectatorBookmark* BookMark )
{
	static UFunction* pFnUpdateSpectatorBookmarkPanel = NULL;

	if ( ! pFnUpdateSpectatorBookmarkPanel )
		pFnUpdateSpectatorBookmarkPanel = (UFunction*) UObject::GObjObjects()->Data[ 95533 ];

	ATrHUD_execUpdateSpectatorBookmarkPanel_Parms UpdateSpectatorBookmarkPanel_Parms;
	UpdateSpectatorBookmarkPanel_Parms.BookMark = BookMark;

	this->ProcessEvent ( pFnUpdateSpectatorBookmarkPanel, &UpdateSpectatorBookmarkPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.HideSpectatorBookmark
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideSpectatorBookmark ( )
{
	static UFunction* pFnHideSpectatorBookmark = NULL;

	if ( ! pFnHideSpectatorBookmark )
		pFnHideSpectatorBookmark = (UFunction*) UObject::GObjObjects()->Data[ 95532 ];

	ATrHUD_execHideSpectatorBookmark_Parms HideSpectatorBookmark_Parms;

	this->ProcessEvent ( pFnHideSpectatorBookmark, &HideSpectatorBookmark_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorBookmark
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ShowSpectatorBookmark ( )
{
	static UFunction* pFnShowSpectatorBookmark = NULL;

	if ( ! pFnShowSpectatorBookmark )
		pFnShowSpectatorBookmark = (UFunction*) UObject::GObjObjects()->Data[ 95531 ];

	ATrHUD_execShowSpectatorBookmark_Parms ShowSpectatorBookmark_Parms;

	this->ProcessEvent ( pFnShowSpectatorBookmark, &ShowSpectatorBookmark_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSpectatorVehiclePanel
// [0x00020002] 
// Parameters infos:
// class ATrVehicle*              ViewTargetVehicle              ( CPF_Parm )

void ATrHUD::UpdateSpectatorVehiclePanel ( class ATrVehicle* ViewTargetVehicle )
{
	static UFunction* pFnUpdateSpectatorVehiclePanel = NULL;

	if ( ! pFnUpdateSpectatorVehiclePanel )
		pFnUpdateSpectatorVehiclePanel = (UFunction*) UObject::GObjObjects()->Data[ 95525 ];

	ATrHUD_execUpdateSpectatorVehiclePanel_Parms UpdateSpectatorVehiclePanel_Parms;
	UpdateSpectatorVehiclePanel_Parms.ViewTargetVehicle = ViewTargetVehicle;

	this->ProcessEvent ( pFnUpdateSpectatorVehiclePanel, &UpdateSpectatorVehiclePanel_Parms, NULL );
};

// Function TribesGame.TrHUD.HideSpectatorVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideSpectatorVehicle ( )
{
	static UFunction* pFnHideSpectatorVehicle = NULL;

	if ( ! pFnHideSpectatorVehicle )
		pFnHideSpectatorVehicle = (UFunction*) UObject::GObjObjects()->Data[ 95524 ];

	ATrHUD_execHideSpectatorVehicle_Parms HideSpectatorVehicle_Parms;

	this->ProcessEvent ( pFnHideSpectatorVehicle, &HideSpectatorVehicle_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorVehicle
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ShowSpectatorVehicle ( )
{
	static UFunction* pFnShowSpectatorVehicle = NULL;

	if ( ! pFnShowSpectatorVehicle )
		pFnShowSpectatorVehicle = (UFunction*) UObject::GObjObjects()->Data[ 95523 ];

	ATrHUD_execShowSpectatorVehicle_Parms ShowSpectatorVehicle_Parms;

	this->ProcessEvent ( pFnShowSpectatorVehicle, &ShowSpectatorVehicle_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSpectatorPlayerPanel
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 ViewTargetTrPawn               ( CPF_Parm )

void ATrHUD::UpdateSpectatorPlayerPanel ( class ATrPawn* ViewTargetTrPawn )
{
	static UFunction* pFnUpdateSpectatorPlayerPanel = NULL;

	if ( ! pFnUpdateSpectatorPlayerPanel )
		pFnUpdateSpectatorPlayerPanel = (UFunction*) UObject::GObjObjects()->Data[ 95515 ];

	ATrHUD_execUpdateSpectatorPlayerPanel_Parms UpdateSpectatorPlayerPanel_Parms;
	UpdateSpectatorPlayerPanel_Parms.ViewTargetTrPawn = ViewTargetTrPawn;

	this->ProcessEvent ( pFnUpdateSpectatorPlayerPanel, &UpdateSpectatorPlayerPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.HideSpectatorPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideSpectatorPlayer ( )
{
	static UFunction* pFnHideSpectatorPlayer = NULL;

	if ( ! pFnHideSpectatorPlayer )
		pFnHideSpectatorPlayer = (UFunction*) UObject::GObjObjects()->Data[ 95514 ];

	ATrHUD_execHideSpectatorPlayer_Parms HideSpectatorPlayer_Parms;

	this->ProcessEvent ( pFnHideSpectatorPlayer, &HideSpectatorPlayer_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ShowSpectatorPlayer ( )
{
	static UFunction* pFnShowSpectatorPlayer = NULL;

	if ( ! pFnShowSpectatorPlayer )
		pFnShowSpectatorPlayer = (UFunction*) UObject::GObjObjects()->Data[ 95513 ];

	ATrHUD_execShowSpectatorPlayer_Parms ShowSpectatorPlayer_Parms;

	this->ProcessEvent ( pFnShowSpectatorPlayer, &ShowSpectatorPlayer_Parms, NULL );
};

// Function TribesGame.TrHUD.EnableGameTypeHUD
// [0x00020002] 
// Parameters infos:

void ATrHUD::EnableGameTypeHUD ( )
{
	static UFunction* pFnEnableGameTypeHUD = NULL;

	if ( ! pFnEnableGameTypeHUD )
		pFnEnableGameTypeHUD = (UFunction*) UObject::GObjObjects()->Data[ 95512 ];

	ATrHUD_execEnableGameTypeHUD_Parms EnableGameTypeHUD_Parms;

	this->ProcessEvent ( pFnEnableGameTypeHUD, &EnableGameTypeHUD_Parms, NULL );
};

// Function TribesGame.TrHUD.KickVoteMessage
// [0x00020002] 
// Parameters infos:
// unsigned long                  bComplete                      ( CPF_Parm )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::KickVoteMessage ( unsigned long bComplete, struct FString Message )
{
	static UFunction* pFnKickVoteMessage = NULL;

	if ( ! pFnKickVoteMessage )
		pFnKickVoteMessage = (UFunction*) UObject::GObjObjects()->Data[ 95508 ];

	ATrHUD_execKickVoteMessage_Parms KickVoteMessage_Parms;
	KickVoteMessage_Parms.bComplete = bComplete;
	memcpy ( &KickVoteMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnKickVoteMessage, &KickVoteMessage_Parms, NULL );
};

// Function TribesGame.TrHUD.HideGlobalAlert
// [0x00020002] 
// Parameters infos:

void ATrHUD::HideGlobalAlert ( )
{
	static UFunction* pFnHideGlobalAlert = NULL;

	if ( ! pFnHideGlobalAlert )
		pFnHideGlobalAlert = (UFunction*) UObject::GObjObjects()->Data[ 95507 ];

	ATrHUD_execHideGlobalAlert_Parms HideGlobalAlert_Parms;

	this->ProcessEvent ( pFnHideGlobalAlert, &HideGlobalAlert_Parms, NULL );
};

// Function TribesGame.TrHUD.SetPlayerClassObjects
// [0x00020002] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            PerkIcon1                      ( CPF_Parm )
// int                            PerkIcon2                      ( CPF_Parm )

void ATrHUD::SetPlayerClassObjects ( struct FString ClassName, int PerkIcon1, int PerkIcon2 )
{
	static UFunction* pFnSetPlayerClassObjects = NULL;

	if ( ! pFnSetPlayerClassObjects )
		pFnSetPlayerClassObjects = (UFunction*) UObject::GObjObjects()->Data[ 95503 ];

	ATrHUD_execSetPlayerClassObjects_Parms SetPlayerClassObjects_Parms;
	memcpy ( &SetPlayerClassObjects_Parms.ClassName, &ClassName, 0xC );
	SetPlayerClassObjects_Parms.PerkIcon1 = PerkIcon1;
	SetPlayerClassObjects_Parms.PerkIcon2 = PerkIcon2;

	this->ProcessEvent ( pFnSetPlayerClassObjects, &SetPlayerClassObjects_Parms, NULL );
};

// Function TribesGame.TrHUD.SendLocalMessageToChat
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::SendLocalMessageToChat ( struct FString Message )
{
	static UFunction* pFnSendLocalMessageToChat = NULL;

	if ( ! pFnSendLocalMessageToChat )
		pFnSendLocalMessageToChat = (UFunction*) UObject::GObjObjects()->Data[ 95499 ];

	ATrHUD_execSendLocalMessageToChat_Parms SendLocalMessageToChat_Parms;
	memcpy ( &SendLocalMessageToChat_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSendLocalMessageToChat, &SendLocalMessageToChat_Parms, NULL );
};

// Function TribesGame.TrHUD.SendLocalMessageToGlobalAlert
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::SendLocalMessageToGlobalAlert ( struct FString Message )
{
	static UFunction* pFnSendLocalMessageToGlobalAlert = NULL;

	if ( ! pFnSendLocalMessageToGlobalAlert )
		pFnSendLocalMessageToGlobalAlert = (UFunction*) UObject::GObjObjects()->Data[ 95497 ];

	ATrHUD_execSendLocalMessageToGlobalAlert_Parms SendLocalMessageToGlobalAlert_Parms;
	memcpy ( &SendLocalMessageToGlobalAlert_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnSendLocalMessageToGlobalAlert, &SendLocalMessageToGlobalAlert_Parms, NULL );
};

// Function TribesGame.TrHUD.StripTag
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 sValue                         ( CPF_Parm | CPF_NeedCtorLink )

struct FString ATrHUD::StripTag ( struct FString sValue )
{
	static UFunction* pFnStripTag = NULL;

	if ( ! pFnStripTag )
		pFnStripTag = (UFunction*) UObject::GObjObjects()->Data[ 95493 ];

	ATrHUD_execStripTag_Parms StripTag_Parms;
	memcpy ( &StripTag_Parms.sValue, &sValue, 0xC );

	this->ProcessEvent ( pFnStripTag, &StripTag_Parms, NULL );

	return StripTag_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.ChatMessageReceived
// [0x00820002] 
// Parameters infos:
// int                            Channel                        ( CPF_Parm )
// struct FString                 Sender                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::ChatMessageReceived ( int Channel, struct FString Sender, struct FString Message )
{
	static UFunction* pFnChatMessageReceived = NULL;

	if ( ! pFnChatMessageReceived )
		pFnChatMessageReceived = (UFunction*) UObject::GObjObjects()->Data[ 95478 ];

	ATrHUD_execChatMessageReceived_Parms ChatMessageReceived_Parms;
	ChatMessageReceived_Parms.Channel = Channel;
	memcpy ( &ChatMessageReceived_Parms.Sender, &Sender, 0xC );
	memcpy ( &ChatMessageReceived_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnChatMessageReceived, &ChatMessageReceived_Parms, NULL );
};

// Function TribesGame.TrHUD.LocalizedMessage
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_Parm )
// struct FString                 CriticalString                 ( CPF_Parm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_Parm )
// float                          Position                       ( CPF_Parm )
// float                          Lifetime                       ( CPF_Parm )
// int                            FontSize                       ( CPF_Parm )
// struct FColor                  DrawColor                      ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::LocalizedMessage ( class UClass* InMessageClass, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, struct FString CriticalString, int Switch, float Position, float Lifetime, int FontSize, struct FColor DrawColor, class UObject* OptionalObject )
{
	static UFunction* pFnLocalizedMessage = NULL;

	if ( ! pFnLocalizedMessage )
		pFnLocalizedMessage = (UFunction*) UObject::GObjObjects()->Data[ 95460 ];

	ATrHUD_execLocalizedMessage_Parms LocalizedMessage_Parms;
	LocalizedMessage_Parms.InMessageClass = InMessageClass;
	LocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	LocalizedMessage_Parms.RelatedPRI01 = RelatedPRI01;
	memcpy ( &LocalizedMessage_Parms.CriticalString, &CriticalString, 0xC );
	LocalizedMessage_Parms.Switch = Switch;
	LocalizedMessage_Parms.Position = Position;
	LocalizedMessage_Parms.Lifetime = Lifetime;
	LocalizedMessage_Parms.FontSize = FontSize;
	memcpy ( &LocalizedMessage_Parms.DrawColor, &DrawColor, 0x4 );
	LocalizedMessage_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnLocalizedMessage, &LocalizedMessage_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateWhiteoutEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateWhiteoutEffect ( )
{
	static UFunction* pFnUpdateWhiteoutEffect = NULL;

	if ( ! pFnUpdateWhiteoutEffect )
		pFnUpdateWhiteoutEffect = (UFunction*) UObject::GObjObjects()->Data[ 95459 ];

	ATrHUD_execUpdateWhiteoutEffect_Parms UpdateWhiteoutEffect_Parms;

	this->ProcessEvent ( pFnUpdateWhiteoutEffect, &UpdateWhiteoutEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearWhiteout
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearWhiteout ( )
{
	static UFunction* pFnClearWhiteout = NULL;

	if ( ! pFnClearWhiteout )
		pFnClearWhiteout = (UFunction*) UObject::GObjObjects()->Data[ 95458 ];

	ATrHUD_execClearWhiteout_Parms ClearWhiteout_Parms;

	this->ProcessEvent ( pFnClearWhiteout, &ClearWhiteout_Parms, NULL );
};

// Function TribesGame.TrHUD.Whiteout
// [0x00020002] 
// Parameters infos:
// float                          Speed                          ( CPF_Parm )
// float                          Amount                         ( CPF_Parm )

void ATrHUD::Whiteout ( float Speed, float Amount )
{
	static UFunction* pFnWhiteout = NULL;

	if ( ! pFnWhiteout )
		pFnWhiteout = (UFunction*) UObject::GObjObjects()->Data[ 95455 ];

	ATrHUD_execWhiteout_Parms Whiteout_Parms;
	Whiteout_Parms.Speed = Speed;
	Whiteout_Parms.Amount = Amount;

	this->ProcessEvent ( pFnWhiteout, &Whiteout_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateFumbledFlagEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateFumbledFlagEffect ( )
{
	static UFunction* pFnUpdateFumbledFlagEffect = NULL;

	if ( ! pFnUpdateFumbledFlagEffect )
		pFnUpdateFumbledFlagEffect = (UFunction*) UObject::GObjObjects()->Data[ 95454 ];

	ATrHUD_execUpdateFumbledFlagEffect_Parms UpdateFumbledFlagEffect_Parms;

	this->ProcessEvent ( pFnUpdateFumbledFlagEffect, &UpdateFumbledFlagEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.FumbleFlag
// [0x00020002] 
// Parameters infos:
// float                          Speed                          ( CPF_Parm )

void ATrHUD::FumbleFlag ( float Speed )
{
	static UFunction* pFnFumbleFlag = NULL;

	if ( ! pFnFumbleFlag )
		pFnFumbleFlag = (UFunction*) UObject::GObjObjects()->Data[ 95452 ];

	ATrHUD_execFumbleFlag_Parms FumbleFlag_Parms;
	FumbleFlag_Parms.Speed = Speed;

	this->ProcessEvent ( pFnFumbleFlag, &FumbleFlag_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateFadeEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateFadeEffect ( )
{
	static UFunction* pFnUpdateFadeEffect = NULL;

	if ( ! pFnUpdateFadeEffect )
		pFnUpdateFadeEffect = (UFunction*) UObject::GObjObjects()->Data[ 95450 ];

	ATrHUD_execUpdateFadeEffect_Parms UpdateFadeEffect_Parms;

	this->ProcessEvent ( pFnUpdateFadeEffect, &UpdateFadeEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateJammerEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateJammerEffect ( )
{
	static UFunction* pFnUpdateJammerEffect = NULL;

	if ( ! pFnUpdateJammerEffect )
		pFnUpdateJammerEffect = (UFunction*) UObject::GObjObjects()->Data[ 95447 ];

	ATrHUD_execUpdateJammerEffect_Parms UpdateJammerEffect_Parms;

	this->ProcessEvent ( pFnUpdateJammerEffect, &UpdateJammerEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.PulseShieldEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::PulseShieldEffect ( )
{
	static UFunction* pFnPulseShieldEffect = NULL;

	if ( ! pFnPulseShieldEffect )
		pFnPulseShieldEffect = (UFunction*) UObject::GObjObjects()->Data[ 95446 ];

	ATrHUD_execPulseShieldEffect_Parms PulseShieldEffect_Parms;

	this->ProcessEvent ( pFnPulseShieldEffect, &PulseShieldEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateShieldEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateShieldEffect ( )
{
	static UFunction* pFnUpdateShieldEffect = NULL;

	if ( ! pFnUpdateShieldEffect )
		pFnUpdateShieldEffect = (UFunction*) UObject::GObjObjects()->Data[ 95442 ];

	ATrHUD_execUpdateShieldEffect_Parms UpdateShieldEffect_Parms;

	this->ProcessEvent ( pFnUpdateShieldEffect, &UpdateShieldEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateInvulnerableEfect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateInvulnerableEfect ( )
{
	static UFunction* pFnUpdateInvulnerableEfect = NULL;

	if ( ! pFnUpdateInvulnerableEfect )
		pFnUpdateInvulnerableEfect = (UFunction*) UObject::GObjObjects()->Data[ 95438 ];

	ATrHUD_execUpdateInvulnerableEfect_Parms UpdateInvulnerableEfect_Parms;

	this->ProcessEvent ( pFnUpdateInvulnerableEfect, &UpdateInvulnerableEfect_Parms, NULL );
};

// Function TribesGame.TrHUD.PulsePickupFlashEffect
// [0x00020002] 
// Parameters infos:
// float                          PulseAmount                    ( CPF_Parm )
// float                          PulseSpeed                     ( CPF_Parm )

void ATrHUD::PulsePickupFlashEffect ( float PulseAmount, float PulseSpeed )
{
	static UFunction* pFnPulsePickupFlashEffect = NULL;

	if ( ! pFnPulsePickupFlashEffect )
		pFnPulsePickupFlashEffect = (UFunction*) UObject::GObjObjects()->Data[ 95435 ];

	ATrHUD_execPulsePickupFlashEffect_Parms PulsePickupFlashEffect_Parms;
	PulsePickupFlashEffect_Parms.PulseAmount = PulseAmount;
	PulsePickupFlashEffect_Parms.PulseSpeed = PulseSpeed;

	this->ProcessEvent ( pFnPulsePickupFlashEffect, &PulsePickupFlashEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdatePickupFlashEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdatePickupFlashEffect ( )
{
	static UFunction* pFnUpdatePickupFlashEffect = NULL;

	if ( ! pFnUpdatePickupFlashEffect )
		pFnUpdatePickupFlashEffect = (UFunction*) UObject::GObjObjects()->Data[ 95433 ];

	ATrHUD_execUpdatePickupFlashEffect_Parms UpdatePickupFlashEffect_Parms;

	this->ProcessEvent ( pFnUpdatePickupFlashEffect, &UpdatePickupFlashEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateSkiEffect
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateSkiEffect ( )
{
	static UFunction* pFnUpdateSkiEffect = NULL;

	if ( ! pFnUpdateSkiEffect )
		pFnUpdateSkiEffect = (UFunction*) UObject::GObjObjects()->Data[ 95431 ];

	ATrHUD_execUpdateSkiEffect_Parms UpdateSkiEffect_Parms;

	this->ProcessEvent ( pFnUpdateSkiEffect, &UpdateSkiEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.GetRemainingEnemyGeneratorRestoreTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrHUD::GetRemainingEnemyGeneratorRestoreTime ( )
{
	static UFunction* pFnGetRemainingEnemyGeneratorRestoreTime = NULL;

	if ( ! pFnGetRemainingEnemyGeneratorRestoreTime )
		pFnGetRemainingEnemyGeneratorRestoreTime = (UFunction*) UObject::GObjObjects()->Data[ 95429 ];

	ATrHUD_execGetRemainingEnemyGeneratorRestoreTime_Parms GetRemainingEnemyGeneratorRestoreTime_Parms;

	this->ProcessEvent ( pFnGetRemainingEnemyGeneratorRestoreTime, &GetRemainingEnemyGeneratorRestoreTime_Parms, NULL );

	return GetRemainingEnemyGeneratorRestoreTime_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.GetRemainingFriendlyGeneratorRestoreTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrHUD::GetRemainingFriendlyGeneratorRestoreTime ( )
{
	static UFunction* pFnGetRemainingFriendlyGeneratorRestoreTime = NULL;

	if ( ! pFnGetRemainingFriendlyGeneratorRestoreTime )
		pFnGetRemainingFriendlyGeneratorRestoreTime = (UFunction*) UObject::GObjObjects()->Data[ 95427 ];

	ATrHUD_execGetRemainingFriendlyGeneratorRestoreTime_Parms GetRemainingFriendlyGeneratorRestoreTime_Parms;

	this->ProcessEvent ( pFnGetRemainingFriendlyGeneratorRestoreTime, &GetRemainingFriendlyGeneratorRestoreTime_Parms, NULL );

	return GetRemainingFriendlyGeneratorRestoreTime_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrHUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 95426 ];

	ATrHUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function TribesGame.TrHUD.GetEdgeScreenCoordinates
// [0x00C22002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UCanvas*                 inCanvas                       ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )
// struct FVector                 ObjectLocation                 ( CPF_Parm )
// struct FVector                 ScreenLocation                 ( CPF_Parm | CPF_OutParm )

bool ATrHUD::GetEdgeScreenCoordinates ( class UCanvas* inCanvas, struct FVector CameraPosition, struct FVector CameraDir, struct FVector ObjectLocation, struct FVector* ScreenLocation )
{
	static UFunction* pFnGetEdgeScreenCoordinates = NULL;

	if ( ! pFnGetEdgeScreenCoordinates )
		pFnGetEdgeScreenCoordinates = (UFunction*) UObject::GObjObjects()->Data[ 72489 ];

	ATrHUD_execGetEdgeScreenCoordinates_Parms GetEdgeScreenCoordinates_Parms;
	GetEdgeScreenCoordinates_Parms.inCanvas = inCanvas;
	memcpy ( &GetEdgeScreenCoordinates_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &GetEdgeScreenCoordinates_Parms.CameraDir, &CameraDir, 0xC );
	memcpy ( &GetEdgeScreenCoordinates_Parms.ObjectLocation, &ObjectLocation, 0xC );

	this->ProcessEvent ( pFnGetEdgeScreenCoordinates, &GetEdgeScreenCoordinates_Parms, NULL );

	if ( ScreenLocation )
		memcpy ( ScreenLocation, &GetEdgeScreenCoordinates_Parms.ScreenLocation, 0xC );

	return GetEdgeScreenCoordinates_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.DrawMICMarker
// [0x00024002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UMaterialInstanceConstant* MarkerMIC                      ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// struct FVector2D               MarkerSize                     ( CPF_Parm )
// struct FString                 markText                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFriend                        ( CPF_OptionalParm | CPF_Parm )
// float                          distScale                      ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrHUD::DrawMICMarker ( class UMaterialInstanceConstant* MarkerMIC, struct FVector Placement, class UCanvas* DrawCanvas, struct FVector2D MarkerSize, struct FString markText, unsigned long bFriend, float distScale )
{
	static UFunction* pFnDrawMICMarker = NULL;

	if ( ! pFnDrawMICMarker )
		pFnDrawMICMarker = (UFunction*) UObject::GObjObjects()->Data[ 71218 ];

	ATrHUD_execDrawMICMarker_Parms DrawMICMarker_Parms;
	DrawMICMarker_Parms.MarkerMIC = MarkerMIC;
	memcpy ( &DrawMICMarker_Parms.Placement, &Placement, 0xC );
	DrawMICMarker_Parms.DrawCanvas = DrawCanvas;
	memcpy ( &DrawMICMarker_Parms.MarkerSize, &MarkerSize, 0x8 );
	memcpy ( &DrawMICMarker_Parms.markText, &markText, 0xC );
	DrawMICMarker_Parms.bFriend = bFriend;
	DrawMICMarker_Parms.distScale = distScale;

	this->ProcessEvent ( pFnDrawMICMarker, &DrawMICMarker_Parms, NULL );

	return DrawMICMarker_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.DrawHealthBar
// [0x00020002] 
// Parameters infos:
// class UMaterialInstanceConstant* HealthBarMIC                   ( CPF_Parm )
// unsigned long                  bFriend                        ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// float                          PlacementX                     ( CPF_Parm )
// float                          PlacementY                     ( CPF_Parm )
// float                          Width                          ( CPF_Parm )
// float                          Height                         ( CPF_Parm )

void ATrHUD::DrawHealthBar ( class UMaterialInstanceConstant* HealthBarMIC, unsigned long bFriend, struct FVector Placement, class UCanvas* DrawCanvas, float PlacementX, float PlacementY, float Width, float Height )
{
	static UFunction* pFnDrawHealthBar = NULL;

	if ( ! pFnDrawHealthBar )
		pFnDrawHealthBar = (UFunction*) UObject::GObjObjects()->Data[ 95397 ];

	ATrHUD_execDrawHealthBar_Parms DrawHealthBar_Parms;
	DrawHealthBar_Parms.HealthBarMIC = HealthBarMIC;
	DrawHealthBar_Parms.bFriend = bFriend;
	memcpy ( &DrawHealthBar_Parms.Placement, &Placement, 0xC );
	DrawHealthBar_Parms.DrawCanvas = DrawCanvas;
	DrawHealthBar_Parms.PlacementX = PlacementX;
	DrawHealthBar_Parms.PlacementY = PlacementY;
	DrawHealthBar_Parms.Width = Width;
	DrawHealthBar_Parms.Height = Height;

	this->ProcessEvent ( pFnDrawHealthBar, &DrawHealthBar_Parms, NULL );
};

// Function TribesGame.TrHUD.DrawSmallText
// [0x00022002] 
// Parameters infos:
// struct FString                 ShowText                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFriend                        ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )

void ATrHUD::DrawSmallText ( struct FString ShowText, unsigned long bFriend, struct FVector Placement, class UCanvas* DrawCanvas )
{
	static UFunction* pFnDrawSmallText = NULL;

	if ( ! pFnDrawSmallText )
		pFnDrawSmallText = (UFunction*) UObject::GObjObjects()->Data[ 95390 ];

	ATrHUD_execDrawSmallText_Parms DrawSmallText_Parms;
	memcpy ( &DrawSmallText_Parms.ShowText, &ShowText, 0xC );
	DrawSmallText_Parms.bFriend = bFriend;
	memcpy ( &DrawSmallText_Parms.Placement, &Placement, 0xC );
	DrawSmallText_Parms.DrawCanvas = DrawCanvas;

	this->ProcessEvent ( pFnDrawSmallText, &DrawSmallText_Parms, NULL );
};

// Function TribesGame.TrHUD.DrawColoredMarkerText
// [0x00024002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ShowText                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FColor                  TextColor                      ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// float                          ScaleX                         ( CPF_OptionalParm | CPF_Parm )
// float                          ScaleY                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrHUD::DrawColoredMarkerText ( struct FString ShowText, struct FColor TextColor, struct FVector Placement, class UCanvas* DrawCanvas, float ScaleX, float ScaleY )
{
	static UFunction* pFnDrawColoredMarkerText = NULL;

	if ( ! pFnDrawColoredMarkerText )
		pFnDrawColoredMarkerText = (UFunction*) UObject::GObjObjects()->Data[ 95380 ];

	ATrHUD_execDrawColoredMarkerText_Parms DrawColoredMarkerText_Parms;
	memcpy ( &DrawColoredMarkerText_Parms.ShowText, &ShowText, 0xC );
	memcpy ( &DrawColoredMarkerText_Parms.TextColor, &TextColor, 0x4 );
	memcpy ( &DrawColoredMarkerText_Parms.Placement, &Placement, 0xC );
	DrawColoredMarkerText_Parms.DrawCanvas = DrawCanvas;
	DrawColoredMarkerText_Parms.ScaleX = ScaleX;
	DrawColoredMarkerText_Parms.ScaleY = ScaleY;

	this->ProcessEvent ( pFnDrawColoredMarkerText, &DrawColoredMarkerText_Parms, NULL );

	return DrawColoredMarkerText_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.DrawMarkerText
// [0x00024002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ShowText                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFriend                        ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// unsigned long                  bBuddy                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrHUD::DrawMarkerText ( struct FString ShowText, unsigned long bFriend, struct FVector Placement, class UCanvas* DrawCanvas, unsigned long bBuddy )
{
	static UFunction* pFnDrawMarkerText = NULL;

	if ( ! pFnDrawMarkerText )
		pFnDrawMarkerText = (UFunction*) UObject::GObjObjects()->Data[ 71216 ];

	ATrHUD_execDrawMarkerText_Parms DrawMarkerText_Parms;
	memcpy ( &DrawMarkerText_Parms.ShowText, &ShowText, 0xC );
	DrawMarkerText_Parms.bFriend = bFriend;
	memcpy ( &DrawMarkerText_Parms.Placement, &Placement, 0xC );
	DrawMarkerText_Parms.DrawCanvas = DrawCanvas;
	DrawMarkerText_Parms.bBuddy = bBuddy;

	this->ProcessEvent ( pFnDrawMarkerText, &DrawMarkerText_Parms, NULL );

	return DrawMarkerText_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.DrawRotatedMarker
// [0x00024002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UTexture2D*              Marker                         ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// struct FRotator                Rot                            ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// struct FString                 markText                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFriend                        ( CPF_OptionalParm | CPF_Parm )
// float                          Alpha                          ( CPF_OptionalParm | CPF_Parm )
// float                          distScale                      ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrHUD::DrawRotatedMarker ( class UTexture2D* Marker, struct FVector Placement, struct FRotator Rot, class UCanvas* DrawCanvas, struct FString markText, unsigned long bFriend, float Alpha, float distScale )
{
	static UFunction* pFnDrawRotatedMarker = NULL;

	if ( ! pFnDrawRotatedMarker )
		pFnDrawRotatedMarker = (UFunction*) UObject::GObjObjects()->Data[ 72505 ];

	ATrHUD_execDrawRotatedMarker_Parms DrawRotatedMarker_Parms;
	DrawRotatedMarker_Parms.Marker = Marker;
	memcpy ( &DrawRotatedMarker_Parms.Placement, &Placement, 0xC );
	memcpy ( &DrawRotatedMarker_Parms.Rot, &Rot, 0xC );
	DrawRotatedMarker_Parms.DrawCanvas = DrawCanvas;
	memcpy ( &DrawRotatedMarker_Parms.markText, &markText, 0xC );
	DrawRotatedMarker_Parms.bFriend = bFriend;
	DrawRotatedMarker_Parms.Alpha = Alpha;
	DrawRotatedMarker_Parms.distScale = distScale;

	this->ProcessEvent ( pFnDrawRotatedMarker, &DrawRotatedMarker_Parms, NULL );

	return DrawRotatedMarker_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.DrawMarker
// [0x00824002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UTexture2D*              Marker                         ( CPF_Parm )
// struct FVector                 Placement                      ( CPF_Parm )
// class UCanvas*                 DrawCanvas                     ( CPF_Parm )
// struct FString                 markText                       ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bFriend                        ( CPF_OptionalParm | CPF_Parm )
// float                          Alpha                          ( CPF_OptionalParm | CPF_Parm )
// float                          distScale                      ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrHUD::DrawMarker ( class UTexture2D* Marker, struct FVector Placement, class UCanvas* DrawCanvas, struct FString markText, unsigned long bFriend, float Alpha, float distScale )
{
	static UFunction* pFnDrawMarker = NULL;

	if ( ! pFnDrawMarker )
		pFnDrawMarker = (UFunction*) UObject::GObjObjects()->Data[ 72497 ];

	ATrHUD_execDrawMarker_Parms DrawMarker_Parms;
	DrawMarker_Parms.Marker = Marker;
	memcpy ( &DrawMarker_Parms.Placement, &Placement, 0xC );
	DrawMarker_Parms.DrawCanvas = DrawCanvas;
	memcpy ( &DrawMarker_Parms.markText, &markText, 0xC );
	DrawMarker_Parms.bFriend = bFriend;
	DrawMarker_Parms.Alpha = Alpha;
	DrawMarker_Parms.distScale = distScale;

	this->ProcessEvent ( pFnDrawMarker, &DrawMarker_Parms, NULL );

	return DrawMarker_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.CheckCrosshairOnFriendly
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrHUD::CheckCrosshairOnFriendly ( )
{
	static UFunction* pFnCheckCrosshairOnFriendly = NULL;

	if ( ! pFnCheckCrosshairOnFriendly )
		pFnCheckCrosshairOnFriendly = (UFunction*) UObject::GObjObjects()->Data[ 95337 ];

	ATrHUD_execCheckCrosshairOnFriendly_Parms CheckCrosshairOnFriendly_Parms;

	this->ProcessEvent ( pFnCheckCrosshairOnFriendly, &CheckCrosshairOnFriendly_Parms, NULL );

	return CheckCrosshairOnFriendly_Parms.ReturnValue;
};

// Function TribesGame.TrHUD.ClearCrosshairOnFriendly
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearCrosshairOnFriendly ( )
{
	static UFunction* pFnClearCrosshairOnFriendly = NULL;

	if ( ! pFnClearCrosshairOnFriendly )
		pFnClearCrosshairOnFriendly = (UFunction*) UObject::GObjObjects()->Data[ 95336 ];

	ATrHUD_execClearCrosshairOnFriendly_Parms ClearCrosshairOnFriendly_Parms;

	this->ProcessEvent ( pFnClearCrosshairOnFriendly, &ClearCrosshairOnFriendly_Parms, NULL );
};

// Function TribesGame.TrHUD.CompleteTeamSelectionMenuClose
// [0x00020002] 
// Parameters infos:

void ATrHUD::CompleteTeamSelectionMenuClose ( )
{
	static UFunction* pFnCompleteTeamSelectionMenuClose = NULL;

	if ( ! pFnCompleteTeamSelectionMenuClose )
		pFnCompleteTeamSelectionMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 95335 ];

	ATrHUD_execCompleteTeamSelectionMenuClose_Parms CompleteTeamSelectionMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteTeamSelectionMenuClose, &CompleteTeamSelectionMenuClose_Parms, NULL );
};

// Function TribesGame.TrHUD.CompleteVehicleMenuClose
// [0x00020002] 
// Parameters infos:

void ATrHUD::CompleteVehicleMenuClose ( )
{
	static UFunction* pFnCompleteVehicleMenuClose = NULL;

	if ( ! pFnCompleteVehicleMenuClose )
		pFnCompleteVehicleMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 95334 ];

	ATrHUD_execCompleteVehicleMenuClose_Parms CompleteVehicleMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteVehicleMenuClose, &CompleteVehicleMenuClose_Parms, NULL );
};

// Function TribesGame.TrHUD.RemoveMovies
// [0x00020002] 
// Parameters infos:

void ATrHUD::RemoveMovies ( )
{
	static UFunction* pFnRemoveMovies = NULL;

	if ( ! pFnRemoveMovies )
		pFnRemoveMovies = (UFunction*) UObject::GObjObjects()->Data[ 95333 ];

	ATrHUD_execRemoveMovies_Parms RemoveMovies_Parms;

	this->ProcessEvent ( pFnRemoveMovies, &RemoveMovies_Parms, NULL );
};

// Function TribesGame.TrHUD.HideMenus
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::HideMenus ( )
{
	static UFunction* pFnHideMenus = NULL;

	if ( ! pFnHideMenus )
		pFnHideMenus = (UFunction*) UObject::GObjObjects()->Data[ 95332 ];

	ATrHUD_execHideMenus_Parms HideMenus_Parms;

	this->ProcessEvent ( pFnHideMenus, &HideMenus_Parms, NULL );
};

// Function TribesGame.TrHUD.RestoreHUDState
// [0x00020002] 
// Parameters infos:

void ATrHUD::RestoreHUDState ( )
{
	static UFunction* pFnRestoreHUDState = NULL;

	if ( ! pFnRestoreHUDState )
		pFnRestoreHUDState = (UFunction*) UObject::GObjObjects()->Data[ 95328 ];

	ATrHUD_execRestoreHUDState_Parms RestoreHUDState_Parms;

	this->ProcessEvent ( pFnRestoreHUDState, &RestoreHUDState_Parms, NULL );
};

// Function TribesGame.TrHUD.ResolutionChanged
// [0x00020002] 
// Parameters infos:

void ATrHUD::ResolutionChanged ( )
{
	static UFunction* pFnResolutionChanged = NULL;

	if ( ! pFnResolutionChanged )
		pFnResolutionChanged = (UFunction*) UObject::GObjObjects()->Data[ 95325 ];

	ATrHUD_execResolutionChanged_Parms ResolutionChanged_Parms;

	this->ProcessEvent ( pFnResolutionChanged, &ResolutionChanged_Parms, NULL );
};

// Function TribesGame.TrHUD.RabbitScoreboardActivePlayer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrHUD::RabbitScoreboardActivePlayer ( int Index, unsigned long bVisible )
{
	static UFunction* pFnRabbitScoreboardActivePlayer = NULL;

	if ( ! pFnRabbitScoreboardActivePlayer )
		pFnRabbitScoreboardActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 95322 ];

	ATrHUD_execRabbitScoreboardActivePlayer_Parms RabbitScoreboardActivePlayer_Parms;
	RabbitScoreboardActivePlayer_Parms.Index = Index;
	RabbitScoreboardActivePlayer_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnRabbitScoreboardActivePlayer, &RabbitScoreboardActivePlayer_Parms, NULL );
};

// Function TribesGame.TrHUD.TeamScoreboardActivePlayer
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ATrHUD::TeamScoreboardActivePlayer ( int Index )
{
	static UFunction* pFnTeamScoreboardActivePlayer = NULL;

	if ( ! pFnTeamScoreboardActivePlayer )
		pFnTeamScoreboardActivePlayer = (UFunction*) UObject::GObjObjects()->Data[ 95320 ];

	ATrHUD_execTeamScoreboardActivePlayer_Parms TeamScoreboardActivePlayer_Parms;
	TeamScoreboardActivePlayer_Parms.Index = Index;

	this->ProcessEvent ( pFnTeamScoreboardActivePlayer, &TeamScoreboardActivePlayer_Parms, NULL );
};

// Function TribesGame.TrHUD.RabbitScoreboardUpdateTime
// [0x00020000] 
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::RabbitScoreboardUpdateTime ( struct FString Time )
{
	static UFunction* pFnRabbitScoreboardUpdateTime = NULL;

	if ( ! pFnRabbitScoreboardUpdateTime )
		pFnRabbitScoreboardUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 95318 ];

	ATrHUD_execRabbitScoreboardUpdateTime_Parms RabbitScoreboardUpdateTime_Parms;
	memcpy ( &RabbitScoreboardUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnRabbitScoreboardUpdateTime, &RabbitScoreboardUpdateTime_Parms, NULL );
};

// Function TribesGame.TrHUD.TeamScoreboardUpdateTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Time                           ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::TeamScoreboardUpdateTime ( struct FString Time )
{
	static UFunction* pFnTeamScoreboardUpdateTime = NULL;

	if ( ! pFnTeamScoreboardUpdateTime )
		pFnTeamScoreboardUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 95316 ];

	ATrHUD_execTeamScoreboardUpdateTime_Parms TeamScoreboardUpdateTime_Parms;
	memcpy ( &TeamScoreboardUpdateTime_Parms.Time, &Time, 0xC );

	this->ProcessEvent ( pFnTeamScoreboardUpdateTime, &TeamScoreboardUpdateTime_Parms, NULL );
};

// Function TribesGame.TrHUD.TeamScoreboardUpdateTeamScore
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            Score                          ( CPF_Parm )

void ATrHUD::TeamScoreboardUpdateTeamScore ( int Index, int Score )
{
	static UFunction* pFnTeamScoreboardUpdateTeamScore = NULL;

	if ( ! pFnTeamScoreboardUpdateTeamScore )
		pFnTeamScoreboardUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 95313 ];

	ATrHUD_execTeamScoreboardUpdateTeamScore_Parms TeamScoreboardUpdateTeamScore_Parms;
	TeamScoreboardUpdateTeamScore_Parms.Index = Index;
	TeamScoreboardUpdateTeamScore_Parms.Score = Score;

	this->ProcessEvent ( pFnTeamScoreboardUpdateTeamScore, &TeamScoreboardUpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrHUD.RabbitScoreboardUpdateSlot
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Score                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Kills                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Assists                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Ping                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassAbb                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )
// int                            RankIcon                       ( CPF_Parm )

void ATrHUD::RabbitScoreboardUpdateSlot ( int Index, struct FString PlayerName, struct FString Score, struct FString Kills, struct FString Assists, struct FString Ping, struct FString ClassAbb, int Rank, int RankIcon )
{
	static UFunction* pFnRabbitScoreboardUpdateSlot = NULL;

	if ( ! pFnRabbitScoreboardUpdateSlot )
		pFnRabbitScoreboardUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 95303 ];

	ATrHUD_execRabbitScoreboardUpdateSlot_Parms RabbitScoreboardUpdateSlot_Parms;
	RabbitScoreboardUpdateSlot_Parms.Index = Index;
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Score, &Score, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Kills, &Kills, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Assists, &Assists, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.Ping, &Ping, 0xC );
	memcpy ( &RabbitScoreboardUpdateSlot_Parms.ClassAbb, &ClassAbb, 0xC );
	RabbitScoreboardUpdateSlot_Parms.Rank = Rank;
	RabbitScoreboardUpdateSlot_Parms.RankIcon = RankIcon;

	this->ProcessEvent ( pFnRabbitScoreboardUpdateSlot, &RabbitScoreboardUpdateSlot_Parms, NULL );
};

// Function TribesGame.TrHUD.TeamScoreboardUpdateSlot
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Score                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Kills                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Assists                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Ping                           ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ClassAbb                       ( CPF_Parm | CPF_NeedCtorLink )
// int                            Rank                           ( CPF_Parm )
// int                            RankIcon                       ( CPF_Parm )

void ATrHUD::TeamScoreboardUpdateSlot ( int Index, struct FString PlayerName, struct FString Score, struct FString Kills, struct FString Assists, struct FString Ping, struct FString ClassAbb, int Rank, int RankIcon )
{
	static UFunction* pFnTeamScoreboardUpdateSlot = NULL;

	if ( ! pFnTeamScoreboardUpdateSlot )
		pFnTeamScoreboardUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 95293 ];

	ATrHUD_execTeamScoreboardUpdateSlot_Parms TeamScoreboardUpdateSlot_Parms;
	TeamScoreboardUpdateSlot_Parms.Index = Index;
	memcpy ( &TeamScoreboardUpdateSlot_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Score, &Score, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Kills, &Kills, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Assists, &Assists, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.Ping, &Ping, 0xC );
	memcpy ( &TeamScoreboardUpdateSlot_Parms.ClassAbb, &ClassAbb, 0xC );
	TeamScoreboardUpdateSlot_Parms.Rank = Rank;
	TeamScoreboardUpdateSlot_Parms.RankIcon = RankIcon;

	this->ProcessEvent ( pFnTeamScoreboardUpdateSlot, &TeamScoreboardUpdateSlot_Parms, NULL );
};

// Function TribesGame.TrHUD.RabbitScoreboardShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrHUD::RabbitScoreboardShow ( unsigned long bVisible )
{
	static UFunction* pFnRabbitScoreboardShow = NULL;

	if ( ! pFnRabbitScoreboardShow )
		pFnRabbitScoreboardShow = (UFunction*) UObject::GObjObjects()->Data[ 95291 ];

	ATrHUD_execRabbitScoreboardShow_Parms RabbitScoreboardShow_Parms;
	RabbitScoreboardShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnRabbitScoreboardShow, &RabbitScoreboardShow_Parms, NULL );
};

// Function TribesGame.TrHUD.TeamScoreboardShow
// [0x00020002] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrHUD::TeamScoreboardShow ( unsigned long bVisible )
{
	static UFunction* pFnTeamScoreboardShow = NULL;

	if ( ! pFnTeamScoreboardShow )
		pFnTeamScoreboardShow = (UFunction*) UObject::GObjObjects()->Data[ 95289 ];

	ATrHUD_execTeamScoreboardShow_Parms TeamScoreboardShow_Parms;
	TeamScoreboardShow_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnTeamScoreboardShow, &TeamScoreboardShow_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateHUDCredits
// [0x00020002] 
// Parameters infos:
// int                            changeAmount                   ( CPF_Parm )
// int                            newTotal                       ( CPF_Parm )

void ATrHUD::UpdateHUDCredits ( int changeAmount, int newTotal )
{
	static UFunction* pFnUpdateHUDCredits = NULL;

	if ( ! pFnUpdateHUDCredits )
		pFnUpdateHUDCredits = (UFunction*) UObject::GObjObjects()->Data[ 95286 ];

	ATrHUD_execUpdateHUDCredits_Parms UpdateHUDCredits_Parms;
	UpdateHUDCredits_Parms.changeAmount = changeAmount;
	UpdateHUDCredits_Parms.newTotal = newTotal;

	this->ProcessEvent ( pFnUpdateHUDCredits, &UpdateHUDCredits_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateRespawnTimer
// [0x00020002] 
// Parameters infos:
// int                            TimeRemaining                  ( CPF_Parm )

void ATrHUD::UpdateRespawnTimer ( int TimeRemaining )
{
	static UFunction* pFnUpdateRespawnTimer = NULL;

	if ( ! pFnUpdateRespawnTimer )
		pFnUpdateRespawnTimer = (UFunction*) UObject::GObjObjects()->Data[ 95284 ];

	ATrHUD_execUpdateRespawnTimer_Parms UpdateRespawnTimer_Parms;
	UpdateRespawnTimer_Parms.TimeRemaining = TimeRemaining;

	this->ProcessEvent ( pFnUpdateRespawnTimer, &UpdateRespawnTimer_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateRespawnText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::UpdateRespawnText ( struct FString Text )
{
	static UFunction* pFnUpdateRespawnText = NULL;

	if ( ! pFnUpdateRespawnText )
		pFnUpdateRespawnText = (UFunction*) UObject::GObjObjects()->Data[ 95282 ];

	ATrHUD_execUpdateRespawnText_Parms UpdateRespawnText_Parms;
	memcpy ( &UpdateRespawnText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnUpdateRespawnText, &UpdateRespawnText_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowCenterHUDElements
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ATrHUD::ShowCenterHUDElements ( unsigned long bShow )
{
	static UFunction* pFnShowCenterHUDElements = NULL;

	if ( ! pFnShowCenterHUDElements )
		pFnShowCenterHUDElements = (UFunction*) UObject::GObjObjects()->Data[ 95280 ];

	ATrHUD_execShowCenterHUDElements_Parms ShowCenterHUDElements_Parms;
	ShowCenterHUDElements_Parms.bShow = bShow;

	this->ProcessEvent ( pFnShowCenterHUDElements, &ShowCenterHUDElements_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowHUDPlayerAlive
// [0x00020002] 
// Parameters infos:

void ATrHUD::ShowHUDPlayerAlive ( )
{
	static UFunction* pFnShowHUDPlayerAlive = NULL;

	if ( ! pFnShowHUDPlayerAlive )
		pFnShowHUDPlayerAlive = (UFunction*) UObject::GObjObjects()->Data[ 95279 ];

	ATrHUD_execShowHUDPlayerAlive_Parms ShowHUDPlayerAlive_Parms;

	this->ProcessEvent ( pFnShowHUDPlayerAlive, &ShowHUDPlayerAlive_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowHUDPlayerSpawning
// [0x00020002] 
// Parameters infos:

void ATrHUD::ShowHUDPlayerSpawning ( )
{
	static UFunction* pFnShowHUDPlayerSpawning = NULL;

	if ( ! pFnShowHUDPlayerSpawning )
		pFnShowHUDPlayerSpawning = (UFunction*) UObject::GObjObjects()->Data[ 95278 ];

	ATrHUD_execShowHUDPlayerSpawning_Parms ShowHUDPlayerSpawning_Parms;

	this->ProcessEvent ( pFnShowHUDPlayerSpawning, &ShowHUDPlayerSpawning_Parms, NULL );
};

// Function TribesGame.TrHUD.HideHUDElements
// [0x00024002] 
// Parameters infos:
// unsigned long                  bShowStats                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bForceCredits                  ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::HideHUDElements ( unsigned long bShowStats, unsigned long bForceCredits )
{
	static UFunction* pFnHideHUDElements = NULL;

	if ( ! pFnHideHUDElements )
		pFnHideHUDElements = (UFunction*) UObject::GObjObjects()->Data[ 95275 ];

	ATrHUD_execHideHUDElements_Parms HideHUDElements_Parms;
	HideHUDElements_Parms.bShowStats = bShowStats;
	HideHUDElements_Parms.bForceCredits = bForceCredits;

	this->ProcessEvent ( pFnHideHUDElements, &HideHUDElements_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearSpectatorHUDCache
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearSpectatorHUDCache ( )
{
	static UFunction* pFnClearSpectatorHUDCache = NULL;

	if ( ! pFnClearSpectatorHUDCache )
		pFnClearSpectatorHUDCache = (UFunction*) UObject::GObjObjects()->Data[ 95274 ];

	ATrHUD_execClearSpectatorHUDCache_Parms ClearSpectatorHUDCache_Parms;

	this->ProcessEvent ( pFnClearSpectatorHUDCache, &ClearSpectatorHUDCache_Parms, NULL );
};

// Function TribesGame.TrHUD.CreateSpectatorHUDCache
// [0x00020002] 
// Parameters infos:

void ATrHUD::CreateSpectatorHUDCache ( )
{
	static UFunction* pFnCreateSpectatorHUDCache = NULL;

	if ( ! pFnCreateSpectatorHUDCache )
		pFnCreateSpectatorHUDCache = (UFunction*) UObject::GObjObjects()->Data[ 95273 ];

	ATrHUD_execCreateSpectatorHUDCache_Parms CreateSpectatorHUDCache_Parms;

	this->ProcessEvent ( pFnCreateSpectatorHUDCache, &CreateSpectatorHUDCache_Parms, NULL );
};

// Function TribesGame.TrHUD.OnSpectate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bUpdateTeamState               ( CPF_Parm )

void ATrHUD::OnSpectate ( unsigned long bUpdateTeamState )
{
	static UFunction* pFnOnSpectate = NULL;

	if ( ! pFnOnSpectate )
		pFnOnSpectate = (UFunction*) UObject::GObjObjects()->Data[ 95271 ];

	ATrHUD_execOnSpectate_Parms OnSpectate_Parms;
	OnSpectate_Parms.bUpdateTeamState = bUpdateTeamState;

	this->ProcessEvent ( pFnOnSpectate, &OnSpectate_Parms, NULL );
};

// Function TribesGame.TrHUD.AddFlyingIcon
// [0x00024002] 
// Parameters infos:
// int                            iconNumber                     ( CPF_Parm )
// struct FString                 Description                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Points                         ( CPF_Parm | CPF_NeedCtorLink )
// int                            bIsBadge                       ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::AddFlyingIcon ( int iconNumber, struct FString Description, struct FString Points, int bIsBadge )
{
	static UFunction* pFnAddFlyingIcon = NULL;

	if ( ! pFnAddFlyingIcon )
		pFnAddFlyingIcon = (UFunction*) UObject::GObjObjects()->Data[ 95266 ];

	ATrHUD_execAddFlyingIcon_Parms AddFlyingIcon_Parms;
	AddFlyingIcon_Parms.iconNumber = iconNumber;
	memcpy ( &AddFlyingIcon_Parms.Description, &Description, 0xC );
	memcpy ( &AddFlyingIcon_Parms.Points, &Points, 0xC );
	AddFlyingIcon_Parms.bIsBadge = bIsBadge;

	this->ProcessEvent ( pFnAddFlyingIcon, &AddFlyingIcon_Parms, NULL );
};

// Function TribesGame.TrHUD.AddUpdateToKillMessage
// [0x00020002] 
// Parameters infos:
// int                            RankIcon                       ( CPF_Parm )
// int                            PlayerIcon                     ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::AddUpdateToKillMessage ( int RankIcon, int PlayerIcon, struct FString PlayerName, struct FString Message )
{
	static UFunction* pFnAddUpdateToKillMessage = NULL;

	if ( ! pFnAddUpdateToKillMessage )
		pFnAddUpdateToKillMessage = (UFunction*) UObject::GObjObjects()->Data[ 95261 ];

	ATrHUD_execAddUpdateToKillMessage_Parms AddUpdateToKillMessage_Parms;
	AddUpdateToKillMessage_Parms.RankIcon = RankIcon;
	AddUpdateToKillMessage_Parms.PlayerIcon = PlayerIcon;
	memcpy ( &AddUpdateToKillMessage_Parms.PlayerName, &PlayerName, 0xC );
	memcpy ( &AddUpdateToKillMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnAddUpdateToKillMessage, &AddUpdateToKillMessage_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearHelpText
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearHelpText ( )
{
	static UFunction* pFnClearHelpText = NULL;

	if ( ! pFnClearHelpText )
		pFnClearHelpText = (UFunction*) UObject::GObjObjects()->Data[ 95260 ];

	ATrHUD_execClearHelpText_Parms ClearHelpText_Parms;

	this->ProcessEvent ( pFnClearHelpText, &ClearHelpText_Parms, NULL );
};

// Function TribesGame.TrHUD.AddToHelpText
// [0x00020002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Body                           ( CPF_Parm | CPF_NeedCtorLink )
// float                          PictureIndex                   ( CPF_Parm )
// struct FString                 footer                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 SuppressString                 ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::AddToHelpText ( struct FString Title, struct FString Body, float PictureIndex, struct FString footer, struct FString SuppressString )
{
	static UFunction* pFnAddToHelpText = NULL;

	if ( ! pFnAddToHelpText )
		pFnAddToHelpText = (UFunction*) UObject::GObjObjects()->Data[ 95254 ];

	ATrHUD_execAddToHelpText_Parms AddToHelpText_Parms;
	memcpy ( &AddToHelpText_Parms.Title, &Title, 0xC );
	memcpy ( &AddToHelpText_Parms.Body, &Body, 0xC );
	AddToHelpText_Parms.PictureIndex = PictureIndex;
	memcpy ( &AddToHelpText_Parms.footer, &footer, 0xC );
	memcpy ( &AddToHelpText_Parms.SuppressString, &SuppressString, 0xC );

	this->ProcessEvent ( pFnAddToHelpText, &AddToHelpText_Parms, NULL );
};

// Function TribesGame.TrHUD.HideVGSMenu
// [0x00020002] 
// Parameters infos:

void ATrHUD::HideVGSMenu ( )
{
	static UFunction* pFnHideVGSMenu = NULL;

	if ( ! pFnHideVGSMenu )
		pFnHideVGSMenu = (UFunction*) UObject::GObjObjects()->Data[ 95253 ];

	ATrHUD_execHideVGSMenu_Parms HideVGSMenu_Parms;

	this->ProcessEvent ( pFnHideVGSMenu, &HideVGSMenu_Parms, NULL );
};

// Function TribesGame.TrHUD.UpdateVGSMenu
// [0x00020002] 
// Parameters infos:

void ATrHUD::UpdateVGSMenu ( )
{
	static UFunction* pFnUpdateVGSMenu = NULL;

	if ( ! pFnUpdateVGSMenu )
		pFnUpdateVGSMenu = (UFunction*) UObject::GObjObjects()->Data[ 95252 ];

	ATrHUD_execUpdateVGSMenu_Parms UpdateVGSMenu_Parms;

	this->ProcessEvent ( pFnUpdateVGSMenu, &UpdateVGSMenu_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearPromptPanelMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::ClearPromptPanelMessage ( struct FString Message )
{
	static UFunction* pFnClearPromptPanelMessage = NULL;

	if ( ! pFnClearPromptPanelMessage )
		pFnClearPromptPanelMessage = (UFunction*) UObject::GObjObjects()->Data[ 95250 ];

	ATrHUD_execClearPromptPanelMessage_Parms ClearPromptPanelMessage_Parms;
	memcpy ( &ClearPromptPanelMessage_Parms.Message, &Message, 0xC );

	this->ProcessEvent ( pFnClearPromptPanelMessage, &ClearPromptPanelMessage_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearHeroStatus
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearHeroStatus ( )
{
	static UFunction* pFnClearHeroStatus = NULL;

	if ( ! pFnClearHeroStatus )
		pFnClearHeroStatus = (UFunction*) UObject::GObjObjects()->Data[ 95249 ];

	ATrHUD_execClearHeroStatus_Parms ClearHeroStatus_Parms;

	this->ProcessEvent ( pFnClearHeroStatus, &ClearHeroStatus_Parms, NULL );
};

// Function TribesGame.TrHUD.AddToHeroStatus
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          ShowTime                       ( CPF_Parm )

void ATrHUD::AddToHeroStatus ( struct FString Message, float ShowTime )
{
	static UFunction* pFnAddToHeroStatus = NULL;

	if ( ! pFnAddToHeroStatus )
		pFnAddToHeroStatus = (UFunction*) UObject::GObjObjects()->Data[ 95246 ];

	ATrHUD_execAddToHeroStatus_Parms AddToHeroStatus_Parms;
	memcpy ( &AddToHeroStatus_Parms.Message, &Message, 0xC );
	AddToHeroStatus_Parms.ShowTime = ShowTime;

	this->ProcessEvent ( pFnAddToHeroStatus, &AddToHeroStatus_Parms, NULL );
};

// Function TribesGame.TrHUD.ClearPromptPanel
// [0x00020002] 
// Parameters infos:

void ATrHUD::ClearPromptPanel ( )
{
	static UFunction* pFnClearPromptPanel = NULL;

	if ( ! pFnClearPromptPanel )
		pFnClearPromptPanel = (UFunction*) UObject::GObjObjects()->Data[ 95245 ];

	ATrHUD_execClearPromptPanel_Parms ClearPromptPanel_Parms;

	this->ProcessEvent ( pFnClearPromptPanel, &ClearPromptPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.AddToPromptPanelTime
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          EndTime                        ( CPF_Parm )
// unsigned char                  Priority                       ( CPF_Parm )

void ATrHUD::AddToPromptPanelTime ( struct FString Message, float EndTime, unsigned char Priority )
{
	static UFunction* pFnAddToPromptPanelTime = NULL;

	if ( ! pFnAddToPromptPanelTime )
		pFnAddToPromptPanelTime = (UFunction*) UObject::GObjObjects()->Data[ 95241 ];

	ATrHUD_execAddToPromptPanelTime_Parms AddToPromptPanelTime_Parms;
	memcpy ( &AddToPromptPanelTime_Parms.Message, &Message, 0xC );
	AddToPromptPanelTime_Parms.EndTime = EndTime;
	AddToPromptPanelTime_Parms.Priority = Priority;

	this->ProcessEvent ( pFnAddToPromptPanelTime, &AddToPromptPanelTime_Parms, NULL );
};

// Function TribesGame.TrHUD.AddToPromptPanel
// [0x00020002] 
// Parameters infos:
// struct FString                 Message                        ( CPF_Parm | CPF_NeedCtorLink )
// unsigned char                  Priority                       ( CPF_Parm )

void ATrHUD::AddToPromptPanel ( struct FString Message, unsigned char Priority )
{
	static UFunction* pFnAddToPromptPanel = NULL;

	if ( ! pFnAddToPromptPanel )
		pFnAddToPromptPanel = (UFunction*) UObject::GObjObjects()->Data[ 95238 ];

	ATrHUD_execAddToPromptPanel_Parms AddToPromptPanel_Parms;
	memcpy ( &AddToPromptPanel_Parms.Message, &Message, 0xC );
	AddToPromptPanel_Parms.Priority = Priority;

	this->ProcessEvent ( pFnAddToPromptPanel, &AddToPromptPanel_Parms, NULL );
};

// Function TribesGame.TrHUD.AddUpdateToCombatLog
// [0x00020002] 
// Parameters infos:
// int                            CombatType                     ( CPF_Parm )
// struct FString                 Aggressor                      ( CPF_Parm | CPF_NeedCtorLink )
// int                            WeaponIcon                     ( CPF_Parm )
// struct FString                 Victim                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::AddUpdateToCombatLog ( int CombatType, struct FString Aggressor, int WeaponIcon, struct FString Victim )
{
	static UFunction* pFnAddUpdateToCombatLog = NULL;

	if ( ! pFnAddUpdateToCombatLog )
		pFnAddUpdateToCombatLog = (UFunction*) UObject::GObjObjects()->Data[ 95233 ];

	ATrHUD_execAddUpdateToCombatLog_Parms AddUpdateToCombatLog_Parms;
	AddUpdateToCombatLog_Parms.CombatType = CombatType;
	memcpy ( &AddUpdateToCombatLog_Parms.Aggressor, &Aggressor, 0xC );
	AddUpdateToCombatLog_Parms.WeaponIcon = WeaponIcon;
	memcpy ( &AddUpdateToCombatLog_Parms.Victim, &Victim, 0xC );

	this->ProcessEvent ( pFnAddUpdateToCombatLog, &AddUpdateToCombatLog_Parms, NULL );
};

// Function TribesGame.TrHUD.SetPowerOscillation
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void ATrHUD::SetPowerOscillation ( unsigned long bEnable )
{
	static UFunction* pFnSetPowerOscillation = NULL;

	if ( ! pFnSetPowerOscillation )
		pFnSetPowerOscillation = (UFunction*) UObject::GObjObjects()->Data[ 95231 ];

	ATrHUD_execSetPowerOscillation_Parms SetPowerOscillation_Parms;
	SetPowerOscillation_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnSetPowerOscillation, &SetPowerOscillation_Parms, NULL );
};

// Function TribesGame.TrHUD.ToggleTeamSelectionMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ToggleTeamSelectionMenu ( )
{
	static UFunction* pFnToggleTeamSelectionMenu = NULL;

	if ( ! pFnToggleTeamSelectionMenu )
		pFnToggleTeamSelectionMenu = (UFunction*) UObject::GObjObjects()->Data[ 95229 ];

	ATrHUD_execToggleTeamSelectionMenu_Parms ToggleTeamSelectionMenu_Parms;

	this->ProcessEvent ( pFnToggleTeamSelectionMenu, &ToggleTeamSelectionMenu_Parms, NULL );
};

// Function TribesGame.TrHUD.ToggleVehicleMenu
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ToggleVehicleMenu ( )
{
	static UFunction* pFnToggleVehicleMenu = NULL;

	if ( ! pFnToggleVehicleMenu )
		pFnToggleVehicleMenu = (UFunction*) UObject::GObjObjects()->Data[ 95226 ];

	ATrHUD_execToggleVehicleMenu_Parms ToggleVehicleMenu_Parms;

	this->ProcessEvent ( pFnToggleVehicleMenu, &ToggleVehicleMenu_Parms, NULL );
};

// Function TribesGame.TrHUD.ToggleMovieHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrHUD::ToggleMovieHUD ( )
{
	static UFunction* pFnToggleMovieHUD = NULL;

	if ( ! pFnToggleMovieHUD )
		pFnToggleMovieHUD = (UFunction*) UObject::GObjObjects()->Data[ 95225 ];

	ATrHUD_execToggleMovieHUD_Parms ToggleMovieHUD_Parms;

	this->ProcessEvent ( pFnToggleMovieHUD, &ToggleMovieHUD_Parms, NULL );
};

// Function TribesGame.TrHUD.TogglePauseMenu
// [0x00020002] 
// Parameters infos:

void ATrHUD::TogglePauseMenu ( )
{
	static UFunction* pFnTogglePauseMenu = NULL;

	if ( ! pFnTogglePauseMenu )
		pFnTogglePauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 95223 ];

	ATrHUD_execTogglePauseMenu_Parms TogglePauseMenu_Parms;

	this->ProcessEvent ( pFnTogglePauseMenu, &TogglePauseMenu_Parms, NULL );
};

// Function TribesGame.TrHUD.ToggleSkiEffect
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )
// float                          fSpeed                         ( CPF_Parm )

void ATrHUD::ToggleSkiEffect ( unsigned long bEnabled, float fSpeed )
{
	static UFunction* pFnToggleSkiEffect = NULL;

	if ( ! pFnToggleSkiEffect )
		pFnToggleSkiEffect = (UFunction*) UObject::GObjObjects()->Data[ 95220 ];

	ATrHUD_execToggleSkiEffect_Parms ToggleSkiEffect_Parms;
	ToggleSkiEffect_Parms.bEnabled = bEnabled;
	ToggleSkiEffect_Parms.fSpeed = fSpeed;

	this->ProcessEvent ( pFnToggleSkiEffect, &ToggleSkiEffect_Parms, NULL );
};

// Function TribesGame.TrHUD.ScaleformJoystickInputEvent
// [0x00020000] 
// Parameters infos:
// float                          leftAngle                      ( CPF_Parm )
// float                          rightAngle                     ( CPF_Parm )

void ATrHUD::ScaleformJoystickInputEvent ( float leftAngle, float rightAngle )
{
	static UFunction* pFnScaleformJoystickInputEvent = NULL;

	if ( ! pFnScaleformJoystickInputEvent )
		pFnScaleformJoystickInputEvent = (UFunction*) UObject::GObjObjects()->Data[ 95217 ];

	ATrHUD_execScaleformJoystickInputEvent_Parms ScaleformJoystickInputEvent_Parms;
	ScaleformJoystickInputEvent_Parms.leftAngle = leftAngle;
	ScaleformJoystickInputEvent_Parms.rightAngle = rightAngle;

	this->ProcessEvent ( pFnScaleformJoystickInputEvent, &ScaleformJoystickInputEvent_Parms, NULL );
};

// Function TribesGame.TrHUD.FadeInSummary
// [0x00020002] 
// Parameters infos:

void ATrHUD::FadeInSummary ( )
{
	static UFunction* pFnFadeInSummary = NULL;

	if ( ! pFnFadeInSummary )
		pFnFadeInSummary = (UFunction*) UObject::GObjObjects()->Data[ 95216 ];

	ATrHUD_execFadeInSummary_Parms FadeInSummary_Parms;

	this->ProcessEvent ( pFnFadeInSummary, &FadeInSummary_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowEnding
// [0x00020002] 
// Parameters infos:

void ATrHUD::ShowEnding ( )
{
	static UFunction* pFnShowEnding = NULL;

	if ( ! pFnShowEnding )
		pFnShowEnding = (UFunction*) UObject::GObjObjects()->Data[ 95213 ];

	ATrHUD_execShowEnding_Parms ShowEnding_Parms;

	this->ProcessEvent ( pFnShowEnding, &ShowEnding_Parms, NULL );
};

// Function TribesGame.TrHUD.PlayMatchOver
// [0x00020002] 
// Parameters infos:
// int                            Winner                         ( CPF_Parm )
// struct FString                 WinnerName                     ( CPF_Parm | CPF_NeedCtorLink )

void ATrHUD::PlayMatchOver ( int Winner, struct FString WinnerName )
{
	static UFunction* pFnPlayMatchOver = NULL;

	if ( ! pFnPlayMatchOver )
		pFnPlayMatchOver = (UFunction*) UObject::GObjObjects()->Data[ 95210 ];

	ATrHUD_execPlayMatchOver_Parms PlayMatchOver_Parms;
	PlayMatchOver_Parms.Winner = Winner;
	memcpy ( &PlayMatchOver_Parms.WinnerName, &WinnerName, 0xC );

	this->ProcessEvent ( pFnPlayMatchOver, &PlayMatchOver_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowRoundEnding
// [0x00020002] 
// Parameters infos:

void ATrHUD::ShowRoundEnding ( )
{
	static UFunction* pFnShowRoundEnding = NULL;

	if ( ! pFnShowRoundEnding )
		pFnShowRoundEnding = (UFunction*) UObject::GObjObjects()->Data[ 95209 ];

	ATrHUD_execShowRoundEnding_Parms ShowRoundEnding_Parms;

	this->ProcessEvent ( pFnShowRoundEnding, &ShowRoundEnding_Parms, NULL );
};

// Function TribesGame.TrHUD.PlayRoundOver
// [0x00020002] 
// Parameters infos:
// int                            WinningTeam                    ( CPF_Parm )

void ATrHUD::PlayRoundOver ( int WinningTeam )
{
	static UFunction* pFnPlayRoundOver = NULL;

	if ( ! pFnPlayRoundOver )
		pFnPlayRoundOver = (UFunction*) UObject::GObjObjects()->Data[ 95207 ];

	ATrHUD_execPlayRoundOver_Parms PlayRoundOver_Parms;
	PlayRoundOver_Parms.WinningTeam = WinningTeam;

	this->ProcessEvent ( pFnPlayRoundOver, &PlayRoundOver_Parms, NULL );
};

// Function TribesGame.TrHUD.Fade
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// float                          FadeTarget                     ( CPF_Parm )
// float                          FadeSpeed                      ( CPF_Parm )
// float                          bForceFadeInStartAlpha         ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::Fade ( float FadeTarget, float FadeSpeed, float bForceFadeInStartAlpha )
{
	static UFunction* pFnFade = NULL;

	if ( ! pFnFade )
		pFnFade = (UFunction*) UObject::GObjObjects()->Data[ 95203 ];

	ATrHUD_execFade_Parms Fade_Parms;
	Fade_Parms.FadeTarget = FadeTarget;
	Fade_Parms.FadeSpeed = FadeSpeed;
	Fade_Parms.bForceFadeInStartAlpha = bForceFadeInStartAlpha;

	this->ProcessEvent ( pFnFade, &Fade_Parms, NULL );
};

// Function TribesGame.TrHUD.FadeInTimer
// [0x00020002] 
// Parameters infos:

void ATrHUD::FadeInTimer ( )
{
	static UFunction* pFnFadeInTimer = NULL;

	if ( ! pFnFadeInTimer )
		pFnFadeInTimer = (UFunction*) UObject::GObjObjects()->Data[ 95202 ];

	ATrHUD_execFadeInTimer_Parms FadeInTimer_Parms;

	this->ProcessEvent ( pFnFadeInTimer, &FadeInTimer_Parms, NULL );
};

// Function TribesGame.TrHUD.InitializeGameHUD
// [0x00020002] 
// Parameters infos:

void ATrHUD::InitializeGameHUD ( )
{
	static UFunction* pFnInitializeGameHUD = NULL;

	if ( ! pFnInitializeGameHUD )
		pFnInitializeGameHUD = (UFunction*) UObject::GObjObjects()->Data[ 95194 ];

	ATrHUD_execInitializeGameHUD_Parms InitializeGameHUD_Parms;

	this->ProcessEvent ( pFnInitializeGameHUD, &InitializeGameHUD_Parms, NULL );
};

// Function TribesGame.TrHUD.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrHUD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 95193 ];

	ATrHUD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrHUD.SetShowScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bEnableShowScores              ( CPF_Parm )

void ATrHUD::SetShowScores ( unsigned long bEnableShowScores )
{
	static UFunction* pFnSetShowScores = NULL;

	if ( ! pFnSetShowScores )
		pFnSetShowScores = (UFunction*) UObject::GObjObjects()->Data[ 95189 ];

	ATrHUD_execSetShowScores_Parms SetShowScores_Parms;
	SetShowScores_Parms.bEnableShowScores = bEnableShowScores;

	this->ProcessEvent ( pFnSetShowScores, &SetShowScores_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowSpectatorControls
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForceEnabled                  ( CPF_OptionalParm | CPF_Parm )

void ATrHUD::ShowSpectatorControls ( unsigned long bForceEnabled )
{
	static UFunction* pFnShowSpectatorControls = NULL;

	if ( ! pFnShowSpectatorControls )
		pFnShowSpectatorControls = (UFunction*) UObject::GObjObjects()->Data[ 95187 ];

	ATrHUD_execShowSpectatorControls_Parms ShowSpectatorControls_Parms;
	ShowSpectatorControls_Parms.bForceEnabled = bForceEnabled;

	this->ProcessEvent ( pFnShowSpectatorControls, &ShowSpectatorControls_Parms, NULL );
};

// Function TribesGame.TrHUD.CreateHUDMovie
// [0x00020002] 
// Parameters infos:

void ATrHUD::CreateHUDMovie ( )
{
	static UFunction* pFnCreateHUDMovie = NULL;

	if ( ! pFnCreateHUDMovie )
		pFnCreateHUDMovie = (UFunction*) UObject::GObjObjects()->Data[ 95177 ];

	ATrHUD_execCreateHUDMovie_Parms CreateHUDMovie_Parms;

	this->ProcessEvent ( pFnCreateHUDMovie, &CreateHUDMovie_Parms, NULL );
};

// Function TribesGame.TrHUD.ShowDebugInfo
// [0x00420002] 
// Parameters infos:
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void ATrHUD::ShowDebugInfo ( float* out_YL, float* out_YPos )
{
	static UFunction* pFnShowDebugInfo = NULL;

	if ( ! pFnShowDebugInfo )
		pFnShowDebugInfo = (UFunction*) UObject::GObjObjects()->Data[ 95172 ];

	ATrHUD_execShowDebugInfo_Parms ShowDebugInfo_Parms;

	this->ProcessEvent ( pFnShowDebugInfo, &ShowDebugInfo_Parms, NULL );

	if ( out_YL )
		*out_YL = ShowDebugInfo_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = ShowDebugInfo_Parms.out_YPos;
};

// Function TribesGame.TrVGSNode.GetGametypeSpecificChildrenNodes
// [0x00422002] 
// Parameters infos:
// class UClass*                  GameClass                      ( CPF_Parm )
// TArray< class UClass* >        outVGSNodeChildrenClasses      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrVGSNode::GetGametypeSpecificChildrenNodes ( class UClass* GameClass, TArray< class UClass* >* outVGSNodeChildrenClasses )
{
	static UFunction* pFnGetGametypeSpecificChildrenNodes = NULL;

	if ( ! pFnGetGametypeSpecificChildrenNodes )
		pFnGetGametypeSpecificChildrenNodes = (UFunction*) UObject::GObjObjects()->Data[ 114476 ];

	UTrVGSNode_execGetGametypeSpecificChildrenNodes_Parms GetGametypeSpecificChildrenNodes_Parms;
	GetGametypeSpecificChildrenNodes_Parms.GameClass = GameClass;

	this->ProcessEvent ( pFnGetGametypeSpecificChildrenNodes, &GetGametypeSpecificChildrenNodes_Parms, NULL );

	if ( outVGSNodeChildrenClasses )
		memcpy ( outVGSNodeChildrenClasses, &GetGametypeSpecificChildrenNodes_Parms.outVGSNodeChildrenClasses, 0xC );
};

// Function TribesGame.TrVGSNode.GetGametypeSpecificCommands
// [0x00422002] 
// Parameters infos:
// class UClass*                  GameClass                      ( CPF_Parm )
// TArray< unsigned char >        outGametypeSpecificCommands    ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void UTrVGSNode::GetGametypeSpecificCommands ( class UClass* GameClass, TArray< unsigned char >* outGametypeSpecificCommands )
{
	static UFunction* pFnGetGametypeSpecificCommands = NULL;

	if ( ! pFnGetGametypeSpecificCommands )
		pFnGetGametypeSpecificCommands = (UFunction*) UObject::GObjObjects()->Data[ 114471 ];

	UTrVGSNode_execGetGametypeSpecificCommands_Parms GetGametypeSpecificCommands_Parms;
	GetGametypeSpecificCommands_Parms.GameClass = GameClass;

	this->ProcessEvent ( pFnGetGametypeSpecificCommands, &GetGametypeSpecificCommands_Parms, NULL );

	if ( outGametypeSpecificCommands )
		memcpy ( outGametypeSpecificCommands, &GetGametypeSpecificCommands_Parms.outGametypeSpecificCommands, 0xC );
};

// Function TribesGame.TrVGSNode.VerifyVGSChild
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  VGSNodeClass                   ( CPF_Parm )
// class UClass*                  GameClass                      ( CPF_Parm )

bool UTrVGSNode::VerifyVGSChild ( class UClass* VGSNodeClass, class UClass* GameClass )
{
	static UFunction* pFnVerifyVGSChild = NULL;

	if ( ! pFnVerifyVGSChild )
		pFnVerifyVGSChild = (UFunction*) UObject::GObjObjects()->Data[ 114467 ];

	UTrVGSNode_execVerifyVGSChild_Parms VerifyVGSChild_Parms;
	VerifyVGSChild_Parms.VGSNodeClass = VGSNodeClass;
	VerifyVGSChild_Parms.GameClass = GameClass;

	this->ProcessEvent ( pFnVerifyVGSChild, &VerifyVGSChild_Parms, NULL );

	return VerifyVGSChild_Parms.ReturnValue;
};

// Function TribesGame.TrVGSNode.VerifyVGSCommandEntry
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Command                        ( CPF_Parm )
// class UClass*                  GameClass                      ( CPF_Parm )

bool UTrVGSNode::VerifyVGSCommandEntry ( unsigned char Command, class UClass* GameClass )
{
	static UFunction* pFnVerifyVGSCommandEntry = NULL;

	if ( ! pFnVerifyVGSCommandEntry )
		pFnVerifyVGSCommandEntry = (UFunction*) UObject::GObjObjects()->Data[ 77542 ];

	UTrVGSNode_execVerifyVGSCommandEntry_Parms VerifyVGSCommandEntry_Parms;
	VerifyVGSCommandEntry_Parms.Command = Command;
	VerifyVGSCommandEntry_Parms.GameClass = GameClass;

	this->ProcessEvent ( pFnVerifyVGSCommandEntry, &VerifyVGSCommandEntry_Parms, NULL );

	return VerifyVGSCommandEntry_Parms.ReturnValue;
};

// Function TribesGame.TrVGSNode.ProcessKeyInput
// [0x00022002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Key                            ( CPF_Parm )
// class UTrPlayerInput*          PlayerInput                    ( CPF_Parm )
// class UClass*                  GameClass                      ( CPF_Parm )

class UClass* UTrVGSNode::ProcessKeyInput ( struct FName Key, class UTrPlayerInput* PlayerInput, class UClass* GameClass )
{
	static UFunction* pFnProcessKeyInput = NULL;

	if ( ! pFnProcessKeyInput )
		pFnProcessKeyInput = (UFunction*) UObject::GObjObjects()->Data[ 77539 ];

	UTrVGSNode_execProcessKeyInput_Parms ProcessKeyInput_Parms;
	memcpy ( &ProcessKeyInput_Parms.Key, &Key, 0x8 );
	ProcessKeyInput_Parms.PlayerInput = PlayerInput;
	ProcessKeyInput_Parms.GameClass = GameClass;

	this->ProcessEvent ( pFnProcessKeyInput, &ProcessKeyInput_Parms, NULL );

	return ProcessKeyInput_Parms.ReturnValue;
};

// Function TribesGame.TrCamera_SpectatorBookmark.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrCamera_SpectatorBookmark::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 73821 ];

	ATrCamera_SpectatorBookmark_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrCamera_SpectatorBookmark.GetDescription
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrCamera_SpectatorBookmark::GetDescription ( )
{
	static UFunction* pFnGetDescription = NULL;

	if ( ! pFnGetDescription )
		pFnGetDescription = (UFunction*) UObject::GObjObjects()->Data[ 73819 ];

	ATrCamera_SpectatorBookmark_execGetDescription_Parms GetDescription_Parms;

	this->ProcessEvent ( pFnGetDescription, &GetDescription_Parms, NULL );

	return GetDescription_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Pack.SendToFiringState
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Pack::SendToFiringState ( unsigned char FireModeNum )
{
	static UFunction* pFnSendToFiringState = NULL;

	if ( ! pFnSendToFiringState )
		pFnSendToFiringState = (UFunction*) UObject::GObjObjects()->Data[ 80283 ];

	ATrDevice_Pack_execSendToFiringState_Parms SendToFiringState_Parms;
	SendToFiringState_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnSendToFiringState, &SendToFiringState_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.StopFire
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Pack::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 80281 ];

	ATrDevice_Pack_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.StartFire
// [0x00020100] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Pack::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 80279 ];

	ATrDevice_Pack_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ClientForceInactive
// [0x010201C2] 
// Parameters infos:

void ATrDevice_Pack::ClientForceInactive ( )
{
	static UFunction* pFnClientForceInactive = NULL;

	if ( ! pFnClientForceInactive )
		pFnClientForceInactive = (UFunction*) UObject::GObjObjects()->Data[ 80267 ];

	ATrDevice_Pack_execClientForceInactive_Parms ClientForceInactive_Parms;

	this->ProcessEvent ( pFnClientForceInactive, &ClientForceInactive_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ClientForceActive
// [0x010201C2] 
// Parameters infos:

void ATrDevice_Pack::ClientForceActive ( )
{
	static UFunction* pFnClientForceActive = NULL;

	if ( ! pFnClientForceActive )
		pFnClientForceActive = (UFunction*) UObject::GObjObjects()->Data[ 80266 ];

	ATrDevice_Pack_execClientForceActive_Parms ClientForceActive_Parms;

	this->ProcessEvent ( pFnClientForceActive, &ClientForceActive_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ForceActivate
// [0x00020002] 
// Parameters infos:

void ATrDevice_Pack::ForceActivate ( )
{
	static UFunction* pFnForceActivate = NULL;

	if ( ! pFnForceActivate )
		pFnForceActivate = (UFunction*) UObject::GObjObjects()->Data[ 80265 ];

	ATrDevice_Pack_execForceActivate_Parms ForceActivate_Parms;

	this->ProcessEvent ( pFnForceActivate, &ForceActivate_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ServerToggleActivate
// [0x002200C2] 
// Parameters infos:

void ATrDevice_Pack::ServerToggleActivate ( )
{
	static UFunction* pFnServerToggleActivate = NULL;

	if ( ! pFnServerToggleActivate )
		pFnServerToggleActivate = (UFunction*) UObject::GObjObjects()->Data[ 80264 ];

	ATrDevice_Pack_execServerToggleActivate_Parms ServerToggleActivate_Parms;

	this->ProcessEvent ( pFnServerToggleActivate, &ServerToggleActivate_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ToggleActivate
// [0x00020102] 
// Parameters infos:

void ATrDevice_Pack::ToggleActivate ( )
{
	static UFunction* pFnToggleActivate = NULL;

	if ( ! pFnToggleActivate )
		pFnToggleActivate = (UFunction*) UObject::GObjObjects()->Data[ 80263 ];

	ATrDevice_Pack_execToggleActivate_Parms ToggleActivate_Parms;

	this->ProcessEvent ( pFnToggleActivate, &ToggleActivate_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.ConsumePowerPool
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_Pack::ConsumePowerPool ( float DeltaTime )
{
	static UFunction* pFnConsumePowerPool = NULL;

	if ( ! pFnConsumePowerPool )
		pFnConsumePowerPool = (UFunction*) UObject::GObjObjects()->Data[ 80256 ];

	ATrDevice_Pack_execConsumePowerPool_Parms ConsumePowerPool_Parms;
	ConsumePowerPool_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnConsumePowerPool, &ConsumePowerPool_Parms, NULL );
};

// Function TribesGame.TrDevice_Pack.CanBeActive
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Pack::CanBeActive ( )
{
	static UFunction* pFnCanBeActive = NULL;

	if ( ! pFnCanBeActive )
		pFnCanBeActive = (UFunction*) UObject::GObjObjects()->Data[ 80253 ];

	ATrDevice_Pack_execCanBeActive_Parms CanBeActive_Parms;

	this->ProcessEvent ( pFnCanBeActive, &CanBeActive_Parms, NULL );

	return CanBeActive_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Pack.GetPowerPool
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPawn*                 aPawn                          ( CPF_Parm )

float ATrDevice_Pack::GetPowerPool ( class ATrPawn* aPawn )
{
	static UFunction* pFnGetPowerPool = NULL;

	if ( ! pFnGetPowerPool )
		pFnGetPowerPool = (UFunction*) UObject::GObjObjects()->Data[ 80249 ];

	ATrDevice_Pack_execGetPowerPool_Parms GetPowerPool_Parms;
	GetPowerPool_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnGetPowerPool, &GetPowerPool_Parms, NULL );

	return GetPowerPool_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Pack.UsesPower
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_Pack::UsesPower ( )
{
	static UFunction* pFnUsesPower = NULL;

	if ( ! pFnUsesPower )
		pFnUsesPower = (UFunction*) UObject::GObjObjects()->Data[ 80247 ];

	ATrDevice_Pack_execUsesPower_Parms UsesPower_Parms;

	this->ProcessEvent ( pFnUsesPower, &UsesPower_Parms, NULL );

	return UsesPower_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryHelper.GetFamilyClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

class UClass* UTrInventoryHelper::GetFamilyClass ( int ClassId )
{
	static UFunction* pFnGetFamilyClass = NULL;

	if ( ! pFnGetFamilyClass )
		pFnGetFamilyClass = (UFunction*) UObject::GObjObjects()->Data[ 54408 ];

	UTrInventoryHelper_execGetFamilyClass_Parms GetFamilyClass_Parms;
	GetFamilyClass_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnGetFamilyClass, &GetFamilyClass_Parms, NULL );

	return GetFamilyClass_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryHelper.GetSkinClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            skinId                         ( CPF_Parm )

class UClass* UTrInventoryHelper::GetSkinClass ( int skinId )
{
	static UFunction* pFnGetSkinClass = NULL;

	if ( ! pFnGetSkinClass )
		pFnGetSkinClass = (UFunction*) UObject::GObjObjects()->Data[ 54519 ];

	UTrInventoryHelper_execGetSkinClass_Parms GetSkinClass_Parms;
	GetSkinClass_Parms.skinId = skinId;

	this->ProcessEvent ( pFnGetSkinClass, &GetSkinClass_Parms, NULL );

	return GetSkinClass_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryHelper.GetEquipClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            DeviceID                       ( CPF_Parm )

class UClass* UTrInventoryHelper::GetEquipClass ( int DeviceID )
{
	static UFunction* pFnGetEquipClass = NULL;

	if ( ! pFnGetEquipClass )
		pFnGetEquipClass = (UFunction*) UObject::GObjObjects()->Data[ 53756 ];

	UTrInventoryHelper_execGetEquipClass_Parms GetEquipClass_Parms;
	GetEquipClass_Parms.DeviceID = DeviceID;

	this->ProcessEvent ( pFnGetEquipClass, &GetEquipClass_Parms, NULL );

	return GetEquipClass_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHudTeam.GetRank
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )

struct FString UGfxTrHudTeam::GetRank ( class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnGetRank = NULL;

	if ( ! pFnGetRank )
		pFnGetRank = (UFunction*) UObject::GObjObjects()->Data[ 53997 ];

	UGfxTrHudTeam_execGetRank_Parms GetRank_Parms;
	GetRank_Parms.PRI = PRI;

	this->ProcessEvent ( pFnGetRank, &GetRank_Parms, NULL );

	return GetRank_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHudTeam.UpdateGameHUD
// [0x00820002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

void UGfxTrHudTeam::UpdateGameHUD ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateGameHUD = NULL;

	if ( ! pFnUpdateGameHUD )
		pFnUpdateGameHUD = (UFunction*) UObject::GObjObjects()->Data[ 53990 ];

	UGfxTrHudTeam_execUpdateGameHUD_Parms UpdateGameHUD_Parms;
	UpdateGameHUD_Parms.PRI = PRI;

	this->ProcessEvent ( pFnUpdateGameHUD, &UpdateGameHUD_Parms, NULL );
};

// Function TribesGame.GfxTrHudTeam.ClearStats
// [0x00824002] 
// Parameters infos:
// unsigned long                  clearScores                    ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHudTeam::ClearStats ( unsigned long clearScores )
{
	static UFunction* pFnClearStats = NULL;

	if ( ! pFnClearStats )
		pFnClearStats = (UFunction*) UObject::GObjObjects()->Data[ 53987 ];

	UGfxTrHudTeam_execClearStats_Parms ClearStats_Parms;
	ClearStats_Parms.clearScores = clearScores;

	this->ProcessEvent ( pFnClearStats, &ClearStats_Parms, NULL );
};

// Function TribesGame.GfxTrHudTeam.InitMessageRow
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGfxTrHudTeam::InitMessageRow ( )
{
	static UFunction* pFnInitMessageRow = NULL;

	if ( ! pFnInitMessageRow )
		pFnInitMessageRow = (UFunction*) UObject::GObjObjects()->Data[ 53985 ];

	UGfxTrHudTeam_execInitMessageRow_Parms InitMessageRow_Parms;

	this->ProcessEvent ( pFnInitMessageRow, &InitMessageRow_Parms, NULL );

	return InitMessageRow_Parms.ReturnValue;
};

// Function TribesGame.GfxTrHudTeam.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            Player                         ( CPF_OptionalParm | CPF_Parm )

void UGfxTrHudTeam::Init ( class ULocalPlayer* Player )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 53983 ];

	UGfxTrHudTeam_execInit_Parms Init_Parms;
	Init_Parms.Player = Player;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrLoginManager.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UTrLoginManager::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 97726 ];

	UTrLoginManager_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.TrLoginManager.LoginWaitPopup
// [0x00020002] 
// Parameters infos:

void UTrLoginManager::LoginWaitPopup ( )
{
	static UFunction* pFnLoginWaitPopup = NULL;

	if ( ! pFnLoginWaitPopup )
		pFnLoginWaitPopup = (UFunction*) UObject::GObjObjects()->Data[ 97725 ];

	UTrLoginManager_execLoginWaitPopup_Parms LoginWaitPopup_Parms;

	this->ProcessEvent ( pFnLoginWaitPopup, &LoginWaitPopup_Parms, NULL );
};

// Function TribesGame.TrLoginManager.SubmitPlayerName
// [0x00020002] 
// Parameters infos:
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UTrLoginManager::SubmitPlayerName ( struct FString PlayerName )
{
	static UFunction* pFnSubmitPlayerName = NULL;

	if ( ! pFnSubmitPlayerName )
		pFnSubmitPlayerName = (UFunction*) UObject::GObjObjects()->Data[ 97723 ];

	UTrLoginManager_execSubmitPlayerName_Parms SubmitPlayerName_Parms;
	memcpy ( &SubmitPlayerName_Parms.PlayerName, &PlayerName, 0xC );

	this->ProcessEvent ( pFnSubmitPlayerName, &SubmitPlayerName_Parms, NULL );
};

// Function TribesGame.TrLoginManager.Logout
// [0x00020002] 
// Parameters infos:

void UTrLoginManager::Logout ( )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 97722 ];

	UTrLoginManager_execLogout_Parms Logout_Parms;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function TribesGame.TrLoginManager.RetryLogin
// [0x00020002] 
// Parameters infos:

void UTrLoginManager::RetryLogin ( )
{
	static UFunction* pFnRetryLogin = NULL;

	if ( ! pFnRetryLogin )
		pFnRetryLogin = (UFunction*) UObject::GObjObjects()->Data[ 97721 ];

	UTrLoginManager_execRetryLogin_Parms RetryLogin_Parms;

	this->ProcessEvent ( pFnRetryLogin, &RetryLogin_Parms, NULL );
};

// Function TribesGame.TrLoginManager.OnUserLoginFailed
// [0x00020002] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )
// unsigned char                  ErrorCode                      ( CPF_Parm )

void UTrLoginManager::OnUserLoginFailed ( unsigned char LocalUserNum, unsigned char ErrorCode )
{
	static UFunction* pFnOnUserLoginFailed = NULL;

	if ( ! pFnOnUserLoginFailed )
		pFnOnUserLoginFailed = (UFunction*) UObject::GObjObjects()->Data[ 97717 ];

	UTrLoginManager_execOnUserLoginFailed_Parms OnUserLoginFailed_Parms;
	OnUserLoginFailed_Parms.LocalUserNum = LocalUserNum;
	OnUserLoginFailed_Parms.ErrorCode = ErrorCode;

	this->ProcessEvent ( pFnOnUserLoginFailed, &OnUserLoginFailed_Parms, NULL );
};

// Function TribesGame.TrLoginManager.Login
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 UserName                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Password                       ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bShouldRemember                ( CPF_Parm )

bool UTrLoginManager::Login ( struct FString UserName, struct FString Password, unsigned long bShouldRemember )
{
	static UFunction* pFnLogin = NULL;

	if ( ! pFnLogin )
		pFnLogin = (UFunction*) UObject::GObjObjects()->Data[ 97712 ];

	UTrLoginManager_execLogin_Parms Login_Parms;
	memcpy ( &Login_Parms.UserName, &UserName, 0xC );
	memcpy ( &Login_Parms.Password, &Password, 0xC );
	Login_Parms.bShouldRemember = bShouldRemember;

	this->ProcessEvent ( pFnLogin, &Login_Parms, NULL );

	return Login_Parms.ReturnValue;
};

// Function TribesGame.TrLoginManager.Initialize
// [0x00020000] 
// Parameters infos:

void UTrLoginManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 97711 ];

	UTrLoginManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrPageManager.SaveReticule
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UTrPageManager::SaveReticule ( class UGFxObject* Data )
{
	static UFunction* pFnSaveReticule = NULL;

	if ( ! pFnSaveReticule )
		pFnSaveReticule = (UFunction*) UObject::GObjObjects()->Data[ 99435 ];

	UTrPageManager_execSaveReticule_Parms SaveReticule_Parms;
	SaveReticule_Parms.Data = Data;

	this->ProcessEvent ( pFnSaveReticule, &SaveReticule_Parms, NULL );
};

// Function TribesGame.TrPageManager.ShowReticule
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UTrPageManager::ShowReticule ( int Index )
{
	static UFunction* pFnShowReticule = NULL;

	if ( ! pFnShowReticule )
		pFnShowReticule = (UFunction*) UObject::GObjObjects()->Data[ 99433 ];

	UTrPageManager_execShowReticule_Parms ShowReticule_Parms;
	ShowReticule_Parms.Index = Index;

	this->ProcessEvent ( pFnShowReticule, &ShowReticule_Parms, NULL );
};

// Function TribesGame.TrPageManager.SelectedFeature
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::SelectedFeature ( int ActionIndex )
{
	static UFunction* pFnSelectedFeature = NULL;

	if ( ! pFnSelectedFeature )
		pFnSelectedFeature = (UFunction*) UObject::GObjObjects()->Data[ 99431 ];

	UTrPageManager_execSelectedFeature_Parms SelectedFeature_Parms;
	SelectedFeature_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnSelectedFeature, &SelectedFeature_Parms, NULL );
};

// Function TribesGame.TrPageManager.PromoAction
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::PromoAction ( int ActionIndex )
{
	static UFunction* pFnPromoAction = NULL;

	if ( ! pFnPromoAction )
		pFnPromoAction = (UFunction*) UObject::GObjObjects()->Data[ 99429 ];

	UTrPageManager_execPromoAction_Parms PromoAction_Parms;
	PromoAction_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnPromoAction, &PromoAction_Parms, NULL );
};

// Function TribesGame.TrPageManager.ShowInGameModel
// [0x00020002] 
// Parameters infos:

void UTrPageManager::ShowInGameModel ( )
{
	static UFunction* pFnShowInGameModel = NULL;

	if ( ! pFnShowInGameModel )
		pFnShowInGameModel = (UFunction*) UObject::GObjObjects()->Data[ 99428 ];

	UTrPageManager_execShowInGameModel_Parms ShowInGameModel_Parms;

	this->ProcessEvent ( pFnShowInGameModel, &ShowInGameModel_Parms, NULL );
};

// Function TribesGame.TrPageManager.NavigateGold
// [0x00020002] 
// Parameters infos:

void UTrPageManager::NavigateGold ( )
{
	static UFunction* pFnNavigateGold = NULL;

	if ( ! pFnNavigateGold )
		pFnNavigateGold = (UFunction*) UObject::GObjObjects()->Data[ 99427 ];

	UTrPageManager_execNavigateGold_Parms NavigateGold_Parms;

	this->ProcessEvent ( pFnNavigateGold, &NavigateGold_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToStore
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToStore ( )
{
	static UFunction* pFnTravelToStore = NULL;

	if ( ! pFnTravelToStore )
		pFnTravelToStore = (UFunction*) UObject::GObjObjects()->Data[ 99426 ];

	UTrPageManager_execTravelToStore_Parms TravelToStore_Parms;

	this->ProcessEvent ( pFnTravelToStore, &TravelToStore_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToBundles
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToBundles ( )
{
	static UFunction* pFnTravelToBundles = NULL;

	if ( ! pFnTravelToBundles )
		pFnTravelToBundles = (UFunction*) UObject::GObjObjects()->Data[ 99425 ];

	UTrPageManager_execTravelToBundles_Parms TravelToBundles_Parms;

	this->ProcessEvent ( pFnTravelToBundles, &TravelToBundles_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToSettings
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToSettings ( )
{
	static UFunction* pFnTravelToSettings = NULL;

	if ( ! pFnTravelToSettings )
		pFnTravelToSettings = (UFunction*) UObject::GObjObjects()->Data[ 99424 ];

	UTrPageManager_execTravelToSettings_Parms TravelToSettings_Parms;

	this->ProcessEvent ( pFnTravelToSettings, &TravelToSettings_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToFriends
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToFriends ( )
{
	static UFunction* pFnTravelToFriends = NULL;

	if ( ! pFnTravelToFriends )
		pFnTravelToFriends = (UFunction*) UObject::GObjObjects()->Data[ 99423 ];

	UTrPageManager_execTravelToFriends_Parms TravelToFriends_Parms;

	this->ProcessEvent ( pFnTravelToFriends, &TravelToFriends_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToClasses
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToClasses ( )
{
	static UFunction* pFnTravelToClasses = NULL;

	if ( ! pFnTravelToClasses )
		pFnTravelToClasses = (UFunction*) UObject::GObjObjects()->Data[ 99422 ];

	UTrPageManager_execTravelToClasses_Parms TravelToClasses_Parms;

	this->ProcessEvent ( pFnTravelToClasses, &TravelToClasses_Parms, NULL );
};

// Function TribesGame.TrPageManager.TravelToMain
// [0x00020002] 
// Parameters infos:

void UTrPageManager::TravelToMain ( )
{
	static UFunction* pFnTravelToMain = NULL;

	if ( ! pFnTravelToMain )
		pFnTravelToMain = (UFunction*) UObject::GObjObjects()->Data[ 99421 ];

	UTrPageManager_execTravelToMain_Parms TravelToMain_Parms;

	this->ProcessEvent ( pFnTravelToMain, &TravelToMain_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushOpenLogin
// [0x00020002] 
// Parameters infos:

void UTrPageManager::PushOpenLogin ( )
{
	static UFunction* pFnPushOpenLogin = NULL;

	if ( ! pFnPushOpenLogin )
		pFnPushOpenLogin = (UFunction*) UObject::GObjObjects()->Data[ 99420 ];

	UTrPageManager_execPushOpenLogin_Parms PushOpenLogin_Parms;

	this->ProcessEvent ( pFnPushOpenLogin, &PushOpenLogin_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushOpenClassSelect
// [0x00020002] 
// Parameters infos:

void UTrPageManager::PushOpenClassSelect ( )
{
	static UFunction* pFnPushOpenClassSelect = NULL;

	if ( ! pFnPushOpenClassSelect )
		pFnPushOpenClassSelect = (UFunction*) UObject::GObjObjects()->Data[ 99419 ];

	UTrPageManager_execPushOpenClassSelect_Parms PushOpenClassSelect_Parms;

	this->ProcessEvent ( pFnPushOpenClassSelect, &PushOpenClassSelect_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushOpenParty
// [0x00020002] 
// Parameters infos:

void UTrPageManager::PushOpenParty ( )
{
	static UFunction* pFnPushOpenParty = NULL;

	if ( ! pFnPushOpenParty )
		pFnPushOpenParty = (UFunction*) UObject::GObjObjects()->Data[ 99418 ];

	UTrPageManager_execPushOpenParty_Parms PushOpenParty_Parms;

	this->ProcessEvent ( pFnPushOpenParty, &PushOpenParty_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushOpenMain
// [0x00020002] 
// Parameters infos:

void UTrPageManager::PushOpenMain ( )
{
	static UFunction* pFnPushOpenMain = NULL;

	if ( ! pFnPushOpenMain )
		pFnPushOpenMain = (UFunction*) UObject::GObjObjects()->Data[ 99417 ];

	UTrPageManager_execPushOpenMain_Parms PushOpenMain_Parms;

	this->ProcessEvent ( pFnPushOpenMain, &PushOpenMain_Parms, NULL );
};

// Function TribesGame.TrPageManager.GetActivePage
// [0x00020002] 
// Parameters infos:
// class UGFxTrPage*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxTrPage* UTrPageManager::GetActivePage ( )
{
	static UFunction* pFnGetActivePage = NULL;

	if ( ! pFnGetActivePage )
		pFnGetActivePage = (UFunction*) UObject::GObjObjects()->Data[ 54336 ];

	UTrPageManager_execGetActivePage_Parms GetActivePage_Parms;

	this->ProcessEvent ( pFnGetActivePage, &GetActivePage_Parms, NULL );

	return GetActivePage_Parms.ReturnValue;
};

// Function TribesGame.TrPageManager.ClearStack
// [0x00020002] 
// Parameters infos:

void UTrPageManager::ClearStack ( )
{
	static UFunction* pFnClearStack = NULL;

	if ( ! pFnClearStack )
		pFnClearStack = (UFunction*) UObject::GObjObjects()->Data[ 99415 ];

	UTrPageManager_execClearStack_Parms ClearStack_Parms;

	this->ProcessEvent ( pFnClearStack, &ClearStack_Parms, NULL );
};

// Function TribesGame.TrPageManager.PopPage
// [0x00020002] 
// Parameters infos:
// class UGFxTrPage*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxTrPage* UTrPageManager::PopPage ( )
{
	static UFunction* pFnPopPage = NULL;

	if ( ! pFnPopPage )
		pFnPopPage = (UFunction*) UObject::GObjObjects()->Data[ 56419 ];

	UTrPageManager_execPopPage_Parms PopPage_Parms;

	this->ProcessEvent ( pFnPopPage, &PopPage_Parms, NULL );

	return PopPage_Parms.ReturnValue;
};

// Function TribesGame.TrPageManager.PopBack
// [0x00020002] 
// Parameters infos:

void UTrPageManager::PopBack ( )
{
	static UFunction* pFnPopBack = NULL;

	if ( ! pFnPopBack )
		pFnPopBack = (UFunction*) UObject::GObjObjects()->Data[ 99414 ];

	UTrPageManager_execPopBack_Parms PopBack_Parms;

	this->ProcessEvent ( pFnPopBack, &PopBack_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushOpen
// [0x00020002] 
// Parameters infos:
// class UGFxTrPage*              Page                           ( CPF_Parm )

void UTrPageManager::PushOpen ( class UGFxTrPage* Page )
{
	static UFunction* pFnPushOpen = NULL;

	if ( ! pFnPushOpen )
		pFnPushOpen = (UFunction*) UObject::GObjObjects()->Data[ 99412 ];

	UTrPageManager_execPushOpen_Parms PushOpen_Parms;
	PushOpen_Parms.Page = Page;

	this->ProcessEvent ( pFnPushOpen, &PushOpen_Parms, NULL );
};

// Function TribesGame.TrPageManager.PushPage
// [0x00020002] 
// Parameters infos:
// class UGFxTrPage*              Page                           ( CPF_Parm )

void UTrPageManager::PushPage ( class UGFxTrPage* Page )
{
	static UFunction* pFnPushPage = NULL;

	if ( ! pFnPushPage )
		pFnPushPage = (UFunction*) UObject::GObjObjects()->Data[ 99410 ];

	UTrPageManager_execPushPage_Parms PushPage_Parms;
	PushPage_Parms.Page = Page;

	this->ProcessEvent ( pFnPushPage, &PushPage_Parms, NULL );
};

// Function TribesGame.TrPageManager.ProfileDown
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::ProfileDown ( int ActionIndex )
{
	static UFunction* pFnProfileDown = NULL;

	if ( ! pFnProfileDown )
		pFnProfileDown = (UFunction*) UObject::GObjObjects()->Data[ 99408 ];

	UTrPageManager_execProfileDown_Parms ProfileDown_Parms;
	ProfileDown_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileDown, &ProfileDown_Parms, NULL );
};

// Function TribesGame.TrPageManager.ProfileUp
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::ProfileUp ( int ActionIndex )
{
	static UFunction* pFnProfileUp = NULL;

	if ( ! pFnProfileUp )
		pFnProfileUp = (UFunction*) UObject::GObjObjects()->Data[ 99406 ];

	UTrPageManager_execProfileUp_Parms ProfileUp_Parms;
	ProfileUp_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileUp, &ProfileUp_Parms, NULL );
};

// Function TribesGame.TrPageManager.HelpButton
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::HelpButton ( int ActionIndex )
{
	static UFunction* pFnHelpButton = NULL;

	if ( ! pFnHelpButton )
		pFnHelpButton = (UFunction*) UObject::GObjObjects()->Data[ 99404 ];

	UTrPageManager_execHelpButton_Parms HelpButton_Parms;
	HelpButton_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnHelpButton, &HelpButton_Parms, NULL );
};

// Function TribesGame.TrPageManager.ModifyFocus
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UTrPageManager::ModifyFocus ( int ActionIndex )
{
	static UFunction* pFnModifyFocus = NULL;

	if ( ! pFnModifyFocus )
		pFnModifyFocus = (UFunction*) UObject::GObjObjects()->Data[ 99402 ];

	UTrPageManager_execModifyFocus_Parms ModifyFocus_Parms;
	ModifyFocus_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnModifyFocus, &ModifyFocus_Parms, NULL );
};

// Function TribesGame.TrPageManager.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UTrPageManager::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 99398 ];

	UTrPageManager_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.TrPageManager.ActionDown
// [0x00020002] 
// Parameters infos:

void UTrPageManager::ActionDown ( )
{
	static UFunction* pFnActionDown = NULL;

	if ( ! pFnActionDown )
		pFnActionDown = (UFunction*) UObject::GObjObjects()->Data[ 99397 ];

	UTrPageManager_execActionDown_Parms ActionDown_Parms;

	this->ProcessEvent ( pFnActionDown, &ActionDown_Parms, NULL );
};

// Function TribesGame.TrPageManager.ActionUp
// [0x00020002] 
// Parameters infos:

void UTrPageManager::ActionUp ( )
{
	static UFunction* pFnActionUp = NULL;

	if ( ! pFnActionUp )
		pFnActionUp = (UFunction*) UObject::GObjObjects()->Data[ 99396 ];

	UTrPageManager_execActionUp_Parms ActionUp_Parms;

	this->ProcessEvent ( pFnActionUp, &ActionUp_Parms, NULL );
};

// Function TribesGame.TrPageManager.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UTrPageManager::TakeAction ( int Index, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 99391 ];

	UTrPageManager_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.Index = Index;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.TrPageManager.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UTrPageManager::TakeFocus ( int Index, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 99387 ];

	UTrPageManager_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.Index = Index;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.TrPageManager.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UTrPageManager::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 99381 ];

	UTrPageManager_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.TrPageManager.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UTrPageManager::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 99379 ];

	UTrPageManager_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.TrPageManager.Initialize
// [0x00020002] 
// Parameters infos:

void UTrPageManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 99378 ];

	UTrPageManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrSettingsManager.Initialize
// [0x00020002] 
// Parameters infos:

void UTrSettingsManager::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 111392 ];

	UTrSettingsManager_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrRibbonManager.GetEquipRibbon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            EquipId                        ( CPF_Parm )

int UTrRibbonManager::GetEquipRibbon ( int EquipId )
{
	static UFunction* pFnGetEquipRibbon = NULL;

	if ( ! pFnGetEquipRibbon )
		pFnGetEquipRibbon = (UFunction*) UObject::GObjObjects()->Data[ 58316 ];

	UTrRibbonManager_execGetEquipRibbon_Parms GetEquipRibbon_Parms;
	GetEquipRibbon_Parms.EquipId = EquipId;

	this->ProcessEvent ( pFnGetEquipRibbon, &GetEquipRibbon_Parms, NULL );

	return GetEquipRibbon_Parms.ReturnValue;
};

// Function TribesGame.TrRibbonManager.GetTypeRibbon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Type                           ( CPF_Parm )

int UTrRibbonManager::GetTypeRibbon ( int ClassId, int Type )
{
	static UFunction* pFnGetTypeRibbon = NULL;

	if ( ! pFnGetTypeRibbon )
		pFnGetTypeRibbon = (UFunction*) UObject::GObjObjects()->Data[ 56542 ];

	UTrRibbonManager_execGetTypeRibbon_Parms GetTypeRibbon_Parms;
	GetTypeRibbon_Parms.ClassId = ClassId;
	GetTypeRibbon_Parms.Type = Type;

	this->ProcessEvent ( pFnGetTypeRibbon, &GetTypeRibbon_Parms, NULL );

	return GetTypeRibbon_Parms.ReturnValue;
};

// Function TribesGame.TrRibbonManager.GetClassRibbon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )

int UTrRibbonManager::GetClassRibbon ( int ClassId )
{
	static UFunction* pFnGetClassRibbon = NULL;

	if ( ! pFnGetClassRibbon )
		pFnGetClassRibbon = (UFunction*) UObject::GObjObjects()->Data[ 56528 ];

	UTrRibbonManager_execGetClassRibbon_Parms GetClassRibbon_Parms;
	GetClassRibbon_Parms.ClassId = ClassId;

	this->ProcessEvent ( pFnGetClassRibbon, &GetClassRibbon_Parms, NULL );

	return GetClassRibbon_Parms.ReturnValue;
};

// Function TribesGame.TrRibbonManager.CalculateRibbons
// [0x00820002] 
// Parameters infos:
// int                            Gold                           ( CPF_Parm )
// int                            XP                             ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_Parm )

void UTrRibbonManager::CalculateRibbons ( int Gold, int XP, unsigned long bForce )
{
	static UFunction* pFnCalculateRibbons = NULL;

	if ( ! pFnCalculateRibbons )
		pFnCalculateRibbons = (UFunction*) UObject::GObjObjects()->Data[ 109672 ];

	UTrRibbonManager_execCalculateRibbons_Parms CalculateRibbons_Parms;
	CalculateRibbons_Parms.Gold = Gold;
	CalculateRibbons_Parms.XP = XP;
	CalculateRibbons_Parms.bForce = bForce;

	this->ProcessEvent ( pFnCalculateRibbons, &CalculateRibbons_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.PlayMenuSound
// [0x00020002] 
// Parameters infos:
// unsigned char                  MenuSound                      ( CPF_Parm )

void UGFxTrMenuSounds::PlayMenuSound ( unsigned char MenuSound )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 56304 ];

	UGFxTrMenuSounds_execPlayMenuSound_Parms PlayMenuSound_Parms;
	PlayMenuSound_Parms.MenuSound = MenuSound;

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.ClassLocked
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::ClassLocked ( )
{
	static UFunction* pFnClassLocked = NULL;

	if ( ! pFnClassLocked )
		pFnClassLocked = (UFunction*) UObject::GObjObjects()->Data[ 56303 ];

	UGFxTrMenuSounds_execClassLocked_Parms ClassLocked_Parms;

	this->ProcessEvent ( pFnClassLocked, &ClassLocked_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.ClassSelected
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::ClassSelected ( )
{
	static UFunction* pFnClassSelected = NULL;

	if ( ! pFnClassSelected )
		pFnClassSelected = (UFunction*) UObject::GObjObjects()->Data[ 56302 ];

	UGFxTrMenuSounds_execClassSelected_Parms ClassSelected_Parms;

	this->ProcessEvent ( pFnClassSelected, &ClassSelected_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.ClassRollover
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::ClassRollover ( )
{
	static UFunction* pFnClassRollover = NULL;

	if ( ! pFnClassRollover )
		pFnClassRollover = (UFunction*) UObject::GObjObjects()->Data[ 56301 ];

	UGFxTrMenuSounds_execClassRollover_Parms ClassRollover_Parms;

	this->ProcessEvent ( pFnClassRollover, &ClassRollover_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.PageBack
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::PageBack ( )
{
	static UFunction* pFnPageBack = NULL;

	if ( ! pFnPageBack )
		pFnPageBack = (UFunction*) UObject::GObjObjects()->Data[ 56300 ];

	UGFxTrMenuSounds_execPageBack_Parms PageBack_Parms;

	this->ProcessEvent ( pFnPageBack, &PageBack_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.PageForward
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::PageForward ( )
{
	static UFunction* pFnPageForward = NULL;

	if ( ! pFnPageForward )
		pFnPageForward = (UFunction*) UObject::GObjObjects()->Data[ 56299 ];

	UGFxTrMenuSounds_execPageForward_Parms PageForward_Parms;

	this->ProcessEvent ( pFnPageForward, &PageForward_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.LeaveQueue
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::LeaveQueue ( )
{
	static UFunction* pFnLeaveQueue = NULL;

	if ( ! pFnLeaveQueue )
		pFnLeaveQueue = (UFunction*) UObject::GObjObjects()->Data[ 56298 ];

	UGFxTrMenuSounds_execLeaveQueue_Parms LeaveQueue_Parms;

	this->ProcessEvent ( pFnLeaveQueue, &LeaveQueue_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundSelectedQueue
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::SoundSelectedQueue ( )
{
	static UFunction* pFnSoundSelectedQueue = NULL;

	if ( ! pFnSoundSelectedQueue )
		pFnSoundSelectedQueue = (UFunction*) UObject::GObjObjects()->Data[ 56297 ];

	UGFxTrMenuSounds_execSoundSelectedQueue_Parms SoundSelectedQueue_Parms;

	this->ProcessEvent ( pFnSoundSelectedQueue, &SoundSelectedQueue_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundPurchaseSkill
// [0x00020002] 
// Parameters infos:

void UGFxTrMenuSounds::SoundPurchaseSkill ( )
{
	static UFunction* pFnSoundPurchaseSkill = NULL;

	if ( ! pFnSoundPurchaseSkill )
		pFnSoundPurchaseSkill = (UFunction*) UObject::GObjObjects()->Data[ 56296 ];

	UGFxTrMenuSounds_execSoundPurchaseSkill_Parms SoundPurchaseSkill_Parms;

	this->ProcessEvent ( pFnSoundPurchaseSkill, &SoundPurchaseSkill_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundClassType
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGFxTrMenuSounds::SoundClassType ( int val )
{
	static UFunction* pFnSoundClassType = NULL;

	if ( ! pFnSoundClassType )
		pFnSoundClassType = (UFunction*) UObject::GObjObjects()->Data[ 56294 ];

	UGFxTrMenuSounds_execSoundClassType_Parms SoundClassType_Parms;
	SoundClassType_Parms.val = val;

	this->ProcessEvent ( pFnSoundClassType, &SoundClassType_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundSkillType
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGFxTrMenuSounds::SoundSkillType ( int val )
{
	static UFunction* pFnSoundSkillType = NULL;

	if ( ! pFnSoundSkillType )
		pFnSoundSkillType = (UFunction*) UObject::GObjObjects()->Data[ 56292 ];

	UGFxTrMenuSounds_execSoundSkillType_Parms SoundSkillType_Parms;
	SoundSkillType_Parms.val = val;

	this->ProcessEvent ( pFnSoundSkillType, &SoundSkillType_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundXPGain
// [0x00020002] 
// Parameters infos:
// int                            val                            ( CPF_Parm )

void UGFxTrMenuSounds::SoundXPGain ( int val )
{
	static UFunction* pFnSoundXPGain = NULL;

	if ( ! pFnSoundXPGain )
		pFnSoundXPGain = (UFunction*) UObject::GObjObjects()->Data[ 56290 ];

	UGFxTrMenuSounds_execSoundXPGain_Parms SoundXPGain_Parms;
	SoundXPGain_Parms.val = val;

	this->ProcessEvent ( pFnSoundXPGain, &SoundXPGain_Parms, NULL );
};

// Function TribesGame.GFxTrMenuSounds.SoundToolTip
// [0x00020002] 
// Parameters infos:
// unsigned long                  bOpened                        ( CPF_Parm )

void UGFxTrMenuSounds::SoundToolTip ( unsigned long bOpened )
{
	static UFunction* pFnSoundToolTip = NULL;

	if ( ! pFnSoundToolTip )
		pFnSoundToolTip = (UFunction*) UObject::GObjObjects()->Data[ 56288 ];

	UGFxTrMenuSounds_execSoundToolTip_Parms SoundToolTip_Parms;
	SoundToolTip_Parms.bOpened = bOpened;

	this->ProcessEvent ( pFnSoundToolTip, &SoundToolTip_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.AsTeamChooseEnableButton
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            TeamID                         ( CPF_Parm )
// struct FString                 bEnable                        ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrUI_TeamSelectionMenu::AsTeamChooseEnableButton ( int TeamID, struct FString bEnable )
{
	static UFunction* pFnAsTeamChooseEnableButton = NULL;

	if ( ! pFnAsTeamChooseEnableButton )
		pFnAsTeamChooseEnableButton = (UFunction*) UObject::GObjObjects()->Data[ 64816 ];

	UGFxTrUI_TeamSelectionMenu_execAsTeamChooseEnableButton_Parms AsTeamChooseEnableButton_Parms;
	AsTeamChooseEnableButton_Parms.TeamID = TeamID;
	memcpy ( &AsTeamChooseEnableButton_Parms.bEnable, &bEnable, 0xC );

	this->ProcessEvent ( pFnAsTeamChooseEnableButton, &AsTeamChooseEnableButton_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.CompleteMovie
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// unsigned long                  bHaveTeam                      ( CPF_OptionalParm | CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::eventCompleteMovie ( unsigned long bHaveTeam )
{
	static UFunction* pFnCompleteMovie = NULL;

	if ( ! pFnCompleteMovie )
		pFnCompleteMovie = (UFunction*) UObject::GObjObjects()->Data[ 64830 ];

	UGFxTrUI_TeamSelectionMenu_eventCompleteMovie_Parms CompleteMovie_Parms;
	CompleteMovie_Parms.bHaveTeam = bHaveTeam;

	this->ProcessEvent ( pFnCompleteMovie, &CompleteMovie_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.choseTeamSpectate
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_TeamSelectionMenu::choseTeamSpectate ( )
{
	static UFunction* pFnchoseTeamSpectate = NULL;

	if ( ! pFnchoseTeamSpectate )
		pFnchoseTeamSpectate = (UFunction*) UObject::GObjObjects()->Data[ 64829 ];

	UGFxTrUI_TeamSelectionMenu_execchoseTeamSpectate_Parms choseTeamSpectate_Parms;

	this->ProcessEvent ( pFnchoseTeamSpectate, &choseTeamSpectate_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.choseTeamDS
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_TeamSelectionMenu::choseTeamDS ( )
{
	static UFunction* pFnchoseTeamDS = NULL;

	if ( ! pFnchoseTeamDS )
		pFnchoseTeamDS = (UFunction*) UObject::GObjObjects()->Data[ 64826 ];

	UGFxTrUI_TeamSelectionMenu_execchoseTeamDS_Parms choseTeamDS_Parms;

	this->ProcessEvent ( pFnchoseTeamDS, &choseTeamDS_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.choseTeamBE
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_TeamSelectionMenu::choseTeamBE ( )
{
	static UFunction* pFnchoseTeamBE = NULL;

	if ( ! pFnchoseTeamBE )
		pFnchoseTeamBE = (UFunction*) UObject::GObjObjects()->Data[ 64821 ];

	UGFxTrUI_TeamSelectionMenu_execchoseTeamBE_Parms choseTeamBE_Parms;

	this->ProcessEvent ( pFnchoseTeamBE, &choseTeamBE_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.EnableSpectate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::EnableSpectate ( unsigned long bEnable )
{
	static UFunction* pFnEnableSpectate = NULL;

	if ( ! pFnEnableSpectate )
		pFnEnableSpectate = (UFunction*) UObject::GObjObjects()->Data[ 64819 ];

	UGFxTrUI_TeamSelectionMenu_execEnableSpectate_Parms EnableSpectate_Parms;
	EnableSpectate_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableSpectate, &EnableSpectate_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.EnableDiamondSword
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::EnableDiamondSword ( unsigned long bEnable )
{
	static UFunction* pFnEnableDiamondSword = NULL;

	if ( ! pFnEnableDiamondSword )
		pFnEnableDiamondSword = (UFunction*) UObject::GObjObjects()->Data[ 64817 ];

	UGFxTrUI_TeamSelectionMenu_execEnableDiamondSword_Parms EnableDiamondSword_Parms;
	EnableDiamondSword_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableDiamondSword, &EnableDiamondSword_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.EnableBloodEagle
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnable                        ( CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::EnableBloodEagle ( unsigned long bEnable )
{
	static UFunction* pFnEnableBloodEagle = NULL;

	if ( ! pFnEnableBloodEagle )
		pFnEnableBloodEagle = (UFunction*) UObject::GObjObjects()->Data[ 64814 ];

	UGFxTrUI_TeamSelectionMenu_execEnableBloodEagle_Parms EnableBloodEagle_Parms;
	EnableBloodEagle_Parms.bEnable = bEnable;

	this->ProcessEvent ( pFnEnableBloodEagle, &EnableBloodEagle_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.Tick
// [0x00020002] 
// Parameters infos:
// class AGameReplicationInfo*    GRI                            ( CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::Tick ( class AGameReplicationInfo* GRI )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 64804 ];

	UGFxTrUI_TeamSelectionMenu_execTick_Parms Tick_Parms;
	Tick_Parms.GRI = GRI;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.SetLabels
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Spectate                       ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrUI_TeamSelectionMenu::SetLabels ( struct FString Title, struct FString Spectate )
{
	static UFunction* pFnSetLabels = NULL;

	if ( ! pFnSetLabels )
		pFnSetLabels = (UFunction*) UObject::GObjObjects()->Data[ 64800 ];

	UGFxTrUI_TeamSelectionMenu_execSetLabels_Parms SetLabels_Parms;
	memcpy ( &SetLabels_Parms.Title, &Title, 0xC );
	memcpy ( &SetLabels_Parms.Spectate, &Spectate, 0xC );

	this->ProcessEvent ( pFnSetLabels, &SetLabels_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.Show
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_TeamSelectionMenu::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 64799 ];

	UGFxTrUI_TeamSelectionMenu_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.SetFontIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            FontIdx                        ( CPF_Parm )

void UGFxTrUI_TeamSelectionMenu::SetFontIndex ( int FontIdx )
{
	static UFunction* pFnSetFontIndex = NULL;

	if ( ! pFnSetFontIndex )
		pFnSetFontIndex = (UFunction*) UObject::GObjObjects()->Data[ 64797 ];

	UGFxTrUI_TeamSelectionMenu_execSetFontIndex_Parms SetFontIndex_Parms;
	SetFontIndex_Parms.FontIdx = FontIdx;

	this->ProcessEvent ( pFnSetFontIndex, &SetFontIndex_Parms, NULL );
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxTrUI_TeamSelectionMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 64794 ];

	UGFxTrUI_TeamSelectionMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function TribesGame.GFxTrUI_TeamSelectionMenu.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_TeamSelectionMenu::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 64793 ];

	UGFxTrUI_TeamSelectionMenu_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.GetEquipTypeName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Type                           ( CPF_Parm )

struct FString UGFxTrPage_Main::GetEquipTypeName ( int Type )
{
	static UFunction* pFnGetEquipTypeName = NULL;

	if ( ! pFnGetEquipTypeName )
		pFnGetEquipTypeName = (UFunction*) UObject::GObjObjects()->Data[ 59267 ];

	UGFxTrPage_Main_execGetEquipTypeName_Parms GetEquipTypeName_Parms;
	GetEquipTypeName_Parms.Type = Type;

	this->ProcessEvent ( pFnGetEquipTypeName, &GetEquipTypeName_Parms, NULL );

	return GetEquipTypeName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.NeedFeatureUpdate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrPage_Main::NeedFeatureUpdate ( )
{
	static UFunction* pFnNeedFeatureUpdate = NULL;

	if ( ! pFnNeedFeatureUpdate )
		pFnNeedFeatureUpdate = (UFunction*) UObject::GObjObjects()->Data[ 59265 ];

	UGFxTrPage_Main_execNeedFeatureUpdate_Parms NeedFeatureUpdate_Parms;

	this->ProcessEvent ( pFnNeedFeatureUpdate, &NeedFeatureUpdate_Parms, NULL );

	return NeedFeatureUpdate_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.UpdateDealTimer
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Main::UpdateDealTimer ( )
{
	static UFunction* pFnUpdateDealTimer = NULL;

	if ( ! pFnUpdateDealTimer )
		pFnUpdateDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 59263 ];

	UGFxTrPage_Main_execUpdateDealTimer_Parms UpdateDealTimer_Parms;

	this->ProcessEvent ( pFnUpdateDealTimer, &UpdateDealTimer_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.StartDealTimer
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Main::StartDealTimer ( )
{
	static UFunction* pFnStartDealTimer = NULL;

	if ( ! pFnStartDealTimer )
		pFnStartDealTimer = (UFunction*) UObject::GObjObjects()->Data[ 59261 ];

	UGFxTrPage_Main_execStartDealTimer_Parms StartDealTimer_Parms;

	this->ProcessEvent ( pFnStartDealTimer, &StartDealTimer_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.UpdateQueueTimer
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Main::UpdateQueueTimer ( )
{
	static UFunction* pFnUpdateQueueTimer = NULL;

	if ( ! pFnUpdateQueueTimer )
		pFnUpdateQueueTimer = (UFunction*) UObject::GObjObjects()->Data[ 59260 ];

	UGFxTrPage_Main_execUpdateQueueTimer_Parms UpdateQueueTimer_Parms;

	this->ProcessEvent ( pFnUpdateQueueTimer, &UpdateQueueTimer_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Main::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59253 ];

	UGFxTrPage_Main_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Main::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59238 ];

	UGFxTrPage_Main_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.FormatDealTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrPage_Main::FormatDealTime ( )
{
	static UFunction* pFnFormatDealTime = NULL;

	if ( ! pFnFormatDealTime )
		pFnFormatDealTime = (UFunction*) UObject::GObjObjects()->Data[ 59227 ];

	UGFxTrPage_Main_execFormatDealTime_Parms FormatDealTime_Parms;

	this->ProcessEvent ( pFnFormatDealTime, &FormatDealTime_Parms, NULL );

	return FormatDealTime_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.FillFeature
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage_Main::FillFeature ( )
{
	static UFunction* pFnFillFeature = NULL;

	if ( ! pFnFillFeature )
		pFnFillFeature = (UFunction*) UObject::GObjObjects()->Data[ 59199 ];

	UGFxTrPage_Main_execFillFeature_Parms FillFeature_Parms;

	this->ProcessEvent ( pFnFillFeature, &FillFeature_Parms, NULL );

	return FillFeature_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.CheckFeatures
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Main::CheckFeatures ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckFeatures = NULL;

	if ( ! pFnCheckFeatures )
		pFnCheckFeatures = (UFunction*) UObject::GObjObjects()->Data[ 59195 ];

	UGFxTrPage_Main_execCheckFeatures_Parms CheckFeatures_Parms;
	CheckFeatures_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckFeatures, &CheckFeatures_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Main::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59193 ];

	UGFxTrPage_Main_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Main::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59189 ];

	UGFxTrPage_Main_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Main::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 59184 ];

	UGFxTrPage_Main_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Main::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 59179 ];

	UGFxTrPage_Main_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Main::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 59174 ];

	UGFxTrPage_Main_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Main::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59170 ];

	UGFxTrPage_Main_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Main.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Main::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59167 ];

	UGFxTrPage_Main_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Main.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Main::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59161 ];

	UGFxTrPage_Main_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.ShowModel
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_Vehicle::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 61011 ];

	UGFxTrPage_Vehicle_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Vehicle::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61006 ];

	UGFxTrPage_Vehicle_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Vehicle.FillOptions
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Vehicle::FillOptions ( class UGFxObject* DataList )
{
	static UFunction* pFnFillOptions = NULL;

	if ( ! pFnFillOptions )
		pFnFillOptions = (UFunction*) UObject::GObjObjects()->Data[ 61001 ];

	UGFxTrPage_Vehicle_execFillOptions_Parms FillOptions_Parms;
	FillOptions_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillOptions, &FillOptions_Parms, NULL );

	return FillOptions_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Vehicle.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Vehicle::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60999 ];

	UGFxTrPage_Vehicle_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.AddOption
// [0x00820002] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            Icon                           ( CPF_Parm )
// int                            Count                          ( CPF_Parm )
// int                            MaxCount                       ( CPF_Parm )

void UGFxTrPage_Vehicle::AddOption ( struct FString ClassName, struct FString DisplayName, int Cost, int Icon, int Count, int MaxCount )
{
	static UFunction* pFnAddOption = NULL;

	if ( ! pFnAddOption )
		pFnAddOption = (UFunction*) UObject::GObjObjects()->Data[ 60991 ];

	UGFxTrPage_Vehicle_execAddOption_Parms AddOption_Parms;
	memcpy ( &AddOption_Parms.ClassName, &ClassName, 0xC );
	memcpy ( &AddOption_Parms.DisplayName, &DisplayName, 0xC );
	AddOption_Parms.Cost = Cost;
	AddOption_Parms.Icon = Icon;
	AddOption_Parms.Count = Count;
	AddOption_Parms.MaxCount = MaxCount;

	this->ProcessEvent ( pFnAddOption, &AddOption_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Vehicle::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60987 ];

	UGFxTrPage_Vehicle_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Vehicle.ClearActions
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Vehicle::ClearActions ( )
{
	static UFunction* pFnClearActions = NULL;

	if ( ! pFnClearActions )
		pFnClearActions = (UFunction*) UObject::GObjObjects()->Data[ 60985 ];

	UGFxTrPage_Vehicle_execClearActions_Parms ClearActions_Parms;

	this->ProcessEvent ( pFnClearActions, &ClearActions_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Vehicle::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60982 ];

	UGFxTrPage_Vehicle_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Vehicle.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_Vehicle::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60981 ];

	UGFxTrPage_Vehicle_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Accolades.GetAccoladeClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AccoladeId                     ( CPF_Parm )

class UClass* UGFxTrPage_Accolades::GetAccoladeClass ( int AccoladeId )
{
	static UFunction* pFnGetAccoladeClass = NULL;

	if ( ! pFnGetAccoladeClass )
		pFnGetAccoladeClass = (UFunction*) UObject::GObjObjects()->Data[ 56871 ];

	UGFxTrPage_Accolades_execGetAccoladeClass_Parms GetAccoladeClass_Parms;
	GetAccoladeClass_Parms.AccoladeId = AccoladeId;

	this->ProcessEvent ( pFnGetAccoladeClass, &GetAccoladeClass_Parms, NULL );

	return GetAccoladeClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Accolades.FillAccolade
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FAccoladeStruct         Accolade                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Accolades::FillAccolade ( struct FAccoladeStruct Accolade )
{
	static UFunction* pFnFillAccolade = NULL;

	if ( ! pFnFillAccolade )
		pFnFillAccolade = (UFunction*) UObject::GObjObjects()->Data[ 56863 ];

	UGFxTrPage_Accolades_execFillAccolade_Parms FillAccolade_Parms;
	memcpy ( &FillAccolade_Parms.Accolade, &Accolade, 0x10 );

	this->ProcessEvent ( pFnFillAccolade, &FillAccolade_Parms, NULL );

	return FillAccolade_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Accolades.FillAccolades
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage_Accolades::FillAccolades ( )
{
	static UFunction* pFnFillAccolades = NULL;

	if ( ! pFnFillAccolades )
		pFnFillAccolades = (UFunction*) UObject::GObjObjects()->Data[ 56854 ];

	UGFxTrPage_Accolades_execFillAccolades_Parms FillAccolades_Parms;

	this->ProcessEvent ( pFnFillAccolades, &FillAccolades_Parms, NULL );

	return FillAccolades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Accolades.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Accolades::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 56851 ];

	UGFxTrPage_Accolades_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Accolades.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Accolades::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 56847 ];

	UGFxTrPage_Accolades_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Accolades.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Accolades::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 56845 ];

	UGFxTrPage_Accolades_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Accolades.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Accolades::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 56841 ];

	UGFxTrPage_Accolades_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Accolades.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Accolades::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 56839 ];

	UGFxTrPage_Accolades_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Accolades.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Accolades::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 56838 ];

	UGFxTrPage_Accolades_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_AudioSettings.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_AudioSettings::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 56902 ];

	UGFxTrPage_AudioSettings_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_AudioSettings.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_AudioSettings::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 56899 ];

	UGFxTrPage_AudioSettings_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_AudioSettings.SetSubTitle
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// int                            val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_AudioSettings::SetSubTitle ( int Index, int val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 56894 ];

	UGFxTrPage_AudioSettings_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.Index = Index;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_AudioSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_AudioSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 56887 ];

	UGFxTrPage_AudioSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_AudioSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_AudioSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 56883 ];

	UGFxTrPage_AudioSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_AudioSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_AudioSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 56881 ];

	UGFxTrPage_AudioSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.ProfileDown
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Badges::ProfileDown ( int ActionIndex )
{
	static UFunction* pFnProfileDown = NULL;

	if ( ! pFnProfileDown )
		pFnProfileDown = (UFunction*) UObject::GObjObjects()->Data[ 57260 ];

	UGFxTrPage_Badges_execProfileDown_Parms ProfileDown_Parms;
	ProfileDown_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileDown, &ProfileDown_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.ProfileUp
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Badges::ProfileUp ( int ActionIndex )
{
	static UFunction* pFnProfileUp = NULL;

	if ( ! pFnProfileUp )
		pFnProfileUp = (UFunction*) UObject::GObjObjects()->Data[ 57258 ];

	UGFxTrPage_Badges_execProfileUp_Parms ProfileUp_Parms;
	ProfileUp_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnProfileUp, &ProfileUp_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.GetHighestSkiBadgeIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Badges::GetHighestSkiBadgeIndex ( )
{
	static UFunction* pFnGetHighestSkiBadgeIndex = NULL;

	if ( ! pFnGetHighestSkiBadgeIndex )
		pFnGetHighestSkiBadgeIndex = (UFunction*) UObject::GObjObjects()->Data[ 57253 ];

	UGFxTrPage_Badges_execGetHighestSkiBadgeIndex_Parms GetHighestSkiBadgeIndex_Parms;

	this->ProcessEvent ( pFnGetHighestSkiBadgeIndex, &GetHighestSkiBadgeIndex_Parms, NULL );

	return GetHighestSkiBadgeIndex_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Badges.GetHighestBadgeIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActivityId                     ( CPF_Parm )

int UGFxTrPage_Badges::GetHighestBadgeIndex ( int ActivityId )
{
	static UFunction* pFnGetHighestBadgeIndex = NULL;

	if ( ! pFnGetHighestBadgeIndex )
		pFnGetHighestBadgeIndex = (UFunction*) UObject::GObjObjects()->Data[ 57246 ];

	UGFxTrPage_Badges_execGetHighestBadgeIndex_Parms GetHighestBadgeIndex_Parms;
	GetHighestBadgeIndex_Parms.ActivityId = ActivityId;

	this->ProcessEvent ( pFnGetHighestBadgeIndex, &GetHighestBadgeIndex_Parms, NULL );

	return GetHighestBadgeIndex_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Badges.FillBadge
// [0x00024002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )
// int                            Count                          ( CPF_Parm )
// int                            badgeIndex                     ( CPF_Parm )
// unsigned long                  bSkiBadge                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bSingle                        ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bReferralBadge                 ( CPF_OptionalParm | CPF_Parm )

void UGFxTrPage_Badges::FillBadge ( class UGFxObject* Obj, int Count, int badgeIndex, unsigned long bSkiBadge, unsigned long bSingle, unsigned long bReferralBadge )
{
	static UFunction* pFnFillBadge = NULL;

	if ( ! pFnFillBadge )
		pFnFillBadge = (UFunction*) UObject::GObjObjects()->Data[ 57235 ];

	UGFxTrPage_Badges_execFillBadge_Parms FillBadge_Parms;
	FillBadge_Parms.Obj = Obj;
	FillBadge_Parms.Count = Count;
	FillBadge_Parms.badgeIndex = badgeIndex;
	FillBadge_Parms.bSkiBadge = bSkiBadge;
	FillBadge_Parms.bSingle = bSingle;
	FillBadge_Parms.bReferralBadge = bReferralBadge;

	this->ProcessEvent ( pFnFillBadge, &FillBadge_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillReferralType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillReferralType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillReferralType = NULL;

	if ( ! pFnFillReferralType )
		pFnFillReferralType = (UFunction*) UObject::GObjObjects()->Data[ 57229 ];

	UGFxTrPage_Badges_execFillReferralType_Parms FillReferralType_Parms;
	FillReferralType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillReferralType, &FillReferralType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillSingleType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillSingleType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillSingleType = NULL;

	if ( ! pFnFillSingleType )
		pFnFillSingleType = (UFunction*) UObject::GObjObjects()->Data[ 57224 ];

	UGFxTrPage_Badges_execFillSingleType_Parms FillSingleType_Parms;
	FillSingleType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillSingleType, &FillSingleType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillTacticalType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillTacticalType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillTacticalType = NULL;

	if ( ! pFnFillTacticalType )
		pFnFillTacticalType = (UFunction*) UObject::GObjObjects()->Data[ 57219 ];

	UGFxTrPage_Badges_execFillTacticalType_Parms FillTacticalType_Parms;
	FillTacticalType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillTacticalType, &FillTacticalType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillVehicleType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillVehicleType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillVehicleType = NULL;

	if ( ! pFnFillVehicleType )
		pFnFillVehicleType = (UFunction*) UObject::GObjObjects()->Data[ 57214 ];

	UGFxTrPage_Badges_execFillVehicleType_Parms FillVehicleType_Parms;
	FillVehicleType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillVehicleType, &FillVehicleType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillObjectiveType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillObjectiveType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillObjectiveType = NULL;

	if ( ! pFnFillObjectiveType )
		pFnFillObjectiveType = (UFunction*) UObject::GObjObjects()->Data[ 57209 ];

	UGFxTrPage_Badges_execFillObjectiveType_Parms FillObjectiveType_Parms;
	FillObjectiveType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillObjectiveType, &FillObjectiveType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillCombatType
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Badges::FillCombatType ( class UGFxObject* Obj )
{
	static UFunction* pFnFillCombatType = NULL;

	if ( ! pFnFillCombatType )
		pFnFillCombatType = (UFunction*) UObject::GObjObjects()->Data[ 57204 ];

	UGFxTrPage_Badges_execFillCombatType_Parms FillCombatType_Parms;
	FillCombatType_Parms.Obj = Obj;

	this->ProcessEvent ( pFnFillCombatType, &FillCombatType_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.FillProfile
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage_Badges::FillProfile ( )
{
	static UFunction* pFnFillProfile = NULL;

	if ( ! pFnFillProfile )
		pFnFillProfile = (UFunction*) UObject::GObjObjects()->Data[ 57199 ];

	UGFxTrPage_Badges_execFillProfile_Parms FillProfile_Parms;

	this->ProcessEvent ( pFnFillProfile, &FillProfile_Parms, NULL );

	return FillProfile_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Badges.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Badges::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57196 ];

	UGFxTrPage_Badges_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Badges::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57192 ];

	UGFxTrPage_Badges_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Badges.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Badges::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57190 ];

	UGFxTrPage_Badges_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Badges::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57186 ];

	UGFxTrPage_Badges_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Badges.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Badges::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 57184 ];

	UGFxTrPage_Badges_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Badges.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Badges::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57183 ];

	UGFxTrPage_Badges_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_BlockedPlayers::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57473 ];

	UGFxTrPage_BlockedPlayers_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_BlockedPlayers::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57471 ];

	UGFxTrPage_BlockedPlayers_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.FindNextBlocked
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_BlockedPlayers::FindNextBlocked ( )
{
	static UFunction* pFnFindNextBlocked = NULL;

	if ( ! pFnFindNextBlocked )
		pFnFindNextBlocked = (UFunction*) UObject::GObjObjects()->Data[ 57467 ];

	UGFxTrPage_BlockedPlayers_execFindNextBlocked_Parms FindNextBlocked_Parms;

	this->ProcessEvent ( pFnFindNextBlocked, &FindNextBlocked_Parms, NULL );

	return FindNextBlocked_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_BlockedPlayers::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57462 ];

	UGFxTrPage_BlockedPlayers_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_BlockedPlayers::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57457 ];

	UGFxTrPage_BlockedPlayers_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_BlockedPlayers::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 57456 ];

	UGFxTrPage_BlockedPlayers_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_BlockedPlayers::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57452 ];

	UGFxTrPage_BlockedPlayers_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.ModifyFocus
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_BlockedPlayers::ModifyFocus ( int ActionIndex )
{
	static UFunction* pFnModifyFocus = NULL;

	if ( ! pFnModifyFocus )
		pFnModifyFocus = (UFunction*) UObject::GObjObjects()->Data[ 57449 ];

	UGFxTrPage_BlockedPlayers_execModifyFocus_Parms ModifyFocus_Parms;
	ModifyFocus_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnModifyFocus, &ModifyFocus_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_BlockedPlayers::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 57445 ];

	UGFxTrPage_BlockedPlayers_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_BlockedPlayers::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57440 ];

	UGFxTrPage_BlockedPlayers_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BlockedPlayers.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_BlockedPlayers::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 57438 ];

	UGFxTrPage_BlockedPlayers_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_BlockedPlayers::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57434 ];

	UGFxTrPage_BlockedPlayers_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BlockedPlayers.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_BlockedPlayers::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57433 ];

	UGFxTrPage_BlockedPlayers_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Bundles::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57574 ];

	UGFxTrPage_Bundles_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Bundles::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57560 ];

	UGFxTrPage_Bundles_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Bundles::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57555 ];

	UGFxTrPage_Bundles_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Bundles::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57553 ];

	UGFxTrPage_Bundles_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Bundles::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57546 ];

	UGFxTrPage_Bundles_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Bundles::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57542 ];

	UGFxTrPage_Bundles_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Bundles::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57525 ];

	UGFxTrPage_Bundles_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Bundles::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 57514 ];

	UGFxTrPage_Bundles_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Bundles::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57509 ];

	UGFxTrPage_Bundles_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Bundles::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57500 ];

	UGFxTrPage_Bundles_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Bundles::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 57493 ];

	UGFxTrPage_Bundles_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Bundles.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Bundles::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57489 ];

	UGFxTrPage_Bundles_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Bundles.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Bundles::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57484 ];

	UGFxTrPage_Bundles_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_BuyBoost::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57635 ];

	UGFxTrPage_BuyBoost_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyBoost.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_BuyBoost::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57628 ];

	UGFxTrPage_BuyBoost_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyBoost.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_BuyBoost::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57624 ];

	UGFxTrPage_BuyBoost_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_BuyBoost::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57622 ];

	UGFxTrPage_BuyBoost_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyBoost.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_BuyBoost::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57618 ];

	UGFxTrPage_BuyBoost_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_BuyBoost::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57614 ];

	UGFxTrPage_BuyBoost_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyBoost.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_BuyBoost::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57607 ];

	UGFxTrPage_BuyBoost_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_BuyBoost::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 57598 ];

	UGFxTrPage_BuyBoost_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_BuyBoost::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57593 ];

	UGFxTrPage_BuyBoost_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyBoost.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_BuyBoost::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57588 ];

	UGFxTrPage_BuyBoost_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyBoost.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_BuyBoost::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57584 ];

	UGFxTrPage_BuyBoost_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyGold.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_BuyGold::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57650 ];

	UGFxTrPage_BuyGold_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyGold.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_BuyGold::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57645 ];

	UGFxTrPage_BuyGold_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_BuyGold.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_BuyGold::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57642 ];

	UGFxTrPage_BuyGold_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_BuyGold.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_BuyGold::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 57640 ];

	UGFxTrPage_BuyGold_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ChangeMap.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ChangeMap::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57687 ];

	UGFxTrPage_ChangeMap_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ChangeMap.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ChangeMap::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57683 ];

	UGFxTrPage_ChangeMap_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ChangeMap.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ChangeMap::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57674 ];

	UGFxTrPage_ChangeMap_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ChangeMap.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ChangeMap::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57668 ];

	UGFxTrPage_ChangeMap_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ChangeMap.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ChangeMap::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57664 ];

	UGFxTrPage_ChangeMap_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ChangeMap.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ChangeMap::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57658 ];

	UGFxTrPage_ChangeMap_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_VendorTable::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57756 ];

	UGFxTrPage_VendorTable_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VendorTable.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_VendorTable::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57749 ];

	UGFxTrPage_VendorTable_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VendorTable.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_VendorTable::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57745 ];

	UGFxTrPage_VendorTable_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_VendorTable::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57741 ];

	UGFxTrPage_VendorTable_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_VendorTable::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57739 ];

	UGFxTrPage_VendorTable_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VendorTable.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VendorTable::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57735 ];

	UGFxTrPage_VendorTable_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VendorTable.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VendorTable::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57728 ];

	UGFxTrPage_VendorTable_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_VendorTable::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 57720 ];

	UGFxTrPage_VendorTable_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_VendorTable::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57715 ];

	UGFxTrPage_VendorTable_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VendorTable::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57710 ];

	UGFxTrPage_VendorTable_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VendorTable.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_VendorTable::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57706 ];

	UGFxTrPage_VendorTable_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VendorTable.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_VendorTable::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57703 ];

	UGFxTrPage_VendorTable_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClanTagChange.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ClanTagChange::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57804 ];

	UGFxTrPage_ClanTagChange_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClanTagChange.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ClanTagChange::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57801 ];

	UGFxTrPage_ClanTagChange_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClanTagChange.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ClanTagChange::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57793 ];

	UGFxTrPage_ClanTagChange_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClanTagChange.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_ClanTagChange::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57790 ];

	UGFxTrPage_ClanTagChange_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClanTagChange.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ClanTagChange::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57786 ];

	UGFxTrPage_ClanTagChange_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClanTagChange.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ClanTagChange::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57782 ];

	UGFxTrPage_ClanTagChange_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClanTagChange.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ClanTagChange::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57777 ];

	UGFxTrPage_ClanTagChange_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClanTagChange.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ClanTagChange::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57773 ];

	UGFxTrPage_ClanTagChange_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Class::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57881 ];

	UGFxTrPage_Class_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Class::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57879 ];

	UGFxTrPage_Class_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.HelpButton
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Class::HelpButton ( int ActionIndex )
{
	static UFunction* pFnHelpButton = NULL;

	if ( ! pFnHelpButton )
		pFnHelpButton = (UFunction*) UObject::GObjObjects()->Data[ 57873 ];

	UGFxTrPage_Class_execHelpButton_Parms HelpButton_Parms;
	HelpButton_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnHelpButton, &HelpButton_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.GetEquipName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            equipType                      ( CPF_Parm )

struct FString UGFxTrPage_Class::GetEquipName ( int equipType )
{
	static UFunction* pFnGetEquipName = NULL;

	if ( ! pFnGetEquipName )
		pFnGetEquipName = (UFunction*) UObject::GObjObjects()->Data[ 57868 ];

	UGFxTrPage_Class_execGetEquipName_Parms GetEquipName_Parms;
	GetEquipName_Parms.equipType = equipType;

	this->ProcessEvent ( pFnGetEquipName, &GetEquipName_Parms, NULL );

	return GetEquipName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.GetArmorName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

struct FString UGFxTrPage_Class::GetArmorName ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetArmorName = NULL;

	if ( ! pFnGetArmorName )
		pFnGetArmorName = (UFunction*) UObject::GObjObjects()->Data[ 57863 ];

	UGFxTrPage_Class_execGetArmorName_Parms GetArmorName_Parms;
	GetArmorName_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetArmorName, &GetArmorName_Parms, NULL );

	return GetArmorName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Class::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57850 ];

	UGFxTrPage_Class_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Class::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57846 ];

	UGFxTrPage_Class_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.GetEquipType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

int UGFxTrPage_Class::GetEquipType ( int ActionIndex )
{
	static UFunction* pFnGetEquipType = NULL;

	if ( ! pFnGetEquipType )
		pFnGetEquipType = (UFunction*) UObject::GObjObjects()->Data[ 57843 ];

	UGFxTrPage_Class_execGetEquipType_Parms GetEquipType_Parms;
	GetEquipType_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnGetEquipType, &GetEquipType_Parms, NULL );

	return GetEquipType_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Class::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57835 ];

	UGFxTrPage_Class_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Class::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57831 ];

	UGFxTrPage_Class_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Class.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Class::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 57823 ];

	UGFxTrPage_Class_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Class::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57815 ];

	UGFxTrPage_Class_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Class.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Class::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57813 ];

	UGFxTrPage_Class_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.HelpButton
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Classes::HelpButton ( int ActionIndex )
{
	static UFunction* pFnHelpButton = NULL;

	if ( ! pFnHelpButton )
		pFnHelpButton = (UFunction*) UObject::GObjObjects()->Data[ 57995 ];

	UGFxTrPage_Classes_execHelpButton_Parms HelpButton_Parms;
	HelpButton_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnHelpButton, &HelpButton_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.RequestActiveClass
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool UGFxTrPage_Classes::RequestActiveClass ( int ClassId, int Loadout )
{
	static UFunction* pFnRequestActiveClass = NULL;

	if ( ! pFnRequestActiveClass )
		pFnRequestActiveClass = (UFunction*) UObject::GObjObjects()->Data[ 57988 ];

	UGFxTrPage_Classes_execRequestActiveClass_Parms RequestActiveClass_Parms;
	RequestActiveClass_Parms.ClassId = ClassId;
	RequestActiveClass_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnRequestActiveClass, &RequestActiveClass_Parms, NULL );

	return RequestActiveClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.IsOwned
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage_Classes::IsOwned ( int Index )
{
	static UFunction* pFnIsOwned = NULL;

	if ( ! pFnIsOwned )
		pFnIsOwned = (UFunction*) UObject::GObjObjects()->Data[ 57984 ];

	UGFxTrPage_Classes_execIsOwned_Parms IsOwned_Parms;
	IsOwned_Parms.Index = Index;

	this->ProcessEvent ( pFnIsOwned, &IsOwned_Parms, NULL );

	return IsOwned_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.GetEquipName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            equipType                      ( CPF_Parm )

struct FString UGFxTrPage_Classes::GetEquipName ( int equipType )
{
	static UFunction* pFnGetEquipName = NULL;

	if ( ! pFnGetEquipName )
		pFnGetEquipName = (UFunction*) UObject::GObjObjects()->Data[ 57979 ];

	UGFxTrPage_Classes_execGetEquipName_Parms GetEquipName_Parms;
	GetEquipName_Parms.equipType = equipType;

	this->ProcessEvent ( pFnGetEquipName, &GetEquipName_Parms, NULL );

	return GetEquipName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.GetArmorName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

struct FString UGFxTrPage_Classes::GetArmorName ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetArmorName = NULL;

	if ( ! pFnGetArmorName )
		pFnGetArmorName = (UFunction*) UObject::GObjObjects()->Data[ 57976 ];

	UGFxTrPage_Classes_execGetArmorName_Parms GetArmorName_Parms;
	GetArmorName_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetArmorName, &GetArmorName_Parms, NULL );

	return GetArmorName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Classes::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 57971 ];

	UGFxTrPage_Classes_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Classes::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 57967 ];

	UGFxTrPage_Classes_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Classes::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 57960 ];

	UGFxTrPage_Classes_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Classes::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 57955 ];

	UGFxTrPage_Classes_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.CheckPurchasable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrPage_Classes::CheckPurchasable ( )
{
	static UFunction* pFnCheckPurchasable = NULL;

	if ( ! pFnCheckPurchasable )
		pFnCheckPurchasable = (UFunction*) UObject::GObjObjects()->Data[ 57953 ];

	UGFxTrPage_Classes_execCheckPurchasable_Parms CheckPurchasable_Parms;

	this->ProcessEvent ( pFnCheckPurchasable, &CheckPurchasable_Parms, NULL );

	return CheckPurchasable_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Classes::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 57949 ];

	UGFxTrPage_Classes_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Classes::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 57944 ];

	UGFxTrPage_Classes_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Classes::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 57937 ];

	UGFxTrPage_Classes_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Classes::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 57933 ];

	UGFxTrPage_Classes_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Classes::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 57923 ];

	UGFxTrPage_Classes_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.OnPurchaseSuccess
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Classes::OnPurchaseSuccess ( )
{
	static UFunction* pFnOnPurchaseSuccess = NULL;

	if ( ! pFnOnPurchaseSuccess )
		pFnOnPurchaseSuccess = (UFunction*) UObject::GObjObjects()->Data[ 57922 ];

	UGFxTrPage_Classes_execOnPurchaseSuccess_Parms OnPurchaseSuccess_Parms;

	this->ProcessEvent ( pFnOnPurchaseSuccess, &OnPurchaseSuccess_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Classes::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 57912 ];

	UGFxTrPage_Classes_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Classes::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 57904 ];

	UGFxTrPage_Classes_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Classes::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 57900 ];

	UGFxTrPage_Classes_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Classes.RefreshClassList
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Classes::RefreshClassList ( )
{
	static UFunction* pFnRefreshClassList = NULL;

	if ( ! pFnRefreshClassList )
		pFnRefreshClassList = (UFunction*) UObject::GObjObjects()->Data[ 57893 ];

	UGFxTrPage_Classes_execRefreshClassList_Parms RefreshClassList_Parms;

	this->ProcessEvent ( pFnRefreshClassList, &RefreshClassList_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Classes.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Classes::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 57892 ];

	UGFxTrPage_Classes_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Loadouts.GetEquipName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            equipType                      ( CPF_Parm )

struct FString UGFxTrPage_Loadouts::GetEquipName ( int equipType )
{
	static UFunction* pFnGetEquipName = NULL;

	if ( ! pFnGetEquipName )
		pFnGetEquipName = (UFunction*) UObject::GObjObjects()->Data[ 59106 ];

	UGFxTrPage_Loadouts_execGetEquipName_Parms GetEquipName_Parms;
	GetEquipName_Parms.equipType = equipType;

	this->ProcessEvent ( pFnGetEquipName, &GetEquipName_Parms, NULL );

	return GetEquipName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.GetArmorName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UClass*                  FamilyInfo                     ( CPF_Parm )

struct FString UGFxTrPage_Loadouts::GetArmorName ( class UClass* FamilyInfo )
{
	static UFunction* pFnGetArmorName = NULL;

	if ( ! pFnGetArmorName )
		pFnGetArmorName = (UFunction*) UObject::GObjObjects()->Data[ 59103 ];

	UGFxTrPage_Loadouts_execGetArmorName_Parms GetArmorName_Parms;
	GetArmorName_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnGetArmorName, &GetArmorName_Parms, NULL );

	return GetArmorName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Loadouts::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59097 ];

	UGFxTrPage_Loadouts_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Loadouts::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 59093 ];

	UGFxTrPage_Loadouts_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Loadouts.RequestActiveClass
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool UGFxTrPage_Loadouts::RequestActiveClass ( int ClassId, int Loadout )
{
	static UFunction* pFnRequestActiveClass = NULL;

	if ( ! pFnRequestActiveClass )
		pFnRequestActiveClass = (UFunction*) UObject::GObjObjects()->Data[ 59088 ];

	UGFxTrPage_Loadouts_execRequestActiveClass_Parms RequestActiveClass_Parms;
	RequestActiveClass_Parms.ClassId = ClassId;
	RequestActiveClass_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnRequestActiveClass, &RequestActiveClass_Parms, NULL );

	return RequestActiveClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Loadouts::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59083 ];

	UGFxTrPage_Loadouts_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Loadouts.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Loadouts::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59078 ];

	UGFxTrPage_Loadouts_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Loadouts.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Loadouts::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59073 ];

	UGFxTrPage_Loadouts_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Loadouts.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Loadouts::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 59064 ];

	UGFxTrPage_Loadouts_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Loadouts::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 59059 ];

	UGFxTrPage_Loadouts_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Loadouts::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 59054 ];

	UGFxTrPage_Loadouts_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Loadouts::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59049 ];

	UGFxTrPage_Loadouts_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Loadouts::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59045 ];

	UGFxTrPage_Loadouts_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Loadouts::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59040 ];

	UGFxTrPage_Loadouts_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Loadouts.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Loadouts::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59038 ];

	UGFxTrPage_Loadouts_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.GetEquipName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            equipType                      ( CPF_Parm )

struct FString UGFxTrPage_ClassSelect::GetEquipName ( int equipType )
{
	static UFunction* pFnGetEquipName = NULL;

	if ( ! pFnGetEquipName )
		pFnGetEquipName = (UFunction*) UObject::GObjObjects()->Data[ 58075 ];

	UGFxTrPage_ClassSelect_execGetEquipName_Parms GetEquipName_Parms;
	GetEquipName_Parms.equipType = equipType;

	this->ProcessEvent ( pFnGetEquipName, &GetEquipName_Parms, NULL );

	return GetEquipName_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ClassSelect::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58070 ];

	UGFxTrPage_ClassSelect_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ClassSelect::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58066 ];

	UGFxTrPage_ClassSelect_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ClassSelect::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58063 ];

	UGFxTrPage_ClassSelect_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ClassSelect::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58053 ];

	UGFxTrPage_ClassSelect_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.OnPurchaseSuccess
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ClassSelect::OnPurchaseSuccess ( )
{
	static UFunction* pFnOnPurchaseSuccess = NULL;

	if ( ! pFnOnPurchaseSuccess )
		pFnOnPurchaseSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58052 ];

	UGFxTrPage_ClassSelect_execOnPurchaseSuccess_Parms OnPurchaseSuccess_Parms;

	this->ProcessEvent ( pFnOnPurchaseSuccess, &OnPurchaseSuccess_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ClassSelect::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 58045 ];

	UGFxTrPage_ClassSelect_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_ClassSelect::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 58040 ];

	UGFxTrPage_ClassSelect_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.RequestActiveClass
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// int                            Loadout                        ( CPF_Parm )

bool UGFxTrPage_ClassSelect::RequestActiveClass ( int ClassId, int Loadout )
{
	static UFunction* pFnRequestActiveClass = NULL;

	if ( ! pFnRequestActiveClass )
		pFnRequestActiveClass = (UFunction*) UObject::GObjObjects()->Data[ 58035 ];

	UGFxTrPage_ClassSelect_execRequestActiveClass_Parms RequestActiveClass_Parms;
	RequestActiveClass_Parms.ClassId = ClassId;
	RequestActiveClass_Parms.Loadout = Loadout;

	this->ProcessEvent ( pFnRequestActiveClass, &RequestActiveClass_Parms, NULL );

	return RequestActiveClass_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ClassSelect::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58034 ];

	UGFxTrPage_ClassSelect_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ClassSelect::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58030 ];

	UGFxTrPage_ClassSelect_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ClassSelect::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58024 ];

	UGFxTrPage_ClassSelect_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ClassSelect::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58022 ];

	UGFxTrPage_ClassSelect_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.RefreshClassList
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ClassSelect::RefreshClassList ( )
{
	static UFunction* pFnRefreshClassList = NULL;

	if ( ! pFnRefreshClassList )
		pFnRefreshClassList = (UFunction*) UObject::GObjObjects()->Data[ 58019 ];

	UGFxTrPage_ClassSelect_execRefreshClassList_Parms RefreshClassList_Parms;

	this->ProcessEvent ( pFnRefreshClassList, &RefreshClassList_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ClassSelect.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ClassSelect::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 58010 ];

	UGFxTrPage_ClassSelect_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ClassSelect::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58005 ];

	UGFxTrPage_ClassSelect_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ClassSelect.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ClassSelect::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58004 ];

	UGFxTrPage_ClassSelect_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CmntyVideo.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_CmntyVideo::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58105 ];

	UGFxTrPage_CmntyVideo_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CmntyVideo.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_CmntyVideo::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58094 ];

	UGFxTrPage_CmntyVideo_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CmntyVideo.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_CmntyVideo::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58088 ];

	UGFxTrPage_CmntyVideo_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CmntyVideo.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_CmntyVideo::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58086 ];

	UGFxTrPage_CmntyVideo_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CmntyVideo.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_CmntyVideo::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58084 ];

	UGFxTrPage_CmntyVideo_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CmntyVideo.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_CmntyVideo::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58083 ];

	UGFxTrPage_CmntyVideo_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ControlSettings.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ControlSettings::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58140 ];

	UGFxTrPage_ControlSettings_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ControlSettings.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ControlSettings::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58135 ];

	UGFxTrPage_ControlSettings_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ControlSettings.SetSubTitle
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ControlSettings::SetSubTitle ( int Index, float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 58130 ];

	UGFxTrPage_ControlSettings_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.Index = Index;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ControlSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ControlSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58125 ];

	UGFxTrPage_ControlSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ControlSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ControlSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58119 ];

	UGFxTrPage_ControlSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ControlSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ControlSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58117 ];

	UGFxTrPage_ControlSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_CustomMatch::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58242 ];

	UGFxTrPage_CustomMatch_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.WaitPopup
// [0x00020002] 
// Parameters infos:
// struct FString                 ServerName                     ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_CustomMatch::WaitPopup ( struct FString ServerName )
{
	static UFunction* pFnWaitPopup = NULL;

	if ( ! pFnWaitPopup )
		pFnWaitPopup = (UFunction*) UObject::GObjObjects()->Data[ 58240 ];

	UGFxTrPage_CustomMatch_execWaitPopup_Parms WaitPopup_Parms;
	memcpy ( &WaitPopup_Parms.ServerName, &ServerName, 0xC );

	this->ProcessEvent ( pFnWaitPopup, &WaitPopup_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.GetLevelReq
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Min                            ( CPF_Parm )
// int                            Max                            ( CPF_Parm )

struct FString UGFxTrPage_CustomMatch::GetLevelReq ( int Min, int Max )
{
	static UFunction* pFnGetLevelReq = NULL;

	if ( ! pFnGetLevelReq )
		pFnGetLevelReq = (UFunction*) UObject::GObjObjects()->Data[ 58236 ];

	UGFxTrPage_CustomMatch_execGetLevelReq_Parms GetLevelReq_Parms;
	GetLevelReq_Parms.Min = Min;
	GetLevelReq_Parms.Max = Max;

	this->ProcessEvent ( pFnGetLevelReq, &GetLevelReq_Parms, NULL );

	return GetLevelReq_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CustomMatch.ActionDown
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_CustomMatch::ActionDown ( )
{
	static UFunction* pFnActionDown = NULL;

	if ( ! pFnActionDown )
		pFnActionDown = (UFunction*) UObject::GObjObjects()->Data[ 58235 ];

	UGFxTrPage_CustomMatch_execActionDown_Parms ActionDown_Parms;

	this->ProcessEvent ( pFnActionDown, &ActionDown_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.ActionUp
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_CustomMatch::ActionUp ( )
{
	static UFunction* pFnActionUp = NULL;

	if ( ! pFnActionUp )
		pFnActionUp = (UFunction*) UObject::GObjObjects()->Data[ 58234 ];

	UGFxTrPage_CustomMatch_execActionUp_Parms ActionUp_Parms;

	this->ProcessEvent ( pFnActionUp, &ActionUp_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_CustomMatch::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58226 ];

	UGFxTrPage_CustomMatch_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CustomMatch.FillServerBrowser
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage_CustomMatch::FillServerBrowser ( )
{
	static UFunction* pFnFillServerBrowser = NULL;

	if ( ! pFnFillServerBrowser )
		pFnFillServerBrowser = (UFunction*) UObject::GObjObjects()->Data[ 58191 ];

	UGFxTrPage_CustomMatch_execFillServerBrowser_Parms FillServerBrowser_Parms;

	this->ProcessEvent ( pFnFillServerBrowser, &FillServerBrowser_Parms, NULL );

	return FillServerBrowser_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CustomMatch.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_CustomMatch::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58188 ];

	UGFxTrPage_CustomMatch_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_CustomMatch::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58180 ];

	UGFxTrPage_CustomMatch_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_CustomMatch::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58173 ];

	UGFxTrPage_CustomMatch_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CustomMatch.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_CustomMatch::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58169 ];

	UGFxTrPage_CustomMatch_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_CustomMatch.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_CustomMatch::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58166 ];

	UGFxTrPage_CustomMatch_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_CustomMatch.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_CustomMatch::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58164 ];

	UGFxTrPage_CustomMatch_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RegionSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_RegionSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60087 ];

	UGFxTrPage_RegionSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RegionSettings.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_RegionSettings::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60080 ];

	UGFxTrPage_RegionSettings_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RegionSettings.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_RegionSettings::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60074 ];

	UGFxTrPage_RegionSettings_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RegionSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RegionSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60073 ];

	UGFxTrPage_RegionSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.OnClose
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Equip::OnClose ( )
{
	static UFunction* pFnOnClose = NULL;

	if ( ! pFnOnClose )
		pFnOnClose = (UFunction*) UObject::GObjObjects()->Data[ 58430 ];

	UGFxTrPage_Equip_execOnClose_Parms OnClose_Parms;

	this->ProcessEvent ( pFnOnClose, &OnClose_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.SaveReticule
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Data                           ( CPF_Parm )

void UGFxTrPage_Equip::SaveReticule ( class UGFxObject* Data )
{
	static UFunction* pFnSaveReticule = NULL;

	if ( ! pFnSaveReticule )
		pFnSaveReticule = (UFunction*) UObject::GObjObjects()->Data[ 58424 ];

	UGFxTrPage_Equip_execSaveReticule_Parms SaveReticule_Parms;
	SaveReticule_Parms.Data = Data;

	this->ProcessEvent ( pFnSaveReticule, &SaveReticule_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Equip::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58417 ];

	UGFxTrPage_Equip_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.PopupDataSkin
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Equip::PopupDataSkin ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupDataSkin = NULL;

	if ( ! pFnPopupDataSkin )
		pFnPopupDataSkin = (UFunction*) UObject::GObjObjects()->Data[ 58414 ];

	UGFxTrPage_Equip_execPopupDataSkin_Parms PopupDataSkin_Parms;
	PopupDataSkin_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupDataSkin, &PopupDataSkin_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Equip::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58410 ];

	UGFxTrPage_Equip_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Equip::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 58406 ];

	UGFxTrPage_Equip_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.IsOwned
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage_Equip::IsOwned ( int Index )
{
	static UFunction* pFnIsOwned = NULL;

	if ( ! pFnIsOwned )
		pFnIsOwned = (UFunction*) UObject::GObjObjects()->Data[ 58402 ];

	UGFxTrPage_Equip_execIsOwned_Parms IsOwned_Parms;
	IsOwned_Parms.Index = Index;

	this->ProcessEvent ( pFnIsOwned, &IsOwned_Parms, NULL );

	return IsOwned_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.IsEquipMaxed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage_Equip::IsEquipMaxed ( int Index )
{
	static UFunction* pFnIsEquipMaxed = NULL;

	if ( ! pFnIsEquipMaxed )
		pFnIsEquipMaxed = (UFunction*) UObject::GObjObjects()->Data[ 58398 ];

	UGFxTrPage_Equip_execIsEquipMaxed_Parms IsEquipMaxed_Parms;
	IsEquipMaxed_Parms.Index = Index;

	this->ProcessEvent ( pFnIsEquipMaxed, &IsEquipMaxed_Parms, NULL );

	return IsEquipMaxed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.CheckPurchasable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UGFxTrPage_Equip::CheckPurchasable ( )
{
	static UFunction* pFnCheckPurchasable = NULL;

	if ( ! pFnCheckPurchasable )
		pFnCheckPurchasable = (UFunction*) UObject::GObjObjects()->Data[ 58396 ];

	UGFxTrPage_Equip_execCheckPurchasable_Parms CheckPurchasable_Parms;

	this->ProcessEvent ( pFnCheckPurchasable, &CheckPurchasable_Parms, NULL );

	return CheckPurchasable_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58377 ];

	UGFxTrPage_Equip_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Equip::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58373 ];

	UGFxTrPage_Equip_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.FillPricingSkin
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillPricingSkin ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricingSkin = NULL;

	if ( ! pFnFillPricingSkin )
		pFnFillPricingSkin = (UFunction*) UObject::GObjObjects()->Data[ 58366 ];

	UGFxTrPage_Equip_execFillPricingSkin_Parms FillPricingSkin_Parms;
	FillPricingSkin_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricingSkin, &FillPricingSkin_Parms, NULL );

	return FillPricingSkin_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 58356 ];

	UGFxTrPage_Equip_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Equip::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 58351 ];

	UGFxTrPage_Equip_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillUpgrades
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillUpgrades ( class UGFxObject* DataList )
{
	static UFunction* pFnFillUpgrades = NULL;

	if ( ! pFnFillUpgrades )
		pFnFillUpgrades = (UFunction*) UObject::GObjObjects()->Data[ 58330 ];

	UGFxTrPage_Equip_execFillUpgrades_Parms FillUpgrades_Parms;
	FillUpgrades_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillUpgrades, &FillUpgrades_Parms, NULL );

	return FillUpgrades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.CheckUpgrades
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Equip::CheckUpgrades ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckUpgrades = NULL;

	if ( ! pFnCheckUpgrades )
		pFnCheckUpgrades = (UFunction*) UObject::GObjObjects()->Data[ 58324 ];

	UGFxTrPage_Equip_execCheckUpgrades_Parms CheckUpgrades_Parms;
	CheckUpgrades_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckUpgrades, &CheckUpgrades_Parms, NULL );

	return CheckUpgrades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillSkin
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillSkin ( int ActionIndex )
{
	static UFunction* pFnFillSkin = NULL;

	if ( ! pFnFillSkin )
		pFnFillSkin = (UFunction*) UObject::GObjObjects()->Data[ 58318 ];

	UGFxTrPage_Equip_execFillSkin_Parms FillSkin_Parms;
	FillSkin_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillSkin, &FillSkin_Parms, NULL );

	return FillSkin_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Equip::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58298 ];

	UGFxTrPage_Equip_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Equip::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58291 ];

	UGFxTrPage_Equip_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Equip::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58281 ];

	UGFxTrPage_Equip_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Equip::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58277 ];

	UGFxTrPage_Equip_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Equip.SetActiveEquip
// [0x00024002] 
// Parameters infos:
// int                            EquipId                        ( CPF_Parm )
// unsigned long                  bShowStatus                    ( CPF_OptionalParm | CPF_Parm )

void UGFxTrPage_Equip::SetActiveEquip ( int EquipId, unsigned long bShowStatus )
{
	static UFunction* pFnSetActiveEquip = NULL;

	if ( ! pFnSetActiveEquip )
		pFnSetActiveEquip = (UFunction*) UObject::GObjObjects()->Data[ 58270 ];

	UGFxTrPage_Equip_execSetActiveEquip_Parms SetActiveEquip_Parms;
	SetActiveEquip_Parms.EquipId = EquipId;
	SetActiveEquip_Parms.bShowStatus = bShowStatus;

	this->ProcessEvent ( pFnSetActiveEquip, &SetActiveEquip_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.OnPurchaseSuccess
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Equip::OnPurchaseSuccess ( )
{
	static UFunction* pFnOnPurchaseSuccess = NULL;

	if ( ! pFnOnPurchaseSuccess )
		pFnOnPurchaseSuccess = (UFunction*) UObject::GObjObjects()->Data[ 58269 ];

	UGFxTrPage_Equip_execOnPurchaseSuccess_Parms OnPurchaseSuccess_Parms;

	this->ProcessEvent ( pFnOnPurchaseSuccess, &OnPurchaseSuccess_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.HideReticule
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Equip::HideReticule ( )
{
	static UFunction* pFnHideReticule = NULL;

	if ( ! pFnHideReticule )
		pFnHideReticule = (UFunction*) UObject::GObjObjects()->Data[ 58268 ];

	UGFxTrPage_Equip_execHideReticule_Parms HideReticule_Parms;

	this->ProcessEvent ( pFnHideReticule, &HideReticule_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.ShowReticule
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void UGFxTrPage_Equip::ShowReticule ( int Index )
{
	static UFunction* pFnShowReticule = NULL;

	if ( ! pFnShowReticule )
		pFnShowReticule = (UFunction*) UObject::GObjObjects()->Data[ 58259 ];

	UGFxTrPage_Equip_execShowReticule_Parms ShowReticule_Parms;
	ShowReticule_Parms.Index = Index;

	this->ProcessEvent ( pFnShowReticule, &ShowReticule_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Equip.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Equip::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58255 ];

	UGFxTrPage_Equip_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.TrPlayerVoice.PlayRandomSample
// [0x00022002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrPlayerVoice::PlayRandomSample ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnPlayRandomSample = NULL;

	if ( ! pFnPlayRandomSample )
		pFnPlayRandomSample = (UFunction*) UObject::GObjObjects()->Data[ 100662 ];

	ATrPlayerVoice_execPlayRandomSample_Parms PlayRandomSample_Parms;
	PlayRandomSample_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnPlayRandomSample, &PlayRandomSample_Parms, NULL );
};

// Function TribesGame.TrPlayerVoice.PlaySoundContext
// [0x00022002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )
// unsigned char                  ContextActor                   ( CPF_Parm )
// unsigned char                  ContextLocation                ( CPF_Parm )
// unsigned long                  bEnemyLocation                 ( CPF_Parm )
// class APlayerReplicationInfo*  InstigatorPRI                  ( CPF_Parm )

void ATrPlayerVoice::PlaySoundContext ( class ATrPlayerController* TrPC, unsigned char ContextActor, unsigned char ContextLocation, unsigned long bEnemyLocation, class APlayerReplicationInfo* InstigatorPRI )
{
	static UFunction* pFnPlaySoundContext = NULL;

	if ( ! pFnPlaySoundContext )
		pFnPlaySoundContext = (UFunction*) UObject::GObjObjects()->Data[ 100654 ];

	ATrPlayerVoice_execPlaySoundContext_Parms PlaySoundContext_Parms;
	PlaySoundContext_Parms.TrPC = TrPC;
	PlaySoundContext_Parms.ContextActor = ContextActor;
	PlaySoundContext_Parms.ContextLocation = ContextLocation;
	PlaySoundContext_Parms.bEnemyLocation = bEnemyLocation;
	PlaySoundContext_Parms.InstigatorPRI = InstigatorPRI;

	this->ProcessEvent ( pFnPlaySoundContext, &PlaySoundContext_Parms, NULL );
};

// Function TribesGame.TrPlayerVoice.PlaySoundEx
// [0x00022002] 
// Parameters infos:
// unsigned char                  Command                        ( CPF_Parm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )
// class APlayerReplicationInfo*  InstigatorPRI                  ( CPF_Parm )

void ATrPlayerVoice::PlaySoundEx ( unsigned char Command, class ATrPlayerController* TrPC, class APlayerReplicationInfo* InstigatorPRI )
{
	static UFunction* pFnPlaySoundEx = NULL;

	if ( ! pFnPlaySoundEx )
		pFnPlaySoundEx = (UFunction*) UObject::GObjObjects()->Data[ 100648 ];

	ATrPlayerVoice_execPlaySoundEx_Parms PlaySoundEx_Parms;
	PlaySoundEx_Parms.Command = Command;
	PlaySoundEx_Parms.TrPC = TrPC;
	PlaySoundEx_Parms.InstigatorPRI = InstigatorPRI;

	this->ProcessEvent ( pFnPlaySoundEx, &PlaySoundEx_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Extras.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Extras::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58448 ];

	UGFxTrPage_Extras_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Extras.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Extras::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58445 ];

	UGFxTrPage_Extras_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Extras.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Extras::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58443 ];

	UGFxTrPage_Extras_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Extras.ShowModel
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_Extras::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58442 ];

	UGFxTrPage_Extras_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Extras.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Extras::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58441 ];

	UGFxTrPage_Extras_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_FollowerActions::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58488 ];

	UGFxTrPage_FollowerActions_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_FollowerActions::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58486 ];

	UGFxTrPage_FollowerActions_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_FollowerActions::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58484 ];

	UGFxTrPage_FollowerActions_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_FollowerActions::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58480 ];

	UGFxTrPage_FollowerActions_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FollowerActions.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_FollowerActions::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58478 ];

	UGFxTrPage_FollowerActions_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_FollowerActions::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58473 ];

	UGFxTrPage_FollowerActions_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FollowerActions.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FollowerActions::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 58472 ];

	UGFxTrPage_FollowerActions_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FollowerActions.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FollowerActions::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58471 ];

	UGFxTrPage_FollowerActions_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Followers.FindNextFollower
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Followers::FindNextFollower ( )
{
	static UFunction* pFnFindNextFollower = NULL;

	if ( ! pFnFindNextFollower )
		pFnFindNextFollower = (UFunction*) UObject::GObjObjects()->Data[ 58542 ];

	UGFxTrPage_Followers_execFindNextFollower_Parms FindNextFollower_Parms;

	this->ProcessEvent ( pFnFindNextFollower, &FindNextFollower_Parms, NULL );

	return FindNextFollower_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Followers::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58535 ];

	UGFxTrPage_Followers_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Followers::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58530 ];

	UGFxTrPage_Followers_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Followers::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 58529 ];

	UGFxTrPage_Followers_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Followers.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Followers::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 58524 ];

	UGFxTrPage_Followers_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Followers::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 58518 ];

	UGFxTrPage_Followers_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Followers::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 58513 ];

	UGFxTrPage_Followers_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Followers.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Followers::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58510 ];

	UGFxTrPage_Followers_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Followers.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Followers::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58505 ];

	UGFxTrPage_Followers_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Followers.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Followers::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58504 ];

	UGFxTrPage_Followers_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Friends::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58697 ];

	UGFxTrPage_Friends_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Friends::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58695 ];

	UGFxTrPage_Friends_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.FindNextFriend
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Friends::FindNextFriend ( )
{
	static UFunction* pFnFindNextFriend = NULL;

	if ( ! pFnFindNextFriend )
		pFnFindNextFriend = (UFunction*) UObject::GObjObjects()->Data[ 58691 ];

	UGFxTrPage_Friends_execFindNextFriend_Parms FindNextFriend_Parms;

	this->ProcessEvent ( pFnFindNextFriend, &FindNextFriend_Parms, NULL );

	return FindNextFriend_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Friends::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58686 ];

	UGFxTrPage_Friends_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Friends::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58681 ];

	UGFxTrPage_Friends_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Friends::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 58680 ];

	UGFxTrPage_Friends_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Friends::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 58675 ];

	UGFxTrPage_Friends_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.ModifyFocus
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Friends::ModifyFocus ( int ActionIndex )
{
	static UFunction* pFnModifyFocus = NULL;

	if ( ! pFnModifyFocus )
		pFnModifyFocus = (UFunction*) UObject::GObjObjects()->Data[ 58672 ];

	UGFxTrPage_Friends_execModifyFocus_Parms ModifyFocus_Parms;
	ModifyFocus_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnModifyFocus, &ModifyFocus_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Friends::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 58668 ];

	UGFxTrPage_Friends_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Friends::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 58663 ];

	UGFxTrPage_Friends_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Friends.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Friends::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58660 ];

	UGFxTrPage_Friends_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Friends::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58656 ];

	UGFxTrPage_Friends_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Friends.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Friends::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58655 ];

	UGFxTrPage_Friends_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_FriendActions::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58577 ];

	UGFxTrPage_FriendActions_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_FriendActions::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58574 ];

	UGFxTrPage_FriendActions_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_FriendActions::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58572 ];

	UGFxTrPage_FriendActions_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_FriendActions::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58568 ];

	UGFxTrPage_FriendActions_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendActions.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_FriendActions::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58566 ];

	UGFxTrPage_FriendActions_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_FriendActions::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58561 ];

	UGFxTrPage_FriendActions_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendActions.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FriendActions::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 58560 ];

	UGFxTrPage_FriendActions_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendActions.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FriendActions::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58559 ];

	UGFxTrPage_FriendActions_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_FriendJoin::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58639 ];

	UGFxTrPage_FriendJoin_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_FriendJoin::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58637 ];

	UGFxTrPage_FriendJoin_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.FindNextFriend
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_FriendJoin::FindNextFriend ( )
{
	static UFunction* pFnFindNextFriend = NULL;

	if ( ! pFnFindNextFriend )
		pFnFindNextFriend = (UFunction*) UObject::GObjObjects()->Data[ 58633 ];

	UGFxTrPage_FriendJoin_execFindNextFriend_Parms FindNextFriend_Parms;

	this->ProcessEvent ( pFnFindNextFriend, &FindNextFriend_Parms, NULL );

	return FindNextFriend_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_FriendJoin::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58627 ];

	UGFxTrPage_FriendJoin_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_FriendJoin::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58622 ];

	UGFxTrPage_FriendJoin_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FriendJoin::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 58621 ];

	UGFxTrPage_FriendJoin_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_FriendJoin::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 58617 ];

	UGFxTrPage_FriendJoin_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.ModifyFocus
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_FriendJoin::ModifyFocus ( int ActionIndex )
{
	static UFunction* pFnModifyFocus = NULL;

	if ( ! pFnModifyFocus )
		pFnModifyFocus = (UFunction*) UObject::GObjObjects()->Data[ 58614 ];

	UGFxTrPage_FriendJoin_execModifyFocus_Parms ModifyFocus_Parms;
	ModifyFocus_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnModifyFocus, &ModifyFocus_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_FriendJoin::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 58609 ];

	UGFxTrPage_FriendJoin_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_FriendJoin::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 58604 ];

	UGFxTrPage_FriendJoin_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_FriendJoin.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_FriendJoin::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58601 ];

	UGFxTrPage_FriendJoin_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_FriendJoin::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58596 ];

	UGFxTrPage_FriendJoin_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_FriendJoin.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_FriendJoin::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58595 ];

	UGFxTrPage_FriendJoin_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Game.HelpButton
// [0x00020002] 
// Parameters infos:
// int                            ActionIndex                    ( CPF_Parm )

void UGFxTrPage_Game::HelpButton ( int ActionIndex )
{
	static UFunction* pFnHelpButton = NULL;

	if ( ! pFnHelpButton )
		pFnHelpButton = (UFunction*) UObject::GObjObjects()->Data[ 58746 ];

	UGFxTrPage_Game_execHelpButton_Parms HelpButton_Parms;
	HelpButton_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnHelpButton, &HelpButton_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Game.PushModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Game::PushModel ( )
{
	static UFunction* pFnPushModel = NULL;

	if ( ! pFnPushModel )
		pFnPushModel = (UFunction*) UObject::GObjObjects()->Data[ 58739 ];

	UGFxTrPage_Game_execPushModel_Parms PushModel_Parms;

	this->ProcessEvent ( pFnPushModel, &PushModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Game.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Game::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58720 ];

	UGFxTrPage_Game_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Game.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Game::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58718 ];

	UGFxTrPage_Game_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Game.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Game::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58714 ];

	UGFxTrPage_Game_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Game.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Game::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58711 ];

	UGFxTrPage_Game_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Game.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_Game::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58710 ];

	UGFxTrPage_Game_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameMapSetup.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameMapSetup::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58769 ];

	UGFxTrPage_GameMapSetup_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameMapSetup.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameMapSetup::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58765 ];

	UGFxTrPage_GameMapSetup_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameMapSetup.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameMapSetup::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58759 ];

	UGFxTrPage_GameMapSetup_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameMapSetup.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameMapSetup::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58754 ];

	UGFxTrPage_GameMapSetup_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameMapSetup.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_GameMapSetup::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58750 ];

	UGFxTrPage_GameMapSetup_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameRules.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_GameRules::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58798 ];

	UGFxTrPage_GameRules_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameRules.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameRules::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58794 ];

	UGFxTrPage_GameRules_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameRules.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameRules::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58790 ];

	UGFxTrPage_GameRules_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameRules.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameRules::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58786 ];

	UGFxTrPage_GameRules_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameRules.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameRules::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58784 ];

	UGFxTrPage_GameRules_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameRules.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_GameRules::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58775 ];

	UGFxTrPage_GameRules_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameType.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameType::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58821 ];

	UGFxTrPage_GameType_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameType.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameType::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58817 ];

	UGFxTrPage_GameType_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameType.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameType::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58813 ];

	UGFxTrPage_GameType_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameType.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameType::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58811 ];

	UGFxTrPage_GameType_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameType.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_GameType::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58807 ];

	UGFxTrPage_GameType_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameType.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_GameType::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58803 ];

	UGFxTrPage_GameType_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameType.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_GameType::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58802 ];

	UGFxTrPage_GameType_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameTypeFilter.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameTypeFilter::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58852 ];

	UGFxTrPage_GameTypeFilter_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameTypeFilter.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameTypeFilter::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 58848 ];

	UGFxTrPage_GameTypeFilter_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameTypeFilter.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_GameTypeFilter::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58842 ];

	UGFxTrPage_GameTypeFilter_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameTypeFilter.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_GameTypeFilter::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58840 ];

	UGFxTrPage_GameTypeFilter_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_GameTypeFilter.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_GameTypeFilter::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58836 ];

	UGFxTrPage_GameTypeFilter_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameTypeFilter.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_GameTypeFilter::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58828 ];

	UGFxTrPage_GameTypeFilter_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_GameTypeFilter.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_GameTypeFilter::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58827 ];

	UGFxTrPage_GameTypeFilter_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HiRezVideo.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_HiRezVideo::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 58872 ];

	UGFxTrPage_HiRezVideo_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_HiRezVideo.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_HiRezVideo::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58867 ];

	UGFxTrPage_HiRezVideo_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_HiRezVideo.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_HiRezVideo::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58864 ];

	UGFxTrPage_HiRezVideo_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HiRezVideo.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_HiRezVideo::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58862 ];

	UGFxTrPage_HiRezVideo_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HiRezVideo.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_HiRezVideo::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 58860 ];

	UGFxTrPage_HiRezVideo_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HiRezVideo.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_HiRezVideo::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58859 ];

	UGFxTrPage_HiRezVideo_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HUDSettings.SetSubTitle
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_HUDSettings::SetSubTitle ( int Index, float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 58893 ];

	UGFxTrPage_HUDSettings_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.Index = Index;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HUDSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_HUDSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58888 ];

	UGFxTrPage_HUDSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_HUDSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_HUDSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58881 ];

	UGFxTrPage_HUDSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_HUDSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_HUDSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58879 ];

	UGFxTrPage_HUDSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrHUDSettings.GetCurrentValue
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Index                          ( CPF_Parm )

float UTrHUDSettings::GetCurrentValue ( unsigned char Index )
{
	static UFunction* pFnGetCurrentValue = NULL;

	if ( ! pFnGetCurrentValue )
		pFnGetCurrentValue = (UFunction*) UObject::GObjObjects()->Data[ 58886 ];

	UTrHUDSettings_execGetCurrentValue_Parms GetCurrentValue_Parms;
	GetCurrentValue_Parms.Index = Index;

	this->ProcessEvent ( pFnGetCurrentValue, &GetCurrentValue_Parms, NULL );

	return GetCurrentValue_Parms.ReturnValue;
};

// Function TribesGame.TrHUDSettings.SaveSetting
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// float                          val                            ( CPF_Parm )

void UTrHUDSettings::SaveSetting ( int Index, float val )
{
	static UFunction* pFnSaveSetting = NULL;

	if ( ! pFnSaveSetting )
		pFnSaveSetting = (UFunction*) UObject::GObjObjects()->Data[ 95669 ];

	UTrHUDSettings_execSaveSetting_Parms SaveSetting_Parms;
	SaveSetting_Parms.Index = Index;
	SaveSetting_Parms.val = val;

	this->ProcessEvent ( pFnSaveSetting, &SaveSetting_Parms, NULL );
};

// Function TribesGame.GFxTrPage_JoinMatch.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_JoinMatch::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 58908 ];

	UGFxTrPage_JoinMatch_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_JoinMatch.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_JoinMatch::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 58906 ];

	UGFxTrPage_JoinMatch_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_JoinMatch.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_JoinMatch::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 58904 ];

	UGFxTrPage_JoinMatch_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_JoinMatch.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_JoinMatch::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58903 ];

	UGFxTrPage_JoinMatch_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindAction.KeyEvent
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindAction::KeyEvent ( )
{
	static UFunction* pFnKeyEvent = NULL;

	if ( ! pFnKeyEvent )
		pFnKeyEvent = (UFunction*) UObject::GObjObjects()->Data[ 58935 ];

	UGFxTrPage_KeybindAction_execKeyEvent_Parms KeyEvent_Parms;

	this->ProcessEvent ( pFnKeyEvent, &KeyEvent_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindAction.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_KeybindAction::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58932 ];

	UGFxTrPage_KeybindAction_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindAction.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_KeybindAction::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58929 ];

	UGFxTrPage_KeybindAction_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindAction.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_KeybindAction::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58925 ];

	UGFxTrPage_KeybindAction_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_KeybindAction.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_KeybindAction::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58918 ];

	UGFxTrPage_KeybindAction_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_KeybindCommunication.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindCommunication::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58940 ];

	UGFxTrPage_KeybindCommunication_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindGameplay.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindGameplay::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58943 ];

	UGFxTrPage_KeybindGameplay_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindHotkeys.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindHotkeys::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58946 ];

	UGFxTrPage_KeybindHotkeys_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindInterface.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindInterface::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58949 ];

	UGFxTrPage_KeybindInterface_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindMovement.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindMovement::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58952 ];

	UGFxTrPage_KeybindMovement_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSettings.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_KeybindSettings::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 58976 ];

	UGFxTrPage_KeybindSettings_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSettings.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_KeybindSettings::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 58974 ];

	UGFxTrPage_KeybindSettings_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_KeybindSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 58969 ];

	UGFxTrPage_KeybindSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_KeybindSettings.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_KeybindSettings::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 58965 ];

	UGFxTrPage_KeybindSettings_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_KeybindSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58956 ];

	UGFxTrPage_KeybindSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSpecInterface.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindSpecInterface::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58981 ];

	UGFxTrPage_KeybindSpecInterface_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSpecMovement.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindSpecMovement::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58984 ];

	UGFxTrPage_KeybindSpecMovement_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSpecTargeting.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindSpecTargeting::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58987 ];

	UGFxTrPage_KeybindSpecTargeting_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindSpectator.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindSpectator::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58990 ];

	UGFxTrPage_KeybindSpectator_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindVehicle.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindVehicle::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58996 ];

	UGFxTrPage_KeybindVehicle_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_KeybindWeapon.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_KeybindWeapon::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 58999 ];

	UGFxTrPage_KeybindWeapon_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_LiveStream.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_LiveStream::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59022 ];

	UGFxTrPage_LiveStream_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_LiveStream.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_LiveStream::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59011 ];

	UGFxTrPage_LiveStream_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_LiveStream.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_LiveStream::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59008 ];

	UGFxTrPage_LiveStream_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_LiveStream.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_LiveStream::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59006 ];

	UGFxTrPage_LiveStream_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_LiveStream.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_LiveStream::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59004 ];

	UGFxTrPage_LiveStream_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_LiveStream.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_LiveStream::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59003 ];

	UGFxTrPage_LiveStream_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Login.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Login::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59145 ];

	UGFxTrPage_Login_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Login.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Login::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59131 ];

	UGFxTrPage_Login_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Login.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Login::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59128 ];

	UGFxTrPage_Login_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Login.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Login::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59124 ];

	UGFxTrPage_Login_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageProfile.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ManageProfile::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59282 ];

	UGFxTrPage_ManageProfile_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageProfile.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageProfile::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59280 ];

	UGFxTrPage_ManageProfile_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfile.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ManageProfile::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59276 ];

	UGFxTrPage_ManageProfile_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageProfile.ShowModel
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ManageProfile::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59275 ];

	UGFxTrPage_ManageProfile_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfile.SpecialAction
// [0x00020000] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ManageProfile::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59273 ];

	UGFxTrPage_ManageProfile_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfile.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ManageProfile::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59272 ];

	UGFxTrPage_ManageProfile_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfiles.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageProfiles::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59296 ];

	UGFxTrPage_ManageProfiles_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfiles.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ManageProfiles::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59292 ];

	UGFxTrPage_ManageProfiles_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageProfiles.ShowModel
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ManageProfiles::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59291 ];

	UGFxTrPage_ManageProfiles_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfiles.SpecialAction
// [0x00020000] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ManageProfiles::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59289 ];

	UGFxTrPage_ManageProfiles_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageProfiles.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ManageProfiles::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59288 ];

	UGFxTrPage_ManageProfiles_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServer.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ManageServer::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59323 ];

	UGFxTrPage_ManageServer_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageServer.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageServer::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 59319 ];

	UGFxTrPage_ManageServer_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServer.SetOverrides
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ManageServer::SetOverrides ( )
{
	static UFunction* pFnSetOverrides = NULL;

	if ( ! pFnSetOverrides )
		pFnSetOverrides = (UFunction*) UObject::GObjObjects()->Data[ 59318 ];

	UGFxTrPage_ManageServer_execSetOverrides_Parms SetOverrides_Parms;

	this->ProcessEvent ( pFnSetOverrides, &SetOverrides_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServer.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ManageServer::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 59317 ];

	UGFxTrPage_ManageServer_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServer.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ManageServer::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59311 ];

	UGFxTrPage_ManageServer_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageServer.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageServer::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59301 ];

	UGFxTrPage_ManageServer_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServer.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ManageServer::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59300 ];

	UGFxTrPage_ManageServer_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ManageServers::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59371 ];

	UGFxTrPage_ManageServers_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageServers.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageServers::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 59367 ];

	UGFxTrPage_ManageServers_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ManageServers::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59362 ];

	UGFxTrPage_ManageServers_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ManageServers::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59358 ];

	UGFxTrPage_ManageServers_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ManageServers::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59356 ];

	UGFxTrPage_ManageServers_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ManageServers::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59346 ];

	UGFxTrPage_ManageServers_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageServers.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ManageServers::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59340 ];

	UGFxTrPage_ManageServers_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ManageServers.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ManageServers::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59334 ];

	UGFxTrPage_ManageServers_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ManageServers.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ManageServers::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59332 ];

	UGFxTrPage_ManageServers_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_MapRotation.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_MapRotation::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59401 ];

	UGFxTrPage_MapRotation_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_MapRotation.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_MapRotation::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 59397 ];

	UGFxTrPage_MapRotation_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_MapRotation.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_MapRotation::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59392 ];

	UGFxTrPage_MapRotation_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_MapRotation.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_MapRotation::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59389 ];

	UGFxTrPage_MapRotation_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_MapRotation.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_MapRotation::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59385 ];

	UGFxTrPage_MapRotation_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_MapRotation.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_MapRotation::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59379 ];

	UGFxTrPage_MapRotation_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_MapRotation.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_MapRotation::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59378 ];

	UGFxTrPage_MapRotation_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NameChange.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_NameChange::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59428 ];

	UGFxTrPage_NameChange_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NameChange.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_NameChange::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59425 ];

	UGFxTrPage_NameChange_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NameChange.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_NameChange::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59417 ];

	UGFxTrPage_NameChange_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NameChange.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_NameChange::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 59413 ];

	UGFxTrPage_NameChange_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_NameChange.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_NameChange::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 59409 ];

	UGFxTrPage_NameChange_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_NotificationSettings.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_NotificationSettings::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59450 ];

	UGFxTrPage_NotificationSettings_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NotificationSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_NotificationSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59446 ];

	UGFxTrPage_NotificationSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NotificationSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_NotificationSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59441 ];

	UGFxTrPage_NotificationSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_NotificationSettings.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_NotificationSettings::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59439 ];

	UGFxTrPage_NotificationSettings_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_NotificationSettings.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_NotificationSettings::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59435 ];

	UGFxTrPage_NotificationSettings_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_NotificationSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_NotificationSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59433 ];

	UGFxTrPage_NotificationSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Party.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Party::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59485 ];

	UGFxTrPage_Party_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Party.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Party::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59480 ];

	UGFxTrPage_Party_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Party.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Party::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59478 ];

	UGFxTrPage_Party_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Party.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Party::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59473 ];

	UGFxTrPage_Party_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Party.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Party::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59460 ];

	UGFxTrPage_Party_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Party.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Party::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59457 ];

	UGFxTrPage_Party_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyAction.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_PartyAction::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59512 ];

	UGFxTrPage_PartyAction_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyAction.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_PartyAction::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59509 ];

	UGFxTrPage_PartyAction_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyAction.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PartyAction::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59503 ];

	UGFxTrPage_PartyAction_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyAction.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_PartyAction::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59496 ];

	UGFxTrPage_PartyAction_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyAction.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_PartyAction::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59494 ];

	UGFxTrPage_PartyAction_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyInvite.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_PartyInvite::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59568 ];

	UGFxTrPage_PartyInvite_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyInvite.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PartyInvite::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 59564 ];

	UGFxTrPage_PartyInvite_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyInvite.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_PartyInvite::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 59558 ];

	UGFxTrPage_PartyInvite_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyInvite.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_PartyInvite::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 59553 ];

	UGFxTrPage_PartyInvite_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyInvite.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PartyInvite::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59549 ];

	UGFxTrPage_PartyInvite_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyInvite.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_PartyInvite::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59544 ];

	UGFxTrPage_PartyInvite_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyInvite.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_PartyInvite::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 59541 ];

	UGFxTrPage_PartyInvite_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyInvite.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_PartyInvite::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 59534 ];

	UGFxTrPage_PartyInvite_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyInvite.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_PartyInvite::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59529 ];

	UGFxTrPage_PartyInvite_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyInvite.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_PartyInvite::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59525 ];

	UGFxTrPage_PartyInvite_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyMember.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_PartyMember::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59603 ];

	UGFxTrPage_PartyMember_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PartyMember.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PartyMember::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 59598 ];

	UGFxTrPage_PartyMember_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyMember.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_PartyMember::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 59593 ];

	UGFxTrPage_PartyMember_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyMember.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_PartyMember::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 59588 ];

	UGFxTrPage_PartyMember_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyMember.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PartyMember::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59584 ];

	UGFxTrPage_PartyMember_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyMember.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_PartyMember::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59575 ];

	UGFxTrPage_PartyMember_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PartyMember.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_PartyMember::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59572 ];

	UGFxTrPage_PartyMember_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PlayNow::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59656 ];

	UGFxTrPage_PlayNow_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PlayNow.FillOption
// [0x00820002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_PlayNow::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 59647 ];

	UGFxTrPage_PlayNow_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PlayNow.HaveDuplicates
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UGFxTrPage_PlayNow::HaveDuplicates ( int Index )
{
	static UFunction* pFnHaveDuplicates = NULL;

	if ( ! pFnHaveDuplicates )
		pFnHaveDuplicates = (UFunction*) UObject::GObjObjects()->Data[ 59643 ];

	UGFxTrPage_PlayNow_execHaveDuplicates_Parms HaveDuplicates_Parms;
	HaveDuplicates_Parms.Index = Index;

	this->ProcessEvent ( pFnHaveDuplicates, &HaveDuplicates_Parms, NULL );

	return HaveDuplicates_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PlayNow.RemoveDuplicateQueues
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_PlayNow::RemoveDuplicateQueues ( )
{
	static UFunction* pFnRemoveDuplicateQueues = NULL;

	if ( ! pFnRemoveDuplicateQueues )
		pFnRemoveDuplicateQueues = (UFunction*) UObject::GObjObjects()->Data[ 59641 ];

	UGFxTrPage_PlayNow_execRemoveDuplicateQueues_Parms RemoveDuplicateQueues_Parms;

	this->ProcessEvent ( pFnRemoveDuplicateQueues, &RemoveDuplicateQueues_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_PlayNow::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59637 ];

	UGFxTrPage_PlayNow_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_PlayNow::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 59636 ];

	UGFxTrPage_PlayNow_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_PlayNow::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 59631 ];

	UGFxTrPage_PlayNow_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_PlayNow.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_PlayNow::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59628 ];

	UGFxTrPage_PlayNow_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_PlayNow::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59627 ];

	UGFxTrPage_PlayNow_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_PlayNow.GetMeshEnumFromVV
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            InVal                          ( CPF_Parm )

int UGFxTrPage_PlayNow::GetMeshEnumFromVV ( int InVal )
{
	static UFunction* pFnGetMeshEnumFromVV = NULL;

	if ( ! pFnGetMeshEnumFromVV )
		pFnGetMeshEnumFromVV = (UFunction*) UObject::GObjObjects()->Data[ 59624 ];

	UGFxTrPage_PlayNow_execGetMeshEnumFromVV_Parms GetMeshEnumFromVV_Parms;
	GetMeshEnumFromVV_Parms.InVal = InVal;

	this->ProcessEvent ( pFnGetMeshEnumFromVV, &GetMeshEnumFromVV_Parms, NULL );

	return GetMeshEnumFromVV_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetFastestSki
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetFastestSki ( )
{
	static UFunction* pFnGetFastestSki = NULL;

	if ( ! pFnGetFastestSki )
		pFnGetFastestSki = (UFunction*) UObject::GObjObjects()->Data[ 60040 ];

	UGFxTrPage_Profile_execGetFastestSki_Parms GetFastestSki_Parms;

	this->ProcessEvent ( pFnGetFastestSki, &GetFastestSki_Parms, NULL );

	return GetFastestSki_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetMidairCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetMidairCount ( )
{
	static UFunction* pFnGetMidairCount = NULL;

	if ( ! pFnGetMidairCount )
		pFnGetMidairCount = (UFunction*) UObject::GObjObjects()->Data[ 60038 ];

	UGFxTrPage_Profile_execGetMidairCount_Parms GetMidairCount_Parms;

	this->ProcessEvent ( pFnGetMidairCount, &GetMidairCount_Parms, NULL );

	return GetMidairCount_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetAssists
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetAssists ( )
{
	static UFunction* pFnGetAssists = NULL;

	if ( ! pFnGetAssists )
		pFnGetAssists = (UFunction*) UObject::GObjObjects()->Data[ 60036 ];

	UGFxTrPage_Profile_execGetAssists_Parms GetAssists_Parms;

	this->ProcessEvent ( pFnGetAssists, &GetAssists_Parms, NULL );

	return GetAssists_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetObjsDestroyedPerHour
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxTrPage_Profile::GetObjsDestroyedPerHour ( )
{
	static UFunction* pFnGetObjsDestroyedPerHour = NULL;

	if ( ! pFnGetObjsDestroyedPerHour )
		pFnGetObjsDestroyedPerHour = (UFunction*) UObject::GObjObjects()->Data[ 60034 ];

	UGFxTrPage_Profile_execGetObjsDestroyedPerHour_Parms GetObjsDestroyedPerHour_Parms;

	this->ProcessEvent ( pFnGetObjsDestroyedPerHour, &GetObjsDestroyedPerHour_Parms, NULL );

	return GetObjsDestroyedPerHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetObjsDestroyed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetObjsDestroyed ( )
{
	static UFunction* pFnGetObjsDestroyed = NULL;

	if ( ! pFnGetObjsDestroyed )
		pFnGetObjsDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 60032 ];

	UGFxTrPage_Profile_execGetObjsDestroyed_Parms GetObjsDestroyed_Parms;

	this->ProcessEvent ( pFnGetObjsDestroyed, &GetObjsDestroyed_Parms, NULL );

	return GetObjsDestroyed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetGensDestroyedPerHour
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxTrPage_Profile::GetGensDestroyedPerHour ( )
{
	static UFunction* pFnGetGensDestroyedPerHour = NULL;

	if ( ! pFnGetGensDestroyedPerHour )
		pFnGetGensDestroyedPerHour = (UFunction*) UObject::GObjObjects()->Data[ 60030 ];

	UGFxTrPage_Profile_execGetGensDestroyedPerHour_Parms GetGensDestroyedPerHour_Parms;

	this->ProcessEvent ( pFnGetGensDestroyedPerHour, &GetGensDestroyedPerHour_Parms, NULL );

	return GetGensDestroyedPerHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetGensDestroyed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetGensDestroyed ( )
{
	static UFunction* pFnGetGensDestroyed = NULL;

	if ( ! pFnGetGensDestroyed )
		pFnGetGensDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 60028 ];

	UGFxTrPage_Profile_execGetGensDestroyed_Parms GetGensDestroyed_Parms;

	this->ProcessEvent ( pFnGetGensDestroyed, &GetGensDestroyed_Parms, NULL );

	return GetGensDestroyed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetFlagCapsHour
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxTrPage_Profile::GetFlagCapsHour ( )
{
	static UFunction* pFnGetFlagCapsHour = NULL;

	if ( ! pFnGetFlagCapsHour )
		pFnGetFlagCapsHour = (UFunction*) UObject::GObjObjects()->Data[ 60026 ];

	UGFxTrPage_Profile_execGetFlagCapsHour_Parms GetFlagCapsHour_Parms;

	this->ProcessEvent ( pFnGetFlagCapsHour, &GetFlagCapsHour_Parms, NULL );

	return GetFlagCapsHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetFlagCaps
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetFlagCaps ( )
{
	static UFunction* pFnGetFlagCaps = NULL;

	if ( ! pFnGetFlagCaps )
		pFnGetFlagCaps = (UFunction*) UObject::GObjObjects()->Data[ 60024 ];

	UGFxTrPage_Profile_execGetFlagCaps_Parms GetFlagCaps_Parms;

	this->ProcessEvent ( pFnGetFlagCaps, &GetFlagCaps_Parms, NULL );

	return GetFlagCaps_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetFlagDefensesPerHour
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxTrPage_Profile::GetFlagDefensesPerHour ( )
{
	static UFunction* pFnGetFlagDefensesPerHour = NULL;

	if ( ! pFnGetFlagDefensesPerHour )
		pFnGetFlagDefensesPerHour = (UFunction*) UObject::GObjObjects()->Data[ 60022 ];

	UGFxTrPage_Profile_execGetFlagDefensesPerHour_Parms GetFlagDefensesPerHour_Parms;

	this->ProcessEvent ( pFnGetFlagDefensesPerHour, &GetFlagDefensesPerHour_Parms, NULL );

	return GetFlagDefensesPerHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetFlagDefenses
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetFlagDefenses ( )
{
	static UFunction* pFnGetFlagDefenses = NULL;

	if ( ! pFnGetFlagDefenses )
		pFnGetFlagDefenses = (UFunction*) UObject::GObjObjects()->Data[ 60020 ];

	UGFxTrPage_Profile_execGetFlagDefenses_Parms GetFlagDefenses_Parms;

	this->ProcessEvent ( pFnGetFlagDefenses, &GetFlagDefenses_Parms, NULL );

	return GetFlagDefenses_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetTopBadgeIcon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

int UGFxTrPage_Profile::GetTopBadgeIcon ( int Index )
{
	static UFunction* pFnGetTopBadgeIcon = NULL;

	if ( ! pFnGetTopBadgeIcon )
		pFnGetTopBadgeIcon = (UFunction*) UObject::GObjObjects()->Data[ 60017 ];

	UGFxTrPage_Profile_execGetTopBadgeIcon_Parms GetTopBadgeIcon_Parms;
	GetTopBadgeIcon_Parms.Index = Index;

	this->ProcessEvent ( pFnGetTopBadgeIcon, &GetTopBadgeIcon_Parms, NULL );

	return GetTopBadgeIcon_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetAccoladeCount
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            AccoladeId                     ( CPF_Parm )

int UGFxTrPage_Profile::GetAccoladeCount ( int AccoladeId )
{
	static UFunction* pFnGetAccoladeCount = NULL;

	if ( ! pFnGetAccoladeCount )
		pFnGetAccoladeCount = (UFunction*) UObject::GObjObjects()->Data[ 60013 ];

	UGFxTrPage_Profile_execGetAccoladeCount_Parms GetAccoladeCount_Parms;
	GetAccoladeCount_Parms.AccoladeId = AccoladeId;

	this->ProcessEvent ( pFnGetAccoladeCount, &GetAccoladeCount_Parms, NULL );

	return GetAccoladeCount_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetWinLossRatio
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrPage_Profile::GetWinLossRatio ( )
{
	static UFunction* pFnGetWinLossRatio = NULL;

	if ( ! pFnGetWinLossRatio )
		pFnGetWinLossRatio = (UFunction*) UObject::GObjObjects()->Data[ 60009 ];

	UGFxTrPage_Profile_execGetWinLossRatio_Parms GetWinLossRatio_Parms;

	this->ProcessEvent ( pFnGetWinLossRatio, &GetWinLossRatio_Parms, NULL );

	return GetWinLossRatio_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetGamesLost
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetGamesLost ( )
{
	static UFunction* pFnGetGamesLost = NULL;

	if ( ! pFnGetGamesLost )
		pFnGetGamesLost = (UFunction*) UObject::GObjObjects()->Data[ 60007 ];

	UGFxTrPage_Profile_execGetGamesLost_Parms GetGamesLost_Parms;

	this->ProcessEvent ( pFnGetGamesLost, &GetGamesLost_Parms, NULL );

	return GetGamesLost_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetGamesWon
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetGamesWon ( )
{
	static UFunction* pFnGetGamesWon = NULL;

	if ( ! pFnGetGamesWon )
		pFnGetGamesWon = (UFunction*) UObject::GObjObjects()->Data[ 60005 ];

	UGFxTrPage_Profile_execGetGamesWon_Parms GetGamesWon_Parms;

	this->ProcessEvent ( pFnGetGamesWon, &GetGamesWon_Parms, NULL );

	return GetGamesWon_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetAccoladesPerHour
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetAccoladesPerHour ( )
{
	static UFunction* pFnGetAccoladesPerHour = NULL;

	if ( ! pFnGetAccoladesPerHour )
		pFnGetAccoladesPerHour = (UFunction*) UObject::GObjObjects()->Data[ 60003 ];

	UGFxTrPage_Profile_execGetAccoladesPerHour_Parms GetAccoladesPerHour_Parms;

	this->ProcessEvent ( pFnGetAccoladesPerHour, &GetAccoladesPerHour_Parms, NULL );

	return GetAccoladesPerHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetTotalAccolades
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetTotalAccolades ( )
{
	static UFunction* pFnGetTotalAccolades = NULL;

	if ( ! pFnGetTotalAccolades )
		pFnGetTotalAccolades = (UFunction*) UObject::GObjObjects()->Data[ 60001 ];

	UGFxTrPage_Profile_execGetTotalAccolades_Parms GetTotalAccolades_Parms;

	this->ProcessEvent ( pFnGetTotalAccolades, &GetTotalAccolades_Parms, NULL );

	return GetTotalAccolades_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetScorePerHour
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetScorePerHour ( )
{
	static UFunction* pFnGetScorePerHour = NULL;

	if ( ! pFnGetScorePerHour )
		pFnGetScorePerHour = (UFunction*) UObject::GObjObjects()->Data[ 59999 ];

	UGFxTrPage_Profile_execGetScorePerHour_Parms GetScorePerHour_Parms;

	this->ProcessEvent ( pFnGetScorePerHour, &GetScorePerHour_Parms, NULL );

	return GetScorePerHour_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetTotalScore
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetTotalScore ( )
{
	static UFunction* pFnGetTotalScore = NULL;

	if ( ! pFnGetTotalScore )
		pFnGetTotalScore = (UFunction*) UObject::GObjObjects()->Data[ 59997 ];

	UGFxTrPage_Profile_execGetTotalScore_Parms GetTotalScore_Parms;

	this->ProcessEvent ( pFnGetTotalScore, &GetTotalScore_Parms, NULL );

	return GetTotalScore_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetGamesPlayed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UGFxTrPage_Profile::GetGamesPlayed ( )
{
	static UFunction* pFnGetGamesPlayed = NULL;

	if ( ! pFnGetGamesPlayed )
		pFnGetGamesPlayed = (UFunction*) UObject::GObjObjects()->Data[ 59995 ];

	UGFxTrPage_Profile_execGetGamesPlayed_Parms GetGamesPlayed_Parms;

	this->ProcessEvent ( pFnGetGamesPlayed, &GetGamesPlayed_Parms, NULL );

	return GetGamesPlayed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetTimePlayed
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrPage_Profile::GetTimePlayed ( )
{
	static UFunction* pFnGetTimePlayed = NULL;

	if ( ! pFnGetTimePlayed )
		pFnGetTimePlayed = (UFunction*) UObject::GObjObjects()->Data[ 59988 ];

	UGFxTrPage_Profile_execGetTimePlayed_Parms GetTimePlayed_Parms;

	this->ProcessEvent ( pFnGetTimePlayed, &GetTimePlayed_Parms, NULL );

	return GetTimePlayed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetMostPlayed
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrPage_Profile::GetMostPlayed ( )
{
	static UFunction* pFnGetMostPlayed = NULL;

	if ( ! pFnGetMostPlayed )
		pFnGetMostPlayed = (UFunction*) UObject::GObjObjects()->Data[ 59982 ];

	UGFxTrPage_Profile_execGetMostPlayed_Parms GetMostPlayed_Parms;

	this->ProcessEvent ( pFnGetMostPlayed, &GetMostPlayed_Parms, NULL );

	return GetMostPlayed_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetPlayedPercent
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ClassId                        ( CPF_Parm )
// unsigned long                  bResolve                       ( CPF_OptionalParm | CPF_Parm )

int UGFxTrPage_Profile::GetPlayedPercent ( int ClassId, unsigned long bResolve )
{
	static UFunction* pFnGetPlayedPercent = NULL;

	if ( ! pFnGetPlayedPercent )
		pFnGetPlayedPercent = (UFunction*) UObject::GObjObjects()->Data[ 59975 ];

	UGFxTrPage_Profile_execGetPlayedPercent_Parms GetPlayedPercent_Parms;
	GetPlayedPercent_Parms.ClassId = ClassId;
	GetPlayedPercent_Parms.bResolve = bResolve;

	this->ProcessEvent ( pFnGetPlayedPercent, &GetPlayedPercent_Parms, NULL );

	return GetPlayedPercent_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.GetKDR
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float UGFxTrPage_Profile::GetKDR ( )
{
	static UFunction* pFnGetKDR = NULL;

	if ( ! pFnGetKDR )
		pFnGetKDR = (UFunction*) UObject::GObjObjects()->Data[ 59973 ];

	UGFxTrPage_Profile_execGetKDR_Parms GetKDR_Parms;

	this->ProcessEvent ( pFnGetKDR, &GetKDR_Parms, NULL );

	return GetKDR_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.FillProfile
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* UGFxTrPage_Profile::FillProfile ( )
{
	static UFunction* pFnFillProfile = NULL;

	if ( ! pFnFillProfile )
		pFnFillProfile = (UFunction*) UObject::GObjObjects()->Data[ 59937 ];

	UGFxTrPage_Profile_execFillProfile_Parms FillProfile_Parms;

	this->ProcessEvent ( pFnFillProfile, &FillProfile_Parms, NULL );

	return FillProfile_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Profile::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 59934 ];

	UGFxTrPage_Profile_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Profile.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Profile::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 59930 ];

	UGFxTrPage_Profile_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Profile.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Profile::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 59928 ];

	UGFxTrPage_Profile_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Profile.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Profile::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 59926 ];

	UGFxTrPage_Profile_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Profile.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Profile::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 59923 ];

	UGFxTrPage_Profile_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Queued.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Queued::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60045 ];

	UGFxTrPage_Queued_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Queued.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Queued::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60044 ];

	UGFxTrPage_Queued_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_QuickMatch.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_QuickMatch::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 60061 ];

	UGFxTrPage_QuickMatch_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_QuickMatch.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_QuickMatch::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60054 ];

	UGFxTrPage_QuickMatch_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_QuickMatch.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_QuickMatch::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60052 ];

	UGFxTrPage_QuickMatch_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamArena.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamArena::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60103 ];

	UGFxTrPage_RoamArena_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamArena.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_RoamArena::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60101 ];

	UGFxTrPage_RoamArena_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamArena.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_RoamArena::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60099 ];

	UGFxTrPage_RoamArena_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamArena.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamArena::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60098 ];

	UGFxTrPage_RoamArena_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCAH.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamCAH::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60112 ];

	UGFxTrPage_RoamCAH_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCAH.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_RoamCAH::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60110 ];

	UGFxTrPage_RoamCAH_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCAH.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_RoamCAH::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60108 ];

	UGFxTrPage_RoamCAH_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCAH.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamCAH::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60107 ];

	UGFxTrPage_RoamCAH_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCTF.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamCTF::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60121 ];

	UGFxTrPage_RoamCTF_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCTF.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_RoamCTF::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60119 ];

	UGFxTrPage_RoamCTF_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCTF.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_RoamCTF::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60117 ];

	UGFxTrPage_RoamCTF_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamCTF.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamCTF::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60116 ];

	UGFxTrPage_RoamCTF_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamingMatch.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamingMatch::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60130 ];

	UGFxTrPage_RoamingMatch_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamingMatch.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamingMatch::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60125 ];

	UGFxTrPage_RoamingMatch_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamRabbit.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamRabbit::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60139 ];

	UGFxTrPage_RoamRabbit_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamRabbit.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_RoamRabbit::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60137 ];

	UGFxTrPage_RoamRabbit_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamRabbit.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_RoamRabbit::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60135 ];

	UGFxTrPage_RoamRabbit_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamRabbit.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamRabbit::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60134 ];

	UGFxTrPage_RoamRabbit_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamTDM.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamTDM::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60148 ];

	UGFxTrPage_RoamTDM_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamTDM.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_RoamTDM::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60146 ];

	UGFxTrPage_RoamTDM_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamTDM.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_RoamTDM::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60144 ];

	UGFxTrPage_RoamTDM_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RoamTDM.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RoamTDM::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60143 ];

	UGFxTrPage_RoamTDM_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RotationType.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_RotationType::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60173 ];

	UGFxTrPage_RotationType_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RotationType.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_RotationType::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60169 ];

	UGFxTrPage_RotationType_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RotationType.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_RotationType::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60163 ];

	UGFxTrPage_RotationType_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RotationType.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_RotationType::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60161 ];

	UGFxTrPage_RotationType_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_RotationType.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_RotationType::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 60157 ];

	UGFxTrPage_RotationType_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RotationType.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_RotationType::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60153 ];

	UGFxTrPage_RotationType_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_RotationType.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_RotationType::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60152 ];

	UGFxTrPage_RotationType_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerActions::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60238 ];

	UGFxTrPage_ServerActions_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerActions::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60234 ];

	UGFxTrPage_ServerActions_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerActions.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerActions::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60230 ];

	UGFxTrPage_ServerActions_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerActions::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60215 ];

	UGFxTrPage_ServerActions_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerActions::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60198 ];

	UGFxTrPage_ServerActions_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerActions::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60192 ];

	UGFxTrPage_ServerActions_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerActions.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerActions::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60190 ];

	UGFxTrPage_ServerActions_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerActions::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60188 ];

	UGFxTrPage_ServerActions_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerActions.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerActions::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60187 ];

	UGFxTrPage_ServerActions_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerAddTime::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 60290 ];

	UGFxTrPage_ServerAddTime_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_ServerAddTime::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 60285 ];

	UGFxTrPage_ServerAddTime_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerAddTime::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60283 ];

	UGFxTrPage_ServerAddTime_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerAddTime::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60279 ];

	UGFxTrPage_ServerAddTime_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerAddTime::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60275 ];

	UGFxTrPage_ServerAddTime_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerAddTime::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60270 ];

	UGFxTrPage_ServerAddTime_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerAddTime::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60267 ];

	UGFxTrPage_ServerAddTime_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerAddTime::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60261 ];

	UGFxTrPage_ServerAddTime_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerAddTime::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60255 ];

	UGFxTrPage_ServerAddTime_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ServerAddTime::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 60251 ];

	UGFxTrPage_ServerAddTime_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_ServerAddTime::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 60247 ];

	UGFxTrPage_ServerAddTime_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerAddTime.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerAddTime::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60245 ];

	UGFxTrPage_ServerAddTime_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerAddTime.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_ServerAddTime::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60244 ];

	UGFxTrPage_ServerAddTime_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerBase::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60318 ];

	UGFxTrPage_ServerBase_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerBase::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60314 ];

	UGFxTrPage_ServerBase_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerBase.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerBase::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60310 ];

	UGFxTrPage_ServerBase_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerBase::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60306 ];

	UGFxTrPage_ServerBase_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerBase::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60302 ];

	UGFxTrPage_ServerBase_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerBase.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerBase::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60300 ];

	UGFxTrPage_ServerBase_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerBase::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60297 ];

	UGFxTrPage_ServerBase_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerBase.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerBase::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60296 ];

	UGFxTrPage_ServerBase_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerCallin::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60352 ];

	UGFxTrPage_ServerCallin_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerCallin::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60348 ];

	UGFxTrPage_ServerCallin_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerCallin.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerCallin::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60344 ];

	UGFxTrPage_ServerCallin_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerCallin::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60340 ];

	UGFxTrPage_ServerCallin_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerCallin::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60335 ];

	UGFxTrPage_ServerCallin_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerCallin.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerCallin::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60333 ];

	UGFxTrPage_ServerCallin_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerCallin::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60327 ];

	UGFxTrPage_ServerCallin_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerCallin.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerCallin::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60325 ];

	UGFxTrPage_ServerCallin_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerEditCallin::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60448 ];

	UGFxTrPage_ServerEditCallin_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerEditCallin::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60444 ];

	UGFxTrPage_ServerEditCallin_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerEditCallin.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60440 ];

	UGFxTrPage_ServerEditCallin_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60437 ];

	UGFxTrPage_ServerEditCallin_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerEditCallin::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60433 ];

	UGFxTrPage_ServerEditCallin_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60428 ];

	UGFxTrPage_ServerEditCallin_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60424 ];

	UGFxTrPage_ServerEditCallin_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerEditCallin::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60417 ];

	UGFxTrPage_ServerEditCallin_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerEditCallin.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60415 ];

	UGFxTrPage_ServerEditCallin_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerEditCallin.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerEditCallin::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60412 ];

	UGFxTrPage_ServerEditCallin_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerClasses::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60392 ];

	UGFxTrPage_ServerClasses_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerClasses::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60388 ];

	UGFxTrPage_ServerClasses_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerClasses::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60382 ];

	UGFxTrPage_ServerClasses_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerClasses::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60380 ];

	UGFxTrPage_ServerClasses_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerClasses::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60376 ];

	UGFxTrPage_ServerClasses_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerClasses.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerClasses::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60372 ];

	UGFxTrPage_ServerClasses_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerClasses::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60365 ];

	UGFxTrPage_ServerClasses_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerClasses.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerClasses::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60363 ];

	UGFxTrPage_ServerClasses_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerClasses::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60361 ];

	UGFxTrPage_ServerClasses_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerClasses.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerClasses::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60360 ];

	UGFxTrPage_ServerClasses_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerFF::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60491 ];

	UGFxTrPage_ServerFF_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerFF::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60487 ];

	UGFxTrPage_ServerFF_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerFF.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerFF::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60483 ];

	UGFxTrPage_ServerFF_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerFF::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60479 ];

	UGFxTrPage_ServerFF_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerFF::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60474 ];

	UGFxTrPage_ServerFF_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerFF.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerFF::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60472 ];

	UGFxTrPage_ServerFF_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerFF::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60468 ];

	UGFxTrPage_ServerFF_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerFF::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60463 ];

	UGFxTrPage_ServerFF_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerFF::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60460 ];

	UGFxTrPage_ServerFF_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerFF::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60457 ];

	UGFxTrPage_ServerFF_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerFF.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerFF::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60456 ];

	UGFxTrPage_ServerFF_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerPlayer::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60535 ];

	UGFxTrPage_ServerPlayer_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerPlayer::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60531 ];

	UGFxTrPage_ServerPlayer_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerPlayer.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerPlayer::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60527 ];

	UGFxTrPage_ServerPlayer_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerPlayer::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60523 ];

	UGFxTrPage_ServerPlayer_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerPlayer::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60518 ];

	UGFxTrPage_ServerPlayer_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerPlayer.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerPlayer::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60516 ];

	UGFxTrPage_ServerPlayer_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerPlayer::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60512 ];

	UGFxTrPage_ServerPlayer_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerPlayer::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60506 ];

	UGFxTrPage_ServerPlayer_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerPlayer::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60504 ];

	UGFxTrPage_ServerPlayer_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerPlayer::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60502 ];

	UGFxTrPage_ServerPlayer_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerPlayer.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerPlayer::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60499 ];

	UGFxTrPage_ServerPlayer_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerScoring::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60576 ];

	UGFxTrPage_ServerScoring_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerScoring::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60572 ];

	UGFxTrPage_ServerScoring_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerScoring.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerScoring::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60568 ];

	UGFxTrPage_ServerScoring_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerScoring::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60563 ];

	UGFxTrPage_ServerScoring_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerScoring.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerScoring::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60561 ];

	UGFxTrPage_ServerScoring_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerScoring::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60558 ];

	UGFxTrPage_ServerScoring_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerScoring::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60553 ];

	UGFxTrPage_ServerScoring_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerScoring::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60550 ];

	UGFxTrPage_ServerScoring_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerScoring::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60548 ];

	UGFxTrPage_ServerScoring_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerScoring.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerScoring::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60547 ];

	UGFxTrPage_ServerScoring_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerSettings::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60619 ];

	UGFxTrPage_ServerSettings_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerSettings.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerSettings::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60615 ];

	UGFxTrPage_ServerSettings_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.SetOverrides
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerSettings::SetOverrides ( )
{
	static UFunction* pFnSetOverrides = NULL;

	if ( ! pFnSetOverrides )
		pFnSetOverrides = (UFunction*) UObject::GObjObjects()->Data[ 60614 ];

	UGFxTrPage_ServerSettings_execSetOverrides_Parms SetOverrides_Parms;

	this->ProcessEvent ( pFnSetOverrides, &SetOverrides_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.RefreshButtons
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerSettings::RefreshButtons ( )
{
	static UFunction* pFnRefreshButtons = NULL;

	if ( ! pFnRefreshButtons )
		pFnRefreshButtons = (UFunction*) UObject::GObjObjects()->Data[ 60613 ];

	UGFxTrPage_ServerSettings_execRefreshButtons_Parms RefreshButtons_Parms;

	this->ProcessEvent ( pFnRefreshButtons, &RefreshButtons_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60606 ];

	UGFxTrPage_ServerSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerSettings.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerSettings::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60604 ];

	UGFxTrPage_ServerSettings_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerSettings::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60597 ];

	UGFxTrPage_ServerSettings_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerSettings::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60586 ];

	UGFxTrPage_ServerSettings_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60584 ];

	UGFxTrPage_ServerSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60583 ];

	UGFxTrPage_ServerSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSpawn.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerSpawn::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60644 ];

	UGFxTrPage_ServerSpawn_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSpawn.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerSpawn::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60640 ];

	UGFxTrPage_ServerSpawn_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerSpawn.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerSpawn::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60636 ];

	UGFxTrPage_ServerSpawn_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSpawn.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerSpawn::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60631 ];

	UGFxTrPage_ServerSpawn_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerSpawn.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerSpawn::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60629 ];

	UGFxTrPage_ServerSpawn_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSpawn.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerSpawn::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60627 ];

	UGFxTrPage_ServerSpawn_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerSpawn.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerSpawn::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60625 ];

	UGFxTrPage_ServerSpawn_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTeam::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60693 ];

	UGFxTrPage_ServerTeam_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTeam::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60689 ];

	UGFxTrPage_ServerTeam_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTeam.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTeam::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60685 ];

	UGFxTrPage_ServerTeam_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.SetSubTitle
// [0x00020002] 
// Parameters infos:
// float                          val                            ( CPF_Parm )
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerTeam::SetSubTitle ( float val, class UGFxObject* Obj )
{
	static UFunction* pFnSetSubTitle = NULL;

	if ( ! pFnSetSubTitle )
		pFnSetSubTitle = (UFunction*) UObject::GObjObjects()->Data[ 60681 ];

	UGFxTrPage_ServerTeam_execSetSubTitle_Parms SetSubTitle_Parms;
	SetSubTitle_Parms.val = val;
	SetSubTitle_Parms.Obj = Obj;

	this->ProcessEvent ( pFnSetSubTitle, &SetSubTitle_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTeam::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60673 ];

	UGFxTrPage_ServerTeam_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTeam.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTeam::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60671 ];

	UGFxTrPage_ServerTeam_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerTeam::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60668 ];

	UGFxTrPage_ServerTeam_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerTeam::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60664 ];

	UGFxTrPage_ServerTeam_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerTeam::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60659 ];

	UGFxTrPage_ServerTeam_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerTeam::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60656 ];

	UGFxTrPage_ServerTeam_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeam.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTeam::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60654 ];

	UGFxTrPage_ServerTeam_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTeamJoin::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60715 ];

	UGFxTrPage_ServerTeamJoin_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTeamJoin::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60711 ];

	UGFxTrPage_ServerTeamJoin_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTeamJoin::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60707 ];

	UGFxTrPage_ServerTeamJoin_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTeamJoin::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60702 ];

	UGFxTrPage_ServerTeamJoin_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTeamJoin::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60700 ];

	UGFxTrPage_ServerTeamJoin_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerTeamJoin::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60698 ];

	UGFxTrPage_ServerTeamJoin_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTeamJoin.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTeamJoin::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60697 ];

	UGFxTrPage_ServerTeamJoin_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTime::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60757 ];

	UGFxTrPage_ServerTime_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTime::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60753 ];

	UGFxTrPage_ServerTime_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTime.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTime::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60749 ];

	UGFxTrPage_ServerTime_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerTime::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60744 ];

	UGFxTrPage_ServerTime_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerTime.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerTime::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60742 ];

	UGFxTrPage_ServerTime_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerTime::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60739 ];

	UGFxTrPage_ServerTime_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerTime::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60735 ];

	UGFxTrPage_ServerTime_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerTime::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60729 ];

	UGFxTrPage_ServerTime_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerTime::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60727 ];

	UGFxTrPage_ServerTime_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerTime.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerTime::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60726 ];

	UGFxTrPage_ServerTime_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerVehicle::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60796 ];

	UGFxTrPage_ServerVehicle_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerVehicle::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60792 ];

	UGFxTrPage_ServerVehicle_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerVehicle.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerVehicle::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60788 ];

	UGFxTrPage_ServerVehicle_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_ServerVehicle::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60783 ];

	UGFxTrPage_ServerVehicle_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_ServerVehicle.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_ServerVehicle::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60781 ];

	UGFxTrPage_ServerVehicle_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.ShowBoundsError
// [0x00020002] 
// Parameters infos:
// int                            PropId                         ( CPF_Parm )
// int                            PropType                       ( CPF_Parm )

void UGFxTrPage_ServerVehicle::ShowBoundsError ( int PropId, int PropType )
{
	static UFunction* pFnShowBoundsError = NULL;

	if ( ! pFnShowBoundsError )
		pFnShowBoundsError = (UFunction*) UObject::GObjObjects()->Data[ 60777 ];

	UGFxTrPage_ServerVehicle_execShowBoundsError_Parms ShowBoundsError_Parms;
	ShowBoundsError_Parms.PropId = PropId;
	ShowBoundsError_Parms.PropType = PropType;

	this->ProcessEvent ( pFnShowBoundsError, &ShowBoundsError_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_ServerVehicle::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60773 ];

	UGFxTrPage_ServerVehicle_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_ServerVehicle::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60768 ];

	UGFxTrPage_ServerVehicle_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_ServerVehicle::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60766 ];

	UGFxTrPage_ServerVehicle_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_ServerVehicle.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_ServerVehicle::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60765 ];

	UGFxTrPage_ServerVehicle_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Settings::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60825 ];

	UGFxTrPage_Settings_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Settings::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60823 ];

	UGFxTrPage_Settings_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Settings::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60821 ];

	UGFxTrPage_Settings_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Settings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60819 ];

	UGFxTrPage_Settings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Settings::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60817 ];

	UGFxTrPage_Settings_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Settings.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Settings::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60813 ];

	UGFxTrPage_Settings_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Settings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Settings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60805 ];

	UGFxTrPage_Settings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Social.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Social::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60843 ];

	UGFxTrPage_Social_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Social.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Social::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60838 ];

	UGFxTrPage_Social_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Social.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Social::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60836 ];

	UGFxTrPage_Social_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Social.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Social::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60834 ];

	UGFxTrPage_Social_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_Store::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 60926 ];

	UGFxTrPage_Store_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_Store::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 60919 ];

	UGFxTrPage_Store_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.ModifyAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Store::ModifyAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnModifyAction = NULL;

	if ( ! pFnModifyAction )
		pFnModifyAction = (UFunction*) UObject::GObjObjects()->Data[ 60915 ];

	UGFxTrPage_Store_execModifyAction_Parms ModifyAction_Parms;
	ModifyAction_Parms.ActionIndex = ActionIndex;
	ModifyAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnModifyAction, &ModifyAction_Parms, NULL );

	return ModifyAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.FillPricing
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Store::FillPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnFillPricing = NULL;

	if ( ! pFnFillPricing )
		pFnFillPricing = (UFunction*) UObject::GObjObjects()->Data[ 60907 ];

	UGFxTrPage_Store_execFillPricing_Parms FillPricing_Parms;
	FillPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillPricing, &FillPricing_Parms, NULL );

	return FillPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.CheckPricing
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

bool UGFxTrPage_Store::CheckPricing ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckPricing = NULL;

	if ( ! pFnCheckPricing )
		pFnCheckPricing = (UFunction*) UObject::GObjObjects()->Data[ 60902 ];

	UGFxTrPage_Store_execCheckPricing_Parms CheckPricing_Parms;
	CheckPricing_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckPricing, &CheckPricing_Parms, NULL );

	return CheckPricing_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_Store::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60894 ];

	UGFxTrPage_Store_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.CheckDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Store::CheckDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnCheckDescription = NULL;

	if ( ! pFnCheckDescription )
		pFnCheckDescription = (UFunction*) UObject::GObjObjects()->Data[ 60890 ];

	UGFxTrPage_Store_execCheckDescription_Parms CheckDescription_Parms;
	CheckDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnCheckDescription, &CheckDescription_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.TakeAction
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Store::TakeAction ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeAction = NULL;

	if ( ! pFnTakeAction )
		pFnTakeAction = (UFunction*) UObject::GObjObjects()->Data[ 60886 ];

	UGFxTrPage_Store_execTakeAction_Parms TakeAction_Parms;
	TakeAction_Parms.ActionIndex = ActionIndex;
	TakeAction_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeAction, &TakeAction_Parms, NULL );

	return TakeAction_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_Store::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60877 ];

	UGFxTrPage_Store_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_Store::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60875 ];

	UGFxTrPage_Store_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_Store::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 60866 ];

	UGFxTrPage_Store_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_Store.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_Store::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60864 ];

	UGFxTrPage_Store_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_Store.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_Store::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60861 ];

	UGFxTrPage_Store_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainingMatch.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_TrainingMatch::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60946 ];

	UGFxTrPage_TrainingMatch_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_TrainingMatch.TakeFocus
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )
// class UGFxObject*              DataList                       ( CPF_Parm )

int UGFxTrPage_TrainingMatch::TakeFocus ( int ActionIndex, class UGFxObject* DataList )
{
	static UFunction* pFnTakeFocus = NULL;

	if ( ! pFnTakeFocus )
		pFnTakeFocus = (UFunction*) UObject::GObjObjects()->Data[ 60941 ];

	UGFxTrPage_TrainingMatch_execTakeFocus_Parms TakeFocus_Parms;
	TakeFocus_Parms.ActionIndex = ActionIndex;
	TakeFocus_Parms.DataList = DataList;

	this->ProcessEvent ( pFnTakeFocus, &TakeFocus_Parms, NULL );

	return TakeFocus_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_TrainingMatch.JoinLocalGame
// [0x00020002] 
// Parameters infos:
// struct FString                 SessionName                    ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_TrainingMatch::JoinLocalGame ( struct FString SessionName )
{
	static UFunction* pFnJoinLocalGame = NULL;

	if ( ! pFnJoinLocalGame )
		pFnJoinLocalGame = (UFunction*) UObject::GObjObjects()->Data[ 60939 ];

	UGFxTrPage_TrainingMatch_execJoinLocalGame_Parms JoinLocalGame_Parms;
	memcpy ( &JoinLocalGame_Parms.SessionName, &SessionName, 0xC );

	this->ProcessEvent ( pFnJoinLocalGame, &JoinLocalGame_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainingMatch.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_TrainingMatch::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60937 ];

	UGFxTrPage_TrainingMatch_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainingMatch.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_TrainingMatch::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60934 ];

	UGFxTrPage_TrainingMatch_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainVideo.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_TrainVideo::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 60966 ];

	UGFxTrPage_TrainVideo_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_TrainVideo.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_TrainVideo::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 60961 ];

	UGFxTrPage_TrainVideo_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_TrainVideo.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_TrainVideo::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 60958 ];

	UGFxTrPage_TrainVideo_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainVideo.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_TrainVideo::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 60956 ];

	UGFxTrPage_TrainVideo_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainVideo.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_TrainVideo::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 60954 ];

	UGFxTrPage_TrainVideo_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_TrainVideo.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_TrainVideo::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 60953 ];

	UGFxTrPage_TrainVideo_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoGraphics.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VideoGraphics::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61025 ];

	UGFxTrPage_VideoGraphics_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VideoGraphics.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_VideoGraphics::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61023 ];

	UGFxTrPage_VideoGraphics_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoGraphics.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VideoGraphics::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61018 ];

	UGFxTrPage_VideoGraphics_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoGraphics.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_VideoGraphics::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61016 ];

	UGFxTrPage_VideoGraphics_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolution.RevertSetting
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_VideoResolution::RevertSetting ( )
{
	static UFunction* pFnRevertSetting = NULL;

	if ( ! pFnRevertSetting )
		pFnRevertSetting = (UFunction*) UObject::GObjObjects()->Data[ 61052 ];

	UGFxTrPage_VideoResolution_execRevertSetting_Parms RevertSetting_Parms;

	this->ProcessEvent ( pFnRevertSetting, &RevertSetting_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolution.PopupComplete
// [0x00020002] 
// Parameters infos:
// int                            Action                         ( CPF_Parm )
// struct FString                 TextInput                      ( CPF_Parm | CPF_NeedCtorLink )

void UGFxTrPage_VideoResolution::PopupComplete ( int Action, struct FString TextInput )
{
	static UFunction* pFnPopupComplete = NULL;

	if ( ! pFnPopupComplete )
		pFnPopupComplete = (UFunction*) UObject::GObjObjects()->Data[ 61047 ];

	UGFxTrPage_VideoResolution_execPopupComplete_Parms PopupComplete_Parms;
	PopupComplete_Parms.Action = Action;
	memcpy ( &PopupComplete_Parms.TextInput, &TextInput, 0xC );

	this->ProcessEvent ( pFnPopupComplete, &PopupComplete_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolution.PopupData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void UGFxTrPage_VideoResolution::PopupData ( class UGFxObject* Obj )
{
	static UFunction* pFnPopupData = NULL;

	if ( ! pFnPopupData )
		pFnPopupData = (UFunction*) UObject::GObjObjects()->Data[ 61042 ];

	UGFxTrPage_VideoResolution_execPopupData_Parms PopupData_Parms;
	PopupData_Parms.Obj = Obj;

	this->ProcessEvent ( pFnPopupData, &PopupData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolution.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VideoResolution::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61038 ];

	UGFxTrPage_VideoResolution_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VideoResolution.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VideoResolution::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61036 ];

	UGFxTrPage_VideoResolution_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolution.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_VideoResolution::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61032 ];

	UGFxTrPage_VideoResolution_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolutionTypes.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VideoResolutionTypes::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61083 ];

	UGFxTrPage_VideoResolutionTypes_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VideoResolutionTypes.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VideoResolutionTypes::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61081 ];

	UGFxTrPage_VideoResolutionTypes_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolutionTypes.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_VideoResolutionTypes::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61076 ];

	UGFxTrPage_VideoResolutionTypes_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoResolutionTypes.Initialize
// [0x00820002] 
// Parameters infos:

void UGFxTrPage_VideoResolutionTypes::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61071 ];

	UGFxTrPage_VideoResolutionTypes_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VideoSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61101 ];

	UGFxTrPage_VideoSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VideoSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_VideoSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61097 ];

	UGFxTrPage_VideoSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_VideoSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61094 ];

	UGFxTrPage_VideoSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoWindow.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_VideoWindow::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61115 ];

	UGFxTrPage_VideoWindow_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_VideoWindow.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_VideoWindow::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61113 ];

	UGFxTrPage_VideoWindow_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoWindow.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_VideoWindow::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61111 ];

	UGFxTrPage_VideoWindow_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_VideoWindow.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_VideoWindow::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61109 ];

	UGFxTrPage_VideoWindow_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WatchNow.IsFeatured
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Num                            ( CPF_Parm )

bool UGFxTrPage_WatchNow::IsFeatured ( int Num )
{
	static UFunction* pFnIsFeatured = NULL;

	if ( ! pFnIsFeatured )
		pFnIsFeatured = (UFunction*) UObject::GObjObjects()->Data[ 61167 ];

	UGFxTrPage_WatchNow_execIsFeatured_Parms IsFeatured_Parms;
	IsFeatured_Parms.Num = Num;

	this->ProcessEvent ( pFnIsFeatured, &IsFeatured_Parms, NULL );

	return IsFeatured_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_WatchNow.FillDescription
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UGFxObject*              DataList                       ( CPF_Parm )

class UGFxObject* UGFxTrPage_WatchNow::FillDescription ( class UGFxObject* DataList )
{
	static UFunction* pFnFillDescription = NULL;

	if ( ! pFnFillDescription )
		pFnFillDescription = (UFunction*) UObject::GObjObjects()->Data[ 61161 ];

	UGFxTrPage_WatchNow_execFillDescription_Parms FillDescription_Parms;
	FillDescription_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillDescription, &FillDescription_Parms, NULL );

	return FillDescription_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_WatchNow.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_WatchNow::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61146 ];

	UGFxTrPage_WatchNow_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_WatchNow.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_WatchNow::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61144 ];

	UGFxTrPage_WatchNow_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WatchNow.UpdateStreams
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_WatchNow::UpdateStreams ( )
{
	static UFunction* pFnUpdateStreams = NULL;

	if ( ! pFnUpdateStreams )
		pFnUpdateStreams = (UFunction*) UObject::GObjObjects()->Data[ 61138 ];

	UGFxTrPage_WatchNow_execUpdateStreams_Parms UpdateStreams_Parms;

	this->ProcessEvent ( pFnUpdateStreams, &UpdateStreams_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WatchNow.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_WatchNow::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61134 ];

	UGFxTrPage_WatchNow_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WatchNow.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_WatchNow::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 61132 ];

	UGFxTrPage_WatchNow_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WatchNow.Initialize
// [0x00020000] 
// Parameters infos:

void UGFxTrPage_WatchNow::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61131 ];

	UGFxTrPage_WatchNow_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WhisperSettings.ShowModel
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_WhisperSettings::ShowModel ( )
{
	static UFunction* pFnShowModel = NULL;

	if ( ! pFnShowModel )
		pFnShowModel = (UFunction*) UObject::GObjObjects()->Data[ 61185 ];

	UGFxTrPage_WhisperSettings_execShowModel_Parms ShowModel_Parms;

	this->ProcessEvent ( pFnShowModel, &ShowModel_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WhisperSettings.SpecialAction
// [0x00020002] 
// Parameters infos:
// class UGFxTrAction*            Action                         ( CPF_Parm )

void UGFxTrPage_WhisperSettings::SpecialAction ( class UGFxTrAction* Action )
{
	static UFunction* pFnSpecialAction = NULL;

	if ( ! pFnSpecialAction )
		pFnSpecialAction = (UFunction*) UObject::GObjObjects()->Data[ 61183 ];

	UGFxTrPage_WhisperSettings_execSpecialAction_Parms SpecialAction_Parms;
	SpecialAction_Parms.Action = Action;

	this->ProcessEvent ( pFnSpecialAction, &SpecialAction_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WhisperSettings.FillOption
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ActionIndex                    ( CPF_Parm )

class UGFxObject* UGFxTrPage_WhisperSettings::FillOption ( int ActionIndex )
{
	static UFunction* pFnFillOption = NULL;

	if ( ! pFnFillOption )
		pFnFillOption = (UFunction*) UObject::GObjObjects()->Data[ 61179 ];

	UGFxTrPage_WhisperSettings_execFillOption_Parms FillOption_Parms;
	FillOption_Parms.ActionIndex = ActionIndex;

	this->ProcessEvent ( pFnFillOption, &FillOption_Parms, NULL );

	return FillOption_Parms.ReturnValue;
};

// Function TribesGame.GFxTrPage_WhisperSettings.FillData
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              DataList                       ( CPF_Parm )

void UGFxTrPage_WhisperSettings::FillData ( class UGFxObject* DataList )
{
	static UFunction* pFnFillData = NULL;

	if ( ! pFnFillData )
		pFnFillData = (UFunction*) UObject::GObjObjects()->Data[ 61177 ];

	UGFxTrPage_WhisperSettings_execFillData_Parms FillData_Parms;
	FillData_Parms.DataList = DataList;

	this->ProcessEvent ( pFnFillData, &FillData_Parms, NULL );
};

// Function TribesGame.GFxTrPage_WhisperSettings.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrPage_WhisperSettings::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 61175 ];

	UGFxTrPage_WhisperSettings_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_Container.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_Container::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 62888 ];

	UGFxTrScene_Container_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_Header.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_Header::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 62900 ];

	UGFxTrScene_Header_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_Profile.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_Profile::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 63394 ];

	UGFxTrScene_Profile_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrScene_Social.Initialize
// [0x00020002] 
// Parameters infos:

void UGFxTrScene_Social::Initialize ( )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 63399 ];

	UGFxTrScene_Social_execInitialize_Parms Initialize_Parms;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.GFxTrUI_MainMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxTrUI_MainMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 64775 ];

	UGFxTrUI_MainMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function TribesGame.GFxTrUI_VehicleMenu.OnVehicleScreenFinished
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_VehicleMenu::OnVehicleScreenFinished ( )
{
	static UFunction* pFnOnVehicleScreenFinished = NULL;

	if ( ! pFnOnVehicleScreenFinished )
		pFnOnVehicleScreenFinished = (UFunction*) UObject::GObjObjects()->Data[ 64861 ];

	UGFxTrUI_VehicleMenu_execOnVehicleScreenFinished_Parms OnVehicleScreenFinished_Parms;

	this->ProcessEvent ( pFnOnVehicleScreenFinished, &OnVehicleScreenFinished_Parms, NULL );
};

// Function TribesGame.GFxTrUI_VehicleMenu.GetSelectedVehicle
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UGFxTrUI_VehicleMenu::GetSelectedVehicle ( )
{
	static UFunction* pFnGetSelectedVehicle = NULL;

	if ( ! pFnGetSelectedVehicle )
		pFnGetSelectedVehicle = (UFunction*) UObject::GObjObjects()->Data[ 64859 ];

	UGFxTrUI_VehicleMenu_execGetSelectedVehicle_Parms GetSelectedVehicle_Parms;

	this->ProcessEvent ( pFnGetSelectedVehicle, &GetSelectedVehicle_Parms, NULL );

	return GetSelectedVehicle_Parms.ReturnValue;
};

// Function TribesGame.GFxTrUI_VehicleMenu.SetVehicleOption
// [0x00020002] 
// Parameters infos:
// struct FString                 ClassName                      ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 DisplayName                    ( CPF_Parm | CPF_NeedCtorLink )
// int                            Cost                           ( CPF_Parm )
// int                            nIconIndex                     ( CPF_Parm )

void UGFxTrUI_VehicleMenu::SetVehicleOption ( struct FString ClassName, struct FString DisplayName, int Cost, int nIconIndex )
{
	static UFunction* pFnSetVehicleOption = NULL;

	if ( ! pFnSetVehicleOption )
		pFnSetVehicleOption = (UFunction*) UObject::GObjObjects()->Data[ 64854 ];

	UGFxTrUI_VehicleMenu_execSetVehicleOption_Parms SetVehicleOption_Parms;
	memcpy ( &SetVehicleOption_Parms.ClassName, &ClassName, 0xC );
	memcpy ( &SetVehicleOption_Parms.DisplayName, &DisplayName, 0xC );
	SetVehicleOption_Parms.Cost = Cost;
	SetVehicleOption_Parms.nIconIndex = nIconIndex;

	this->ProcessEvent ( pFnSetVehicleOption, &SetVehicleOption_Parms, NULL );
};

// Function TribesGame.GFxTrUI_VehicleMenu.VehicleOptionsClear
// [0x00020002] 
// Parameters infos:

void UGFxTrUI_VehicleMenu::VehicleOptionsClear ( )
{
	static UFunction* pFnVehicleOptionsClear = NULL;

	if ( ! pFnVehicleOptionsClear )
		pFnVehicleOptionsClear = (UFunction*) UObject::GObjObjects()->Data[ 64853 ];

	UGFxTrUI_VehicleMenu_execVehicleOptionsClear_Parms VehicleOptionsClear_Parms;

	this->ProcessEvent ( pFnVehicleOptionsClear, &VehicleOptionsClear_Parms, NULL );
};

// Function TribesGame.GFxTrUI_VehicleMenu.VehicleOptionsComplete
// [0x00020002] 
// Parameters infos:
// int                            Credits                        ( CPF_Parm )

void UGFxTrUI_VehicleMenu::VehicleOptionsComplete ( int Credits )
{
	static UFunction* pFnVehicleOptionsComplete = NULL;

	if ( ! pFnVehicleOptionsComplete )
		pFnVehicleOptionsComplete = (UFunction*) UObject::GObjObjects()->Data[ 64851 ];

	UGFxTrUI_VehicleMenu_execVehicleOptionsComplete_Parms VehicleOptionsComplete_Parms;
	VehicleOptionsComplete_Parms.Credits = Credits;

	this->ProcessEvent ( pFnVehicleOptionsComplete, &VehicleOptionsComplete_Parms, NULL );
};

// Function TribesGame.GFxTrUI_VehicleMenu.ConfigureOptions
// [0x00020002] 
// Parameters infos:
// class UClass*                  FamilyInfo                     ( CPF_Parm )

void UGFxTrUI_VehicleMenu::ConfigureOptions ( class UClass* FamilyInfo )
{
	static UFunction* pFnConfigureOptions = NULL;

	if ( ! pFnConfigureOptions )
		pFnConfigureOptions = (UFunction*) UObject::GObjObjects()->Data[ 64839 ];

	UGFxTrUI_VehicleMenu_execConfigureOptions_Parms ConfigureOptions_Parms;
	ConfigureOptions_Parms.FamilyInfo = FamilyInfo;

	this->ProcessEvent ( pFnConfigureOptions, &ConfigureOptions_Parms, NULL );
};

// Function TribesGame.GFxTrUI_VehicleMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool UGFxTrUI_VehicleMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 64836 ];

	UGFxTrUI_VehicleMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TRCTF::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89764 ];

	ATrGame_TRCTF_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TRCTF::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 89761 ];

	ATrGame_TRCTF_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.AnnounceScore
// [0x00020002] 
// Parameters infos:
// int                            ScoringTeam                    ( CPF_Parm )

void ATrGame_TRCTF::AnnounceScore ( int ScoringTeam )
{
	static UFunction* pFnAnnounceScore = NULL;

	if ( ! pFnAnnounceScore )
		pFnAnnounceScore = (UFunction*) UObject::GObjObjects()->Data[ 89756 ];

	ATrGame_TRCTF_execAnnounceScore_Parms AnnounceScore_Parms;
	AnnounceScore_Parms.ScoringTeam = ScoringTeam;

	this->ProcessEvent ( pFnAnnounceScore, &AnnounceScore_Parms, NULL );
};

// Function TribesGame.TrGame_TRCTF.GetAutoObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )

class AActor* ATrGame_TRCTF::GetAutoObjectiveFor ( class AUTPlayerController* PC )
{
	static UFunction* pFnGetAutoObjectiveFor = NULL;

	if ( ! pFnGetAutoObjectiveFor )
		pFnGetAutoObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 89753 ];

	ATrGame_TRCTF_execGetAutoObjectiveFor_Parms GetAutoObjectiveFor_Parms;
	GetAutoObjectiveFor_Parms.PC = PC;

	this->ProcessEvent ( pFnGetAutoObjectiveFor, &GetAutoObjectiveFor_Parms, NULL );

	return GetAutoObjectiveFor_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.ViewObjective
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ATrGame_TRCTF::ViewObjective ( class APlayerController* PC )
{
	static UFunction* pFnViewObjective = NULL;

	if ( ! pFnViewObjective )
		pFnViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 89750 ];

	ATrGame_TRCTF_execViewObjective_Parms ViewObjective_Parms;
	ViewObjective_Parms.PC = PC;

	this->ProcessEvent ( pFnViewObjective, &ViewObjective_Parms, NULL );
};

// Function TribesGame.TrGame_TRCTF.ScoreFlag
// [0x00820002] 
// Parameters infos:
// class AController*             Scorer                         ( CPF_Parm )
// class ATrFlagBase*             theFlag                        ( CPF_Parm )

void ATrGame_TRCTF::ScoreFlag ( class AController* Scorer, class ATrFlagBase* theFlag )
{
	static UFunction* pFnScoreFlag = NULL;

	if ( ! pFnScoreFlag )
		pFnScoreFlag = (UFunction*) UObject::GObjObjects()->Data[ 89728 ];

	ATrGame_TRCTF_execScoreFlag_Parms ScoreFlag_Parms;
	ScoreFlag_Parms.Scorer = Scorer;
	ScoreFlag_Parms.theFlag = theFlag;

	this->ProcessEvent ( pFnScoreFlag, &ScoreFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRCTF.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TRCTF::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89722 ];

	ATrGame_TRCTF_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.WantFastSpawnFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           B                              ( CPF_Parm )

bool ATrGame_TRCTF::WantFastSpawnFor ( class AAIController* B )
{
	static UFunction* pFnWantFastSpawnFor = NULL;

	if ( ! pFnWantFastSpawnFor )
		pFnWantFastSpawnFor = (UFunction*) UObject::GObjObjects()->Data[ 89719 ];

	ATrGame_TRCTF_execWantFastSpawnFor_Parms WantFastSpawnFor_Parms;
	WantFastSpawnFor_Parms.B = B;

	this->ProcessEvent ( pFnWantFastSpawnFor, &WantFastSpawnFor_Parms, NULL );

	return WantFastSpawnFor_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.NearGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool ATrGame_TRCTF::NearGoal ( class AController* C )
{
	static UFunction* pFnNearGoal = NULL;

	if ( ! pFnNearGoal )
		pFnNearGoal = (UFunction*) UObject::GObjObjects()->Data[ 89715 ];

	ATrGame_TRCTF_execNearGoal_Parms NearGoal_Parms;
	NearGoal_Parms.C = C;

	this->ProcessEvent ( pFnNearGoal, &NearGoal_Parms, NULL );

	return NearGoal_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.RegisterFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        F                              ( CPF_Parm )
// int                            TeamIndex                      ( CPF_Parm )

void ATrGame_TRCTF::RegisterFlag ( class AUTCarriedObject* F, int TeamIndex )
{
	static UFunction* pFnRegisterFlag = NULL;

	if ( ! pFnRegisterFlag )
		pFnRegisterFlag = (UFunction*) UObject::GObjObjects()->Data[ 89711 ];

	ATrGame_TRCTF_execRegisterFlag_Parms RegisterFlag_Parms;
	RegisterFlag_Parms.F = F;
	RegisterFlag_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnRegisterFlag, &RegisterFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRCTF.GetLocationFor
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// class AActor*                  LocationObject                 ( CPF_Parm | CPF_OutParm )
// int                            MessageIndex                   ( CPF_Parm | CPF_OutParm )

bool ATrGame_TRCTF::GetLocationFor ( class APawn* StatusPawn, int LocationSpeechOffset, class AActor** LocationObject, int* MessageIndex )
{
	static UFunction* pFnGetLocationFor = NULL;

	if ( ! pFnGetLocationFor )
		pFnGetLocationFor = (UFunction*) UObject::GObjObjects()->Data[ 89702 ];

	ATrGame_TRCTF_execGetLocationFor_Parms GetLocationFor_Parms;
	GetLocationFor_Parms.StatusPawn = StatusPawn;
	GetLocationFor_Parms.LocationSpeechOffset = LocationSpeechOffset;

	this->ProcessEvent ( pFnGetLocationFor, &GetLocationFor_Parms, NULL );

	if ( LocationObject )
		*LocationObject = GetLocationFor_Parms.LocationObject;

	if ( MessageIndex )
		*MessageIndex = GetLocationFor_Parms.MessageIndex;

	return GetLocationFor_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.GetHandicapNeed
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )

int ATrGame_TRCTF::GetHandicapNeed ( class APawn* Other )
{
	static UFunction* pFnGetHandicapNeed = NULL;

	if ( ! pFnGetHandicapNeed )
		pFnGetHandicapNeed = (UFunction*) UObject::GObjObjects()->Data[ 89699 ];

	ATrGame_TRCTF_execGetHandicapNeed_Parms GetHandicapNeed_Parms;
	GetHandicapNeed_Parms.Other = Other;

	this->ProcessEvent ( pFnGetHandicapNeed, &GetHandicapNeed_Parms, NULL );

	return GetHandicapNeed_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRCTF.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TRCTF::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89697 ];

	ATrGame_TRCTF_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGame_TRCTF.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TRCTF::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89695 ];

	ATrGame_TRCTF_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicle_Tank.LimitViewRotation
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                LimitViewRotation              ( CPF_Parm )
// float                          LimitViewPitchMin              ( CPF_Parm )
// float                          LimitViewPitchMax              ( CPF_Parm )

struct FRotator ATrVehicle_Tank::LimitViewRotation ( struct FRotator LimitViewRotation, float LimitViewPitchMin, float LimitViewPitchMax )
{
	static UFunction* pFnLimitViewRotation = NULL;

	if ( ! pFnLimitViewRotation )
		pFnLimitViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 113770 ];

	ATrVehicle_Tank_execLimitViewRotation_Parms LimitViewRotation_Parms;
	memcpy ( &LimitViewRotation_Parms.LimitViewRotation, &LimitViewRotation, 0xC );
	LimitViewRotation_Parms.LimitViewPitchMin = LimitViewPitchMin;
	LimitViewRotation_Parms.LimitViewPitchMax = LimitViewPitchMax;

	this->ProcessEvent ( pFnLimitViewRotation, &LimitViewRotation_Parms, NULL );

	return LimitViewRotation_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle_Tank.ProcessViewRotationBasedOnSeat
// [0x00420102] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_DeltaRot                   ( CPF_Parm | CPF_OutParm )

void ATrVehicle_Tank::ProcessViewRotationBasedOnSeat ( int SeatIndex, float DeltaTime, struct FRotator* out_ViewRotation, struct FRotator* out_DeltaRot )
{
	static UFunction* pFnProcessViewRotationBasedOnSeat = NULL;

	if ( ! pFnProcessViewRotationBasedOnSeat )
		pFnProcessViewRotationBasedOnSeat = (UFunction*) UObject::GObjObjects()->Data[ 113760 ];

	ATrVehicle_Tank_execProcessViewRotationBasedOnSeat_Parms ProcessViewRotationBasedOnSeat_Parms;
	ProcessViewRotationBasedOnSeat_Parms.SeatIndex = SeatIndex;
	ProcessViewRotationBasedOnSeat_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnProcessViewRotationBasedOnSeat, &ProcessViewRotationBasedOnSeat_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotationBasedOnSeat_Parms.out_ViewRotation, 0xC );

	if ( out_DeltaRot )
		memcpy ( out_DeltaRot, &ProcessViewRotationBasedOnSeat_Parms.out_DeltaRot, 0xC );
};

// Function TribesGame.TrVehicle_Tank.VehicleWeaponFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle_Tank::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 113754 ];

	ATrVehicle_Tank_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function TribesGame.TrVehicle_Tank.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrVehicle_Tank::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 113750 ];

	ATrVehicle_Tank_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TRTeamRabbit::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 90134 ];

	ATrGame_TRTeamRabbit_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTeamRabbit.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ATrGame_TRTeamRabbit::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 90128 ];

	ATrGame_TRTeamRabbit_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTeamRabbit.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TRTeamRabbit::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 90120 ];

	ATrGame_TRTeamRabbit_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTeamRabbit.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TRTeamRabbit::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 90117 ];

	ATrGame_TRTeamRabbit_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTeamRabbit.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TRTeamRabbit::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 90101 ];

	ATrGame_TRTeamRabbit_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.AwardFlagHolder
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::AwardFlagHolder ( )
{
	static UFunction* pFnAwardFlagHolder = NULL;

	if ( ! pFnAwardFlagHolder )
		pFnAwardFlagHolder = (UFunction*) UObject::GObjObjects()->Data[ 90099 ];

	ATrGame_TRTeamRabbit_execAwardFlagHolder_Parms AwardFlagHolder_Parms;

	this->ProcessEvent ( pFnAwardFlagHolder, &AwardFlagHolder_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.DroppedFlag
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::DroppedFlag ( )
{
	static UFunction* pFnDroppedFlag = NULL;

	if ( ! pFnDroppedFlag )
		pFnDroppedFlag = (UFunction*) UObject::GObjObjects()->Data[ 90097 ];

	ATrGame_TRTeamRabbit_execDroppedFlag_Parms DroppedFlag_Parms;

	this->ProcessEvent ( pFnDroppedFlag, &DroppedFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.PickedUpFlag
// [0x00020002] 
// Parameters infos:
// class AController*             Holder                         ( CPF_Parm )

void ATrGame_TRTeamRabbit::PickedUpFlag ( class AController* Holder )
{
	static UFunction* pFnPickedUpFlag = NULL;

	if ( ! pFnPickedUpFlag )
		pFnPickedUpFlag = (UFunction*) UObject::GObjObjects()->Data[ 90092 ];

	ATrGame_TRTeamRabbit_execPickedUpFlag_Parms PickedUpFlag_Parms;
	PickedUpFlag_Parms.Holder = Holder;

	this->ProcessEvent ( pFnPickedUpFlag, &PickedUpFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.FlagDestoyed
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::FlagDestoyed ( )
{
	static UFunction* pFnFlagDestoyed = NULL;

	if ( ! pFnFlagDestoyed )
		pFnFlagDestoyed = (UFunction*) UObject::GObjObjects()->Data[ 90091 ];

	ATrGame_TRTeamRabbit_execFlagDestoyed_Parms FlagDestoyed_Parms;

	this->ProcessEvent ( pFnFlagDestoyed, &FlagDestoyed_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ATrGame_TRTeamRabbit::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 90085 ];

	ATrGame_TRTeamRabbit_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.SpawnFlag
// [0x00020002] 
// Parameters infos:
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FVector                 InitialVelocity                ( CPF_Parm )

void ATrGame_TRTeamRabbit::SpawnFlag ( struct FVector SpawnLocation, struct FVector InitialVelocity )
{
	static UFunction* pFnSpawnFlag = NULL;

	if ( ! pFnSpawnFlag )
		pFnSpawnFlag = (UFunction*) UObject::GObjObjects()->Data[ 90073 ];

	ATrGame_TRTeamRabbit_execSpawnFlag_Parms SpawnFlag_Parms;
	memcpy ( &SpawnFlag_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &SpawnFlag_Parms.InitialVelocity, &InitialVelocity, 0xC );

	this->ProcessEvent ( pFnSpawnFlag, &SpawnFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TRTeamRabbit::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 90071 ];

	ATrGame_TRTeamRabbit_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.ResetScores
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::ResetScores ( )
{
	static UFunction* pFnResetScores = NULL;

	if ( ! pFnResetScores )
		pFnResetScores = (UFunction*) UObject::GObjObjects()->Data[ 90070 ];

	ATrGame_TRTeamRabbit_execResetScores_Parms ResetScores_Parms;

	this->ProcessEvent ( pFnResetScores, &ResetScores_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.ResetLevel
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 90069 ];

	ATrGame_TRTeamRabbit_execResetLevel_Parms ResetLevel_Parms;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );
};

// Function TribesGame.TrGame_TRTeamRabbit.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TRTeamRabbit::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 90068 ];

	ATrGame_TRTeamRabbit_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrActorFactoryPawn.PostCreateActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void UTrActorFactoryPawn::eventPostCreateActor ( class AActor* NewActor )
{
	static UFunction* pFnPostCreateActor = NULL;

	if ( ! pFnPostCreateActor )
		pFnPostCreateActor = (UFunction*) UObject::GObjObjects()->Data[ 65903 ];

	UTrActorFactoryPawn_eventPostCreateActor_Parms PostCreateActor_Parms;
	PostCreateActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnPostCreateActor, &PostCreateActor_Parms, NULL );
};

// Function TribesGame.TrBotPawn.RechargeHealthPool
// [0x00020800] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ATrBotPawn::eventRechargeHealthPool ( float DeltaSeconds )
{
	static UFunction* pFnRechargeHealthPool = NULL;

	if ( ! pFnRechargeHealthPool )
		pFnRechargeHealthPool = (UFunction*) UObject::GObjObjects()->Data[ 73243 ];

	ATrBotPawn_eventRechargeHealthPool_Parms RechargeHealthPool_Parms;
	RechargeHealthPool_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnRechargeHealthPool, &RechargeHealthPool_Parms, NULL );
};

// Function TribesGame.TrBotPawn.Tick
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrBotPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 73240 ];

	ATrBotPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrBotPawn.SetMovementPhysics
// [0x00020002] 
// Parameters infos:

void ATrBotPawn::SetMovementPhysics ( )
{
	static UFunction* pFnSetMovementPhysics = NULL;

	if ( ! pFnSetMovementPhysics )
		pFnSetMovementPhysics = (UFunction*) UObject::GObjObjects()->Data[ 73239 ];

	ATrBotPawn_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

	this->ProcessEvent ( pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.SuppressAnimNotifies
// [0x00020102] 
// Parameters infos:
// unsigned long                  bSuppress                      ( CPF_Parm )

void ATrPlayerPawn::SuppressAnimNotifies ( unsigned long bSuppress )
{
	static UFunction* pFnSuppressAnimNotifies = NULL;

	if ( ! pFnSuppressAnimNotifies )
		pFnSuppressAnimNotifies = (UFunction*) UObject::GObjObjects()->Data[ 73188 ];

	ATrPlayerPawn_execSuppressAnimNotifies_Parms SuppressAnimNotifies_Parms;
	SuppressAnimNotifies_Parms.bSuppress = bSuppress;

	this->ProcessEvent ( pFnSuppressAnimNotifies, &SuppressAnimNotifies_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.CacheMeshAnimSeqNodes
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::CacheMeshAnimSeqNodes ( )
{
	static UFunction* pFnCacheMeshAnimSeqNodes = NULL;

	if ( ! pFnCacheMeshAnimSeqNodes )
		pFnCacheMeshAnimSeqNodes = (UFunction*) UObject::GObjObjects()->Data[ 73186 ];

	ATrPlayerPawn_execCacheMeshAnimSeqNodes_Parms CacheMeshAnimSeqNodes_Parms;

	this->ProcessEvent ( pFnCacheMeshAnimSeqNodes, &CacheMeshAnimSeqNodes_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.ClearMeshAnimSeqNodes
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::ClearMeshAnimSeqNodes ( )
{
	static UFunction* pFnClearMeshAnimSeqNodes = NULL;

	if ( ! pFnClearMeshAnimSeqNodes )
		pFnClearMeshAnimSeqNodes = (UFunction*) UObject::GObjObjects()->Data[ 73185 ];

	ATrPlayerPawn_execClearMeshAnimSeqNodes_Parms ClearMeshAnimSeqNodes_Parms;

	this->ProcessEvent ( pFnClearMeshAnimSeqNodes, &ClearMeshAnimSeqNodes_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.CalcOtherWatchingCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// class ATrPlayerController*     WatcherController              ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ATrPlayerPawn::CalcOtherWatchingCam ( float fDeltaTime, class ATrPlayerController* WatcherController, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcOtherWatchingCam = NULL;

	if ( ! pFnCalcOtherWatchingCam )
		pFnCalcOtherWatchingCam = (UFunction*) UObject::GObjObjects()->Data[ 73171 ];

	ATrPlayerPawn_execCalcOtherWatchingCam_Parms CalcOtherWatchingCam_Parms;
	CalcOtherWatchingCam_Parms.fDeltaTime = fDeltaTime;
	CalcOtherWatchingCam_Parms.WatcherController = WatcherController;

	this->ProcessEvent ( pFnCalcOtherWatchingCam, &CalcOtherWatchingCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcOtherWatchingCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcOtherWatchingCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcOtherWatchingCam_Parms.out_FOV;

	return CalcOtherWatchingCam_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.CalcThirdPersonCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ATrPlayerPawn::CalcThirdPersonCam ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcThirdPersonCam = NULL;

	if ( ! pFnCalcThirdPersonCam )
		pFnCalcThirdPersonCam = (UFunction*) UObject::GObjObjects()->Data[ 73154 ];

	ATrPlayerPawn_execCalcThirdPersonCam_Parms CalcThirdPersonCam_Parms;
	CalcThirdPersonCam_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcThirdPersonCam, &CalcThirdPersonCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcThirdPersonCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcThirdPersonCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcThirdPersonCam_Parms.out_FOV;

	return CalcThirdPersonCam_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.SetThirdPersonCamera
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void ATrPlayerPawn::SetThirdPersonCamera ( unsigned long bNewBehindView )
{
	static UFunction* pFnSetThirdPersonCamera = NULL;

	if ( ! pFnSetThirdPersonCamera )
		pFnSetThirdPersonCamera = (UFunction*) UObject::GObjObjects()->Data[ 73152 ];

	ATrPlayerPawn_execSetThirdPersonCamera_Parms SetThirdPersonCamera_Parms;
	SetThirdPersonCamera_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnSetThirdPersonCamera, &SetThirdPersonCamera_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.CalcCamera
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ATrPlayerPawn::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 73146 ];

	ATrPlayerPawn_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPlayerPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 73144 ];

	ATrPlayerPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PlayReload
// [0x00020102] 
// Parameters infos:
// unsigned char                  EquipPoint                     ( CPF_Parm )

void ATrPlayerPawn::PlayReload ( unsigned char EquipPoint )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 73139 ];

	ATrPlayerPawn_execPlayReload_Parms PlayReload_Parms;
	PlayReload_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.StopJetpackEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerPawn::eventStopJetpackEffects ( )
{
	static UFunction* pFnStopJetpackEffects = NULL;

	if ( ! pFnStopJetpackEffects )
		pFnStopJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 73137 ];

	ATrPlayerPawn_eventStopJetpackEffects_Parms StopJetpackEffects_Parms;

	this->ProcessEvent ( pFnStopJetpackEffects, &StopJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.UpdateJetpackEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerPawn::eventUpdateJetpackEffects ( )
{
	static UFunction* pFnUpdateJetpackEffects = NULL;

	if ( ! pFnUpdateJetpackEffects )
		pFnUpdateJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 73135 ];

	ATrPlayerPawn_eventUpdateJetpackEffects_Parms UpdateJetpackEffects_Parms;

	this->ProcessEvent ( pFnUpdateJetpackEffects, &UpdateJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PlayJetpackEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerPawn::eventPlayJetpackEffects ( )
{
	static UFunction* pFnPlayJetpackEffects = NULL;

	if ( ! pFnPlayJetpackEffects )
		pFnPlayJetpackEffects = (UFunction*) UObject::GObjObjects()->Data[ 73132 ];

	ATrPlayerPawn_eventPlayJetpackEffects_Parms PlayJetpackEffects_Parms;

	this->ProcessEvent ( pFnPlayJetpackEffects, &PlayJetpackEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.ClearJetpackParticleEffects
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::ClearJetpackParticleEffects ( )
{
	static UFunction* pFnClearJetpackParticleEffects = NULL;

	if ( ! pFnClearJetpackParticleEffects )
		pFnClearJetpackParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 73130 ];

	ATrPlayerPawn_execClearJetpackParticleEffects_Parms ClearJetpackParticleEffects_Parms;

	this->ProcessEvent ( pFnClearJetpackParticleEffects, &ClearJetpackParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.CreateJetpackParticleEffects
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::CreateJetpackParticleEffects ( )
{
	static UFunction* pFnCreateJetpackParticleEffects = NULL;

	if ( ! pFnCreateJetpackParticleEffects )
		pFnCreateJetpackParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 73117 ];

	ATrPlayerPawn_execCreateJetpackParticleEffects_Parms CreateJetpackParticleEffects_Parms;

	this->ProcessEvent ( pFnCreateJetpackParticleEffects, &CreateJetpackParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.StopSkiEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerPawn::eventStopSkiEffects ( )
{
	static UFunction* pFnStopSkiEffects = NULL;

	if ( ! pFnStopSkiEffects )
		pFnStopSkiEffects = (UFunction*) UObject::GObjObjects()->Data[ 73115 ];

	ATrPlayerPawn_eventStopSkiEffects_Parms StopSkiEffects_Parms;

	this->ProcessEvent ( pFnStopSkiEffects, &StopSkiEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PlaySkiEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPlayerPawn::eventPlaySkiEffects ( )
{
	static UFunction* pFnPlaySkiEffects = NULL;

	if ( ! pFnPlaySkiEffects )
		pFnPlaySkiEffects = (UFunction*) UObject::GObjObjects()->Data[ 73113 ];

	ATrPlayerPawn_eventPlaySkiEffects_Parms PlaySkiEffects_Parms;

	this->ProcessEvent ( pFnPlaySkiEffects, &PlaySkiEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.ClearSkiParticleEffects
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::ClearSkiParticleEffects ( )
{
	static UFunction* pFnClearSkiParticleEffects = NULL;

	if ( ! pFnClearSkiParticleEffects )
		pFnClearSkiParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 73111 ];

	ATrPlayerPawn_execClearSkiParticleEffects_Parms ClearSkiParticleEffects_Parms;

	this->ProcessEvent ( pFnClearSkiParticleEffects, &ClearSkiParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.CreateSkiParticleEffects
// [0x00020102] 
// Parameters infos:

void ATrPlayerPawn::CreateSkiParticleEffects ( )
{
	static UFunction* pFnCreateSkiParticleEffects = NULL;

	if ( ! pFnCreateSkiParticleEffects )
		pFnCreateSkiParticleEffects = (UFunction*) UObject::GObjObjects()->Data[ 73103 ];

	ATrPlayerPawn_execCreateSkiParticleEffects_Parms CreateSkiParticleEffects_Parms;

	this->ProcessEvent ( pFnCreateSkiParticleEffects, &CreateSkiParticleEffects_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PlaySonicPunchEffect
// [0x01820142] 
// Parameters infos:

void ATrPlayerPawn::PlaySonicPunchEffect ( )
{
	static UFunction* pFnPlaySonicPunchEffect = NULL;

	if ( ! pFnPlaySonicPunchEffect )
		pFnPlaySonicPunchEffect = (UFunction*) UObject::GObjObjects()->Data[ 73098 ];

	ATrPlayerPawn_execPlaySonicPunchEffect_Parms PlaySonicPunchEffect_Parms;

	this->ProcessEvent ( pFnPlaySonicPunchEffect, &PlaySonicPunchEffect_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PlayHardLandingEffect
// [0x01020142] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrPlayerPawn::PlayHardLandingEffect ( struct FVector HitLocation )
{
	static UFunction* pFnPlayHardLandingEffect = NULL;

	if ( ! pFnPlayHardLandingEffect )
		pFnPlayHardLandingEffect = (UFunction*) UObject::GObjObjects()->Data[ 73093 ];

	ATrPlayerPawn_execPlayHardLandingEffect_Parms PlayHardLandingEffect_Parms;
	memcpy ( &PlayHardLandingEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayHardLandingEffect, &PlayHardLandingEffect_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrPlayerPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 73090 ];

	ATrPlayerPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrPlayerPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 73088 ];

	ATrPlayerPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.WeaponBob
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          BobDamping                     ( CPF_Parm )
// float                          JumpDamping                    ( CPF_Parm )

struct FVector ATrPlayerPawn::WeaponBob ( float BobDamping, float JumpDamping )
{
	static UFunction* pFnWeaponBob = NULL;

	if ( ! pFnWeaponBob )
		pFnWeaponBob = (UFunction*) UObject::GObjObjects()->Data[ 73083 ];

	ATrPlayerPawn_execWeaponBob_Parms WeaponBob_Parms;
	WeaponBob_Parms.BobDamping = BobDamping;
	WeaponBob_Parms.JumpDamping = JumpDamping;

	this->ProcessEvent ( pFnWeaponBob, &WeaponBob_Parms, NULL );

	return WeaponBob_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.ActuallyPlayFootstepSound
// [0x00820102] 
// Parameters infos:
// int                            FootDown                       ( CPF_Parm )

void ATrPlayerPawn::ActuallyPlayFootstepSound ( int FootDown )
{
	static UFunction* pFnActuallyPlayFootstepSound = NULL;

	if ( ! pFnActuallyPlayFootstepSound )
		pFnActuallyPlayFootstepSound = (UFunction*) UObject::GObjObjects()->Data[ 73074 ];

	ATrPlayerPawn_execActuallyPlayFootstepSound_Parms ActuallyPlayFootstepSound_Parms;
	ActuallyPlayFootstepSound_Parms.FootDown = FootDown;

	this->ProcessEvent ( pFnActuallyPlayFootstepSound, &ActuallyPlayFootstepSound_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.GetMaterialBelowFeet
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ATrPlayerPawn::GetMaterialBelowFeet ( )
{
	static UFunction* pFnGetMaterialBelowFeet = NULL;

	if ( ! pFnGetMaterialBelowFeet )
		pFnGetMaterialBelowFeet = (UFunction*) UObject::GObjObjects()->Data[ 73072 ];

	ATrPlayerPawn_execGetMaterialBelowFeet_Parms GetMaterialBelowFeet_Parms;

	this->ProcessEvent ( pFnGetMaterialBelowFeet, &GetMaterialBelowFeet_Parms, NULL );

	return GetMaterialBelowFeet_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.GetMaterialBelowFeetByLoc
// [0x00820102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 TestLocation                   ( CPF_Parm )

struct FName ATrPlayerPawn::GetMaterialBelowFeetByLoc ( struct FVector TestLocation )
{
	static UFunction* pFnGetMaterialBelowFeetByLoc = NULL;

	if ( ! pFnGetMaterialBelowFeetByLoc )
		pFnGetMaterialBelowFeetByLoc = (UFunction*) UObject::GObjObjects()->Data[ 73061 ];

	ATrPlayerPawn_execGetMaterialBelowFeetByLoc_Parms GetMaterialBelowFeetByLoc_Parms;
	memcpy ( &GetMaterialBelowFeetByLoc_Parms.TestLocation, &TestLocation, 0xC );

	this->ProcessEvent ( pFnGetMaterialBelowFeetByLoc, &GetMaterialBelowFeetByLoc_Parms, NULL );

	return GetMaterialBelowFeetByLoc_Parms.ReturnValue;
};

// Function TribesGame.TrPlayerPawn.UpdateEyeHeight
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPlayerPawn::eventUpdateEyeHeight ( float DeltaTime )
{
	static UFunction* pFnUpdateEyeHeight = NULL;

	if ( ! pFnUpdateEyeHeight )
		pFnUpdateEyeHeight = (UFunction*) UObject::GObjObjects()->Data[ 73046 ];

	ATrPlayerPawn_eventUpdateEyeHeight_Parms UpdateEyeHeight_Parms;
	UpdateEyeHeight_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateEyeHeight, &UpdateEyeHeight_Parms, NULL );
};

// Function TribesGame.TrPlayerPawn.SetCharacterClassFromInfo
// [0x00024102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )
// unsigned long                  bForce                         ( CPF_OptionalParm | CPF_Parm )

void ATrPlayerPawn::SetCharacterClassFromInfo ( class UClass* Info, unsigned long bForce )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 73041 ];

	ATrPlayerPawn_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;
	SetCharacterClassFromInfo_Parms.bForce = bForce;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function TribesGame.TrBotAIController.Possess
// [0x00020002] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ATrBotAIController::Possess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 71811 ];

	ATrBotAIController_execPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function TribesGame.TrBotAIController.StopJetting
// [0x00020002] 
// Parameters infos:

void ATrBotAIController::StopJetting ( )
{
	static UFunction* pFnStopJetting = NULL;

	if ( ! pFnStopJetting )
		pFnStopJetting = (UFunction*) UObject::GObjObjects()->Data[ 71809 ];

	ATrBotAIController_execStopJetting_Parms StopJetting_Parms;

	this->ProcessEvent ( pFnStopJetting, &StopJetting_Parms, NULL );
};

// Function TribesGame.TrBotAIController.StartJetting
// [0x00020002] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// float                          Magnitude                      ( CPF_Parm )

void ATrBotAIController::StartJetting ( struct FVector Direction, float Magnitude )
{
	static UFunction* pFnStartJetting = NULL;

	if ( ! pFnStartJetting )
		pFnStartJetting = (UFunction*) UObject::GObjObjects()->Data[ 71804 ];

	ATrBotAIController_execStartJetting_Parms StartJetting_Parms;
	memcpy ( &StartJetting_Parms.Direction, &Direction, 0xC );
	StartJetting_Parms.Magnitude = Magnitude;

	this->ProcessEvent ( pFnStartJetting, &StartJetting_Parms, NULL );
};

// Function TribesGame.TrBotAIController.OnAIMoveToActor
// [0x00020002] 
// Parameters infos:
// class USeqAct_AIMoveToActor*   Action                         ( CPF_Parm )

void ATrBotAIController::OnAIMoveToActor ( class USeqAct_AIMoveToActor* Action )
{
	static UFunction* pFnOnAIMoveToActor = NULL;

	if ( ! pFnOnAIMoveToActor )
		pFnOnAIMoveToActor = (UFunction*) UObject::GObjObjects()->Data[ 71802 ];

	ATrBotAIController_execOnAIMoveToActor_Parms OnAIMoveToActor_Parms;
	OnAIMoveToActor_Parms.Action = Action;

	this->ProcessEvent ( pFnOnAIMoveToActor, &OnAIMoveToActor_Parms, NULL );
};

// Function TribesGame.TrBotAIController.OnAIStopSkiing
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_AIStopSkiing*  Action                         ( CPF_Parm )

void ATrBotAIController::OnAIStopSkiing ( class UTrSeqAct_AIStopSkiing* Action )
{
	static UFunction* pFnOnAIStopSkiing = NULL;

	if ( ! pFnOnAIStopSkiing )
		pFnOnAIStopSkiing = (UFunction*) UObject::GObjObjects()->Data[ 71798 ];

	ATrBotAIController_execOnAIStopSkiing_Parms OnAIStopSkiing_Parms;
	OnAIStopSkiing_Parms.Action = Action;

	this->ProcessEvent ( pFnOnAIStopSkiing, &OnAIStopSkiing_Parms, NULL );
};

// Function TribesGame.TrBotAIController.OnAIStartSkiing
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_AIStartSkiing* Action                         ( CPF_Parm )

void ATrBotAIController::OnAIStartSkiing ( class UTrSeqAct_AIStartSkiing* Action )
{
	static UFunction* pFnOnAIStartSkiing = NULL;

	if ( ! pFnOnAIStartSkiing )
		pFnOnAIStartSkiing = (UFunction*) UObject::GObjObjects()->Data[ 71793 ];

	ATrBotAIController_execOnAIStartSkiing_Parms OnAIStartSkiing_Parms;
	OnAIStartSkiing_Parms.Action = Action;

	this->ProcessEvent ( pFnOnAIStartSkiing, &OnAIStartSkiing_Parms, NULL );
};

// Function TribesGame.TrBotAIController.OnAIStopJetting
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_AIStopJetting* Action                         ( CPF_Parm )

void ATrBotAIController::OnAIStopJetting ( class UTrSeqAct_AIStopJetting* Action )
{
	static UFunction* pFnOnAIStopJetting = NULL;

	if ( ! pFnOnAIStopJetting )
		pFnOnAIStopJetting = (UFunction*) UObject::GObjObjects()->Data[ 71789 ];

	ATrBotAIController_execOnAIStopJetting_Parms OnAIStopJetting_Parms;
	OnAIStopJetting_Parms.Action = Action;

	this->ProcessEvent ( pFnOnAIStopJetting, &OnAIStopJetting_Parms, NULL );
};

// Function TribesGame.TrBotAIController.OnAIStartJetting
// [0x00020002] 
// Parameters infos:
// class UTrSeqAct_AIStartJetting* Action                         ( CPF_Parm )

void ATrBotAIController::OnAIStartJetting ( class UTrSeqAct_AIStartJetting* Action )
{
	static UFunction* pFnOnAIStartJetting = NULL;

	if ( ! pFnOnAIStartJetting )
		pFnOnAIStartJetting = (UFunction*) UObject::GObjObjects()->Data[ 71783 ];

	ATrBotAIController_execOnAIStartJetting_Parms OnAIStartJetting_Parms;
	OnAIStartJetting_Parms.Action = Action;

	this->ProcessEvent ( pFnOnAIStartJetting, &OnAIStartJetting_Parms, NULL );
};

// Function TribesGame.TrActorFactoryVehicle.PostCreateActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  NewActor                       ( CPF_Parm )

void UTrActorFactoryVehicle::eventPostCreateActor ( class AActor* NewActor )
{
	static UFunction* pFnPostCreateActor = NULL;

	if ( ! pFnPostCreateActor )
		pFnPostCreateActor = (UFunction*) UObject::GObjObjects()->Data[ 65916 ];

	UTrActorFactoryVehicle_eventPostCreateActor_Parms PostCreateActor_Parms;
	PostCreateActor_Parms.NewActor = NewActor;

	this->ProcessEvent ( pFnPostCreateActor, &PostCreateActor_Parms, NULL );
};

// Function TribesGame.TrAnnouncer.AnnouncementFinished
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void ATrAnnouncer::AnnouncementFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnAnnouncementFinished = NULL;

	if ( ! pFnAnnouncementFinished )
		pFnAnnouncementFinished = (UFunction*) UObject::GObjObjects()->Data[ 66169 ];

	ATrAnnouncer_execAnnouncementFinished_Parms AnnouncementFinished_Parms;
	AnnouncementFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnAnnouncementFinished, &AnnouncementFinished_Parms, NULL );
};

// Function TribesGame.TrAnnouncer.PlayAnnouncement
// [0x00020002] 
// Parameters infos:
// class USoundCue*               AnnouncementCue                ( CPF_Parm )
// unsigned long                  bPlayRightNow                  ( CPF_Parm )

void ATrAnnouncer::PlayAnnouncement ( class USoundCue* AnnouncementCue, unsigned long bPlayRightNow )
{
	static UFunction* pFnPlayAnnouncement = NULL;

	if ( ! pFnPlayAnnouncement )
		pFnPlayAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 66166 ];

	ATrAnnouncer_execPlayAnnouncement_Parms PlayAnnouncement_Parms;
	PlayAnnouncement_Parms.AnnouncementCue = AnnouncementCue;
	PlayAnnouncement_Parms.bPlayRightNow = bPlayRightNow;

	this->ProcessEvent ( pFnPlayAnnouncement, &PlayAnnouncement_Parms, NULL );
};

// Function TribesGame.TrAnnouncer.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrAnnouncer::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 66165 ];

	ATrAnnouncer_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrAnnouncer.Destroyed
// [0x00020002] 
// Parameters infos:

void ATrAnnouncer::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 66164 ];

	ATrAnnouncer_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrArenaMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrArenaMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 66189 ];

	UTrArenaMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrArenaMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrArenaMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 66182 ];

	UTrArenaMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrArenaStats.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrArenaStats::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 66267 ];

	UTrArenaStats_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrArenaStats.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrArenaStats::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 66261 ];

	UTrArenaStats_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrArenaStats.UpdateTime
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrArenaStats::UpdateTime ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 66258 ];

	UTrArenaStats_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function TribesGame.TrArenaStats.UpdateRound
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrArenaStats::UpdateRound ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateRound = NULL;

	if ( ! pFnUpdateRound )
		pFnUpdateRound = (UFunction*) UObject::GObjObjects()->Data[ 66251 ];

	UTrArenaStats_execUpdateRound_Parms UpdateRound_Parms;
	UpdateRound_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateRound, &UpdateRound_Parms, NULL );
};

// Function TribesGame.TrArenaStats.SetManGraphicState
// [0x00020002] 
// Parameters infos:
// unsigned long                  bFriendly                      ( CPF_Parm )
// int                            Index                          ( CPF_Parm )
// unsigned char                  NewState                       ( CPF_Parm )

void UTrArenaStats::SetManGraphicState ( unsigned long bFriendly, int Index, unsigned char NewState )
{
	static UFunction* pFnSetManGraphicState = NULL;

	if ( ! pFnSetManGraphicState )
		pFnSetManGraphicState = (UFunction*) UObject::GObjObjects()->Data[ 66243 ];

	UTrArenaStats_execSetManGraphicState_Parms SetManGraphicState_Parms;
	SetManGraphicState_Parms.bFriendly = bFriendly;
	SetManGraphicState_Parms.Index = Index;
	SetManGraphicState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetManGraphicState, &SetManGraphicState_Parms, NULL );
};

// Function TribesGame.TrArenaStats.UpdateTeamScore
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrArenaStats::UpdateTeamScore ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTeamScore = NULL;

	if ( ! pFnUpdateTeamScore )
		pFnUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 66233 ];

	UTrArenaStats_execUpdateTeamScore_Parms UpdateTeamScore_Parms;
	UpdateTeamScore_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTeamScore, &UpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrArenaStats.UpdateTeam
// [0x00020002] 
// Parameters infos:

void UTrArenaStats::UpdateTeam ( )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 66232 ];

	UTrArenaStats_execUpdateTeam_Parms UpdateTeam_Parms;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );
};

// Function TribesGame.TrArenaStats.Tick
// [0x00020002] 
// Parameters infos:

void UTrArenaStats::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 66230 ];

	UTrArenaStats_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrArenaStats.Hide
// [0x00020002] 
// Parameters infos:

void UTrArenaStats::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 66229 ];

	UTrArenaStats_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrArenaStats.Show
// [0x00020002] 
// Parameters infos:

void UTrArenaStats::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 66227 ];

	UTrArenaStats_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrArenaStats.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrArenaStats::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 66222 ];

	UTrArenaStats_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrEffect.CanBeApplied
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )

bool UTrEffect::CanBeApplied ( class AActor* Target )
{
	static UFunction* pFnCanBeApplied = NULL;

	if ( ! pFnCanBeApplied )
		pFnCanBeApplied = (UFunction*) UObject::GObjObjects()->Data[ 86174 ];

	UTrEffect_execCanBeApplied_Parms CanBeApplied_Parms;
	CanBeApplied_Parms.Target = Target;

	this->ProcessEvent ( pFnCanBeApplied, &CanBeApplied_Parms, NULL );

	return CanBeApplied_Parms.ReturnValue;
};

// Function TribesGame.TrEffect.Remove
// [0x00020000] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86172 ];

	UTrEffect_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect.Apply
// [0x00024000] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86169 ];

	UTrEffect_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrValueModifier.LogModifiedValues
// [0x00020100] 
// Parameters infos:

void UTrValueModifier::LogModifiedValues ( )
{
	static UFunction* pFnLogModifiedValues = NULL;

	if ( ! pFnLogModifiedValues )
		pFnLogModifiedValues = (UFunction*) UObject::GObjObjects()->Data[ 113036 ];

	UTrValueModifier_execLogModifiedValues_Parms LogModifiedValues_Parms;

	this->ProcessEvent ( pFnLogModifiedValues, &LogModifiedValues_Parms, NULL );
};

// Function TribesGame.TrValueModifier.MergeModification
// [0x00020102] 
// Parameters infos:
// int                            ModType                        ( CPF_Parm )
// float                          Value                          ( CPF_Parm )

void UTrValueModifier::MergeModification ( int ModType, float Value )
{
	static UFunction* pFnMergeModification = NULL;

	if ( ! pFnMergeModification )
		pFnMergeModification = (UFunction*) UObject::GObjObjects()->Data[ 113033 ];

	UTrValueModifier_execMergeModification_Parms MergeModification_Parms;
	MergeModification_Parms.ModType = ModType;
	MergeModification_Parms.Value = Value;

	this->ProcessEvent ( pFnMergeModification, &MergeModification_Parms, NULL );
};

// Function TribesGame.TrValueModifier.MergeClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ModifierClassToMerge           ( CPF_Parm )

void UTrValueModifier::MergeClass ( class UClass* ModifierClassToMerge )
{
	static UFunction* pFnMergeClass = NULL;

	if ( ! pFnMergeClass )
		pFnMergeClass = (UFunction*) UObject::GObjObjects()->Data[ 113031 ];

	UTrValueModifier_execMergeClass_Parms MergeClass_Parms;
	MergeClass_Parms.ModifierClassToMerge = ModifierClassToMerge;

	this->ProcessEvent ( pFnMergeClass, &MergeClass_Parms, NULL );
};

// Function TribesGame.TrValueModifier.Merge
// [0x00020102] 
// Parameters infos:
// class UTrValueModifier*        ModifierToMerge                ( CPF_Parm )

void UTrValueModifier::Merge ( class UTrValueModifier* ModifierToMerge )
{
	static UFunction* pFnMerge = NULL;

	if ( ! pFnMerge )
		pFnMerge = (UFunction*) UObject::GObjObjects()->Data[ 113029 ];

	UTrValueModifier_execMerge_Parms Merge_Parms;
	Merge_Parms.ModifierToMerge = ModifierToMerge;

	this->ProcessEvent ( pFnMerge, &Merge_Parms, NULL );
};

// Function TribesGame.TrValueModifier.Reset
// [0x00020102] 
// Parameters infos:

void UTrValueModifier::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 113028 ];

	UTrValueModifier_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.ServerAutoFireWeapon
// [0x002200C2] 
// Parameters infos:
// unsigned char                  EquipPoint                     ( CPF_Parm )

void ATrInventoryManager::ServerAutoFireWeapon ( unsigned char EquipPoint )
{
	static UFunction* pFnServerAutoFireWeapon = NULL;

	if ( ! pFnServerAutoFireWeapon )
		pFnServerAutoFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 97209 ];

	ATrInventoryManager_execServerAutoFireWeapon_Parms ServerAutoFireWeapon_Parms;
	ServerAutoFireWeapon_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnServerAutoFireWeapon, &ServerAutoFireWeapon_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.SwitchToPreviousWeapon
// [0x00020102] 
// Parameters infos:

void ATrInventoryManager::SwitchToPreviousWeapon ( )
{
	static UFunction* pFnSwitchToPreviousWeapon = NULL;

	if ( ! pFnSwitchToPreviousWeapon )
		pFnSwitchToPreviousWeapon = (UFunction*) UObject::GObjObjects()->Data[ 97208 ];

	ATrInventoryManager_execSwitchToPreviousWeapon_Parms SwitchToPreviousWeapon_Parms;

	this->ProcessEvent ( pFnSwitchToPreviousWeapon, &SwitchToPreviousWeapon_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.SwitchWeaponByEquipPoint
// [0x00020102] 
// Parameters infos:
// unsigned char                  EquipPoint                     ( CPF_Parm )

void ATrInventoryManager::SwitchWeaponByEquipPoint ( unsigned char EquipPoint )
{
	static UFunction* pFnSwitchWeaponByEquipPoint = NULL;

	if ( ! pFnSwitchWeaponByEquipPoint )
		pFnSwitchWeaponByEquipPoint = (UFunction*) UObject::GObjObjects()->Data[ 97204 ];

	ATrInventoryManager_execSwitchWeaponByEquipPoint_Parms SwitchWeaponByEquipPoint_Parms;
	SwitchWeaponByEquipPoint_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnSwitchWeaponByEquipPoint, &SwitchWeaponByEquipPoint_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.AutoFireWeapon
// [0x00020102] 
// Parameters infos:
// unsigned char                  EquipPoint                     ( CPF_Parm )

void ATrInventoryManager::AutoFireWeapon ( unsigned char EquipPoint )
{
	static UFunction* pFnAutoFireWeapon = NULL;

	if ( ! pFnAutoFireWeapon )
		pFnAutoFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 97199 ];

	ATrInventoryManager_execAutoFireWeapon_Parms AutoFireWeapon_Parms;
	AutoFireWeapon_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnAutoFireWeapon, &AutoFireWeapon_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.RemoveFromInventory
// [0x00020102] 
// Parameters infos:
// class AInventory*              ItemToRemove                   ( CPF_Parm )

void ATrInventoryManager::RemoveFromInventory ( class AInventory* ItemToRemove )
{
	static UFunction* pFnRemoveFromInventory = NULL;

	if ( ! pFnRemoveFromInventory )
		pFnRemoveFromInventory = (UFunction*) UObject::GObjObjects()->Data[ 97196 ];

	ATrInventoryManager_execRemoveFromInventory_Parms RemoveFromInventory_Parms;
	RemoveFromInventory_Parms.ItemToRemove = ItemToRemove;

	this->ProcessEvent ( pFnRemoveFromInventory, &RemoveFromInventory_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.AddInventory
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AInventory*              NewItem                        ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

bool ATrInventoryManager::AddInventory ( class AInventory* NewItem, unsigned long bDoNotActivate )
{
	static UFunction* pFnAddInventory = NULL;

	if ( ! pFnAddInventory )
		pFnAddInventory = (UFunction*) UObject::GObjObjects()->Data[ 76408 ];

	ATrInventoryManager_execAddInventory_Parms AddInventory_Parms;
	AddInventory_Parms.NewItem = NewItem;
	AddInventory_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnAddInventory, &AddInventory_Parms, NULL );

	return AddInventory_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryManager.SetPendingWeapon
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 DesiredWeapon                  ( CPF_Parm )

void ATrInventoryManager::SetPendingWeapon ( class AWeapon* DesiredWeapon )
{
	static UFunction* pFnSetPendingWeapon = NULL;

	if ( ! pFnSetPendingWeapon )
		pFnSetPendingWeapon = (UFunction*) UObject::GObjObjects()->Data[ 97187 ];

	ATrInventoryManager_execSetPendingWeapon_Parms SetPendingWeapon_Parms;
	SetPendingWeapon_Parms.DesiredWeapon = DesiredWeapon;

	this->ProcessEvent ( pFnSetPendingWeapon, &SetPendingWeapon_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.AdjustWeapon
// [0x00020102] 
// Parameters infos:
// int                            NewOffset                      ( CPF_Parm )

void ATrInventoryManager::AdjustWeapon ( int NewOffset )
{
	static UFunction* pFnAdjustWeapon = NULL;

	if ( ! pFnAdjustWeapon )
		pFnAdjustWeapon = (UFunction*) UObject::GObjObjects()->Data[ 97180 ];

	ATrInventoryManager_execAdjustWeapon_Parms AdjustWeapon_Parms;
	AdjustWeapon_Parms.NewOffset = NewOffset;

	this->ProcessEvent ( pFnAdjustWeapon, &AdjustWeapon_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.DiscardEquippedDeployable
// [0x00020102] 
// Parameters infos:

void ATrInventoryManager::DiscardEquippedDeployable ( )
{
	static UFunction* pFnDiscardEquippedDeployable = NULL;

	if ( ! pFnDiscardEquippedDeployable )
		pFnDiscardEquippedDeployable = (UFunction*) UObject::GObjObjects()->Data[ 97178 ];

	ATrInventoryManager_execDiscardEquippedDeployable_Parms DiscardEquippedDeployable_Parms;

	this->ProcessEvent ( pFnDiscardEquippedDeployable, &DiscardEquippedDeployable_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.TrGetWeaponList
// [0x00424102] 
// Parameters infos:
// unsigned long                  bInhandOnly                    ( CPF_OptionalParm | CPF_Parm )
// TArray< class ATrDevice* >     WeaponList                     ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ATrInventoryManager::TrGetWeaponList ( unsigned long bInhandOnly, TArray< class ATrDevice* >* WeaponList )
{
	static UFunction* pFnTrGetWeaponList = NULL;

	if ( ! pFnTrGetWeaponList )
		pFnTrGetWeaponList = (UFunction*) UObject::GObjObjects()->Data[ 97173 ];

	ATrInventoryManager_execTrGetWeaponList_Parms TrGetWeaponList_Parms;
	TrGetWeaponList_Parms.bInhandOnly = bInhandOnly;

	this->ProcessEvent ( pFnTrGetWeaponList, &TrGetWeaponList_Parms, NULL );

	if ( WeaponList )
		memcpy ( WeaponList, &TrGetWeaponList_Parms.WeaponList, 0xC );
};

// Function TribesGame.TrInventoryManager.GetDeviceByWeaponId
// [0x00020102] 
// Parameters infos:
// class ATrDevice*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            WeaponId                       ( CPF_Parm )

class ATrDevice* ATrInventoryManager::GetDeviceByWeaponId ( int WeaponId )
{
	static UFunction* pFnGetDeviceByWeaponId = NULL;

	if ( ! pFnGetDeviceByWeaponId )
		pFnGetDeviceByWeaponId = (UFunction*) UObject::GObjObjects()->Data[ 97167 ];

	ATrInventoryManager_execGetDeviceByWeaponId_Parms GetDeviceByWeaponId_Parms;
	GetDeviceByWeaponId_Parms.WeaponId = WeaponId;

	this->ProcessEvent ( pFnGetDeviceByWeaponId, &GetDeviceByWeaponId_Parms, NULL );

	return GetDeviceByWeaponId_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryManager.GetDeviceByWeaponClass
// [0x00020102] 
// Parameters infos:
// class ATrDevice*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  DeviceClass                    ( CPF_Parm )

class ATrDevice* ATrInventoryManager::GetDeviceByWeaponClass ( class UClass* DeviceClass )
{
	static UFunction* pFnGetDeviceByWeaponClass = NULL;

	if ( ! pFnGetDeviceByWeaponClass )
		pFnGetDeviceByWeaponClass = (UFunction*) UObject::GObjObjects()->Data[ 97161 ];

	ATrInventoryManager_execGetDeviceByWeaponClass_Parms GetDeviceByWeaponClass_Parms;
	GetDeviceByWeaponClass_Parms.DeviceClass = DeviceClass;

	this->ProcessEvent ( pFnGetDeviceByWeaponClass, &GetDeviceByWeaponClass_Parms, NULL );

	return GetDeviceByWeaponClass_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryManager.GetDeviceByEquipPoint
// [0x00020102] 
// Parameters infos:
// class ATrDevice*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  EquipPoint                     ( CPF_Parm )

class ATrDevice* ATrInventoryManager::GetDeviceByEquipPoint ( unsigned char EquipPoint )
{
	static UFunction* pFnGetDeviceByEquipPoint = NULL;

	if ( ! pFnGetDeviceByEquipPoint )
		pFnGetDeviceByEquipPoint = (UFunction*) UObject::GObjObjects()->Data[ 72225 ];

	ATrInventoryManager_execGetDeviceByEquipPoint_Parms GetDeviceByEquipPoint_Parms;
	GetDeviceByEquipPoint_Parms.EquipPoint = EquipPoint;

	this->ProcessEvent ( pFnGetDeviceByEquipPoint, &GetDeviceByEquipPoint_Parms, NULL );

	return GetDeviceByEquipPoint_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryManager.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrInventoryManager::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 97154 ];

	ATrInventoryManager_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrInventoryManager.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrInventoryManager::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 97153 ];

	ATrInventoryManager_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Tracer::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107306 ];

	ATrProj_Tracer_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.WakeProjectile
// [0x00020102] 
// Parameters infos:

void ATrProj_Tracer::WakeProjectile ( )
{
	static UFunction* pFnWakeProjectile = NULL;

	if ( ! pFnWakeProjectile )
		pFnWakeProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107305 ];

	ATrProj_Tracer_execWakeProjectile_Parms WakeProjectile_Parms;

	this->ProcessEvent ( pFnWakeProjectile, &WakeProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.Reset
// [0x00020002] 
// Parameters infos:

void ATrProj_Tracer::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 107304 ];

	ATrProj_Tracer_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.Recycle
// [0x00020002] 
// Parameters infos:

void ATrProj_Tracer::Recycle ( )
{
	static UFunction* pFnRecycle = NULL;

	if ( ! pFnRecycle )
		pFnRecycle = (UFunction*) UObject::GObjObjects()->Data[ 107303 ];

	ATrProj_Tracer_execRecycle_Parms Recycle_Parms;

	this->ProcessEvent ( pFnRecycle, &Recycle_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_Tracer::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 107300 ];

	ATrProj_Tracer_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.Tick
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrProj_Tracer::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 107297 ];

	ATrProj_Tracer_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.OutsideWorldBounds
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProj_Tracer::eventOutsideWorldBounds ( )
{
	static UFunction* pFnOutsideWorldBounds = NULL;

	if ( ! pFnOutsideWorldBounds )
		pFnOutsideWorldBounds = (UFunction*) UObject::GObjObjects()->Data[ 107296 ];

	ATrProj_Tracer_eventOutsideWorldBounds_Parms OutsideWorldBounds_Parms;

	this->ProcessEvent ( pFnOutsideWorldBounds, &OutsideWorldBounds_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.ScaleUpFinishedNotify
// [0x00020102] 
// Parameters infos:

void ATrProj_Tracer::ScaleUpFinishedNotify ( )
{
	static UFunction* pFnScaleUpFinishedNotify = NULL;

	if ( ! pFnScaleUpFinishedNotify )
		pFnScaleUpFinishedNotify = (UFunction*) UObject::GObjObjects()->Data[ 107295 ];

	ATrProj_Tracer_execScaleUpFinishedNotify_Parms ScaleUpFinishedNotify_Parms;

	this->ProcessEvent ( pFnScaleUpFinishedNotify, &ScaleUpFinishedNotify_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.ScaleDownFinishedNotify
// [0x00020102] 
// Parameters infos:

void ATrProj_Tracer::ScaleDownFinishedNotify ( )
{
	static UFunction* pFnScaleDownFinishedNotify = NULL;

	if ( ! pFnScaleDownFinishedNotify )
		pFnScaleDownFinishedNotify = (UFunction*) UObject::GObjObjects()->Data[ 107294 ];

	ATrProj_Tracer_execScaleDownFinishedNotify_Parms ScaleDownFinishedNotify_Parms;

	this->ProcessEvent ( pFnScaleDownFinishedNotify, &ScaleDownFinishedNotify_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.KillProjectile
// [0x00020102] 
// Parameters infos:

void ATrProj_Tracer::KillProjectile ( )
{
	static UFunction* pFnKillProjectile = NULL;

	if ( ! pFnKillProjectile )
		pFnKillProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107293 ];

	ATrProj_Tracer_execKillProjectile_Parms KillProjectile_Parms;

	this->ProcessEvent ( pFnKillProjectile, &KillProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.InitTracer
// [0x00820002] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )

void ATrProj_Tracer::InitTracer ( struct FVector Start, struct FVector End )
{
	static UFunction* pFnInitTracer = NULL;

	if ( ! pFnInitTracer )
		pFnInitTracer = (UFunction*) UObject::GObjObjects()->Data[ 107288 ];

	ATrProj_Tracer_execInitTracer_Parms InitTracer_Parms;
	memcpy ( &InitTracer_Parms.Start, &Start, 0xC );
	memcpy ( &InitTracer_Parms.End, &End, 0xC );

	this->ProcessEvent ( pFnInitTracer, &InitTracer_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.CalcTracerAccel
// [0x00880102] 
// Parameters infos:

void ATrProj_Tracer::CalcTracerAccel ( )
{
	static UFunction* pFnCalcTracerAccel = NULL;

	if ( ! pFnCalcTracerAccel )
		pFnCalcTracerAccel = (UFunction*) UObject::GObjObjects()->Data[ 107286 ];

	ATrProj_Tracer_execCalcTracerAccel_Parms CalcTracerAccel_Parms;

	this->ProcessEvent ( pFnCalcTracerAccel, &CalcTracerAccel_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrProj_Tracer::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 107284 ];

	ATrProj_Tracer_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrProj_Tracer.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_Tracer::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107283 ];

	ATrProj_Tracer_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrObjectPool.GetTracer
// [0x00020103] ( FUNC_Final )
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  TracerType                     ( CPF_Parm )
// unsigned char                  ActiveReloadTier               ( CPF_Parm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )

class ATrProj_Tracer* ATrObjectPool::GetTracer ( unsigned char TracerType, unsigned char ActiveReloadTier, struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnGetTracer = NULL;

	if ( ! pFnGetTracer )
		pFnGetTracer = (UFunction*) UObject::GObjObjects()->Data[ 67058 ];

	ATrObjectPool_execGetTracer_Parms GetTracer_Parms;
	GetTracer_Parms.TracerType = TracerType;
	GetTracer_Parms.ActiveReloadTier = ActiveReloadTier;
	memcpy ( &GetTracer_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &GetTracer_Parms.SpawnRotation, &SpawnRotation, 0xC );

	this->ProcessEvent ( pFnGetTracer, &GetTracer_Parms, NULL );

	return GetTracer_Parms.ReturnValue;
};

// Function TribesGame.TrObjectPool.CreateTracer
// [0x00820103] ( FUNC_Final )
// Parameters infos:
// unsigned char                  TracerType                     ( CPF_Parm )
// class UClass*                  TracerClass                    ( CPF_Parm )
// int                            Idx                            ( CPF_Parm )
// unsigned long                  bForceCreate                   ( CPF_Parm )

void ATrObjectPool::CreateTracer ( unsigned char TracerType, class UClass* TracerClass, int Idx, unsigned long bForceCreate )
{
	static UFunction* pFnCreateTracer = NULL;

	if ( ! pFnCreateTracer )
		pFnCreateTracer = (UFunction*) UObject::GObjObjects()->Data[ 99355 ];

	ATrObjectPool_execCreateTracer_Parms CreateTracer_Parms;
	CreateTracer_Parms.TracerType = TracerType;
	CreateTracer_Parms.TracerClass = TracerClass;
	CreateTracer_Parms.Idx = Idx;
	CreateTracer_Parms.bForceCreate = bForceCreate;

	this->ProcessEvent ( pFnCreateTracer, &CreateTracer_Parms, NULL );
};

// Function TribesGame.TrObjectPool.CreateTracers
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ATrObjectPool::CreateTracers ( )
{
	static UFunction* pFnCreateTracers = NULL;

	if ( ! pFnCreateTracers )
		pFnCreateTracers = (UFunction*) UObject::GObjObjects()->Data[ 99350 ];

	ATrObjectPool_execCreateTracers_Parms CreateTracers_Parms;

	this->ProcessEvent ( pFnCreateTracers, &CreateTracers_Parms, NULL );
};

// Function TribesGame.TrObjectPool.CleanupTracers
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ATrObjectPool::CleanupTracers ( )
{
	static UFunction* pFnCleanupTracers = NULL;

	if ( ! pFnCleanupTracers )
		pFnCleanupTracers = (UFunction*) UObject::GObjObjects()->Data[ 99351 ];

	ATrObjectPool_execCleanupTracers_Parms CleanupTracers_Parms;

	this->ProcessEvent ( pFnCleanupTracers, &CleanupTracers_Parms, NULL );
};

// Function TribesGame.TrObjectPool.CleanUpPools
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ATrObjectPool::CleanUpPools ( )
{
	static UFunction* pFnCleanUpPools = NULL;

	if ( ! pFnCleanUpPools )
		pFnCleanUpPools = (UFunction*) UObject::GObjObjects()->Data[ 99349 ];

	ATrObjectPool_execCleanUpPools_Parms CleanUpPools_Parms;

	this->ProcessEvent ( pFnCleanUpPools, &CleanUpPools_Parms, NULL );
};

// Function TribesGame.TrObjectPool.CreatePools
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ATrObjectPool::CreatePools ( )
{
	static UFunction* pFnCreatePools = NULL;

	if ( ! pFnCreatePools )
		pFnCreatePools = (UFunction*) UObject::GObjObjects()->Data[ 99347 ];

	ATrObjectPool_execCreatePools_Parms CreatePools_Parms;

	this->ProcessEvent ( pFnCreatePools, &CreatePools_Parms, NULL );
};

// Function TribesGame.TrObjectPool.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrObjectPool::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 99348 ];

	ATrObjectPool_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrObjectPool.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrObjectPool::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 99346 ];

	ATrObjectPool_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_ClientTracer.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_ClientTracer::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107340 ];

	ATrProj_ClientTracer_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_ClientTracer.GetExplosionSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )
// class AActor*                  HitActor                       ( CPF_Parm )

class USoundCue* ATrProj_ClientTracer::GetExplosionSound ( class UPhysicalMaterial* HitMaterial, class AActor* HitActor )
{
	static UFunction* pFnGetExplosionSound = NULL;

	if ( ! pFnGetExplosionSound )
		pFnGetExplosionSound = (UFunction*) UObject::GObjObjects()->Data[ 107332 ];

	ATrProj_ClientTracer_execGetExplosionSound_Parms GetExplosionSound_Parms;
	GetExplosionSound_Parms.HitMaterial = HitMaterial;
	GetExplosionSound_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetExplosionSound, &GetExplosionSound_Parms, NULL );

	return GetExplosionSound_Parms.ReturnValue;
};

// Function TribesGame.TrProj_ClientTracer.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_ClientTracer::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107329 ];

	ATrProj_ClientTracer_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.EnableHelpText
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrHelpTextManager::EnableHelpText ( unsigned long bEnabled )
{
	static UFunction* pFnEnableHelpText = NULL;

	if ( ! pFnEnableHelpText )
		pFnEnableHelpText = (UFunction*) UObject::GObjObjects()->Data[ 69602 ];

	ATrHelpTextManager_execEnableHelpText_Parms EnableHelpText_Parms;
	EnableHelpText_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnEnableHelpText, &EnableHelpText_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.ResetConfig
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::ResetConfig ( )
{
	static UFunction* pFnResetConfig = NULL;

	if ( ! pFnResetConfig )
		pFnResetConfig = (UFunction*) UObject::GObjObjects()->Data[ 69601 ];

	ATrHelpTextManager_execResetConfig_Parms ResetConfig_Parms;

	this->ProcessEvent ( pFnResetConfig, &ResetConfig_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.UpdateTypesToRemoveOnTimers
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrHelpTextManager::UpdateTypesToRemoveOnTimers ( float DeltaTime )
{
	static UFunction* pFnUpdateTypesToRemoveOnTimers = NULL;

	if ( ! pFnUpdateTypesToRemoveOnTimers )
		pFnUpdateTypesToRemoveOnTimers = (UFunction*) UObject::GObjObjects()->Data[ 69598 ];

	ATrHelpTextManager_execUpdateTypesToRemoveOnTimers_Parms UpdateTypesToRemoveOnTimers_Parms;
	UpdateTypesToRemoveOnTimers_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateTypesToRemoveOnTimers, &UpdateTypesToRemoveOnTimers_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.ClearSpotTargetReminderTimer
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::ClearSpotTargetReminderTimer ( )
{
	static UFunction* pFnClearSpotTargetReminderTimer = NULL;

	if ( ! pFnClearSpotTargetReminderTimer )
		pFnClearSpotTargetReminderTimer = (UFunction*) UObject::GObjObjects()->Data[ 69597 ];

	ATrHelpTextManager_execClearSpotTargetReminderTimer_Parms ClearSpotTargetReminderTimer_Parms;

	this->ProcessEvent ( pFnClearSpotTargetReminderTimer, &ClearSpotTargetReminderTimer_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.SpotTargetReminderTimer
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::SpotTargetReminderTimer ( )
{
	static UFunction* pFnSpotTargetReminderTimer = NULL;

	if ( ! pFnSpotTargetReminderTimer )
		pFnSpotTargetReminderTimer = (UFunction*) UObject::GObjObjects()->Data[ 69592 ];

	ATrHelpTextManager_execSpotTargetReminderTimer_Parms SpotTargetReminderTimer_Parms;

	this->ProcessEvent ( pFnSpotTargetReminderTimer, &SpotTargetReminderTimer_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.ClearOffhandReminderTimer
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::ClearOffhandReminderTimer ( )
{
	static UFunction* pFnClearOffhandReminderTimer = NULL;

	if ( ! pFnClearOffhandReminderTimer )
		pFnClearOffhandReminderTimer = (UFunction*) UObject::GObjObjects()->Data[ 69591 ];

	ATrHelpTextManager_execClearOffhandReminderTimer_Parms ClearOffhandReminderTimer_Parms;

	this->ProcessEvent ( pFnClearOffhandReminderTimer, &ClearOffhandReminderTimer_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.OffhandReminderTimer
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::OffhandReminderTimer ( )
{
	static UFunction* pFnOffhandReminderTimer = NULL;

	if ( ! pFnOffhandReminderTimer )
		pFnOffhandReminderTimer = (UFunction*) UObject::GObjObjects()->Data[ 69588 ];

	ATrHelpTextManager_execOffhandReminderTimer_Parms OffhandReminderTimer_Parms;

	this->ProcessEvent ( pFnOffhandReminderTimer, &OffhandReminderTimer_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.UnsuppressedHelpTextsExist
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrHelpTextManager::UnsuppressedHelpTextsExist ( )
{
	static UFunction* pFnUnsuppressedHelpTextsExist = NULL;

	if ( ! pFnUnsuppressedHelpTextsExist )
		pFnUnsuppressedHelpTextsExist = (UFunction*) UObject::GObjObjects()->Data[ 69586 ];

	ATrHelpTextManager_execUnsuppressedHelpTextsExist_Parms UnsuppressedHelpTextsExist_Parms;

	this->ProcessEvent ( pFnUnsuppressedHelpTextsExist, &UnsuppressedHelpTextsExist_Parms, NULL );

	return UnsuppressedHelpTextsExist_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.HelpTextQueueSort
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  A                              ( CPF_Parm )
// unsigned char                  B                              ( CPF_Parm )

int ATrHelpTextManager::HelpTextQueueSort ( unsigned char A, unsigned char B )
{
	static UFunction* pFnHelpTextQueueSort = NULL;

	if ( ! pFnHelpTextQueueSort )
		pFnHelpTextQueueSort = (UFunction*) UObject::GObjObjects()->Data[ 69582 ];

	ATrHelpTextManager_execHelpTextQueueSort_Parms HelpTextQueueSort_Parms;
	HelpTextQueueSort_Parms.A = A;
	HelpTextQueueSort_Parms.B = B;

	this->ProcessEvent ( pFnHelpTextQueueSort, &HelpTextQueueSort_Parms, NULL );

	return HelpTextQueueSort_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.FormatText
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InString                       ( CPF_Parm | CPF_NeedCtorLink )

struct FString ATrHelpTextManager::FormatText ( struct FString InString )
{
	static UFunction* pFnFormatText = NULL;

	if ( ! pFnFormatText )
		pFnFormatText = (UFunction*) UObject::GObjObjects()->Data[ 69572 ];

	ATrHelpTextManager_execFormatText_Parms FormatText_Parms;
	memcpy ( &FormatText_Parms.InString, &InString, 0xC );

	this->ProcessEvent ( pFnFormatText, &FormatText_Parms, NULL );

	return FormatText_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.UpdateHUD
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::UpdateHUD ( )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 69502 ];

	ATrHelpTextManager_execUpdateHUD_Parms UpdateHUD_Parms;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.SuppressHelpText
// [0x00020002] 
// Parameters infos:
// unsigned char                  TypeToSuppress                 ( CPF_Parm )

void ATrHelpTextManager::SuppressHelpText ( unsigned char TypeToSuppress )
{
	static UFunction* pFnSuppressHelpText = NULL;

	if ( ! pFnSuppressHelpText )
		pFnSuppressHelpText = (UFunction*) UObject::GObjObjects()->Data[ 69500 ];

	ATrHelpTextManager_execSuppressHelpText_Parms SuppressHelpText_Parms;
	SuppressHelpText_Parms.TypeToSuppress = TypeToSuppress;

	this->ProcessEvent ( pFnSuppressHelpText, &SuppressHelpText_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.RemoveHelpText
// [0x00824002] 
// Parameters infos:
// unsigned char                  TypeToRemove                   ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoNotSuppress                 ( CPF_OptionalParm | CPF_Parm )

void ATrHelpTextManager::RemoveHelpText ( unsigned char TypeToRemove, float Time, unsigned long bDoNotSuppress )
{
	static UFunction* pFnRemoveHelpText = NULL;

	if ( ! pFnRemoveHelpText )
		pFnRemoveHelpText = (UFunction*) UObject::GObjObjects()->Data[ 69493 ];

	ATrHelpTextManager_execRemoveHelpText_Parms RemoveHelpText_Parms;
	RemoveHelpText_Parms.TypeToRemove = TypeToRemove;
	RemoveHelpText_Parms.Time = Time;
	RemoveHelpText_Parms.bDoNotSuppress = bDoNotSuppress;

	this->ProcessEvent ( pFnRemoveHelpText, &RemoveHelpText_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.RequestHelpText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedType                  ( CPF_Parm )

bool ATrHelpTextManager::RequestHelpText ( unsigned char RequestedType )
{
	static UFunction* pFnRequestHelpText = NULL;

	if ( ! pFnRequestHelpText )
		pFnRequestHelpText = (UFunction*) UObject::GObjObjects()->Data[ 67293 ];

	ATrHelpTextManager_execRequestHelpText_Parms RequestHelpText_Parms;
	RequestHelpText_Parms.RequestedType = RequestedType;

	this->ProcessEvent ( pFnRequestHelpText, &RequestHelpText_Parms, NULL );

	return RequestHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.IsSuppressed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedType                  ( CPF_Parm )

bool ATrHelpTextManager::IsSuppressed ( unsigned char RequestedType )
{
	static UFunction* pFnIsSuppressed = NULL;

	if ( ! pFnIsSuppressed )
		pFnIsSuppressed = (UFunction*) UObject::GObjObjects()->Data[ 69474 ];

	ATrHelpTextManager_execIsSuppressed_Parms IsSuppressed_Parms;
	IsSuppressed_Parms.RequestedType = RequestedType;

	this->ProcessEvent ( pFnIsSuppressed, &IsSuppressed_Parms, NULL );

	return IsSuppressed_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.CheckDestroy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrHelpTextManager::CheckDestroy ( )
{
	static UFunction* pFnCheckDestroy = NULL;

	if ( ! pFnCheckDestroy )
		pFnCheckDestroy = (UFunction*) UObject::GObjObjects()->Data[ 69471 ];

	ATrHelpTextManager_execCheckDestroy_Parms CheckDestroy_Parms;

	this->ProcessEvent ( pFnCheckDestroy, &CheckDestroy_Parms, NULL );

	return CheckDestroy_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrHelpTextManager::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 69469 ];

	ATrHelpTextManager_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.LevelLoadCompleted
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::LevelLoadCompleted ( )
{
	static UFunction* pFnLevelLoadCompleted = NULL;

	if ( ! pFnLevelLoadCompleted )
		pFnLevelLoadCompleted = (UFunction*) UObject::GObjObjects()->Data[ 69439 ];

	ATrHelpTextManager_execLevelLoadCompleted_Parms LevelLoadCompleted_Parms;

	this->ProcessEvent ( pFnLevelLoadCompleted, &LevelLoadCompleted_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.InitHelpTextManager
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::InitHelpTextManager ( )
{
	static UFunction* pFnInitHelpTextManager = NULL;

	if ( ! pFnInitHelpTextManager )
		pFnInitHelpTextManager = (UFunction*) UObject::GObjObjects()->Data[ 69436 ];

	ATrHelpTextManager_execInitHelpTextManager_Parms InitHelpTextManager_Parms;

	this->ProcessEvent ( pFnInitHelpTextManager, &InitHelpTextManager_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 69435 ];

	ATrHelpTextManager_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.GetImpactEffect
// [0x00020102] 
// Parameters infos:
// struct FMaterialImpactEffect   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )

struct FMaterialImpactEffect ATrDeviceAttachment::GetImpactEffect ( class UPhysicalMaterial* HitMaterial )
{
	static UFunction* pFnGetImpactEffect = NULL;

	if ( ! pFnGetImpactEffect )
		pFnGetImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 67730 ];

	ATrDeviceAttachment_execGetImpactEffect_Parms GetImpactEffect_Parms;
	GetImpactEffect_Parms.HitMaterial = HitMaterial;

	this->ProcessEvent ( pFnGetImpactEffect, &GetImpactEffect_Parms, NULL );

	return GetImpactEffect_Parms.ReturnValue;
};

// Function TribesGame.TrDeviceAttachment.PlayImpactSound
// [0x00020102] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// class USoundCue*               SoundToPlay                    ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDeviceAttachment::PlayImpactSound ( class AActor* HitActor, class USoundCue* SoundToPlay, struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactSound = NULL;

	if ( ! pFnPlayImpactSound )
		pFnPlayImpactSound = (UFunction*) UObject::GObjObjects()->Data[ 67724 ];

	ATrDeviceAttachment_execPlayImpactSound_Parms PlayImpactSound_Parms;
	PlayImpactSound_Parms.HitActor = HitActor;
	PlayImpactSound_Parms.SoundToPlay = SoundToPlay;
	memcpy ( &PlayImpactSound_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &PlayImpactSound_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactSound, &PlayImpactSound_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.PlayImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDeviceAttachment::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 67707 ];

	ATrDeviceAttachment_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.PlayReload
// [0x00020102] 
// Parameters infos:

void ATrDeviceAttachment::PlayReload ( )
{
	static UFunction* pFnPlayReload = NULL;

	if ( ! pFnPlayReload )
		pFnPlayReload = (UFunction*) UObject::GObjObjects()->Data[ 67702 ];

	ATrDeviceAttachment_execPlayReload_Parms PlayReload_Parms;

	this->ProcessEvent ( pFnPlayReload, &PlayReload_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.GetTracer
// [0x00020102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// struct FRotator                SpawnRotation                  ( CPF_Parm )

class ATrProj_Tracer* ATrDeviceAttachment::GetTracer ( struct FVector SpawnLocation, struct FRotator SpawnRotation )
{
	static UFunction* pFnGetTracer = NULL;

	if ( ! pFnGetTracer )
		pFnGetTracer = (UFunction*) UObject::GObjObjects()->Data[ 67698 ];

	ATrDeviceAttachment_execGetTracer_Parms GetTracer_Parms;
	memcpy ( &GetTracer_Parms.SpawnLocation, &SpawnLocation, 0xC );
	memcpy ( &GetTracer_Parms.SpawnRotation, &SpawnRotation, 0xC );

	this->ProcessEvent ( pFnGetTracer, &GetTracer_Parms, NULL );

	return GetTracer_Parms.ReturnValue;
};

// Function TribesGame.TrDeviceAttachment.SpawnTracerEffect
// [0x00820102] 
// Parameters infos:
// class ATrProj_Tracer*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// float                          HitDistance                    ( CPF_Parm )

class ATrProj_Tracer* ATrDeviceAttachment::SpawnTracerEffect ( struct FVector HitLocation, float HitDistance )
{
	static UFunction* pFnSpawnTracerEffect = NULL;

	if ( ! pFnSpawnTracerEffect )
		pFnSpawnTracerEffect = (UFunction*) UObject::GObjObjects()->Data[ 67691 ];

	ATrDeviceAttachment_execSpawnTracerEffect_Parms SpawnTracerEffect_Parms;
	memcpy ( &SpawnTracerEffect_Parms.HitLocation, &HitLocation, 0xC );
	SpawnTracerEffect_Parms.HitDistance = HitDistance;

	this->ProcessEvent ( pFnSpawnTracerEffect, &SpawnTracerEffect_Parms, NULL );

	return SpawnTracerEffect_Parms.ReturnValue;
};

// Function TribesGame.TrDeviceAttachment.SpawnTracerBeam
// [0x00020102] 
// Parameters infos:
// struct FVector                 Start                          ( CPF_Parm )
// struct FVector                 End                            ( CPF_Parm )

void ATrDeviceAttachment::SpawnTracerBeam ( struct FVector Start, struct FVector End )
{
	static UFunction* pFnSpawnTracerBeam = NULL;

	if ( ! pFnSpawnTracerBeam )
		pFnSpawnTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 67687 ];

	ATrDeviceAttachment_execSpawnTracerBeam_Parms SpawnTracerBeam_Parms;
	memcpy ( &SpawnTracerBeam_Parms.Start, &Start, 0xC );
	memcpy ( &SpawnTracerBeam_Parms.End, &End, 0xC );

	this->ProcessEvent ( pFnSpawnTracerBeam, &SpawnTracerBeam_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.FirstPersonFireEffects
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 PawnWeapon                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDeviceAttachment::FirstPersonFireEffects ( class AWeapon* PawnWeapon, struct FVector HitLocation )
{
	static UFunction* pFnFirstPersonFireEffects = NULL;

	if ( ! pFnFirstPersonFireEffects )
		pFnFirstPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67682 ];

	ATrDeviceAttachment_execFirstPersonFireEffects_Parms FirstPersonFireEffects_Parms;
	FirstPersonFireEffects_Parms.PawnWeapon = PawnWeapon;
	memcpy ( &FirstPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnFirstPersonFireEffects, &FirstPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.StopThirdPersonFireEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeviceAttachment::eventStopThirdPersonFireEffects ( )
{
	static UFunction* pFnStopThirdPersonFireEffects = NULL;

	if ( ! pFnStopThirdPersonFireEffects )
		pFnStopThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67681 ];

	ATrDeviceAttachment_eventStopThirdPersonFireEffects_Parms StopThirdPersonFireEffects_Parms;

	this->ProcessEvent ( pFnStopThirdPersonFireEffects, &StopThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDeviceAttachment::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67674 ];

	ATrDeviceAttachment_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.ShouldFireTracerBeam
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeviceAttachment::ShouldFireTracerBeam ( )
{
	static UFunction* pFnShouldFireTracerBeam = NULL;

	if ( ! pFnShouldFireTracerBeam )
		pFnShouldFireTracerBeam = (UFunction*) UObject::GObjObjects()->Data[ 67671 ];

	ATrDeviceAttachment_execShouldFireTracerBeam_Parms ShouldFireTracerBeam_Parms;

	this->ProcessEvent ( pFnShouldFireTracerBeam, &ShouldFireTracerBeam_Parms, NULL );

	return ShouldFireTracerBeam_Parms.ReturnValue;
};

// Function TribesGame.TrDeviceAttachment.ShouldFireTracer
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeviceAttachment::ShouldFireTracer ( )
{
	static UFunction* pFnShouldFireTracer = NULL;

	if ( ! pFnShouldFireTracer )
		pFnShouldFireTracer = (UFunction*) UObject::GObjObjects()->Data[ 67668 ];

	ATrDeviceAttachment_execShouldFireTracer_Parms ShouldFireTracer_Parms;

	this->ProcessEvent ( pFnShouldFireTracer, &ShouldFireTracer_Parms, NULL );

	return ShouldFireTracer_Parms.ReturnValue;
};

// Function TribesGame.TrDeviceAttachment.SetPuttingDownWeapon
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNowPuttingDown                ( CPF_Parm )

void ATrDeviceAttachment::SetPuttingDownWeapon ( unsigned long bNowPuttingDown )
{
	static UFunction* pFnSetPuttingDownWeapon = NULL;

	if ( ! pFnSetPuttingDownWeapon )
		pFnSetPuttingDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 67661 ];

	ATrDeviceAttachment_execSetPuttingDownWeapon_Parms SetPuttingDownWeapon_Parms;
	SetPuttingDownWeapon_Parms.bNowPuttingDown = bNowPuttingDown;

	this->ProcessEvent ( pFnSetPuttingDownWeapon, &SetPuttingDownWeapon_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.DetachFrom
// [0x00020102] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )

void ATrDeviceAttachment::DetachFrom ( class USkeletalMeshComponent* MeshCpnt )
{
	static UFunction* pFnDetachFrom = NULL;

	if ( ! pFnDetachFrom )
		pFnDetachFrom = (UFunction*) UObject::GObjObjects()->Data[ 67656 ];

	ATrDeviceAttachment_execDetachFrom_Parms DetachFrom_Parms;
	DetachFrom_Parms.MeshCpnt = MeshCpnt;

	this->ProcessEvent ( pFnDetachFrom, &DetachFrom_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.InitAnims
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrDeviceAttachment::InitAnims ( class ATrPawn* TRP )
{
	static UFunction* pFnInitAnims = NULL;

	if ( ! pFnInitAnims )
		pFnInitAnims = (UFunction*) UObject::GObjObjects()->Data[ 67648 ];

	ATrDeviceAttachment_execInitAnims_Parms InitAnims_Parms;
	InitAnims_Parms.TRP = TRP;

	this->ProcessEvent ( pFnInitAnims, &InitAnims_Parms, NULL );
};

// Function TribesGame.TrDeviceAttachment.AttachTo
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 OwnerPawn                      ( CPF_Parm )

void ATrDeviceAttachment::AttachTo ( class AUTPawn* OwnerPawn )
{
	static UFunction* pFnAttachTo = NULL;

	if ( ! pFnAttachTo )
		pFnAttachTo = (UFunction*) UObject::GObjObjects()->Data[ 67635 ];

	ATrDeviceAttachment_execAttachTo_Parms AttachTo_Parms;
	AttachTo_Parms.OwnerPawn = OwnerPawn;

	this->ProcessEvent ( pFnAttachTo, &AttachTo_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrDroppedPickup::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 86150 ];

	ATrDroppedPickup_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDroppedPickup::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 86148 ];

	ATrDroppedPickup_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.OnCollisionProxyTouched
// [0x00020000] 
// Parameters infos:
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrDroppedPickup::OnCollisionProxyTouched ( class ATrPawn* TRP )
{
	static UFunction* pFnOnCollisionProxyTouched = NULL;

	if ( ! pFnOnCollisionProxyTouched )
		pFnOnCollisionProxyTouched = (UFunction*) UObject::GObjObjects()->Data[ 86123 ];

	ATrDroppedPickup_execOnCollisionProxyTouched_Parms OnCollisionProxyTouched_Parms;
	OnCollisionProxyTouched_Parms.TRP = TRP;

	this->ProcessEvent ( pFnOnCollisionProxyTouched, &OnCollisionProxyTouched_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrDroppedPickup::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 86119 ];

	ATrDroppedPickup_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.DoBounce
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrDroppedPickup::DoBounce ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnDoBounce = NULL;

	if ( ! pFnDoBounce )
		pFnDoBounce = (UFunction*) UObject::GObjObjects()->Data[ 86116 ];

	ATrDroppedPickup_execDoBounce_Parms DoBounce_Parms;
	DoBounce_Parms.Other = Other;
	memcpy ( &DoBounce_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnDoBounce, &DoBounce_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDroppedPickup::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86114 ];

	ATrDroppedPickup_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.GiveTo
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDroppedPickup::GiveTo ( class APawn* P )
{
	static UFunction* pFnGiveTo = NULL;

	if ( ! pFnGiveTo )
		pFnGiveTo = (UFunction*) UObject::GObjObjects()->Data[ 86112 ];

	ATrDroppedPickup_execGiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.P = P;

	this->ProcessEvent ( pFnGiveTo, &GiveTo_Parms, NULL );
};

// Function TribesGame.TrDroppedPickup.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDroppedPickup::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 86111 ];

	ATrDroppedPickup_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDevice_Claymore.ProjectileFire
// [0x00820102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_Claymore::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 80592 ];

	ATrDevice_Claymore_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Claymore.GetPhysicalFireStartLoc
// [0x00824102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrDevice_Claymore::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 80588 ];

	ATrDevice_Claymore_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function TribesGame.TrAttachment_ChainGun.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_ChainGun::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67879 ];

	ATrAttachment_ChainGun_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_ChainGun.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrAttachment_ChainGun::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 67870 ];

	ATrAttachment_ChainGun_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.GetBasePickupAmmoAmount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_ChainGun::GetBasePickupAmmoAmount ( )
{
	static UFunction* pFnGetBasePickupAmmoAmount = NULL;

	if ( ! pFnGetBasePickupAmmoAmount )
		pFnGetBasePickupAmmoAmount = (UFunction*) UObject::GObjObjects()->Data[ 80768 ];

	ATrDevice_ChainGun_execGetBasePickupAmmoAmount_Parms GetBasePickupAmmoAmount_Parms;

	this->ProcessEvent ( pFnGetBasePickupAmmoAmount, &GetBasePickupAmmoAmount_Parms, NULL );

	return GetBasePickupAmmoAmount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_ChainGun.AddCarriedAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice_ChainGun::AddCarriedAmmo ( int Amount )
{
	static UFunction* pFnAddCarriedAmmo = NULL;

	if ( ! pFnAddCarriedAmmo )
		pFnAddCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80765 ];

	ATrDevice_ChainGun_execAddCarriedAmmo_Parms AddCarriedAmmo_Parms;
	AddCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddCarriedAmmo, &AddCarriedAmmo_Parms, NULL );

	return AddCarriedAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_ChainGun.BuffMaxCarriedAmmo
// [0x00020102] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ATrDevice_ChainGun::BuffMaxCarriedAmmo ( int Amount )
{
	static UFunction* pFnBuffMaxCarriedAmmo = NULL;

	if ( ! pFnBuffMaxCarriedAmmo )
		pFnBuffMaxCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 80763 ];

	ATrDevice_ChainGun_execBuffMaxCarriedAmmo_Parms BuffMaxCarriedAmmo_Parms;
	BuffMaxCarriedAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnBuffMaxCarriedAmmo, &BuffMaxCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_ChainGun::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 80762 ];

	ATrDevice_ChainGun_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.OnSwitchToWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_ChainGun::OnSwitchToWeapon ( )
{
	static UFunction* pFnOnSwitchToWeapon = NULL;

	if ( ! pFnOnSwitchToWeapon )
		pFnOnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80761 ];

	ATrDevice_ChainGun_execOnSwitchToWeapon_Parms OnSwitchToWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchToWeapon, &OnSwitchToWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.PlayBuildupAnimation
// [0x00020102] 
// Parameters infos:

void ATrDevice_ChainGun::PlayBuildupAnimation ( )
{
	static UFunction* pFnPlayBuildupAnimation = NULL;

	if ( ! pFnPlayBuildupAnimation )
		pFnPlayBuildupAnimation = (UFunction*) UObject::GObjObjects()->Data[ 80728 ];

	ATrDevice_ChainGun_execPlayBuildupAnimation_Parms PlayBuildupAnimation_Parms;

	this->ProcessEvent ( pFnPlayBuildupAnimation, &PlayBuildupAnimation_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.GetBuildUpTime
// [0x00022102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  PRI                            ( CPF_Parm )
// unsigned long                  bForInterpSpeed                ( CPF_Parm )

float ATrDevice_ChainGun::GetBuildUpTime ( class APlayerReplicationInfo* PRI, unsigned long bForInterpSpeed )
{
	static UFunction* pFnGetBuildUpTime = NULL;

	if ( ! pFnGetBuildUpTime )
		pFnGetBuildUpTime = (UFunction*) UObject::GObjObjects()->Data[ 67876 ];

	ATrDevice_ChainGun_execGetBuildUpTime_Parms GetBuildUpTime_Parms;
	GetBuildUpTime_Parms.PRI = PRI;
	GetBuildUpTime_Parms.bForInterpSpeed = bForInterpSpeed;

	this->ProcessEvent ( pFnGetBuildUpTime, &GetBuildUpTime_Parms, NULL );

	return GetBuildUpTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_ChainGun.UpdateSoundModulation
// [0x00020102] 
// Parameters infos:

void ATrDevice_ChainGun::UpdateSoundModulation ( )
{
	static UFunction* pFnUpdateSoundModulation = NULL;

	if ( ! pFnUpdateSoundModulation )
		pFnUpdateSoundModulation = (UFunction*) UObject::GObjObjects()->Data[ 80720 ];

	ATrDevice_ChainGun_execUpdateSoundModulation_Parms UpdateSoundModulation_Parms;

	this->ProcessEvent ( pFnUpdateSoundModulation, &UpdateSoundModulation_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_ChainGun::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 80718 ];

	ATrDevice_ChainGun_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_ChainGun::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 80715 ];

	ATrDevice_ChainGun_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_ChainGun.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_ChainGun::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 80713 ];

	ATrDevice_ChainGun_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrAttachment_ChainGun_MKD.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_ChainGun_MKD::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 67900 ];

	ATrAttachment_ChainGun_MKD_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_ChainGun_MKD.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrAttachment_ChainGun_MKD::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 67896 ];

	ATrAttachment_ChainGun_MKD_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_CustomEagle.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_CustomEagle::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80810 ];

	ATrDevice_CustomEagle_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_Eagle.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_Eagle::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80849 ];

	ATrDevice_Eagle_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_H1.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_H1::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 80949 ];

	ATrDevice_H1_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_HeavyBoltLauncher::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80981 ];

	ATrDevice_HeavyBoltLauncher_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice_HeavyBoltLauncher::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 80980 ];

	ATrDevice_HeavyBoltLauncher_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_HeavyBoltLauncher::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 80979 ];

	ATrDevice_HeavyBoltLauncher_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_HeavyBoltLauncher::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 80978 ];

	ATrDevice_HeavyBoltLauncher_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_HeavyBoltLauncher::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 80974 ];

	ATrDevice_HeavyBoltLauncher_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.OnAnimPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ATrDevice_HeavyBoltLauncher::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 80972 ];

	ATrDevice_HeavyBoltLauncher_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_HeavyBoltLauncher::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 80970 ];

	ATrDevice_HeavyBoltLauncher_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_HeavyBoltLauncher.SetBoltIdle
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDevice_HeavyBoltLauncher::SetBoltIdle ( unsigned long bEnabled )
{
	static UFunction* pFnSetBoltIdle = NULL;

	if ( ! pFnSetBoltIdle )
		pFnSetBoltIdle = (UFunction*) UObject::GObjObjects()->Data[ 80967 ];

	ATrDevice_HeavyBoltLauncher_execSetBoltIdle_Parms SetBoltIdle_Parms;
	SetBoltIdle_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetBoltIdle, &SetBoltIdle_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_Spinfusor::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 81028 ];

	ATrDevice_Spinfusor_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice_Spinfusor::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 81027 ];

	ATrDevice_Spinfusor_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_Spinfusor::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 81026 ];

	ATrDevice_Spinfusor_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.SetDiscSpinning
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDevice_Spinfusor::SetDiscSpinning ( unsigned long bEnabled )
{
	static UFunction* pFnSetDiscSpinning = NULL;

	if ( ! pFnSetDiscSpinning )
		pFnSetDiscSpinning = (UFunction*) UObject::GObjObjects()->Data[ 81023 ];

	ATrDevice_Spinfusor_execSetDiscSpinning_Parms SetDiscSpinning_Parms;
	SetDiscSpinning_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetDiscSpinning, &SetDiscSpinning_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.SetDiscVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrDevice_Spinfusor::SetDiscVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetDiscVisibility = NULL;

	if ( ! pFnSetDiscVisibility )
		pFnSetDiscVisibility = (UFunction*) UObject::GObjObjects()->Data[ 81021 ];

	ATrDevice_Spinfusor_execSetDiscVisibility_Parms SetDiscVisibility_Parms;
	SetDiscVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetDiscVisibility, &SetDiscVisibility_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_Spinfusor::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 81020 ];

	ATrDevice_Spinfusor_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_Spinfusor::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 81017 ];

	ATrDevice_Spinfusor_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_Spinfusor::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 81013 ];

	ATrDevice_Spinfusor_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.OnAnimPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ATrDevice_Spinfusor::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 81011 ];

	ATrDevice_Spinfusor_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_Spinfusor::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 81009 ];

	ATrDevice_Spinfusor_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_Spinfusor.UpdateReplicatedCarriedAmmo
// [0x00020002] 
// Parameters infos:

void ATrDevice_Spinfusor::UpdateReplicatedCarriedAmmo ( )
{
	static UFunction* pFnUpdateReplicatedCarriedAmmo = NULL;

	if ( ! pFnUpdateReplicatedCarriedAmmo )
		pFnUpdateReplicatedCarriedAmmo = (UFunction*) UObject::GObjObjects()->Data[ 81008 ];

	ATrDevice_Spinfusor_execUpdateReplicatedCarriedAmmo_Parms UpdateReplicatedCarriedAmmo_Parms;

	this->ProcessEvent ( pFnUpdateReplicatedCarriedAmmo, &UpdateReplicatedCarriedAmmo_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_Twinfusor::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 81073 ];

	ATrDevice_Twinfusor_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice_Twinfusor::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 81072 ];

	ATrDevice_Twinfusor_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_Twinfusor::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 81071 ];

	ATrDevice_Twinfusor_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_Twinfusor::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 81070 ];

	ATrDevice_Twinfusor_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.SetDiscSpinning
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDevice_Twinfusor::SetDiscSpinning ( unsigned long bEnabled )
{
	static UFunction* pFnSetDiscSpinning = NULL;

	if ( ! pFnSetDiscSpinning )
		pFnSetDiscSpinning = (UFunction*) UObject::GObjObjects()->Data[ 81067 ];

	ATrDevice_Twinfusor_execSetDiscSpinning_Parms SetDiscSpinning_Parms;
	SetDiscSpinning_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetDiscSpinning, &SetDiscSpinning_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_Twinfusor::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 81063 ];

	ATrDevice_Twinfusor_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.OnAnimPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ATrDevice_Twinfusor::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 81061 ];

	ATrDevice_Twinfusor_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_Twinfusor.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_Twinfusor::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 81059 ];

	ATrDevice_Twinfusor_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrAttachment_LaserTargeter.StopThirdPersonFireEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrAttachment_LaserTargeter::eventStopThirdPersonFireEffects ( )
{
	static UFunction* pFnStopThirdPersonFireEffects = NULL;

	if ( ! pFnStopThirdPersonFireEffects )
		pFnStopThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 68054 ];

	ATrAttachment_LaserTargeter_eventStopThirdPersonFireEffects_Parms StopThirdPersonFireEffects_Parms;

	this->ProcessEvent ( pFnStopThirdPersonFireEffects, &StopThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_LaserTargeter.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_LaserTargeter::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 68052 ];

	ATrAttachment_LaserTargeter_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_LaserTargeter.UpdateLaserEffect
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_LaserTargeter::UpdateLaserEffect ( struct FVector HitLocation )
{
	static UFunction* pFnUpdateLaserEffect = NULL;

	if ( ! pFnUpdateLaserEffect )
		pFnUpdateLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 68050 ];

	ATrAttachment_LaserTargeter_execUpdateLaserEffect_Parms UpdateLaserEffect_Parms;
	memcpy ( &UpdateLaserEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnUpdateLaserEffect, &UpdateLaserEffect_Parms, NULL );
};

// Function TribesGame.TrAttachment_LaserTargeter.SpawnLaserEffect
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_LaserTargeter::SpawnLaserEffect ( struct FVector HitLocation )
{
	static UFunction* pFnSpawnLaserEffect = NULL;

	if ( ! pFnSpawnLaserEffect )
		pFnSpawnLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 68044 ];

	ATrAttachment_LaserTargeter_execSpawnLaserEffect_Parms SpawnLaserEffect_Parms;
	memcpy ( &SpawnLaserEffect_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnLaserEffect, &SpawnLaserEffect_Parms, NULL );
};

// Function TribesGame.TrAttachment_LaserTargeter.KillLaserEffect
// [0x00020102] 
// Parameters infos:

void ATrAttachment_LaserTargeter::KillLaserEffect ( )
{
	static UFunction* pFnKillLaserEffect = NULL;

	if ( ! pFnKillLaserEffect )
		pFnKillLaserEffect = (UFunction*) UObject::GObjObjects()->Data[ 68043 ];

	ATrAttachment_LaserTargeter_execKillLaserEffect_Parms KillLaserEffect_Parms;

	this->ProcessEvent ( pFnKillLaserEffect, &KillLaserEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.ServerStopFire
// [0x002200C2] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_LightAssaultRifle::ServerStopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnServerStopFire = NULL;

	if ( ! pFnServerStopFire )
		pFnServerStopFire = (UFunction*) UObject::GObjObjects()->Data[ 82603 ];

	ATrDevice_LightAssaultRifle_execServerStopFire_Parms ServerStopFire_Parms;
	ServerStopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnServerStopFire, &ServerStopFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.PlayFiringSound
// [0x00020102] 
// Parameters infos:

void ATrDevice_LightAssaultRifle::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 82602 ];

	ATrDevice_LightAssaultRifle_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_LightAssaultRifle::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 82601 ];

	ATrDevice_LightAssaultRifle_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_LightAssaultRifle::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 82599 ];

	ATrDevice_LightAssaultRifle_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.RefireTimer
// [0x00020102] 
// Parameters infos:

void ATrDevice_LightAssaultRifle::RefireTimer ( )
{
	static UFunction* pFnRefireTimer = NULL;

	if ( ! pFnRefireTimer )
		pFnRefireTimer = (UFunction*) UObject::GObjObjects()->Data[ 82598 ];

	ATrDevice_LightAssaultRifle_execRefireTimer_Parms RefireTimer_Parms;

	this->ProcessEvent ( pFnRefireTimer, &RefireTimer_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_LightAssaultRifle::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 82596 ];

	ATrDevice_LightAssaultRifle_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_LightAssaultRifle::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 82594 ];

	ATrDevice_LightAssaultRifle_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function TribesGame.TrDevice_LightAssaultRifle.OnReloadComplete
// [0x00020002] 
// Parameters infos:

void ATrDevice_LightAssaultRifle::OnReloadComplete ( )
{
	static UFunction* pFnOnReloadComplete = NULL;

	if ( ! pFnOnReloadComplete )
		pFnOnReloadComplete = (UFunction*) UObject::GObjObjects()->Data[ 82593 ];

	ATrDevice_LightAssaultRifle_execOnReloadComplete_Parms OnReloadComplete_Parms;

	this->ProcessEvent ( pFnOnReloadComplete, &OnReloadComplete_Parms, NULL );
};

// Function TribesGame.TrAttachment_Melee.PlayImpactEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_Melee::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 68104 ];

	ATrAttachment_Melee_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_Melee.PlayImpactSound
// [0x00020102] 
// Parameters infos:
// class AActor*                  HitActor                       ( CPF_Parm )
// class USoundCue*               SoundToPlay                    ( CPF_Parm )
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_Melee::PlayImpactSound ( class AActor* HitActor, class USoundCue* SoundToPlay, struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactSound = NULL;

	if ( ! pFnPlayImpactSound )
		pFnPlayImpactSound = (UFunction*) UObject::GObjObjects()->Data[ 68097 ];

	ATrAttachment_Melee_execPlayImpactSound_Parms PlayImpactSound_Parms;
	PlayImpactSound_Parms.HitActor = HitActor;
	PlayImpactSound_Parms.SoundToPlay = SoundToPlay;
	memcpy ( &PlayImpactSound_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &PlayImpactSound_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactSound, &PlayImpactSound_Parms, NULL );
};

// Function TribesGame.TrDevice_Melee.AttemptFlagFumble
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 Victim                         ( CPF_Parm )

void ATrDevice_Melee::AttemptFlagFumble ( class ATrPawn* Victim )
{
	static UFunction* pFnAttemptFlagFumble = NULL;

	if ( ! pFnAttemptFlagFumble )
		pFnAttemptFlagFumble = (UFunction*) UObject::GObjObjects()->Data[ 82729 ];

	ATrDevice_Melee_execAttemptFlagFumble_Parms AttemptFlagFumble_Parms;
	AttemptFlagFumble_Parms.Victim = Victim;

	this->ProcessEvent ( pFnAttemptFlagFumble, &AttemptFlagFumble_Parms, NULL );
};

// Function TribesGame.TrDevice_Melee.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrDevice_Melee::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 82719 ];

	ATrDevice_Melee_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Melee.FireAmmunition
// [0x00820102] 
// Parameters infos:

void ATrDevice_Melee::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 82699 ];

	ATrDevice_Melee_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_Melee.GetBuildUpTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_Melee::GetBuildUpTime ( )
{
	static UFunction* pFnGetBuildUpTime = NULL;

	if ( ! pFnGetBuildUpTime )
		pFnGetBuildUpTime = (UFunction*) UObject::GObjObjects()->Data[ 82697 ];

	ATrDevice_Melee_execGetBuildUpTime_Parms GetBuildUpTime_Parms;

	this->ProcessEvent ( pFnGetBuildUpTime, &GetBuildUpTime_Parms, NULL );

	return GetBuildUpTime_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Melee.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool ATrDevice_Melee::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 82693 ];

	ATrDevice_Melee_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Melee.CalcAmountToLoad
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_Melee::CalcAmountToLoad ( )
{
	static UFunction* pFnCalcAmountToLoad = NULL;

	if ( ! pFnCalcAmountToLoad )
		pFnCalcAmountToLoad = (UFunction*) UObject::GObjObjects()->Data[ 82691 ];

	ATrDevice_Melee_execCalcAmountToLoad_Parms CalcAmountToLoad_Parms;

	this->ProcessEvent ( pFnCalcAmountToLoad, &CalcAmountToLoad_Parms, NULL );

	return CalcAmountToLoad_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Melee.PlayFireAnimation
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_Melee::PlayFireAnimation ( unsigned char FireModeNum )
{
	static UFunction* pFnPlayFireAnimation = NULL;

	if ( ! pFnPlayFireAnimation )
		pFnPlayFireAnimation = (UFunction*) UObject::GObjObjects()->Data[ 82687 ];

	ATrDevice_Melee_execPlayFireAnimation_Parms PlayFireAnimation_Parms;
	PlayFireAnimation_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnPlayFireAnimation, &PlayFireAnimation_Parms, NULL );
};

// Function TribesGame.TrDevice_Melee.OwningClientPlayHit
// [0x01020142] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrDevice_Melee::OwningClientPlayHit ( struct FVector HitLocation )
{
	static UFunction* pFnOwningClientPlayHit = NULL;

	if ( ! pFnOwningClientPlayHit )
		pFnOwningClientPlayHit = (UFunction*) UObject::GObjObjects()->Data[ 82684 ];

	ATrDevice_Melee_execOwningClientPlayHit_Parms OwningClientPlayHit_Parms;
	memcpy ( &OwningClientPlayHit_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnOwningClientPlayHit, &OwningClientPlayHit_Parms, NULL );
};

// Function TribesGame.TrDevice_NovaColt.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_NovaColt::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 82834 ];

	ATrDevice_NovaColt_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_NovaColt.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_NovaColt::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 82833 ];

	ATrDevice_NovaColt_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_NovaColt.ShouldRefire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_NovaColt::ShouldRefire ( )
{
	static UFunction* pFnShouldRefire = NULL;

	if ( ! pFnShouldRefire )
		pFnShouldRefire = (UFunction*) UObject::GObjObjects()->Data[ 82831 ];

	ATrDevice_NovaColt_execShouldRefire_Parms ShouldRefire_Parms;

	this->ProcessEvent ( pFnShouldRefire, &ShouldRefire_Parms, NULL );

	return ShouldRefire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_NovaSlug.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_NovaSlug::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 82856 ];

	ATrDevice_NovaSlug_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_NovaSlug.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_NovaSlug::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 82855 ];

	ATrDevice_NovaSlug_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_NovaSlug.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_NovaSlug::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 82854 ];

	ATrDevice_NovaSlug_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_PhaseRifle.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrDevice_PhaseRifle::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 82879 ];

	ATrDevice_PhaseRifle_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_PhaseRifle.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_PhaseRifle::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 82878 ];

	ATrDevice_PhaseRifle_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 82995 ];

	ATrDevice_RemoteArxBuster_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 82994 ];

	ATrDevice_RemoteArxBuster_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 82993 ];

	ATrDevice_RemoteArxBuster_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 82992 ];

	ATrDevice_RemoteArxBuster_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.OnPlayRetrieveAnim
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::OnPlayRetrieveAnim ( )
{
	static UFunction* pFnOnPlayRetrieveAnim = NULL;

	if ( ! pFnOnPlayRetrieveAnim )
		pFnOnPlayRetrieveAnim = (UFunction*) UObject::GObjObjects()->Data[ 82991 ];

	ATrDevice_RemoteArxBuster_execOnPlayRetrieveAnim_Parms OnPlayRetrieveAnim_Parms;

	this->ProcessEvent ( pFnOnPlayRetrieveAnim, &OnPlayRetrieveAnim_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_RemoteArxBuster::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 82987 ];

	ATrDevice_RemoteArxBuster_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.OnAnimPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ATrDevice_RemoteArxBuster::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 82985 ];

	ATrDevice_RemoteArxBuster_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.OnRemoteProjectileDestroyedByOther
// [0x00020002] 
// Parameters infos:
// class ATrProjectile*           DestroyedProjectile            ( CPF_Parm )

void ATrDevice_RemoteArxBuster::OnRemoteProjectileDestroyedByOther ( class ATrProjectile* DestroyedProjectile )
{
	static UFunction* pFnOnRemoteProjectileDestroyedByOther = NULL;

	if ( ! pFnOnRemoteProjectileDestroyedByOther )
		pFnOnRemoteProjectileDestroyedByOther = (UFunction*) UObject::GObjObjects()->Data[ 82980 ];

	ATrDevice_RemoteArxBuster_execOnRemoteProjectileDestroyedByOther_Parms OnRemoteProjectileDestroyedByOther_Parms;
	OnRemoteProjectileDestroyedByOther_Parms.DestroyedProjectile = DestroyedProjectile;

	this->ProcessEvent ( pFnOnRemoteProjectileDestroyedByOther, &OnRemoteProjectileDestroyedByOther_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDevice_RemoteArxBuster::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 82969 ];

	ATrDevice_RemoteArxBuster_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.HideArmTimer
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::HideArmTimer ( )
{
	static UFunction* pFnHideArmTimer = NULL;

	if ( ! pFnHideArmTimer )
		pFnHideArmTimer = (UFunction*) UObject::GObjObjects()->Data[ 82968 ];

	ATrDevice_RemoteArxBuster_execHideArmTimer_Parms HideArmTimer_Parms;

	this->ProcessEvent ( pFnHideArmTimer, &HideArmTimer_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.ActivateRemoteRounds
// [0x00024102] 
// Parameters infos:
// unsigned long                  bDoNoDamage                    ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_RemoteArxBuster::ActivateRemoteRounds ( unsigned long bDoNoDamage )
{
	static UFunction* pFnActivateRemoteRounds = NULL;

	if ( ! pFnActivateRemoteRounds )
		pFnActivateRemoteRounds = (UFunction*) UObject::GObjObjects()->Data[ 82964 ];

	ATrDevice_RemoteArxBuster_execActivateRemoteRounds_Parms ActivateRemoteRounds_Parms;
	ActivateRemoteRounds_Parms.bDoNoDamage = bDoNoDamage;

	this->ProcessEvent ( pFnActivateRemoteRounds, &ActivateRemoteRounds_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_RemoteArxBuster::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 82960 ];

	ATrDevice_RemoteArxBuster_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RemoteArxBuster.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 82959 ];

	ATrDevice_RemoteArxBuster_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_RemoteArxBuster::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 82956 ];

	ATrDevice_RemoteArxBuster_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.CanClientRequestReloadNow
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_RemoteArxBuster::CanClientRequestReloadNow ( )
{
	static UFunction* pFnCanClientRequestReloadNow = NULL;

	if ( ! pFnCanClientRequestReloadNow )
		pFnCanClientRequestReloadNow = (UFunction*) UObject::GObjObjects()->Data[ 82954 ];

	ATrDevice_RemoteArxBuster_execCanClientRequestReloadNow_Parms CanClientRequestReloadNow_Parms;

	this->ProcessEvent ( pFnCanClientRequestReloadNow, &CanClientRequestReloadNow_Parms, NULL );

	return CanClientRequestReloadNow_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RemoteArxBuster.RequestReload
// [0x00020002] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::RequestReload ( )
{
	static UFunction* pFnRequestReload = NULL;

	if ( ! pFnRequestReload )
		pFnRequestReload = (UFunction*) UObject::GObjObjects()->Data[ 82953 ];

	ATrDevice_RemoteArxBuster_execRequestReload_Parms RequestReload_Parms;

	this->ProcessEvent ( pFnRequestReload, &RequestReload_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.PerformInactiveReload
// [0x00020002] 
// Parameters infos:

void ATrDevice_RemoteArxBuster::PerformInactiveReload ( )
{
	static UFunction* pFnPerformInactiveReload = NULL;

	if ( ! pFnPerformInactiveReload )
		pFnPerformInactiveReload = (UFunction*) UObject::GObjObjects()->Data[ 82952 ];

	ATrDevice_RemoteArxBuster_execPerformInactiveReload_Parms PerformInactiveReload_Parms;

	this->ProcessEvent ( pFnPerformInactiveReload, &PerformInactiveReload_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.AddAmmo
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ATrDevice_RemoteArxBuster::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 82949 ];

	ATrDevice_RemoteArxBuster_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RemoteArxBuster.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_RemoteArxBuster::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 82947 ];

	ATrDevice_RemoteArxBuster_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.DetPoseActive
// [0x00020102] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void ATrDevice_RemoteArxBuster::DetPoseActive ( unsigned long bActive )
{
	static UFunction* pFnDetPoseActive = NULL;

	if ( ! pFnDetPoseActive )
		pFnDetPoseActive = (UFunction*) UObject::GObjObjects()->Data[ 82945 ];

	ATrDevice_RemoteArxBuster_execDetPoseActive_Parms DetPoseActive_Parms;
	DetPoseActive_Parms.bActive = bActive;

	this->ProcessEvent ( pFnDetPoseActive, &DetPoseActive_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.SetLeftArmVisible
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ATrDevice_RemoteArxBuster::SetLeftArmVisible ( unsigned long bVisible )
{
	static UFunction* pFnSetLeftArmVisible = NULL;

	if ( ! pFnSetLeftArmVisible )
		pFnSetLeftArmVisible = (UFunction*) UObject::GObjObjects()->Data[ 82943 ];

	ATrDevice_RemoteArxBuster_execSetLeftArmVisible_Parms SetLeftArmVisible_Parms;
	SetLeftArmVisible_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetLeftArmVisible, &SetLeftArmVisible_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_RemoteArxBuster::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 82941 ];

	ATrDevice_RemoteArxBuster_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice_RemoteArxBuster.SetArxIdle
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDevice_RemoteArxBuster::SetArxIdle ( unsigned long bEnabled )
{
	static UFunction* pFnSetArxIdle = NULL;

	if ( ! pFnSetArxIdle )
		pFnSetArxIdle = (UFunction*) UObject::GObjObjects()->Data[ 82938 ];

	ATrDevice_RemoteArxBuster_execSetArxIdle_Parms SetArxIdle_Parms;
	SetArxIdle_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetArxIdle, &SetArxIdle_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.StopThirdPersonFireEffects
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrAttachment_RepairTool::eventStopThirdPersonFireEffects ( )
{
	static UFunction* pFnStopThirdPersonFireEffects = NULL;

	if ( ! pFnStopThirdPersonFireEffects )
		pFnStopThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 68290 ];

	ATrAttachment_RepairTool_eventStopThirdPersonFireEffects_Parms StopThirdPersonFireEffects_Parms;

	this->ProcessEvent ( pFnStopThirdPersonFireEffects, &StopThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_RepairTool::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 68286 ];

	ATrAttachment_RepairTool_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.PlayImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ATrAttachment_RepairTool::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 68279 ];

	ATrAttachment_RepairTool_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.UpdateRepairEffect
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrAttachment_RepairTool::UpdateRepairEffect ( float DeltaTime, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnUpdateRepairEffect = NULL;

	if ( ! pFnUpdateRepairEffect )
		pFnUpdateRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 68275 ];

	ATrAttachment_RepairTool_execUpdateRepairEffect_Parms UpdateRepairEffect_Parms;
	UpdateRepairEffect_Parms.DeltaTime = DeltaTime;
	memcpy ( &UpdateRepairEffect_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &UpdateRepairEffect_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnUpdateRepairEffect, &UpdateRepairEffect_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.SpawnRepairEffect
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrAttachment_RepairTool::SpawnRepairEffect ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnSpawnRepairEffect = NULL;

	if ( ! pFnSpawnRepairEffect )
		pFnSpawnRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 68272 ];

	ATrAttachment_RepairTool_execSpawnRepairEffect_Parms SpawnRepairEffect_Parms;
	memcpy ( &SpawnRepairEffect_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnRepairEffect_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnSpawnRepairEffect, &SpawnRepairEffect_Parms, NULL );
};

// Function TribesGame.TrAttachment_RepairTool.KillRepairEffect
// [0x00020102] 
// Parameters infos:

void ATrAttachment_RepairTool::KillRepairEffect ( )
{
	static UFunction* pFnKillRepairEffect = NULL;

	if ( ! pFnKillRepairEffect )
		pFnKillRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 68271 ];

	ATrAttachment_RepairTool_execKillRepairEffect_Parms KillRepairEffect_Parms;

	this->ProcessEvent ( pFnKillRepairEffect, &KillRepairEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.HasAnyAmmo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_RepairTool::HasAnyAmmo ( )
{
	static UFunction* pFnHasAnyAmmo = NULL;

	if ( ! pFnHasAnyAmmo )
		pFnHasAnyAmmo = (UFunction*) UObject::GObjObjects()->Data[ 83101 ];

	ATrDevice_RepairTool_execHasAnyAmmo_Parms HasAnyAmmo_Parms;

	this->ProcessEvent ( pFnHasAnyAmmo, &HasAnyAmmo_Parms, NULL );

	return HasAnyAmmo_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrDevice_RepairTool::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 83085 ];

	ATrDevice_RepairTool_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.UpdateDamageMaterial
// [0x00020102] 
// Parameters infos:

void ATrDevice_RepairTool::UpdateDamageMaterial ( )
{
	static UFunction* pFnUpdateDamageMaterial = NULL;

	if ( ! pFnUpdateDamageMaterial )
		pFnUpdateDamageMaterial = (UFunction*) UObject::GObjObjects()->Data[ 83082 ];

	ATrDevice_RepairTool_execUpdateDamageMaterial_Parms UpdateDamageMaterial_Parms;

	this->ProcessEvent ( pFnUpdateDamageMaterial, &UpdateDamageMaterial_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.UpdateRepairEffect
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_RepairTool::UpdateRepairEffect ( float DeltaTime )
{
	static UFunction* pFnUpdateRepairEffect = NULL;

	if ( ! pFnUpdateRepairEffect )
		pFnUpdateRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 83077 ];

	ATrDevice_RepairTool_execUpdateRepairEffect_Parms UpdateRepairEffect_Parms;
	UpdateRepairEffect_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRepairEffect, &UpdateRepairEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.SpawnRepairEffect
// [0x00820102] 
// Parameters infos:

void ATrDevice_RepairTool::SpawnRepairEffect ( )
{
	static UFunction* pFnSpawnRepairEffect = NULL;

	if ( ! pFnSpawnRepairEffect )
		pFnSpawnRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 83070 ];

	ATrDevice_RepairTool_execSpawnRepairEffect_Parms SpawnRepairEffect_Parms;

	this->ProcessEvent ( pFnSpawnRepairEffect, &SpawnRepairEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.HasViewModeSwitched
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDevice_RepairTool::HasViewModeSwitched ( )
{
	static UFunction* pFnHasViewModeSwitched = NULL;

	if ( ! pFnHasViewModeSwitched )
		pFnHasViewModeSwitched = (UFunction*) UObject::GObjObjects()->Data[ 83066 ];

	ATrDevice_RepairTool_execHasViewModeSwitched_Parms HasViewModeSwitched_Parms;

	this->ProcessEvent ( pFnHasViewModeSwitched, &HasViewModeSwitched_Parms, NULL );

	return HasViewModeSwitched_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.KillRepairEffect
// [0x00020102] 
// Parameters infos:

void ATrDevice_RepairTool::KillRepairEffect ( )
{
	static UFunction* pFnKillRepairEffect = NULL;

	if ( ! pFnKillRepairEffect )
		pFnKillRepairEffect = (UFunction*) UObject::GObjObjects()->Data[ 83065 ];

	ATrDevice_RepairTool_execKillRepairEffect_Parms KillRepairEffect_Parms;

	this->ProcessEvent ( pFnKillRepairEffect, &KillRepairEffect_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.GetRepairEndAndTangent
// [0x00C24102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 EndLocation                    ( CPF_Parm | CPF_OutParm )
// struct FVector                 Tangent                        ( CPF_Parm | CPF_OutParm )
// class AActor*                  HitActor                       ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

bool ATrDevice_RepairTool::GetRepairEndAndTangent ( struct FVector* EndLocation, struct FVector* Tangent, class AActor** HitActor )
{
	static UFunction* pFnGetRepairEndAndTangent = NULL;

	if ( ! pFnGetRepairEndAndTangent )
		pFnGetRepairEndAndTangent = (UFunction*) UObject::GObjObjects()->Data[ 83057 ];

	ATrDevice_RepairTool_execGetRepairEndAndTangent_Parms GetRepairEndAndTangent_Parms;

	this->ProcessEvent ( pFnGetRepairEndAndTangent, &GetRepairEndAndTangent_Parms, NULL );

	if ( EndLocation )
		memcpy ( EndLocation, &GetRepairEndAndTangent_Parms.EndLocation, 0xC );

	if ( Tangent )
		memcpy ( Tangent, &GetRepairEndAndTangent_Parms.Tangent, 0xC );

	if ( HitActor )
		*HitActor = GetRepairEndAndTangent_Parms.HitActor;

	return GetRepairEndAndTangent_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.ProcessInstantHit_Internal
// [0x00024102] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// unsigned long                  bHeadShot                      ( CPF_OptionalParm | CPF_Parm )

void ATrDevice_RepairTool::ProcessInstantHit_Internal ( unsigned char FiringMode, struct FImpactInfo Impact, unsigned long bHeadShot )
{
	static UFunction* pFnProcessInstantHit_Internal = NULL;

	if ( ! pFnProcessInstantHit_Internal )
		pFnProcessInstantHit_Internal = (UFunction*) UObject::GObjObjects()->Data[ 83042 ];

	ATrDevice_RepairTool_execProcessInstantHit_Internal_Parms ProcessInstantHit_Internal_Parms;
	ProcessInstantHit_Internal_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Internal_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Internal_Parms.bHeadShot = bHeadShot;

	this->ProcessEvent ( pFnProcessInstantHit_Internal, &ProcessInstantHit_Internal_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.InstantFire
// [0x00820102] 
// Parameters infos:

void ATrDevice_RepairTool::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 83033 ];

	ATrDevice_RepairTool_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.OnStartConstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_RepairTool::OnStartConstantFire ( )
{
	static UFunction* pFnOnStartConstantFire = NULL;

	if ( ! pFnOnStartConstantFire )
		pFnOnStartConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 83032 ];

	ATrDevice_RepairTool_execOnStartConstantFire_Parms OnStartConstantFire_Parms;

	this->ProcessEvent ( pFnOnStartConstantFire, &OnStartConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.OnEndConstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_RepairTool::OnEndConstantFire ( )
{
	static UFunction* pFnOnEndConstantFire = NULL;

	if ( ! pFnOnEndConstantFire )
		pFnOnEndConstantFire = (UFunction*) UObject::GObjObjects()->Data[ 83030 ];

	ATrDevice_RepairTool_execOnEndConstantFire_Parms OnEndConstantFire_Parms;

	this->ProcessEvent ( pFnOnEndConstantFire, &OnEndConstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_RepairTool.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDevice_RepairTool::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 83028 ];

	ATrDevice_RepairTool_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.GetActorHealth
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )

float ATrDevice_RepairTool::GetActorHealth ( class AActor* HitActor )
{
	static UFunction* pFnGetActorHealth = NULL;

	if ( ! pFnGetActorHealth )
		pFnGetActorHealth = (UFunction*) UObject::GObjObjects()->Data[ 83023 ];

	ATrDevice_RepairTool_execGetActorHealth_Parms GetActorHealth_Parms;
	GetActorHealth_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnGetActorHealth, &GetActorHealth_Parms, NULL );

	return GetActorHealth_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_RepairTool.CanActorBeRepaired
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )

bool ATrDevice_RepairTool::CanActorBeRepaired ( class AActor* HitActor )
{
	static UFunction* pFnCanActorBeRepaired = NULL;

	if ( ! pFnCanActorBeRepaired )
		pFnCanActorBeRepaired = (UFunction*) UObject::GObjObjects()->Data[ 83020 ];

	ATrDevice_RepairTool_execCanActorBeRepaired_Parms CanActorBeRepaired_Parms;
	CanActorBeRepaired_Parms.HitActor = HitActor;

	this->ProcessEvent ( pFnCanActorBeRepaired, &CanActorBeRepaired_Parms, NULL );

	return CanActorBeRepaired_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_S22Rifle.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_S22Rifle::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 83165 ];

	ATrDevice_S22Rifle_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.GetSeekingMissileManager
// [0x00020002] 
// Parameters infos:
// class ATrSeekingMissileManager* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATrSeekingMissileManager* ATrDevice_SaberLauncher::GetSeekingMissileManager ( )
{
	static UFunction* pFnGetSeekingMissileManager = NULL;

	if ( ! pFnGetSeekingMissileManager )
		pFnGetSeekingMissileManager = (UFunction*) UObject::GObjObjects()->Data[ 85178 ];

	ATrDevice_SaberLauncher_execGetSeekingMissileManager_Parms GetSeekingMissileManager_Parms;

	this->ProcessEvent ( pFnGetSeekingMissileManager, &GetSeekingMissileManager_Parms, NULL );

	return GetSeekingMissileManager_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SaberLauncher.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_SaberLauncher::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 85175 ];

	ATrDevice_SaberLauncher_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_SaberLauncher::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 85173 ];

	ATrDevice_SaberLauncher_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.ServerTryNewPossibleTarget
// [0x002200C0] 
// Parameters infos:

void ATrDevice_SaberLauncher::ServerTryNewPossibleTarget ( )
{
	static UFunction* pFnServerTryNewPossibleTarget = NULL;

	if ( ! pFnServerTryNewPossibleTarget )
		pFnServerTryNewPossibleTarget = (UFunction*) UObject::GObjObjects()->Data[ 85172 ];

	ATrDevice_SaberLauncher_execServerTryNewPossibleTarget_Parms ServerTryNewPossibleTarget_Parms;

	this->ProcessEvent ( pFnServerTryNewPossibleTarget, &ServerTryNewPossibleTarget_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_SaberLauncher::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 85169 ];

	ATrDevice_SaberLauncher_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SaberLauncher.HolderExitedVehicle
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::HolderExitedVehicle ( )
{
	static UFunction* pFnHolderExitedVehicle = NULL;

	if ( ! pFnHolderExitedVehicle )
		pFnHolderExitedVehicle = (UFunction*) UObject::GObjObjects()->Data[ 85168 ];

	ATrDevice_SaberLauncher_execHolderExitedVehicle_Parms HolderExitedVehicle_Parms;

	this->ProcessEvent ( pFnHolderExitedVehicle, &HolderExitedVehicle_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.HolderEnteredVehicle
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::HolderEnteredVehicle ( )
{
	static UFunction* pFnHolderEnteredVehicle = NULL;

	if ( ! pFnHolderEnteredVehicle )
		pFnHolderEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 85167 ];

	ATrDevice_SaberLauncher_execHolderEnteredVehicle_Parms HolderEnteredVehicle_Parms;

	this->ProcessEvent ( pFnHolderEnteredVehicle, &HolderEnteredVehicle_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.OnSwitchToWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::OnSwitchToWeapon ( )
{
	static UFunction* pFnOnSwitchToWeapon = NULL;

	if ( ! pFnOnSwitchToWeapon )
		pFnOnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 85166 ];

	ATrDevice_SaberLauncher_execOnSwitchToWeapon_Parms OnSwitchToWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchToWeapon, &OnSwitchToWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 85165 ];

	ATrDevice_SaberLauncher_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.PerformTargeting
// [0x00820102] 
// Parameters infos:

void ATrDevice_SaberLauncher::PerformTargeting ( )
{
	static UFunction* pFnPerformTargeting = NULL;

	if ( ! pFnPerformTargeting )
		pFnPerformTargeting = (UFunction*) UObject::GObjObjects()->Data[ 85152 ];

	ATrDevice_SaberLauncher_execPerformTargeting_Parms PerformTargeting_Parms;

	this->ProcessEvent ( pFnPerformTargeting, &PerformTargeting_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 85151 ];

	ATrDevice_SaberLauncher_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_SaberLauncher::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 85148 ];

	ATrDevice_SaberLauncher_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.TargetLockAcquired
// [0x00020002] 
// Parameters infos:

void ATrDevice_SaberLauncher::TargetLockAcquired ( )
{
	static UFunction* pFnTargetLockAcquired = NULL;

	if ( ! pFnTargetLockAcquired )
		pFnTargetLockAcquired = (UFunction*) UObject::GObjObjects()->Data[ 85147 ];

	ATrDevice_SaberLauncher_execTargetLockAcquired_Parms TargetLockAcquired_Parms;

	this->ProcessEvent ( pFnTargetLockAcquired, &TargetLockAcquired_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.SetNewTrackingTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void ATrDevice_SaberLauncher::SetNewTrackingTarget ( class AActor* Target )
{
	static UFunction* pFnSetNewTrackingTarget = NULL;

	if ( ! pFnSetNewTrackingTarget )
		pFnSetNewTrackingTarget = (UFunction*) UObject::GObjObjects()->Data[ 85145 ];

	ATrDevice_SaberLauncher_execSetNewTrackingTarget_Parms SetNewTrackingTarget_Parms;
	SetNewTrackingTarget_Parms.Target = Target;

	this->ProcessEvent ( pFnSetNewTrackingTarget, &SetNewTrackingTarget_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.SetTargetActorMissileLockState
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// unsigned char                  lockValue                      ( CPF_Parm )

void ATrDevice_SaberLauncher::SetTargetActorMissileLockState ( class AActor* Target, unsigned char lockValue )
{
	static UFunction* pFnSetTargetActorMissileLockState = NULL;

	if ( ! pFnSetTargetActorMissileLockState )
		pFnSetTargetActorMissileLockState = (UFunction*) UObject::GObjObjects()->Data[ 83220 ];

	ATrDevice_SaberLauncher_execSetTargetActorMissileLockState_Parms SetTargetActorMissileLockState_Parms;
	SetTargetActorMissileLockState_Parms.Target = Target;
	SetTargetActorMissileLockState_Parms.lockValue = lockValue;

	this->ProcessEvent ( pFnSetTargetActorMissileLockState, &SetTargetActorMissileLockState_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.ValidateTrackingTarget
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// unsigned long                  initialAcquire                 ( CPF_Parm )

bool ATrDevice_SaberLauncher::ValidateTrackingTarget ( class AActor* Target, unsigned long initialAcquire )
{
	static UFunction* pFnValidateTrackingTarget = NULL;

	if ( ! pFnValidateTrackingTarget )
		pFnValidateTrackingTarget = (UFunction*) UObject::GObjObjects()->Data[ 83213 ];

	ATrDevice_SaberLauncher_execValidateTrackingTarget_Parms ValidateTrackingTarget_Parms;
	ValidateTrackingTarget_Parms.Target = Target;
	ValidateTrackingTarget_Parms.initialAcquire = initialAcquire;

	this->ProcessEvent ( pFnValidateTrackingTarget, &ValidateTrackingTarget_Parms, NULL );

	return ValidateTrackingTarget_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SaberLauncher.IsActorInLOS
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool ATrDevice_SaberLauncher::IsActorInLOS ( class AActor* A )
{
	static UFunction* pFnIsActorInLOS = NULL;

	if ( ! pFnIsActorInLOS )
		pFnIsActorInLOS = (UFunction*) UObject::GObjObjects()->Data[ 83208 ];

	ATrDevice_SaberLauncher_execIsActorInLOS_Parms IsActorInLOS_Parms;
	IsActorInLOS_Parms.A = A;

	this->ProcessEvent ( pFnIsActorInLOS, &IsActorInLOS_Parms, NULL );

	return IsActorInLOS_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SaberLauncher.TargetInsideReticle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// unsigned long                  initialAcquire                 ( CPF_Parm )

bool ATrDevice_SaberLauncher::TargetInsideReticle ( class AActor* Target, unsigned long initialAcquire )
{
	static UFunction* pFnTargetInsideReticle = NULL;

	if ( ! pFnTargetInsideReticle )
		pFnTargetInsideReticle = (UFunction*) UObject::GObjObjects()->Data[ 83204 ];

	ATrDevice_SaberLauncher_execTargetInsideReticle_Parms TargetInsideReticle_Parms;
	TargetInsideReticle_Parms.Target = Target;
	TargetInsideReticle_Parms.initialAcquire = initialAcquire;

	this->ProcessEvent ( pFnTargetInsideReticle, &TargetInsideReticle_Parms, NULL );

	return TargetInsideReticle_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SaberLauncher.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 83203 ];

	ATrDevice_SaberLauncher_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.SuspendTargeting
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::SuspendTargeting ( )
{
	static UFunction* pFnSuspendTargeting = NULL;

	if ( ! pFnSuspendTargeting )
		pFnSuspendTargeting = (UFunction*) UObject::GObjObjects()->Data[ 83200 ];

	ATrDevice_SaberLauncher_execSuspendTargeting_Parms SuspendTargeting_Parms;

	this->ProcessEvent ( pFnSuspendTargeting, &SuspendTargeting_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.ResumeTargeting
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::ResumeTargeting ( )
{
	static UFunction* pFnResumeTargeting = NULL;

	if ( ! pFnResumeTargeting )
		pFnResumeTargeting = (UFunction*) UObject::GObjObjects()->Data[ 83199 ];

	ATrDevice_SaberLauncher_execResumeTargeting_Parms ResumeTargeting_Parms;

	this->ProcessEvent ( pFnResumeTargeting, &ResumeTargeting_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDevice_SaberLauncher::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 83198 ];

	ATrDevice_SaberLauncher_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_SaberLauncher.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDevice_SaberLauncher::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 83190 ];

	ATrDevice_SaberLauncher_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.StopScopeRechargeSound
// [0x00020102] 
// Parameters infos:

void ATrDevice_SniperRifle::StopScopeRechargeSound ( )
{
	static UFunction* pFnStopScopeRechargeSound = NULL;

	if ( ! pFnStopScopeRechargeSound )
		pFnStopScopeRechargeSound = (UFunction*) UObject::GObjObjects()->Data[ 85222 ];

	ATrDevice_SniperRifle_execStopScopeRechargeSound_Parms StopScopeRechargeSound_Parms;

	this->ProcessEvent ( pFnStopScopeRechargeSound, &StopScopeRechargeSound_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.PlayScopeRechargeSound
// [0x00020102] 
// Parameters infos:

void ATrDevice_SniperRifle::PlayScopeRechargeSound ( )
{
	static UFunction* pFnPlayScopeRechargeSound = NULL;

	if ( ! pFnPlayScopeRechargeSound )
		pFnPlayScopeRechargeSound = (UFunction*) UObject::GObjObjects()->Data[ 85221 ];

	ATrDevice_SniperRifle_execPlayScopeRechargeSound_Parms PlayScopeRechargeSound_Parms;

	this->ProcessEvent ( pFnPlayScopeRechargeSound, &PlayScopeRechargeSound_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDevice_SniperRifle::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 85216 ];

	ATrDevice_SniperRifle_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.CalcHUDAimChargePercent
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDevice_SniperRifle::CalcHUDAimChargePercent ( )
{
	static UFunction* pFnCalcHUDAimChargePercent = NULL;

	if ( ! pFnCalcHUDAimChargePercent )
		pFnCalcHUDAimChargePercent = (UFunction*) UObject::GObjObjects()->Data[ 85214 ];

	ATrDevice_SniperRifle_execCalcHUDAimChargePercent_Parms CalcHUDAimChargePercent_Parms;

	this->ProcessEvent ( pFnCalcHUDAimChargePercent, &CalcHUDAimChargePercent_Parms, NULL );

	return CalcHUDAimChargePercent_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SniperRifle.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_SniperRifle::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 85211 ];

	ATrDevice_SniperRifle_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrDevice_SniperRifle::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 85204 ];

	ATrDevice_SniperRifle_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_SniperRifle.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_SniperRifle::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 85203 ];

	ATrDevice_SniperRifle_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_SniperRifle::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 85202 ];

	ATrDevice_SniperRifle_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_SniperRifle.OnSwitchToWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_SniperRifle::OnSwitchToWeapon ( )
{
	static UFunction* pFnOnSwitchToWeapon = NULL;

	if ( ! pFnOnSwitchToWeapon )
		pFnOnSwitchToWeapon = (UFunction*) UObject::GObjObjects()->Data[ 85201 ];

	ATrDevice_SniperRifle_execOnSwitchToWeapon_Parms OnSwitchToWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchToWeapon, &OnSwitchToWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_SN7.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_SN7::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 85264 ];

	ATrDevice_SN7_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Sparrow.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrDevice_Sparrow::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 85288 ];

	ATrDevice_Sparrow_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.OnSwitchAwayFromWeapon
// [0x00020102] 
// Parameters infos:

void ATrDevice_SpikeLauncher::OnSwitchAwayFromWeapon ( )
{
	static UFunction* pFnOnSwitchAwayFromWeapon = NULL;

	if ( ! pFnOnSwitchAwayFromWeapon )
		pFnOnSwitchAwayFromWeapon = (UFunction*) UObject::GObjObjects()->Data[ 85321 ];

	ATrDevice_SpikeLauncher_execOnSwitchAwayFromWeapon_Parms OnSwitchAwayFromWeapon_Parms;

	this->ProcessEvent ( pFnOnSwitchAwayFromWeapon, &OnSwitchAwayFromWeapon_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.PutDownFast
// [0x00020102] 
// Parameters infos:

void ATrDevice_SpikeLauncher::PutDownFast ( )
{
	static UFunction* pFnPutDownFast = NULL;

	if ( ! pFnPutDownFast )
		pFnPutDownFast = (UFunction*) UObject::GObjObjects()->Data[ 85320 ];

	ATrDevice_SpikeLauncher_execPutDownFast_Parms PutDownFast_Parms;

	this->ProcessEvent ( pFnPutDownFast, &PutDownFast_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.PlayWeaponPutDown
// [0x00020102] 
// Parameters infos:

void ATrDevice_SpikeLauncher::PlayWeaponPutDown ( )
{
	static UFunction* pFnPlayWeaponPutDown = NULL;

	if ( ! pFnPlayWeaponPutDown )
		pFnPlayWeaponPutDown = (UFunction*) UObject::GObjObjects()->Data[ 85319 ];

	ATrDevice_SpikeLauncher_execPlayWeaponPutDown_Parms PlayWeaponPutDown_Parms;

	this->ProcessEvent ( pFnPlayWeaponPutDown, &PlayWeaponPutDown_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_SpikeLauncher::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 85318 ];

	ATrDevice_SpikeLauncher_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrDevice_SpikeLauncher::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 85314 ];

	ATrDevice_SpikeLauncher_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.OnAnimPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ATrDevice_SpikeLauncher::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 85312 ];

	ATrDevice_SpikeLauncher_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_SpikeLauncher::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 85310 ];

	ATrDevice_SpikeLauncher_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDevice_SpikeLauncher.SetSpikeIdle
// [0x00020102] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDevice_SpikeLauncher::SetSpikeIdle ( unsigned long bEnabled )
{
	static UFunction* pFnSetSpikeIdle = NULL;

	if ( ! pFnSetSpikeIdle )
		pFnSetSpikeIdle = (UFunction*) UObject::GObjObjects()->Data[ 85307 ];

	ATrDevice_SpikeLauncher_execSetSpikeIdle_Parms SetSpikeIdle_Parms;
	SetSpikeIdle_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetSpikeIdle, &SetSpikeIdle_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ATrDevice_ThrowingKnives::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 85436 ];

	ATrDevice_ThrowingKnives_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ATrDevice_ThrowingKnives::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 85435 ];

	ATrDevice_ThrowingKnives_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ATrDevice_ThrowingKnives::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 85432 ];

	ATrDevice_ThrowingKnives_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_ThrowingKnives.PlayWeaponEquip
// [0x00020102] 
// Parameters infos:

void ATrDevice_ThrowingKnives::PlayWeaponEquip ( )
{
	static UFunction* pFnPlayWeaponEquip = NULL;

	if ( ! pFnPlayWeaponEquip )
		pFnPlayWeaponEquip = (UFunction*) UObject::GObjObjects()->Data[ 85431 ];

	ATrDevice_ThrowingKnives_execPlayWeaponEquip_Parms PlayWeaponEquip_Parms;

	this->ProcessEvent ( pFnPlayWeaponEquip, &PlayWeaponEquip_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.OnSkelControlKnivesAnimNotify
// [0x00020102] 
// Parameters infos:

void ATrDevice_ThrowingKnives::OnSkelControlKnivesAnimNotify ( )
{
	static UFunction* pFnOnSkelControlKnivesAnimNotify = NULL;

	if ( ! pFnOnSkelControlKnivesAnimNotify )
		pFnOnSkelControlKnivesAnimNotify = (UFunction*) UObject::GObjObjects()->Data[ 85430 ];

	ATrDevice_ThrowingKnives_execOnSkelControlKnivesAnimNotify_Parms OnSkelControlKnivesAnimNotify_Parms;

	this->ProcessEvent ( pFnOnSkelControlKnivesAnimNotify, &OnSkelControlKnivesAnimNotify_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.OnFireSkelControlKnivesAnimNotify
// [0x00020102] 
// Parameters infos:

void ATrDevice_ThrowingKnives::OnFireSkelControlKnivesAnimNotify ( )
{
	static UFunction* pFnOnFireSkelControlKnivesAnimNotify = NULL;

	if ( ! pFnOnFireSkelControlKnivesAnimNotify )
		pFnOnFireSkelControlKnivesAnimNotify = (UFunction*) UObject::GObjObjects()->Data[ 85429 ];

	ATrDevice_ThrowingKnives_execOnFireSkelControlKnivesAnimNotify_Parms OnFireSkelControlKnivesAnimNotify_Parms;

	this->ProcessEvent ( pFnOnFireSkelControlKnivesAnimNotify, &OnFireSkelControlKnivesAnimNotify_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.UpdateSkelControlKnives
// [0x00020102] 
// Parameters infos:
// unsigned long                  bForceFullAmmo                 ( CPF_Parm )

void ATrDevice_ThrowingKnives::UpdateSkelControlKnives ( unsigned long bForceFullAmmo )
{
	static UFunction* pFnUpdateSkelControlKnives = NULL;

	if ( ! pFnUpdateSkelControlKnives )
		pFnUpdateSkelControlKnives = (UFunction*) UObject::GObjObjects()->Data[ 85427 ];

	ATrDevice_ThrowingKnives_execUpdateSkelControlKnives_Parms UpdateSkelControlKnives_Parms;
	UpdateSkelControlKnives_Parms.bForceFullAmmo = bForceFullAmmo;

	this->ProcessEvent ( pFnUpdateSkelControlKnives, &UpdateSkelControlKnives_Parms, NULL );
};

// Function TribesGame.TrDevice_ThrowingKnives.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDevice_ThrowingKnives::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 85425 ];

	ATrDevice_ThrowingKnives_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrAutoBalanceMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrAutoBalanceMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 68616 ];

	UTrAutoBalanceMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_RadarSensor.AwardUpgradeAssists
// [0x00020002] 
// Parameters infos:

void ATrDeployable_RadarSensor::AwardUpgradeAssists ( )
{
	static UFunction* pFnAwardUpgradeAssists = NULL;

	if ( ! pFnAwardUpgradeAssists )
		pFnAwardUpgradeAssists = (UFunction*) UObject::GObjObjects()->Data[ 79930 ];

	ATrDeployable_RadarSensor_execAwardUpgradeAssists_Parms AwardUpgradeAssists_Parms;

	this->ProcessEvent ( pFnAwardUpgradeAssists, &AwardUpgradeAssists_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable_RadarSensor::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 79919 ];

	ATrDeployable_RadarSensor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.ReleaseOutOfSightEnemies
// [0x00020000] 
// Parameters infos:

void ATrDeployable_RadarSensor::ReleaseOutOfSightEnemies ( )
{
	static UFunction* pFnReleaseOutOfSightEnemies = NULL;

	if ( ! pFnReleaseOutOfSightEnemies )
		pFnReleaseOutOfSightEnemies = (UFunction*) UObject::GObjObjects()->Data[ 79918 ];

	ATrDeployable_RadarSensor_execReleaseOutOfSightEnemies_Parms ReleaseOutOfSightEnemies_Parms;

	this->ProcessEvent ( pFnReleaseOutOfSightEnemies, &ReleaseOutOfSightEnemies_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.GiveDestroyAccolade
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrDeployable_RadarSensor::GiveDestroyAccolade ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnGiveDestroyAccolade = NULL;

	if ( ! pFnGiveDestroyAccolade )
		pFnGiveDestroyAccolade = (UFunction*) UObject::GObjObjects()->Data[ 79916 ];

	ATrDeployable_RadarSensor_execGiveDestroyAccolade_Parms GiveDestroyAccolade_Parms;
	GiveDestroyAccolade_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnGiveDestroyAccolade, &GiveDestroyAccolade_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.IsDeployed
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable_RadarSensor::IsDeployed ( )
{
	static UFunction* pFnIsDeployed = NULL;

	if ( ! pFnIsDeployed )
		pFnIsDeployed = (UFunction*) UObject::GObjObjects()->Data[ 79914 ];

	ATrDeployable_RadarSensor_execIsDeployed_Parms IsDeployed_Parms;

	this->ProcessEvent ( pFnIsDeployed, &IsDeployed_Parms, NULL );

	return IsDeployed_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_RadarSensor.RadarBlip
// [0x00020002] 
// Parameters infos:

void ATrDeployable_RadarSensor::RadarBlip ( )
{
	static UFunction* pFnRadarBlip = NULL;

	if ( ! pFnRadarBlip )
		pFnRadarBlip = (UFunction*) UObject::GObjObjects()->Data[ 79912 ];

	ATrDeployable_RadarSensor_execRadarBlip_Parms RadarBlip_Parms;

	this->ProcessEvent ( pFnRadarBlip, &RadarBlip_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.SetPowered
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnabled                       ( CPF_Parm )

void ATrDeployable_RadarSensor::SetPowered ( unsigned long bEnabled )
{
	static UFunction* pFnSetPowered = NULL;

	if ( ! pFnSetPowered )
		pFnSetPowered = (UFunction*) UObject::GObjObjects()->Data[ 79910 ];

	ATrDeployable_RadarSensor_execSetPowered_Parms SetPowered_Parms;
	SetPowered_Parms.bEnabled = bEnabled;

	this->ProcessEvent ( pFnSetPowered, &SetPowered_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_RadarSensor::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79898 ];

	ATrDeployable_RadarSensor_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_RadarSensor.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrDeployable_RadarSensor::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 79888 ];

	ATrDeployable_RadarSensor_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_RadarSensor.SpawnHelpTextCollisionProxy
// [0x00020102] 
// Parameters infos:
// unsigned char                  HelpTextType                   ( CPF_Parm )

void ATrDeployable_RadarSensor::SpawnHelpTextCollisionProxy ( unsigned char HelpTextType )
{
	static UFunction* pFnSpawnHelpTextCollisionProxy = NULL;

	if ( ! pFnSpawnHelpTextCollisionProxy )
		pFnSpawnHelpTextCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 79885 ];

	ATrDeployable_RadarSensor_execSpawnHelpTextCollisionProxy_Parms SpawnHelpTextCollisionProxy_Parms;
	SpawnHelpTextCollisionProxy_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnSpawnHelpTextCollisionProxy, &SpawnHelpTextCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_RadarSensor.ReceivesPowerFromGenerator
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable_RadarSensor::ReceivesPowerFromGenerator ( )
{
	static UFunction* pFnReceivesPowerFromGenerator = NULL;

	if ( ! pFnReceivesPowerFromGenerator )
		pFnReceivesPowerFromGenerator = (UFunction*) UObject::GObjObjects()->Data[ 79883 ];

	ATrDeployable_RadarSensor_execReceivesPowerFromGenerator_Parms ReceivesPowerFromGenerator_Parms;

	this->ProcessEvent ( pFnReceivesPowerFromGenerator, &ReceivesPowerFromGenerator_Parms, NULL );

	return ReceivesPowerFromGenerator_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_RadarSensor.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrDeployable_RadarSensor::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 79881 ];

	ATrDeployable_RadarSensor_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrDeployable_BaseTurret.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable_BaseTurret::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 71680 ];

	ATrDeployable_BaseTurret_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrDeployable_BaseTurret.GiveDestroyAccolade
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrDeployable_BaseTurret::GiveDestroyAccolade ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnGiveDestroyAccolade = NULL;

	if ( ! pFnGiveDestroyAccolade )
		pFnGiveDestroyAccolade = (UFunction*) UObject::GObjObjects()->Data[ 71678 ];

	ATrDeployable_BaseTurret_execGiveDestroyAccolade_Parms GiveDestroyAccolade_Parms;
	GiveDestroyAccolade_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnGiveDestroyAccolade, &GiveDestroyAccolade_Parms, NULL );
};

// Function TribesGame.TrDeployable_BaseTurret.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_BaseTurret::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 71666 ];

	ATrDeployable_BaseTurret_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_BaseTurret.SpawnHelpTextCollisionProxy
// [0x00020102] 
// Parameters infos:
// unsigned char                  HelpTextType                   ( CPF_Parm )

void ATrDeployable_BaseTurret::SpawnHelpTextCollisionProxy ( unsigned char HelpTextType )
{
	static UFunction* pFnSpawnHelpTextCollisionProxy = NULL;

	if ( ! pFnSpawnHelpTextCollisionProxy )
		pFnSpawnHelpTextCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 71663 ];

	ATrDeployable_BaseTurret_execSpawnHelpTextCollisionProxy_Parms SpawnHelpTextCollisionProxy_Parms;
	SpawnHelpTextCollisionProxy_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnSpawnHelpTextCollisionProxy, &SpawnHelpTextCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_BaseTurret.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrDeployable_BaseTurret::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 71654 ];

	ATrDeployable_BaseTurret_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_BaseTurret.ReceivesPowerFromGenerator
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable_BaseTurret::ReceivesPowerFromGenerator ( )
{
	static UFunction* pFnReceivesPowerFromGenerator = NULL;

	if ( ! pFnReceivesPowerFromGenerator )
		pFnReceivesPowerFromGenerator = (UFunction*) UObject::GObjObjects()->Data[ 71652 ];

	ATrDeployable_BaseTurret_execReceivesPowerFromGenerator_Parms ReceivesPowerFromGenerator_Parms;

	this->ProcessEvent ( pFnReceivesPowerFromGenerator, &ReceivesPowerFromGenerator_Parms, NULL );

	return ReceivesPowerFromGenerator_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_BaseTurret.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrDeployable_BaseTurret::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 71649 ];

	ATrDeployable_BaseTurret_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.AwardKillAssists
// [0x00020002] 
// Parameters infos:

void ATrDeployable_Turret::AwardKillAssists ( )
{
	static UFunction* pFnAwardKillAssists = NULL;

	if ( ! pFnAwardKillAssists )
		pFnAwardKillAssists = (UFunction*) UObject::GObjObjects()->Data[ 71636 ];

	ATrDeployable_Turret_execAwardKillAssists_Parms AwardKillAssists_Parms;

	this->ProcessEvent ( pFnAwardKillAssists, &AwardKillAssists_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_Turret::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 71633 ];

	ATrDeployable_Turret_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Turret.GetWeaponStartTraceLocation
// [0x00824102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrDeployable_Turret::GetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 71626 ];

	ATrDeployable_Turret_execGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Turret.SetMuzzleFlashParams
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )
// struct FColor                  MuzzleFlashColor               ( CPF_Parm )

void ATrDeployable_Turret::SetMuzzleFlashParams ( class UParticleSystemComponent* PSC, struct FColor MuzzleFlashColor )
{
	static UFunction* pFnSetMuzzleFlashParams = NULL;

	if ( ! pFnSetMuzzleFlashParams )
		pFnSetMuzzleFlashParams = (UFunction*) UObject::GObjObjects()->Data[ 71623 ];

	ATrDeployable_Turret_execSetMuzzleFlashParams_Parms SetMuzzleFlashParams_Parms;
	SetMuzzleFlashParams_Parms.PSC = PSC;
	memcpy ( &SetMuzzleFlashParams_Parms.MuzzleFlashColor, &MuzzleFlashColor, 0x4 );

	this->ProcessEvent ( pFnSetMuzzleFlashParams, &SetMuzzleFlashParams_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.MuzzleFlashTimer
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Turret::MuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 71622 ];

	ATrDeployable_Turret_execMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.CauseMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Turret::CauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 71620 ];

	ATrDeployable_Turret_execCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ATrDeployable_Turret::PlayFireEffects ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 71615 ];

	ATrDeployable_Turret_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.InWeapon = InWeapon;
	PlayFireEffects_Parms.bViaReplication = bViaReplication;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.UpdateAim
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDeployable_Turret::UpdateAim ( float DeltaTime )
{
	static UFunction* pFnUpdateAim = NULL;

	if ( ! pFnUpdateAim )
		pFnUpdateAim = (UFunction*) UObject::GObjObjects()->Data[ 71610 ];

	ATrDeployable_Turret_execUpdateAim_Parms UpdateAim_Parms;
	UpdateAim_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateAim, &UpdateAim_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDeployable_Turret::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 71608 ];

	ATrDeployable_Turret_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.GetTargetPawn
// [0x00820102] 
// Parameters infos:
// class APawn*                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APawn* ATrDeployable_Turret::GetTargetPawn ( )
{
	static UFunction* pFnGetTargetPawn = NULL;

	if ( ! pFnGetTargetPawn )
		pFnGetTargetPawn = (UFunction*) UObject::GObjObjects()->Data[ 71594 ];

	ATrDeployable_Turret_execGetTargetPawn_Parms GetTargetPawn_Parms;

	this->ProcessEvent ( pFnGetTargetPawn, &GetTargetPawn_Parms, NULL );

	return GetTargetPawn_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Turret.CanTargetPawn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool ATrDeployable_Turret::CanTargetPawn ( class APawn* aPawn )
{
	static UFunction* pFnCanTargetPawn = NULL;

	if ( ! pFnCanTargetPawn )
		pFnCanTargetPawn = (UFunction*) UObject::GObjObjects()->Data[ 71582 ];

	ATrDeployable_Turret_execCanTargetPawn_Parms CanTargetPawn_Parms;
	CanTargetPawn_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnCanTargetPawn, &CanTargetPawn_Parms, NULL );

	return CanTargetPawn_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Turret.CleanupIgnoreList
// [0x00820002] 
// Parameters infos:

void ATrDeployable_Turret::CleanupIgnoreList ( )
{
	static UFunction* pFnCleanupIgnoreList = NULL;

	if ( ! pFnCleanupIgnoreList )
		pFnCleanupIgnoreList = (UFunction*) UObject::GObjObjects()->Data[ 71579 ];

	ATrDeployable_Turret_execCleanupIgnoreList_Parms CleanupIgnoreList_Parms;

	this->ProcessEvent ( pFnCleanupIgnoreList, &CleanupIgnoreList_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.GetAcquireDelayTime
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrDeployable_Turret::GetAcquireDelayTime ( )
{
	static UFunction* pFnGetAcquireDelayTime = NULL;

	if ( ! pFnGetAcquireDelayTime )
		pFnGetAcquireDelayTime = (UFunction*) UObject::GObjObjects()->Data[ 71570 ];

	ATrDeployable_Turret_execGetAcquireDelayTime_Parms GetAcquireDelayTime_Parms;

	this->ProcessEvent ( pFnGetAcquireDelayTime, &GetAcquireDelayTime_Parms, NULL );

	return GetAcquireDelayTime_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_Turret.AcquireTarget
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Turret::AcquireTarget ( )
{
	static UFunction* pFnAcquireTarget = NULL;

	if ( ! pFnAcquireTarget )
		pFnAcquireTarget = (UFunction*) UObject::GObjObjects()->Data[ 71565 ];

	ATrDeployable_Turret_execAcquireTarget_Parms AcquireTarget_Parms;

	this->ProcessEvent ( pFnAcquireTarget, &AcquireTarget_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.DeployComplete
// [0x00020102] 
// Parameters infos:

void ATrDeployable_Turret::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 71564 ];

	ATrDeployable_Turret_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrDeployable_Turret::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 71561 ];

	ATrDeployable_Turret_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrDeployable_Turret.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_Turret::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 71560 ];

	ATrDeployable_Turret_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.AwardUpgradeAssists
// [0x00020002] 
// Parameters infos:

void ATrPowerGenerator::AwardUpgradeAssists ( )
{
	static UFunction* pFnAwardUpgradeAssists = NULL;

	if ( ! pFnAwardUpgradeAssists )
		pFnAwardUpgradeAssists = (UFunction*) UObject::GObjObjects()->Data[ 106590 ];

	ATrPowerGenerator_execAwardUpgradeAssists_Parms AwardUpgradeAssists_Parms;

	this->ProcessEvent ( pFnAwardUpgradeAssists, &AwardUpgradeAssists_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.GiveDestroyAccolade
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrPowerGenerator::GiveDestroyAccolade ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnGiveDestroyAccolade = NULL;

	if ( ! pFnGiveDestroyAccolade )
		pFnGiveDestroyAccolade = (UFunction*) UObject::GObjObjects()->Data[ 106588 ];

	ATrPowerGenerator_execGiveDestroyAccolade_Parms GiveDestroyAccolade_Parms;
	GiveDestroyAccolade_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnGiveDestroyAccolade, &GiveDestroyAccolade_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrPowerGenerator::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 106586 ];

	ATrPowerGenerator_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrPowerGenerator.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrPowerGenerator::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 106574 ];

	ATrPowerGenerator_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.AddToPoweredObjectives
// [0x00020102] 
// Parameters infos:
// class ATrDeployable*           dep                            ( CPF_Parm )

void ATrPowerGenerator::AddToPoweredObjectives ( class ATrDeployable* dep )
{
	static UFunction* pFnAddToPoweredObjectives = NULL;

	if ( ! pFnAddToPoweredObjectives )
		pFnAddToPoweredObjectives = (UFunction*) UObject::GObjObjects()->Data[ 106572 ];

	ATrPowerGenerator_execAddToPoweredObjectives_Parms AddToPoweredObjectives_Parms;
	AddToPoweredObjectives_Parms.dep = dep;

	this->ProcessEvent ( pFnAddToPoweredObjectives, &AddToPoweredObjectives_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.IsGeneratingPower
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrPowerGenerator::IsGeneratingPower ( )
{
	static UFunction* pFnIsGeneratingPower = NULL;

	if ( ! pFnIsGeneratingPower )
		pFnIsGeneratingPower = (UFunction*) UObject::GObjObjects()->Data[ 79482 ];

	ATrPowerGenerator_execIsGeneratingPower_Parms IsGeneratingPower_Parms;

	this->ProcessEvent ( pFnIsGeneratingPower, &IsGeneratingPower_Parms, NULL );

	return IsGeneratingPower_Parms.ReturnValue;
};

// Function TribesGame.TrPowerGenerator.AutoRestoreHealth
// [0x00020100] 
// Parameters infos:
// unsigned long                  bFullyRestore                  ( CPF_Parm )

void ATrPowerGenerator::AutoRestoreHealth ( unsigned long bFullyRestore )
{
	static UFunction* pFnAutoRestoreHealth = NULL;

	if ( ! pFnAutoRestoreHealth )
		pFnAutoRestoreHealth = (UFunction*) UObject::GObjObjects()->Data[ 106552 ];

	ATrPowerGenerator_execAutoRestoreHealth_Parms AutoRestoreHealth_Parms;
	AutoRestoreHealth_Parms.bFullyRestore = bFullyRestore;

	this->ProcessEvent ( pFnAutoRestoreHealth, &AutoRestoreHealth_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.UpdateGeneratorPower
// [0x00020102] 
// Parameters infos:
// unsigned long                  bPowered                       ( CPF_Parm )

void ATrPowerGenerator::UpdateGeneratorPower ( unsigned long bPowered )
{
	static UFunction* pFnUpdateGeneratorPower = NULL;

	if ( ! pFnUpdateGeneratorPower )
		pFnUpdateGeneratorPower = (UFunction*) UObject::GObjObjects()->Data[ 106546 ];

	ATrPowerGenerator_execUpdateGeneratorPower_Parms UpdateGeneratorPower_Parms;
	UpdateGeneratorPower_Parms.bPowered = bPowered;

	this->ProcessEvent ( pFnUpdateGeneratorPower, &UpdateGeneratorPower_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.UpdateGeneratorDowntime
// [0x00020102] 
// Parameters infos:

void ATrPowerGenerator::UpdateGeneratorDowntime ( )
{
	static UFunction* pFnUpdateGeneratorDowntime = NULL;

	if ( ! pFnUpdateGeneratorDowntime )
		pFnUpdateGeneratorDowntime = (UFunction*) UObject::GObjObjects()->Data[ 106544 ];

	ATrPowerGenerator_execUpdateGeneratorDowntime_Parms UpdateGeneratorDowntime_Parms;

	this->ProcessEvent ( pFnUpdateGeneratorDowntime, &UpdateGeneratorDowntime_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.PlayRestoreHealthEffects
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPowerGenerator::PlayRestoreHealthEffects ( float DeltaTime )
{
	static UFunction* pFnPlayRestoreHealthEffects = NULL;

	if ( ! pFnPlayRestoreHealthEffects )
		pFnPlayRestoreHealthEffects = (UFunction*) UObject::GObjObjects()->Data[ 106537 ];

	ATrPowerGenerator_execPlayRestoreHealthEffects_Parms PlayRestoreHealthEffects_Parms;
	PlayRestoreHealthEffects_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPlayRestoreHealthEffects, &PlayRestoreHealthEffects_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.DamageAllMorphs
// [0x00020102] 
// Parameters infos:
// float                          DamageAmount                   ( CPF_Parm )

void ATrPowerGenerator::DamageAllMorphs ( float DamageAmount )
{
	static UFunction* pFnDamageAllMorphs = NULL;

	if ( ! pFnDamageAllMorphs )
		pFnDamageAllMorphs = (UFunction*) UObject::GObjObjects()->Data[ 106531 ];

	ATrPowerGenerator_execDamageAllMorphs_Parms DamageAllMorphs_Parms;
	DamageAllMorphs_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnDamageAllMorphs, &DamageAllMorphs_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.DoRepairs
// [0x00020102] 
// Parameters infos:
// int                            HealAmount                     ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )

void ATrPowerGenerator::DoRepairs ( int HealAmount, class AController* EventInstigator, class AActor* DamageCauser, class UClass* DamageType, struct FTraceHitInfo HitInfo )
{
	static UFunction* pFnDoRepairs = NULL;

	if ( ! pFnDoRepairs )
		pFnDoRepairs = (UFunction*) UObject::GObjObjects()->Data[ 106525 ];

	ATrPowerGenerator_execDoRepairs_Parms DoRepairs_Parms;
	DoRepairs_Parms.HealAmount = HealAmount;
	DoRepairs_Parms.EventInstigator = EventInstigator;
	DoRepairs_Parms.DamageCauser = DamageCauser;
	DoRepairs_Parms.DamageType = DamageType;
	memcpy ( &DoRepairs_Parms.HitInfo, &HitInfo, 0x1C );

	this->ProcessEvent ( pFnDoRepairs, &DoRepairs_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.PlayDamageHealthEffects
// [0x00020102] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// int                            HitBoneIndex                   ( CPF_Parm )

void ATrPowerGenerator::PlayDamageHealthEffects ( int DamageAmount, int HitBoneIndex )
{
	static UFunction* pFnPlayDamageHealthEffects = NULL;

	if ( ! pFnPlayDamageHealthEffects )
		pFnPlayDamageHealthEffects = (UFunction*) UObject::GObjObjects()->Data[ 106518 ];

	ATrPowerGenerator_execPlayDamageHealthEffects_Parms PlayDamageHealthEffects_Parms;
	PlayDamageHealthEffects_Parms.DamageAmount = DamageAmount;
	PlayDamageHealthEffects_Parms.HitBoneIndex = HitBoneIndex;

	this->ProcessEvent ( pFnPlayDamageHealthEffects, &PlayDamageHealthEffects_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPowerGenerator::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 106516 ];

	ATrPowerGenerator_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrPowerGenerator::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 106514 ];

	ATrPowerGenerator_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPowerGenerator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 106512 ];

	ATrPowerGenerator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrPowerGenerator::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 106509 ];

	ATrPowerGenerator_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrPowerGenerator.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrPowerGenerator::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 106507 ];

	ATrPowerGenerator_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrPowerGenerator.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrPowerGenerator::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 106503 ];

	ATrPowerGenerator_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrCTFBase.SpawnHelpTextCollisionProxy
// [0x00020102] 
// Parameters infos:
// unsigned char                  HelpTextType                   ( CPF_Parm )

void ATrCTFBase::SpawnHelpTextCollisionProxy ( unsigned char HelpTextType )
{
	static UFunction* pFnSpawnHelpTextCollisionProxy = NULL;

	if ( ! pFnSpawnHelpTextCollisionProxy )
		pFnSpawnHelpTextCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 77844 ];

	ATrCTFBase_execSpawnHelpTextCollisionProxy_Parms SpawnHelpTextCollisionProxy_Parms;
	SpawnHelpTextCollisionProxy_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnSpawnHelpTextCollisionProxy, &SpawnHelpTextCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrCTFBase.OnFlagTaken
// [0x00020102] 
// Parameters infos:

void ATrCTFBase::OnFlagTaken ( )
{
	static UFunction* pFnOnFlagTaken = NULL;

	if ( ! pFnOnFlagTaken )
		pFnOnFlagTaken = (UFunction*) UObject::GObjObjects()->Data[ 77843 ];

	ATrCTFBase_execOnFlagTaken_Parms OnFlagTaken_Parms;

	this->ProcessEvent ( pFnOnFlagTaken, &OnFlagTaken_Parms, NULL );
};

// Function TribesGame.TrCTFBase.OnFlagComesHome
// [0x00020102] 
// Parameters infos:

void ATrCTFBase::OnFlagComesHome ( )
{
	static UFunction* pFnOnFlagComesHome = NULL;

	if ( ! pFnOnFlagComesHome )
		pFnOnFlagComesHome = (UFunction*) UObject::GObjObjects()->Data[ 77842 ];

	ATrCTFBase_execOnFlagComesHome_Parms OnFlagComesHome_Parms;

	this->ProcessEvent ( pFnOnFlagComesHome, &OnFlagComesHome_Parms, NULL );
};

// Function TribesGame.TrCTFBase.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrCTFBase::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 77840 ];

	ATrCTFBase_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrCTFBase.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrCTFBase::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 77830 ];

	ATrCTFBase_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrCTFBase.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrCTFBase::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 77827 ];

	ATrCTFBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrCTFBase.SetBlitzStandActive
// [0x00020102] 
// Parameters infos:
// unsigned long                  bActive                        ( CPF_Parm )

void ATrCTFBase::SetBlitzStandActive ( unsigned long bActive )
{
	static UFunction* pFnSetBlitzStandActive = NULL;

	if ( ! pFnSetBlitzStandActive )
		pFnSetBlitzStandActive = (UFunction*) UObject::GObjObjects()->Data[ 77825 ];

	ATrCTFBase_execSetBlitzStandActive_Parms SetBlitzStandActive_Parms;
	SetBlitzStandActive_Parms.bActive = bActive;

	this->ProcessEvent ( pFnSetBlitzStandActive, &SetBlitzStandActive_Parms, NULL );
};

// Function TribesGame.TrCTFBase.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrCTFBase::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 77823 ];

	ATrCTFBase_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.SpawnHelpTextCollisionProxy
// [0x00020102] 
// Parameters infos:
// unsigned char                  HelpTextType                   ( CPF_Parm )

void ATrRabbitBase::SpawnHelpTextCollisionProxy ( unsigned char HelpTextType )
{
	static UFunction* pFnSpawnHelpTextCollisionProxy = NULL;

	if ( ! pFnSpawnHelpTextCollisionProxy )
		pFnSpawnHelpTextCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 108821 ];

	ATrRabbitBase_execSpawnHelpTextCollisionProxy_Parms SpawnHelpTextCollisionProxy_Parms;
	SpawnHelpTextCollisionProxy_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnSpawnHelpTextCollisionProxy, &SpawnHelpTextCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.OnFlagTaken
// [0x00020102] 
// Parameters infos:

void ATrRabbitBase::OnFlagTaken ( )
{
	static UFunction* pFnOnFlagTaken = NULL;

	if ( ! pFnOnFlagTaken )
		pFnOnFlagTaken = (UFunction*) UObject::GObjObjects()->Data[ 108820 ];

	ATrRabbitBase_execOnFlagTaken_Parms OnFlagTaken_Parms;

	this->ProcessEvent ( pFnOnFlagTaken, &OnFlagTaken_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.OnFlagComesHome
// [0x00020102] 
// Parameters infos:

void ATrRabbitBase::OnFlagComesHome ( )
{
	static UFunction* pFnOnFlagComesHome = NULL;

	if ( ! pFnOnFlagComesHome )
		pFnOnFlagComesHome = (UFunction*) UObject::GObjObjects()->Data[ 108819 ];

	ATrRabbitBase_execOnFlagComesHome_Parms OnFlagComesHome_Parms;

	this->ProcessEvent ( pFnOnFlagComesHome, &OnFlagComesHome_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.IsActive
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrRabbitBase::eventIsActive ( )
{
	static UFunction* pFnIsActive = NULL;

	if ( ! pFnIsActive )
		pFnIsActive = (UFunction*) UObject::GObjObjects()->Data[ 108817 ];

	ATrRabbitBase_eventIsActive_Parms IsActive_Parms;

	this->ProcessEvent ( pFnIsActive, &IsActive_Parms, NULL );

	return IsActive_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitBase.GetFlag
// [0x00020002] 
// Parameters infos:
// class AUTCarriedObject*        ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AUTCarriedObject* ATrRabbitBase::GetFlag ( )
{
	static UFunction* pFnGetFlag = NULL;

	if ( ! pFnGetFlag )
		pFnGetFlag = (UFunction*) UObject::GObjObjects()->Data[ 108815 ];

	ATrRabbitBase_execGetFlag_Parms GetFlag_Parms;

	this->ProcessEvent ( pFnGetFlag, &GetFlag_Parms, NULL );

	return GetFlag_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitBase.ObjectiveChanged
// [0x00020002] 
// Parameters infos:

void ATrRabbitBase::ObjectiveChanged ( )
{
	static UFunction* pFnObjectiveChanged = NULL;

	if ( ! pFnObjectiveChanged )
		pFnObjectiveChanged = (UFunction*) UObject::GObjObjects()->Data[ 108813 ];

	ATrRabbitBase_execObjectiveChanged_Parms ObjectiveChanged_Parms;

	this->ProcessEvent ( pFnObjectiveChanged, &ObjectiveChanged_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.GetLocationSpeechFor
// [0x00020102] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       PC                             ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )

class USoundNodeWave* ATrRabbitBase::GetLocationSpeechFor ( class APlayerController* PC, int LocationSpeechOffset, int MessageIndex )
{
	static UFunction* pFnGetLocationSpeechFor = NULL;

	if ( ! pFnGetLocationSpeechFor )
		pFnGetLocationSpeechFor = (UFunction*) UObject::GObjObjects()->Data[ 108808 ];

	ATrRabbitBase_execGetLocationSpeechFor_Parms GetLocationSpeechFor_Parms;
	GetLocationSpeechFor_Parms.PC = PC;
	GetLocationSpeechFor_Parms.LocationSpeechOffset = LocationSpeechOffset;
	GetLocationSpeechFor_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnGetLocationSpeechFor, &GetLocationSpeechFor_Parms, NULL );

	return GetLocationSpeechFor_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitBase.GetLocationMessageIndex
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   StatusPawn                     ( CPF_Parm )

int ATrRabbitBase::GetLocationMessageIndex ( class AUTBot* B, class APawn* StatusPawn )
{
	static UFunction* pFnGetLocationMessageIndex = NULL;

	if ( ! pFnGetLocationMessageIndex )
		pFnGetLocationMessageIndex = (UFunction*) UObject::GObjObjects()->Data[ 108802 ];

	ATrRabbitBase_execGetLocationMessageIndex_Parms GetLocationMessageIndex_Parms;
	GetLocationMessageIndex_Parms.B = B;
	GetLocationMessageIndex_Parms.StatusPawn = StatusPawn;

	this->ProcessEvent ( pFnGetLocationMessageIndex, &GetLocationMessageIndex_Parms, NULL );

	return GetLocationMessageIndex_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitBase.GetBestViewTarget
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ATrRabbitBase::eventGetBestViewTarget ( )
{
	static UFunction* pFnGetBestViewTarget = NULL;

	if ( ! pFnGetBestViewTarget )
		pFnGetBestViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 108800 ];

	ATrRabbitBase_eventGetBestViewTarget_Parms GetBestViewTarget_Parms;

	this->ProcessEvent ( pFnGetBestViewTarget, &GetBestViewTarget_Parms, NULL );

	return GetBestViewTarget_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitBase.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrRabbitBase::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 108798 ];

	ATrRabbitBase_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrRabbitBase.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrRabbitBase::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 108797 ];

	ATrRabbitBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.ShouldPostRenderForCaH
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrVehicleStation::ShouldPostRenderForCaH ( )
{
	static UFunction* pFnShouldPostRenderForCaH = NULL;

	if ( ! pFnShouldPostRenderForCaH )
		pFnShouldPostRenderForCaH = (UFunction*) UObject::GObjObjects()->Data[ 114074 ];

	ATrVehicleStation_execShouldPostRenderForCaH_Parms ShouldPostRenderForCaH_Parms;

	this->ProcessEvent ( pFnShouldPostRenderForCaH, &ShouldPostRenderForCaH_Parms, NULL );

	return ShouldPostRenderForCaH_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrVehicleStation::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 114072 ];

	ATrVehicleStation_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.AddVehicleToPackedList
// [0x00020002] 
// Parameters infos:
// unsigned char                  VehicleType                    ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

void ATrVehicleStation::AddVehicleToPackedList ( unsigned char VehicleType, int Num )
{
	static UFunction* pFnAddVehicleToPackedList = NULL;

	if ( ! pFnAddVehicleToPackedList )
		pFnAddVehicleToPackedList = (UFunction*) UObject::GObjObjects()->Data[ 114067 ];

	ATrVehicleStation_execAddVehicleToPackedList_Parms AddVehicleToPackedList_Parms;
	AddVehicleToPackedList_Parms.VehicleType = VehicleType;
	AddVehicleToPackedList_Parms.Num = Num;

	this->ProcessEvent ( pFnAddVehicleToPackedList, &AddVehicleToPackedList_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.GetNumVehiclesSpawnedByType
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  VehicleType                    ( CPF_Parm )

int ATrVehicleStation::GetNumVehiclesSpawnedByType ( unsigned char VehicleType )
{
	static UFunction* pFnGetNumVehiclesSpawnedByType = NULL;

	if ( ! pFnGetNumVehiclesSpawnedByType )
		pFnGetNumVehiclesSpawnedByType = (UFunction*) UObject::GObjObjects()->Data[ 77397 ];

	ATrVehicleStation_execGetNumVehiclesSpawnedByType_Parms GetNumVehiclesSpawnedByType_Parms;
	GetNumVehiclesSpawnedByType_Parms.VehicleType = VehicleType;

	this->ProcessEvent ( pFnGetNumVehiclesSpawnedByType, &GetNumVehiclesSpawnedByType_Parms, NULL );

	return GetNumVehiclesSpawnedByType_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.GetMaxVehicleCountAllowed
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  VehicleType                    ( CPF_Parm )

int ATrVehicleStation::GetMaxVehicleCountAllowed ( unsigned char VehicleType )
{
	static UFunction* pFnGetMaxVehicleCountAllowed = NULL;

	if ( ! pFnGetMaxVehicleCountAllowed )
		pFnGetMaxVehicleCountAllowed = (UFunction*) UObject::GObjObjects()->Data[ 77399 ];

	ATrVehicleStation_execGetMaxVehicleCountAllowed_Parms GetMaxVehicleCountAllowed_Parms;
	GetMaxVehicleCountAllowed_Parms.VehicleType = VehicleType;

	this->ProcessEvent ( pFnGetMaxVehicleCountAllowed, &GetMaxVehicleCountAllowed_Parms, NULL );

	return GetMaxVehicleCountAllowed_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.AbleToSpawnVehicleType
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  VehicleType                    ( CPF_Parm )

bool ATrVehicleStation::AbleToSpawnVehicleType ( unsigned char VehicleType )
{
	static UFunction* pFnAbleToSpawnVehicleType = NULL;

	if ( ! pFnAbleToSpawnVehicleType )
		pFnAbleToSpawnVehicleType = (UFunction*) UObject::GObjObjects()->Data[ 114060 ];

	ATrVehicleStation_execAbleToSpawnVehicleType_Parms AbleToSpawnVehicleType_Parms;
	AbleToSpawnVehicleType_Parms.VehicleType = VehicleType;

	this->ProcessEvent ( pFnAbleToSpawnVehicleType, &AbleToSpawnVehicleType_Parms, NULL );

	return AbleToSpawnVehicleType_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.Unlock
// [0x00020002] 
// Parameters infos:

void ATrVehicleStation::Unlock ( )
{
	static UFunction* pFnUnlock = NULL;

	if ( ! pFnUnlock )
		pFnUnlock = (UFunction*) UObject::GObjObjects()->Data[ 114059 ];

	ATrVehicleStation_execUnlock_Parms Unlock_Parms;

	this->ProcessEvent ( pFnUnlock, &Unlock_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.TeleportDriverToVehicle
// [0x00020002] 
// Parameters infos:

void ATrVehicleStation::TeleportDriverToVehicle ( )
{
	static UFunction* pFnTeleportDriverToVehicle = NULL;

	if ( ! pFnTeleportDriverToVehicle )
		pFnTeleportDriverToVehicle = (UFunction*) UObject::GObjObjects()->Data[ 114058 ];

	ATrVehicleStation_execTeleportDriverToVehicle_Parms TeleportDriverToVehicle_Parms;

	this->ProcessEvent ( pFnTeleportDriverToVehicle, &TeleportDriverToVehicle_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.SpawnVehicle
// [0x00020002] 
// Parameters infos:

void ATrVehicleStation::SpawnVehicle ( )
{
	static UFunction* pFnSpawnVehicle = NULL;

	if ( ! pFnSpawnVehicle )
		pFnSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 114055 ];

	ATrVehicleStation_execSpawnVehicle_Parms SpawnVehicle_Parms;

	this->ProcessEvent ( pFnSpawnVehicle, &SpawnVehicle_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.RequestSpawnVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  VehicleType                    ( CPF_Parm )

bool ATrVehicleStation::RequestSpawnVehicle ( unsigned char VehicleType )
{
	static UFunction* pFnRequestSpawnVehicle = NULL;

	if ( ! pFnRequestSpawnVehicle )
		pFnRequestSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 76480 ];

	ATrVehicleStation_execRequestSpawnVehicle_Parms RequestSpawnVehicle_Parms;
	RequestSpawnVehicle_Parms.VehicleType = VehicleType;

	this->ProcessEvent ( pFnRequestSpawnVehicle, &RequestSpawnVehicle_Parms, NULL );

	return RequestSpawnVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleStation.PlayVehiclePadCollapseAnim
// [0x00020102] 
// Parameters infos:

void ATrVehicleStation::PlayVehiclePadCollapseAnim ( )
{
	static UFunction* pFnPlayVehiclePadCollapseAnim = NULL;

	if ( ! pFnPlayVehiclePadCollapseAnim )
		pFnPlayVehiclePadCollapseAnim = (UFunction*) UObject::GObjObjects()->Data[ 114052 ];

	ATrVehicleStation_execPlayVehiclePadCollapseAnim_Parms PlayVehiclePadCollapseAnim_Parms;

	this->ProcessEvent ( pFnPlayVehiclePadCollapseAnim, &PlayVehiclePadCollapseAnim_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PlayVehiclePadDeployAnim
// [0x00020102] 
// Parameters infos:

void ATrVehicleStation::PlayVehiclePadDeployAnim ( )
{
	static UFunction* pFnPlayVehiclePadDeployAnim = NULL;

	if ( ! pFnPlayVehiclePadDeployAnim )
		pFnPlayVehiclePadDeployAnim = (UFunction*) UObject::GObjObjects()->Data[ 114051 ];

	ATrVehicleStation_execPlayVehiclePadDeployAnim_Parms PlayVehiclePadDeployAnim_Parms;

	this->ProcessEvent ( pFnPlayVehiclePadDeployAnim, &PlayVehiclePadDeployAnim_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PlayRetractAnim
// [0x00020102] 
// Parameters infos:

void ATrVehicleStation::PlayRetractAnim ( )
{
	static UFunction* pFnPlayRetractAnim = NULL;

	if ( ! pFnPlayRetractAnim )
		pFnPlayRetractAnim = (UFunction*) UObject::GObjObjects()->Data[ 114050 ];

	ATrVehicleStation_execPlayRetractAnim_Parms PlayRetractAnim_Parms;

	this->ProcessEvent ( pFnPlayRetractAnim, &PlayRetractAnim_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PlayStationLeftEffects
// [0x00020102] 
// Parameters infos:

void ATrVehicleStation::PlayStationLeftEffects ( )
{
	static UFunction* pFnPlayStationLeftEffects = NULL;

	if ( ! pFnPlayStationLeftEffects )
		pFnPlayStationLeftEffects = (UFunction*) UObject::GObjObjects()->Data[ 114049 ];

	ATrVehicleStation_execPlayStationLeftEffects_Parms PlayStationLeftEffects_Parms;

	this->ProcessEvent ( pFnPlayStationLeftEffects, &PlayStationLeftEffects_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PlayStationEnteredEffects
// [0x00020102] 
// Parameters infos:

void ATrVehicleStation::PlayStationEnteredEffects ( )
{
	static UFunction* pFnPlayStationEnteredEffects = NULL;

	if ( ! pFnPlayStationEnteredEffects )
		pFnPlayStationEnteredEffects = (UFunction*) UObject::GObjObjects()->Data[ 114047 ];

	ATrVehicleStation_execPlayStationEnteredEffects_Parms PlayStationEnteredEffects_Parms;

	this->ProcessEvent ( pFnPlayStationEnteredEffects, &PlayStationEnteredEffects_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PawnLeftStation
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrVehicleStation::PawnLeftStation ( class ATrPawn* P )
{
	static UFunction* pFnPawnLeftStation = NULL;

	if ( ! pFnPawnLeftStation )
		pFnPawnLeftStation = (UFunction*) UObject::GObjObjects()->Data[ 114045 ];

	ATrVehicleStation_execPawnLeftStation_Parms PawnLeftStation_Parms;
	PawnLeftStation_Parms.P = P;

	this->ProcessEvent ( pFnPawnLeftStation, &PawnLeftStation_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PawnEnteredStation
// [0x00820002] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrVehicleStation::PawnEnteredStation ( class ATrPawn* P )
{
	static UFunction* pFnPawnEnteredStation = NULL;

	if ( ! pFnPawnEnteredStation )
		pFnPawnEnteredStation = (UFunction*) UObject::GObjObjects()->Data[ 114041 ];

	ATrVehicleStation_execPawnEnteredStation_Parms PawnEnteredStation_Parms;
	PawnEnteredStation_Parms.P = P;

	this->ProcessEvent ( pFnPawnEnteredStation, &PawnEnteredStation_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrVehicleStation::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 114039 ];

	ATrVehicleStation_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrVehicleStation.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrVehicleStation::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 114037 ];

	ATrVehicleStation_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrRepairStation.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrRepairStation::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 109581 ];

	ATrRepairStation_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrRepairStation.CloseStation
// [0x00020102] 
// Parameters infos:

void ATrRepairStation::CloseStation ( )
{
	static UFunction* pFnCloseStation = NULL;

	if ( ! pFnCloseStation )
		pFnCloseStation = (UFunction*) UObject::GObjObjects()->Data[ 109580 ];

	ATrRepairStation_execCloseStation_Parms CloseStation_Parms;

	this->ProcessEvent ( pFnCloseStation, &CloseStation_Parms, NULL );
};

// Function TribesGame.TrRepairStation.PawnGrabbedRepairTool
// [0x00020102] 
// Parameters infos:

void ATrRepairStation::PawnGrabbedRepairTool ( )
{
	static UFunction* pFnPawnGrabbedRepairTool = NULL;

	if ( ! pFnPawnGrabbedRepairTool )
		pFnPawnGrabbedRepairTool = (UFunction*) UObject::GObjObjects()->Data[ 109579 ];

	ATrRepairStation_execPawnGrabbedRepairTool_Parms PawnGrabbedRepairTool_Parms;

	this->ProcessEvent ( pFnPawnGrabbedRepairTool, &PawnGrabbedRepairTool_Parms, NULL );
};

// Function TribesGame.TrRepairStation.PlayStationLeftEffects
// [0x00020102] 
// Parameters infos:

void ATrRepairStation::PlayStationLeftEffects ( )
{
	static UFunction* pFnPlayStationLeftEffects = NULL;

	if ( ! pFnPlayStationLeftEffects )
		pFnPlayStationLeftEffects = (UFunction*) UObject::GObjObjects()->Data[ 109578 ];

	ATrRepairStation_execPlayStationLeftEffects_Parms PlayStationLeftEffects_Parms;

	this->ProcessEvent ( pFnPlayStationLeftEffects, &PlayStationLeftEffects_Parms, NULL );
};

// Function TribesGame.TrRepairStation.PlayStationEnteredEffects
// [0x00020102] 
// Parameters infos:

void ATrRepairStation::PlayStationEnteredEffects ( )
{
	static UFunction* pFnPlayStationEnteredEffects = NULL;

	if ( ! pFnPlayStationEnteredEffects )
		pFnPlayStationEnteredEffects = (UFunction*) UObject::GObjObjects()->Data[ 109577 ];

	ATrRepairStation_execPlayStationEnteredEffects_Parms PlayStationEnteredEffects_Parms;

	this->ProcessEvent ( pFnPlayStationEnteredEffects, &PlayStationEnteredEffects_Parms, NULL );
};

// Function TribesGame.TrRepairStation.OnAnimEnd
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )
// float                          PlayedTime                     ( CPF_Parm )
// float                          ExcessTime                     ( CPF_Parm )

void ATrRepairStation::eventOnAnimEnd ( class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime )
{
	static UFunction* pFnOnAnimEnd = NULL;

	if ( ! pFnOnAnimEnd )
		pFnOnAnimEnd = (UFunction*) UObject::GObjObjects()->Data[ 109573 ];

	ATrRepairStation_eventOnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;

	this->ProcessEvent ( pFnOnAnimEnd, &OnAnimEnd_Parms, NULL );
};

// Function TribesGame.TrRepairStation.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrRepairStation::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 109571 ];

	ATrRepairStation_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrRepairStation.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrRepairStation::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 109570 ];

	ATrRepairStation_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TRRabbit::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89932 ];

	ATrGame_TRRabbit_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ATrGame_TRRabbit::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 89926 ];

	ATrGame_TRRabbit_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.DiscardInventory
// [0x00024002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void ATrGame_TRRabbit::DiscardInventory ( class APawn* Other, class AController* Killer )
{
	static UFunction* pFnDiscardInventory = NULL;

	if ( ! pFnDiscardInventory )
		pFnDiscardInventory = (UFunction*) UObject::GObjObjects()->Data[ 89921 ];

	ATrGame_TRRabbit_execDiscardInventory_Parms DiscardInventory_Parms;
	DiscardInventory_Parms.Other = Other;
	DiscardInventory_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDiscardInventory, &DiscardInventory_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.PlayEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void ATrGame_TRRabbit::PlayEndOfMatchMessage ( )
{
	static UFunction* pFnPlayEndOfMatchMessage = NULL;

	if ( ! pFnPlayEndOfMatchMessage )
		pFnPlayEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 89916 ];

	ATrGame_TRRabbit_execPlayEndOfMatchMessage_Parms PlayEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayEndOfMatchMessage, &PlayEndOfMatchMessage_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.PickTeamForMigration
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame_TRRabbit::PickTeamForMigration ( class AController* C )
{
	static UFunction* pFnPickTeamForMigration = NULL;

	if ( ! pFnPickTeamForMigration )
		pFnPickTeamForMigration = (UFunction*) UObject::GObjObjects()->Data[ 89913 ];

	ATrGame_TRRabbit_execPickTeamForMigration_Parms PickTeamForMigration_Parms;
	PickTeamForMigration_Parms.C = C;

	this->ProcessEvent ( pFnPickTeamForMigration, &PickTeamForMigration_Parms, NULL );

	return PickTeamForMigration_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.PickTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Num                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame_TRRabbit::PickTeam ( unsigned char Num, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 89909 ];

	ATrGame_TRRabbit_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Num = Num;
	PickTeam_Parms.C = C;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	return PickTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TRRabbit::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89902 ];

	ATrGame_TRRabbit_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TRRabbit::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 89898 ];

	ATrGame_TRRabbit_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.SortPlayerScores
// [0x00820102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TRRabbit::SortPlayerScores ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnSortPlayerScores = NULL;

	if ( ! pFnSortPlayerScores )
		pFnSortPlayerScores = (UFunction*) UObject::GObjObjects()->Data[ 89885 ];

	ATrGame_TRRabbit_execSortPlayerScores_Parms SortPlayerScores_Parms;
	SortPlayerScores_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnSortPlayerScores, &SortPlayerScores_Parms, NULL );

	return SortPlayerScores_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.MakeScoreStruct
// [0x00820102] 
// Parameters infos:
// struct FScoreStruct            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     C                              ( CPF_Parm )
// float                          Score                          ( CPF_Parm )

struct FScoreStruct ATrGame_TRRabbit::MakeScoreStruct ( class ATrPlayerController* C, float Score )
{
	static UFunction* pFnMakeScoreStruct = NULL;

	if ( ! pFnMakeScoreStruct )
		pFnMakeScoreStruct = (UFunction*) UObject::GObjObjects()->Data[ 89880 ];

	ATrGame_TRRabbit_execMakeScoreStruct_Parms MakeScoreStruct_Parms;
	MakeScoreStruct_Parms.C = C;
	MakeScoreStruct_Parms.Score = Score;

	this->ProcessEvent ( pFnMakeScoreStruct, &MakeScoreStruct_Parms, NULL );

	return MakeScoreStruct_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRRabbit.ChangePreviousRabbitTeam
// [0x00020002] 
// Parameters infos:

void ATrGame_TRRabbit::ChangePreviousRabbitTeam ( )
{
	static UFunction* pFnChangePreviousRabbitTeam = NULL;

	if ( ! pFnChangePreviousRabbitTeam )
		pFnChangePreviousRabbitTeam = (UFunction*) UObject::GObjObjects()->Data[ 89879 ];

	ATrGame_TRRabbit_execChangePreviousRabbitTeam_Parms ChangePreviousRabbitTeam_Parms;

	this->ProcessEvent ( pFnChangePreviousRabbitTeam, &ChangePreviousRabbitTeam_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TRRabbit::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 89876 ];

	ATrGame_TRRabbit_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.ScoreFlagHold
// [0x00020002] 
// Parameters infos:
// unsigned long                  firstPass                      ( CPF_Parm )

void ATrGame_TRRabbit::ScoreFlagHold ( unsigned long firstPass )
{
	static UFunction* pFnScoreFlagHold = NULL;

	if ( ! pFnScoreFlagHold )
		pFnScoreFlagHold = (UFunction*) UObject::GObjObjects()->Data[ 89873 ];

	ATrGame_TRRabbit_execScoreFlagHold_Parms ScoreFlagHold_Parms;
	ScoreFlagHold_Parms.firstPass = firstPass;

	this->ProcessEvent ( pFnScoreFlagHold, &ScoreFlagHold_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.ScoreFlagTimer
// [0x00020002] 
// Parameters infos:

void ATrGame_TRRabbit::ScoreFlagTimer ( )
{
	static UFunction* pFnScoreFlagTimer = NULL;

	if ( ! pFnScoreFlagTimer )
		pFnScoreFlagTimer = (UFunction*) UObject::GObjObjects()->Data[ 89872 ];

	ATrGame_TRRabbit_execScoreFlagTimer_Parms ScoreFlagTimer_Parms;

	this->ProcessEvent ( pFnScoreFlagTimer, &ScoreFlagTimer_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void ATrGame_TRRabbit::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 89867 ];

	ATrGame_TRRabbit_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.DroppedFlag
// [0x00020002] 
// Parameters infos:

void ATrGame_TRRabbit::DroppedFlag ( )
{
	static UFunction* pFnDroppedFlag = NULL;

	if ( ! pFnDroppedFlag )
		pFnDroppedFlag = (UFunction*) UObject::GObjObjects()->Data[ 89864 ];

	ATrGame_TRRabbit_execDroppedFlag_Parms DroppedFlag_Parms;

	this->ProcessEvent ( pFnDroppedFlag, &DroppedFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.PickedUpFlag
// [0x00020002] 
// Parameters infos:
// class AController*             Holder                         ( CPF_Parm )

void ATrGame_TRRabbit::PickedUpFlag ( class AController* Holder )
{
	static UFunction* pFnPickedUpFlag = NULL;

	if ( ! pFnPickedUpFlag )
		pFnPickedUpFlag = (UFunction*) UObject::GObjObjects()->Data[ 89861 ];

	ATrGame_TRRabbit_execPickedUpFlag_Parms PickedUpFlag_Parms;
	PickedUpFlag_Parms.Holder = Holder;

	this->ProcessEvent ( pFnPickedUpFlag, &PickedUpFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.RegisterFlag
// [0x00020002] 
// Parameters infos:
// class ATrFlagRabbit*           F                              ( CPF_Parm )

void ATrGame_TRRabbit::RegisterFlag ( class ATrFlagRabbit* F )
{
	static UFunction* pFnRegisterFlag = NULL;

	if ( ! pFnRegisterFlag )
		pFnRegisterFlag = (UFunction*) UObject::GObjObjects()->Data[ 89858 ];

	ATrGame_TRRabbit_execRegisterFlag_Parms RegisterFlag_Parms;
	RegisterFlag_Parms.F = F;

	this->ProcessEvent ( pFnRegisterFlag, &RegisterFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TRRabbit.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TRRabbit::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89856 ];

	ATrGame_TRRabbit_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_PromptText.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy_PromptText::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 74201 ];

	ATrCollisionProxy_PromptText_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_PromptText.TryTraceAgainTimer
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy_PromptText::TryTraceAgainTimer ( )
{
	static UFunction* pFnTryTraceAgainTimer = NULL;

	if ( ! pFnTryTraceAgainTimer )
		pFnTryTraceAgainTimer = (UFunction*) UObject::GObjObjects()->Data[ 74199 ];

	ATrCollisionProxy_PromptText_execTryTraceAgainTimer_Parms TryTraceAgainTimer_Parms;

	this->ProcessEvent ( pFnTryTraceAgainTimer, &TryTraceAgainTimer_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_PromptText.CheckForUpgradeLevel
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy_PromptText::CheckForUpgradeLevel ( )
{
	static UFunction* pFnCheckForUpgradeLevel = NULL;

	if ( ! pFnCheckForUpgradeLevel )
		pFnCheckForUpgradeLevel = (UFunction*) UObject::GObjObjects()->Data[ 74196 ];

	ATrCollisionProxy_PromptText_execCheckForUpgradeLevel_Parms CheckForUpgradeLevel_Parms;

	this->ProcessEvent ( pFnCheckForUpgradeLevel, &CheckForUpgradeLevel_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_PromptText.RequestPromptText
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy_PromptText::RequestPromptText ( )
{
	static UFunction* pFnRequestPromptText = NULL;

	if ( ! pFnRequestPromptText )
		pFnRequestPromptText = (UFunction*) UObject::GObjObjects()->Data[ 74191 ];

	ATrCollisionProxy_PromptText_execRequestPromptText_Parms RequestPromptText_Parms;

	this->ProcessEvent ( pFnRequestPromptText, &RequestPromptText_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_PromptText.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy_PromptText::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 74188 ];

	ATrCollisionProxy_PromptText_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.ChoosePlayerStart
// [0x00024002] 
// Parameters infos:
// class APlayerStart*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Player                         ( CPF_Parm )
// unsigned char                  InTeam                         ( CPF_OptionalParm | CPF_Parm )

class APlayerStart* ATrGame_TrCaH::ChoosePlayerStart ( class AController* Player, unsigned char InTeam )
{
	static UFunction* pFnChoosePlayerStart = NULL;

	if ( ! pFnChoosePlayerStart )
		pFnChoosePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 89678 ];

	ATrGame_TrCaH_execChoosePlayerStart_Parms ChoosePlayerStart_Parms;
	ChoosePlayerStart_Parms.Player = Player;
	ChoosePlayerStart_Parms.InTeam = InTeam;

	this->ProcessEvent ( pFnChoosePlayerStart, &ChoosePlayerStart_Parms, NULL );

	return ChoosePlayerStart_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrCaH.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ATrGame_TrCaH::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 89669 ];

	ATrGame_TrCaH_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrCaH.OnCapturePointOwnershipChanged
// [0x00020002] 
// Parameters infos:
// class ATrCaHCapturePoint*      PointThatChanged               ( CPF_Parm )
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrGame_TrCaH::OnCapturePointOwnershipChanged ( class ATrCaHCapturePoint* PointThatChanged, class ATrPawn* TRP )
{
	static UFunction* pFnOnCapturePointOwnershipChanged = NULL;

	if ( ! pFnOnCapturePointOwnershipChanged )
		pFnOnCapturePointOwnershipChanged = (UFunction*) UObject::GObjObjects()->Data[ 89665 ];

	ATrGame_TrCaH_execOnCapturePointOwnershipChanged_Parms OnCapturePointOwnershipChanged_Parms;
	OnCapturePointOwnershipChanged_Parms.PointThatChanged = PointThatChanged;
	OnCapturePointOwnershipChanged_Parms.TRP = TRP;

	this->ProcessEvent ( pFnOnCapturePointOwnershipChanged, &OnCapturePointOwnershipChanged_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.OnCapturePointHeld
// [0x00020002] 
// Parameters infos:
// class ATrCaHCapturePoint*      HeldPoint                      ( CPF_Parm )

void ATrGame_TrCaH::OnCapturePointHeld ( class ATrCaHCapturePoint* HeldPoint )
{
	static UFunction* pFnOnCapturePointHeld = NULL;

	if ( ! pFnOnCapturePointHeld )
		pFnOnCapturePointHeld = (UFunction*) UObject::GObjObjects()->Data[ 89661 ];

	ATrGame_TrCaH_execOnCapturePointHeld_Parms OnCapturePointHeld_Parms;
	OnCapturePointHeld_Parms.HeldPoint = HeldPoint;

	this->ProcessEvent ( pFnOnCapturePointHeld, &OnCapturePointHeld_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrCaH::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89659 ];

	ATrGame_TrCaH_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrCaH.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             NewPlayer                      ( CPF_Parm )

void ATrGame_TrCaH::RestartPlayer ( class AController* NewPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89657 ];

	ATrGame_TrCaH_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.AwardPoint
// [0x00020000] 
// Parameters infos:
// unsigned char                  TeamIndex                      ( CPF_Parm )

void ATrGame_TrCaH::AwardPoint ( unsigned char TeamIndex )
{
	static UFunction* pFnAwardPoint = NULL;

	if ( ! pFnAwardPoint )
		pFnAwardPoint = (UFunction*) UObject::GObjObjects()->Data[ 89648 ];

	ATrGame_TrCaH_execAwardPoint_Parms AwardPoint_Parms;
	AwardPoint_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnAwardPoint, &AwardPoint_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TrCaH::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89642 ];

	ATrGame_TrCaH_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrCaH.GotoPendingRoundStartTimer
// [0x00020002] 
// Parameters infos:

void ATrGame_TrCaH::GotoPendingRoundStartTimer ( )
{
	static UFunction* pFnGotoPendingRoundStartTimer = NULL;

	if ( ! pFnGotoPendingRoundStartTimer )
		pFnGotoPendingRoundStartTimer = (UFunction*) UObject::GObjObjects()->Data[ 89641 ];

	ATrGame_TrCaH_execGotoPendingRoundStartTimer_Parms GotoPendingRoundStartTimer_Parms;

	this->ProcessEvent ( pFnGotoPendingRoundStartTimer, &GotoPendingRoundStartTimer_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TrCaH::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 89638 ];

	ATrGame_TrCaH_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrCaH.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TrCaH::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 89635 ];

	ATrGame_TrCaH_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.ResetLevel
// [0x00020002] 
// Parameters infos:

void ATrGame_TrCaH::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 89634 ];

	ATrGame_TrCaH_execResetLevel_Parms ResetLevel_Parms;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrCaH::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89633 ];

	ATrGame_TrCaH_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.Logout
// [0x00020002] 
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void ATrGame_TrCaH::Logout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 89631 ];

	ATrGame_TrCaH_execLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void ATrGame_TrCaH::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 89627 ];

	ATrGame_TrCaH_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TrCaH::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89625 ];

	ATrGame_TrCaH_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrGame_TrCaH.PreBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrCaH::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89623 ];

	ATrGame_TrCaH_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDeployable_BackupGenerator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79497 ];

	ATrDeployable_BackupGenerator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrDeployable_BackupGenerator::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 79496 ];

	ATrDeployable_BackupGenerator_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.DoPowerUpdate
// [0x00020002] 
// Parameters infos:
// class ATrDeployable*           dep                            ( CPF_Parm )

void ATrDeployable_BackupGenerator::DoPowerUpdate ( class ATrDeployable* dep )
{
	static UFunction* pFnDoPowerUpdate = NULL;

	if ( ! pFnDoPowerUpdate )
		pFnDoPowerUpdate = (UFunction*) UObject::GObjObjects()->Data[ 79494 ];

	ATrDeployable_BackupGenerator_execDoPowerUpdate_Parms DoPowerUpdate_Parms;
	DoPowerUpdate_Parms.dep = dep;

	this->ProcessEvent ( pFnDoPowerUpdate, &DoPowerUpdate_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrDeployable_BackupGenerator::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 79493 ];

	ATrDeployable_BackupGenerator_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.DoPowerCheck
// [0x00020002] 
// Parameters infos:

void ATrDeployable_BackupGenerator::DoPowerCheck ( )
{
	static UFunction* pFnDoPowerCheck = NULL;

	if ( ! pFnDoPowerCheck )
		pFnDoPowerCheck = (UFunction*) UObject::GObjObjects()->Data[ 79492 ];

	ATrDeployable_BackupGenerator_execDoPowerCheck_Parms DoPowerCheck_Parms;

	this->ProcessEvent ( pFnDoPowerCheck, &DoPowerCheck_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.AsynchPowerCheck
// [0x00020002] 
// Parameters infos:

void ATrDeployable_BackupGenerator::AsynchPowerCheck ( )
{
	static UFunction* pFnAsynchPowerCheck = NULL;

	if ( ! pFnAsynchPowerCheck )
		pFnAsynchPowerCheck = (UFunction*) UObject::GObjObjects()->Data[ 79491 ];

	ATrDeployable_BackupGenerator_execAsynchPowerCheck_Parms AsynchPowerCheck_Parms;

	this->ProcessEvent ( pFnAsynchPowerCheck, &AsynchPowerCheck_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.PulseBackupGenerators
// [0x00020000] 
// Parameters infos:

void ATrDeployable_BackupGenerator::PulseBackupGenerators ( )
{
	static UFunction* pFnPulseBackupGenerators = NULL;

	if ( ! pFnPulseBackupGenerators )
		pFnPulseBackupGenerators = (UFunction*) UObject::GObjObjects()->Data[ 79490 ];

	ATrDeployable_BackupGenerator_execPulseBackupGenerators_Parms PulseBackupGenerators_Parms;

	this->ProcessEvent ( pFnPulseBackupGenerators, &PulseBackupGenerators_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.ReleasePoweredFriend
// [0x00020002] 
// Parameters infos:

void ATrDeployable_BackupGenerator::ReleasePoweredFriend ( )
{
	static UFunction* pFnReleasePoweredFriend = NULL;

	if ( ! pFnReleasePoweredFriend )
		pFnReleasePoweredFriend = (UFunction*) UObject::GObjObjects()->Data[ 79489 ];

	ATrDeployable_BackupGenerator_execReleasePoweredFriend_Parms ReleasePoweredFriend_Parms;

	this->ProcessEvent ( pFnReleasePoweredFriend, &ReleasePoweredFriend_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.PowerNearestFriend
// [0x00020002] 
// Parameters infos:

void ATrDeployable_BackupGenerator::PowerNearestFriend ( )
{
	static UFunction* pFnPowerNearestFriend = NULL;

	if ( ! pFnPowerNearestFriend )
		pFnPowerNearestFriend = (UFunction*) UObject::GObjObjects()->Data[ 79484 ];

	ATrDeployable_BackupGenerator_execPowerNearestFriend_Parms PowerNearestFriend_Parms;

	this->ProcessEvent ( pFnPowerNearestFriend, &PowerNearestFriend_Parms, NULL );
};

// Function TribesGame.TrDeployable_BackupGenerator.MainGeneratorIsOnline
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrDeployable_BackupGenerator::MainGeneratorIsOnline ( )
{
	static UFunction* pFnMainGeneratorIsOnline = NULL;

	if ( ! pFnMainGeneratorIsOnline )
		pFnMainGeneratorIsOnline = (UFunction*) UObject::GObjObjects()->Data[ 79480 ];

	ATrDeployable_BackupGenerator_execMainGeneratorIsOnline_Parms MainGeneratorIsOnline_Parms;

	this->ProcessEvent ( pFnMainGeneratorIsOnline, &MainGeneratorIsOnline_Parms, NULL );

	return MainGeneratorIsOnline_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_BackupGenerator.DeployComplete
// [0x00020102] 
// Parameters infos:

void ATrDeployable_BackupGenerator::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 79479 ];

	ATrDeployable_BackupGenerator_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_HelpText.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy_HelpText::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 74170 ];

	ATrCollisionProxy_HelpText_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_HelpText.TryTraceAgainTimer
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy_HelpText::TryTraceAgainTimer ( )
{
	static UFunction* pFnTryTraceAgainTimer = NULL;

	if ( ! pFnTryTraceAgainTimer )
		pFnTryTraceAgainTimer = (UFunction*) UObject::GObjObjects()->Data[ 74168 ];

	ATrCollisionProxy_HelpText_execTryTraceAgainTimer_Parms TryTraceAgainTimer_Parms;

	this->ProcessEvent ( pFnTryTraceAgainTimer, &TryTraceAgainTimer_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_HelpText.RequestHelpText
// [0x00020102] 
// Parameters infos:

void ATrCollisionProxy_HelpText::RequestHelpText ( )
{
	static UFunction* pFnRequestHelpText = NULL;

	if ( ! pFnRequestHelpText )
		pFnRequestHelpText = (UFunction*) UObject::GObjObjects()->Data[ 74166 ];

	ATrCollisionProxy_HelpText_execRequestHelpText_Parms RequestHelpText_Parms;

	this->ProcessEvent ( pFnRequestHelpText, &RequestHelpText_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_HelpText.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrCollisionProxy_HelpText::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 74164 ];

	ATrCollisionProxy_HelpText_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_HelpText.ShouldShowHelpText_Delegate
// [0x00120002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrCollisionProxy_HelpText::ShouldShowHelpText_Delegate ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText_Delegate = NULL;

	if ( ! pFnShouldShowHelpText_Delegate )
		pFnShouldShowHelpText_Delegate = (UFunction*) UObject::GObjObjects()->Data[ 74159 ];

	ATrCollisionProxy_HelpText_execShouldShowHelpText_Delegate_Parms ShouldShowHelpText_Delegate_Parms;
	ShouldShowHelpText_Delegate_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText_Delegate, &ShouldShowHelpText_Delegate_Parms, NULL );

	return ShouldShowHelpText_Delegate_Parms.ReturnValue;
};

// Function TribesGame.TrPromptMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrPromptMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 74194 ];

	UTrPromptMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrPromptMessage.FormatText
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InString                       ( CPF_Parm | CPF_NeedCtorLink )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

struct FString UTrPromptMessage::FormatText ( struct FString InString, class ATrPlayerController* TrPC )
{
	static UFunction* pFnFormatText = NULL;

	if ( ! pFnFormatText )
		pFnFormatText = (UFunction*) UObject::GObjObjects()->Data[ 108512 ];

	UTrPromptMessage_execFormatText_Parms FormatText_Parms;
	memcpy ( &FormatText_Parms.InString, &InString, 0xC );
	FormatText_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnFormatText, &FormatText_Parms, NULL );

	return FormatText_Parms.ReturnValue;
};

// Function TribesGame.TrUpgradeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrUpgradeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 112436 ];

	UTrUpgradeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrUpgradeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrUpgradeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 112426 ];

	UTrUpgradeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrSubDevice.CalcWeaponFire
// [0x00C24102] 
// Parameters infos:
// struct FImpactInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 Extent                         ( CPF_OptionalParm | CPF_Parm )
// TArray< struct FImpactInfo >   ImpactList                     ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FImpactInfo ATrSubDevice::CalcWeaponFire ( struct FVector StartTrace, struct FVector EndTrace, struct FVector Extent, TArray< struct FImpactInfo >* ImpactList )
{
	static UFunction* pFnCalcWeaponFire = NULL;

	if ( ! pFnCalcWeaponFire )
		pFnCalcWeaponFire = (UFunction*) UObject::GObjObjects()->Data[ 112033 ];

	ATrSubDevice_execCalcWeaponFire_Parms CalcWeaponFire_Parms;
	memcpy ( &CalcWeaponFire_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.Extent, &Extent, 0xC );

	this->ProcessEvent ( pFnCalcWeaponFire, &CalcWeaponFire_Parms, NULL );

	if ( ImpactList )
		memcpy ( ImpactList, &CalcWeaponFire_Parms.ImpactList, 0xC );

	return CalcWeaponFire_Parms.ReturnValue;
};

// Function TribesGame.TrSubDevice.Reset
// [0x00020002] 
// Parameters infos:

void ATrSubDevice::Reset ( )
{
	static UFunction* pFnReset = NULL;

	if ( ! pFnReset )
		pFnReset = (UFunction*) UObject::GObjObjects()->Data[ 112032 ];

	ATrSubDevice_execReset_Parms Reset_Parms;

	this->ProcessEvent ( pFnReset, &Reset_Parms, NULL );
};

// Function TribesGame.TrDeployableCollisionProxy.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrDeployableCollisionProxy::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 80056 ];

	ATrDeployableCollisionProxy_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrDeployableCollisionProxy.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrDeployableCollisionProxy::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 80053 ];

	ATrDeployableCollisionProxy_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrDeployableController.ScriptGetTeamNum
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrDeployableController::eventScriptGetTeamNum ( )
{
	static UFunction* pFnScriptGetTeamNum = NULL;

	if ( ! pFnScriptGetTeamNum )
		pFnScriptGetTeamNum = (UFunction*) UObject::GObjObjects()->Data[ 80065 ];

	ATrDeployableController_eventScriptGetTeamNum_Parms ScriptGetTeamNum_Parms;

	this->ProcessEvent ( pFnScriptGetTeamNum, &ScriptGetTeamNum_Parms, NULL );

	return ScriptGetTeamNum_Parms.ReturnValue;
};

// Function TribesGame.TrDeployableController.CanFireWeapon
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 Wpn                            ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ATrDeployableController::CanFireWeapon ( class AWeapon* Wpn, unsigned char FireModeNum )
{
	static UFunction* pFnCanFireWeapon = NULL;

	if ( ! pFnCanFireWeapon )
		pFnCanFireWeapon = (UFunction*) UObject::GObjObjects()->Data[ 80061 ];

	ATrDeployableController_execCanFireWeapon_Parms CanFireWeapon_Parms;
	CanFireWeapon_Parms.Wpn = Wpn;
	CanFireWeapon_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnCanFireWeapon, &CanFireWeapon_Parms, NULL );

	return CanFireWeapon_Parms.ReturnValue;
};

// Function TribesGame.TrSubDevice_Turret.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float ATrSubDevice_Turret::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 112050 ];

	ATrSubDevice_Turret_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function TribesGame.TrSubDevice_Turret.GetPhysicalFireStartLoc
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ATrSubDevice_Turret::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 112047 ];

	ATrSubDevice_Turret_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function TribesGame.TrBaseTurret_Neutral.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrBaseTurret_Neutral::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 71753 ];

	ATrBaseTurret_Neutral_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrBaseTurret_Neutral.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrBaseTurret_Neutral::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 71750 ];

	ATrBaseTurret_Neutral_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_DropJammer.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_DropJammer::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79603 ];

	ATrDeployable_DropJammer_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_DropJammer.RemoveDetectedPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )

void ATrDeployable_DropJammer::RemoveDetectedPawn ( class APawn* DetectedPawn )
{
	static UFunction* pFnRemoveDetectedPawn = NULL;

	if ( ! pFnRemoveDetectedPawn )
		pFnRemoveDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79594 ];

	ATrDeployable_DropJammer_execRemoveDetectedPawn_Parms RemoveDetectedPawn_Parms;
	RemoveDetectedPawn_Parms.DetectedPawn = DetectedPawn;

	this->ProcessEvent ( pFnRemoveDetectedPawn, &RemoveDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_DropJammer.AddDetectedPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )

void ATrDeployable_DropJammer::AddDetectedPawn ( class APawn* DetectedPawn )
{
	static UFunction* pFnAddDetectedPawn = NULL;

	if ( ! pFnAddDetectedPawn )
		pFnAddDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79591 ];

	ATrDeployable_DropJammer_execAddDetectedPawn_Parms AddDetectedPawn_Parms;
	AddDetectedPawn_Parms.DetectedPawn = DetectedPawn;

	this->ProcessEvent ( pFnAddDetectedPawn, &AddDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_DropJammer.OnPowerStatusChanged
// [0x00020102] 
// Parameters infos:

void ATrDeployable_DropJammer::OnPowerStatusChanged ( )
{
	static UFunction* pFnOnPowerStatusChanged = NULL;

	if ( ! pFnOnPowerStatusChanged )
		pFnOnPowerStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 79588 ];

	ATrDeployable_DropJammer_execOnPowerStatusChanged_Parms OnPowerStatusChanged_Parms;

	this->ProcessEvent ( pFnOnPowerStatusChanged, &OnPowerStatusChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable_DropJammer.ShouldDetectPawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ATrDeployable_DropJammer::ShouldDetectPawn ( class APawn* P )
{
	static UFunction* pFnShouldDetectPawn = NULL;

	if ( ! pFnShouldDetectPawn )
		pFnShouldDetectPawn = (UFunction*) UObject::GObjObjects()->Data[ 79585 ];

	ATrDeployable_DropJammer_execShouldDetectPawn_Parms ShouldDetectPawn_Parms;
	ShouldDetectPawn_Parms.P = P;

	this->ProcessEvent ( pFnShouldDetectPawn, &ShouldDetectPawn_Parms, NULL );

	return ShouldDetectPawn_Parms.ReturnValue;
};

// Function TribesGame.TrPawnCollisionProxy.OnPawnRemoved
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrPawnCollisionProxy::OnPawnRemoved ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnRemoved = NULL;

	if ( ! pFnOnPawnRemoved )
		pFnOnPawnRemoved = (UFunction*) UObject::GObjObjects()->Data[ 99663 ];

	ATrPawnCollisionProxy_execOnPawnRemoved_Parms OnPawnRemoved_Parms;
	OnPawnRemoved_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnRemoved, &OnPawnRemoved_Parms, NULL );
};

// Function TribesGame.TrPawnCollisionProxy.OnPawnAdded
// [0x00020102] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )

void ATrPawnCollisionProxy::OnPawnAdded ( class APawn* aPawn )
{
	static UFunction* pFnOnPawnAdded = NULL;

	if ( ! pFnOnPawnAdded )
		pFnOnPawnAdded = (UFunction*) UObject::GObjObjects()->Data[ 99660 ];

	ATrPawnCollisionProxy_execOnPawnAdded_Parms OnPawnAdded_Parms;
	OnPawnAdded_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnOnPawnAdded, &OnPawnAdded_Parms, NULL );
};

// Function TribesGame.TrDevice_AmmoPack.ApplyAmmoBuff
// [0x00020002] 
// Parameters infos:

void ATrDevice_AmmoPack::ApplyAmmoBuff ( )
{
	static UFunction* pFnApplyAmmoBuff = NULL;

	if ( ! pFnApplyAmmoBuff )
		pFnApplyAmmoBuff = (UFunction*) UObject::GObjObjects()->Data[ 80295 ];

	ATrDevice_AmmoPack_execApplyAmmoBuff_Parms ApplyAmmoBuff_Parms;

	this->ProcessEvent ( pFnApplyAmmoBuff, &ApplyAmmoBuff_Parms, NULL );
};

// Function TribesGame.TrDevice_AmmoPack.AddAmmoBuff
// [0x00020002] 
// Parameters infos:
// class ATrDevice*               Dev                            ( CPF_Parm )
// float                          Mult                           ( CPF_Parm )

void ATrDevice_AmmoPack::AddAmmoBuff ( class ATrDevice* Dev, float Mult )
{
	static UFunction* pFnAddAmmoBuff = NULL;

	if ( ! pFnAddAmmoBuff )
		pFnAddAmmoBuff = (UFunction*) UObject::GObjObjects()->Data[ 80292 ];

	ATrDevice_AmmoPack_execAddAmmoBuff_Parms AddAmmoBuff_Parms;
	AddAmmoBuff_Parms.Dev = Dev;
	AddAmmoBuff_Parms.Mult = Mult;

	this->ProcessEvent ( pFnAddAmmoBuff, &AddAmmoBuff_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayBlinkPackSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayBlinkPackSound ( class APawn* P )
{
	static UFunction* pFnPlayBlinkPackSound = NULL;

	if ( ! pFnPlayBlinkPackSound )
		pFnPlayBlinkPackSound = (UFunction*) UObject::GObjObjects()->Data[ 99709 ];

	UTrPawnSoundGroup_execPlayBlinkPackSound_Parms PlayBlinkPackSound_Parms;
	PlayBlinkPackSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayBlinkPackSound, &PlayBlinkPackSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayDyingSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayDyingSound ( class APawn* P )
{
	static UFunction* pFnPlayDyingSound = NULL;

	if ( ! pFnPlayDyingSound )
		pFnPlayDyingSound = (UFunction*) UObject::GObjObjects()->Data[ 99707 ];

	UTrPawnSoundGroup_execPlayDyingSound_Parms PlayDyingSound_Parms;
	PlayDyingSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayDyingSound, &PlayDyingSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayRageDeactivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayRageDeactivateSound ( class APawn* P )
{
	static UFunction* pFnPlayRageDeactivateSound = NULL;

	if ( ! pFnPlayRageDeactivateSound )
		pFnPlayRageDeactivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99705 ];

	UTrPawnSoundGroup_execPlayRageDeactivateSound_Parms PlayRageDeactivateSound_Parms;
	PlayRageDeactivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayRageDeactivateSound, &PlayRageDeactivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayRageActivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayRageActivateSound ( class APawn* P )
{
	static UFunction* pFnPlayRageActivateSound = NULL;

	if ( ! pFnPlayRageActivateSound )
		pFnPlayRageActivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99703 ];

	UTrPawnSoundGroup_execPlayRageActivateSound_Parms PlayRageActivateSound_Parms;
	PlayRageActivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayRageActivateSound, &PlayRageActivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayJammerPackDeactivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayJammerPackDeactivateSound ( class APawn* P )
{
	static UFunction* pFnPlayJammerPackDeactivateSound = NULL;

	if ( ! pFnPlayJammerPackDeactivateSound )
		pFnPlayJammerPackDeactivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99701 ];

	UTrPawnSoundGroup_execPlayJammerPackDeactivateSound_Parms PlayJammerPackDeactivateSound_Parms;
	PlayJammerPackDeactivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayJammerPackDeactivateSound, &PlayJammerPackDeactivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayJammerPackActivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayJammerPackActivateSound ( class APawn* P )
{
	static UFunction* pFnPlayJammerPackActivateSound = NULL;

	if ( ! pFnPlayJammerPackActivateSound )
		pFnPlayJammerPackActivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99699 ];

	UTrPawnSoundGroup_execPlayJammerPackActivateSound_Parms PlayJammerPackActivateSound_Parms;
	PlayJammerPackActivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayJammerPackActivateSound, &PlayJammerPackActivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayStealthPackDeactivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayStealthPackDeactivateSound ( class APawn* P )
{
	static UFunction* pFnPlayStealthPackDeactivateSound = NULL;

	if ( ! pFnPlayStealthPackDeactivateSound )
		pFnPlayStealthPackDeactivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99697 ];

	UTrPawnSoundGroup_execPlayStealthPackDeactivateSound_Parms PlayStealthPackDeactivateSound_Parms;
	PlayStealthPackDeactivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayStealthPackDeactivateSound, &PlayStealthPackDeactivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayStealthPackActivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayStealthPackActivateSound ( class APawn* P )
{
	static UFunction* pFnPlayStealthPackActivateSound = NULL;

	if ( ! pFnPlayStealthPackActivateSound )
		pFnPlayStealthPackActivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99695 ];

	UTrPawnSoundGroup_execPlayStealthPackActivateSound_Parms PlayStealthPackActivateSound_Parms;
	PlayStealthPackActivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayStealthPackActivateSound, &PlayStealthPackActivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayShieldPackDeactivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayShieldPackDeactivateSound ( class APawn* P )
{
	static UFunction* pFnPlayShieldPackDeactivateSound = NULL;

	if ( ! pFnPlayShieldPackDeactivateSound )
		pFnPlayShieldPackDeactivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99693 ];

	UTrPawnSoundGroup_execPlayShieldPackDeactivateSound_Parms PlayShieldPackDeactivateSound_Parms;
	PlayShieldPackDeactivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayShieldPackDeactivateSound, &PlayShieldPackDeactivateSound_Parms, NULL );
};

// Function TribesGame.TrPawnSoundGroup.PlayShieldPackActivateSound
// [0x00022002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void UTrPawnSoundGroup::PlayShieldPackActivateSound ( class APawn* P )
{
	static UFunction* pFnPlayShieldPackActivateSound = NULL;

	if ( ! pFnPlayShieldPackActivateSound )
		pFnPlayShieldPackActivateSound = (UFunction*) UObject::GObjObjects()->Data[ 99691 ];

	UTrPawnSoundGroup_execPlayShieldPackActivateSound_Parms PlayShieldPackActivateSound_Parms;
	PlayShieldPackActivateSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayShieldPackActivateSound, &PlayShieldPackActivateSound_Parms, NULL );
};

// Function TribesGame.TrJammerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrJammerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 97407 ];

	UTrJammerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrFlagCTF.BroadcastDroppedMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::BroadcastDroppedMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastDroppedMessage = NULL;

	if ( ! pFnBroadcastDroppedMessage )
		pFnBroadcastDroppedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87690 ];

	ATrFlagCTF_execBroadcastDroppedMessage_Parms BroadcastDroppedMessage_Parms;
	BroadcastDroppedMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastDroppedMessage, &BroadcastDroppedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.BroadcastReturnedMessage
// [0x00020002] 
// Parameters infos:

void ATrFlagCTF::BroadcastReturnedMessage ( )
{
	static UFunction* pFnBroadcastReturnedMessage = NULL;

	if ( ! pFnBroadcastReturnedMessage )
		pFnBroadcastReturnedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87687 ];

	ATrFlagCTF_execBroadcastReturnedMessage_Parms BroadcastReturnedMessage_Parms;

	this->ProcessEvent ( pFnBroadcastReturnedMessage, &BroadcastReturnedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.BroadcastCapturedMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::BroadcastCapturedMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastCapturedMessage = NULL;

	if ( ! pFnBroadcastCapturedMessage )
		pFnBroadcastCapturedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87685 ];

	ATrFlagCTF_execBroadcastCapturedMessage_Parms BroadcastCapturedMessage_Parms;
	BroadcastCapturedMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastCapturedMessage, &BroadcastCapturedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.BroadcastTakenDroppedMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::BroadcastTakenDroppedMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastTakenDroppedMessage = NULL;

	if ( ! pFnBroadcastTakenDroppedMessage )
		pFnBroadcastTakenDroppedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87682 ];

	ATrFlagCTF_execBroadcastTakenDroppedMessage_Parms BroadcastTakenDroppedMessage_Parms;
	BroadcastTakenDroppedMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastTakenDroppedMessage, &BroadcastTakenDroppedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.BroadcastTakenFromBaseMessage
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::BroadcastTakenFromBaseMessage ( class AController* EventInstigator )
{
	static UFunction* pFnBroadcastTakenFromBaseMessage = NULL;

	if ( ! pFnBroadcastTakenFromBaseMessage )
		pFnBroadcastTakenFromBaseMessage = (UFunction*) UObject::GObjObjects()->Data[ 87679 ];

	ATrFlagCTF_execBroadcastTakenFromBaseMessage_Parms BroadcastTakenFromBaseMessage_Parms;
	BroadcastTakenFromBaseMessage_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnBroadcastTakenFromBaseMessage, &BroadcastTakenFromBaseMessage_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.RemindPlayerAboutFlagTimer
// [0x00020002] 
// Parameters infos:

void ATrFlagCTF::RemindPlayerAboutFlagTimer ( )
{
	static UFunction* pFnRemindPlayerAboutFlagTimer = NULL;

	if ( ! pFnRemindPlayerAboutFlagTimer )
		pFnRemindPlayerAboutFlagTimer = (UFunction*) UObject::GObjObjects()->Data[ 87676 ];

	ATrFlagCTF_execRemindPlayerAboutFlagTimer_Parms RemindPlayerAboutFlagTimer_Parms;

	this->ProcessEvent ( pFnRemindPlayerAboutFlagTimer, &RemindPlayerAboutFlagTimer_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.SendHome
// [0x00020002] 
// Parameters infos:
// class AController*             Returner                       ( CPF_Parm )

void ATrFlagCTF::SendHome ( class AController* Returner )
{
	static UFunction* pFnSendHome = NULL;

	if ( ! pFnSendHome )
		pFnSendHome = (UFunction*) UObject::GObjObjects()->Data[ 87673 ];

	ATrFlagCTF_execSendHome_Parms SendHome_Parms;
	SendHome_Parms.Returner = Returner;

	this->ProcessEvent ( pFnSendHome, &SendHome_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.ClearHolder
// [0x00020002] 
// Parameters infos:

void ATrFlagCTF::ClearHolder ( )
{
	static UFunction* pFnClearHolder = NULL;

	if ( ! pFnClearHolder )
		pFnClearHolder = (UFunction*) UObject::GObjObjects()->Data[ 87665 ];

	ATrFlagCTF_execClearHolder_Parms ClearHolder_Parms;

	this->ProcessEvent ( pFnClearHolder, &ClearHolder_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.LogDropped
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::LogDropped ( class AController* EventInstigator )
{
	static UFunction* pFnLogDropped = NULL;

	if ( ! pFnLogDropped )
		pFnLogDropped = (UFunction*) UObject::GObjObjects()->Data[ 87663 ];

	ATrFlagCTF_execLogDropped_Parms LogDropped_Parms;
	LogDropped_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogDropped, &LogDropped_Parms, NULL );
};

// Function TribesGame.TrFlagCTF.LogTaken
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ATrFlagCTF::LogTaken ( class AController* EventInstigator )
{
	static UFunction* pFnLogTaken = NULL;

	if ( ! pFnLogTaken )
		pFnLogTaken = (UFunction*) UObject::GObjObjects()->Data[ 87661 ];

	ATrFlagCTF_execLogTaken_Parms LogTaken_Parms;
	LogTaken_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogTaken, &LogTaken_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.SendMatchOver
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::SendMatchOver ( )
{
	static UFunction* pFnSendMatchOver = NULL;

	if ( ! pFnSendMatchOver )
		pFnSendMatchOver = (UFunction*) UObject::GObjObjects()->Data[ 89610 ];

	ATrGame_TrArena_execSendMatchOver_Parms SendMatchOver_Parms;

	this->ProcessEvent ( pFnSendMatchOver, &SendMatchOver_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrArena::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89608 ];

	ATrGame_TrArena_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.OnServerSpawnedPlayer
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

void ATrGame_TrArena::OnServerSpawnedPlayer ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnOnServerSpawnedPlayer = NULL;

	if ( ! pFnOnServerSpawnedPlayer )
		pFnOnServerSpawnedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89603 ];

	ATrGame_TrArena_execOnServerSpawnedPlayer_Parms OnServerSpawnedPlayer_Parms;
	OnServerSpawnedPlayer_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnOnServerSpawnedPlayer, &OnServerSpawnedPlayer_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.AllowRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     TrPC                           ( CPF_Parm )

bool ATrGame_TrArena::AllowRespawn ( class ATrPlayerController* TrPC )
{
	static UFunction* pFnAllowRespawn = NULL;

	if ( ! pFnAllowRespawn )
		pFnAllowRespawn = (UFunction*) UObject::GObjObjects()->Data[ 89597 ];

	ATrGame_TrArena_execAllowRespawn_Parms AllowRespawn_Parms;
	AllowRespawn_Parms.TrPC = TrPC;

	this->ProcessEvent ( pFnAllowRespawn, &AllowRespawn_Parms, NULL );

	return AllowRespawn_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.SendMatchCountdown
// [0x00020002] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrGame_TrArena::SendMatchCountdown ( int Seconds )
{
	static UFunction* pFnSendMatchCountdown = NULL;

	if ( ! pFnSendMatchCountdown )
		pFnSendMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 89592 ];

	ATrGame_TrArena_execSendMatchCountdown_Parms SendMatchCountdown_Parms;
	SendMatchCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnSendMatchCountdown, &SendMatchCountdown_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.CheckForAutoBalance
// [0x00020000] 
// Parameters infos:

void ATrGame_TrArena::CheckForAutoBalance ( )
{
	static UFunction* pFnCheckForAutoBalance = NULL;

	if ( ! pFnCheckForAutoBalance )
		pFnCheckForAutoBalance = (UFunction*) UObject::GObjObjects()->Data[ 89555 ];

	ATrGame_TrArena_execCheckForAutoBalance_Parms CheckForAutoBalance_Parms;

	this->ProcessEvent ( pFnCheckForAutoBalance, &CheckForAutoBalance_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TrArena::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89547 ];

	ATrGame_TrArena_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.IsDiamondSwordOutOfLives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGame_TrArena::IsDiamondSwordOutOfLives ( )
{
	static UFunction* pFnIsDiamondSwordOutOfLives = NULL;

	if ( ! pFnIsDiamondSwordOutOfLives )
		pFnIsDiamondSwordOutOfLives = (UFunction*) UObject::GObjObjects()->Data[ 89543 ];

	ATrGame_TrArena_execIsDiamondSwordOutOfLives_Parms IsDiamondSwordOutOfLives_Parms;

	this->ProcessEvent ( pFnIsDiamondSwordOutOfLives, &IsDiamondSwordOutOfLives_Parms, NULL );

	return IsDiamondSwordOutOfLives_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.IsBloodEagleOutOfLives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGame_TrArena::IsBloodEagleOutOfLives ( )
{
	static UFunction* pFnIsBloodEagleOutOfLives = NULL;

	if ( ! pFnIsBloodEagleOutOfLives )
		pFnIsBloodEagleOutOfLives = (UFunction*) UObject::GObjObjects()->Data[ 89539 ];

	ATrGame_TrArena_execIsBloodEagleOutOfLives_Parms IsBloodEagleOutOfLives_Parms;

	this->ProcessEvent ( pFnIsBloodEagleOutOfLives, &IsBloodEagleOutOfLives_Parms, NULL );

	return IsBloodEagleOutOfLives_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.GetNumRemainingAlivePlayers
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            TeamIndex                      ( CPF_Parm )

int ATrGame_TrArena::GetNumRemainingAlivePlayers ( int TeamIndex )
{
	static UFunction* pFnGetNumRemainingAlivePlayers = NULL;

	if ( ! pFnGetNumRemainingAlivePlayers )
		pFnGetNumRemainingAlivePlayers = (UFunction*) UObject::GObjObjects()->Data[ 89533 ];

	ATrGame_TrArena_execGetNumRemainingAlivePlayers_Parms GetNumRemainingAlivePlayers_Parms;
	GetNumRemainingAlivePlayers_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnGetNumRemainingAlivePlayers, &GetNumRemainingAlivePlayers_Parms, NULL );

	return GetNumRemainingAlivePlayers_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.GotoPendingRoundStartTimer
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::GotoPendingRoundStartTimer ( )
{
	static UFunction* pFnGotoPendingRoundStartTimer = NULL;

	if ( ! pFnGotoPendingRoundStartTimer )
		pFnGotoPendingRoundStartTimer = (UFunction*) UObject::GObjObjects()->Data[ 89532 ];

	ATrGame_TrArena_execGotoPendingRoundStartTimer_Parms GotoPendingRoundStartTimer_Parms;

	this->ProcessEvent ( pFnGotoPendingRoundStartTimer, &GotoPendingRoundStartTimer_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.EndTheRound
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  RoundWinner                    ( CPF_Parm )

void ATrGame_TrArena::EndTheRound ( class APlayerReplicationInfo* RoundWinner )
{
	static UFunction* pFnEndTheRound = NULL;

	if ( ! pFnEndTheRound )
		pFnEndTheRound = (UFunction*) UObject::GObjObjects()->Data[ 89527 ];

	ATrGame_TrArena_execEndTheRound_Parms EndTheRound_Parms;
	EndTheRound_Parms.RoundWinner = RoundWinner;

	this->ProcessEvent ( pFnEndTheRound, &EndTheRound_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.GetRoundWinningTeam
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrArena::GetRoundWinningTeam ( )
{
	static UFunction* pFnGetRoundWinningTeam = NULL;

	if ( ! pFnGetRoundWinningTeam )
		pFnGetRoundWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 89523 ];

	ATrGame_TrArena_execGetRoundWinningTeam_Parms GetRoundWinningTeam_Parms;

	this->ProcessEvent ( pFnGetRoundWinningTeam, &GetRoundWinningTeam_Parms, NULL );

	return GetRoundWinningTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.DetermineWinningTeam
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrArena::DetermineWinningTeam ( )
{
	static UFunction* pFnDetermineWinningTeam = NULL;

	if ( ! pFnDetermineWinningTeam )
		pFnDetermineWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 89520 ];

	ATrGame_TrArena_execDetermineWinningTeam_Parms DetermineWinningTeam_Parms;

	this->ProcessEvent ( pFnDetermineWinningTeam, &DetermineWinningTeam_Parms, NULL );

	return DetermineWinningTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TrArena::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 89517 ];

	ATrGame_TrArena_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrArena.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TrArena::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 89502 ];

	ATrGame_TrArena_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.ResetRound
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::ResetRound ( )
{
	static UFunction* pFnResetRound = NULL;

	if ( ! pFnResetRound )
		pFnResetRound = (UFunction*) UObject::GObjObjects()->Data[ 89494 ];

	ATrGame_TrArena_execResetRound_Parms ResetRound_Parms;

	this->ProcessEvent ( pFnResetRound, &ResetRound_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.RespawnPlayers
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::RespawnPlayers ( )
{
	static UFunction* pFnRespawnPlayers = NULL;

	if ( ! pFnRespawnPlayers )
		pFnRespawnPlayers = (UFunction*) UObject::GObjObjects()->Data[ 89492 ];

	ATrGame_TrArena_execRespawnPlayers_Parms RespawnPlayers_Parms;

	this->ProcessEvent ( pFnRespawnPlayers, &RespawnPlayers_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.ResetLevel
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 89491 ];

	ATrGame_TrArena_execResetLevel_Parms ResetLevel_Parms;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89490 ];

	ATrGame_TrArena_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.Logout
// [0x00020002] 
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void ATrGame_TrArena::Logout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 89486 ];

	ATrGame_TrArena_execLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void ATrGame_TrArena::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 89480 ];

	ATrGame_TrArena_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.RepopulatePlayerLists
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::RepopulatePlayerLists ( )
{
	static UFunction* pFnRepopulatePlayerLists = NULL;

	if ( ! pFnRepopulatePlayerLists )
		pFnRepopulatePlayerLists = (UFunction*) UObject::GObjObjects()->Data[ 89472 ];

	ATrGame_TrArena_execRepopulatePlayerLists_Parms RepopulatePlayerLists_Parms;

	this->ProcessEvent ( pFnRepopulatePlayerLists, &RepopulatePlayerLists_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.ResetScores
// [0x00020002] 
// Parameters infos:

void ATrGame_TrArena::ResetScores ( )
{
	static UFunction* pFnResetScores = NULL;

	if ( ! pFnResetScores )
		pFnResetScores = (UFunction*) UObject::GObjObjects()->Data[ 89467 ];

	ATrGame_TrArena_execResetScores_Parms ResetScores_Parms;

	this->ProcessEvent ( pFnResetScores, &ResetScores_Parms, NULL );
};

// Function TribesGame.TrGame_TrArena.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TrArena::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89463 ];

	ATrGame_TrArena_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrClientSideWeaponPawn.DetachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrClientSideWeaponPawn::DetachDriver ( class APawn* P )
{
	static UFunction* pFnDetachDriver = NULL;

	if ( ! pFnDetachDriver )
		pFnDetachDriver = (UFunction*) UObject::GObjObjects()->Data[ 74081 ];

	ATrClientSideWeaponPawn_execDetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;

	this->ProcessEvent ( pFnDetachDriver, &DetachDriver_Parms, NULL );
};

// Function TribesGame.TrBroadcastHandler.UpdateSpottedActorsTimer
// [0x00020002] 
// Parameters infos:

void ATrBroadcastHandler::UpdateSpottedActorsTimer ( )
{
	static UFunction* pFnUpdateSpottedActorsTimer = NULL;

	if ( ! pFnUpdateSpottedActorsTimer )
		pFnUpdateSpottedActorsTimer = (UFunction*) UObject::GObjObjects()->Data[ 73293 ];

	ATrBroadcastHandler_execUpdateSpottedActorsTimer_Parms UpdateSpottedActorsTimer_Parms;

	this->ProcessEvent ( pFnUpdateSpottedActorsTimer, &UpdateSpottedActorsTimer_Parms, NULL );
};

// Function TribesGame.TrBroadcastHandler.OnActorSpotted
// [0x00024002] 
// Parameters infos:
// class AActor*                  SpottedActor                   ( CPF_Parm )
// class UClass*                  SpottedTargetClass             ( CPF_OptionalParm | CPF_Parm )

void ATrBroadcastHandler::OnActorSpotted ( class AActor* SpottedActor, class UClass* SpottedTargetClass )
{
	static UFunction* pFnOnActorSpotted = NULL;

	if ( ! pFnOnActorSpotted )
		pFnOnActorSpotted = (UFunction*) UObject::GObjObjects()->Data[ 73285 ];

	ATrBroadcastHandler_execOnActorSpotted_Parms OnActorSpotted_Parms;
	OnActorSpotted_Parms.SpottedActor = SpottedActor;
	OnActorSpotted_Parms.SpottedTargetClass = SpottedTargetClass;

	this->ProcessEvent ( pFnOnActorSpotted, &OnActorSpotted_Parms, NULL );
};

// Function TribesGame.TrBroadcastHandler.TeamBroadcastVGSContextCommand
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  SenderPRI                      ( CPF_Parm )
// unsigned char                  ContextActor                   ( CPF_Parm )
// unsigned char                  ContextLocation                ( CPF_Parm )
// unsigned long                  bEnemyLocation                 ( CPF_Parm )

void ATrBroadcastHandler::TeamBroadcastVGSContextCommand ( class APlayerReplicationInfo* SenderPRI, unsigned char ContextActor, unsigned char ContextLocation, unsigned long bEnemyLocation )
{
	static UFunction* pFnTeamBroadcastVGSContextCommand = NULL;

	if ( ! pFnTeamBroadcastVGSContextCommand )
		pFnTeamBroadcastVGSContextCommand = (UFunction*) UObject::GObjObjects()->Data[ 73279 ];

	ATrBroadcastHandler_execTeamBroadcastVGSContextCommand_Parms TeamBroadcastVGSContextCommand_Parms;
	TeamBroadcastVGSContextCommand_Parms.SenderPRI = SenderPRI;
	TeamBroadcastVGSContextCommand_Parms.ContextActor = ContextActor;
	TeamBroadcastVGSContextCommand_Parms.ContextLocation = ContextLocation;
	TeamBroadcastVGSContextCommand_Parms.bEnemyLocation = bEnemyLocation;

	this->ProcessEvent ( pFnTeamBroadcastVGSContextCommand, &TeamBroadcastVGSContextCommand_Parms, NULL );
};

// Function TribesGame.TrBroadcastHandler.GlobalBroadcastVGSCommand
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  SenderPRI                      ( CPF_Parm )
// unsigned char                  VGSCommandIndex                ( CPF_Parm )

void ATrBroadcastHandler::GlobalBroadcastVGSCommand ( class APlayerReplicationInfo* SenderPRI, unsigned char VGSCommandIndex )
{
	static UFunction* pFnGlobalBroadcastVGSCommand = NULL;

	if ( ! pFnGlobalBroadcastVGSCommand )
		pFnGlobalBroadcastVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 73275 ];

	ATrBroadcastHandler_execGlobalBroadcastVGSCommand_Parms GlobalBroadcastVGSCommand_Parms;
	GlobalBroadcastVGSCommand_Parms.SenderPRI = SenderPRI;
	GlobalBroadcastVGSCommand_Parms.VGSCommandIndex = VGSCommandIndex;

	this->ProcessEvent ( pFnGlobalBroadcastVGSCommand, &GlobalBroadcastVGSCommand_Parms, NULL );
};

// Function TribesGame.TrBroadcastHandler.TeamBroadcastVGSCommand
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  SenderPRI                      ( CPF_Parm )
// unsigned char                  VGSCommandIndex                ( CPF_Parm )

void ATrBroadcastHandler::TeamBroadcastVGSCommand ( class APlayerReplicationInfo* SenderPRI, unsigned char VGSCommandIndex )
{
	static UFunction* pFnTeamBroadcastVGSCommand = NULL;

	if ( ! pFnTeamBroadcastVGSCommand )
		pFnTeamBroadcastVGSCommand = (UFunction*) UObject::GObjObjects()->Data[ 73271 ];

	ATrBroadcastHandler_execTeamBroadcastVGSCommand_Parms TeamBroadcastVGSCommand_Parms;
	TeamBroadcastVGSCommand_Parms.SenderPRI = SenderPRI;
	TeamBroadcastVGSCommand_Parms.VGSCommandIndex = VGSCommandIndex;

	this->ProcessEvent ( pFnTeamBroadcastVGSCommand, &TeamBroadcastVGSCommand_Parms, NULL );
};

// Function TribesGame.TrRadarStation_Neutral.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrRadarStation_Neutral::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 109426 ];

	ATrRadarStation_Neutral_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrRadarStation_Neutral.ShouldShowHelpText
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  HelpTextType                   ( CPF_Parm )

bool ATrRadarStation_Neutral::ShouldShowHelpText ( unsigned char HelpTextType )
{
	static UFunction* pFnShouldShowHelpText = NULL;

	if ( ! pFnShouldShowHelpText )
		pFnShouldShowHelpText = (UFunction*) UObject::GObjObjects()->Data[ 109423 ];

	ATrRadarStation_Neutral_execShouldShowHelpText_Parms ShouldShowHelpText_Parms;
	ShouldShowHelpText_Parms.HelpTextType = HelpTextType;

	this->ProcessEvent ( pFnShouldShowHelpText, &ShouldShowHelpText_Parms, NULL );

	return ShouldShowHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrCaHMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrCaHMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 73468 ];

	UTrCaHMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrCaHMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrCaHMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 73460 ];

	UTrCaHMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrCaHStats.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 73534 ];

	UTrCaHStats_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrCaHStats.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrCaHStats::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 73528 ];

	UTrCaHStats_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrCaHStats.UpdateTeamScore
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrCaHStats::UpdateTeamScore ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTeamScore = NULL;

	if ( ! pFnUpdateTeamScore )
		pFnUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 73521 ];

	UTrCaHStats_execUpdateTeamScore_Parms UpdateTeamScore_Parms;
	UpdateTeamScore_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTeamScore, &UpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrCaHStats.UpdateCapturePointData
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrCaHStats::UpdateCapturePointData ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateCapturePointData = NULL;

	if ( ! pFnUpdateCapturePointData )
		pFnUpdateCapturePointData = (UFunction*) UObject::GObjObjects()->Data[ 73514 ];

	UTrCaHStats_execUpdateCapturePointData_Parms UpdateCapturePointData_Parms;
	UpdateCapturePointData_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateCapturePointData, &UpdateCapturePointData_Parms, NULL );
};

// Function TribesGame.TrCaHStats.UpdateTeam
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::UpdateTeam ( )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 73513 ];

	UTrCaHStats_execUpdateTeam_Parms UpdateTeam_Parms;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );
};

// Function TribesGame.TrCaHStats.Tick
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 73511 ];

	UTrCaHStats_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrCaHStats.Hide
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 73510 ];

	UTrCaHStats_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrCaHStats.Show
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 73509 ];

	UTrCaHStats_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrCaHStats.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrCaHStats::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 73506 ];

	UTrCaHStats_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrCaHStats.ReadyToPlay
// [0x00020002] 
// Parameters infos:

void UTrCaHStats::ReadyToPlay ( )
{
	static UFunction* pFnReadyToPlay = NULL;

	if ( ! pFnReadyToPlay )
		pFnReadyToPlay = (UFunction*) UObject::GObjObjects()->Data[ 73503 ];

	UTrCaHStats_execReadyToPlay_Parms ReadyToPlay_Parms;

	this->ProcessEvent ( pFnReadyToPlay, &ReadyToPlay_Parms, NULL );
};

// Function TribesGame.TrCallInMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrCallInMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 73750 ];

	UTrCallInMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn_CrashLandInfo.PerformLandingDamage
// [0x00820002] 
// Parameters infos:

void ATrCallIn_CrashLandInfo::PerformLandingDamage ( )
{
	static UFunction* pFnPerformLandingDamage = NULL;

	if ( ! pFnPerformLandingDamage )
		pFnPerformLandingDamage = (UFunction*) UObject::GObjObjects()->Data[ 73608 ];

	ATrCallIn_CrashLandInfo_execPerformLandingDamage_Parms PerformLandingDamage_Parms;

	this->ProcessEvent ( pFnPerformLandingDamage, &PerformLandingDamage_Parms, NULL );
};

// Function TribesGame.TrCallIn_CrashLandInfo.MoveSameTeamPawn
// [0x00820002] 
// Parameters infos:
// class ATrPawn*                 PawnToMove                     ( CPF_Parm )

void ATrCallIn_CrashLandInfo::MoveSameTeamPawn ( class ATrPawn* PawnToMove )
{
	static UFunction* pFnMoveSameTeamPawn = NULL;

	if ( ! pFnMoveSameTeamPawn )
		pFnMoveSameTeamPawn = (UFunction*) UObject::GObjObjects()->Data[ 73602 ];

	ATrCallIn_CrashLandInfo_execMoveSameTeamPawn_Parms MoveSameTeamPawn_Parms;
	MoveSameTeamPawn_Parms.PawnToMove = PawnToMove;

	this->ProcessEvent ( pFnMoveSameTeamPawn, &MoveSameTeamPawn_Parms, NULL );
};

// Function TribesGame.TrCallIn_CrashLandInfo.DeliveryPodLanded
// [0x00020002] 
// Parameters infos:

void ATrCallIn_CrashLandInfo::DeliveryPodLanded ( )
{
	static UFunction* pFnDeliveryPodLanded = NULL;

	if ( ! pFnDeliveryPodLanded )
		pFnDeliveryPodLanded = (UFunction*) UObject::GObjObjects()->Data[ 73600 ];

	ATrCallIn_CrashLandInfo_execDeliveryPodLanded_Parms DeliveryPodLanded_Parms;

	this->ProcessEvent ( pFnDeliveryPodLanded, &DeliveryPodLanded_Parms, NULL );
};

// Function TribesGame.TrCallIn_CrashLandInfo.InitTimer
// [0x00820102] 
// Parameters infos:

void ATrCallIn_CrashLandInfo::InitTimer ( )
{
	static UFunction* pFnInitTimer = NULL;

	if ( ! pFnInitTimer )
		pFnInitTimer = (UFunction*) UObject::GObjObjects()->Data[ 73596 ];

	ATrCallIn_CrashLandInfo_execInitTimer_Parms InitTimer_Parms;

	this->ProcessEvent ( pFnInitTimer, &InitTimer_Parms, NULL );
};

// Function TribesGame.TrCallIn_CrashLandInfo.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrCallIn_CrashLandInfo::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 73595 ];

	ATrCallIn_CrashLandInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrCallIn_CrashLandInfo.SpawnCrashLandInfo
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Initializer                    ( CPF_Parm )
// float                          CrashLandTime                  ( CPF_Parm )
// struct FVector                 CrashLandPoint                 ( CPF_Parm )
// struct FVector                 CrashLandNormal                ( CPF_Parm )
// class UClass*                  ItemInDeliveryPod              ( CPF_Parm )

bool ATrCallIn_CrashLandInfo::SpawnCrashLandInfo ( class AController* Initializer, float CrashLandTime, struct FVector CrashLandPoint, struct FVector CrashLandNormal, class UClass* ItemInDeliveryPod )
{
	static UFunction* pFnSpawnCrashLandInfo = NULL;

	if ( ! pFnSpawnCrashLandInfo )
		pFnSpawnCrashLandInfo = (UFunction*) UObject::GObjObjects()->Data[ 73587 ];

	ATrCallIn_CrashLandInfo_execSpawnCrashLandInfo_Parms SpawnCrashLandInfo_Parms;
	SpawnCrashLandInfo_Parms.Initializer = Initializer;
	SpawnCrashLandInfo_Parms.CrashLandTime = CrashLandTime;
	memcpy ( &SpawnCrashLandInfo_Parms.CrashLandPoint, &CrashLandPoint, 0xC );
	memcpy ( &SpawnCrashLandInfo_Parms.CrashLandNormal, &CrashLandNormal, 0xC );
	SpawnCrashLandInfo_Parms.ItemInDeliveryPod = ItemInDeliveryPod;

	this->ProcessEvent ( pFnSpawnCrashLandInfo, &SpawnCrashLandInfo_Parms, NULL );

	return SpawnCrashLandInfo_Parms.ReturnValue;
};

// Function TribesGame.TrCallIn_OpenDeliveryPod.RemovePod
// [0x00020102] 
// Parameters infos:

void ATrCallIn_OpenDeliveryPod::RemovePod ( )
{
	static UFunction* pFnRemovePod = NULL;

	if ( ! pFnRemovePod )
		pFnRemovePod = (UFunction*) UObject::GObjObjects()->Data[ 73659 ];

	ATrCallIn_OpenDeliveryPod_execRemovePod_Parms RemovePod_Parms;

	this->ProcessEvent ( pFnRemovePod, &RemovePod_Parms, NULL );
};

// Function TribesGame.TrCallIn_OpenDeliveryPod.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrCallIn_OpenDeliveryPod::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 73657 ];

	ATrCallIn_OpenDeliveryPod_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrCallIn_Projectile.FireProjectile
// [0x00820002] 
// Parameters infos:

void ATrCallIn_Projectile::FireProjectile ( )
{
	static UFunction* pFnFireProjectile = NULL;

	if ( ! pFnFireProjectile )
		pFnFireProjectile = (UFunction*) UObject::GObjObjects()->Data[ 73684 ];

	ATrCallIn_Projectile_execFireProjectile_Parms FireProjectile_Parms;

	this->ProcessEvent ( pFnFireProjectile, &FireProjectile_Parms, NULL );
};

// Function TribesGame.TrCallIn_Projectile.FireCompletedCallIn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CallInOffs                     ( CPF_Parm )
// struct FVector                 TargetLocation                 ( CPF_Parm )
// struct FVector                 TargetNormal                   ( CPF_Parm )

bool ATrCallIn_Projectile::FireCompletedCallIn ( int CallInOffs, struct FVector TargetLocation, struct FVector TargetNormal )
{
	static UFunction* pFnFireCompletedCallIn = NULL;

	if ( ! pFnFireCompletedCallIn )
		pFnFireCompletedCallIn = (UFunction*) UObject::GObjObjects()->Data[ 73676 ];

	ATrCallIn_Projectile_execFireCompletedCallIn_Parms FireCompletedCallIn_Parms;
	FireCompletedCallIn_Parms.CallInOffs = CallInOffs;
	memcpy ( &FireCompletedCallIn_Parms.TargetLocation, &TargetLocation, 0xC );
	memcpy ( &FireCompletedCallIn_Parms.TargetNormal, &TargetNormal, 0xC );

	this->ProcessEvent ( pFnFireCompletedCallIn, &FireCompletedCallIn_Parms, NULL );

	return FireCompletedCallIn_Parms.ReturnValue;
};

// Function TribesGame.TrProj_CallInBase.EffectIsRelevant
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SpawnLocation                  ( CPF_Parm )
// unsigned long                  bForceDedicated                ( CPF_Parm )
// float                          VisibleCullDistance            ( CPF_OptionalParm | CPF_Parm )
// float                          HiddenCullDistance             ( CPF_OptionalParm | CPF_Parm )

bool ATrProj_CallInBase::EffectIsRelevant ( struct FVector SpawnLocation, unsigned long bForceDedicated, float VisibleCullDistance, float HiddenCullDistance )
{
	static UFunction* pFnEffectIsRelevant = NULL;

	if ( ! pFnEffectIsRelevant )
		pFnEffectIsRelevant = (UFunction*) UObject::GObjObjects()->Data[ 107253 ];

	ATrProj_CallInBase_execEffectIsRelevant_Parms EffectIsRelevant_Parms;
	memcpy ( &EffectIsRelevant_Parms.SpawnLocation, &SpawnLocation, 0xC );
	EffectIsRelevant_Parms.bForceDedicated = bForceDedicated;
	EffectIsRelevant_Parms.VisibleCullDistance = VisibleCullDistance;
	EffectIsRelevant_Parms.HiddenCullDistance = HiddenCullDistance;

	this->ProcessEvent ( pFnEffectIsRelevant, &EffectIsRelevant_Parms, NULL );

	return EffectIsRelevant_Parms.ReturnValue;
};

// Function TribesGame.TrProj_CallInBase.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrProj_CallInBase::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 107251 ];

	ATrProj_CallInBase_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrProj_OrbitalStrike.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_OrbitalStrike::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107874 ];

	ATrProj_OrbitalStrike_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrCallIn_Support.DestroyOverLimit
// [0x00020002] 
// Parameters infos:

void ATrCallIn_Support::DestroyOverLimit ( )
{
	static UFunction* pFnDestroyOverLimit = NULL;

	if ( ! pFnDestroyOverLimit )
		pFnDestroyOverLimit = (UFunction*) UObject::GObjObjects()->Data[ 73716 ];

	ATrCallIn_Support_execDestroyOverLimit_Parms DestroyOverLimit_Parms;

	this->ProcessEvent ( pFnDestroyOverLimit, &DestroyOverLimit_Parms, NULL );
};

// Function TribesGame.TrCallIn_Support.FireCompletedCallIn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            CallInOffs                     ( CPF_Parm )
// struct FVector                 TargetLocation                 ( CPF_Parm )
// struct FVector                 TargetNormal                   ( CPF_Parm )

bool ATrCallIn_Support::FireCompletedCallIn ( int CallInOffs, struct FVector TargetLocation, struct FVector TargetNormal )
{
	static UFunction* pFnFireCompletedCallIn = NULL;

	if ( ! pFnFireCompletedCallIn )
		pFnFireCompletedCallIn = (UFunction*) UObject::GObjObjects()->Data[ 73710 ];

	ATrCallIn_Support_execFireCompletedCallIn_Parms FireCompletedCallIn_Parms;
	FireCompletedCallIn_Parms.CallInOffs = CallInOffs;
	memcpy ( &FireCompletedCallIn_Parms.TargetLocation, &TargetLocation, 0xC );
	memcpy ( &FireCompletedCallIn_Parms.TargetNormal, &TargetNormal, 0xC );

	this->ProcessEvent ( pFnFireCompletedCallIn, &FireCompletedCallIn_Parms, NULL );

	return FireCompletedCallIn_Parms.ReturnValue;
};

// Function TribesGame.TrCamera_Spectator.SetFOV
// [0x00020002] 
// Parameters infos:
// float                          NewFOV                         ( CPF_Parm )

void ATrCamera_Spectator::SetFOV ( float NewFOV )
{
	static UFunction* pFnSetFOV = NULL;

	if ( ! pFnSetFOV )
		pFnSetFOV = (UFunction*) UObject::GObjObjects()->Data[ 73875 ];

	ATrCamera_Spectator_execSetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.NewFOV = NewFOV;

	this->ProcessEvent ( pFnSetFOV, &SetFOV_Parms, NULL );
};

// Function TribesGame.TrCamera_Spectator.ShowHiddenPawn
// [0x00020002] 
// Parameters infos:

void ATrCamera_Spectator::ShowHiddenPawn ( )
{
	static UFunction* pFnShowHiddenPawn = NULL;

	if ( ! pFnShowHiddenPawn )
		pFnShowHiddenPawn = (UFunction*) UObject::GObjObjects()->Data[ 73874 ];

	ATrCamera_Spectator_execShowHiddenPawn_Parms ShowHiddenPawn_Parms;

	this->ProcessEvent ( pFnShowHiddenPawn, &ShowHiddenPawn_Parms, NULL );
};

// Function TribesGame.TrCamera_Spectator.UpdateViewTarget
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FTViewTarget            OutVT                          ( CPF_Parm | CPF_OutParm )

void ATrCamera_Spectator::UpdateViewTarget ( float DeltaTime, struct FTViewTarget* OutVT )
{
	static UFunction* pFnUpdateViewTarget = NULL;

	if ( ! pFnUpdateViewTarget )
		pFnUpdateViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 73859 ];

	ATrCamera_Spectator_execUpdateViewTarget_Parms UpdateViewTarget_Parms;
	UpdateViewTarget_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL );

	if ( OutVT )
		memcpy ( OutVT, &UpdateViewTarget_Parms.OutVT, 0x2C );
};

// Function TribesGame.TrCamera_Spectator.UpdateCamera
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrCamera_Spectator::eventUpdateCamera ( float DeltaTime )
{
	static UFunction* pFnUpdateCamera = NULL;

	if ( ! pFnUpdateCamera )
		pFnUpdateCamera = (UFunction*) UObject::GObjObjects()->Data[ 73852 ];

	ATrCamera_Spectator_eventUpdateCamera_Parms UpdateCamera_Parms;
	UpdateCamera_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateCamera, &UpdateCamera_Parms, NULL );
};

// Function TribesGame.TrCamera_Spectator.InitializeFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ATrCamera_Spectator::InitializeFor ( class APlayerController* PC )
{
	static UFunction* pFnInitializeFor = NULL;

	if ( ! pFnInitializeFor )
		pFnInitializeFor = (UFunction*) UObject::GObjObjects()->Data[ 73850 ];

	ATrCamera_Spectator_execInitializeFor_Parms InitializeFor_Parms;
	InitializeFor_Parms.PC = PC;

	this->ProcessEvent ( pFnInitializeFor, &InitializeFor_Parms, NULL );
};

// Function TribesGame.TrChatConsole.AddOnlineFriendHelp
// [0x00820002] 
// Parameters infos:

void UTrChatConsole::AddOnlineFriendHelp ( )
{
	static UFunction* pFnAddOnlineFriendHelp = NULL;

	if ( ! pFnAddOnlineFriendHelp )
		pFnAddOnlineFriendHelp = (UFunction*) UObject::GObjObjects()->Data[ 73914 ];

	UTrChatConsole_execAddOnlineFriendHelp_Parms AddOnlineFriendHelp_Parms;

	this->ProcessEvent ( pFnAddOnlineFriendHelp, &AddOnlineFriendHelp_Parms, NULL );
};

// Function TribesGame.TrChatConsole.InputKey
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   Key                            ( CPF_Parm )
// unsigned char                  Event                          ( CPF_Parm )
// float                          AmountDepressed                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGamepad                       ( CPF_OptionalParm | CPF_Parm )

bool UTrChatConsole::InputKey ( int ControllerId, struct FName Key, unsigned char Event, float AmountDepressed, unsigned long bGamepad )
{
	static UFunction* pFnInputKey = NULL;

	if ( ! pFnInputKey )
		pFnInputKey = (UFunction*) UObject::GObjObjects()->Data[ 73907 ];

	UTrChatConsole_execInputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy ( &InputKey_Parms.Key, &Key, 0x8 );
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;

	this->ProcessEvent ( pFnInputKey, &InputKey_Parms, NULL );

	return InputKey_Parms.ReturnValue;
};

// Function TribesGame.TrChatConsole.PostRender_Console
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UTrChatConsole::PostRender_Console ( class UCanvas* Canvas )
{
	static UFunction* pFnPostRender_Console = NULL;

	if ( ! pFnPostRender_Console )
		pFnPostRender_Console = (UFunction*) UObject::GObjObjects()->Data[ 73905 ];

	UTrChatConsole_execPostRender_Console_Parms PostRender_Console_Parms;
	PostRender_Console_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPostRender_Console, &PostRender_Console_Parms, NULL );
};

// Function TribesGame.TrChatConsole.IsPlayerTell
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrChatConsole::IsPlayerTell ( )
{
	static UFunction* pFnIsPlayerTell = NULL;

	if ( ! pFnIsPlayerTell )
		pFnIsPlayerTell = (UFunction*) UObject::GObjObjects()->Data[ 73903 ];

	UTrChatConsole_execIsPlayerTell_Parms IsPlayerTell_Parms;

	this->ProcessEvent ( pFnIsPlayerTell, &IsPlayerTell_Parms, NULL );

	return IsPlayerTell_Parms.ReturnValue;
};

// Function TribesGame.TrChatConsole.IsSlashCommand
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrChatConsole::IsSlashCommand ( )
{
	static UFunction* pFnIsSlashCommand = NULL;

	if ( ! pFnIsSlashCommand )
		pFnIsSlashCommand = (UFunction*) UObject::GObjObjects()->Data[ 73901 ];

	UTrChatConsole_execIsSlashCommand_Parms IsSlashCommand_Parms;

	this->ProcessEvent ( pFnIsSlashCommand, &IsSlashCommand_Parms, NULL );

	return IsSlashCommand_Parms.ReturnValue;
};

// Function TribesGame.TrChatConsole.StartTyping
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UTrChatConsole::StartTyping ( struct FString Text )
{
	static UFunction* pFnStartTyping = NULL;

	if ( ! pFnStartTyping )
		pFnStartTyping = (UFunction*) UObject::GObjObjects()->Data[ 73899 ];

	UTrChatConsole_execStartTyping_Parms StartTyping_Parms;
	memcpy ( &StartTyping_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnStartTyping, &StartTyping_Parms, NULL );
};

// Function TribesGame.TrChatConsole.StartTypingChat
// [0x00024002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// unsigned long                  bFullConsole                   ( CPF_OptionalParm | CPF_Parm )
// struct FString                 startText                      ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsole::StartTypingChat ( struct FString Text, unsigned long bFullConsole, struct FString startText )
{
	static UFunction* pFnStartTypingChat = NULL;

	if ( ! pFnStartTypingChat )
		pFnStartTypingChat = (UFunction*) UObject::GObjObjects()->Data[ 73895 ];

	UTrChatConsole_execStartTypingChat_Parms StartTypingChat_Parms;
	memcpy ( &StartTypingChat_Parms.Text, &Text, 0xC );
	StartTypingChat_Parms.bFullConsole = bFullConsole;
	memcpy ( &StartTypingChat_Parms.startText, &startText, 0xC );

	this->ProcessEvent ( pFnStartTypingChat, &StartTypingChat_Parms, NULL );
};

// Function TribesGame.TrChatConsole.ConsoleCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatConsole::ConsoleCommand ( struct FString Command )
{
	static UFunction* pFnConsoleCommand = NULL;

	if ( ! pFnConsoleCommand )
		pFnConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 73892 ];

	UTrChatConsole_execConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy ( &ConsoleCommand_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnConsoleCommand, &ConsoleCommand_Parms, NULL );
};

// Function TribesGame.TrChatConsole.GetPlayerController
// [0x00020002] 
// Parameters infos:

void UTrChatConsole::GetPlayerController ( )
{
	static UFunction* pFnGetPlayerController = NULL;

	if ( ! pFnGetPlayerController )
		pFnGetPlayerController = (UFunction*) UObject::GObjObjects()->Data[ 73890 ];

	UTrChatConsole_execGetPlayerController_Parms GetPlayerController_Parms;

	this->ProcessEvent ( pFnGetPlayerController, &GetPlayerController_Parms, NULL );
};

// Function TribesGame.TrChatConsole.Initialized
// [0x00020002] 
// Parameters infos:

void UTrChatConsole::Initialized ( )
{
	static UFunction* pFnInitialized = NULL;

	if ( ! pFnInitialized )
		pFnInitialized = (UFunction*) UObject::GObjObjects()->Data[ 73889 ];

	UTrChatConsole_execInitialized_Parms Initialized_Parms;

	this->ProcessEvent ( pFnInitialized, &Initialized_Parms, NULL );
};

// Function TribesGame.TrGameViewportClient.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UTrGameViewportClient::eventPostRender ( class UCanvas* Canvas )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 94447 ];

	UTrGameViewportClient_eventPostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function TribesGame.TrGameViewportClient.Init
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 OutError                       ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

bool UTrGameViewportClient::eventInit ( struct FString* OutError )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 94444 ];

	UTrGameViewportClient_eventInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	if ( OutError )
		memcpy ( OutError, &Init_Parms.OutError, 0xC );

	return Init_Parms.ReturnValue;
};

// Function TribesGame.TrChatInput.AppendInputText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatInput::AppendInputText ( struct FString Text )
{
	static UFunction* pFnAppendInputText = NULL;

	if ( ! pFnAppendInputText )
		pFnAppendInputText = (UFunction*) UObject::GObjObjects()->Data[ 74042 ];

	UTrChatInput_execAppendInputText_Parms AppendInputText_Parms;
	memcpy ( &AppendInputText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnAppendInputText, &AppendInputText_Parms, NULL );
};

// Function TribesGame.TrChatInput.ProcessControlKey
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   Key                            ( CPF_Parm )
// unsigned char                  Event                          ( CPF_Parm )

bool UTrChatInput::ProcessControlKey ( struct FName Key, unsigned char Event )
{
	static UFunction* pFnProcessControlKey = NULL;

	if ( ! pFnProcessControlKey )
		pFnProcessControlKey = (UFunction*) UObject::GObjObjects()->Data[ 74038 ];

	UTrChatInput_execProcessControlKey_Parms ProcessControlKey_Parms;
	memcpy ( &ProcessControlKey_Parms.Key, &Key, 0x8 );
	ProcessControlKey_Parms.Event = Event;

	this->ProcessEvent ( pFnProcessControlKey, &ProcessControlKey_Parms, NULL );

	return ProcessControlKey_Parms.ReturnValue;
};

// Function TribesGame.TrChatInput.FlushPlayerInput
// [0x00020002] 
// Parameters infos:

void UTrChatInput::FlushPlayerInput ( )
{
	static UFunction* pFnFlushPlayerInput = NULL;

	if ( ! pFnFlushPlayerInput )
		pFnFlushPlayerInput = (UFunction*) UObject::GObjObjects()->Data[ 74036 ];

	UTrChatInput_execFlushPlayerInput_Parms FlushPlayerInput_Parms;

	this->ProcessEvent ( pFnFlushPlayerInput, &FlushPlayerInput_Parms, NULL );
};

// Function TribesGame.TrChatInput.InputChar
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FString                 Unicode                        ( CPF_Parm | CPF_NeedCtorLink )

bool UTrChatInput::InputChar ( int ControllerId, struct FString Unicode )
{
	static UFunction* pFnInputChar = NULL;

	if ( ! pFnInputChar )
		pFnInputChar = (UFunction*) UObject::GObjObjects()->Data[ 74032 ];

	UTrChatInput_execInputChar_Parms InputChar_Parms;
	InputChar_Parms.ControllerId = ControllerId;
	memcpy ( &InputChar_Parms.Unicode, &Unicode, 0xC );

	this->ProcessEvent ( pFnInputChar, &InputChar_Parms, NULL );

	return InputChar_Parms.ReturnValue;
};

// Function TribesGame.TrChatInput.InputKey
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   Key                            ( CPF_Parm )
// unsigned char                  Event                          ( CPF_Parm )
// float                          AmountDepressed                ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGamepad                       ( CPF_OptionalParm | CPF_Parm )

bool UTrChatInput::InputKey ( int ControllerId, struct FName Key, unsigned char Event, float AmountDepressed, unsigned long bGamepad )
{
	static UFunction* pFnInputKey = NULL;

	if ( ! pFnInputKey )
		pFnInputKey = (UFunction*) UObject::GObjObjects()->Data[ 74025 ];

	UTrChatInput_execInputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy ( &InputKey_Parms.Key, &Key, 0x8 );
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;

	this->ProcessEvent ( pFnInputKey, &InputKey_Parms, NULL );

	return InputKey_Parms.ReturnValue;
};

// Function TribesGame.TrChatInput.PostRender_Console
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void UTrChatInput::PostRender_Console ( class UCanvas* Canvas )
{
	static UFunction* pFnPostRender_Console = NULL;

	if ( ! pFnPostRender_Console )
		pFnPostRender_Console = (UFunction*) UObject::GObjObjects()->Data[ 74023 ];

	UTrChatInput_execPostRender_Console_Parms PostRender_Console_Parms;
	PostRender_Console_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPostRender_Console, &PostRender_Console_Parms, NULL );
};

// Function TribesGame.TrChatInput.StartTyping
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

void UTrChatInput::StartTyping ( struct FString Text )
{
	static UFunction* pFnStartTyping = NULL;

	if ( ! pFnStartTyping )
		pFnStartTyping = (UFunction*) UObject::GObjObjects()->Data[ 74021 ];

	UTrChatInput_execStartTyping_Parms StartTyping_Parms;
	memcpy ( &StartTyping_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnStartTyping, &StartTyping_Parms, NULL );
};

// Function TribesGame.TrChatInput.ConsoleCommand
// [0x00020002] 
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatInput::ConsoleCommand ( struct FString Command )
{
	static UFunction* pFnConsoleCommand = NULL;

	if ( ! pFnConsoleCommand )
		pFnConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 74019 ];

	UTrChatInput_execConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy ( &ConsoleCommand_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnConsoleCommand, &ConsoleCommand_Parms, NULL );
};

// Function TribesGame.TrChatInput.SetCursorPos
// [0x00020002] 
// Parameters infos:
// int                            Position                       ( CPF_Parm )

void UTrChatInput::SetCursorPos ( int Position )
{
	static UFunction* pFnSetCursorPos = NULL;

	if ( ! pFnSetCursorPos )
		pFnSetCursorPos = (UFunction*) UObject::GObjObjects()->Data[ 74017 ];

	UTrChatInput_execSetCursorPos_Parms SetCursorPos_Parms;
	SetCursorPos_Parms.Position = Position;

	this->ProcessEvent ( pFnSetCursorPos, &SetCursorPos_Parms, NULL );
};

// Function TribesGame.TrChatInput.SetInputText
// [0x00020002] 
// Parameters infos:
// struct FString                 Text                           ( CPF_Parm | CPF_NeedCtorLink )

void UTrChatInput::SetInputText ( struct FString Text )
{
	static UFunction* pFnSetInputText = NULL;

	if ( ! pFnSetInputText )
		pFnSetInputText = (UFunction*) UObject::GObjObjects()->Data[ 74015 ];

	UTrChatInput_execSetInputText_Parms SetInputText_Parms;
	memcpy ( &SetInputText_Parms.Text, &Text, 0xC );

	this->ProcessEvent ( pFnSetInputText, &SetInputText_Parms, NULL );
};

// Function TribesGame.TrChatInput.Initialized
// [0x00020002] 
// Parameters infos:

void UTrChatInput::Initialized ( )
{
	static UFunction* pFnInitialized = NULL;

	if ( ! pFnInitialized )
		pFnInitialized = (UFunction*) UObject::GObjObjects()->Data[ 74014 ];

	UTrChatInput_execInitialized_Parms Initialized_Parms;

	this->ProcessEvent ( pFnInitialized, &Initialized_Parms, NULL );
};

// Function TribesGame.TrCheatManager.GiveWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// class AWeapon*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WeaponClassStr                 ( CPF_Parm | CPF_NeedCtorLink )

class AWeapon* UTrCheatManager::GiveWeapon ( struct FString WeaponClassStr )
{
	static UFunction* pFnGiveWeapon = NULL;

	if ( ! pFnGiveWeapon )
		pFnGiveWeapon = (UFunction*) UObject::GObjObjects()->Data[ 74075 ];

	UTrCheatManager_execGiveWeapon_Parms GiveWeapon_Parms;
	memcpy ( &GiveWeapon_Parms.WeaponClassStr, &WeaponClassStr, 0xC );

	this->ProcessEvent ( pFnGiveWeapon, &GiveWeapon_Parms, NULL );

	return GiveWeapon_Parms.ReturnValue;
};

// Function TribesGame.TrCollisionProxy_Flag.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrCollisionProxy_Flag::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74137 ];

	ATrCollisionProxy_Flag_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_Pickup.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrCollisionProxy_Pickup::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74176 ];

	ATrCollisionProxy_Pickup_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_Rage.ForceProximityScan
// [0x00024102] 
// Parameters infos:
// float                          Radius                         ( CPF_OptionalParm | CPF_Parm )

void ATrCollisionProxy_Rage::ForceProximityScan ( float Radius )
{
	static UFunction* pFnForceProximityScan = NULL;

	if ( ! pFnForceProximityScan )
		pFnForceProximityScan = (UFunction*) UObject::GObjObjects()->Data[ 74213 ];

	ATrCollisionProxy_Rage_execForceProximityScan_Parms ForceProximityScan_Parms;
	ForceProximityScan_Parms.Radius = Radius;

	this->ProcessEvent ( pFnForceProximityScan, &ForceProximityScan_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_Rage.UnTouch
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrCollisionProxy_Rage::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74211 ];

	ATrCollisionProxy_Rage_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function TribesGame.TrCollisionProxy_Rage.Touch
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrCollisionProxy_Rage::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 74206 ];

	ATrCollisionProxy_Rage_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrConduitVolume.PawnLeavingVolume
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrConduitVolume::eventPawnLeavingVolume ( class APawn* Other )
{
	static UFunction* pFnPawnLeavingVolume = NULL;

	if ( ! pFnPawnLeavingVolume )
		pFnPawnLeavingVolume = (UFunction*) UObject::GObjObjects()->Data[ 74226 ];

	ATrConduitVolume_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL );
};

// Function TribesGame.TrConduitVolume.PawnEnteredVolume
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ATrConduitVolume::eventPawnEnteredVolume ( class APawn* Other )
{
	static UFunction* pFnPawnEnteredVolume = NULL;

	if ( ! pFnPawnEnteredVolume )
		pFnPawnEnteredVolume = (UFunction*) UObject::GObjObjects()->Data[ 74222 ];

	ATrConduitVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;

	this->ProcessEvent ( pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL );
};

// Function TribesGame.TrWeatherVolume.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrWeatherVolume::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 114679 ];

	ATrWeatherVolume_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function TribesGame.TrWeatherVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrWeatherVolume::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 114671 ];

	ATrWeatherVolume_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrMusicManager.PlayerScoredFlag
// [0x00020002] 
// Parameters infos:

void ATrMusicManager::PlayerScoredFlag ( )
{
	static UFunction* pFnPlayerScoredFlag = NULL;

	if ( ! pFnPlayerScoredFlag )
		pFnPlayerScoredFlag = (UFunction*) UObject::GObjObjects()->Data[ 99326 ];

	ATrMusicManager_execPlayerScoredFlag_Parms PlayerScoredFlag_Parms;

	this->ProcessEvent ( pFnPlayerScoredFlag, &PlayerScoredFlag_Parms, NULL );
};

// Function TribesGame.TrMusicManager.SetCurrentState
// [0x00080002] 
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ATrMusicManager::SetCurrentState ( unsigned char NewState )
{
	static UFunction* pFnSetCurrentState = NULL;

	if ( ! pFnSetCurrentState )
		pFnSetCurrentState = (UFunction*) UObject::GObjObjects()->Data[ 99321 ];

	ATrMusicManager_execSetCurrentState_Parms SetCurrentState_Parms;
	SetCurrentState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetCurrentState, &SetCurrentState_Parms, NULL );
};

// Function TribesGame.TrMusicManager.SetPendingState
// [0x00080002] 
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ATrMusicManager::SetPendingState ( unsigned char NewState )
{
	static UFunction* pFnSetPendingState = NULL;

	if ( ! pFnSetPendingState )
		pFnSetPendingState = (UFunction*) UObject::GObjObjects()->Data[ 99319 ];

	ATrMusicManager_execSetPendingState_Parms SetPendingState_Parms;
	SetPendingState_Parms.NewState = NewState;

	this->ProcessEvent ( pFnSetPendingState, &SetPendingState_Parms, NULL );
};

// Function TribesGame.TrMusicManager.MusicEvent
// [0x00020002] 
// Parameters infos:
// int                            NewEventIndex                  ( CPF_Parm )

void ATrMusicManager::MusicEvent ( int NewEventIndex )
{
	static UFunction* pFnMusicEvent = NULL;

	if ( ! pFnMusicEvent )
		pFnMusicEvent = (UFunction*) UObject::GObjObjects()->Data[ 99313 ];

	ATrMusicManager_execMusicEvent_Parms MusicEvent_Parms;
	MusicEvent_Parms.NewEventIndex = NewEventIndex;

	this->ProcessEvent ( pFnMusicEvent, &MusicEvent_Parms, NULL );
};

// Function TribesGame.TrMusicManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrMusicManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 99309 ];

	ATrMusicManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrMusicManager.SetStateBasedOnGameState
// [0x00020002] 
// Parameters infos:

void ATrMusicManager::SetStateBasedOnGameState ( )
{
	static UFunction* pFnSetStateBasedOnGameState = NULL;

	if ( ! pFnSetStateBasedOnGameState )
		pFnSetStateBasedOnGameState = (UFunction*) UObject::GObjObjects()->Data[ 99304 ];

	ATrMusicManager_execSetStateBasedOnGameState_Parms SetStateBasedOnGameState_Parms;

	this->ProcessEvent ( pFnSetStateBasedOnGameState, &SetStateBasedOnGameState_Parms, NULL );
};

// Function TribesGame.TrMusicManager.StartMusic
// [0x00020002] 
// Parameters infos:

void ATrMusicManager::StartMusic ( )
{
	static UFunction* pFnStartMusic = NULL;

	if ( ! pFnStartMusic )
		pFnStartMusic = (UFunction*) UObject::GObjObjects()->Data[ 99302 ];

	ATrMusicManager_execStartMusic_Parms StartMusic_Parms;

	this->ProcessEvent ( pFnStartMusic, &StartMusic_Parms, NULL );
};

// Function TribesGame.TrMusicManager.CreateNewTrack
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline )
// class USoundCue*               MusicCue                       ( CPF_Parm )

class UAudioComponent* ATrMusicManager::CreateNewTrack ( class USoundCue* MusicCue )
{
	static UFunction* pFnCreateNewTrack = NULL;

	if ( ! pFnCreateNewTrack )
		pFnCreateNewTrack = (UFunction*) UObject::GObjObjects()->Data[ 99297 ];

	ATrMusicManager_execCreateNewTrack_Parms CreateNewTrack_Parms;
	CreateNewTrack_Parms.MusicCue = MusicCue;

	this->ProcessEvent ( pFnCreateNewTrack, &CreateNewTrack_Parms, NULL );

	return CreateNewTrack_Parms.ReturnValue;
};

// Function TribesGame.TrMusicManager.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrMusicManager::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 99296 ];

	ATrMusicManager_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrTraining.PlayEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void ATrGame_TrTraining::PlayEndOfMatchMessage ( )
{
	static UFunction* pFnPlayEndOfMatchMessage = NULL;

	if ( ! pFnPlayEndOfMatchMessage )
		pFnPlayEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 90157 ];

	ATrGame_TrTraining_execPlayEndOfMatchMessage_Parms PlayEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayEndOfMatchMessage, &PlayEndOfMatchMessage_Parms, NULL );
};

// Function TribesGame.TrGame_TrTraining.AutoEndGame
// [0x00020002] 
// Parameters infos:

void ATrGame_TrTraining::AutoEndGame ( )
{
	static UFunction* pFnAutoEndGame = NULL;

	if ( ! pFnAutoEndGame )
		pFnAutoEndGame = (UFunction*) UObject::GObjObjects()->Data[ 90156 ];

	ATrGame_TrTraining_execAutoEndGame_Parms AutoEndGame_Parms;

	this->ProcessEvent ( pFnAutoEndGame, &AutoEndGame_Parms, NULL );
};

// Function TribesGame.TrGame_TrTraining.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrGame_TrTraining::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 90148 ];

	ATrGame_TrTraining_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function TribesGame.TrGame_TrTraining.PickTeamForMigration
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame_TrTraining::PickTeamForMigration ( class AController* C )
{
	static UFunction* pFnPickTeamForMigration = NULL;

	if ( ! pFnPickTeamForMigration )
		pFnPickTeamForMigration = (UFunction*) UObject::GObjObjects()->Data[ 90145 ];

	ATrGame_TrTraining_execPickTeamForMigration_Parms PickTeamForMigration_Parms;
	PickTeamForMigration_Parms.C = C;

	this->ProcessEvent ( pFnPickTeamForMigration, &PickTeamForMigration_Parms, NULL );

	return PickTeamForMigration_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrTraining.PickTeam
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Num                            ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

unsigned char ATrGame_TrTraining::PickTeam ( unsigned char Num, class AController* C )
{
	static UFunction* pFnPickTeam = NULL;

	if ( ! pFnPickTeam )
		pFnPickTeam = (UFunction*) UObject::GObjObjects()->Data[ 90141 ];

	ATrGame_TrTraining_execPickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Num = Num;
	PickTeam_Parms.C = C;

	this->ProcessEvent ( pFnPickTeam, &PickTeam_Parms, NULL );

	return PickTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrTraining.CheckScore
// [0x00020000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TrTraining::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 90138 ];

	ATrGame_TrTraining_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrWarningMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrWarningMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 75919 ];

	UTrWarningMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDeployableMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrDeployableMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 76033 ];

	UTrDeployableMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrGameMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrGameMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 90174 ];

	UTrGameMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrGameMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrGameMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 90167 ];

	UTrGameMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrEmitCameraEffect_Snow.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEmitCameraEffect_Snow::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86357 ];

	ATrEmitCameraEffect_Snow_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDevice_Blink.GetBlinkImpulse
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ATrDevice_Blink::GetBlinkImpulse ( )
{
	static UFunction* pFnGetBlinkImpulse = NULL;

	if ( ! pFnGetBlinkImpulse )
		pFnGetBlinkImpulse = (UFunction*) UObject::GObjObjects()->Data[ 76175 ];

	ATrDevice_Blink_execGetBlinkImpulse_Parms GetBlinkImpulse_Parms;

	this->ProcessEvent ( pFnGetBlinkImpulse, &GetBlinkImpulse_Parms, NULL );

	return GetBlinkImpulse_Parms.ReturnValue;
};

// Function TribesGame.TrDevice_Blink.OnBlink
// [0x00020102] 
// Parameters infos:
// float                          PercentEffectiveness           ( CPF_Parm )

void ATrDevice_Blink::OnBlink ( float PercentEffectiveness )
{
	static UFunction* pFnOnBlink = NULL;

	if ( ! pFnOnBlink )
		pFnOnBlink = (UFunction*) UObject::GObjObjects()->Data[ 80676 ];

	ATrDevice_Blink_execOnBlink_Parms OnBlink_Parms;
	OnBlink_Parms.PercentEffectiveness = PercentEffectiveness;

	this->ProcessEvent ( pFnOnBlink, &OnBlink_Parms, NULL );
};

// Function TribesGame.TrDevice_Blink.ToggleActivate
// [0x00020102] 
// Parameters infos:

void ATrDevice_Blink::ToggleActivate ( )
{
	static UFunction* pFnToggleActivate = NULL;

	if ( ! pFnToggleActivate )
		pFnToggleActivate = (UFunction*) UObject::GObjObjects()->Data[ 80673 ];

	ATrDevice_Blink_execToggleActivate_Parms ToggleActivate_Parms;

	this->ProcessEvent ( pFnToggleActivate, &ToggleActivate_Parms, NULL );
};

// Function TribesGame.TrPaperDollTransient.SetPosition
// [0x00820002] 
// Parameters infos:
// struct FVector                 ViewPos                        ( CPF_Parm )
// struct FRotator                ViewRot                        ( CPF_Parm )

void ATrPaperDollTransient::SetPosition ( struct FVector ViewPos, struct FRotator ViewRot )
{
	static UFunction* pFnSetPosition = NULL;

	if ( ! pFnSetPosition )
		pFnSetPosition = (UFunction*) UObject::GObjObjects()->Data[ 99602 ];

	ATrPaperDollTransient_execSetPosition_Parms SetPosition_Parms;
	memcpy ( &SetPosition_Parms.ViewPos, &ViewPos, 0xC );
	memcpy ( &SetPosition_Parms.ViewRot, &ViewRot, 0xC );

	this->ProcessEvent ( pFnSetPosition, &SetPosition_Parms, NULL );
};

// Function TribesGame.TrPaperDollTransient.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPaperDollTransient::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 99598 ];

	ATrPaperDollTransient_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrPaperDollTransient.FadeInBackdrop
// [0x00020002] 
// Parameters infos:

void ATrPaperDollTransient::FadeInBackdrop ( )
{
	static UFunction* pFnFadeInBackdrop = NULL;

	if ( ! pFnFadeInBackdrop )
		pFnFadeInBackdrop = (UFunction*) UObject::GObjObjects()->Data[ 99597 ];

	ATrPaperDollTransient_execFadeInBackdrop_Parms FadeInBackdrop_Parms;

	this->ProcessEvent ( pFnFadeInBackdrop, &FadeInBackdrop_Parms, NULL );
};

// Function TribesGame.TrPaperDollTransient.PostBeginPlay
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ATrPaperDollTransient::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 99594 ];

	ATrPaperDollTransient_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrRabbitScoreMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UTrRabbitScoreMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 109393 ];

	UTrRabbitScoreMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitScoreMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrRabbitScoreMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 109385 ];

	UTrRabbitScoreMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrRabbitScoreMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrRabbitScoreMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 109377 ];

	UTrRabbitScoreMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_MotionSensor.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_MotionSensor::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79744 ];

	ATrDeployable_MotionSensor_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_MotionSensor.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrDeployable_MotionSensor::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 79733 ];

	ATrDeployable_MotionSensor_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.HideHUDAlarm
// [0x00020102] 
// Parameters infos:

void ATrDeployable_MotionSensor::HideHUDAlarm ( )
{
	static UFunction* pFnHideHUDAlarm = NULL;

	if ( ! pFnHideHUDAlarm )
		pFnHideHUDAlarm = (UFunction*) UObject::GObjObjects()->Data[ 79732 ];

	ATrDeployable_MotionSensor_execHideHUDAlarm_Parms HideHUDAlarm_Parms;

	this->ProcessEvent ( pFnHideHUDAlarm, &HideHUDAlarm_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.TriggerHUDAlarm
// [0x00020102] 
// Parameters infos:

void ATrDeployable_MotionSensor::TriggerHUDAlarm ( )
{
	static UFunction* pFnTriggerHUDAlarm = NULL;

	if ( ! pFnTriggerHUDAlarm )
		pFnTriggerHUDAlarm = (UFunction*) UObject::GObjObjects()->Data[ 79731 ];

	ATrDeployable_MotionSensor_execTriggerHUDAlarm_Parms TriggerHUDAlarm_Parms;

	this->ProcessEvent ( pFnTriggerHUDAlarm, &TriggerHUDAlarm_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.PlayAlarm
// [0x00020002] 
// Parameters infos:

void ATrDeployable_MotionSensor::PlayAlarm ( )
{
	static UFunction* pFnPlayAlarm = NULL;

	if ( ! pFnPlayAlarm )
		pFnPlayAlarm = (UFunction*) UObject::GObjObjects()->Data[ 79726 ];

	ATrDeployable_MotionSensor_execPlayAlarm_Parms PlayAlarm_Parms;

	this->ProcessEvent ( pFnPlayAlarm, &PlayAlarm_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.ModifyDetectedPawn
// [0x00020000] 
// Parameters infos:
// class APawn*                   DetectedPawn                   ( CPF_Parm )
// unsigned long                  detected                       ( CPF_Parm )

void ATrDeployable_MotionSensor::ModifyDetectedPawn ( class APawn* DetectedPawn, unsigned long detected )
{
	static UFunction* pFnModifyDetectedPawn = NULL;

	if ( ! pFnModifyDetectedPawn )
		pFnModifyDetectedPawn = (UFunction*) UObject::GObjObjects()->Data[ 79723 ];

	ATrDeployable_MotionSensor_execModifyDetectedPawn_Parms ModifyDetectedPawn_Parms;
	ModifyDetectedPawn_Parms.DetectedPawn = DetectedPawn;
	ModifyDetectedPawn_Parms.detected = detected;

	this->ProcessEvent ( pFnModifyDetectedPawn, &ModifyDetectedPawn_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.CanSetOffAlarm
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPawn*                 P                              ( CPF_Parm )

bool ATrDeployable_MotionSensor::CanSetOffAlarm ( class ATrPawn* P )
{
	static UFunction* pFnCanSetOffAlarm = NULL;

	if ( ! pFnCanSetOffAlarm )
		pFnCanSetOffAlarm = (UFunction*) UObject::GObjObjects()->Data[ 79720 ];

	ATrDeployable_MotionSensor_execCanSetOffAlarm_Parms CanSetOffAlarm_Parms;
	CanSetOffAlarm_Parms.P = P;

	this->ProcessEvent ( pFnCanSetOffAlarm, &CanSetOffAlarm_Parms, NULL );

	return CanSetOffAlarm_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_MotionSensor.UpdateInRangeEnemyPawns
// [0x00020002] 
// Parameters infos:

void ATrDeployable_MotionSensor::UpdateInRangeEnemyPawns ( )
{
	static UFunction* pFnUpdateInRangeEnemyPawns = NULL;

	if ( ! pFnUpdateInRangeEnemyPawns )
		pFnUpdateInRangeEnemyPawns = (UFunction*) UObject::GObjObjects()->Data[ 79716 ];

	ATrDeployable_MotionSensor_execUpdateInRangeEnemyPawns_Parms UpdateInRangeEnemyPawns_Parms;

	this->ProcessEvent ( pFnUpdateInRangeEnemyPawns, &UpdateInRangeEnemyPawns_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.OnPawnExitedCollisionProxy
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable_MotionSensor::OnPawnExitedCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnExitedCollisionProxy = NULL;

	if ( ! pFnOnPawnExitedCollisionProxy )
		pFnOnPawnExitedCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 79713 ];

	ATrDeployable_MotionSensor_execOnPawnExitedCollisionProxy_Parms OnPawnExitedCollisionProxy_Parms;
	OnPawnExitedCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnExitedCollisionProxy, &OnPawnExitedCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.OnPawnDetectedByCollisionProxy
// [0x00820002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ATrDeployable_MotionSensor::OnPawnDetectedByCollisionProxy ( class APawn* P )
{
	static UFunction* pFnOnPawnDetectedByCollisionProxy = NULL;

	if ( ! pFnOnPawnDetectedByCollisionProxy )
		pFnOnPawnDetectedByCollisionProxy = (UFunction*) UObject::GObjObjects()->Data[ 79710 ];

	ATrDeployable_MotionSensor_execOnPawnDetectedByCollisionProxy_Parms OnPawnDetectedByCollisionProxy_Parms;
	OnPawnDetectedByCollisionProxy_Parms.P = P;

	this->ProcessEvent ( pFnOnPawnDetectedByCollisionProxy, &OnPawnDetectedByCollisionProxy_Parms, NULL );
};

// Function TribesGame.TrDeployable_MotionSensor.DeployComplete
// [0x00020102] 
// Parameters infos:

void ATrDeployable_MotionSensor::DeployComplete ( )
{
	static UFunction* pFnDeployComplete = NULL;

	if ( ! pFnDeployComplete )
		pFnDeployComplete = (UFunction*) UObject::GObjObjects()->Data[ 79709 ];

	ATrDeployable_MotionSensor_execDeployComplete_Parms DeployComplete_Parms;

	this->ProcessEvent ( pFnDeployComplete, &DeployComplete_Parms, NULL );
};

// Function TribesGame.TrSensorMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrSensorMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 109942 ];

	UTrSensorMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrSensorMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrSensorMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 109935 ];

	UTrSensorMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrDaD.OnGeneratorPowerChange
// [0x00020002] 
// Parameters infos:
// class ATrPowerGenerator*       G                              ( CPF_Parm )

void ATrGame_TrDaD::OnGeneratorPowerChange ( class ATrPowerGenerator* G )
{
	static UFunction* pFnOnGeneratorPowerChange = NULL;

	if ( ! pFnOnGeneratorPowerChange )
		pFnOnGeneratorPowerChange = (UFunction*) UObject::GObjObjects()->Data[ 89845 ];

	ATrGame_TrDaD_execOnGeneratorPowerChange_Parms OnGeneratorPowerChange_Parms;
	OnGeneratorPowerChange_Parms.G = G;

	this->ProcessEvent ( pFnOnGeneratorPowerChange, &OnGeneratorPowerChange_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.GetGameTypeId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrDaD::GetGameTypeId ( )
{
	static UFunction* pFnGetGameTypeId = NULL;

	if ( ! pFnGetGameTypeId )
		pFnGetGameTypeId = (UFunction*) UObject::GObjObjects()->Data[ 89843 ];

	ATrGame_TrDaD_execGetGameTypeId_Parms GetGameTypeId_Parms;

	this->ProcessEvent ( pFnGetGameTypeId, &GetGameTypeId_Parms, NULL );

	return GetGameTypeId_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrDaD.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             NewPlayer                      ( CPF_Parm )

void ATrGame_TrDaD::RestartPlayer ( class AController* NewPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 89841 ];

	ATrGame_TrDaD_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.SendMatchCountdown
// [0x00020002] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ATrGame_TrDaD::SendMatchCountdown ( int Seconds )
{
	static UFunction* pFnSendMatchCountdown = NULL;

	if ( ! pFnSendMatchCountdown )
		pFnSendMatchCountdown = (UFunction*) UObject::GObjObjects()->Data[ 89837 ];

	ATrGame_TrDaD_execSendMatchCountdown_Parms SendMatchCountdown_Parms;
	SendMatchCountdown_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnSendMatchCountdown, &SendMatchCountdown_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.OnCoreBlownUp
// [0x00020002] 
// Parameters infos:
// unsigned char                  Team                           ( CPF_Parm )

void ATrGame_TrDaD::OnCoreBlownUp ( unsigned char Team )
{
	static UFunction* pFnOnCoreBlownUp = NULL;

	if ( ! pFnOnCoreBlownUp )
		pFnOnCoreBlownUp = (UFunction*) UObject::GObjObjects()->Data[ 89817 ];

	ATrGame_TrDaD_execOnCoreBlownUp_Parms OnCoreBlownUp_Parms;
	OnCoreBlownUp_Parms.Team = Team;

	this->ProcessEvent ( pFnOnCoreBlownUp, &OnCoreBlownUp_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TrDaD::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89813 ];

	ATrGame_TrDaD_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrDaD.GotoPendingRoundStartTimer
// [0x00020002] 
// Parameters infos:

void ATrGame_TrDaD::GotoPendingRoundStartTimer ( )
{
	static UFunction* pFnGotoPendingRoundStartTimer = NULL;

	if ( ! pFnGotoPendingRoundStartTimer )
		pFnGotoPendingRoundStartTimer = (UFunction*) UObject::GObjObjects()->Data[ 89812 ];

	ATrGame_TrDaD_execGotoPendingRoundStartTimer_Parms GotoPendingRoundStartTimer_Parms;

	this->ProcessEvent ( pFnGotoPendingRoundStartTimer, &GotoPendingRoundStartTimer_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.DetermineWinningTeam
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrDaD::DetermineWinningTeam ( )
{
	static UFunction* pFnDetermineWinningTeam = NULL;

	if ( ! pFnDetermineWinningTeam )
		pFnDetermineWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 89809 ];

	ATrGame_TrDaD_execDetermineWinningTeam_Parms DetermineWinningTeam_Parms;

	this->ProcessEvent ( pFnDetermineWinningTeam, &DetermineWinningTeam_Parms, NULL );

	return DetermineWinningTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrDaD.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TrDaD::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 89806 ];

	ATrGame_TrDaD_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrDaD.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TrDaD::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 89803 ];

	ATrGame_TrDaD_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.ResetRound
// [0x00020002] 
// Parameters infos:

void ATrGame_TrDaD::ResetRound ( )
{
	static UFunction* pFnResetRound = NULL;

	if ( ! pFnResetRound )
		pFnResetRound = (UFunction*) UObject::GObjObjects()->Data[ 89795 ];

	ATrGame_TrDaD_execResetRound_Parms ResetRound_Parms;

	this->ProcessEvent ( pFnResetRound, &ResetRound_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.RespawnPlayers
// [0x00020002] 
// Parameters infos:

void ATrGame_TrDaD::RespawnPlayers ( )
{
	static UFunction* pFnRespawnPlayers = NULL;

	if ( ! pFnRespawnPlayers )
		pFnRespawnPlayers = (UFunction*) UObject::GObjObjects()->Data[ 89793 ];

	ATrGame_TrDaD_execRespawnPlayers_Parms RespawnPlayers_Parms;

	this->ProcessEvent ( pFnRespawnPlayers, &RespawnPlayers_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.ResetLevel
// [0x00020002] 
// Parameters infos:

void ATrGame_TrDaD::ResetLevel ( )
{
	static UFunction* pFnResetLevel = NULL;

	if ( ! pFnResetLevel )
		pFnResetLevel = (UFunction*) UObject::GObjObjects()->Data[ 89792 ];

	ATrGame_TrDaD_execResetLevel_Parms ResetLevel_Parms;

	this->ProcessEvent ( pFnResetLevel, &ResetLevel_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrDaD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89791 ];

	ATrGame_TrDaD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.Logout
// [0x00020002] 
// Parameters infos:
// class AController*             Exiting                        ( CPF_Parm )

void ATrGame_TrDaD::Logout ( class AController* Exiting )
{
	static UFunction* pFnLogout = NULL;

	if ( ! pFnLogout )
		pFnLogout = (UFunction*) UObject::GObjObjects()->Data[ 89789 ];

	ATrGame_TrDaD_execLogout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;

	this->ProcessEvent ( pFnLogout, &Logout_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void ATrGame_TrDaD::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 89785 ];

	ATrGame_TrDaD_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function TribesGame.TrGame_TrDaD.ResetScores
// [0x00020000] 
// Parameters infos:

void ATrGame_TrDaD::ResetScores ( )
{
	static UFunction* pFnResetScores = NULL;

	if ( ! pFnResetScores )
		pFnResetScores = (UFunction*) UObject::GObjObjects()->Data[ 89784 ];

	ATrGame_TrDaD_execResetScores_Parms ResetScores_Parms;

	this->ProcessEvent ( pFnResetScores, &ResetScores_Parms, NULL );
};

// Function TribesGame.TrSavedMove.GetDebugString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString UTrSavedMove::GetDebugString ( )
{
	static UFunction* pFnGetDebugString = NULL;

	if ( ! pFnGetDebugString )
		pFnGetDebugString = (UFunction*) UObject::GObjObjects()->Data[ 109721 ];

	UTrSavedMove_execGetDebugString_Parms GetDebugString_Parms;

	this->ProcessEvent ( pFnGetDebugString, &GetDebugString_Parms, NULL );

	return GetDebugString_Parms.ReturnValue;
};

// Function TribesGame.TrSavedMove.SetFlags
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  Flags                          ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

unsigned char UTrSavedMove::SetFlags ( unsigned char Flags, class APlayerController* PC )
{
	static UFunction* pFnSetFlags = NULL;

	if ( ! pFnSetFlags )
		pFnSetFlags = (UFunction*) UObject::GObjObjects()->Data[ 109716 ];

	UTrSavedMove_execSetFlags_Parms SetFlags_Parms;
	SetFlags_Parms.Flags = Flags;
	SetFlags_Parms.PC = PC;

	this->ProcessEvent ( pFnSetFlags, &SetFlags_Parms, NULL );

	return SetFlags_Parms.ReturnValue;
};

// Function TribesGame.TrSavedMove.CompressedFlags
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char UTrSavedMove::CompressedFlags ( )
{
	static UFunction* pFnCompressedFlags = NULL;

	if ( ! pFnCompressedFlags )
		pFnCompressedFlags = (UFunction*) UObject::GObjObjects()->Data[ 109713 ];

	UTrSavedMove_execCompressedFlags_Parms CompressedFlags_Parms;

	this->ProcessEvent ( pFnCompressedFlags, &CompressedFlags_Parms, NULL );

	return CompressedFlags_Parms.ReturnValue;
};

// Function TribesGame.TrSavedMove.SetMoveFor
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// struct FVector                 newAccel                       ( CPF_Parm )
// unsigned char                  InDoubleClick                  ( CPF_Parm )

void UTrSavedMove::SetMoveFor ( class APlayerController* P, float DeltaTime, struct FVector newAccel, unsigned char InDoubleClick )
{
	static UFunction* pFnSetMoveFor = NULL;

	if ( ! pFnSetMoveFor )
		pFnSetMoveFor = (UFunction*) UObject::GObjObjects()->Data[ 109707 ];

	UTrSavedMove_execSetMoveFor_Parms SetMoveFor_Parms;
	SetMoveFor_Parms.P = P;
	SetMoveFor_Parms.DeltaTime = DeltaTime;
	memcpy ( &SetMoveFor_Parms.newAccel, &newAccel, 0xC );
	SetMoveFor_Parms.InDoubleClick = InDoubleClick;

	this->ProcessEvent ( pFnSetMoveFor, &SetMoveFor_Parms, NULL );
};

// Function TribesGame.TrSavedMove.CanCombineWith
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USavedMove*              NewMove                        ( CPF_Parm )
// class APawn*                   inPawn                         ( CPF_Parm )
// float                          MaxDelta                       ( CPF_Parm )

bool UTrSavedMove::CanCombineWith ( class USavedMove* NewMove, class APawn* inPawn, float MaxDelta )
{
	static UFunction* pFnCanCombineWith = NULL;

	if ( ! pFnCanCombineWith )
		pFnCanCombineWith = (UFunction*) UObject::GObjObjects()->Data[ 109701 ];

	UTrSavedMove_execCanCombineWith_Parms CanCombineWith_Parms;
	CanCombineWith_Parms.NewMove = NewMove;
	CanCombineWith_Parms.inPawn = inPawn;
	CanCombineWith_Parms.MaxDelta = MaxDelta;

	this->ProcessEvent ( pFnCanCombineWith, &CanCombineWith_Parms, NULL );

	return CanCombineWith_Parms.ReturnValue;
};

// Function TribesGame.TrSavedMove.PostUpdate
// [0x00020002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )

void UTrSavedMove::PostUpdate ( class APlayerController* P )
{
	static UFunction* pFnPostUpdate = NULL;

	if ( ! pFnPostUpdate )
		pFnPostUpdate = (UFunction*) UObject::GObjObjects()->Data[ 109698 ];

	UTrSavedMove_execPostUpdate_Parms PostUpdate_Parms;
	PostUpdate_Parms.P = P;

	this->ProcessEvent ( pFnPostUpdate, &PostUpdate_Parms, NULL );
};

// Function TribesGame.TrSavedMove.Clear
// [0x00020002] 
// Parameters infos:

void UTrSavedMove::Clear ( )
{
	static UFunction* pFnClear = NULL;

	if ( ! pFnClear )
		pFnClear = (UFunction*) UObject::GObjObjects()->Data[ 109697 ];

	UTrSavedMove_execClear_Parms Clear_Parms;

	this->ProcessEvent ( pFnClear, &Clear_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.ResetPlayerMovementInput
// [0x00020002] 
// Parameters infos:

void ATrConsolePlayerController::ResetPlayerMovementInput ( )
{
	static UFunction* pFnResetPlayerMovementInput = NULL;

	if ( ! pFnResetPlayerMovementInput )
		pFnResetPlayerMovementInput = (UFunction*) UObject::GObjObjects()->Data[ 77486 ];

	ATrConsolePlayerController_execResetPlayerMovementInput_Parms ResetPlayerMovementInput_Parms;

	this->ProcessEvent ( pFnResetPlayerMovementInput, &ResetPlayerMovementInput_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrConsolePlayerController::NextWeapon ( )
{
	static UFunction* pFnNextWeapon = NULL;

	if ( ! pFnNextWeapon )
		pFnNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 77485 ];

	ATrConsolePlayerController_execNextWeapon_Parms NextWeapon_Parms;

	this->ProcessEvent ( pFnNextWeapon, &NextWeapon_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrConsolePlayerController::PrevWeapon ( )
{
	static UFunction* pFnPrevWeapon = NULL;

	if ( ! pFnPrevWeapon )
		pFnPrevWeapon = (UFunction*) UObject::GObjObjects()->Data[ 77484 ];

	ATrConsolePlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

	this->ProcessEvent ( pFnPrevWeapon, &PrevWeapon_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.ClientRestart
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewPawn                        ( CPF_Parm )

void ATrConsolePlayerController::ClientRestart ( class APawn* NewPawn )
{
	static UFunction* pFnClientRestart = NULL;

	if ( ! pFnClientRestart )
		pFnClientRestart = (UFunction*) UObject::GObjObjects()->Data[ 77482 ];

	ATrConsolePlayerController_execClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;

	this->ProcessEvent ( pFnClientRestart, &ClientRestart_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.ClientSmartUse
// [0x01020142] 
// Parameters infos:

void ATrConsolePlayerController::ClientSmartUse ( )
{
	static UFunction* pFnClientSmartUse = NULL;

	if ( ! pFnClientSmartUse )
		pFnClientSmartUse = (UFunction*) UObject::GObjObjects()->Data[ 77481 ];

	ATrConsolePlayerController_execClientSmartUse_Parms ClientSmartUse_Parms;

	this->ProcessEvent ( pFnClientSmartUse, &ClientSmartUse_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerController.PerformedUseAction
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrConsolePlayerController::PerformedUseAction ( )
{
	static UFunction* pFnPerformedUseAction = NULL;

	if ( ! pFnPerformedUseAction )
		pFnPerformedUseAction = (UFunction*) UObject::GObjObjects()->Data[ 77479 ];

	ATrConsolePlayerController_execPerformedUseAction_Parms PerformedUseAction_Parms;

	this->ProcessEvent ( pFnPerformedUseAction, &PerformedUseAction_Parms, NULL );

	return PerformedUseAction_Parms.ReturnValue;
};

// Function TribesGame.TrConsolePlayerController.AimHelpModifier
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrConsolePlayerController::AimHelpModifier ( )
{
	static UFunction* pFnAimHelpModifier = NULL;

	if ( ! pFnAimHelpModifier )
		pFnAimHelpModifier = (UFunction*) UObject::GObjObjects()->Data[ 77477 ];

	ATrConsolePlayerController_execAimHelpModifier_Parms AimHelpModifier_Parms;

	this->ProcessEvent ( pFnAimHelpModifier, &AimHelpModifier_Parms, NULL );

	return AimHelpModifier_Parms.ReturnValue;
};

// Function TribesGame.TrConsolePlayerController.AimingHelp
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bInstantHit                    ( CPF_Parm )

bool ATrConsolePlayerController::AimingHelp ( unsigned long bInstantHit )
{
	static UFunction* pFnAimingHelp = NULL;

	if ( ! pFnAimingHelp )
		pFnAimingHelp = (UFunction*) UObject::GObjObjects()->Data[ 77474 ];

	ATrConsolePlayerController_execAimingHelp_Parms AimingHelp_Parms;
	AimingHelp_Parms.bInstantHit = bInstantHit;

	this->ProcessEvent ( pFnAimingHelp, &AimingHelp_Parms, NULL );

	return AimingHelp_Parms.ReturnValue;
};

// Function TribesGame.TrConsolePlayerController.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrConsolePlayerController::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 77468 ];

	ATrConsolePlayerController_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.CheckForDoubleClickMove
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DeltaTime                      ( CPF_Parm )

unsigned char UTrConsolePlayerInput::CheckForDoubleClickMove ( float DeltaTime )
{
	static UFunction* pFnCheckForDoubleClickMove = NULL;

	if ( ! pFnCheckForDoubleClickMove )
		pFnCheckForDoubleClickMove = (UFunction*) UObject::GObjObjects()->Data[ 77733 ];

	UTrConsolePlayerInput_execCheckForDoubleClickMove_Parms CheckForDoubleClickMove_Parms;
	CheckForDoubleClickMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnCheckForDoubleClickMove, &CheckForDoubleClickMove_Parms, NULL );

	return CheckForDoubleClickMove_Parms.ReturnValue;
};

// Function TribesGame.TrConsolePlayerInput.ApplyTargetFriction
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AUTWeapon*               W                              ( CPF_Parm )

void UTrConsolePlayerInput::ApplyTargetFriction ( float DeltaTime, class AUTWeapon* W )
{
	static UFunction* pFnApplyTargetFriction = NULL;

	if ( ! pFnApplyTargetFriction )
		pFnApplyTargetFriction = (UFunction*) UObject::GObjObjects()->Data[ 77713 ];

	UTrConsolePlayerInput_execApplyTargetFriction_Parms ApplyTargetFriction_Parms;
	ApplyTargetFriction_Parms.DeltaTime = DeltaTime;
	ApplyTargetFriction_Parms.W = W;

	this->ProcessEvent ( pFnApplyTargetFriction, &ApplyTargetFriction_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.AdjustMouseSensitivity
// [0x00020002] 
// Parameters infos:
// float                          FOVScale                       ( CPF_Parm )

void UTrConsolePlayerInput::AdjustMouseSensitivity ( float FOVScale )
{
	static UFunction* pFnAdjustMouseSensitivity = NULL;

	if ( ! pFnAdjustMouseSensitivity )
		pFnAdjustMouseSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 77711 ];

	UTrConsolePlayerInput_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;

	this->ProcessEvent ( pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.ApplyTargetAdhesion
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// class AUTWeapon*               W                              ( CPF_Parm )
// int                            out_YawRot                     ( CPF_Parm | CPF_OutParm )
// int                            out_PitchRot                   ( CPF_Parm | CPF_OutParm )

void UTrConsolePlayerInput::ApplyTargetAdhesion ( float DeltaTime, class AUTWeapon* W, int* out_YawRot, int* out_PitchRot )
{
	static UFunction* pFnApplyTargetAdhesion = NULL;

	if ( ! pFnApplyTargetAdhesion )
		pFnApplyTargetAdhesion = (UFunction*) UObject::GObjObjects()->Data[ 77683 ];

	UTrConsolePlayerInput_execApplyTargetAdhesion_Parms ApplyTargetAdhesion_Parms;
	ApplyTargetAdhesion_Parms.DeltaTime = DeltaTime;
	ApplyTargetAdhesion_Parms.W = W;

	this->ProcessEvent ( pFnApplyTargetAdhesion, &ApplyTargetAdhesion_Parms, NULL );

	if ( out_YawRot )
		*out_YawRot = ApplyTargetAdhesion_Parms.out_YawRot;

	if ( out_PitchRot )
		*out_PitchRot = ApplyTargetAdhesion_Parms.out_PitchRot;
};

// Function TribesGame.TrConsolePlayerInput.ApplyViewAcceleration
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrConsolePlayerInput::ApplyViewAcceleration ( float DeltaTime )
{
	static UFunction* pFnApplyViewAcceleration = NULL;

	if ( ! pFnApplyViewAcceleration )
		pFnApplyViewAcceleration = (UFunction*) UObject::GObjObjects()->Data[ 77679 ];

	UTrConsolePlayerInput_execApplyViewAcceleration_Parms ApplyViewAcceleration_Parms;
	ApplyViewAcceleration_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAcceleration, &ApplyViewAcceleration_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.ApplyViewAutoVehiclePitchCentering
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrConsolePlayerInput::ApplyViewAutoVehiclePitchCentering ( float DeltaTime )
{
	static UFunction* pFnApplyViewAutoVehiclePitchCentering = NULL;

	if ( ! pFnApplyViewAutoVehiclePitchCentering )
		pFnApplyViewAutoVehiclePitchCentering = (UFunction*) UObject::GObjObjects()->Data[ 77671 ];

	UTrConsolePlayerInput_execApplyViewAutoVehiclePitchCentering_Parms ApplyViewAutoVehiclePitchCentering_Parms;
	ApplyViewAutoVehiclePitchCentering_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAutoVehiclePitchCentering, &ApplyViewAutoVehiclePitchCentering_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.ApplyViewAutoPitchCentering
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrConsolePlayerInput::ApplyViewAutoPitchCentering ( float DeltaTime )
{
	static UFunction* pFnApplyViewAutoPitchCentering = NULL;

	if ( ! pFnApplyViewAutoPitchCentering )
		pFnApplyViewAutoPitchCentering = (UFunction*) UObject::GObjObjects()->Data[ 77667 ];

	UTrConsolePlayerInput_execApplyViewAutoPitchCentering_Parms ApplyViewAutoPitchCentering_Parms;
	ApplyViewAutoPitchCentering_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnApplyViewAutoPitchCentering, &ApplyViewAutoPitchCentering_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.PreProcessInput
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrConsolePlayerInput::PreProcessInput ( float DeltaTime )
{
	static UFunction* pFnPreProcessInput = NULL;

	if ( ! pFnPreProcessInput )
		pFnPreProcessInput = (UFunction*) UObject::GObjObjects()->Data[ 77663 ];

	UTrConsolePlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPreProcessInput, &PreProcessInput_Parms, NULL );
};

// Function TribesGame.TrConsolePlayerInput.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void UTrConsolePlayerInput::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 77662 ];

	UTrConsolePlayerInput_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrCTFBlitz.RotateFlag
// [0x00020002] 
// Parameters infos:
// class ATrFlagBase*             theFlag                        ( CPF_Parm )

void ATrGame_TrCTFBlitz::RotateFlag ( class ATrFlagBase* theFlag )
{
	static UFunction* pFnRotateFlag = NULL;

	if ( ! pFnRotateFlag )
		pFnRotateFlag = (UFunction*) UObject::GObjObjects()->Data[ 89778 ];

	ATrGame_TrCTFBlitz_execRotateFlag_Parms RotateFlag_Parms;
	RotateFlag_Parms.theFlag = theFlag;

	this->ProcessEvent ( pFnRotateFlag, &RotateFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TrCTFBlitz.ScoreFlag
// [0x00020002] 
// Parameters infos:
// class AController*             Scorer                         ( CPF_Parm )
// class ATrFlagBase*             theFlag                        ( CPF_Parm )

void ATrGame_TrCTFBlitz::ScoreFlag ( class AController* Scorer, class ATrFlagBase* theFlag )
{
	static UFunction* pFnScoreFlag = NULL;

	if ( ! pFnScoreFlag )
		pFnScoreFlag = (UFunction*) UObject::GObjObjects()->Data[ 89775 ];

	ATrGame_TrCTFBlitz_execScoreFlag_Parms ScoreFlag_Parms;
	ScoreFlag_Parms.Scorer = Scorer;
	ScoreFlag_Parms.theFlag = theFlag;

	this->ProcessEvent ( pFnScoreFlag, &ScoreFlag_Parms, NULL );
};

// Function TribesGame.TrGame_TrCTFBlitz.RegisterFlagBase
// [0x00020002] 
// Parameters infos:
// class ATrCTFBase*              FlagBase                       ( CPF_Parm )

void ATrGame_TrCTFBlitz::RegisterFlagBase ( class ATrCTFBase* FlagBase )
{
	static UFunction* pFnRegisterFlagBase = NULL;

	if ( ! pFnRegisterFlagBase )
		pFnRegisterFlagBase = (UFunction*) UObject::GObjObjects()->Data[ 89773 ];

	ATrGame_TrCTFBlitz_execRegisterFlagBase_Parms RegisterFlagBase_Parms;
	RegisterFlagBase_Parms.FlagBase = FlagBase;

	this->ProcessEvent ( pFnRegisterFlagBase, &RegisterFlagBase_Parms, NULL );
};

// Function TribesGame.TrGame_TrCTFBlitz.ApplyServerSettings
// [0x00020102] 
// Parameters infos:

void ATrGame_TrCTFBlitz::ApplyServerSettings ( )
{
	static UFunction* pFnApplyServerSettings = NULL;

	if ( ! pFnApplyServerSettings )
		pFnApplyServerSettings = (UFunction*) UObject::GObjObjects()->Data[ 89770 ];

	ATrGame_TrCTFBlitz_execApplyServerSettings_Parms ApplyServerSettings_Parms;

	this->ProcessEvent ( pFnApplyServerSettings, &ApplyServerSettings_Parms, NULL );
};

// Function TribesGame.TrCTFBase_BloodEagle.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrCTFBase_BloodEagle::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 77852 ];

	ATrCTFBase_BloodEagle_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrFlagCTF_BloodEagle.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrFlagCTF_BloodEagle::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 87697 ];

	ATrFlagCTF_BloodEagle_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrCTFBase_DiamondSword.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrCTFBase_DiamondSword::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 77860 ];

	ATrCTFBase_DiamondSword_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrFlagCTF_DiamondSword.GetSpectatorName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ATrFlagCTF_DiamondSword::GetSpectatorName ( )
{
	static UFunction* pFnGetSpectatorName = NULL;

	if ( ! pFnGetSpectatorName )
		pFnGetSpectatorName = (UFunction*) UObject::GObjObjects()->Data[ 87704 ];

	ATrFlagCTF_DiamondSword_execGetSpectatorName_Parms GetSpectatorName_Parms;

	this->ProcessEvent ( pFnGetSpectatorName, &GetSpectatorName_Parms, NULL );

	return GetSpectatorName_Parms.ReturnValue;
};

// Function TribesGame.TrCTFHUDMessage.AddAnnouncement
// [0x00026000] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UTrCTFHUDMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 77894 ];

	UTrCTFHUDMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function TribesGame.TrCTFHUDMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrCTFHUDMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 77887 ];

	UTrCTFHUDMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrCTFHUDMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UTrCTFHUDMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 77881 ];

	UTrCTFHUDMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function TribesGame.TrCTFHUDMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrCTFHUDMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 77875 ];

	UTrCTFHUDMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrCTFMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrCTFMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 78451 ];

	UTrCTFMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrCTFMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrCTFMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 78442 ];

	UTrCTFMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrCTFScoreMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UTrCTFScoreMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 79026 ];

	UTrCTFScoreMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function TribesGame.TrCTFScoreMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrCTFScoreMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 79019 ];

	UTrCTFScoreMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrCTFScoreMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrCTFScoreMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 79014 ];

	UTrCTFScoreMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrCTFScoreMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrCTFScoreMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 79007 ];

	UTrCTFScoreMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrCTFScoreMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UTrCTFScoreMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 79004 ];

	UTrCTFScoreMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function TribesGame.TrDaDCapacitor.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDaDCapacitor::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79083 ];

	ATrDaDCapacitor_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDaDCapacitor.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrDaDCapacitor::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 79065 ];

	ATrDaDCapacitor_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrDaDCapacitor.GetScreenName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_Parm )

struct FString ATrDaDCapacitor::GetScreenName ( class APlayerController* PC )
{
	static UFunction* pFnGetScreenName = NULL;

	if ( ! pFnGetScreenName )
		pFnGetScreenName = (UFunction*) UObject::GObjObjects()->Data[ 79061 ];

	ATrDaDCapacitor_execGetScreenName_Parms GetScreenName_Parms;
	GetScreenName_Parms.PC = PC;

	this->ProcessEvent ( pFnGetScreenName, &GetScreenName_Parms, NULL );

	return GetScreenName_Parms.ReturnValue;
};

// Function TribesGame.TrDaDCapacitor.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDaDCapacitor::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 79046 ];

	ATrDaDCapacitor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrDaDCapacitor.Init
// [0x00020102] 
// Parameters infos:
// class ATrDaDCore*              Core                           ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void ATrDaDCapacitor::Init ( class ATrDaDCore* Core, int Index )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 79043 ];

	ATrDaDCapacitor_execInit_Parms Init_Parms;
	Init_Parms.Core = Core;
	Init_Parms.Index = Index;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrDaDCore.GetCeilPctScore
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrDaDCore::GetCeilPctScore ( )
{
	static UFunction* pFnGetCeilPctScore = NULL;

	if ( ! pFnGetCeilPctScore )
		pFnGetCeilPctScore = (UFunction*) UObject::GObjObjects()->Data[ 79183 ];

	ATrDaDCore_execGetCeilPctScore_Parms GetCeilPctScore_Parms;

	this->ProcessEvent ( pFnGetCeilPctScore, &GetCeilPctScore_Parms, NULL );

	return GetCeilPctScore_Parms.ReturnValue;
};

// Function TribesGame.TrDaDCore.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrDaDCore::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 79161 ];

	ATrDaDCore_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrDaDCore.OnCoreDestroyed
// [0x00020000] 
// Parameters infos:

void ATrDaDCore::OnCoreDestroyed ( )
{
	static UFunction* pFnOnCoreDestroyed = NULL;

	if ( ! pFnOnCoreDestroyed )
		pFnOnCoreDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 79160 ];

	ATrDaDCore_execOnCoreDestroyed_Parms OnCoreDestroyed_Parms;

	this->ProcessEvent ( pFnOnCoreDestroyed, &OnCoreDestroyed_Parms, NULL );
};

// Function TribesGame.TrDaDCore.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDaDCore::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 79145 ];

	ATrDaDCore_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrDaDCore.OnCapacitorRestored
// [0x00020002] 
// Parameters infos:
// int                            CapacitorIndex                 ( CPF_Parm )

void ATrDaDCore::OnCapacitorRestored ( int CapacitorIndex )
{
	static UFunction* pFnOnCapacitorRestored = NULL;

	if ( ! pFnOnCapacitorRestored )
		pFnOnCapacitorRestored = (UFunction*) UObject::GObjObjects()->Data[ 79143 ];

	ATrDaDCore_execOnCapacitorRestored_Parms OnCapacitorRestored_Parms;
	OnCapacitorRestored_Parms.CapacitorIndex = CapacitorIndex;

	this->ProcessEvent ( pFnOnCapacitorRestored, &OnCapacitorRestored_Parms, NULL );
};

// Function TribesGame.TrDaDCore.OnCapacitorBlownUp
// [0x00020002] 
// Parameters infos:
// int                            CapacitorIndex                 ( CPF_Parm )

void ATrDaDCore::OnCapacitorBlownUp ( int CapacitorIndex )
{
	static UFunction* pFnOnCapacitorBlownUp = NULL;

	if ( ! pFnOnCapacitorBlownUp )
		pFnOnCapacitorBlownUp = (UFunction*) UObject::GObjObjects()->Data[ 79138 ];

	ATrDaDCore_execOnCapacitorBlownUp_Parms OnCapacitorBlownUp_Parms;
	OnCapacitorBlownUp_Parms.CapacitorIndex = CapacitorIndex;

	this->ProcessEvent ( pFnOnCapacitorBlownUp, &OnCapacitorBlownUp_Parms, NULL );
};

// Function TribesGame.TrDaDCore.SpawnShield
// [0x00020102] 
// Parameters infos:
// int                            ShieldIndex                    ( CPF_Parm )

void ATrDaDCore::SpawnShield ( int ShieldIndex )
{
	static UFunction* pFnSpawnShield = NULL;

	if ( ! pFnSpawnShield )
		pFnSpawnShield = (UFunction*) UObject::GObjObjects()->Data[ 79136 ];

	ATrDaDCore_execSpawnShield_Parms SpawnShield_Parms;
	SpawnShield_Parms.ShieldIndex = ShieldIndex;

	this->ProcessEvent ( pFnSpawnShield, &SpawnShield_Parms, NULL );
};

// Function TribesGame.TrDaDCore.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDaDCore::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79133 ];

	ATrDaDCore_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDaDShell.StopRotation
// [0x00020102] 
// Parameters infos:

void ATrDaDShell::StopRotation ( )
{
	static UFunction* pFnStopRotation = NULL;

	if ( ! pFnStopRotation )
		pFnStopRotation = (UFunction*) UObject::GObjObjects()->Data[ 79286 ];

	ATrDaDShell_execStopRotation_Parms StopRotation_Parms;

	this->ProcessEvent ( pFnStopRotation, &StopRotation_Parms, NULL );
};

// Function TribesGame.TrDaDShell.StartRotation
// [0x00020102] 
// Parameters infos:

void ATrDaDShell::StartRotation ( )
{
	static UFunction* pFnStartRotation = NULL;

	if ( ! pFnStartRotation )
		pFnStartRotation = (UFunction*) UObject::GObjObjects()->Data[ 79285 ];

	ATrDaDShell_execStartRotation_Parms StartRotation_Parms;

	this->ProcessEvent ( pFnStartRotation, &StartRotation_Parms, NULL );
};

// Function TribesGame.TrDaDShell.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDaDShell::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79284 ];

	ATrDaDShell_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDaDShell.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrDaDShell::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 79282 ];

	ATrDaDShell_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.CreateMICs
// [0x00020102] 
// Parameters infos:

void ATrDaDCoreShield::CreateMICs ( )
{
	static UFunction* pFnCreateMICs = NULL;

	if ( ! pFnCreateMICs )
		pFnCreateMICs = (UFunction*) UObject::GObjObjects()->Data[ 79248 ];

	ATrDaDCoreShield_execCreateMICs_Parms CreateMICs_Parms;

	this->ProcessEvent ( pFnCreateMICs, &CreateMICs_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.UpdateMaterialForPawn
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 P                              ( CPF_Parm )

void ATrDaDCoreShield::UpdateMaterialForPawn ( class ATrPawn* P )
{
	static UFunction* pFnUpdateMaterialForPawn = NULL;

	if ( ! pFnUpdateMaterialForPawn )
		pFnUpdateMaterialForPawn = (UFunction*) UObject::GObjObjects()->Data[ 79245 ];

	ATrDaDCoreShield_execUpdateMaterialForPawn_Parms UpdateMaterialForPawn_Parms;
	UpdateMaterialForPawn_Parms.P = P;

	this->ProcessEvent ( pFnUpdateMaterialForPawn, &UpdateMaterialForPawn_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.EnableBlocking
// [0x00020102] 
// Parameters infos:

void ATrDaDCoreShield::EnableBlocking ( )
{
	static UFunction* pFnEnableBlocking = NULL;

	if ( ! pFnEnableBlocking )
		pFnEnableBlocking = (UFunction*) UObject::GObjObjects()->Data[ 79244 ];

	ATrDaDCoreShield_execEnableBlocking_Parms EnableBlocking_Parms;

	this->ProcessEvent ( pFnEnableBlocking, &EnableBlocking_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.DisableBlocking
// [0x00020102] 
// Parameters infos:

void ATrDaDCoreShield::DisableBlocking ( )
{
	static UFunction* pFnDisableBlocking = NULL;

	if ( ! pFnDisableBlocking )
		pFnDisableBlocking = (UFunction*) UObject::GObjObjects()->Data[ 79243 ];

	ATrDaDCoreShield_execDisableBlocking_Parms DisableBlocking_Parms;

	this->ProcessEvent ( pFnDisableBlocking, &DisableBlocking_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDaDCoreShield::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79242 ];

	ATrDaDCoreShield_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDaDCoreShield.Init
// [0x00024102] 
// Parameters infos:
// int                            ShieldIndex                    ( CPF_Parm )
// class ATrDaDCore*              Core                           ( CPF_OptionalParm | CPF_Parm )
// class ATrDaDShell*             Shell                          ( CPF_OptionalParm | CPF_Parm )

void ATrDaDCoreShield::Init ( int ShieldIndex, class ATrDaDCore* Core, class ATrDaDShell* Shell )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 79235 ];

	ATrDaDCoreShield_execInit_Parms Init_Parms;
	Init_Parms.ShieldIndex = ShieldIndex;
	Init_Parms.Core = Core;
	Init_Parms.Shell = Shell;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrDaDCore_BE.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDaDCore_BE::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79199 ];

	ATrDaDCore_BE_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDaDCore_DS.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDaDCore_DS::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79214 ];

	ATrDaDCore_DS_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDaDMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrDaDMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 79270 ];

	UTrDaDMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrDaDMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrDaDMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 79263 ];

	UTrDaDMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDaDStats.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrDaDStats::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 79337 ];

	UTrDaDStats_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrDaDStats.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrDaDStats::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 79331 ];

	UTrDaDStats_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrDaDStats.UpdateTime
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrDaDStats::UpdateTime ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 79329 ];

	UTrDaDStats_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function TribesGame.TrDaDStats.UpdateTeamScore
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrDaDStats::UpdateTeamScore ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTeamScore = NULL;

	if ( ! pFnUpdateTeamScore )
		pFnUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 79320 ];

	UTrDaDStats_execUpdateTeamScore_Parms UpdateTeamScore_Parms;
	UpdateTeamScore_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTeamScore, &UpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrDaDStats.UpdateTeam
// [0x00020002] 
// Parameters infos:

void UTrDaDStats::UpdateTeam ( )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 79319 ];

	UTrDaDStats_execUpdateTeam_Parms UpdateTeam_Parms;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );
};

// Function TribesGame.TrDaDStats.Tick
// [0x00020002] 
// Parameters infos:

void UTrDaDStats::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 79317 ];

	UTrDaDStats_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDaDStats.Hide
// [0x00020002] 
// Parameters infos:

void UTrDaDStats::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 79316 ];

	UTrDaDStats_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrDaDStats.Show
// [0x00020002] 
// Parameters infos:

void UTrDaDStats::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 79315 ];

	UTrDaDStats_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrDaDStats.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrDaDStats::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 79312 ];

	UTrDaDStats_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrDataStore_OnlineGameSearch.HasExistingSearchResults
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrDataStore_OnlineGameSearch::HasExistingSearchResults ( )
{
	static UFunction* pFnHasExistingSearchResults = NULL;

	if ( ! pFnHasExistingSearchResults )
		pFnHasExistingSearchResults = (UFunction*) UObject::GObjObjects()->Data[ 79369 ];

	UTrDataStore_OnlineGameSearch_execHasExistingSearchResults_Parms HasExistingSearchResults_Parms;

	this->ProcessEvent ( pFnHasExistingSearchResults, &HasExistingSearchResults_Parms, NULL );

	return HasExistingSearchResults_Parms.ReturnValue;
};

// Function TribesGame.TrDataStore_OnlineGameSearch.HasOutstandingQueries
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bRestrictCheckToSelf           ( CPF_OptionalParm | CPF_Parm )

bool UTrDataStore_OnlineGameSearch::HasOutstandingQueries ( unsigned long bRestrictCheckToSelf )
{
	static UFunction* pFnHasOutstandingQueries = NULL;

	if ( ! pFnHasOutstandingQueries )
		pFnHasOutstandingQueries = (UFunction*) UObject::GObjObjects()->Data[ 79364 ];

	UTrDataStore_OnlineGameSearch_execHasOutstandingQueries_Parms HasOutstandingQueries_Parms;
	HasOutstandingQueries_Parms.bRestrictCheckToSelf = bRestrictCheckToSelf;

	this->ProcessEvent ( pFnHasOutstandingQueries, &HasOutstandingQueries_Parms, NULL );

	return HasOutstandingQueries_Parms.ReturnValue;
};

// Function TribesGame.TrDataStore_OnlineGameSearch.OnSearchComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UTrDataStore_OnlineGameSearch::OnSearchComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnSearchComplete = NULL;

	if ( ! pFnOnSearchComplete )
		pFnOnSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 79362 ];

	UTrDataStore_OnlineGameSearch_execOnSearchComplete_Parms OnSearchComplete_Parms;
	OnSearchComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnSearchComplete, &OnSearchComplete_Parms, NULL );
};

// Function TribesGame.TrDataStore_OnlineGameSearch.SubmitGameSearch
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ControllerIndex                ( CPF_Parm )
// unsigned long                  bInvalidateExistingSearchResults ( CPF_OptionalParm | CPF_Parm )

bool UTrDataStore_OnlineGameSearch::eventSubmitGameSearch ( unsigned char ControllerIndex, unsigned long bInvalidateExistingSearchResults )
{
	static UFunction* pFnSubmitGameSearch = NULL;

	if ( ! pFnSubmitGameSearch )
		pFnSubmitGameSearch = (UFunction*) UObject::GObjObjects()->Data[ 79357 ];

	UTrDataStore_OnlineGameSearch_eventSubmitGameSearch_Parms SubmitGameSearch_Parms;
	SubmitGameSearch_Parms.ControllerIndex = ControllerIndex;
	SubmitGameSearch_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;

	this->ProcessEvent ( pFnSubmitGameSearch, &SubmitGameSearch_Parms, NULL );

	return SubmitGameSearch_Parms.ReturnValue;
};

// Function TribesGame.TrDataStore_OnlineGameSearch.Init
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrDataStore_OnlineGameSearch::eventInit ( )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 79356 ];

	UTrDataStore_OnlineGameSearch_eventInit_Parms Init_Parms;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrDeathMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrDeathMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 79389 ];

	UTrDeathMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrDeathMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrDeathMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 79380 ];

	UTrDeathMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDeathMessage.GetConsoleColor
// [0x00022002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )

struct FColor UTrDeathMessage::GetConsoleColor ( class APlayerReplicationInfo* RelatedPRI )
{
	static UFunction* pFnGetConsoleColor = NULL;

	if ( ! pFnGetConsoleColor )
		pFnGetConsoleColor = (UFunction*) UObject::GObjObjects()->Data[ 79377 ];

	UTrDeathMessage_execGetConsoleColor_Parms GetConsoleColor_Parms;
	GetConsoleColor_Parms.RelatedPRI = RelatedPRI;

	this->ProcessEvent ( pFnGetConsoleColor, &GetConsoleColor_Parms, NULL );

	return GetConsoleColor_Parms.ReturnValue;
};

// Function TribesGame.TrKillerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrKillerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 79396 ];

	UTrKillerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrKillerMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrKillerMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 97511 ];

	UTrKillerMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrVictimMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrVictimMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 79399 ];

	UTrVictimMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrDemoRecSpectator.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDemoRecSpectator::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 79443 ];

	ATrDemoRecSpectator_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 CameraLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                CameraRotation                 ( CPF_Parm | CPF_OutParm )

void ATrDemoRecSpectator::eventGetPlayerViewPoint ( struct FVector* CameraLocation, struct FRotator* CameraRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 79440 ];

	ATrDemoRecSpectator_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( CameraLocation )
		memcpy ( CameraLocation, &GetPlayerViewPoint_Parms.CameraLocation, 0xC );

	if ( CameraRotation )
		memcpy ( CameraRotation, &GetPlayerViewPoint_Parms.CameraRotation, 0xC );
};

// Function TribesGame.TrDemoRecSpectator.Pause
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrDemoRecSpectator::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 79439 ];

	ATrDemoRecSpectator_execPause_Parms Pause_Parms;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.SetPause
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPause                         ( CPF_Parm )
// struct FScriptDelegate         CanUnpauseDelegate             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ATrDemoRecSpectator::SetPause ( unsigned long bPause, struct FScriptDelegate CanUnpauseDelegate )
{
	static UFunction* pFnSetPause = NULL;

	if ( ! pFnSetPause )
		pFnSetPause = (UFunction*) UObject::GObjObjects()->Data[ 79435 ];

	ATrDemoRecSpectator_execSetPause_Parms SetPause_Parms;
	SetPause_Parms.bPause = bPause;
	memcpy ( &SetPause_Parms.CanUnpauseDelegate, &CanUnpauseDelegate, 0xC );

	this->ProcessEvent ( pFnSetPause, &SetPause_Parms, NULL );

	return SetPause_Parms.ReturnValue;
};

// Function TribesGame.TrDemoRecSpectator.ClientSetRealViewTarget
// [0x010201C2] 
// Parameters infos:
// class APlayerReplicationInfo*  NewTarget                      ( CPF_Parm )

void ATrDemoRecSpectator::ClientSetRealViewTarget ( class APlayerReplicationInfo* NewTarget )
{
	static UFunction* pFnClientSetRealViewTarget = NULL;

	if ( ! pFnClientSetRealViewTarget )
		pFnClientSetRealViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 79433 ];

	ATrDemoRecSpectator_execClientSetRealViewTarget_Parms ClientSetRealViewTarget_Parms;
	ClientSetRealViewTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnClientSetRealViewTarget, &ClientSetRealViewTarget_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.ServerViewSelf
// [0x00224042] 
// Parameters infos:
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ATrDemoRecSpectator::ServerViewSelf ( struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnServerViewSelf = NULL;

	if ( ! pFnServerViewSelf )
		pFnServerViewSelf = (UFunction*) UObject::GObjObjects()->Data[ 79431 ];

	ATrDemoRecSpectator_execServerViewSelf_Parms ServerViewSelf_Parms;
	memcpy ( &ServerViewSelf_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnServerViewSelf, &ServerViewSelf_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.SetViewTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ATrDemoRecSpectator::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 79428 ];

	ATrDemoRecSpectator_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.DemoViewNextPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ATrDemoRecSpectator::DemoViewNextPlayer ( )
{
	static UFunction* pFnDemoViewNextPlayer = NULL;

	if ( ! pFnDemoViewNextPlayer )
		pFnDemoViewNextPlayer = (UFunction*) UObject::GObjObjects()->Data[ 79424 ];

	ATrDemoRecSpectator_execDemoViewNextPlayer_Parms DemoViewNextPlayer_Parms;

	this->ProcessEvent ( pFnDemoViewNextPlayer, &DemoViewNextPlayer_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.ViewClass
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )
// unsigned long                  bQuiet                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCheat                         ( CPF_OptionalParm | CPF_Parm )

void ATrDemoRecSpectator::ViewClass ( class UClass* aClass, unsigned long bQuiet, unsigned long bCheat )
{
	static UFunction* pFnViewClass = NULL;

	if ( ! pFnViewClass )
		pFnViewClass = (UFunction*) UObject::GObjObjects()->Data[ 79417 ];

	ATrDemoRecSpectator_execViewClass_Parms ViewClass_Parms;
	ViewClass_Parms.aClass = aClass;
	ViewClass_Parms.bQuiet = bQuiet;
	ViewClass_Parms.bCheat = bCheat;

	this->ProcessEvent ( pFnViewClass, &ViewClass_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.Slomo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          NewTimeDilation                ( CPF_Parm )

void ATrDemoRecSpectator::Slomo ( float NewTimeDilation )
{
	static UFunction* pFnSlomo = NULL;

	if ( ! pFnSlomo )
		pFnSlomo = (UFunction*) UObject::GObjObjects()->Data[ 79415 ];

	ATrDemoRecSpectator_execSlomo_Parms Slomo_Parms;
	Slomo_Parms.NewTimeDilation = NewTimeDilation;

	this->ProcessEvent ( pFnSlomo, &Slomo_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.InitPlayerReplicationInfo
// [0x00020002] 
// Parameters infos:

void ATrDemoRecSpectator::InitPlayerReplicationInfo ( )
{
	static UFunction* pFnInitPlayerReplicationInfo = NULL;

	if ( ! pFnInitPlayerReplicationInfo )
		pFnInitPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 79414 ];

	ATrDemoRecSpectator_execInitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;

	this->ProcessEvent ( pFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDemoRecSpectator::eventReceivedPlayer ( )
{
	static UFunction* pFnReceivedPlayer = NULL;

	if ( ! pFnReceivedPlayer )
		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 79413 ];

	ATrDemoRecSpectator_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
};

// Function TribesGame.TrDemoRecSpectator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrDemoRecSpectator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 79408 ];

	ATrDemoRecSpectator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrDeployable_ForceField.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_ForceField::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 79651 ];

	ATrDeployable_ForceField_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_ForceField.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrDeployable_ForceField::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 79648 ];

	ATrDeployable_ForceField_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrDeployable_ForceField.PlayHitOtherEffects
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrDeployable_ForceField::PlayHitOtherEffects ( class AActor* Other )
{
	static UFunction* pFnPlayHitOtherEffects = NULL;

	if ( ! pFnPlayHitOtherEffects )
		pFnPlayHitOtherEffects = (UFunction*) UObject::GObjObjects()->Data[ 79646 ];

	ATrDeployable_ForceField_execPlayHitOtherEffects_Parms PlayHitOtherEffects_Parms;
	PlayHitOtherEffects_Parms.Other = Other;

	this->ProcessEvent ( pFnPlayHitOtherEffects, &PlayHitOtherEffects_Parms, NULL );
};

// Function TribesGame.TrDeployable_ForceField.PlayDamageHealthEffects
// [0x00020102] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// int                            HitBoneIndex                   ( CPF_Parm )

void ATrDeployable_ForceField::PlayDamageHealthEffects ( int DamageAmount, int HitBoneIndex )
{
	static UFunction* pFnPlayDamageHealthEffects = NULL;

	if ( ! pFnPlayDamageHealthEffects )
		pFnPlayDamageHealthEffects = (UFunction*) UObject::GObjObjects()->Data[ 79643 ];

	ATrDeployable_ForceField_execPlayDamageHealthEffects_Parms PlayDamageHealthEffects_Parms;
	PlayDamageHealthEffects_Parms.DamageAmount = DamageAmount;
	PlayDamageHealthEffects_Parms.HitBoneIndex = HitBoneIndex;

	this->ProcessEvent ( pFnPlayDamageHealthEffects, &PlayDamageHealthEffects_Parms, NULL );
};

// Function TribesGame.TrDeployable_ForceField.OnHealthChanged
// [0x00020102] 
// Parameters infos:
// unsigned long                  wasDamage                      ( CPF_Parm )

void ATrDeployable_ForceField::OnHealthChanged ( unsigned long wasDamage )
{
	static UFunction* pFnOnHealthChanged = NULL;

	if ( ! pFnOnHealthChanged )
		pFnOnHealthChanged = (UFunction*) UObject::GObjObjects()->Data[ 79641 ];

	ATrDeployable_ForceField_execOnHealthChanged_Parms OnHealthChanged_Parms;
	OnHealthChanged_Parms.wasDamage = wasDamage;

	this->ProcessEvent ( pFnOnHealthChanged, &OnHealthChanged_Parms, NULL );
};

// Function TribesGame.TrDeployable_ForceField.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrDeployable_ForceField::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 79635 ];

	ATrDeployable_ForceField_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrSubDevice_ForceField.ModifyInstantHitDamage
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

float ATrSubDevice_ForceField::ModifyInstantHitDamage ( unsigned char FiringMode, struct FImpactInfo Impact, float Damage )
{
	static UFunction* pFnModifyInstantHitDamage = NULL;

	if ( ! pFnModifyInstantHitDamage )
		pFnModifyInstantHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 112080 ];

	ATrSubDevice_ForceField_execModifyInstantHitDamage_Parms ModifyInstantHitDamage_Parms;
	ModifyInstantHitDamage_Parms.FiringMode = FiringMode;
	memcpy ( &ModifyInstantHitDamage_Parms.Impact, &Impact, 0x50 );
	ModifyInstantHitDamage_Parms.Damage = Damage;

	this->ProcessEvent ( pFnModifyInstantHitDamage, &ModifyInstantHitDamage_Parms, NULL );

	return ModifyInstantHitDamage_Parms.ReturnValue;
};

// Function TribesGame.TrSubDevice_ForceField.InstantFire
// [0x00020102] 
// Parameters infos:

void ATrSubDevice_ForceField::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 112079 ];

	ATrSubDevice_ForceField_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function TribesGame.TrDeployable_TargetingBeacon.GetMarker
// [0x00020102] 
// Parameters infos:
// class UTexture2D*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UTexture2D* ATrDeployable_TargetingBeacon::GetMarker ( )
{
	static UFunction* pFnGetMarker = NULL;

	if ( ! pFnGetMarker )
		pFnGetMarker = (UFunction*) UObject::GObjObjects()->Data[ 80000 ];

	ATrDeployable_TargetingBeacon_execGetMarker_Parms GetMarker_Parms;

	this->ProcessEvent ( pFnGetMarker, &GetMarker_Parms, NULL );

	return GetMarker_Parms.ReturnValue;
};

// Function TribesGame.TrDeployable_TargetingBeacon.RenderForTeammate
// [0x00840103] ( FUNC_Final )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )
// float                          Distance                       ( CPF_Parm )

void ATrDeployable_TargetingBeacon::RenderForTeammate ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir, float Distance )
{
	static UFunction* pFnRenderForTeammate = NULL;

	if ( ! pFnRenderForTeammate )
		pFnRenderForTeammate = (UFunction*) UObject::GObjObjects()->Data[ 79977 ];

	ATrDeployable_TargetingBeacon_execRenderForTeammate_Parms RenderForTeammate_Parms;
	RenderForTeammate_Parms.PC = PC;
	RenderForTeammate_Parms.Canvas = Canvas;
	memcpy ( &RenderForTeammate_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &RenderForTeammate_Parms.CameraDir, &CameraDir, 0xC );
	RenderForTeammate_Parms.Distance = Distance;

	this->ProcessEvent ( pFnRenderForTeammate, &RenderForTeammate_Parms, NULL );
};

// Function TribesGame.TrDeployable_TargetingBeacon.PostRenderFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrDeployable_TargetingBeacon::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 79971 ];

	ATrDeployable_TargetingBeacon_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrDestroyableTarget.OnToggle
// [0x00020102] 
// Parameters infos:
// class USeqAct_Toggle*          Action                         ( CPF_Parm )

void ATrDestroyableTarget::OnToggle ( class USeqAct_Toggle* Action )
{
	static UFunction* pFnOnToggle = NULL;

	if ( ! pFnOnToggle )
		pFnOnToggle = (UFunction*) UObject::GObjObjects()->Data[ 80181 ];

	ATrDestroyableTarget_execOnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;

	this->ProcessEvent ( pFnOnToggle, &OnToggle_Parms, NULL );
};

// Function TribesGame.TrDestroyableTarget.TakeDamage
// [0x00024102] 
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrDestroyableTarget::TakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 80170 ];

	ATrDestroyableTarget_execTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrSeqEvent_TakeDamage.HandleDamage
// [0x00020002] 
// Parameters infos:
// class AActor*                  InOriginator                   ( CPF_Parm )
// class AActor*                  InInstigator                   ( CPF_Parm )
// class UClass*                  inDamageType                   ( CPF_Parm )
// int                            inAmount                       ( CPF_Parm )

void UTrSeqEvent_TakeDamage::HandleDamage ( class AActor* InOriginator, class AActor* InInstigator, class UClass* inDamageType, int inAmount )
{
	static UFunction* pFnHandleDamage = NULL;

	if ( ! pFnHandleDamage )
		pFnHandleDamage = (UFunction*) UObject::GObjObjects()->Data[ 109987 ];

	UTrSeqEvent_TakeDamage_execHandleDamage_Parms HandleDamage_Parms;
	HandleDamage_Parms.InOriginator = InOriginator;
	HandleDamage_Parms.InInstigator = InInstigator;
	HandleDamage_Parms.inDamageType = inDamageType;
	HandleDamage_Parms.inAmount = inAmount;

	this->ProcessEvent ( pFnHandleDamage, &HandleDamage_Parms, NULL );
};

// Function TribesGame.TrSeqEvent_TakeDamage.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrSeqEvent_TakeDamage::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 109985 ];

	UTrSeqEvent_TakeDamage_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function TribesGame.TrEffect_AmmoPoolBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_AmmoPoolBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86192 ];

	UTrEffect_AmmoPoolBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_AmmoPoolBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_AmmoPoolBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86189 ];

	UTrEffect_AmmoPoolBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_Managed.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_Managed::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86185 ];

	UTrEffect_Managed_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_Managed.RemoveEffect
// [0x00020002] 
// Parameters infos:

void UTrEffect_Managed::RemoveEffect ( )
{
	static UFunction* pFnRemoveEffect = NULL;

	if ( ! pFnRemoveEffect )
		pFnRemoveEffect = (UFunction*) UObject::GObjObjects()->Data[ 86184 ];

	UTrEffect_Managed_execRemoveEffect_Parms RemoveEffect_Parms;

	this->ProcessEvent ( pFnRemoveEffect, &RemoveEffect_Parms, NULL );
};

// Function TribesGame.TrEffect_Managed.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Managed::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86180 ];

	UTrEffect_Managed_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_ArmoredClaymore.TakeDamage
// [0x00824802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrProj_ArmoredClaymore::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 107083 ];

	ATrProj_ArmoredClaymore_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrProj_Buckler.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Buckler::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107238 ];

	ATrProj_Buckler_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrEffect_DamageBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_DamageBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86205 ];

	UTrEffect_DamageBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_DamageBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_DamageBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86200 ];

	UTrEffect_DamageBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_Spinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Spinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107367 ];

	ATrProj_Spinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrEffect_MaxPowerPoolBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_MaxPowerPoolBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86250 ];

	UTrEffect_MaxPowerPoolBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_MaxPowerPoolBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_MaxPowerPoolBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86245 ];

	UTrEffect_MaxPowerPoolBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_PowerPoolBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_PowerPoolBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86271 ];

	UTrEffect_PowerPoolBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_PowerPoolBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_PowerPoolBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86266 ];

	UTrEffect_PowerPoolBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_FlareGrenade.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_FlareGrenade::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 107421 ];

	ATrProj_FlareGrenade_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_FlareGrenade.HijackMissileGuidance
// [0x00020102] 
// Parameters infos:

void ATrProj_FlareGrenade::HijackMissileGuidance ( )
{
	static UFunction* pFnHijackMissileGuidance = NULL;

	if ( ! pFnHijackMissileGuidance )
		pFnHijackMissileGuidance = (UFunction*) UObject::GObjObjects()->Data[ 107416 ];

	ATrProj_FlareGrenade_execHijackMissileGuidance_Parms HijackMissileGuidance_Parms;

	this->ProcessEvent ( pFnHijackMissileGuidance, &HijackMissileGuidance_Parms, NULL );
};

// Function TribesGame.TrProj_FlareGrenade.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_FlareGrenade::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107415 ];

	ATrProj_FlareGrenade_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_FlareGrenade.CalculateHijackMetric
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrProj_TrackingMissile* Missile                        ( CPF_Parm )

float ATrProj_FlareGrenade::CalculateHijackMetric ( class ATrProj_TrackingMissile* Missile )
{
	static UFunction* pFnCalculateHijackMetric = NULL;

	if ( ! pFnCalculateHijackMetric )
		pFnCalculateHijackMetric = (UFunction*) UObject::GObjObjects()->Data[ 107410 ];

	ATrProj_FlareGrenade_execCalculateHijackMetric_Parms CalculateHijackMetric_Parms;
	CalculateHijackMetric_Parms.Missile = Missile;

	this->ProcessEvent ( pFnCalculateHijackMetric, &CalculateHijackMetric_Parms, NULL );

	return CalculateHijackMetric_Parms.ReturnValue;
};

// Function TribesGame.TrEffect_HeavyShield.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_HeavyShield::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86223 ];

	UTrEffect_HeavyShield_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_HeavyShield.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_HeavyShield::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86219 ];

	UTrEffect_HeavyShield_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_HeavySpinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_HeavySpinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107538 ];

	ATrProj_HeavySpinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_Twinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Twinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108475 ];

	ATrProj_Twinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_HeavyTwinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_HeavyTwinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107558 ];

	ATrProj_HeavyTwinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrDevice_Stealth.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrDevice_Stealth::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 81094 ];

	ATrDevice_Stealth_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEffect_Stealth.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_Stealth::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86305 ];

	UTrEffect_Stealth_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_Stealth.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Stealth::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86301 ];

	UTrEffect_Stealth_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_Jammer.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_Jammer::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86232 ];

	UTrEffect_Jammer_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_Jammer.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Jammer::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86228 ];

	UTrEffect_Jammer_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_RegenBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_RegenBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86240 ];

	UTrEffect_RegenBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_RegenBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_RegenBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86236 ];

	UTrEffect_RegenBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_LightSpinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_LightSpinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107648 ];

	ATrProj_LightSpinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_LightSpinfusor_100X.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_LightSpinfusor_100X::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107658 ];

	ATrProj_LightSpinfusor_100X_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_LightStickyGrenade.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_LightStickyGrenade::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 107678 ];

	ATrProj_LightStickyGrenade_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_LightStickyGrenade.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_LightStickyGrenade::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 107674 ];

	ATrProj_LightStickyGrenade_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_LightStickyGrenade.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_LightStickyGrenade::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107673 ];

	ATrProj_LightStickyGrenade_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_LightTwinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_LightTwinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107704 ];

	ATrProj_LightTwinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrEffect_MinorPowerPoolBuff.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_MinorPowerPoolBuff::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86259 ];

	UTrEffect_MinorPowerPoolBuff_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_MinorPowerPoolBuff.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_MinorPowerPoolBuff::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86255 ];

	UTrEffect_MinorPowerPoolBuff_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_MIRVLauncher.Bounce
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 WallNormal                     ( CPF_Parm )

void ATrProj_MIRVLauncher::Bounce ( class AActor* Other, struct FVector WallNormal )
{
	static UFunction* pFnBounce = NULL;

	if ( ! pFnBounce )
		pFnBounce = (UFunction*) UObject::GObjObjects()->Data[ 107745 ];

	ATrProj_MIRVLauncher_execBounce_Parms Bounce_Parms;
	Bounce_Parms.Other = Other;
	memcpy ( &Bounce_Parms.WallNormal, &WallNormal, 0xC );

	this->ProcessEvent ( pFnBounce, &Bounce_Parms, NULL );
};

// Function TribesGame.TrProj_MIRVLauncher.Explode
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_MIRVLauncher::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 107740 ];

	ATrProj_MIRVLauncher_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_MIRVLauncher.SpawnSecondaryProjectile
// [0x00020102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ATrProj_MIRVLauncher::SpawnSecondaryProjectile ( struct FVector Direction )
{
	static UFunction* pFnSpawnSecondaryProjectile = NULL;

	if ( ! pFnSpawnSecondaryProjectile )
		pFnSpawnSecondaryProjectile = (UFunction*) UObject::GObjObjects()->Data[ 107737 ];

	ATrProj_MIRVLauncher_execSpawnSecondaryProjectile_Parms SpawnSecondaryProjectile_Parms;
	memcpy ( &SpawnSecondaryProjectile_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSpawnSecondaryProjectile, &SpawnSecondaryProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_MIRVLauncher.GetRandomSpread
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                BaseDirection                  ( CPF_Parm )

struct FRotator ATrProj_MIRVLauncher::GetRandomSpread ( struct FRotator BaseDirection )
{
	static UFunction* pFnGetRandomSpread = NULL;

	if ( ! pFnGetRandomSpread )
		pFnGetRandomSpread = (UFunction*) UObject::GObjObjects()->Data[ 107727 ];

	ATrProj_MIRVLauncher_execGetRandomSpread_Parms GetRandomSpread_Parms;
	memcpy ( &GetRandomSpread_Parms.BaseDirection, &BaseDirection, 0xC );

	this->ProcessEvent ( pFnGetRandomSpread, &GetRandomSpread_Parms, NULL );

	return GetRandomSpread_Parms.ReturnValue;
};

// Function TribesGame.TrProj_MotionSensor.DetonateObsolete
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDetonateFromDamage            ( CPF_OptionalParm | CPF_Parm )

void ATrProj_MotionSensor::DetonateObsolete ( unsigned long bDetonateFromDamage )
{
	static UFunction* pFnDetonateObsolete = NULL;

	if ( ! pFnDetonateObsolete )
		pFnDetonateObsolete = (UFunction*) UObject::GObjObjects()->Data[ 107812 ];

	ATrProj_MotionSensor_execDetonateObsolete_Parms DetonateObsolete_Parms;
	DetonateObsolete_Parms.bDetonateFromDamage = bDetonateFromDamage;

	this->ProcessEvent ( pFnDetonateObsolete, &DetonateObsolete_Parms, NULL );
};

// Function TribesGame.TrProj_MotionSensor.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_MotionSensor::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 107807 ];

	ATrProj_MotionSensor_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_NovaColt.HitWall
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_NovaColt::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 107853 ];

	ATrProj_NovaColt_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function TribesGame.TrProj_PlasmaCannon.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_PlasmaCannon::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107890 ];

	ATrProj_PlasmaCannon_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_PlasmaGun.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_PlasmaGun::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 107902 ];

	ATrProj_PlasmaGun_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_RemoteArxBuster.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrProj_RemoteArxBuster::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 108001 ];

	ATrProj_RemoteArxBuster_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_RemoteArxBuster.StickToTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProj_RemoteArxBuster::StickToTarget ( class AActor* Target, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStickToTarget = NULL;

	if ( ! pFnStickToTarget )
		pFnStickToTarget = (UFunction*) UObject::GObjObjects()->Data[ 107996 ];

	ATrProj_RemoteArxBuster_execStickToTarget_Parms StickToTarget_Parms;
	StickToTarget_Parms.Target = Target;
	memcpy ( &StickToTarget_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &StickToTarget_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStickToTarget, &StickToTarget_Parms, NULL );

	return StickToTarget_Parms.ReturnValue;
};

// Function TribesGame.TrProj_RemoteArxBuster.ReportDestroyedByOtherToParentDevice
// [0x00020002] 
// Parameters infos:

void ATrProj_RemoteArxBuster::ReportDestroyedByOtherToParentDevice ( )
{
	static UFunction* pFnReportDestroyedByOtherToParentDevice = NULL;

	if ( ! pFnReportDestroyedByOtherToParentDevice )
		pFnReportDestroyedByOtherToParentDevice = (UFunction*) UObject::GObjObjects()->Data[ 107992 ];

	ATrProj_RemoteArxBuster_execReportDestroyedByOtherToParentDevice_Parms ReportDestroyedByOtherToParentDevice_Parms;

	this->ProcessEvent ( pFnReportDestroyedByOtherToParentDevice, &ReportDestroyedByOtherToParentDevice_Parms, NULL );
};

// Function TribesGame.TrProj_RemoteArxBuster.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrProj_RemoteArxBuster::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 107984 ];

	ATrProj_RemoteArxBuster_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrProj_RemoteArxBuster.TakeRadiusDamage
// [0x00024102] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          InDamageRadius                 ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ATrProj_RemoteArxBuster::TakeRadiusDamage ( class AController* EventInstigator, float BaseDamage, float InDamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 107973 ];

	ATrProj_RemoteArxBuster_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.EventInstigator = EventInstigator;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.InDamageRadius = InDamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function TribesGame.TrProj_RemoteArxBuster.PreBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_RemoteArxBuster::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107972 ];

	ATrProj_RemoteArxBuster_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_RocketLauncher.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_RocketLauncher::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108070 ];

	ATrProj_RocketLauncher_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.PawnEnteredVehicle
// [0x00020002] 
// Parameters infos:
// class APawn*                   EnteringPawn                   ( CPF_Parm )
// class ATrVehicle*              Vehicle                        ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrSeekingMissileManager::PawnEnteredVehicle ( class APawn* EnteringPawn, class ATrVehicle* Vehicle, int SeatIndex )
{
	static UFunction* pFnPawnEnteredVehicle = NULL;

	if ( ! pFnPawnEnteredVehicle )
		pFnPawnEnteredVehicle = (UFunction*) UObject::GObjObjects()->Data[ 109920 ];

	ATrSeekingMissileManager_execPawnEnteredVehicle_Parms PawnEnteredVehicle_Parms;
	PawnEnteredVehicle_Parms.EnteringPawn = EnteringPawn;
	PawnEnteredVehicle_Parms.Vehicle = Vehicle;
	PawnEnteredVehicle_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPawnEnteredVehicle, &PawnEnteredVehicle_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.PawnLeftVehicle
// [0x00020002] 
// Parameters infos:
// class APawn*                   LeavingPawn                    ( CPF_Parm )
// class ATrVehicle*              Vehicle                        ( CPF_Parm )

void ATrSeekingMissileManager::PawnLeftVehicle ( class APawn* LeavingPawn, class ATrVehicle* Vehicle )
{
	static UFunction* pFnPawnLeftVehicle = NULL;

	if ( ! pFnPawnLeftVehicle )
		pFnPawnLeftVehicle = (UFunction*) UObject::GObjObjects()->Data[ 109912 ];

	ATrSeekingMissileManager_execPawnLeftVehicle_Parms PawnLeftVehicle_Parms;
	PawnLeftVehicle_Parms.LeavingPawn = LeavingPawn;
	PawnLeftVehicle_Parms.Vehicle = Vehicle;

	this->ProcessEvent ( pFnPawnLeftVehicle, &PawnLeftVehicle_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.StopMissileTracking
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     VictimController               ( CPF_Parm )

void ATrSeekingMissileManager::StopMissileTracking ( class ATrPlayerController* VictimController )
{
	static UFunction* pFnStopMissileTracking = NULL;

	if ( ! pFnStopMissileTracking )
		pFnStopMissileTracking = (UFunction*) UObject::GObjObjects()->Data[ 109910 ];

	ATrSeekingMissileManager_execStopMissileTracking_Parms StopMissileTracking_Parms;
	StopMissileTracking_Parms.VictimController = VictimController;

	this->ProcessEvent ( pFnStopMissileTracking, &StopMissileTracking_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.BeginMissileTracking
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     VictimController               ( CPF_Parm )

void ATrSeekingMissileManager::BeginMissileTracking ( class ATrPlayerController* VictimController )
{
	static UFunction* pFnBeginMissileTracking = NULL;

	if ( ! pFnBeginMissileTracking )
		pFnBeginMissileTracking = (UFunction*) UObject::GObjObjects()->Data[ 109908 ];

	ATrSeekingMissileManager_execBeginMissileTracking_Parms BeginMissileTracking_Parms;
	BeginMissileTracking_Parms.VictimController = VictimController;

	this->ProcessEvent ( pFnBeginMissileTracking, &BeginMissileTracking_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.StopSaberLauncherTargeting
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     VictimController               ( CPF_Parm )

void ATrSeekingMissileManager::StopSaberLauncherTargeting ( class ATrPlayerController* VictimController )
{
	static UFunction* pFnStopSaberLauncherTargeting = NULL;

	if ( ! pFnStopSaberLauncherTargeting )
		pFnStopSaberLauncherTargeting = (UFunction*) UObject::GObjObjects()->Data[ 109906 ];

	ATrSeekingMissileManager_execStopSaberLauncherTargeting_Parms StopSaberLauncherTargeting_Parms;
	StopSaberLauncherTargeting_Parms.VictimController = VictimController;

	this->ProcessEvent ( pFnStopSaberLauncherTargeting, &StopSaberLauncherTargeting_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.BeginSaberLauncherTargeting
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     VictimController               ( CPF_Parm )

void ATrSeekingMissileManager::BeginSaberLauncherTargeting ( class ATrPlayerController* VictimController )
{
	static UFunction* pFnBeginSaberLauncherTargeting = NULL;

	if ( ! pFnBeginSaberLauncherTargeting )
		pFnBeginSaberLauncherTargeting = (UFunction*) UObject::GObjObjects()->Data[ 109904 ];

	ATrSeekingMissileManager_execBeginSaberLauncherTargeting_Parms BeginSaberLauncherTargeting_Parms;
	BeginSaberLauncherTargeting_Parms.VictimController = VictimController;

	this->ProcessEvent ( pFnBeginSaberLauncherTargeting, &BeginSaberLauncherTargeting_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.TargetVehicleUpdated
// [0x00020002] 
// Parameters infos:
// class ATrVehicle*              targetVehicle                  ( CPF_Parm )
// unsigned char                  MissileEvent                   ( CPF_Parm )

void ATrSeekingMissileManager::TargetVehicleUpdated ( class ATrVehicle* targetVehicle, unsigned char MissileEvent )
{
	static UFunction* pFnTargetVehicleUpdated = NULL;

	if ( ! pFnTargetVehicleUpdated )
		pFnTargetVehicleUpdated = (UFunction*) UObject::GObjObjects()->Data[ 109897 ];

	ATrSeekingMissileManager_execTargetVehicleUpdated_Parms TargetVehicleUpdated_Parms;
	TargetVehicleUpdated_Parms.targetVehicle = targetVehicle;
	TargetVehicleUpdated_Parms.MissileEvent = MissileEvent;

	this->ProcessEvent ( pFnTargetVehicleUpdated, &TargetVehicleUpdated_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.VictimControllerUpdated
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     VictimController               ( CPF_Parm )
// unsigned char                  MissileEvent                   ( CPF_Parm )

void ATrSeekingMissileManager::VictimControllerUpdated ( class ATrPlayerController* VictimController, unsigned char MissileEvent )
{
	static UFunction* pFnVictimControllerUpdated = NULL;

	if ( ! pFnVictimControllerUpdated )
		pFnVictimControllerUpdated = (UFunction*) UObject::GObjObjects()->Data[ 109892 ];

	ATrSeekingMissileManager_execVictimControllerUpdated_Parms VictimControllerUpdated_Parms;
	VictimControllerUpdated_Parms.VictimController = VictimController;
	VictimControllerUpdated_Parms.MissileEvent = MissileEvent;

	this->ProcessEvent ( pFnVictimControllerUpdated, &VictimControllerUpdated_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.GetNumMissilesTrackingVehicle
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrVehicle*              targetVehicle                  ( CPF_Parm )

int ATrSeekingMissileManager::GetNumMissilesTrackingVehicle ( class ATrVehicle* targetVehicle )
{
	static UFunction* pFnGetNumMissilesTrackingVehicle = NULL;

	if ( ! pFnGetNumMissilesTrackingVehicle )
		pFnGetNumMissilesTrackingVehicle = (UFunction*) UObject::GObjObjects()->Data[ 109887 ];

	ATrSeekingMissileManager_execGetNumMissilesTrackingVehicle_Parms GetNumMissilesTrackingVehicle_Parms;
	GetNumMissilesTrackingVehicle_Parms.targetVehicle = targetVehicle;

	this->ProcessEvent ( pFnGetNumMissilesTrackingVehicle, &GetNumMissilesTrackingVehicle_Parms, NULL );

	return GetNumMissilesTrackingVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrSeekingMissileManager.GetNumMissilesTrackingController
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     Controller                     ( CPF_Parm )

int ATrSeekingMissileManager::GetNumMissilesTrackingController ( class ATrPlayerController* Controller )
{
	static UFunction* pFnGetNumMissilesTrackingController = NULL;

	if ( ! pFnGetNumMissilesTrackingController )
		pFnGetNumMissilesTrackingController = (UFunction*) UObject::GObjObjects()->Data[ 109882 ];

	ATrSeekingMissileManager_execGetNumMissilesTrackingController_Parms GetNumMissilesTrackingController_Parms;
	GetNumMissilesTrackingController_Parms.Controller = Controller;

	this->ProcessEvent ( pFnGetNumMissilesTrackingController, &GetNumMissilesTrackingController_Parms, NULL );

	return GetNumMissilesTrackingController_Parms.ReturnValue;
};

// Function TribesGame.TrSeekingMissileManager.RemoveMissile
// [0x00020002] 
// Parameters infos:
// class ATrProj_TrackingMissile* MissileToRemove                ( CPF_Parm )

void ATrSeekingMissileManager::RemoveMissile ( class ATrProj_TrackingMissile* MissileToRemove )
{
	static UFunction* pFnRemoveMissile = NULL;

	if ( ! pFnRemoveMissile )
		pFnRemoveMissile = (UFunction*) UObject::GObjObjects()->Data[ 109876 ];

	ATrSeekingMissileManager_execRemoveMissile_Parms RemoveMissile_Parms;
	RemoveMissile_Parms.MissileToRemove = MissileToRemove;

	this->ProcessEvent ( pFnRemoveMissile, &RemoveMissile_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.AddMissile
// [0x00820002] 
// Parameters infos:
// class ATrProj_TrackingMissile* MissileToAdd                   ( CPF_Parm )

void ATrSeekingMissileManager::AddMissile ( class ATrProj_TrackingMissile* MissileToAdd )
{
	static UFunction* pFnAddMissile = NULL;

	if ( ! pFnAddMissile )
		pFnAddMissile = (UFunction*) UObject::GObjObjects()->Data[ 109866 ];

	ATrSeekingMissileManager_execAddMissile_Parms AddMissile_Parms;
	AddMissile_Parms.MissileToAdd = MissileToAdd;

	this->ProcessEvent ( pFnAddMissile, &AddMissile_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.GetNumSaberLaunchersTargetingVehicle
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrVehicle*              targetVehicle                  ( CPF_Parm )
// unsigned long                  bOnlyClientNotified            ( CPF_Parm )

int ATrSeekingMissileManager::GetNumSaberLaunchersTargetingVehicle ( class ATrVehicle* targetVehicle, unsigned long bOnlyClientNotified )
{
	static UFunction* pFnGetNumSaberLaunchersTargetingVehicle = NULL;

	if ( ! pFnGetNumSaberLaunchersTargetingVehicle )
		pFnGetNumSaberLaunchersTargetingVehicle = (UFunction*) UObject::GObjObjects()->Data[ 109860 ];

	ATrSeekingMissileManager_execGetNumSaberLaunchersTargetingVehicle_Parms GetNumSaberLaunchersTargetingVehicle_Parms;
	GetNumSaberLaunchersTargetingVehicle_Parms.targetVehicle = targetVehicle;
	GetNumSaberLaunchersTargetingVehicle_Parms.bOnlyClientNotified = bOnlyClientNotified;

	this->ProcessEvent ( pFnGetNumSaberLaunchersTargetingVehicle, &GetNumSaberLaunchersTargetingVehicle_Parms, NULL );

	return GetNumSaberLaunchersTargetingVehicle_Parms.ReturnValue;
};

// Function TribesGame.TrSeekingMissileManager.GetNumSaberLaunchersTargetingController
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerController*     Controller                     ( CPF_Parm )
// unsigned long                  bOnlyClientNotified            ( CPF_Parm )

int ATrSeekingMissileManager::GetNumSaberLaunchersTargetingController ( class ATrPlayerController* Controller, unsigned long bOnlyClientNotified )
{
	static UFunction* pFnGetNumSaberLaunchersTargetingController = NULL;

	if ( ! pFnGetNumSaberLaunchersTargetingController )
		pFnGetNumSaberLaunchersTargetingController = (UFunction*) UObject::GObjObjects()->Data[ 109854 ];

	ATrSeekingMissileManager_execGetNumSaberLaunchersTargetingController_Parms GetNumSaberLaunchersTargetingController_Parms;
	GetNumSaberLaunchersTargetingController_Parms.Controller = Controller;
	GetNumSaberLaunchersTargetingController_Parms.bOnlyClientNotified = bOnlyClientNotified;

	this->ProcessEvent ( pFnGetNumSaberLaunchersTargetingController, &GetNumSaberLaunchersTargetingController_Parms, NULL );

	return GetNumSaberLaunchersTargetingController_Parms.ReturnValue;
};

// Function TribesGame.TrSeekingMissileManager.RemoveSaberLauncher
// [0x00020002] 
// Parameters infos:
// class ATrDevice_SaberLauncher* SaberLauncherToRemove          ( CPF_Parm )

void ATrSeekingMissileManager::RemoveSaberLauncher ( class ATrDevice_SaberLauncher* SaberLauncherToRemove )
{
	static UFunction* pFnRemoveSaberLauncher = NULL;

	if ( ! pFnRemoveSaberLauncher )
		pFnRemoveSaberLauncher = (UFunction*) UObject::GObjObjects()->Data[ 109847 ];

	ATrSeekingMissileManager_execRemoveSaberLauncher_Parms RemoveSaberLauncher_Parms;
	RemoveSaberLauncher_Parms.SaberLauncherToRemove = SaberLauncherToRemove;

	this->ProcessEvent ( pFnRemoveSaberLauncher, &RemoveSaberLauncher_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.AddSaberLauncher
// [0x00820002] 
// Parameters infos:
// class ATrDevice_SaberLauncher* SaberLauncherToAdd             ( CPF_Parm )
// unsigned char                  MissileLockValue               ( CPF_Parm )

void ATrSeekingMissileManager::AddSaberLauncher ( class ATrDevice_SaberLauncher* SaberLauncherToAdd, unsigned char MissileLockValue )
{
	static UFunction* pFnAddSaberLauncher = NULL;

	if ( ! pFnAddSaberLauncher )
		pFnAddSaberLauncher = (UFunction*) UObject::GObjObjects()->Data[ 109837 ];

	ATrSeekingMissileManager_execAddSaberLauncher_Parms AddSaberLauncher_Parms;
	AddSaberLauncher_Parms.SaberLauncherToAdd = SaberLauncherToAdd;
	AddSaberLauncher_Parms.MissileLockValue = MissileLockValue;

	this->ProcessEvent ( pFnAddSaberLauncher, &AddSaberLauncher_Parms, NULL );
};

// Function TribesGame.TrSeekingMissileManager.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrSeekingMissileManager::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 109827 ];

	ATrSeekingMissileManager_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrProj_TrackingMissile_MKD.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_TrackingMissile_MKD::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 108469 ];

	ATrProj_TrackingMissile_MKD_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrEffect_Shield.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_Shield::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86297 ];

	UTrEffect_Shield_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_Shield.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Shield::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86293 ];

	UTrEffect_Shield_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.SpawnExplosionEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_SpikeGrenade::SpawnExplosionEffects ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnSpawnExplosionEffects = NULL;

	if ( ! pFnSpawnExplosionEffects )
		pFnSpawnExplosionEffects = (UFunction*) UObject::GObjObjects()->Data[ 108146 ];

	ATrProj_SpikeGrenade_execSpawnExplosionEffects_Parms SpawnExplosionEffects_Parms;
	memcpy ( &SpawnExplosionEffects_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &SpawnExplosionEffects_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnSpawnExplosionEffects, &SpawnExplosionEffects_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.EndFractal
// [0x00020002] 
// Parameters infos:

void ATrProj_SpikeGrenade::EndFractal ( )
{
	static UFunction* pFnEndFractal = NULL;

	if ( ! pFnEndFractal )
		pFnEndFractal = (UFunction*) UObject::GObjObjects()->Data[ 108145 ];

	ATrProj_SpikeGrenade_execEndFractal_Parms EndFractal_Parms;

	this->ProcessEvent ( pFnEndFractal, &EndFractal_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.SpawnFractalExplosionEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 ShotLocation                   ( CPF_Parm )

void ATrProj_SpikeGrenade::SpawnFractalExplosionEffects ( struct FVector ShotLocation )
{
	static UFunction* pFnSpawnFractalExplosionEffects = NULL;

	if ( ! pFnSpawnFractalExplosionEffects )
		pFnSpawnFractalExplosionEffects = (UFunction*) UObject::GObjObjects()->Data[ 108142 ];

	ATrProj_SpikeGrenade_execSpawnFractalExplosionEffects_Parms SpawnFractalExplosionEffects_Parms;
	memcpy ( &SpawnFractalExplosionEffects_Parms.ShotLocation, &ShotLocation, 0xC );

	this->ProcessEvent ( pFnSpawnFractalExplosionEffects, &SpawnFractalExplosionEffects_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.ShootFractalShot
// [0x00820002] 
// Parameters infos:

void ATrProj_SpikeGrenade::ShootFractalShot ( )
{
	static UFunction* pFnShootFractalShot = NULL;

	if ( ! pFnShootFractalShot )
		pFnShootFractalShot = (UFunction*) UObject::GObjObjects()->Data[ 108138 ];

	ATrProj_SpikeGrenade_execShootFractalShot_Parms ShootFractalShot_Parms;

	this->ProcessEvent ( pFnShootFractalShot, &ShootFractalShot_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.StartFractalShots
// [0x00020002] 
// Parameters infos:

void ATrProj_SpikeGrenade::StartFractalShots ( )
{
	static UFunction* pFnStartFractalShots = NULL;

	if ( ! pFnStartFractalShots )
		pFnStartFractalShots = (UFunction*) UObject::GObjObjects()->Data[ 108137 ];

	ATrProj_SpikeGrenade_execStartFractalShots_Parms StartFractalShots_Parms;

	this->ProcessEvent ( pFnStartFractalShots, &StartFractalShots_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.IsFractalActive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrProj_SpikeGrenade::IsFractalActive ( )
{
	static UFunction* pFnIsFractalActive = NULL;

	if ( ! pFnIsFractalActive )
		pFnIsFractalActive = (UFunction*) UObject::GObjObjects()->Data[ 108135 ];

	ATrProj_SpikeGrenade_execIsFractalActive_Parms IsFractalActive_Parms;

	this->ProcessEvent ( pFnIsFractalActive, &IsFractalActive_Parms, NULL );

	return IsFractalActive_Parms.ReturnValue;
};

// Function TribesGame.TrProj_SpikeGrenade.ClientReceivedExplosionLocation
// [0x00020102] 
// Parameters infos:

void ATrProj_SpikeGrenade::ClientReceivedExplosionLocation ( )
{
	static UFunction* pFnClientReceivedExplosionLocation = NULL;

	if ( ! pFnClientReceivedExplosionLocation )
		pFnClientReceivedExplosionLocation = (UFunction*) UObject::GObjObjects()->Data[ 108134 ];

	ATrProj_SpikeGrenade_execClientReceivedExplosionLocation_Parms ClientReceivedExplosionLocation_Parms;

	this->ProcessEvent ( pFnClientReceivedExplosionLocation, &ClientReceivedExplosionLocation_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.Explode
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_SpikeGrenade::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 108129 ];

	ATrProj_SpikeGrenade_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.InitProjectile
// [0x00024102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )
// class UClass*                  ClassToInherit                 ( CPF_OptionalParm | CPF_Parm )

void ATrProj_SpikeGrenade::InitProjectile ( struct FVector Direction, class UClass* ClassToInherit )
{
	static UFunction* pFnInitProjectile = NULL;

	if ( ! pFnInitProjectile )
		pFnInitProjectile = (UFunction*) UObject::GObjObjects()->Data[ 108126 ];

	ATrProj_SpikeGrenade_execInitProjectile_Parms InitProjectile_Parms;
	memcpy ( &InitProjectile_Parms.Direction, &Direction, 0xC );
	InitProjectile_Parms.ClassToInherit = ClassToInherit;

	this->ProcessEvent ( pFnInitProjectile, &InitProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrProj_SpikeGrenade::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 108124 ];

	ATrProj_SpikeGrenade_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeGrenade.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ATrProj_SpikeGrenade::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 108122 ];

	ATrProj_SpikeGrenade_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeLauncher.SpawnSecondaryProjectile
// [0x00020102] 
// Parameters infos:
// struct FVector                 Direction                      ( CPF_Parm )

void ATrProj_SpikeLauncher::SpawnSecondaryProjectile ( struct FVector Direction )
{
	static UFunction* pFnSpawnSecondaryProjectile = NULL;

	if ( ! pFnSpawnSecondaryProjectile )
		pFnSpawnSecondaryProjectile = (UFunction*) UObject::GObjObjects()->Data[ 108200 ];

	ATrProj_SpikeLauncher_execSpawnSecondaryProjectile_Parms SpawnSecondaryProjectile_Parms;
	memcpy ( &SpawnSecondaryProjectile_Parms.Direction, &Direction, 0xC );

	this->ProcessEvent ( pFnSpawnSecondaryProjectile, &SpawnSecondaryProjectile_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeLauncher.Explode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_SpikeLauncher::Explode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnExplode = NULL;

	if ( ! pFnExplode )
		pFnExplode = (UFunction*) UObject::GObjObjects()->Data[ 108197 ];

	ATrProj_SpikeLauncher_execExplode_Parms Explode_Parms;
	memcpy ( &Explode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Explode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnExplode, &Explode_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeLauncher.ProcessTouch
// [0x00020102] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrProj_SpikeLauncher::ProcessTouch ( class AActor* Other, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnProcessTouch = NULL;

	if ( ! pFnProcessTouch )
		pFnProcessTouch = (UFunction*) UObject::GObjObjects()->Data[ 108193 ];

	ATrProj_SpikeLauncher_execProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy ( &ProcessTouch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ProcessTouch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnProcessTouch, &ProcessTouch_Parms, NULL );
};

// Function TribesGame.TrProj_SpikeLauncher.StickToTarget
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Target                         ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ATrProj_SpikeLauncher::StickToTarget ( class AActor* Target, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnStickToTarget = NULL;

	if ( ! pFnStickToTarget )
		pFnStickToTarget = (UFunction*) UObject::GObjObjects()->Data[ 108188 ];

	ATrProj_SpikeLauncher_execStickToTarget_Parms StickToTarget_Parms;
	StickToTarget_Parms.Target = Target;
	memcpy ( &StickToTarget_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &StickToTarget_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnStickToTarget, &StickToTarget_Parms, NULL );

	return StickToTarget_Parms.ReturnValue;
};

// Function TribesGame.TrProj_SpikeLauncher.PreBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_SpikeLauncher::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 108187 ];

	ATrProj_SpikeLauncher_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_Spinfusor_100X.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_Spinfusor_100X::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108233 ];

	ATrProj_Spinfusor_100X_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_SpinfusorD.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_SpinfusorD::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108239 ];

	ATrProj_SpinfusorD_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_StealthSpinfusor.SpawnFlightEffects
// [0x00020102] 
// Parameters infos:

void ATrProj_StealthSpinfusor::SpawnFlightEffects ( )
{
	static UFunction* pFnSpawnFlightEffects = NULL;

	if ( ! pFnSpawnFlightEffects )
		pFnSpawnFlightEffects = (UFunction*) UObject::GObjObjects()->Data[ 108251 ];

	ATrProj_StealthSpinfusor_execSpawnFlightEffects_Parms SpawnFlightEffects_Parms;

	this->ProcessEvent ( pFnSpawnFlightEffects, &SpawnFlightEffects_Parms, NULL );
};

// Function TribesGame.TrProj_TC24.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_TC24::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 108317 ];

	ATrProj_TC24_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_Thumper.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_Thumper::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 108362 ];

	ATrProj_Thumper_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_BeowulfGunner.Activate
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon_BeowulfGunner::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 114346 ];

	ATrVehicleWeapon_BeowulfGunner_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_BeowulfGunner.InitVehicleGun
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon_BeowulfGunner::InitVehicleGun ( )
{
	static UFunction* pFnInitVehicleGun = NULL;

	if ( ! pFnInitVehicleGun )
		pFnInitVehicleGun = (UFunction*) UObject::GObjObjects()->Data[ 114345 ];

	ATrVehicleWeapon_BeowulfGunner_execInitVehicleGun_Parms InitVehicleGun_Parms;

	this->ProcessEvent ( pFnInitVehicleGun, &InitVehicleGun_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_FullAuto.RefireCheckTimer
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon_FullAuto::RefireCheckTimer ( )
{
	static UFunction* pFnRefireCheckTimer = NULL;

	if ( ! pFnRefireCheckTimer )
		pFnRefireCheckTimer = (UFunction*) UObject::GObjObjects()->Data[ 114321 ];

	ATrVehicleWeapon_FullAuto_execRefireCheckTimer_Parms RefireCheckTimer_Parms;

	this->ProcessEvent ( pFnRefireCheckTimer, &RefireCheckTimer_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_HavocPilot.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrVehicleWeapon_HavocPilot::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 114409 ];

	ATrVehicleWeapon_HavocPilot_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_HavocPilot.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrVehicleWeapon_HavocPilot::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 114408 ];

	ATrVehicleWeapon_HavocPilot_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrVehicleWeapon_HavocPilot.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrVehicleWeapon_HavocPilot::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 114407 ];

	ATrVehicleWeapon_HavocPilot_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEffect_Blink.Apply
// [0x00024000] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Blink::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86196 ];

	UTrEffect_Blink_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_GroundSpeed.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_GroundSpeed::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86215 ];

	UTrEffect_GroundSpeed_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_GroundSpeed.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_GroundSpeed::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86211 ];

	UTrEffect_GroundSpeed_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEffect_Sensor.Remove
// [0x00020002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )

void UTrEffect_Sensor::Remove ( class AActor* Target )
{
	static UFunction* pFnRemove = NULL;

	if ( ! pFnRemove )
		pFnRemove = (UFunction*) UObject::GObjObjects()->Data[ 86289 ];

	UTrEffect_Sensor_execRemove_Parms Remove_Parms;
	Remove_Parms.Target = Target;

	this->ProcessEvent ( pFnRemove, &Remove_Parms, NULL );
};

// Function TribesGame.TrEffect_Sensor.Apply
// [0x00024002] 
// Parameters infos:
// class AActor*                  Target                         ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_OptionalParm | CPF_Parm )

void UTrEffect_Sensor::Apply ( class AActor* Target, struct FImpactInfo Impact )
{
	static UFunction* pFnApply = NULL;

	if ( ! pFnApply )
		pFnApply = (UFunction*) UObject::GObjObjects()->Data[ 86285 ];

	UTrEffect_Sensor_execApply_Parms Apply_Parms;
	Apply_Parms.Target = Target;
	memcpy ( &Apply_Parms.Impact, &Impact, 0x50 );

	this->ProcessEvent ( pFnApply, &Apply_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Ashes.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEmitCameraEffect_Ashes::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86346 ];

	ATrEmitCameraEffect_Ashes_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Leaves.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEmitCameraEffect_Leaves::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86350 ];

	ATrEmitCameraEffect_Leaves_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Rain.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEmitCameraEffect_Rain::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86354 ];

	ATrEmitCameraEffect_Rain_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrEmitCameraEffect_Tutorial.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrEmitCameraEffect_Tutorial::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 86361 ];

	ATrEmitCameraEffect_Tutorial_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.AddChildrenMeshes
// [0x00020002] 
// Parameters infos:
// class UTrMainMenuMeshInfo*     Parent                         ( CPF_Parm )

void ATrPaperDollMainMenu::AddChildrenMeshes ( class UTrMainMenuMeshInfo* Parent )
{
	static UFunction* pFnAddChildrenMeshes = NULL;

	if ( ! pFnAddChildrenMeshes )
		pFnAddChildrenMeshes = (UFunction*) UObject::GObjObjects()->Data[ 99580 ];

	ATrPaperDollMainMenu_execAddChildrenMeshes_Parms AddChildrenMeshes_Parms;
	AddChildrenMeshes_Parms.Parent = Parent;

	this->ProcessEvent ( pFnAddChildrenMeshes, &AddChildrenMeshes_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.EmptyChildrenMeshes
// [0x00020002] 
// Parameters infos:

void ATrPaperDollMainMenu::EmptyChildrenMeshes ( )
{
	static UFunction* pFnEmptyChildrenMeshes = NULL;

	if ( ! pFnEmptyChildrenMeshes )
		pFnEmptyChildrenMeshes = (UFunction*) UObject::GObjObjects()->Data[ 99578 ];

	ATrPaperDollMainMenu_execEmptyChildrenMeshes_Parms EmptyChildrenMeshes_Parms;

	this->ProcessEvent ( pFnEmptyChildrenMeshes, &EmptyChildrenMeshes_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.SetSpinning
// [0x00020002] 
// Parameters infos:
// unsigned long                  bShouldSpin                    ( CPF_Parm )
// unsigned long                  bReset                         ( CPF_Parm )

void ATrPaperDollMainMenu::SetSpinning ( unsigned long bShouldSpin, unsigned long bReset )
{
	static UFunction* pFnSetSpinning = NULL;

	if ( ! pFnSetSpinning )
		pFnSetSpinning = (UFunction*) UObject::GObjObjects()->Data[ 99575 ];

	ATrPaperDollMainMenu_execSetSpinning_Parms SetSpinning_Parms;
	SetSpinning_Parms.bShouldSpin = bShouldSpin;
	SetSpinning_Parms.bReset = bReset;

	this->ProcessEvent ( pFnSetSpinning, &SetSpinning_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.DetachAndDestroyMeshAttachments
// [0x00020002] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshComponent                  ( CPF_Parm | CPF_EditInline )

void ATrPaperDollMainMenu::DetachAndDestroyMeshAttachments ( class USkeletalMeshComponent* MeshComponent )
{
	static UFunction* pFnDetachAndDestroyMeshAttachments = NULL;

	if ( ! pFnDetachAndDestroyMeshAttachments )
		pFnDetachAndDestroyMeshAttachments = (UFunction*) UObject::GObjObjects()->Data[ 99572 ];

	ATrPaperDollMainMenu_execDetachAndDestroyMeshAttachments_Parms DetachAndDestroyMeshAttachments_Parms;
	DetachAndDestroyMeshAttachments_Parms.MeshComponent = MeshComponent;

	this->ProcessEvent ( pFnDetachAndDestroyMeshAttachments, &DetachAndDestroyMeshAttachments_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.CreateAndAttachParticleSystems
// [0x00020002] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshComponent                  ( CPF_Parm | CPF_EditInline )
// TArray< struct FParticleSystemInfo > ParticleSystems                ( CPF_Parm | CPF_NeedCtorLink )

void ATrPaperDollMainMenu::CreateAndAttachParticleSystems ( class USkeletalMeshComponent* MeshComponent, TArray< struct FParticleSystemInfo > ParticleSystems )
{
	static UFunction* pFnCreateAndAttachParticleSystems = NULL;

	if ( ! pFnCreateAndAttachParticleSystems )
		pFnCreateAndAttachParticleSystems = (UFunction*) UObject::GObjObjects()->Data[ 99566 ];

	ATrPaperDollMainMenu_execCreateAndAttachParticleSystems_Parms CreateAndAttachParticleSystems_Parms;
	CreateAndAttachParticleSystems_Parms.MeshComponent = MeshComponent;
	memcpy ( &CreateAndAttachParticleSystems_Parms.ParticleSystems, &ParticleSystems, 0xC );

	this->ProcessEvent ( pFnCreateAndAttachParticleSystems, &CreateAndAttachParticleSystems_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.SetMainMeshInfo
// [0x00020002] 
// Parameters infos:
// class UTrMainMenuMeshInfo*     NewMainMeshInfo                ( CPF_Parm )
// unsigned char                  ContentDataType                ( CPF_Parm )

void ATrPaperDollMainMenu::SetMainMeshInfo ( class UTrMainMenuMeshInfo* NewMainMeshInfo, unsigned char ContentDataType )
{
	static UFunction* pFnSetMainMeshInfo = NULL;

	if ( ! pFnSetMainMeshInfo )
		pFnSetMainMeshInfo = (UFunction*) UObject::GObjObjects()->Data[ 99563 ];

	ATrPaperDollMainMenu_execSetMainMeshInfo_Parms SetMainMeshInfo_Parms;
	SetMainMeshInfo_Parms.NewMainMeshInfo = NewMainMeshInfo;
	SetMainMeshInfo_Parms.ContentDataType = ContentDataType;

	this->ProcessEvent ( pFnSetMainMeshInfo, &SetMainMeshInfo_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.SetFamilyInfo
// [0x00020002] 
// Parameters infos:
// class UClass*                  NewFamilyInfoClass             ( CPF_Parm )
// class UClass*                  DeviceClass                    ( CPF_Parm )
// class UClass*                  skinClass                      ( CPF_Parm )
// int                            TeamNum                        ( CPF_Parm )

void ATrPaperDollMainMenu::SetFamilyInfo ( class UClass* NewFamilyInfoClass, class UClass* DeviceClass, class UClass* skinClass, int TeamNum )
{
	static UFunction* pFnSetFamilyInfo = NULL;

	if ( ! pFnSetFamilyInfo )
		pFnSetFamilyInfo = (UFunction*) UObject::GObjObjects()->Data[ 99558 ];

	ATrPaperDollMainMenu_execSetFamilyInfo_Parms SetFamilyInfo_Parms;
	SetFamilyInfo_Parms.NewFamilyInfoClass = NewFamilyInfoClass;
	SetFamilyInfo_Parms.DeviceClass = DeviceClass;
	SetFamilyInfo_Parms.skinClass = skinClass;
	SetFamilyInfo_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnSetFamilyInfo, &SetFamilyInfo_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.SetWeaponOnlyMesh
// [0x00020002] 
// Parameters infos:
// class UClass*                  WeaponClass                    ( CPF_Parm )

void ATrPaperDollMainMenu::SetWeaponOnlyMesh ( class UClass* WeaponClass )
{
	static UFunction* pFnSetWeaponOnlyMesh = NULL;

	if ( ! pFnSetWeaponOnlyMesh )
		pFnSetWeaponOnlyMesh = (UFunction*) UObject::GObjObjects()->Data[ 99556 ];

	ATrPaperDollMainMenu_execSetWeaponOnlyMesh_Parms SetWeaponOnlyMesh_Parms;
	SetWeaponOnlyMesh_Parms.WeaponClass = WeaponClass;

	this->ProcessEvent ( pFnSetWeaponOnlyMesh, &SetWeaponOnlyMesh_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.TryUpdatingPaperDoll
// [0x00020002] 
// Parameters infos:

void ATrPaperDollMainMenu::TryUpdatingPaperDoll ( )
{
	static UFunction* pFnTryUpdatingPaperDoll = NULL;

	if ( ! pFnTryUpdatingPaperDoll )
		pFnTryUpdatingPaperDoll = (UFunction*) UObject::GObjObjects()->Data[ 99555 ];

	ATrPaperDollMainMenu_execTryUpdatingPaperDoll_Parms TryUpdatingPaperDoll_Parms;

	this->ProcessEvent ( pFnTryUpdatingPaperDoll, &TryUpdatingPaperDoll_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.OnDeviceContentDataClassLoaded
// [0x00020002] 
// Parameters infos:
// class UClass*                  DeviceContentDataClass         ( CPF_Parm )

void ATrPaperDollMainMenu::OnDeviceContentDataClassLoaded ( class UClass* DeviceContentDataClass )
{
	static UFunction* pFnOnDeviceContentDataClassLoaded = NULL;

	if ( ! pFnOnDeviceContentDataClassLoaded )
		pFnOnDeviceContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 99553 ];

	ATrPaperDollMainMenu_execOnDeviceContentDataClassLoaded_Parms OnDeviceContentDataClassLoaded_Parms;
	OnDeviceContentDataClassLoaded_Parms.DeviceContentDataClass = DeviceContentDataClass;

	this->ProcessEvent ( pFnOnDeviceContentDataClassLoaded, &OnDeviceContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.OnCharacterMeshContentDataClassLoaded
// [0x00020002] 
// Parameters infos:
// class UClass*                  Skin3PDataClass                ( CPF_Parm )

void ATrPaperDollMainMenu::OnCharacterMeshContentDataClassLoaded ( class UClass* Skin3PDataClass )
{
	static UFunction* pFnOnCharacterMeshContentDataClassLoaded = NULL;

	if ( ! pFnOnCharacterMeshContentDataClassLoaded )
		pFnOnCharacterMeshContentDataClassLoaded = (UFunction*) UObject::GObjObjects()->Data[ 99551 ];

	ATrPaperDollMainMenu_execOnCharacterMeshContentDataClassLoaded_Parms OnCharacterMeshContentDataClassLoaded_Parms;
	OnCharacterMeshContentDataClassLoaded_Parms.Skin3PDataClass = Skin3PDataClass;

	this->ProcessEvent ( pFnOnCharacterMeshContentDataClassLoaded, &OnCharacterMeshContentDataClassLoaded_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.SetMainMesh
// [0x00020002] 
// Parameters infos:
// struct FPaperDollInfo          NewInfo                        ( CPF_Parm )

void ATrPaperDollMainMenu::SetMainMesh ( struct FPaperDollInfo NewInfo )
{
	static UFunction* pFnSetMainMesh = NULL;

	if ( ! pFnSetMainMesh )
		pFnSetMainMesh = (UFunction*) UObject::GObjObjects()->Data[ 99549 ];

	ATrPaperDollMainMenu_execSetMainMesh_Parms SetMainMesh_Parms;
	memcpy ( &SetMainMesh_Parms.NewInfo, &NewInfo, 0x38 );

	this->ProcessEvent ( pFnSetMainMesh, &SetMainMesh_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.GetDevicePaperDollInfo
// [0x00020002] 
// Parameters infos:
// struct FPaperDollInfo          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  WeaponClass                    ( CPF_Parm )

struct FPaperDollInfo ATrPaperDollMainMenu::GetDevicePaperDollInfo ( class UClass* WeaponClass )
{
	static UFunction* pFnGetDevicePaperDollInfo = NULL;

	if ( ! pFnGetDevicePaperDollInfo )
		pFnGetDevicePaperDollInfo = (UFunction*) UObject::GObjObjects()->Data[ 99546 ];

	ATrPaperDollMainMenu_execGetDevicePaperDollInfo_Parms GetDevicePaperDollInfo_Parms;
	GetDevicePaperDollInfo_Parms.WeaponClass = WeaponClass;

	this->ProcessEvent ( pFnGetDevicePaperDollInfo, &GetDevicePaperDollInfo_Parms, NULL );

	return GetDevicePaperDollInfo_Parms.ReturnValue;
};

// Function TribesGame.TrPaperDollMainMenu.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrPaperDollMainMenu::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 99544 ];

	ATrPaperDollMainMenu_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrPaperDollMainMenu.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrPaperDollMainMenu::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 99543 ];

	ATrPaperDollMainMenu_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrMainMenuContentData.PreloadTextures
// [0x00020002] 
// Parameters infos:
// float                          ForceDuration                  ( CPF_Parm )

void UTrMainMenuContentData::PreloadTextures ( float ForceDuration )
{
	static UFunction* pFnPreloadTextures = NULL;

	if ( ! pFnPreloadTextures )
		pFnPreloadTextures = (UFunction*) UObject::GObjObjects()->Data[ 97740 ];

	UTrMainMenuContentData_execPreloadTextures_Parms PreloadTextures_Parms;
	PreloadTextures_Parms.ForceDuration = ForceDuration;

	this->ProcessEvent ( pFnPreloadTextures, &PreloadTextures_Parms, NULL );
};

// Function TribesGame.TrMainMenuContentData.SendPaperDollANewMesh
// [0x00020002] 
// Parameters infos:
// class ATrPaperDollMainMenu*    MainMenuPaperDoll              ( CPF_Parm )
// unsigned char                  ContentDataType                ( CPF_Parm )

void UTrMainMenuContentData::SendPaperDollANewMesh ( class ATrPaperDollMainMenu* MainMenuPaperDoll, unsigned char ContentDataType )
{
	static UFunction* pFnSendPaperDollANewMesh = NULL;

	if ( ! pFnSendPaperDollANewMesh )
		pFnSendPaperDollANewMesh = (UFunction*) UObject::GObjObjects()->Data[ 97736 ];

	UTrMainMenuContentData_execSendPaperDollANewMesh_Parms SendPaperDollANewMesh_Parms;
	SendPaperDollANewMesh_Parms.MainMenuPaperDoll = MainMenuPaperDoll;
	SendPaperDollANewMesh_Parms.ContentDataType = ContentDataType;

	this->ProcessEvent ( pFnSendPaperDollANewMesh, &SendPaperDollANewMesh_Parms, NULL );
};

// Function TribesGame.TrExplosiveSpreeMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrExplosiveSpreeMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 86712 ];

	UTrExplosiveSpreeMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrExplosiveSpreeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrExplosiveSpreeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 86706 ];

	UTrExplosiveSpreeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrExplosiveSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrExplosiveSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 86699 ];

	UTrExplosiveSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrExplosiveSpreeMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UTrExplosiveSpreeMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 86691 ];

	UTrExplosiveSpreeMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle_Shrike.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ATrVehicle_Shrike::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 113950 ];

	ATrVehicle_Shrike_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function TribesGame.TrFirstBloodMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrFirstBloodMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 87478 ];

	UTrFirstBloodMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrFlagRabbit.BroadcastReturnedMessage
// [0x00020002] 
// Parameters infos:

void ATrFlagRabbit::BroadcastReturnedMessage ( )
{
	static UFunction* pFnBroadcastReturnedMessage = NULL;

	if ( ! pFnBroadcastReturnedMessage )
		pFnBroadcastReturnedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87718 ];

	ATrFlagRabbit_execBroadcastReturnedMessage_Parms BroadcastReturnedMessage_Parms;

	this->ProcessEvent ( pFnBroadcastReturnedMessage, &BroadcastReturnedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagRabbit.SendHome
// [0x00020002] 
// Parameters infos:
// class AController*             Returner                       ( CPF_Parm )

void ATrFlagRabbit::SendHome ( class AController* Returner )
{
	static UFunction* pFnSendHome = NULL;

	if ( ! pFnSendHome )
		pFnSendHome = (UFunction*) UObject::GObjObjects()->Data[ 87716 ];

	ATrFlagRabbit_execSendHome_Parms SendHome_Parms;
	SendHome_Parms.Returner = Returner;

	this->ProcessEvent ( pFnSendHome, &SendHome_Parms, NULL );
};

// Function TribesGame.TrFlagRabbit.ClearHolder
// [0x00020002] 
// Parameters infos:

void ATrFlagRabbit::ClearHolder ( )
{
	static UFunction* pFnClearHolder = NULL;

	if ( ! pFnClearHolder )
		pFnClearHolder = (UFunction*) UObject::GObjObjects()->Data[ 87715 ];

	ATrFlagRabbit_execClearHolder_Parms ClearHolder_Parms;

	this->ProcessEvent ( pFnClearHolder, &ClearHolder_Parms, NULL );
};

// Function TribesGame.TrFlagRabbit.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ATrFlagRabbit::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 87712 ];

	ATrFlagRabbit_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function TribesGame.TrFlagTeamRabbit.ClientReturnedHome
// [0x00020100] 
// Parameters infos:

void ATrFlagTeamRabbit::ClientReturnedHome ( )
{
	static UFunction* pFnClientReturnedHome = NULL;

	if ( ! pFnClientReturnedHome )
		pFnClientReturnedHome = (UFunction*) UObject::GObjObjects()->Data[ 87742 ];

	ATrFlagTeamRabbit_execClientReturnedHome_Parms ClientReturnedHome_Parms;

	this->ProcessEvent ( pFnClientReturnedHome, &ClientReturnedHome_Parms, NULL );
};

// Function TribesGame.TrFlagTeamRabbit.BroadcastReturnedMessage
// [0x00020002] 
// Parameters infos:

void ATrFlagTeamRabbit::BroadcastReturnedMessage ( )
{
	static UFunction* pFnBroadcastReturnedMessage = NULL;

	if ( ! pFnBroadcastReturnedMessage )
		pFnBroadcastReturnedMessage = (UFunction*) UObject::GObjObjects()->Data[ 87733 ];

	ATrFlagTeamRabbit_execBroadcastReturnedMessage_Parms BroadcastReturnedMessage_Parms;

	this->ProcessEvent ( pFnBroadcastReturnedMessage, &BroadcastReturnedMessage_Parms, NULL );
};

// Function TribesGame.TrFlagTeamRabbit.SendHome
// [0x00020002] 
// Parameters infos:
// class AController*             Returner                       ( CPF_Parm )

void ATrFlagTeamRabbit::SendHome ( class AController* Returner )
{
	static UFunction* pFnSendHome = NULL;

	if ( ! pFnSendHome )
		pFnSendHome = (UFunction*) UObject::GObjObjects()->Data[ 87731 ];

	ATrFlagTeamRabbit_execSendHome_Parms SendHome_Parms;
	SendHome_Parms.Returner = Returner;

	this->ProcessEvent ( pFnSendHome, &SendHome_Parms, NULL );
};

// Function TribesGame.TrFlagTeamRabbit.ClearHolder
// [0x00020002] 
// Parameters infos:

void ATrFlagTeamRabbit::ClearHolder ( )
{
	static UFunction* pFnClearHolder = NULL;

	if ( ! pFnClearHolder )
		pFnClearHolder = (UFunction*) UObject::GObjObjects()->Data[ 87730 ];

	ATrFlagTeamRabbit_execClearHolder_Parms ClearHolder_Parms;

	this->ProcessEvent ( pFnClearHolder, &ClearHolder_Parms, NULL );
};

// Function TribesGame.TrFlagTeamRabbit.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ATrFlagTeamRabbit::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 87728 ];

	ATrFlagTeamRabbit_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function TribesGame.TrMiscellaneousMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrMiscellaneousMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 99238 ];

	UTrMiscellaneousMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrMiscellaneousMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrMiscellaneousMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 99231 ];

	UTrMiscellaneousMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrKillingSpreeMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrKillingSpreeMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 97551 ];

	UTrKillingSpreeMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrKillingSpreeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrKillingSpreeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 97545 ];

	UTrKillingSpreeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrKillingSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrKillingSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 97538 ];

	UTrKillingSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrKillingSpreeMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UTrKillingSpreeMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 97530 ];

	UTrKillingSpreeMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTDM.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ATrGame_TRTDM::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 90058 ];

	ATrGame_TRTDM_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TRTDM.ScoreKill
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ATrGame_TRTDM::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 90054 ];

	ATrGame_TRTDM_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function TribesGame.TrVictoryMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrVictoryMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 114553 ];

	UTrVictoryMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrVictoryMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrVictoryMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 114545 ];

	UTrVictoryMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrGameStartMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrGameStartMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 94434 ];

	UTrGameStartMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrGameStartMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrGameStartMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 94427 ];

	UTrGameStartMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrGameNextRoundMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrGameNextRoundMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 90195 ];

	UTrGameNextRoundMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrGameNextRoundMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrGameNextRoundMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 90187 ];

	UTrGameNextRoundMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrHUDTeam.Timer
// [0x00020102] 
// Parameters infos:

void ATrHUDTeam::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 95680 ];

	ATrHUDTeam_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrGame_TrSiege::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 89965 ];

	ATrGame_TrSiege_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.SwapTeams
// [0x00020002] 
// Parameters infos:

void ATrGame_TrSiege::SwapTeams ( )
{
	static UFunction* pFnSwapTeams = NULL;

	if ( ! pFnSwapTeams )
		pFnSwapTeams = (UFunction*) UObject::GObjObjects()->Data[ 89959 ];

	ATrGame_TrSiege_execSwapTeams_Parms SwapTeams_Parms;

	this->ProcessEvent ( pFnSwapTeams, &SwapTeams_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.SetPhase
// [0x00020002] 
// Parameters infos:
// int                            PhaseNumber                    ( CPF_Parm )

void ATrGame_TrSiege::SetPhase ( int PhaseNumber )
{
	static UFunction* pFnSetPhase = NULL;

	if ( ! pFnSetPhase )
		pFnSetPhase = (UFunction*) UObject::GObjObjects()->Data[ 89956 ];

	ATrGame_TrSiege_execSetPhase_Parms SetPhase_Parms;
	SetPhase_Parms.PhaseNumber = PhaseNumber;

	this->ProcessEvent ( pFnSetPhase, &SetPhase_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.ResetGame
// [0x00020002] 
// Parameters infos:

void ATrGame_TrSiege::ResetGame ( )
{
	static UFunction* pFnResetGame = NULL;

	if ( ! pFnResetGame )
		pFnResetGame = (UFunction*) UObject::GObjObjects()->Data[ 89954 ];

	ATrGame_TrSiege_execResetGame_Parms ResetGame_Parms;

	this->ProcessEvent ( pFnResetGame, &ResetGame_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.RoundOneOver
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDestroyedCore                 ( CPF_Parm )

void ATrGame_TrSiege::RoundOneOver ( unsigned long bDestroyedCore )
{
	static UFunction* pFnRoundOneOver = NULL;

	if ( ! pFnRoundOneOver )
		pFnRoundOneOver = (UFunction*) UObject::GObjObjects()->Data[ 89949 ];

	ATrGame_TrSiege_execRoundOneOver_Parms RoundOneOver_Parms;
	RoundOneOver_Parms.bDestroyedCore = bDestroyedCore;

	this->ProcessEvent ( pFnRoundOneOver, &RoundOneOver_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.IsInRoundOne
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrGame_TrSiege::IsInRoundOne ( )
{
	static UFunction* pFnIsInRoundOne = NULL;

	if ( ! pFnIsInRoundOne )
		pFnIsInRoundOne = (UFunction*) UObject::GObjObjects()->Data[ 89947 ];

	ATrGame_TrSiege_execIsInRoundOne_Parms IsInRoundOne_Parms;

	this->ProcessEvent ( pFnIsInRoundOne, &IsInRoundOne_Parms, NULL );

	return IsInRoundOne_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrSiege.OnCoreBlownUp
// [0x00020002] 
// Parameters infos:

void ATrGame_TrSiege::OnCoreBlownUp ( )
{
	static UFunction* pFnOnCoreBlownUp = NULL;

	if ( ! pFnOnCoreBlownUp )
		pFnOnCoreBlownUp = (UFunction*) UObject::GObjObjects()->Data[ 89946 ];

	ATrGame_TrSiege_execOnCoreBlownUp_Parms OnCoreBlownUp_Parms;

	this->ProcessEvent ( pFnOnCoreBlownUp, &OnCoreBlownUp_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.OnGeneratorBlownUp
// [0x00020002] 
// Parameters infos:
// class ATrPowerGenerator_Siege* G                              ( CPF_Parm )

void ATrGame_TrSiege::OnGeneratorBlownUp ( class ATrPowerGenerator_Siege* G )
{
	static UFunction* pFnOnGeneratorBlownUp = NULL;

	if ( ! pFnOnGeneratorBlownUp )
		pFnOnGeneratorBlownUp = (UFunction*) UObject::GObjObjects()->Data[ 89944 ];

	ATrGame_TrSiege_execOnGeneratorBlownUp_Parms OnGeneratorBlownUp_Parms;
	OnGeneratorBlownUp_Parms.G = G;

	this->ProcessEvent ( pFnOnGeneratorBlownUp, &OnGeneratorBlownUp_Parms, NULL );
};

// Function TribesGame.TrGame_TrSiege.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrSiege::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89942 ];

	ATrGame_TrSiege_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.DetermineWinningTeam
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrGame_TrStorm::DetermineWinningTeam ( )
{
	static UFunction* pFnDetermineWinningTeam = NULL;

	if ( ! pFnDetermineWinningTeam )
		pFnDetermineWinningTeam = (UFunction*) UObject::GObjObjects()->Data[ 90049 ];

	ATrGame_TrStorm_execDetermineWinningTeam_Parms DetermineWinningTeam_Parms;

	this->ProcessEvent ( pFnDetermineWinningTeam, &DetermineWinningTeam_Parms, NULL );

	return DetermineWinningTeam_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrStorm.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void ATrGame_TrStorm::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 90046 ];

	ATrGame_TrStorm_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ATrGame_TrStorm::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 90040 ];

	ATrGame_TrStorm_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function TribesGame.TrGame_TrStorm.TakeDamageFromCore
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )
// int                            DamageAmount                   ( CPF_Parm )

void ATrGame_TrStorm::TakeDamageFromCore ( unsigned char TeamNum, int DamageAmount )
{
	static UFunction* pFnTakeDamageFromCore = NULL;

	if ( ! pFnTakeDamageFromCore )
		pFnTakeDamageFromCore = (UFunction*) UObject::GObjObjects()->Data[ 90020 ];

	ATrGame_TrStorm_execTakeDamageFromCore_Parms TakeDamageFromCore_Parms;
	TakeDamageFromCore_Parms.TeamNum = TeamNum;
	TakeDamageFromCore_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnTakeDamageFromCore, &TakeDamageFromCore_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.CarrierDestroyed
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )

void ATrGame_TrStorm::CarrierDestroyed ( unsigned char TeamNum )
{
	static UFunction* pFnCarrierDestroyed = NULL;

	if ( ! pFnCarrierDestroyed )
		pFnCarrierDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 90018 ];

	ATrGame_TrStorm_execCarrierDestroyed_Parms CarrierDestroyed_Parms;
	CarrierDestroyed_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnCarrierDestroyed, &CarrierDestroyed_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.TakeHealthDamage
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )
// int                            DamageAmount                   ( CPF_Parm )

void ATrGame_TrStorm::TakeHealthDamage ( unsigned char TeamNum, int DamageAmount )
{
	static UFunction* pFnTakeHealthDamage = NULL;

	if ( ! pFnTakeHealthDamage )
		pFnTakeHealthDamage = (UFunction*) UObject::GObjObjects()->Data[ 90014 ];

	ATrGame_TrStorm_execTakeHealthDamage_Parms TakeHealthDamage_Parms;
	TakeHealthDamage_Parms.TeamNum = TeamNum;
	TakeHealthDamage_Parms.DamageAmount = DamageAmount;

	this->ProcessEvent ( pFnTakeHealthDamage, &TakeHealthDamage_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.ExplodeMissile
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )

void ATrGame_TrStorm::ExplodeMissile ( unsigned char TeamNum )
{
	static UFunction* pFnExplodeMissile = NULL;

	if ( ! pFnExplodeMissile )
		pFnExplodeMissile = (UFunction*) UObject::GObjObjects()->Data[ 90005 ];

	ATrGame_TrStorm_execExplodeMissile_Parms ExplodeMissile_Parms;
	ExplodeMissile_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnExplodeMissile, &ExplodeMissile_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrGame_TrStorm::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 90002 ];

	ATrGame_TrStorm_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.MissileFired
// [0x00820002] 
// Parameters infos:
// class ATrStormControlPoint*    FiredFrom                      ( CPF_Parm )
// float                          TimeTillExplosion              ( CPF_Parm )
// unsigned char                  TargetTeam                     ( CPF_Parm )

void ATrGame_TrStorm::MissileFired ( class ATrStormControlPoint* FiredFrom, float TimeTillExplosion, unsigned char TargetTeam )
{
	static UFunction* pFnMissileFired = NULL;

	if ( ! pFnMissileFired )
		pFnMissileFired = (UFunction*) UObject::GObjObjects()->Data[ 89997 ];

	ATrGame_TrStorm_execMissileFired_Parms MissileFired_Parms;
	MissileFired_Parms.FiredFrom = FiredFrom;
	MissileFired_Parms.TimeTillExplosion = TimeTillExplosion;
	MissileFired_Parms.TargetTeam = TargetTeam;

	this->ProcessEvent ( pFnMissileFired, &MissileFired_Parms, NULL );
};

// Function TribesGame.TrGame_TrStorm.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ATrGame_TrStorm::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 89991 ];

	ATrGame_TrStorm_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrStormCore.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrStormCore::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 111895 ];

	ATrStormCore_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrStormCore.OnCoreDestroyed
// [0x00020002] 
// Parameters infos:

void ATrStormCore::OnCoreDestroyed ( )
{
	static UFunction* pFnOnCoreDestroyed = NULL;

	if ( ! pFnOnCoreDestroyed )
		pFnOnCoreDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 111894 ];

	ATrStormCore_execOnCoreDestroyed_Parms OnCoreDestroyed_Parms;

	this->ProcessEvent ( pFnOnCoreDestroyed, &OnCoreDestroyed_Parms, NULL );
};

// Function TribesGame.TrStormCore.GetShieldAmount
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrStormCore::GetShieldAmount ( )
{
	static UFunction* pFnGetShieldAmount = NULL;

	if ( ! pFnGetShieldAmount )
		pFnGetShieldAmount = (UFunction*) UObject::GObjObjects()->Data[ 111891 ];

	ATrStormCore_execGetShieldAmount_Parms GetShieldAmount_Parms;

	this->ProcessEvent ( pFnGetShieldAmount, &GetShieldAmount_Parms, NULL );

	return GetShieldAmount_Parms.ReturnValue;
};

// Function TribesGame.TrStormCore.GetHealthAmount
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ATrStormCore::GetHealthAmount ( )
{
	static UFunction* pFnGetHealthAmount = NULL;

	if ( ! pFnGetHealthAmount )
		pFnGetHealthAmount = (UFunction*) UObject::GObjObjects()->Data[ 111888 ];

	ATrStormCore_execGetHealthAmount_Parms GetHealthAmount_Parms;

	this->ProcessEvent ( pFnGetHealthAmount, &GetHealthAmount_Parms, NULL );

	return GetHealthAmount_Parms.ReturnValue;
};

// Function TribesGame.TrStormCore.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ATrStormCore::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 111876 ];

	ATrStormCore_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function TribesGame.TrStormCarrierShield.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrStormCarrierShield::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 111779 ];

	ATrStormCarrierShield_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrStormCarrierShield.OnShieldsDestroyed
// [0x00020002] 
// Parameters infos:

void ATrStormCarrierShield::OnShieldsDestroyed ( )
{
	static UFunction* pFnOnShieldsDestroyed = NULL;

	if ( ! pFnOnShieldsDestroyed )
		pFnOnShieldsDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 111778 ];

	ATrStormCarrierShield_execOnShieldsDestroyed_Parms OnShieldsDestroyed_Parms;

	this->ProcessEvent ( pFnOnShieldsDestroyed, &OnShieldsDestroyed_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.GetScreenName
// [0x00020102] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class APlayerController*       PC                             ( CPF_Parm )

struct FString ATrStormControlPoint::GetScreenName ( class APlayerController* PC )
{
	static UFunction* pFnGetScreenName = NULL;

	if ( ! pFnGetScreenName )
		pFnGetScreenName = (UFunction*) UObject::GObjObjects()->Data[ 111829 ];

	ATrStormControlPoint_execGetScreenName_Parms GetScreenName_Parms;
	GetScreenName_Parms.PC = PC;

	this->ProcessEvent ( pFnGetScreenName, &GetScreenName_Parms, NULL );

	return GetScreenName_Parms.ReturnValue;
};

// Function TribesGame.TrStormControlPoint.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrStormControlPoint::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 111818 ];

	ATrStormControlPoint_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.GetControlPointState
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ATrStormControlPoint::GetControlPointState ( )
{
	static UFunction* pFnGetControlPointState = NULL;

	if ( ! pFnGetControlPointState )
		pFnGetControlPointState = (UFunction*) UObject::GObjObjects()->Data[ 111803 ];

	ATrStormControlPoint_execGetControlPointState_Parms GetControlPointState_Parms;

	this->ProcessEvent ( pFnGetControlPointState, &GetControlPointState_Parms, NULL );

	return GetControlPointState_Parms.ReturnValue;
};

// Function TribesGame.TrStormControlPoint.SetControlPointState
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewControlPointState           ( CPF_Parm )

void ATrStormControlPoint::SetControlPointState ( unsigned char NewControlPointState )
{
	static UFunction* pFnSetControlPointState = NULL;

	if ( ! pFnSetControlPointState )
		pFnSetControlPointState = (UFunction*) UObject::GObjObjects()->Data[ 111813 ];

	ATrStormControlPoint_execSetControlPointState_Parms SetControlPointState_Parms;
	SetControlPointState_Parms.NewControlPointState = NewControlPointState;

	this->ProcessEvent ( pFnSetControlPointState, &SetControlPointState_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.BeginTransition
// [0x00020002] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )

void ATrStormControlPoint::BeginTransition ( unsigned char TeamNum )
{
	static UFunction* pFnBeginTransition = NULL;

	if ( ! pFnBeginTransition )
		pFnBeginTransition = (UFunction*) UObject::GObjObjects()->Data[ 111810 ];

	ATrStormControlPoint_execBeginTransition_Parms BeginTransition_Parms;
	BeginTransition_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnBeginTransition, &BeginTransition_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.FireMissile
// [0x00020102] 
// Parameters infos:
// unsigned char                  TeamNum                        ( CPF_Parm )

void ATrStormControlPoint::FireMissile ( unsigned char TeamNum )
{
	static UFunction* pFnFireMissile = NULL;

	if ( ! pFnFireMissile )
		pFnFireMissile = (UFunction*) UObject::GObjObjects()->Data[ 111807 ];

	ATrStormControlPoint_execFireMissile_Parms FireMissile_Parms;
	FireMissile_Parms.TeamNum = TeamNum;

	this->ProcessEvent ( pFnFireMissile, &FireMissile_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrStormControlPoint::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 111805 ];

	ATrStormControlPoint_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrStormControlPoint.OnPawnTouched
// [0x00020002] 
// Parameters infos:
// class ATrPawn*                 TRP                            ( CPF_Parm )

void ATrStormControlPoint::OnPawnTouched ( class ATrPawn* TRP )
{
	static UFunction* pFnOnPawnTouched = NULL;

	if ( ! pFnOnPawnTouched )
		pFnOnPawnTouched = (UFunction*) UObject::GObjObjects()->Data[ 111800 ];

	ATrStormControlPoint_execOnPawnTouched_Parms OnPawnTouched_Parms;
	OnPawnTouched_Parms.TRP = TRP;

	this->ProcessEvent ( pFnOnPawnTouched, &OnPawnTouched_Parms, NULL );
};

// Function TribesGame.TrStormMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrStormMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 111957 ];

	UTrStormMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrTeamRabbitMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrTeamRabbitMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 112175 ];

	UTrTeamRabbitMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrTeamRabbitMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 112168 ];

	UTrTeamRabbitMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrTimerMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrTimerMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 112274 ];

	UTrTimerMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrTimerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrTimerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 112267 ];

	UTrTimerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrGeneratorMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrGeneratorMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 94464 ];

	UTrGeneratorMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrGeneratorMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrGeneratorMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 94457 ];

	UTrGeneratorMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager_Training.UpdateHUD
// [0x00020002] 
// Parameters infos:

void ATrHelpTextManager_Training::UpdateHUD ( )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 94497 ];

	ATrHelpTextManager_Training_execUpdateHUD_Parms UpdateHUD_Parms;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager_Training.RequestHelpText_Training
// [0x00020002] 
// Parameters infos:
// unsigned char                  RequestedType                  ( CPF_Parm )

void ATrHelpTextManager_Training::RequestHelpText_Training ( unsigned char RequestedType )
{
	static UFunction* pFnRequestHelpText_Training = NULL;

	if ( ! pFnRequestHelpText_Training )
		pFnRequestHelpText_Training = (UFunction*) UObject::GObjObjects()->Data[ 94494 ];

	ATrHelpTextManager_Training_execRequestHelpText_Training_Parms RequestHelpText_Training_Parms;
	RequestHelpText_Training_Parms.RequestedType = RequestedType;

	this->ProcessEvent ( pFnRequestHelpText_Training, &RequestHelpText_Training_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager_Training.RemoveHelpText
// [0x00024000] 
// Parameters infos:
// unsigned char                  TypeToRemove                   ( CPF_Parm )
// float                          Time                           ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoNotSuppress                 ( CPF_OptionalParm | CPF_Parm )

void ATrHelpTextManager_Training::RemoveHelpText ( unsigned char TypeToRemove, float Time, unsigned long bDoNotSuppress )
{
	static UFunction* pFnRemoveHelpText = NULL;

	if ( ! pFnRemoveHelpText )
		pFnRemoveHelpText = (UFunction*) UObject::GObjObjects()->Data[ 94490 ];

	ATrHelpTextManager_Training_execRemoveHelpText_Parms RemoveHelpText_Parms;
	RemoveHelpText_Parms.TypeToRemove = TypeToRemove;
	RemoveHelpText_Parms.Time = Time;
	RemoveHelpText_Parms.bDoNotSuppress = bDoNotSuppress;

	this->ProcessEvent ( pFnRemoveHelpText, &RemoveHelpText_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager_Training.RequestHelpText
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  RequestedType                  ( CPF_Parm )

bool ATrHelpTextManager_Training::RequestHelpText ( unsigned char RequestedType )
{
	static UFunction* pFnRequestHelpText = NULL;

	if ( ! pFnRequestHelpText )
		pFnRequestHelpText = (UFunction*) UObject::GObjObjects()->Data[ 94487 ];

	ATrHelpTextManager_Training_execRequestHelpText_Parms RequestHelpText_Parms;
	RequestHelpText_Parms.RequestedType = RequestedType;

	this->ProcessEvent ( pFnRequestHelpText, &RequestHelpText_Parms, NULL );

	return RequestHelpText_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager_Training.CheckDestroy
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ATrHelpTextManager_Training::CheckDestroy ( )
{
	static UFunction* pFnCheckDestroy = NULL;

	if ( ! pFnCheckDestroy )
		pFnCheckDestroy = (UFunction*) UObject::GObjObjects()->Data[ 94485 ];

	ATrHelpTextManager_Training_execCheckDestroy_Parms CheckDestroy_Parms;

	this->ProcessEvent ( pFnCheckDestroy, &CheckDestroy_Parms, NULL );

	return CheckDestroy_Parms.ReturnValue;
};

// Function TribesGame.TrHelpTextManager_Training.UpdateTypesToRemoveOnTimers
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrHelpTextManager_Training::UpdateTypesToRemoveOnTimers ( float DeltaTime )
{
	static UFunction* pFnUpdateTypesToRemoveOnTimers = NULL;

	if ( ! pFnUpdateTypesToRemoveOnTimers )
		pFnUpdateTypesToRemoveOnTimers = (UFunction*) UObject::GObjObjects()->Data[ 94483 ];

	ATrHelpTextManager_Training_execUpdateTypesToRemoveOnTimers_Parms UpdateTypesToRemoveOnTimers_Parms;
	UpdateTypesToRemoveOnTimers_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateTypesToRemoveOnTimers, &UpdateTypesToRemoveOnTimers_Parms, NULL );
};

// Function TribesGame.TrHelpTextManager_Training.InitHelpTextManager
// [0x00020000] 
// Parameters infos:

void ATrHelpTextManager_Training::InitHelpTextManager ( )
{
	static UFunction* pFnInitHelpTextManager = NULL;

	if ( ! pFnInitHelpTextManager )
		pFnInitHelpTextManager = (UFunction*) UObject::GObjObjects()->Data[ 94482 ];

	ATrHelpTextManager_Training_execInitHelpTextManager_Parms InitHelpTextManager_Parms;

	this->ProcessEvent ( pFnInitHelpTextManager, &InitHelpTextManager_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrTeamRabbitStats::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 112211 ];

	UTrTeamRabbitStats_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrTeamRabbitStats::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 112205 ];

	UTrTeamRabbitStats_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrTeamRabbitStats.UpdateTime
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrTeamRabbitStats::UpdateTime ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 112203 ];

	UTrTeamRabbitStats_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.UpdateTeamScore
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrTeamRabbitStats::UpdateTeamScore ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTeamScore = NULL;

	if ( ! pFnUpdateTeamScore )
		pFnUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 112200 ];

	UTrTeamRabbitStats_execUpdateTeamScore_Parms UpdateTeamScore_Parms;
	UpdateTeamScore_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTeamScore, &UpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.UpdateFlagStatus
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrTeamRabbitStats::UpdateFlagStatus ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateFlagStatus = NULL;

	if ( ! pFnUpdateFlagStatus )
		pFnUpdateFlagStatus = (UFunction*) UObject::GObjObjects()->Data[ 112198 ];

	UTrTeamRabbitStats_execUpdateFlagStatus_Parms UpdateFlagStatus_Parms;
	UpdateFlagStatus_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateFlagStatus, &UpdateFlagStatus_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.UpdateTeam
// [0x00020002] 
// Parameters infos:

void UTrTeamRabbitStats::UpdateTeam ( )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 112197 ];

	UTrTeamRabbitStats_execUpdateTeam_Parms UpdateTeam_Parms;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.Tick
// [0x00020002] 
// Parameters infos:

void UTrTeamRabbitStats::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 112195 ];

	UTrTeamRabbitStats_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.Hide
// [0x00020002] 
// Parameters infos:

void UTrTeamRabbitStats::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 112194 ];

	UTrTeamRabbitStats_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.Show
// [0x00020002] 
// Parameters infos:

void UTrTeamRabbitStats::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 112193 ];

	UTrTeamRabbitStats_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrTeamRabbitStats.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrTeamRabbitStats::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 112190 ];

	UTrTeamRabbitStats_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrHUDTeamCTFStats::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 95725 ];

	UTrHUDTeamCTFStats_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrHUDTeamCTFStats::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 95719 ];

	UTrHUDTeamCTFStats_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrHUDTeamCTFStats.UpdateTime
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrHUDTeamCTFStats::UpdateTime ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 95717 ];

	UTrHUDTeamCTFStats_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.UpdateTeamScore
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrHUDTeamCTFStats::UpdateTeamScore ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTeamScore = NULL;

	if ( ! pFnUpdateTeamScore )
		pFnUpdateTeamScore = (UFunction*) UObject::GObjObjects()->Data[ 95713 ];

	UTrHUDTeamCTFStats_execUpdateTeamScore_Parms UpdateTeamScore_Parms;
	UpdateTeamScore_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTeamScore, &UpdateTeamScore_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.UpdateGeneratorStatus
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrHUDTeamCTFStats::UpdateGeneratorStatus ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateGeneratorStatus = NULL;

	if ( ! pFnUpdateGeneratorStatus )
		pFnUpdateGeneratorStatus = (UFunction*) UObject::GObjObjects()->Data[ 95709 ];

	UTrHUDTeamCTFStats_execUpdateGeneratorStatus_Parms UpdateGeneratorStatus_Parms;
	UpdateGeneratorStatus_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateGeneratorStatus, &UpdateGeneratorStatus_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.UpdateFlagStatus
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrHUDTeamCTFStats::UpdateFlagStatus ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateFlagStatus = NULL;

	if ( ! pFnUpdateFlagStatus )
		pFnUpdateFlagStatus = (UFunction*) UObject::GObjObjects()->Data[ 95705 ];

	UTrHUDTeamCTFStats_execUpdateFlagStatus_Parms UpdateFlagStatus_Parms;
	UpdateFlagStatus_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateFlagStatus, &UpdateFlagStatus_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.GetTeamIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            I                              ( CPF_Parm )

int UTrHUDTeamCTFStats::GetTeamIndex ( int I )
{
	static UFunction* pFnGetTeamIndex = NULL;

	if ( ! pFnGetTeamIndex )
		pFnGetTeamIndex = (UFunction*) UObject::GObjObjects()->Data[ 95702 ];

	UTrHUDTeamCTFStats_execGetTeamIndex_Parms GetTeamIndex_Parms;
	GetTeamIndex_Parms.I = I;

	this->ProcessEvent ( pFnGetTeamIndex, &GetTeamIndex_Parms, NULL );

	return GetTeamIndex_Parms.ReturnValue;
};

// Function TribesGame.TrHUDTeamCTFStats.UpdateTeam
// [0x00020002] 
// Parameters infos:

void UTrHUDTeamCTFStats::UpdateTeam ( )
{
	static UFunction* pFnUpdateTeam = NULL;

	if ( ! pFnUpdateTeam )
		pFnUpdateTeam = (UFunction*) UObject::GObjObjects()->Data[ 95701 ];

	UTrHUDTeamCTFStats_execUpdateTeam_Parms UpdateTeam_Parms;

	this->ProcessEvent ( pFnUpdateTeam, &UpdateTeam_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.Tick
// [0x00020002] 
// Parameters infos:

void UTrHUDTeamCTFStats::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 95699 ];

	UTrHUDTeamCTFStats_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.Hide
// [0x00020002] 
// Parameters infos:

void UTrHUDTeamCTFStats::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 95698 ];

	UTrHUDTeamCTFStats_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.Show
// [0x00020002] 
// Parameters infos:

void UTrHUDTeamCTFStats::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 95697 ];

	UTrHUDTeamCTFStats_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrHUDTeamCTFStats.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrHUDTeamCTFStats::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 95694 ];

	UTrHUDTeamCTFStats_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.ForceUpdate
// [0x00020002] 
// Parameters infos:

void UTrRabbitLeaderboard::ForceUpdate ( )
{
	static UFunction* pFnForceUpdate = NULL;

	if ( ! pFnForceUpdate )
		pFnForceUpdate = (UFunction*) UObject::GObjObjects()->Data[ 108863 ];

	UTrRabbitLeaderboard_execForceUpdate_Parms ForceUpdate_Parms;

	this->ProcessEvent ( pFnForceUpdate, &ForceUpdate_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrRabbitLeaderboard::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 108857 ];

	UTrRabbitLeaderboard_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitLeaderboard.UpdateTime
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrRabbitLeaderboard::UpdateTime ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateTime = NULL;

	if ( ! pFnUpdateTime )
		pFnUpdateTime = (UFunction*) UObject::GObjObjects()->Data[ 108855 ];

	UTrRabbitLeaderboard_execUpdateTime_Parms UpdateTime_Parms;
	UpdateTime_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateTime, &UpdateTime_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.UpdateLeaderboard
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )
// struct FName                   PRIName                        ( CPF_Parm )
// struct FString                 PlayerName                     ( CPF_Parm | CPF_NeedCtorLink )
// int                            Score                          ( CPF_Parm )

bool UTrRabbitLeaderboard::UpdateLeaderboard ( int Index, struct FName PRIName, struct FString PlayerName, int Score )
{
	static UFunction* pFnUpdateLeaderboard = NULL;

	if ( ! pFnUpdateLeaderboard )
		pFnUpdateLeaderboard = (UFunction*) UObject::GObjObjects()->Data[ 108848 ];

	UTrRabbitLeaderboard_execUpdateLeaderboard_Parms UpdateLeaderboard_Parms;
	UpdateLeaderboard_Parms.Index = Index;
	memcpy ( &UpdateLeaderboard_Parms.PRIName, &PRIName, 0x8 );
	memcpy ( &UpdateLeaderboard_Parms.PlayerName, &PlayerName, 0xC );
	UpdateLeaderboard_Parms.Score = Score;

	this->ProcessEvent ( pFnUpdateLeaderboard, &UpdateLeaderboard_Parms, NULL );

	return UpdateLeaderboard_Parms.ReturnValue;
};

// Function TribesGame.TrRabbitLeaderboard.UpdatePlayers
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrRabbitLeaderboard::UpdatePlayers ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdatePlayers = NULL;

	if ( ! pFnUpdatePlayers )
		pFnUpdatePlayers = (UFunction*) UObject::GObjObjects()->Data[ 108844 ];

	UTrRabbitLeaderboard_execUpdatePlayers_Parms UpdatePlayers_Parms;
	UpdatePlayers_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdatePlayers, &UpdatePlayers_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.Tick
// [0x00020002] 
// Parameters infos:

void UTrRabbitLeaderboard::Tick ( )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 108842 ];

	UTrRabbitLeaderboard_execTick_Parms Tick_Parms;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.Hide
// [0x00020002] 
// Parameters infos:

void UTrRabbitLeaderboard::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 108841 ];

	UTrRabbitLeaderboard_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.Show
// [0x00020002] 
// Parameters infos:

void UTrRabbitLeaderboard::Show ( )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 108840 ];

	UTrRabbitLeaderboard_execShow_Parms Show_Parms;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrRabbitLeaderboard.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrRabbitLeaderboard::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 108837 ];

	UTrRabbitLeaderboard_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrScoreboard.IsValidScoreboardPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* PRI                            ( CPF_Parm )

bool UTrScoreboard::IsValidScoreboardPlayer ( class ATrPlayerReplicationInfo* PRI )
{
	static UFunction* pFnIsValidScoreboardPlayer = NULL;

	if ( ! pFnIsValidScoreboardPlayer )
		pFnIsValidScoreboardPlayer = (UFunction*) UObject::GObjObjects()->Data[ 109821 ];

	UTrScoreboard_execIsValidScoreboardPlayer_Parms IsValidScoreboardPlayer_Parms;
	IsValidScoreboardPlayer_Parms.PRI = PRI;

	this->ProcessEvent ( pFnIsValidScoreboardPlayer, &IsValidScoreboardPlayer_Parms, NULL );

	return IsValidScoreboardPlayer_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.UpdateHeaders
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  GRI                            ( CPF_Parm )

void UTrScoreboard::UpdateHeaders ( class ATrGameReplicationInfo* GRI )
{
	static UFunction* pFnUpdateHeaders = NULL;

	if ( ! pFnUpdateHeaders )
		pFnUpdateHeaders = (UFunction*) UObject::GObjObjects()->Data[ 109817 ];

	UTrScoreboard_execUpdateHeaders_Parms UpdateHeaders_Parms;
	UpdateHeaders_Parms.GRI = GRI;

	this->ProcessEvent ( pFnUpdateHeaders, &UpdateHeaders_Parms, NULL );
};

// Function TribesGame.TrScoreboard.FormatTime
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Seconds                        ( CPF_Parm )

struct FString UTrScoreboard::FormatTime ( int Seconds )
{
	static UFunction* pFnFormatTime = NULL;

	if ( ! pFnFormatTime )
		pFnFormatTime = (UFunction*) UObject::GObjObjects()->Data[ 109811 ];

	UTrScoreboard_execFormatTime_Parms FormatTime_Parms;
	FormatTime_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnFormatTime, &FormatTime_Parms, NULL );

	return FormatTime_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.UpdateSlot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )
// class ATrPlayerReplicationInfo* PRI                            ( CPF_Parm )

bool UTrScoreboard::UpdateSlot ( int Index, class ATrPlayerReplicationInfo* PRI )
{
	static UFunction* pFnUpdateSlot = NULL;

	if ( ! pFnUpdateSlot )
		pFnUpdateSlot = (UFunction*) UObject::GObjObjects()->Data[ 109807 ];

	UTrScoreboard_execUpdateSlot_Parms UpdateSlot_Parms;
	UpdateSlot_Parms.Index = Index;
	UpdateSlot_Parms.PRI = PRI;

	this->ProcessEvent ( pFnUpdateSlot, &UpdateSlot_Parms, NULL );

	return UpdateSlot_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.ClearSlot
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Index                          ( CPF_Parm )

bool UTrScoreboard::ClearSlot ( int Index )
{
	static UFunction* pFnClearSlot = NULL;

	if ( ! pFnClearSlot )
		pFnClearSlot = (UFunction*) UObject::GObjObjects()->Data[ 109804 ];

	UTrScoreboard_execClearSlot_Parms ClearSlot_Parms;
	ClearSlot_Parms.Index = Index;

	this->ProcessEvent ( pFnClearSlot, &ClearSlot_Parms, NULL );

	return ClearSlot_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.CreditsSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* A                              ( CPF_Parm )
// class ATrPlayerReplicationInfo* B                              ( CPF_Parm )

int UTrScoreboard::CreditsSort ( class ATrPlayerReplicationInfo* A, class ATrPlayerReplicationInfo* B )
{
	static UFunction* pFnCreditsSort = NULL;

	if ( ! pFnCreditsSort )
		pFnCreditsSort = (UFunction*) UObject::GObjObjects()->Data[ 109726 ];

	UTrScoreboard_execCreditsSort_Parms CreditsSort_Parms;
	CreditsSort_Parms.A = A;
	CreditsSort_Parms.B = B;

	this->ProcessEvent ( pFnCreditsSort, &CreditsSort_Parms, NULL );

	return CreditsSort_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.AssistsSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* A                              ( CPF_Parm )
// class ATrPlayerReplicationInfo* B                              ( CPF_Parm )

int UTrScoreboard::AssistsSort ( class ATrPlayerReplicationInfo* A, class ATrPlayerReplicationInfo* B )
{
	static UFunction* pFnAssistsSort = NULL;

	if ( ! pFnAssistsSort )
		pFnAssistsSort = (UFunction*) UObject::GObjObjects()->Data[ 109728 ];

	UTrScoreboard_execAssistsSort_Parms AssistsSort_Parms;
	AssistsSort_Parms.A = A;
	AssistsSort_Parms.B = B;

	this->ProcessEvent ( pFnAssistsSort, &AssistsSort_Parms, NULL );

	return AssistsSort_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.KillsSort
// [0x00120002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPlayerReplicationInfo* A                              ( CPF_Parm )
// class ATrPlayerReplicationInfo* B                              ( CPF_Parm )

int UTrScoreboard::KillsSort ( class ATrPlayerReplicationInfo* A, class ATrPlayerReplicationInfo* B )
{
	static UFunction* pFnKillsSort = NULL;

	if ( ! pFnKillsSort )
		pFnKillsSort = (UFunction*) UObject::GObjObjects()->Data[ 109730 ];

	UTrScoreboard_execKillsSort_Parms KillsSort_Parms;
	KillsSort_Parms.A = A;
	KillsSort_Parms.B = B;

	this->ProcessEvent ( pFnKillsSort, &KillsSort_Parms, NULL );

	return KillsSort_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.GetRank
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// TArray< class APlayerReplicationInfo* > PRIArray                       ( CPF_Parm | CPF_NeedCtorLink )

int UTrScoreboard::GetRank ( TArray< class APlayerReplicationInfo* > PRIArray )
{
	static UFunction* pFnGetRank = NULL;

	if ( ! pFnGetRank )
		pFnGetRank = (UFunction*) UObject::GObjObjects()->Data[ 109790 ];

	UTrScoreboard_execGetRank_Parms GetRank_Parms;
	memcpy ( &GetRank_Parms.PRIArray, &PRIArray, 0xC );

	this->ProcessEvent ( pFnGetRank, &GetRank_Parms, NULL );

	return GetRank_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.GetBestSortArray
// [0x00020002] 
// Parameters infos:
// TArray< class APlayerReplicationInfo* > ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// TArray< class APlayerReplicationInfo* > PRIArray                       ( CPF_Parm | CPF_NeedCtorLink )

TArray< class APlayerReplicationInfo* > UTrScoreboard::GetBestSortArray ( TArray< class APlayerReplicationInfo* > PRIArray )
{
	static UFunction* pFnGetBestSortArray = NULL;

	if ( ! pFnGetBestSortArray )
		pFnGetBestSortArray = (UFunction*) UObject::GObjObjects()->Data[ 109779 ];

	UTrScoreboard_execGetBestSortArray_Parms GetBestSortArray_Parms;
	memcpy ( &GetBestSortArray_Parms.PRIArray, &PRIArray, 0xC );

	this->ProcessEvent ( pFnGetBestSortArray, &GetBestSortArray_Parms, NULL );

	return GetBestSortArray_Parms.ReturnValue;
};

// Function TribesGame.TrScoreboard.UpdatePRILists
// [0x00020002] 
// Parameters infos:
// class ATrGameReplicationInfo*  TrGRI                          ( CPF_Parm )

void UTrScoreboard::UpdatePRILists ( class ATrGameReplicationInfo* TrGRI )
{
	static UFunction* pFnUpdatePRILists = NULL;

	if ( ! pFnUpdatePRILists )
		pFnUpdatePRILists = (UFunction*) UObject::GObjObjects()->Data[ 109771 ];

	UTrScoreboard_execUpdatePRILists_Parms UpdatePRILists_Parms;
	UpdatePRILists_Parms.TrGRI = TrGRI;

	this->ProcessEvent ( pFnUpdatePRILists, &UpdatePRILists_Parms, NULL );
};

// Function TribesGame.TrScoreboard.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void UTrScoreboard::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 109768 ];

	UTrScoreboard_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrScoreboard.ConfigScoreboard
// [0x00020002] 
// Parameters infos:

void UTrScoreboard::ConfigScoreboard ( )
{
	static UFunction* pFnConfigScoreboard = NULL;

	if ( ! pFnConfigScoreboard )
		pFnConfigScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 109766 ];

	UTrScoreboard_execConfigScoreboard_Parms ConfigScoreboard_Parms;

	this->ProcessEvent ( pFnConfigScoreboard, &ConfigScoreboard_Parms, NULL );
};

// Function TribesGame.TrScoreboard.Hide
// [0x00020002] 
// Parameters infos:

void UTrScoreboard::Hide ( )
{
	static UFunction* pFnHide = NULL;

	if ( ! pFnHide )
		pFnHide = (UFunction*) UObject::GObjObjects()->Data[ 109765 ];

	UTrScoreboard_execHide_Parms Hide_Parms;

	this->ProcessEvent ( pFnHide, &Hide_Parms, NULL );
};

// Function TribesGame.TrScoreboard.Show
// [0x00020002] 
// Parameters infos:
// unsigned long                  bIsTeamGame                    ( CPF_Parm )

void UTrScoreboard::Show ( unsigned long bIsTeamGame )
{
	static UFunction* pFnShow = NULL;

	if ( ! pFnShow )
		pFnShow = (UFunction*) UObject::GObjObjects()->Data[ 109763 ];

	UTrScoreboard_execShow_Parms Show_Parms;
	Show_Parms.bIsTeamGame = bIsTeamGame;

	this->ProcessEvent ( pFnShow, &Show_Parms, NULL );
};

// Function TribesGame.TrScoreboard.Initialize
// [0x00020002] 
// Parameters infos:
// class ATrPlayerController*     PC                             ( CPF_Parm )
// class UGfxTrHud*               MP                             ( CPF_Parm )

void UTrScoreboard::Initialize ( class ATrPlayerController* PC, class UGfxTrHud* MP )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 109760 ];

	UTrScoreboard_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.PC = PC;
	Initialize_Parms.MP = MP;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );
};

// Function TribesGame.TrInventory.DropFrom
// [0x00820002] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void ATrInventory::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 95730 ];

	ATrInventory_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );
};

// Function TribesGame.TrStationCollision.CheckCanPawnUseStationNow
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPawn*                 P                              ( CPF_Parm )

bool ATrStationCollision::CheckCanPawnUseStationNow ( class ATrPawn* P )
{
	static UFunction* pFnCheckCanPawnUseStationNow = NULL;

	if ( ! pFnCheckCanPawnUseStationNow )
		pFnCheckCanPawnUseStationNow = (UFunction*) UObject::GObjObjects()->Data[ 97386 ];

	ATrStationCollision_execCheckCanPawnUseStationNow_Parms CheckCanPawnUseStationNow_Parms;
	CheckCanPawnUseStationNow_Parms.P = P;

	this->ProcessEvent ( pFnCheckCanPawnUseStationNow, &CheckCanPawnUseStationNow_Parms, NULL );

	return CheckCanPawnUseStationNow_Parms.ReturnValue;
};

// Function TribesGame.TrStationCollision.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrStationCollision::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 97382 ];

	ATrStationCollision_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function TribesGame.TrStationCollision.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrStationCollision::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 97372 ];

	ATrStationCollision_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrStationCollision.GetPawnsInStation
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrStationCollision::GetPawnsInStation ( )
{
	static UFunction* pFnGetPawnsInStation = NULL;

	if ( ! pFnGetPawnsInStation )
		pFnGetPawnsInStation = (UFunction*) UObject::GObjObjects()->Data[ 97370 ];

	ATrStationCollision_execGetPawnsInStation_Parms GetPawnsInStation_Parms;

	this->ProcessEvent ( pFnGetPawnsInStation, &GetPawnsInStation_Parms, NULL );

	return GetPawnsInStation_Parms.ReturnValue;
};

// Function TribesGame.TrInventoryStationCollision.CheckCanPawnUseStationNow
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrPawn*                 P                              ( CPF_Parm )

bool ATrInventoryStationCollision::CheckCanPawnUseStationNow ( class ATrPawn* P )
{
	static UFunction* pFnCheckCanPawnUseStationNow = NULL;

	if ( ! pFnCheckCanPawnUseStationNow )
		pFnCheckCanPawnUseStationNow = (UFunction*) UObject::GObjObjects()->Data[ 97391 ];

	ATrInventoryStationCollision_execCheckCanPawnUseStationNow_Parms CheckCanPawnUseStationNow_Parms;
	CheckCanPawnUseStationNow_Parms.P = P;

	this->ProcessEvent ( pFnCheckCanPawnUseStationNow, &CheckCanPawnUseStationNow_Parms, NULL );

	return CheckCanPawnUseStationNow_Parms.ReturnValue;
};

// Function TribesGame.TrStationMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrStationMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 111641 ];

	UTrStationMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrStationMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrStationMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 111633 ];

	UTrStationMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrLockedStationMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrLockedStationMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 97678 ];

	UTrLockedStationMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrLockedStationMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrLockedStationMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 97671 ];

	UTrLockedStationMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrLockWarningMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor UTrLockWarningMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 97703 ];

	UTrLockWarningMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function TribesGame.TrLockWarningMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrLockWarningMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 97696 ];

	UTrLockWarningMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrLockWarningMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UTrLockWarningMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 97693 ];

	UTrLockWarningMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function TribesGame.TrMainMenuMeshInfo.PreloadTextures
// [0x00020002] 
// Parameters infos:
// float                          ForceDuration                  ( CPF_Parm )

void UTrMainMenuMeshInfo::PreloadTextures ( float ForceDuration )
{
	static UFunction* pFnPreloadTextures = NULL;

	if ( ! pFnPreloadTextures )
		pFnPreloadTextures = (UFunction*) UObject::GObjObjects()->Data[ 97753 ];

	UTrMainMenuMeshInfo_execPreloadTextures_Parms PreloadTextures_Parms;
	PreloadTextures_Parms.ForceDuration = ForceDuration;

	this->ProcessEvent ( pFnPreloadTextures, &PreloadTextures_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.OnJoinGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bSuccessful                    ( CPF_Parm )

void UTrMakeQuickMatch::OnJoinGameComplete ( struct FName SessionName, unsigned long bSuccessful )
{
	static UFunction* pFnOnJoinGameComplete = NULL;

	if ( ! pFnOnJoinGameComplete )
		pFnOnJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 99162 ];

	UTrMakeQuickMatch_execOnJoinGameComplete_Parms OnJoinGameComplete_Parms;
	memcpy ( &OnJoinGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnJoinGameComplete_Parms.bSuccessful = bSuccessful;

	this->ProcessEvent ( pFnOnJoinGameComplete, &OnJoinGameComplete_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.OnSearchComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void UTrMakeQuickMatch::OnSearchComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnSearchComplete = NULL;

	if ( ! pFnOnSearchComplete )
		pFnOnSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 99159 ];

	UTrMakeQuickMatch_execOnSearchComplete_Parms OnSearchComplete_Parms;
	OnSearchComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnSearchComplete, &OnSearchComplete_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.RequestJoin
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FOnlineGameSearchResult GameToJoin                     ( CPF_Parm )

bool UTrMakeQuickMatch::RequestJoin ( struct FOnlineGameSearchResult GameToJoin )
{
	static UFunction* pFnRequestJoin = NULL;

	if ( ! pFnRequestJoin )
		pFnRequestJoin = (UFunction*) UObject::GObjObjects()->Data[ 99156 ];

	UTrMakeQuickMatch_execRequestJoin_Parms RequestJoin_Parms;
	memcpy ( &RequestJoin_Parms.GameToJoin, &GameToJoin, 0x8 );

	this->ProcessEvent ( pFnRequestJoin, &RequestJoin_Parms, NULL );

	return RequestJoin_Parms.ReturnValue;
};

// Function TribesGame.TrMakeQuickMatch.BuildJoinURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ResolvedConnectionURL          ( CPF_Parm | CPF_NeedCtorLink )

struct FString UTrMakeQuickMatch::BuildJoinURL ( struct FString ResolvedConnectionURL )
{
	static UFunction* pFnBuildJoinURL = NULL;

	if ( ! pFnBuildJoinURL )
		pFnBuildJoinURL = (UFunction*) UObject::GObjObjects()->Data[ 99152 ];

	UTrMakeQuickMatch_execBuildJoinURL_Parms BuildJoinURL_Parms;
	memcpy ( &BuildJoinURL_Parms.ResolvedConnectionURL, &ResolvedConnectionURL, 0xC );

	this->ProcessEvent ( pFnBuildJoinURL, &BuildJoinURL_Parms, NULL );

	return BuildJoinURL_Parms.ReturnValue;
};

// Function TribesGame.TrMakeQuickMatch.ConsoleCommand
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 Cmd                            ( CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bWriteToLog                    ( CPF_OptionalParm | CPF_Parm )

void UTrMakeQuickMatch::ConsoleCommand ( struct FString Cmd, unsigned long bWriteToLog )
{
	static UFunction* pFnConsoleCommand = NULL;

	if ( ! pFnConsoleCommand )
		pFnConsoleCommand = (UFunction*) UObject::GObjObjects()->Data[ 99148 ];

	UTrMakeQuickMatch_execConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy ( &ConsoleCommand_Parms.Cmd, &Cmd, 0xC );
	ConsoleCommand_Parms.bWriteToLog = bWriteToLog;

	this->ProcessEvent ( pFnConsoleCommand, &ConsoleCommand_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.GetPC
// [0x00020002] 
// Parameters infos:
// class APlayerController*       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class APlayerController* UTrMakeQuickMatch::GetPC ( )
{
	static UFunction* pFnGetPC = NULL;

	if ( ! pFnGetPC )
		pFnGetPC = (UFunction*) UObject::GObjObjects()->Data[ 99145 ];

	UTrMakeQuickMatch_execGetPC_Parms GetPC_Parms;

	this->ProcessEvent ( pFnGetPC, &GetPC_Parms, NULL );

	return GetPC_Parms.ReturnValue;
};

// Function TribesGame.TrMakeQuickMatch.GetLP
// [0x00020002] 
// Parameters infos:
// class ULocalPlayer*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ULocalPlayer* UTrMakeQuickMatch::GetLP ( )
{
	static UFunction* pFnGetLP = NULL;

	if ( ! pFnGetLP )
		pFnGetLP = (UFunction*) UObject::GObjObjects()->Data[ 99141 ];

	UTrMakeQuickMatch_execGetLP_Parms GetLP_Parms;

	this->ProcessEvent ( pFnGetLP, &GetLP_Parms, NULL );

	return GetLP_Parms.ReturnValue;
};

// Function TribesGame.TrMakeQuickMatch.SubmitGameSearch
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrMakeQuickMatch::SubmitGameSearch ( )
{
	static UFunction* pFnSubmitGameSearch = NULL;

	if ( ! pFnSubmitGameSearch )
		pFnSubmitGameSearch = (UFunction*) UObject::GObjObjects()->Data[ 99139 ];

	UTrMakeQuickMatch_execSubmitGameSearch_Parms SubmitGameSearch_Parms;

	this->ProcessEvent ( pFnSubmitGameSearch, &SubmitGameSearch_Parms, NULL );

	return SubmitGameSearch_Parms.ReturnValue;
};

// Function TribesGame.TrMakeQuickMatch.Cleanup
// [0x00020002] 
// Parameters infos:

void UTrMakeQuickMatch::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 99138 ];

	UTrMakeQuickMatch_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.Launch
// [0x00020002] 
// Parameters infos:

void UTrMakeQuickMatch::Launch ( )
{
	static UFunction* pFnLaunch = NULL;

	if ( ! pFnLaunch )
		pFnLaunch = (UFunction*) UObject::GObjObjects()->Data[ 99137 ];

	UTrMakeQuickMatch_execLaunch_Parms Launch_Parms;

	this->ProcessEvent ( pFnLaunch, &Launch_Parms, NULL );
};

// Function TribesGame.TrMakeQuickMatch.Init
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  ControllerIndex                ( CPF_Parm )
// int                            GameMode                       ( CPF_Parm )

bool UTrMakeQuickMatch::Init ( unsigned char ControllerIndex, int GameMode )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 99133 ];

	UTrMakeQuickMatch_execInit_Parms Init_Parms;
	Init_Parms.ControllerIndex = ControllerIndex;
	Init_Parms.GameMode = GameMode;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );

	return Init_Parms.ReturnValue;
};

// Function TribesGame.TrMultiKillMessage.AddAnnouncement
// [0x00026002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTAnnouncer*            Announcer                      ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

bool UTrMultiKillMessage::AddAnnouncement ( class AUTAnnouncer* Announcer, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnAddAnnouncement = NULL;

	if ( ! pFnAddAnnouncement )
		pFnAddAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 99287 ];

	UTrMultiKillMessage_execAddAnnouncement_Parms AddAnnouncement_Parms;
	AddAnnouncement_Parms.Announcer = Announcer;
	AddAnnouncement_Parms.MessageIndex = MessageIndex;
	AddAnnouncement_Parms.PRI = PRI;
	AddAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnAddAnnouncement, &AddAnnouncement_Parms, NULL );

	return AddAnnouncement_Parms.ReturnValue;
};

// Function TribesGame.TrMultiKillMessage.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool UTrMultiKillMessage::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 99282 ];

	UTrMultiKillMessage_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function TribesGame.TrMultiKillMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UTrMultiKillMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 99276 ];

	UTrMultiKillMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function TribesGame.TrMultiKillMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrMultiKillMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 99271 ];

	UTrMultiKillMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrMultiKillMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrMultiKillMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 99265 ];

	UTrMultiKillMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrMultiKillMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrMultiKillMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 99258 ];

	UTrMultiKillMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrPartySettings.RefreshMembersList
// [0x00020002] 
// Parameters infos:

void UTrPartySettings::RefreshMembersList ( )
{
	static UFunction* pFnRefreshMembersList = NULL;

	if ( ! pFnRefreshMembersList )
		pFnRefreshMembersList = (UFunction*) UObject::GObjObjects()->Data[ 99658 ];

	UTrPartySettings_execRefreshMembersList_Parms RefreshMembersList_Parms;

	this->ProcessEvent ( pFnRefreshMembersList, &RefreshMembersList_Parms, NULL );
};

// Function TribesGame.TrPartySettings.OnLoginChange
// [0x00820002] 
// Parameters infos:
// unsigned char                  LocalUserNum                   ( CPF_Parm )

void UTrPartySettings::OnLoginChange ( unsigned char LocalUserNum )
{
	static UFunction* pFnOnLoginChange = NULL;

	if ( ! pFnOnLoginChange )
		pFnOnLoginChange = (UFunction*) UObject::GObjObjects()->Data[ 99654 ];

	UTrPartySettings_execOnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;

	this->ProcessEvent ( pFnOnLoginChange, &OnLoginChange_Parms, NULL );
};

// Function TribesGame.TrPartySettings.Close
// [0x00020002] 
// Parameters infos:

void UTrPartySettings::Close ( )
{
	static UFunction* pFnClose = NULL;

	if ( ! pFnClose )
		pFnClose = (UFunction*) UObject::GObjObjects()->Data[ 99653 ];

	UTrPartySettings_execClose_Parms Close_Parms;

	this->ProcessEvent ( pFnClose, &Close_Parms, NULL );
};

// Function TribesGame.TrPartySettings.Init
// [0x00020002] 
// Parameters infos:
// class ULocalPlayer*            InPlayer                       ( CPF_Parm )

void UTrPartySettings::Init ( class ULocalPlayer* InPlayer )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 99651 ];

	UTrPartySettings_execInit_Parms Init_Parms;
	Init_Parms.InPlayer = InPlayer;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function TribesGame.TrSeqEvent_Generator.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrSeqEvent_Generator::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 109970 ];

	UTrSeqEvent_Generator_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function TribesGame.TrProj_AntiAirTurret.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_AntiAirTurret::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 106832 ];

	ATrProj_AntiAirTurret_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_HavocPilot.Destroyed
// [0x00020102] 
// Parameters infos:

void ATrProj_HavocPilot::Destroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 107488 ];

	ATrProj_HavocPilot_execDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function TribesGame.TrProj_HavocPilot.HijackMissileGuidance
// [0x00020102] 
// Parameters infos:

void ATrProj_HavocPilot::HijackMissileGuidance ( )
{
	static UFunction* pFnHijackMissileGuidance = NULL;

	if ( ! pFnHijackMissileGuidance )
		pFnHijackMissileGuidance = (UFunction*) UObject::GObjObjects()->Data[ 107486 ];

	ATrProj_HavocPilot_execHijackMissileGuidance_Parms HijackMissileGuidance_Parms;

	this->ProcessEvent ( pFnHijackMissileGuidance, &HijackMissileGuidance_Parms, NULL );
};

// Function TribesGame.TrProj_HavocPilot.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrProj_HavocPilot::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 107485 ];

	ATrProj_HavocPilot_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrProj_HavocPilot.CalculateHijackMetric
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ATrProj_TrackingMissile* Tracker                        ( CPF_Parm )

float ATrProj_HavocPilot::CalculateHijackMetric ( class ATrProj_TrackingMissile* Tracker )
{
	static UFunction* pFnCalculateHijackMetric = NULL;

	if ( ! pFnCalculateHijackMetric )
		pFnCalculateHijackMetric = (UFunction*) UObject::GObjObjects()->Data[ 107482 ];

	ATrProj_HavocPilot_execCalculateHijackMetric_Parms CalculateHijackMetric_Parms;
	CalculateHijackMetric_Parms.Tracker = Tracker;

	this->ProcessEvent ( pFnCalculateHijackMetric, &CalculateHijackMetric_Parms, NULL );

	return CalculateHijackMetric_Parms.ReturnValue;
};

// Function TribesGame.TrRepairStationCollision.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ATrRepairStationCollision::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 109656 ];

	ATrRepairStationCollision_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function TribesGame.TrRepairStationCollision.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrRepairStationCollision::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 109649 ];

	ATrRepairStationCollision_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrRepairStationCollision.CheckNearByPawns
// [0x00020102] 
// Parameters infos:
// class ATrPawn*                 aPawn                          ( CPF_Parm )
// unsigned long                  bAdd                           ( CPF_Parm )

void ATrRepairStationCollision::CheckNearByPawns ( class ATrPawn* aPawn, unsigned long bAdd )
{
	static UFunction* pFnCheckNearByPawns = NULL;

	if ( ! pFnCheckNearByPawns )
		pFnCheckNearByPawns = (UFunction*) UObject::GObjObjects()->Data[ 109642 ];

	ATrRepairStationCollision_execCheckNearByPawns_Parms CheckNearByPawns_Parms;
	CheckNearByPawns_Parms.aPawn = aPawn;
	CheckNearByPawns_Parms.bAdd = bAdd;

	this->ProcessEvent ( pFnCheckNearByPawns, &CheckNearByPawns_Parms, NULL );
};

// Function TribesGame.TrRepairStationCollision.GetPawnsInStation
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ATrRepairStationCollision::GetPawnsInStation ( )
{
	static UFunction* pFnGetPawnsInStation = NULL;

	if ( ! pFnGetPawnsInStation )
		pFnGetPawnsInStation = (UFunction*) UObject::GObjObjects()->Data[ 109640 ];

	ATrRepairStationCollision_execGetPawnsInStation_Parms GetPawnsInStation_Parms;

	this->ProcessEvent ( pFnGetPawnsInStation, &GetPawnsInStation_Parms, NULL );

	return GetPawnsInStation_Parms.ReturnValue;
};

// Function TribesGame.TrSeqAct_EndMatch.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrSeqAct_EndMatch::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 109958 ];

	UTrSeqAct_EndMatch_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function TribesGame.TrSeqAct_TrainingMessage.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UTrSeqAct_TrainingMessage::eventActivated ( )
{
	static UFunction* pFnActivated = NULL;

	if ( ! pFnActivated )
		pFnActivated = (UFunction*) UObject::GObjObjects()->Data[ 109966 ];

	UTrSeqAct_TrainingMessage_eventActivated_Parms Activated_Parms;

	this->ProcessEvent ( pFnActivated, &Activated_Parms, NULL );
};

// Function TribesGame.TrSeqEvent_StormControlPoint.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrSeqEvent_StormControlPoint::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 109974 ];

	UTrSeqEvent_StormControlPoint_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function TribesGame.TrSeqEvent_StormCore.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrSeqEvent_StormCore::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 109978 ];

	UTrSeqEvent_StormCore_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function TribesGame.TrSeqEvent_StormShield.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int UTrSeqEvent_StormShield::eventGetObjClassVersion ( )
{
	static UFunction* pFnGetObjClassVersion = NULL;

	if ( ! pFnGetObjClassVersion )
		pFnGetObjClassVersion = (UFunction*) UObject::GObjObjects()->Data[ 109982 ];

	UTrSeqEvent_StormShield_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

	this->ProcessEvent ( pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL );

	return GetObjClassVersion_Parms.ReturnValue;
};

// Function TribesGame.TrSnipingSpreeMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrSnipingSpreeMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 111548 ];

	UTrSnipingSpreeMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrSnipingSpreeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrSnipingSpreeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 111542 ];

	UTrSnipingSpreeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrSnipingSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrSnipingSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 111535 ];

	UTrSnipingSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrSnipingSpreeMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UTrSnipingSpreeMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 111527 ];

	UTrSnipingSpreeMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function TribesGame.TrSpinfusorSpreeMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* UTrSpinfusorSpreeMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 111586 ];

	UTrSpinfusorSpreeMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function TribesGame.TrSpinfusorSpreeMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrSpinfusorSpreeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 111580 ];

	UTrSpinfusorSpreeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrSpinfusorSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrSpinfusorSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 111573 ];

	UTrSpinfusorSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrSpinfusorSpreeMessage.GetFontSize
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI1                    ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI2                    ( CPF_Parm )
// class APlayerReplicationInfo*  LocalPlayer                    ( CPF_Parm )

int UTrSpinfusorSpreeMessage::GetFontSize ( int Switch, class APlayerReplicationInfo* RelatedPRI1, class APlayerReplicationInfo* RelatedPRI2, class APlayerReplicationInfo* LocalPlayer )
{
	static UFunction* pFnGetFontSize = NULL;

	if ( ! pFnGetFontSize )
		pFnGetFontSize = (UFunction*) UObject::GObjObjects()->Data[ 111565 ];

	UTrSpinfusorSpreeMessage_execGetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;

	this->ProcessEvent ( pFnGetFontSize, &GetFontSize_Parms, NULL );

	return GetFontSize_Parms.ReturnValue;
};

// Function TribesGame.TrStealthResidue.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrStealthResidue::eventPreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 111772 ];

	ATrStealthResidue_eventPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function TribesGame.TrStormControlPointGate.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ATrStormControlPointGate::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 111851 ];

	ATrStormControlPointGate_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function TribesGame.TrStormControlPointGate.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ATrStormControlPointGate::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 111845 ];

	ATrStormControlPointGate_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function TribesGame.TrTDMScoreMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void UTrTDMScoreMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 112139 ];

	UTrTDMScoreMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function TribesGame.TrTDMScoreMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char UTrTDMScoreMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 112136 ];

	UTrTDMScoreMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function TribesGame.TrTimedPowerup.GetPowerupStatName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ATrTimedPowerup::GetPowerupStatName ( )
{
	static UFunction* pFnGetPowerupStatName = NULL;

	if ( ! pFnGetPowerupStatName )
		pFnGetPowerupStatName = (UFunction*) UObject::GObjObjects()->Data[ 112259 ];

	ATrTimedPowerup_execGetPowerupStatName_Parms GetPowerupStatName_Parms;

	this->ProcessEvent ( pFnGetPowerupStatName, &GetPowerupStatName_Parms, NULL );

	return GetPowerupStatName_Parms.ReturnValue;
};

// Function TribesGame.TrTimedPowerup.DetourWeight
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Other                          ( CPF_Parm )
// float                          PathWeight                     ( CPF_Parm )

float ATrTimedPowerup::DetourWeight ( class APawn* Other, float PathWeight )
{
	static UFunction* pFnDetourWeight = NULL;

	if ( ! pFnDetourWeight )
		pFnDetourWeight = (UFunction*) UObject::GObjObjects()->Data[ 112255 ];

	ATrTimedPowerup_execDetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;

	this->ProcessEvent ( pFnDetourWeight, &DetourWeight_Parms, NULL );

	return DetourWeight_Parms.ReturnValue;
};

// Function TribesGame.TrTimedPowerup.BotDesireability
// [0x00022002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  PickupHolder                   ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )

float ATrTimedPowerup::BotDesireability ( class AActor* PickupHolder, class APawn* P, class AController* C )
{
	static UFunction* pFnBotDesireability = NULL;

	if ( ! pFnBotDesireability )
		pFnBotDesireability = (UFunction*) UObject::GObjObjects()->Data[ 112250 ];

	ATrTimedPowerup_execBotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.PickupHolder = PickupHolder;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;

	this->ProcessEvent ( pFnBotDesireability, &BotDesireability_Parms, NULL );

	return BotDesireability_Parms.ReturnValue;
};

// Function TribesGame.TrTimedPowerup.TimeExpired
// [0x00020002] 
// Parameters infos:

void ATrTimedPowerup::TimeExpired ( )
{
	static UFunction* pFnTimeExpired = NULL;

	if ( ! pFnTimeExpired )
		pFnTimeExpired = (UFunction*) UObject::GObjObjects()->Data[ 112249 ];

	ATrTimedPowerup_execTimeExpired_Parms TimeExpired_Parms;

	this->ProcessEvent ( pFnTimeExpired, &TimeExpired_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.DenyPickupQuery
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  ItemClass                      ( CPF_Parm )
// class AActor*                  Pickup                         ( CPF_Parm )

bool ATrTimedPowerup::DenyPickupQuery ( class UClass* ItemClass, class AActor* Pickup )
{
	static UFunction* pFnDenyPickupQuery = NULL;

	if ( ! pFnDenyPickupQuery )
		pFnDenyPickupQuery = (UFunction*) UObject::GObjObjects()->Data[ 112244 ];

	ATrTimedPowerup_execDenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;

	this->ProcessEvent ( pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL );

	return DenyPickupQuery_Parms.ReturnValue;
};

// Function TribesGame.TrTimedPowerup.DisplayPowerup
// [0x00420100] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          ResolutionScale                ( CPF_Parm )
// float                          YPos                           ( CPF_Parm | CPF_OutParm )

void ATrTimedPowerup::DisplayPowerup ( class UCanvas* Canvas, class AHUD* HUD, float ResolutionScale, float* YPos )
{
	static UFunction* pFnDisplayPowerup = NULL;

	if ( ! pFnDisplayPowerup )
		pFnDisplayPowerup = (UFunction*) UObject::GObjObjects()->Data[ 112239 ];

	ATrTimedPowerup_execDisplayPowerup_Parms DisplayPowerup_Parms;
	DisplayPowerup_Parms.Canvas = Canvas;
	DisplayPowerup_Parms.HUD = HUD;
	DisplayPowerup_Parms.ResolutionScale = ResolutionScale;

	this->ProcessEvent ( pFnDisplayPowerup, &DisplayPowerup_Parms, NULL );

	if ( YPos )
		*YPos = DisplayPowerup_Parms.YPos;
};

// Function TribesGame.TrTimedPowerup.TimeRemaingUpdated
// [0x00020102] 
// Parameters infos:

void ATrTimedPowerup::TimeRemaingUpdated ( )
{
	static UFunction* pFnTimeRemaingUpdated = NULL;

	if ( ! pFnTimeRemaingUpdated )
		pFnTimeRemaingUpdated = (UFunction*) UObject::GObjObjects()->Data[ 112238 ];

	ATrTimedPowerup_execTimeRemaingUpdated_Parms TimeRemaingUpdated_Parms;

	this->ProcessEvent ( pFnTimeRemaingUpdated, &TimeRemaingUpdated_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.ClientSetTimeRemaining
// [0x010201C2] 
// Parameters infos:
// float                          NewTimeRemaining               ( CPF_Parm )

void ATrTimedPowerup::ClientSetTimeRemaining ( float NewTimeRemaining )
{
	static UFunction* pFnClientSetTimeRemaining = NULL;

	if ( ! pFnClientSetTimeRemaining )
		pFnClientSetTimeRemaining = (UFunction*) UObject::GObjObjects()->Data[ 112236 ];

	ATrTimedPowerup_execClientSetTimeRemaining_Parms ClientSetTimeRemaining_Parms;
	ClientSetTimeRemaining_Parms.NewTimeRemaining = NewTimeRemaining;

	this->ProcessEvent ( pFnClientSetTimeRemaining, &ClientSetTimeRemaining_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.ClientLostItem
// [0x010201C2] 
// Parameters infos:

void ATrTimedPowerup::ClientLostItem ( )
{
	static UFunction* pFnClientLostItem = NULL;

	if ( ! pFnClientLostItem )
		pFnClientLostItem = (UFunction*) UObject::GObjObjects()->Data[ 112235 ];

	ATrTimedPowerup_execClientLostItem_Parms ClientLostItem_Parms;

	this->ProcessEvent ( pFnClientLostItem, &ClientLostItem_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.AdjustPPEffects
// [0x00020100] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// unsigned long                  bRemove                        ( CPF_Parm )

void ATrTimedPowerup::AdjustPPEffects ( class APawn* P, unsigned long bRemove )
{
	static UFunction* pFnAdjustPPEffects = NULL;

	if ( ! pFnAdjustPPEffects )
		pFnAdjustPPEffects = (UFunction*) UObject::GObjObjects()->Data[ 112232 ];

	ATrTimedPowerup_execAdjustPPEffects_Parms AdjustPPEffects_Parms;
	AdjustPPEffects_Parms.P = P;
	AdjustPPEffects_Parms.bRemove = bRemove;

	this->ProcessEvent ( pFnAdjustPPEffects, &AdjustPPEffects_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.ClientGivenTo
// [0x010201C2] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_Parm )

void ATrTimedPowerup::ClientGivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnClientGivenTo = NULL;

	if ( ! pFnClientGivenTo )
		pFnClientGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 112229 ];

	ATrTimedPowerup_execClientGivenTo_Parms ClientGivenTo_Parms;
	ClientGivenTo_Parms.NewOwner = NewOwner;
	ClientGivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnClientGivenTo, &ClientGivenTo_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.GivenTo
// [0x00024002] 
// Parameters infos:
// class APawn*                   NewOwner                       ( CPF_Parm )
// unsigned long                  bDoNotActivate                 ( CPF_OptionalParm | CPF_Parm )

void ATrTimedPowerup::GivenTo ( class APawn* NewOwner, unsigned long bDoNotActivate )
{
	static UFunction* pFnGivenTo = NULL;

	if ( ! pFnGivenTo )
		pFnGivenTo = (UFunction*) UObject::GObjObjects()->Data[ 112226 ];

	ATrTimedPowerup_execGivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.NewOwner = NewOwner;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;

	this->ProcessEvent ( pFnGivenTo, &GivenTo_Parms, NULL );
};

// Function TribesGame.TrTimedPowerup.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ATrTimedPowerup::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 112224 ];

	ATrTimedPowerup_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function TribesGame.TrUIDataProvider_MapInfo.ShouldBeFiltered
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool UTrUIDataProvider_MapInfo::eventShouldBeFiltered ( )
{
	static UFunction* pFnShouldBeFiltered = NULL;

	if ( ! pFnShouldBeFiltered )
		pFnShouldBeFiltered = (UFunction*) UObject::GObjObjects()->Data[ 112421 ];

	UTrUIDataProvider_MapInfo_eventShouldBeFiltered_Parms ShouldBeFiltered_Parms;

	this->ProcessEvent ( pFnShouldBeFiltered, &ShouldBeFiltered_Parms, NULL );

	return ShouldBeFiltered_Parms.ReturnValue;
};

// Function TribesGame.TrVehicleMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString UTrVehicleMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 113994 ];

	UTrVehicleMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle_Havoc.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator ATrVehicle_Havoc::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 113875 ];

	ATrVehicle_Havoc_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function TribesGame.TrVehicle_Havoc.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ATrVehicle_Havoc::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 113874 ];

	ATrVehicle_Havoc_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function TribesGame.TrVehicleInput_Flying.AdjustMouseSensitivity
// [0x00020002] 
// Parameters infos:
// float                          FOVScale                       ( CPF_Parm )

void UTrVehicleInput_Flying::AdjustMouseSensitivity ( float FOVScale )
{
	static UFunction* pFnAdjustMouseSensitivity = NULL;

	if ( ! pFnAdjustMouseSensitivity )
		pFnAdjustMouseSensitivity = (UFunction*) UObject::GObjObjects()->Data[ 113989 ];

	UTrVehicleInput_Flying_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;

	this->ProcessEvent ( pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms, NULL );
};

// Function TribesGame.TrVehiclePad.PlayCollapseAnim
// [0x00020102] 
// Parameters infos:

void ATrVehiclePad::PlayCollapseAnim ( )
{
	static UFunction* pFnPlayCollapseAnim = NULL;

	if ( ! pFnPlayCollapseAnim )
		pFnPlayCollapseAnim = (UFunction*) UObject::GObjObjects()->Data[ 114012 ];

	ATrVehiclePad_execPlayCollapseAnim_Parms PlayCollapseAnim_Parms;

	this->ProcessEvent ( pFnPlayCollapseAnim, &PlayCollapseAnim_Parms, NULL );
};

// Function TribesGame.TrVehiclePad.PlayDeployAnim
// [0x00020102] 
// Parameters infos:

void ATrVehiclePad::PlayDeployAnim ( )
{
	static UFunction* pFnPlayDeployAnim = NULL;

	if ( ! pFnPlayDeployAnim )
		pFnPlayDeployAnim = (UFunction*) UObject::GObjObjects()->Data[ 114011 ];

	ATrVehiclePad_execPlayDeployAnim_Parms PlayDeployAnim_Parms;

	this->ProcessEvent ( pFnPlayDeployAnim, &PlayDeployAnim_Parms, NULL );
};

// Function TribesGame.TrVehiclePad.PlayIdleAnim
// [0x00020102] 
// Parameters infos:

void ATrVehiclePad::PlayIdleAnim ( )
{
	static UFunction* pFnPlayIdleAnim = NULL;

	if ( ! pFnPlayIdleAnim )
		pFnPlayIdleAnim = (UFunction*) UObject::GObjObjects()->Data[ 114010 ];

	ATrVehiclePad_execPlayIdleAnim_Parms PlayIdleAnim_Parms;

	this->ProcessEvent ( pFnPlayIdleAnim, &PlayIdleAnim_Parms, NULL );
};

// Function TribesGame.TrVehiclePad.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ATrVehiclePad::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 114008 ];

	ATrVehiclePad_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function TribesGame.TrVehiclePad.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrVehiclePad::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 114005 ];

	ATrVehiclePad_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif