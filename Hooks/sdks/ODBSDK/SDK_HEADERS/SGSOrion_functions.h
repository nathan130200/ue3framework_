/*
#############################################################################################
# ORION Dino Beatdown (Unknown) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
# ========================================================================================= #
# File: SGSOrion_functions.h
# ========================================================================================= #
# Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function SGSOrion.SGS_Achievements.AchievementDone
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_Achievements::AchievementDone ( unsigned long bWasSuccessful )
{
	static UFunction* pFnAchievementDone = NULL;

	if ( ! pFnAchievementDone )
		pFnAchievementDone = (UFunction*) UObject::GObjObjects()->Data[ 49850 ];

	USGS_Achievements_execAchievementDone_Parms AchievementDone_Parms;
	AchievementDone_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnAchievementDone, &AchievementDone_Parms, NULL );
};

// Function SGSOrion.SGS_Achievements.UpdateSpiceOfLife
// [0x00020002] 
// Parameters infos:
// int                            MutatorBitMask                 ( CPF_Parm )

void USGS_Achievements::UpdateSpiceOfLife ( int MutatorBitMask )
{
	static UFunction* pFnUpdateSpiceOfLife = NULL;

	if ( ! pFnUpdateSpiceOfLife )
		pFnUpdateSpiceOfLife = (UFunction*) UObject::GObjObjects()->Data[ 49845 ];

	USGS_Achievements_execUpdateSpiceOfLife_Parms UpdateSpiceOfLife_Parms;
	UpdateSpiceOfLife_Parms.MutatorBitMask = MutatorBitMask;

	this->ProcessEvent ( pFnUpdateSpiceOfLife, &UpdateSpiceOfLife_Parms, NULL );
};

// Function SGSOrion.SGS_Achievements.UpdateVehicles
// [0x00020002] 
// Parameters infos:
// int                            VehicleBitMask                 ( CPF_Parm )

void USGS_Achievements::UpdateVehicles ( int VehicleBitMask )
{
	static UFunction* pFnUpdateVehicles = NULL;

	if ( ! pFnUpdateVehicles )
		pFnUpdateVehicles = (UFunction*) UObject::GObjObjects()->Data[ 49840 ];

	USGS_Achievements_execUpdateVehicles_Parms UpdateVehicles_Parms;
	UpdateVehicles_Parms.VehicleBitMask = VehicleBitMask;

	this->ProcessEvent ( pFnUpdateVehicles, &UpdateVehicles_Parms, NULL );
};

// Function SGSOrion.SGS_Achievements.UpdatePunches
// [0x00020002] 
// Parameters infos:
// int                            PunchBitMask                   ( CPF_Parm )

void USGS_Achievements::UpdatePunches ( int PunchBitMask )
{
	static UFunction* pFnUpdatePunches = NULL;

	if ( ! pFnUpdatePunches )
		pFnUpdatePunches = (UFunction*) UObject::GObjObjects()->Data[ 49835 ];

	USGS_Achievements_execUpdatePunches_Parms UpdatePunches_Parms;
	UpdatePunches_Parms.PunchBitMask = PunchBitMask;

	this->ProcessEvent ( pFnUpdatePunches, &UpdatePunches_Parms, NULL );
};

// Function SGSOrion.SGS_Achievements.UpdateMacGuyver
// [0x00020002] 
// Parameters infos:
// int                            WeaponBitMask                  ( CPF_Parm )

void USGS_Achievements::UpdateMacGuyver ( int WeaponBitMask )
{
	static UFunction* pFnUpdateMacGuyver = NULL;

	if ( ! pFnUpdateMacGuyver )
		pFnUpdateMacGuyver = (UFunction*) UObject::GObjObjects()->Data[ 49830 ];

	USGS_Achievements_execUpdateMacGuyver_Parms UpdateMacGuyver_Parms;
	UpdateMacGuyver_Parms.WeaponBitMask = WeaponBitMask;

	this->ProcessEvent ( pFnUpdateMacGuyver, &UpdateMacGuyver_Parms, NULL );
};

// Function SGSOrion.SGS_Achievements.ReadAchievementStatsComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_Achievements::ReadAchievementStatsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnReadAchievementStatsComplete = NULL;

	if ( ! pFnReadAchievementStatsComplete )
		pFnReadAchievementStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 49826 ];

	USGS_Achievements_execReadAchievementStatsComplete_Parms ReadAchievementStatsComplete_Parms;
	ReadAchievementStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnReadAchievementStatsComplete, &ReadAchievementStatsComplete_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SpeakTTS
// [0x00024100] 
// Parameters infos:
// struct FString                 S                              ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )

void ASGS_Controller_Player::SpeakTTS ( struct FString S, class APlayerReplicationInfo* PRI )
{
	static UFunction* pFnSpeakTTS = NULL;

	if ( ! pFnSpeakTTS )
		pFnSpeakTTS = (UFunction*) UObject::GObjObjects()->Data[ 53974 ];

	ASGS_Controller_Player_execSpeakTTS_Parms SpeakTTS_Parms;
	memcpy ( &SpeakTTS_Parms.S, &S, 0xC );
	SpeakTTS_Parms.PRI = PRI;

	this->ProcessEvent ( pFnSpeakTTS, &SpeakTTS_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.PerformedUseAction
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::PerformedUseAction ( )
{
	static UFunction* pFnPerformedUseAction = NULL;

	if ( ! pFnPerformedUseAction )
		pFnPerformedUseAction = (UFunction*) UObject::GObjObjects()->Data[ 53968 ];

	ASGS_Controller_Player_execPerformedUseAction_Parms PerformedUseAction_Parms;

	this->ProcessEvent ( pFnPerformedUseAction, &PerformedUseAction_Parms, NULL );

	return PerformedUseAction_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.ServerPickupWeapon
// [0x002200C2] 
// Parameters infos:
// class ASGDroppedPickup*        P                              ( CPF_Parm )

void ASGS_Controller_Player::ServerPickupWeapon ( class ASGDroppedPickup* P )
{
	static UFunction* pFnServerPickupWeapon = NULL;

	if ( ! pFnServerPickupWeapon )
		pFnServerPickupWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53963 ];

	ASGS_Controller_Player_execServerPickupWeapon_Parms ServerPickupWeapon_Parms;
	ServerPickupWeapon_Parms.P = P;

	this->ProcessEvent ( pFnServerPickupWeapon, &ServerPickupWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SGSChangeSeat
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::SGSChangeSeat ( )
{
	static UFunction* pFnSGSChangeSeat = NULL;

	if ( ! pFnSGSChangeSeat )
		pFnSGSChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 53962 ];

	ASGS_Controller_Player_execSGSChangeSeat_Parms SGSChangeSeat_Parms;

	this->ProcessEvent ( pFnSGSChangeSeat, &SGSChangeSeat_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerGiveCredits
// [0x002200C2] 
// Parameters infos:
// int                            ParameterA                     ( CPF_Parm )

void ASGS_Controller_Player::ServerGiveCredits ( int ParameterA )
{
	static UFunction* pFnServerGiveCredits = NULL;

	if ( ! pFnServerGiveCredits )
		pFnServerGiveCredits = (UFunction*) UObject::GObjObjects()->Data[ 53960 ];

	ASGS_Controller_Player_execServerGiveCredits_Parms ServerGiveCredits_Parms;
	ServerGiveCredits_Parms.ParameterA = ParameterA;

	this->ProcessEvent ( pFnServerGiveCredits, &ServerGiveCredits_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.DoItUp
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::DoItUp ( )
{
	static UFunction* pFnDoItUp = NULL;

	if ( ! pFnDoItUp )
		pFnDoItUp = (UFunction*) UObject::GObjObjects()->Data[ 53959 ];

	ASGS_Controller_Player_execDoItUp_Parms DoItUp_Parms;

	this->ProcessEvent ( pFnDoItUp, &DoItUp_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientOpenBarracksMenu
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientOpenBarracksMenu ( )
{
	static UFunction* pFnClientOpenBarracksMenu = NULL;

	if ( ! pFnClientOpenBarracksMenu )
		pFnClientOpenBarracksMenu = (UFunction*) UObject::GObjObjects()->Data[ 53958 ];

	ASGS_Controller_Player_execClientOpenBarracksMenu_Parms ClientOpenBarracksMenu_Parms;

	this->ProcessEvent ( pFnClientOpenBarracksMenu, &ClientOpenBarracksMenu_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientOpenArmoryMenu
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientOpenArmoryMenu ( )
{
	static UFunction* pFnClientOpenArmoryMenu = NULL;

	if ( ! pFnClientOpenArmoryMenu )
		pFnClientOpenArmoryMenu = (UFunction*) UObject::GObjObjects()->Data[ 53957 ];

	ASGS_Controller_Player_execClientOpenArmoryMenu_Parms ClientOpenArmoryMenu_Parms;

	this->ProcessEvent ( pFnClientOpenArmoryMenu, &ClientOpenArmoryMenu_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientOpenGarageMenu
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientOpenGarageMenu ( )
{
	static UFunction* pFnClientOpenGarageMenu = NULL;

	if ( ! pFnClientOpenGarageMenu )
		pFnClientOpenGarageMenu = (UFunction*) UObject::GObjObjects()->Data[ 53956 ];

	ASGS_Controller_Player_execClientOpenGarageMenu_Parms ClientOpenGarageMenu_Parms;

	this->ProcessEvent ( pFnClientOpenGarageMenu, &ClientOpenGarageMenu_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Controller_Player::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 53955 ];

	ASGS_Controller_Player_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.FindBuyStation
// [0x00820002] 
// Parameters infos:
// class ASGS_BuyStation*         ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ASGS_BuyStation* ASGS_Controller_Player::FindBuyStation ( )
{
	static UFunction* pFnFindBuyStation = NULL;

	if ( ! pFnFindBuyStation )
		pFnFindBuyStation = (UFunction*) UObject::GObjObjects()->Data[ 53947 ];

	ASGS_Controller_Player_execFindBuyStation_Parms FindBuyStation_Parms;

	this->ProcessEvent ( pFnFindBuyStation, &FindBuyStation_Parms, NULL );

	return FindBuyStation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.ClientUpdatePunches
// [0x010201C2] 
// Parameters infos:
// int                            WeaponBitMask                  ( CPF_Parm )

void ASGS_Controller_Player::ClientUpdatePunches ( int WeaponBitMask )
{
	static UFunction* pFnClientUpdatePunches = NULL;

	if ( ! pFnClientUpdatePunches )
		pFnClientUpdatePunches = (UFunction*) UObject::GObjObjects()->Data[ 53945 ];

	ASGS_Controller_Player_execClientUpdatePunches_Parms ClientUpdatePunches_Parms;
	ClientUpdatePunches_Parms.WeaponBitMask = WeaponBitMask;

	this->ProcessEvent ( pFnClientUpdatePunches, &ClientUpdatePunches_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientUpdateVehicles
// [0x010201C2] 
// Parameters infos:
// int                            WeaponBitMask                  ( CPF_Parm )

void ASGS_Controller_Player::ClientUpdateVehicles ( int WeaponBitMask )
{
	static UFunction* pFnClientUpdateVehicles = NULL;

	if ( ! pFnClientUpdateVehicles )
		pFnClientUpdateVehicles = (UFunction*) UObject::GObjObjects()->Data[ 53943 ];

	ASGS_Controller_Player_execClientUpdateVehicles_Parms ClientUpdateVehicles_Parms;
	ClientUpdateVehicles_Parms.WeaponBitMask = WeaponBitMask;

	this->ProcessEvent ( pFnClientUpdateVehicles, &ClientUpdateVehicles_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientUpdateMacGuyver
// [0x010201C2] 
// Parameters infos:
// int                            WeaponBitMask                  ( CPF_Parm )

void ASGS_Controller_Player::ClientUpdateMacGuyver ( int WeaponBitMask )
{
	static UFunction* pFnClientUpdateMacGuyver = NULL;

	if ( ! pFnClientUpdateMacGuyver )
		pFnClientUpdateMacGuyver = (UFunction*) UObject::GObjObjects()->Data[ 53941 ];

	ASGS_Controller_Player_execClientUpdateMacGuyver_Parms ClientUpdateMacGuyver_Parms;
	ClientUpdateMacGuyver_Parms.WeaponBitMask = WeaponBitMask;

	this->ProcessEvent ( pFnClientUpdateMacGuyver, &ClientUpdateMacGuyver_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.PickupWeapon
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::PickupWeapon ( )
{
	static UFunction* pFnPickupWeapon = NULL;

	if ( ! pFnPickupWeapon )
		pFnPickupWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53934 ];

	ASGS_Controller_Player_execPickupWeapon_Parms PickupWeapon_Parms;

	this->ProcessEvent ( pFnPickupWeapon, &PickupWeapon_Parms, NULL );

	return PickupWeapon_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.FindGenerator
// [0x00820002] 
// Parameters infos:
// class ASGS_PowerGenerator*     ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ASGS_PowerGenerator* ASGS_Controller_Player::FindGenerator ( )
{
	static UFunction* pFnFindGenerator = NULL;

	if ( ! pFnFindGenerator )
		pFnFindGenerator = (UFunction*) UObject::GObjObjects()->Data[ 53925 ];

	ASGS_Controller_Player_execFindGenerator_Parms FindGenerator_Parms;

	this->ProcessEvent ( pFnFindGenerator, &FindGenerator_Parms, NULL );

	return FindGenerator_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.FindVehicleToDrive
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::FindVehicleToDrive ( )
{
	static UFunction* pFnFindVehicleToDrive = NULL;

	if ( ! pFnFindVehicleToDrive )
		pFnFindVehicleToDrive = (UFunction*) UObject::GObjObjects()->Data[ 53911 ];

	ASGS_Controller_Player_execFindVehicleToDrive_Parms FindVehicleToDrive_Parms;

	this->ProcessEvent ( pFnFindVehicleToDrive, &FindVehicleToDrive_Parms, NULL );

	return FindVehicleToDrive_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.FindMechToDrive
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::FindMechToDrive ( )
{
	static UFunction* pFnFindMechToDrive = NULL;

	if ( ! pFnFindMechToDrive )
		pFnFindMechToDrive = (UFunction*) UObject::GObjObjects()->Data[ 53898 ];

	ASGS_Controller_Player_execFindMechToDrive_Parms FindMechToDrive_Parms;

	this->ProcessEvent ( pFnFindMechToDrive, &FindMechToDrive_Parms, NULL );

	return FindMechToDrive_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.DoPathing
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::DoPathing ( )
{
	static UFunction* pFnDoPathing = NULL;

	if ( ! pFnDoPathing )
		pFnDoPathing = (UFunction*) UObject::GObjObjects()->Data[ 53896 ];

	ASGS_Controller_Player_execDoPathing_Parms DoPathing_Parms;

	this->ProcessEvent ( pFnDoPathing, &DoPathing_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowPath
// [0x010201C0] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowPath ( )
{
	static UFunction* pFnClientShowPath = NULL;

	if ( ! pFnClientShowPath )
		pFnClientShowPath = (UFunction*) UObject::GObjObjects()->Data[ 53895 ];

	ASGS_Controller_Player_execClientShowPath_Parms ClientShowPath_Parms;

	this->ProcessEvent ( pFnClientShowPath, &ClientShowPath_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.StopRolling
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::StopRolling ( )
{
	static UFunction* pFnStopRolling = NULL;

	if ( ! pFnStopRolling )
		pFnStopRolling = (UFunction*) UObject::GObjObjects()->Data[ 53893 ];

	ASGS_Controller_Player_execStopRolling_Parms StopRolling_Parms;

	this->ProcessEvent ( pFnStopRolling, &StopRolling_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerUseHardDevice
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::ServerUseHardDevice ( )
{
	static UFunction* pFnServerUseHardDevice = NULL;

	if ( ! pFnServerUseHardDevice )
		pFnServerUseHardDevice = (UFunction*) UObject::GObjObjects()->Data[ 53892 ];

	ASGS_Controller_Player_execServerUseHardDevice_Parms ServerUseHardDevice_Parms;

	this->ProcessEvent ( pFnServerUseHardDevice, &ServerUseHardDevice_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.UseHardDevice
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Controller_Player::UseHardDevice ( )
{
	static UFunction* pFnUseHardDevice = NULL;

	if ( ! pFnUseHardDevice )
		pFnUseHardDevice = (UFunction*) UObject::GObjObjects()->Data[ 53891 ];

	ASGS_Controller_Player_execUseHardDevice_Parms UseHardDevice_Parms;

	this->ProcessEvent ( pFnUseHardDevice, &UseHardDevice_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 POVLocation                    ( CPF_Parm | CPF_OutParm )
// struct FRotator                POVRotation                    ( CPF_Parm | CPF_OutParm )

void ASGS_Controller_Player::eventGetPlayerViewPoint ( struct FVector* POVLocation, struct FRotator* POVRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 53886 ];

	ASGS_Controller_Player_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( POVLocation )
		memcpy ( POVLocation, &GetPlayerViewPoint_Parms.POVLocation, 0xC );

	if ( POVRotation )
		memcpy ( POVRotation, &GetPlayerViewPoint_Parms.POVRotation, 0xC );
};

// Function SGSOrion.SGS_Controller_Player.StopTaunt
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::StopTaunt ( )
{
	static UFunction* pFnStopTaunt = NULL;

	if ( ! pFnStopTaunt )
		pFnStopTaunt = (UFunction*) UObject::GObjObjects()->Data[ 53830 ];

	ASGS_Controller_Player_execStopTaunt_Parms StopTaunt_Parms;

	this->ProcessEvent ( pFnStopTaunt, &StopTaunt_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.Taunt
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            TauntIndex                     ( CPF_Parm )

void ASGS_Controller_Player::Taunt ( int TauntIndex )
{
	static UFunction* pFnTaunt = NULL;

	if ( ! pFnTaunt )
		pFnTaunt = (UFunction*) UObject::GObjObjects()->Data[ 53828 ];

	ASGS_Controller_Player_execTaunt_Parms Taunt_Parms;
	Taunt_Parms.TauntIndex = TauntIndex;

	this->ProcessEvent ( pFnTaunt, &Taunt_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.FOV
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          F                              ( CPF_Parm )

void ASGS_Controller_Player::FOV ( float F )
{
	static UFunction* pFnFOV = NULL;

	if ( ! pFnFOV )
		pFnFOV = (UFunction*) UObject::GObjObjects()->Data[ 53826 ];

	ASGS_Controller_Player_execFOV_Parms FOV_Parms;
	FOV_Parms.F = F;

	this->ProcessEvent ( pFnFOV, &FOV_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.FreeRoam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::FreeRoam ( )
{
	static UFunction* pFnFreeRoam = NULL;

	if ( ! pFnFreeRoam )
		pFnFreeRoam = (UFunction*) UObject::GObjObjects()->Data[ 53824 ];

	ASGS_Controller_Player_execFreeRoam_Parms FreeRoam_Parms;

	this->ProcessEvent ( pFnFreeRoam, &FreeRoam_Parms, NULL );

	return FreeRoam_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.SlowDownCamera
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::SlowDownCamera ( )
{
	static UFunction* pFnSlowDownCamera = NULL;

	if ( ! pFnSlowDownCamera )
		pFnSlowDownCamera = (UFunction*) UObject::GObjObjects()->Data[ 53822 ];

	ASGS_Controller_Player_execSlowDownCamera_Parms SlowDownCamera_Parms;

	this->ProcessEvent ( pFnSlowDownCamera, &SlowDownCamera_Parms, NULL );

	return SlowDownCamera_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.SpeedUpCamera
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::SpeedUpCamera ( )
{
	static UFunction* pFnSpeedUpCamera = NULL;

	if ( ! pFnSpeedUpCamera )
		pFnSpeedUpCamera = (UFunction*) UObject::GObjObjects()->Data[ 53820 ];

	ASGS_Controller_Player_execSpeedUpCamera_Parms SpeedUpCamera_Parms;

	this->ProcessEvent ( pFnSpeedUpCamera, &SpeedUpCamera_Parms, NULL );

	return SpeedUpCamera_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.CycleCamera
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::CycleCamera ( )
{
	static UFunction* pFnCycleCamera = NULL;

	if ( ! pFnCycleCamera )
		pFnCycleCamera = (UFunction*) UObject::GObjObjects()->Data[ 53818 ];

	ASGS_Controller_Player_execCycleCamera_Parms CycleCamera_Parms;

	this->ProcessEvent ( pFnCycleCamera, &CycleCamera_Parms, NULL );

	return CycleCamera_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.SpecZoomOut
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::SpecZoomOut ( )
{
	static UFunction* pFnSpecZoomOut = NULL;

	if ( ! pFnSpecZoomOut )
		pFnSpecZoomOut = (UFunction*) UObject::GObjObjects()->Data[ 53816 ];

	ASGS_Controller_Player_execSpecZoomOut_Parms SpecZoomOut_Parms;

	this->ProcessEvent ( pFnSpecZoomOut, &SpecZoomOut_Parms, NULL );

	return SpecZoomOut_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.SpecZoomIn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::SpecZoomIn ( )
{
	static UFunction* pFnSpecZoomIn = NULL;

	if ( ! pFnSpecZoomIn )
		pFnSpecZoomIn = (UFunction*) UObject::GObjObjects()->Data[ 53814 ];

	ASGS_Controller_Player_execSpecZoomIn_Parms SpecZoomIn_Parms;

	this->ProcessEvent ( pFnSpecZoomIn, &SpecZoomIn_Parms, NULL );

	return SpecZoomIn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.SlowMotion
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Player::SlowMotion ( )
{
	static UFunction* pFnSlowMotion = NULL;

	if ( ! pFnSlowMotion )
		pFnSlowMotion = (UFunction*) UObject::GObjObjects()->Data[ 53812 ];

	ASGS_Controller_Player_execSlowMotion_Parms SlowMotion_Parms;

	this->ProcessEvent ( pFnSlowMotion, &SlowMotion_Parms, NULL );

	return SlowMotion_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.ThrowGrenade
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Controller_Player::ThrowGrenade ( )
{
	static UFunction* pFnThrowGrenade = NULL;

	if ( ! pFnThrowGrenade )
		pFnThrowGrenade = (UFunction*) UObject::GObjObjects()->Data[ 53811 ];

	ASGS_Controller_Player_execThrowGrenade_Parms ThrowGrenade_Parms;

	this->ProcessEvent ( pFnThrowGrenade, &ThrowGrenade_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SetHand
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewWeaponHand                  ( CPF_Parm )

void ASGS_Controller_Player::SetHand ( unsigned char NewWeaponHand )
{
	static UFunction* pFnSetHand = NULL;

	if ( ! pFnSetHand )
		pFnSetHand = (UFunction*) UObject::GObjObjects()->Data[ 53809 ];

	ASGS_Controller_Player_execSetHand_Parms SetHand_Parms;
	SetHand_Parms.NewWeaponHand = NewWeaponHand;

	this->ProcessEvent ( pFnSetHand, &SetHand_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SetBehindView
// [0x00020002] 
// Parameters infos:
// unsigned long                  bNewBehindView                 ( CPF_Parm )

void ASGS_Controller_Player::SetBehindView ( unsigned long bNewBehindView )
{
	static UFunction* pFnSetBehindView = NULL;

	if ( ! pFnSetBehindView )
		pFnSetBehindView = (UFunction*) UObject::GObjObjects()->Data[ 53807 ];

	ASGS_Controller_Player_execSetBehindView_Parms SetBehindView_Parms;
	SetBehindView_Parms.bNewBehindView = bNewBehindView;

	this->ProcessEvent ( pFnSetBehindView, &SetBehindView_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SGSGetNextViewablePlayer
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Dir                            ( CPF_Parm )

class APlayerReplicationInfo* ASGS_Controller_Player::SGSGetNextViewablePlayer ( int Dir )
{
	static UFunction* pFnSGSGetNextViewablePlayer = NULL;

	if ( ! pFnSGSGetNextViewablePlayer )
		pFnSGSGetNextViewablePlayer = (UFunction*) UObject::GObjObjects()->Data[ 53780 ];

	ASGS_Controller_Player_execSGSGetNextViewablePlayer_Parms SGSGetNextViewablePlayer_Parms;
	SGSGetNextViewablePlayer_Parms.Dir = Dir;

	this->ProcessEvent ( pFnSGSGetNextViewablePlayer, &SGSGetNextViewablePlayer_Parms, NULL );

	return SGSGetNextViewablePlayer_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.CloseAllBuyMenus
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::CloseAllBuyMenus ( )
{
	static UFunction* pFnCloseAllBuyMenus = NULL;

	if ( ! pFnCloseAllBuyMenus )
		pFnCloseAllBuyMenus = (UFunction*) UObject::GObjObjects()->Data[ 53779 ];

	ASGS_Controller_Player_execCloseAllBuyMenus_Parms CloseAllBuyMenus_Parms;

	this->ProcessEvent ( pFnCloseAllBuyMenus, &CloseAllBuyMenus_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowDeathOptions
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::ShowDeathOptions ( )
{
	static UFunction* pFnShowDeathOptions = NULL;

	if ( ! pFnShowDeathOptions )
		pFnShowDeathOptions = (UFunction*) UObject::GObjObjects()->Data[ 53777 ];

	ASGS_Controller_Player_execShowDeathOptions_Parms ShowDeathOptions_Parms;

	this->ProcessEvent ( pFnShowDeathOptions, &ShowDeathOptions_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.AddLife
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::AddLife ( )
{
	static UFunction* pFnAddLife = NULL;

	if ( ! pFnAddLife )
		pFnAddLife = (UFunction*) UObject::GObjObjects()->Data[ 53776 ];

	ASGS_Controller_Player_execAddLife_Parms AddLife_Parms;

	this->ProcessEvent ( pFnAddLife, &AddLife_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowWaveIncoming
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowWaveIncoming ( )
{
	static UFunction* pFnClientShowWaveIncoming = NULL;

	if ( ! pFnClientShowWaveIncoming )
		pFnClientShowWaveIncoming = (UFunction*) UObject::GObjObjects()->Data[ 53773 ];

	ASGS_Controller_Player_execClientShowWaveIncoming_Parms ClientShowWaveIncoming_Parms;

	this->ProcessEvent ( pFnClientShowWaveIncoming, &ClientShowWaveIncoming_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowWaveCompleted
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowWaveCompleted ( )
{
	static UFunction* pFnClientShowWaveCompleted = NULL;

	if ( ! pFnClientShowWaveCompleted )
		pFnClientShowWaveCompleted = (UFunction*) UObject::GObjObjects()->Data[ 53772 ];

	ASGS_Controller_Player_execClientShowWaveCompleted_Parms ClientShowWaveCompleted_Parms;

	this->ProcessEvent ( pFnClientShowWaveCompleted, &ClientShowWaveCompleted_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowWaveTimer
// [0x010201C2] 
// Parameters infos:
// int                            TimeLeft                       ( CPF_Parm )

void ASGS_Controller_Player::ClientShowWaveTimer ( int TimeLeft )
{
	static UFunction* pFnClientShowWaveTimer = NULL;

	if ( ! pFnClientShowWaveTimer )
		pFnClientShowWaveTimer = (UFunction*) UObject::GObjObjects()->Data[ 53770 ];

	ASGS_Controller_Player_execClientShowWaveTimer_Parms ClientShowWaveTimer_Parms;
	ClientShowWaveTimer_Parms.TimeLeft = TimeLeft;

	this->ProcessEvent ( pFnClientShowWaveTimer, &ClientShowWaveTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.DeathEffectTimer
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::DeathEffectTimer ( )
{
	static UFunction* pFnDeathEffectTimer = NULL;

	if ( ! pFnDeathEffectTimer )
		pFnDeathEffectTimer = (UFunction*) UObject::GObjObjects()->Data[ 53769 ];

	ASGS_Controller_Player_execDeathEffectTimer_Parms DeathEffectTimer_Parms;

	this->ProcessEvent ( pFnDeathEffectTimer, &DeathEffectTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ProcessDriveMech
// [0x00020002] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )
// unsigned long                  InJump                         ( CPF_Parm )

void ASGS_Controller_Player::ProcessDriveMech ( float InForward, float InStrafe, float InUp, unsigned long InJump )
{
	static UFunction* pFnProcessDriveMech = NULL;

	if ( ! pFnProcessDriveMech )
		pFnProcessDriveMech = (UFunction*) UObject::GObjObjects()->Data[ 53764 ];

	ASGS_Controller_Player_execProcessDriveMech_Parms ProcessDriveMech_Parms;
	ProcessDriveMech_Parms.InForward = InForward;
	ProcessDriveMech_Parms.InStrafe = InStrafe;
	ProcessDriveMech_Parms.InUp = InUp;
	ProcessDriveMech_Parms.InJump = InJump;

	this->ProcessEvent ( pFnProcessDriveMech, &ProcessDriveMech_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerDriveMech
// [0x00A20042] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          aUp                            ( CPF_Parm )
// unsigned long                  InJump                         ( CPF_Parm )
// int                            View                           ( CPF_Parm )

void ASGS_Controller_Player::ServerDriveMech ( float InForward, float InStrafe, float aUp, unsigned long InJump, int View )
{
	static UFunction* pFnServerDriveMech = NULL;

	if ( ! pFnServerDriveMech )
		pFnServerDriveMech = (UFunction*) UObject::GObjObjects()->Data[ 53757 ];

	ASGS_Controller_Player_execServerDriveMech_Parms ServerDriveMech_Parms;
	ServerDriveMech_Parms.InForward = InForward;
	ServerDriveMech_Parms.InStrafe = InStrafe;
	ServerDriveMech_Parms.aUp = aUp;
	ServerDriveMech_Parms.InJump = InJump;
	ServerDriveMech_Parms.View = View;

	this->ProcessEvent ( pFnServerDriveMech, &ServerDriveMech_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.CheckJumpOrDuck
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::CheckJumpOrDuck ( )
{
	static UFunction* pFnCheckJumpOrDuck = NULL;

	if ( ! pFnCheckJumpOrDuck )
		pFnCheckJumpOrDuck = (UFunction*) UObject::GObjObjects()->Data[ 53756 ];

	ASGS_Controller_Player_execCheckJumpOrDuck_Parms CheckJumpOrDuck_Parms;

	this->ProcessEvent ( pFnCheckJumpOrDuck, &CheckJumpOrDuck_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.PlayAnnouncement
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// int                            MessageIndex                   ( CPF_Parm )
// class APlayerReplicationInfo*  PRI                            ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void ASGS_Controller_Player::PlayAnnouncement ( class UClass* InMessageClass, int MessageIndex, class APlayerReplicationInfo* PRI, class UObject* OptionalObject )
{
	static UFunction* pFnPlayAnnouncement = NULL;

	if ( ! pFnPlayAnnouncement )
		pFnPlayAnnouncement = (UFunction*) UObject::GObjObjects()->Data[ 53686 ];

	ASGS_Controller_Player_execPlayAnnouncement_Parms PlayAnnouncement_Parms;
	PlayAnnouncement_Parms.InMessageClass = InMessageClass;
	PlayAnnouncement_Parms.MessageIndex = MessageIndex;
	PlayAnnouncement_Parms.PRI = PRI;
	PlayAnnouncement_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnPlayAnnouncement, &PlayAnnouncement_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.HeadshotMessage
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::HeadshotMessage ( )
{
	static UFunction* pFnHeadshotMessage = NULL;

	if ( ! pFnHeadshotMessage )
		pFnHeadshotMessage = (UFunction*) UObject::GObjObjects()->Data[ 53685 ];

	ASGS_Controller_Player_execHeadshotMessage_Parms HeadshotMessage_Parms;

	this->ProcessEvent ( pFnHeadshotMessage, &HeadshotMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.BullseyeMessage
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::BullseyeMessage ( )
{
	static UFunction* pFnBullseyeMessage = NULL;

	if ( ! pFnBullseyeMessage )
		pFnBullseyeMessage = (UFunction*) UObject::GObjObjects()->Data[ 53683 ];

	ASGS_Controller_Player_execBullseyeMessage_Parms BullseyeMessage_Parms;

	this->ProcessEvent ( pFnBullseyeMessage, &BullseyeMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.AcknowledgePossession
// [0x00820002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ASGS_Controller_Player::AcknowledgePossession ( class APawn* P )
{
	static UFunction* pFnAcknowledgePossession = NULL;

	if ( ! pFnAcknowledgePossession )
		pFnAcknowledgePossession = (UFunction*) UObject::GObjObjects()->Data[ 53679 ];

	ASGS_Controller_Player_execAcknowledgePossession_Parms AcknowledgePossession_Parms;
	AcknowledgePossession_Parms.P = P;

	this->ProcessEvent ( pFnAcknowledgePossession, &AcknowledgePossession_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.PlayStartupMessage
// [0x010201C2] 
// Parameters infos:
// unsigned char                  StartupStage                   ( CPF_Parm )

void ASGS_Controller_Player::PlayStartupMessage ( unsigned char StartupStage )
{
	static UFunction* pFnPlayStartupMessage = NULL;

	if ( ! pFnPlayStartupMessage )
		pFnPlayStartupMessage = (UFunction*) UObject::GObjObjects()->Data[ 53676 ];

	ASGS_Controller_Player_execPlayStartupMessage_Parms PlayStartupMessage_Parms;
	PlayStartupMessage_Parms.StartupStage = StartupStage;

	this->ProcessEvent ( pFnPlayStartupMessage, &PlayStartupMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.NotifyHitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

bool ASGS_Controller_Player::eventNotifyHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyHitWall = NULL;

	if ( ! pFnNotifyHitWall )
		pFnNotifyHitWall = (UFunction*) UObject::GObjObjects()->Data[ 53655 ];

	ASGS_Controller_Player_eventNotifyHitWall_Parms NotifyHitWall_Parms;
	memcpy ( &NotifyHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyHitWall, &NotifyHitWall_Parms, NULL );

	return NotifyHitWall_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.ProcessViewRotation
// [0x00C20002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// struct FRotator                DeltaRot                       ( CPF_Parm )
// struct FRotator                out_ViewRotation               ( CPF_Parm | CPF_OutParm )

void ASGS_Controller_Player::ProcessViewRotation ( float DeltaTime, struct FRotator DeltaRot, struct FRotator* out_ViewRotation )
{
	static UFunction* pFnProcessViewRotation = NULL;

	if ( ! pFnProcessViewRotation )
		pFnProcessViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 53643 ];

	ASGS_Controller_Player_execProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
	memcpy ( &ProcessViewRotation_Parms.DeltaRot, &DeltaRot, 0xC );

	this->ProcessEvent ( pFnProcessViewRotation, &ProcessViewRotation_Parms, NULL );

	if ( out_ViewRotation )
		memcpy ( out_ViewRotation, &ProcessViewRotation_Parms.out_ViewRotation, 0xC );
};

// Function SGSOrion.SGS_Controller_Player.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_Player::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 53638 ];

	ASGS_Controller_Player_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SpectateOnServer
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::SpectateOnServer ( )
{
	static UFunction* pFnSpectateOnServer = NULL;

	if ( ! pFnSpectateOnServer )
		pFnSpectateOnServer = (UFunction*) UObject::GObjObjects()->Data[ 53637 ];

	ASGS_Controller_Player_execSpectateOnServer_Parms SpectateOnServer_Parms;

	this->ProcessEvent ( pFnSpectateOnServer, &SpectateOnServer_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerSpectate
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::ServerSpectate ( )
{
	static UFunction* pFnServerSpectate = NULL;

	if ( ! pFnServerSpectate )
		pFnServerSpectate = (UFunction*) UObject::GObjObjects()->Data[ 53636 ];

	ASGS_Controller_Player_execServerSpectate_Parms ServerSpectate_Parms;

	this->ProcessEvent ( pFnServerSpectate, &ServerSpectate_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SetShowRespawnHud
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bShow                          ( CPF_Parm )

void ASGS_Controller_Player::SetShowRespawnHud ( unsigned long bShow )
{
	static UFunction* pFnSetShowRespawnHud = NULL;

	if ( ! pFnSetShowRespawnHud )
		pFnSetShowRespawnHud = (UFunction*) UObject::GObjObjects()->Data[ 53634 ];

	ASGS_Controller_Player_execSetShowRespawnHud_Parms SetShowRespawnHud_Parms;
	SetShowRespawnHud_Parms.bShow = bShow;

	this->ProcessEvent ( pFnSetShowRespawnHud, &SetShowRespawnHud_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerTeamSelected
// [0x002200C2] 
// Parameters infos:
// int                            iTeam                          ( CPF_Parm )
// int                            iClass                         ( CPF_Parm )
// struct FString                 CharacterType                  ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_Controller_Player::ServerTeamSelected ( int iTeam, int iClass, struct FString CharacterType )
{
	static UFunction* pFnServerTeamSelected = NULL;

	if ( ! pFnServerTeamSelected )
		pFnServerTeamSelected = (UFunction*) UObject::GObjObjects()->Data[ 53630 ];

	ASGS_Controller_Player_execServerTeamSelected_Parms ServerTeamSelected_Parms;
	ServerTeamSelected_Parms.iTeam = iTeam;
	ServerTeamSelected_Parms.iClass = iClass;
	memcpy ( &ServerTeamSelected_Parms.CharacterType, &CharacterType, 0xC );

	this->ProcessEvent ( pFnServerTeamSelected, &ServerTeamSelected_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientSelectTeam
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientSelectTeam ( )
{
	static UFunction* pFnClientSelectTeam = NULL;

	if ( ! pFnClientSelectTeam )
		pFnClientSelectTeam = (UFunction*) UObject::GObjObjects()->Data[ 53629 ];

	ASGS_Controller_Player_execClientSelectTeam_Parms ClientSelectTeam_Parms;

	this->ProcessEvent ( pFnClientSelectTeam, &ClientSelectTeam_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowHUD
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowHUD ( )
{
	static UFunction* pFnClientShowHUD = NULL;

	if ( ! pFnClientShowHUD )
		pFnClientShowHUD = (UFunction*) UObject::GObjObjects()->Data[ 53628 ];

	ASGS_Controller_Player_execClientShowHUD_Parms ClientShowHUD_Parms;

	this->ProcessEvent ( pFnClientShowHUD, &ClientShowHUD_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientSetChrType
// [0x010201C2] 
// Parameters infos:
// class UClass*                  Type                           ( CPF_Parm )

void ASGS_Controller_Player::ClientSetChrType ( class UClass* Type )
{
	static UFunction* pFnClientSetChrType = NULL;

	if ( ! pFnClientSetChrType )
		pFnClientSetChrType = (UFunction*) UObject::GObjObjects()->Data[ 53626 ];

	ASGS_Controller_Player_execClientSetChrType_Parms ClientSetChrType_Parms;
	ClientSetChrType_Parms.Type = Type;

	this->ProcessEvent ( pFnClientSetChrType, &ClientSetChrType_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SetCharacter
// [0x00020002] 
// Parameters infos:
// struct FString                 inCharacter                    ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_Controller_Player::SetCharacter ( struct FString inCharacter )
{
	static UFunction* pFnSetCharacter = NULL;

	if ( ! pFnSetCharacter )
		pFnSetCharacter = (UFunction*) UObject::GObjObjects()->Data[ 53620 ];

	ASGS_Controller_Player_execSetCharacter_Parms SetCharacter_Parms;
	memcpy ( &SetCharacter_Parms.inCharacter, &inCharacter, 0xC );

	this->ProcessEvent ( pFnSetCharacter, &SetCharacter_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.InitPlayerReplicationInfo
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::InitPlayerReplicationInfo ( )
{
	static UFunction* pFnInitPlayerReplicationInfo = NULL;

	if ( ! pFnInitPlayerReplicationInfo )
		pFnInitPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 53619 ];

	ASGS_Controller_Player_execInitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;

	this->ProcessEvent ( pFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerRadioMessage
// [0x00220042] 
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ASGS_Controller_Player::ServerRadioMessage ( unsigned char T )
{
	static UFunction* pFnServerRadioMessage = NULL;

	if ( ! pFnServerRadioMessage )
		pFnServerRadioMessage = (UFunction*) UObject::GObjObjects()->Data[ 53615 ];

	ASGS_Controller_Player_execServerRadioMessage_Parms ServerRadioMessage_Parms;
	ServerRadioMessage_Parms.T = T;

	this->ProcessEvent ( pFnServerRadioMessage, &ServerRadioMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SGSSwitchWeapon
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  T                              ( CPF_Parm )

bool ASGS_Controller_Player::SGSSwitchWeapon ( unsigned char T )
{
	static UFunction* pFnSGSSwitchWeapon = NULL;

	if ( ! pFnSGSSwitchWeapon )
		pFnSGSSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53560 ];

	ASGS_Controller_Player_execSGSSwitchWeapon_Parms SGSSwitchWeapon_Parms;
	SGSSwitchWeapon_Parms.T = T;

	this->ProcessEvent ( pFnSGSSwitchWeapon, &SGSSwitchWeapon_Parms, NULL );

	return SGSSwitchWeapon_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.StopCharging
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Controller_Player::StopCharging ( )
{
	static UFunction* pFnStopCharging = NULL;

	if ( ! pFnStopCharging )
		pFnStopCharging = (UFunction*) UObject::GObjObjects()->Data[ 53558 ];

	ASGS_Controller_Player_execStopCharging_Parms StopCharging_Parms;

	this->ProcessEvent ( pFnStopCharging, &StopCharging_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.OpenClassSelection
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::OpenClassSelection ( )
{
	static UFunction* pFnOpenClassSelection = NULL;

	if ( ! pFnOpenClassSelection )
		pFnOpenClassSelection = (UFunction*) UObject::GObjObjects()->Data[ 53556 ];

	ASGS_Controller_Player_execOpenClassSelection_Parms OpenClassSelection_Parms;

	this->ProcessEvent ( pFnOpenClassSelection, &OpenClassSelection_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowEndGame
// [0x010201C2] 
// Parameters infos:
// unsigned long                  bWinner                        ( CPF_Parm )

void ASGS_Controller_Player::ClientShowEndGame ( unsigned long bWinner )
{
	static UFunction* pFnClientShowEndGame = NULL;

	if ( ! pFnClientShowEndGame )
		pFnClientShowEndGame = (UFunction*) UObject::GObjObjects()->Data[ 53552 ];

	ASGS_Controller_Player_execClientShowEndGame_Parms ClientShowEndGame_Parms;
	ClientShowEndGame_Parms.bWinner = bWinner;

	this->ProcessEvent ( pFnClientShowEndGame, &ClientShowEndGame_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowGameFull
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowGameFull ( )
{
	static UFunction* pFnClientShowGameFull = NULL;

	if ( ! pFnClientShowGameFull )
		pFnClientShowGameFull = (UFunction*) UObject::GObjObjects()->Data[ 53551 ];

	ASGS_Controller_Player_execClientShowGameFull_Parms ClientShowGameFull_Parms;

	this->ProcessEvent ( pFnClientShowGameFull, &ClientShowGameFull_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowLeaveGame
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ClientShowLeaveGame ( )
{
	static UFunction* pFnClientShowLeaveGame = NULL;

	if ( ! pFnClientShowLeaveGame )
		pFnClientShowLeaveGame = (UFunction*) UObject::GObjObjects()->Data[ 53550 ];

	ASGS_Controller_Player_execClientShowLeaveGame_Parms ClientShowLeaveGame_Parms;

	this->ProcessEvent ( pFnClientShowLeaveGame, &ClientShowLeaveGame_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowTeleportError
// [0x010201C2] 
// Parameters infos:
// int                            Seconds                        ( CPF_Parm )

void ASGS_Controller_Player::ClientShowTeleportError ( int Seconds )
{
	static UFunction* pFnClientShowTeleportError = NULL;

	if ( ! pFnClientShowTeleportError )
		pFnClientShowTeleportError = (UFunction*) UObject::GObjObjects()->Data[ 53548 ];

	ASGS_Controller_Player_execClientShowTeleportError_Parms ClientShowTeleportError_Parms;
	ClientShowTeleportError_Parms.Seconds = Seconds;

	this->ProcessEvent ( pFnClientShowTeleportError, &ClientShowTeleportError_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientShowDisconnect
// [0x010201C2] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_Controller_Player::ClientShowDisconnect ( struct FString msg )
{
	static UFunction* pFnClientShowDisconnect = NULL;

	if ( ! pFnClientShowDisconnect )
		pFnClientShowDisconnect = (UFunction*) UObject::GObjObjects()->Data[ 53546 ];

	ASGS_Controller_Player_execClientShowDisconnect_Parms ClientShowDisconnect_Parms;
	memcpy ( &ClientShowDisconnect_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnClientShowDisconnect, &ClientShowDisconnect_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SuperJump
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::SuperJump ( )
{
	static UFunction* pFnSuperJump = NULL;

	if ( ! pFnSuperJump )
		pFnSuperJump = (UFunction*) UObject::GObjObjects()->Data[ 53545 ];

	ASGS_Controller_Player_execSuperJump_Parms SuperJump_Parms;

	this->ProcessEvent ( pFnSuperJump, &SuperJump_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerDoSuperJump
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::ServerDoSuperJump ( )
{
	static UFunction* pFnServerDoSuperJump = NULL;

	if ( ! pFnServerDoSuperJump )
		pFnServerDoSuperJump = (UFunction*) UObject::GObjObjects()->Data[ 53544 ];

	ASGS_Controller_Player_execServerDoSuperJump_Parms ServerDoSuperJump_Parms;

	this->ProcessEvent ( pFnServerDoSuperJump, &ServerDoSuperJump_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.CloseNotification
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Player::CloseNotification ( )
{
	static UFunction* pFnCloseNotification = NULL;

	if ( ! pFnCloseNotification )
		pFnCloseNotification = (UFunction*) UObject::GObjObjects()->Data[ 53543 ];

	ASGS_Controller_Player_execCloseNotification_Parms CloseNotification_Parms;

	this->ProcessEvent ( pFnCloseNotification, &CloseNotification_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerAddLife
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::ServerAddLife ( )
{
	static UFunction* pFnServerAddLife = NULL;

	if ( ! pFnServerAddLife )
		pFnServerAddLife = (UFunction*) UObject::GObjObjects()->Data[ 53541 ];

	ASGS_Controller_Player_execServerAddLife_Parms ServerAddLife_Parms;

	this->ProcessEvent ( pFnServerAddLife, &ServerAddLife_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerSetTeamIndex
// [0x002200C2] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void ASGS_Controller_Player::ServerSetTeamIndex ( int I )
{
	static UFunction* pFnServerSetTeamIndex = NULL;

	if ( ! pFnServerSetTeamIndex )
		pFnServerSetTeamIndex = (UFunction*) UObject::GObjObjects()->Data[ 53539 ];

	ASGS_Controller_Player_execServerSetTeamIndex_Parms ServerSetTeamIndex_Parms;
	ServerSetTeamIndex_Parms.I = I;

	this->ProcessEvent ( pFnServerSetTeamIndex, &ServerSetTeamIndex_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SwitchWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  T                              ( CPF_Parm )

void ASGS_Controller_Player::SwitchWeapon ( unsigned char T )
{
	static UFunction* pFnSwitchWeapon = NULL;

	if ( ! pFnSwitchWeapon )
		pFnSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53537 ];

	ASGS_Controller_Player_execSwitchWeapon_Parms SwitchWeapon_Parms;
	SwitchWeapon_Parms.T = T;

	this->ProcessEvent ( pFnSwitchWeapon, &SwitchWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientPlayTakeHit
// [0x01020142] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// unsigned char                  Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_Controller_Player::ClientPlayTakeHit ( struct FVector HitLoc, unsigned char Damage, class UClass* DamageType )
{
	static UFunction* pFnClientPlayTakeHit = NULL;

	if ( ! pFnClientPlayTakeHit )
		pFnClientPlayTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 53533 ];

	ASGS_Controller_Player_execClientPlayTakeHit_Parms ClientPlayTakeHit_Parms;
	memcpy ( &ClientPlayTakeHit_Parms.HitLoc, &HitLoc, 0xC );
	ClientPlayTakeHit_Parms.Damage = Damage;
	ClientPlayTakeHit_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnClientPlayTakeHit, &ClientPlayTakeHit_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerSubtractCredits
// [0x002200C2] 
// Parameters infos:
// int                            Amount                         ( CPF_Parm )

void ASGS_Controller_Player::ServerSubtractCredits ( int Amount )
{
	static UFunction* pFnServerSubtractCredits = NULL;

	if ( ! pFnServerSubtractCredits )
		pFnServerSubtractCredits = (UFunction*) UObject::GObjObjects()->Data[ 53529 ];

	ASGS_Controller_Player_execServerSubtractCredits_Parms ServerSubtractCredits_Parms;
	ServerSubtractCredits_Parms.Amount = Amount;

	this->ProcessEvent ( pFnServerSubtractCredits, &ServerSubtractCredits_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ClientPlaySound
// [0x01020942] ( FUNC_Event )
// Parameters infos:
// class USoundCue*               ASound                         ( CPF_Parm )

void ASGS_Controller_Player::eventClientPlaySound ( class USoundCue* ASound )
{
	static UFunction* pFnClientPlaySound = NULL;

	if ( ! pFnClientPlaySound )
		pFnClientPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 53524 ];

	ASGS_Controller_Player_eventClientPlaySound_Parms ClientPlaySound_Parms;
	ClientPlaySound_Parms.ASound = ASound;

	this->ProcessEvent ( pFnClientPlaySound, &ClientPlaySound_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.NotifyTakeHit
// [0x00020002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void ASGS_Controller_Player::NotifyTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyTakeHit = NULL;

	if ( ! pFnNotifyTakeHit )
		pFnNotifyTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 53518 ];

	ASGS_Controller_Player_execNotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.GiveDefaultInventory
// [0x00020102] 
// Parameters infos:
// TArray< class UClass* >        InitialItems                   ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_Controller_Player::GiveDefaultInventory ( TArray< class UClass* > InitialItems )
{
	static UFunction* pFnGiveDefaultInventory = NULL;

	if ( ! pFnGiveDefaultInventory )
		pFnGiveDefaultInventory = (UFunction*) UObject::GObjObjects()->Data[ 53510 ];

	ASGS_Controller_Player_execGiveDefaultInventory_Parms GiveDefaultInventory_Parms;
	memcpy ( &GiveDefaultInventory_Parms.InitialItems, &InitialItems, 0xC );

	this->ProcessEvent ( pFnGiveDefaultInventory, &GiveDefaultInventory_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.SetMovie
// [0x00020002] 
// Parameters infos:
// class USGS_DBMainMenu*         newMenu                        ( CPF_Parm )

void ASGS_Controller_Player::SetMovie ( class USGS_DBMainMenu* newMenu )
{
	static UFunction* pFnSetMovie = NULL;

	if ( ! pFnSetMovie )
		pFnSetMovie = (UFunction*) UObject::GObjObjects()->Data[ 53508 ];

	ASGS_Controller_Player_execSetMovie_Parms SetMovie_Parms;
	SetMovie_Parms.newMenu = newMenu;

	this->ProcessEvent ( pFnSetMovie, &SetMovie_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.JumpTimer
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::JumpTimer ( )
{
	static UFunction* pFnJumpTimer = NULL;

	if ( ! pFnJumpTimer )
		pFnJumpTimer = (UFunction*) UObject::GObjObjects()->Data[ 53506 ];

	ASGS_Controller_Player_execJumpTimer_Parms JumpTimer_Parms;

	this->ProcessEvent ( pFnJumpTimer, &JumpTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowMeleeTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowMeleeTip ( )
{
	static UFunction* pFnShowMeleeTip = NULL;

	if ( ! pFnShowMeleeTip )
		pFnShowMeleeTip = (UFunction*) UObject::GObjObjects()->Data[ 53505 ];

	ASGS_Controller_Player_execShowMeleeTip_Parms ShowMeleeTip_Parms;

	this->ProcessEvent ( pFnShowMeleeTip, &ShowMeleeTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowPowerOffTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowPowerOffTip ( )
{
	static UFunction* pFnShowPowerOffTip = NULL;

	if ( ! pFnShowPowerOffTip )
		pFnShowPowerOffTip = (UFunction*) UObject::GObjObjects()->Data[ 53504 ];

	ASGS_Controller_Player_execShowPowerOffTip_Parms ShowPowerOffTip_Parms;

	this->ProcessEvent ( pFnShowPowerOffTip, &ShowPowerOffTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowBuyStationTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowBuyStationTip ( )
{
	static UFunction* pFnShowBuyStationTip = NULL;

	if ( ! pFnShowBuyStationTip )
		pFnShowBuyStationTip = (UFunction*) UObject::GObjObjects()->Data[ 53503 ];

	ASGS_Controller_Player_execShowBuyStationTip_Parms ShowBuyStationTip_Parms;

	this->ProcessEvent ( pFnShowBuyStationTip, &ShowBuyStationTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowSupplyStationTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowSupplyStationTip ( )
{
	static UFunction* pFnShowSupplyStationTip = NULL;

	if ( ! pFnShowSupplyStationTip )
		pFnShowSupplyStationTip = (UFunction*) UObject::GObjObjects()->Data[ 53502 ];

	ASGS_Controller_Player_execShowSupplyStationTip_Parms ShowSupplyStationTip_Parms;

	this->ProcessEvent ( pFnShowSupplyStationTip, &ShowSupplyStationTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowReloadTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowReloadTip ( )
{
	static UFunction* pFnShowReloadTip = NULL;

	if ( ! pFnShowReloadTip )
		pFnShowReloadTip = (UFunction*) UObject::GObjObjects()->Data[ 53501 ];

	ASGS_Controller_Player_execShowReloadTip_Parms ShowReloadTip_Parms;

	this->ProcessEvent ( pFnShowReloadTip, &ShowReloadTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowSeatChangeTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowSeatChangeTip ( )
{
	static UFunction* pFnShowSeatChangeTip = NULL;

	if ( ! pFnShowSeatChangeTip )
		pFnShowSeatChangeTip = (UFunction*) UObject::GObjObjects()->Data[ 53500 ];

	ASGS_Controller_Player_execShowSeatChangeTip_Parms ShowSeatChangeTip_Parms;

	this->ProcessEvent ( pFnShowSeatChangeTip, &ShowSeatChangeTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowGenTurnOnTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowGenTurnOnTip ( )
{
	static UFunction* pFnShowGenTurnOnTip = NULL;

	if ( ! pFnShowGenTurnOnTip )
		pFnShowGenTurnOnTip = (UFunction*) UObject::GObjObjects()->Data[ 53499 ];

	ASGS_Controller_Player_execShowGenTurnOnTip_Parms ShowGenTurnOnTip_Parms;

	this->ProcessEvent ( pFnShowGenTurnOnTip, &ShowGenTurnOnTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.GetKeyBinding
// [0x010201C2] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Binding                        ( CPF_Parm | CPF_NeedCtorLink )

struct FName ASGS_Controller_Player::GetKeyBinding ( struct FString Binding )
{
	static UFunction* pFnGetKeyBinding = NULL;

	if ( ! pFnGetKeyBinding )
		pFnGetKeyBinding = (UFunction*) UObject::GObjObjects()->Data[ 53494 ];

	ASGS_Controller_Player_execGetKeyBinding_Parms GetKeyBinding_Parms;
	memcpy ( &GetKeyBinding_Parms.Binding, &Binding, 0xC );

	this->ProcessEvent ( pFnGetKeyBinding, &GetKeyBinding_Parms, NULL );

	return GetKeyBinding_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.ShowCrouchTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowCrouchTip ( )
{
	static UFunction* pFnShowCrouchTip = NULL;

	if ( ! pFnShowCrouchTip )
		pFnShowCrouchTip = (UFunction*) UObject::GObjObjects()->Data[ 53493 ];

	ASGS_Controller_Player_execShowCrouchTip_Parms ShowCrouchTip_Parms;

	this->ProcessEvent ( pFnShowCrouchTip, &ShowCrouchTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowSkillTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowSkillTip ( )
{
	static UFunction* pFnShowSkillTip = NULL;

	if ( ! pFnShowSkillTip )
		pFnShowSkillTip = (UFunction*) UObject::GObjObjects()->Data[ 53492 ];

	ASGS_Controller_Player_execShowSkillTip_Parms ShowSkillTip_Parms;

	this->ProcessEvent ( pFnShowSkillTip, &ShowSkillTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowHudAwarenessTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowHudAwarenessTip ( )
{
	static UFunction* pFnShowHudAwarenessTip = NULL;

	if ( ! pFnShowHudAwarenessTip )
		pFnShowHudAwarenessTip = (UFunction*) UObject::GObjObjects()->Data[ 53491 ];

	ASGS_Controller_Player_execShowHudAwarenessTip_Parms ShowHudAwarenessTip_Parms;

	this->ProcessEvent ( pFnShowHudAwarenessTip, &ShowHudAwarenessTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowFireModeTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowFireModeTip ( )
{
	static UFunction* pFnShowFireModeTip = NULL;

	if ( ! pFnShowFireModeTip )
		pFnShowFireModeTip = (UFunction*) UObject::GObjObjects()->Data[ 53490 ];

	ASGS_Controller_Player_execShowFireModeTip_Parms ShowFireModeTip_Parms;

	this->ProcessEvent ( pFnShowFireModeTip, &ShowFireModeTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowRollTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowRollTip ( )
{
	static UFunction* pFnShowRollTip = NULL;

	if ( ! pFnShowRollTip )
		pFnShowRollTip = (UFunction*) UObject::GObjObjects()->Data[ 53489 ];

	ASGS_Controller_Player_execShowRollTip_Parms ShowRollTip_Parms;

	this->ProcessEvent ( pFnShowRollTip, &ShowRollTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowRadioTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowRadioTip ( )
{
	static UFunction* pFnShowRadioTip = NULL;

	if ( ! pFnShowRadioTip )
		pFnShowRadioTip = (UFunction*) UObject::GObjObjects()->Data[ 53488 ];

	ASGS_Controller_Player_execShowRadioTip_Parms ShowRadioTip_Parms;

	this->ProcessEvent ( pFnShowRadioTip, &ShowRadioTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowTeamChatTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowTeamChatTip ( )
{
	static UFunction* pFnShowTeamChatTip = NULL;

	if ( ! pFnShowTeamChatTip )
		pFnShowTeamChatTip = (UFunction*) UObject::GObjObjects()->Data[ 53487 ];

	ASGS_Controller_Player_execShowTeamChatTip_Parms ShowTeamChatTip_Parms;

	this->ProcessEvent ( pFnShowTeamChatTip, &ShowTeamChatTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowRandomTip
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::ShowRandomTip ( )
{
	static UFunction* pFnShowRandomTip = NULL;

	if ( ! pFnShowRandomTip )
		pFnShowRandomTip = (UFunction*) UObject::GObjObjects()->Data[ 53486 ];

	ASGS_Controller_Player_execShowRandomTip_Parms ShowRandomTip_Parms;

	this->ProcessEvent ( pFnShowRandomTip, &ShowRandomTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Controller_Player::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53481 ];

	ASGS_Controller_Player_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ShowMoveTip
// [0x010201C2] 
// Parameters infos:

void ASGS_Controller_Player::ShowMoveTip ( )
{
	static UFunction* pFnShowMoveTip = NULL;

	if ( ! pFnShowMoveTip )
		pFnShowMoveTip = (UFunction*) UObject::GObjObjects()->Data[ 53478 ];

	ASGS_Controller_Player_execShowMoveTip_Parms ShowMoveTip_Parms;

	this->ProcessEvent ( pFnShowMoveTip, &ShowMoveTip_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.IsFlashing
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool ASGS_Controller_Player::IsFlashing ( class AActor* A )
{
	static UFunction* pFnIsFlashing = NULL;

	if ( ! pFnIsFlashing )
		pFnIsFlashing = (UFunction*) UObject::GObjObjects()->Data[ 53472 ];

	ASGS_Controller_Player_execIsFlashing_Parms IsFlashing_Parms;
	IsFlashing_Parms.A = A;

	this->ProcessEvent ( pFnIsFlashing, &IsFlashing_Parms, NULL );

	return IsFlashing_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Player.StopFlashing
// [0x00020102] 
// Parameters infos:

void ASGS_Controller_Player::StopFlashing ( )
{
	static UFunction* pFnStopFlashing = NULL;

	if ( ! pFnStopFlashing )
		pFnStopFlashing = (UFunction*) UObject::GObjObjects()->Data[ 53471 ];

	ASGS_Controller_Player_execStopFlashing_Parms StopFlashing_Parms;

	this->ProcessEvent ( pFnStopFlashing, &StopFlashing_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ServerThrowWeapon
// [0x002200C2] 
// Parameters infos:

void ASGS_Controller_Player::ServerThrowWeapon ( )
{
	static UFunction* pFnServerThrowWeapon = NULL;

	if ( ! pFnServerThrowWeapon )
		pFnServerThrowWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53470 ];

	ASGS_Controller_Player_execServerThrowWeapon_Parms ServerThrowWeapon_Parms;

	this->ProcessEvent ( pFnServerThrowWeapon, &ServerThrowWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.ThrowWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Controller_Player::ThrowWeapon ( )
{
	static UFunction* pFnThrowWeapon = NULL;

	if ( ! pFnThrowWeapon )
		pFnThrowWeapon = (UFunction*) UObject::GObjObjects()->Data[ 53469 ];

	ASGS_Controller_Player_execThrowWeapon_Parms ThrowWeapon_Parms;

	this->ProcessEvent ( pFnThrowWeapon, &ThrowWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.DropMoney
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Controller_Player::DropMoney ( )
{
	static UFunction* pFnDropMoney = NULL;

	if ( ! pFnDropMoney )
		pFnDropMoney = (UFunction*) UObject::GObjObjects()->Data[ 53468 ];

	ASGS_Controller_Player_execDropMoney_Parms DropMoney_Parms;

	this->ProcessEvent ( pFnDropMoney, &DropMoney_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Player.Possess
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Controller_Player::eventPossess ( class APawn* inPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 53465 ];

	ASGS_Controller_Player_eventPossess_Parms Possess_Parms;
	Possess_Parms.inPawn = inPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.InCombat
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle::InCombat ( )
{
	static UFunction* pFnInCombat = NULL;

	if ( ! pFnInCombat )
		pFnInCombat = (UFunction*) UObject::GObjObjects()->Data[ 51373 ];

	ASGS_Vehicle_execInCombat_Parms InCombat_Parms;

	this->ProcessEvent ( pFnInCombat, &InCombat_Parms, NULL );

	return InCombat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.UpdateLookSteerStatus
// [0x00020100] 
// Parameters infos:

void ASGS_Vehicle::UpdateLookSteerStatus ( )
{
	static UFunction* pFnUpdateLookSteerStatus = NULL;

	if ( ! pFnUpdateLookSteerStatus )
		pFnUpdateLookSteerStatus = (UFunction*) UObject::GObjObjects()->Data[ 51372 ];

	ASGS_Vehicle_execUpdateLookSteerStatus_Parms UpdateLookSteerStatus_Parms;

	this->ProcessEvent ( pFnUpdateLookSteerStatus, &UpdateLookSteerStatus_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.UpdateHateTimer
// [0x01020142] 
// Parameters infos:

void ASGS_Vehicle::UpdateHateTimer ( )
{
	static UFunction* pFnUpdateHateTimer = NULL;

	if ( ! pFnUpdateHateTimer )
		pFnUpdateHateTimer = (UFunction*) UObject::GObjObjects()->Data[ 51371 ];

	ASGS_Vehicle_execUpdateHateTimer_Parms UpdateHateTimer_Parms;

	this->ProcessEvent ( pFnUpdateHateTimer, &UpdateHateTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.TurnEMPOff
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::TurnEMPOff ( )
{
	static UFunction* pFnTurnEMPOff = NULL;

	if ( ! pFnTurnEMPOff )
		pFnTurnEMPOff = (UFunction*) UObject::GObjObjects()->Data[ 51370 ];

	ASGS_Vehicle_execTurnEMPOff_Parms TurnEMPOff_Parms;

	this->ProcessEvent ( pFnTurnEMPOff, &TurnEMPOff_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.TurnEMPOn
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::TurnEMPOn ( )
{
	static UFunction* pFnTurnEMPOn = NULL;

	if ( ! pFnTurnEMPOn )
		pFnTurnEMPOn = (UFunction*) UObject::GObjObjects()->Data[ 51367 ];

	ASGS_Vehicle_execTurnEMPOn_Parms TurnEMPOn_Parms;

	this->ProcessEvent ( pFnTurnEMPOn, &TurnEMPOn_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ASGS_Vehicle::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 51363 ];

	ASGS_Vehicle_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.EndEMP
// [0x00020002] 
// Parameters infos:

void ASGS_Vehicle::EndEMP ( )
{
	static UFunction* pFnEndEMP = NULL;

	if ( ! pFnEndEMP )
		pFnEndEMP = (UFunction*) UObject::GObjObjects()->Data[ 51362 ];

	ASGS_Vehicle_execEndEMP_Parms EndEMP_Parms;

	this->ProcessEvent ( pFnEndEMP, &EndEMP_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.HitWithEMP
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle::HitWithEMP ( )
{
	static UFunction* pFnHitWithEMP = NULL;

	if ( ! pFnHitWithEMP )
		pFnHitWithEMP = (UFunction*) UObject::GObjObjects()->Data[ 51361 ];

	ASGS_Vehicle_execHitWithEMP_Parms HitWithEMP_Parms;

	this->ProcessEvent ( pFnHitWithEMP, &HitWithEMP_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.SetBurnOut
// [0x00820102] 
// Parameters infos:

void ASGS_Vehicle::SetBurnOut ( )
{
	static UFunction* pFnSetBurnOut = NULL;

	if ( ! pFnSetBurnOut )
		pFnSetBurnOut = (UFunction*) UObject::GObjObjects()->Data[ 51355 ];

	ASGS_Vehicle_execSetBurnOut_Parms SetBurnOut_Parms;

	this->ProcessEvent ( pFnSetBurnOut, &SetBurnOut_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 51352 ];

	ASGS_Vehicle_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PassengerEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool ASGS_Vehicle::PassengerEnter ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnPassengerEnter = NULL;

	if ( ! pFnPassengerEnter )
		pFnPassengerEnter = (UFunction*) UObject::GObjObjects()->Data[ 51348 ];

	ASGS_Vehicle_execPassengerEnter_Parms PassengerEnter_Parms;
	PassengerEnter_Parms.P = P;
	PassengerEnter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerEnter, &PassengerEnter_Parms, NULL );

	return PassengerEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.PassengerLeave
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle::PassengerLeave ( int SeatIndex )
{
	static UFunction* pFnPassengerLeave = NULL;

	if ( ! pFnPassengerLeave )
		pFnPassengerLeave = (UFunction*) UObject::GObjObjects()->Data[ 51345 ];

	ASGS_Vehicle_execPassengerLeave_Parms PassengerLeave_Parms;
	PassengerLeave_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerLeave, &PassengerLeave_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.ChangeSeat
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             ControllerToMove               ( CPF_Parm )
// int                            RequestedSeat                  ( CPF_Parm )

bool ASGS_Vehicle::ChangeSeat ( class AController* ControllerToMove, int RequestedSeat )
{
	static UFunction* pFnChangeSeat = NULL;

	if ( ! pFnChangeSeat )
		pFnChangeSeat = (UFunction*) UObject::GObjObjects()->Data[ 51341 ];

	ASGS_Vehicle_execChangeSeat_Parms ChangeSeat_Parms;
	ChangeSeat_Parms.ControllerToMove = ControllerToMove;
	ChangeSeat_Parms.RequestedSeat = RequestedSeat;

	this->ProcessEvent ( pFnChangeSeat, &ChangeSeat_Parms, NULL );

	return ChangeSeat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.TryToGetIn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_Vehicle::TryToGetIn ( int SeatIndex, class APawn* P )
{
	static UFunction* pFnTryToGetIn = NULL;

	if ( ! pFnTryToGetIn )
		pFnTryToGetIn = (UFunction*) UObject::GObjObjects()->Data[ 51333 ];

	ASGS_Vehicle_execTryToGetIn_Parms TryToGetIn_Parms;
	TryToGetIn_Parms.SeatIndex = SeatIndex;
	TryToGetIn_Parms.P = P;

	this->ProcessEvent ( pFnTryToGetIn, &TryToGetIn_Parms, NULL );

	return TryToGetIn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 51328 ];

	ASGS_Vehicle_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.SetDirtEffects
// [0x00020102] 
// Parameters infos:
// unsigned long                  bOn                            ( CPF_Parm )

void ASGS_Vehicle::SetDirtEffects ( unsigned long bOn )
{
	static UFunction* pFnSetDirtEffects = NULL;

	if ( ! pFnSetDirtEffects )
		pFnSetDirtEffects = (UFunction*) UObject::GObjObjects()->Data[ 51325 ];

	ASGS_Vehicle_execSetDirtEffects_Parms SetDirtEffects_Parms;
	SetDirtEffects_Parms.bOn = bOn;

	this->ProcessEvent ( pFnSetDirtEffects, &SetDirtEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.UpdateDirtParticles
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::UpdateDirtParticles ( )
{
	static UFunction* pFnUpdateDirtParticles = NULL;

	if ( ! pFnUpdateDirtParticles )
		pFnUpdateDirtParticles = (UFunction*) UObject::GObjObjects()->Data[ 51323 ];

	ASGS_Vehicle_execUpdateDirtParticles_Parms UpdateDirtParticles_Parms;

	this->ProcessEvent ( pFnUpdateDirtParticles, &UpdateDirtParticles_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.FixWheelParticlesPleaseEpic
// [0x00820102] 
// Parameters infos:

void ASGS_Vehicle::FixWheelParticlesPleaseEpic ( )
{
	static UFunction* pFnFixWheelParticlesPleaseEpic = NULL;

	if ( ! pFnFixWheelParticlesPleaseEpic )
		pFnFixWheelParticlesPleaseEpic = (UFunction*) UObject::GObjObjects()->Data[ 51316 ];

	ASGS_Vehicle_execFixWheelParticlesPleaseEpic_Parms FixWheelParticlesPleaseEpic_Parms;

	this->ProcessEvent ( pFnFixWheelParticlesPleaseEpic, &FixWheelParticlesPleaseEpic_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.StopServerHandBrake
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle::StopServerHandBrake ( )
{
	static UFunction* pFnStopServerHandBrake = NULL;

	if ( ! pFnStopServerHandBrake )
		pFnStopServerHandBrake = (UFunction*) UObject::GObjObjects()->Data[ 51315 ];

	ASGS_Vehicle_execStopServerHandBrake_Parms StopServerHandBrake_Parms;

	this->ProcessEvent ( pFnStopServerHandBrake, &StopServerHandBrake_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.ServerHandBrake
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle::ServerHandBrake ( )
{
	static UFunction* pFnServerHandBrake = NULL;

	if ( ! pFnServerHandBrake )
		pFnServerHandBrake = (UFunction*) UObject::GObjObjects()->Data[ 51314 ];

	ASGS_Vehicle_execServerHandBrake_Parms ServerHandBrake_Parms;

	this->ProcessEvent ( pFnServerHandBrake, &ServerHandBrake_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.SpawnTracer
// [0x00820102] 
// Parameters infos:
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Vehicle::SpawnTracer ( struct FVector EffectLocation, struct FVector HitLocation )
{
	static UFunction* pFnSpawnTracer = NULL;

	if ( ! pFnSpawnTracer )
		pFnSpawnTracer = (UFunction*) UObject::GObjObjects()->Data[ 51310 ];

	ASGS_Vehicle_execSpawnTracer_Parms SpawnTracer_Parms;
	memcpy ( &SpawnTracer_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracer_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnTracer, &SpawnTracer_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.VehicleWeaponFireEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 51306 ];

	ASGS_Vehicle_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.Register
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::Register ( )
{
	static UFunction* pFnRegister = NULL;

	if ( ! pFnRegister )
		pFnRegister = (UFunction*) UObject::GObjObjects()->Data[ 51304 ];

	ASGS_Vehicle_execRegister_Parms Register_Parms;

	this->ProcessEvent ( pFnRegister, &Register_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51300 ];

	ASGS_Vehicle_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.StartSmokeEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::StartSmokeEffect ( )
{
	static UFunction* pFnStartSmokeEffect = NULL;

	if ( ! pFnStartSmokeEffect )
		pFnStartSmokeEffect = (UFunction*) UObject::GObjObjects()->Data[ 51299 ];

	ASGS_Vehicle_execStartSmokeEffect_Parms StartSmokeEffect_Parms;

	this->ProcessEvent ( pFnStartSmokeEffect, &StartSmokeEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.StartFireEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::StartFireEffect ( )
{
	static UFunction* pFnStartFireEffect = NULL;

	if ( ! pFnStartFireEffect )
		pFnStartFireEffect = (UFunction*) UObject::GObjObjects()->Data[ 51298 ];

	ASGS_Vehicle_execStartFireEffect_Parms StartFireEffect_Parms;

	this->ProcessEvent ( pFnStartFireEffect, &StartFireEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.StopEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::StopEffects ( )
{
	static UFunction* pFnStopEffects = NULL;

	if ( ! pFnStopEffects )
		pFnStopEffects = (UFunction*) UObject::GObjObjects()->Data[ 51297 ];

	ASGS_Vehicle_execStopEffects_Parms StopEffects_Parms;

	this->ProcessEvent ( pFnStopEffects, &StopEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.CheckDamageSmoke
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::CheckDamageSmoke ( )
{
	static UFunction* pFnCheckDamageSmoke = NULL;

	if ( ! pFnCheckDamageSmoke )
		pFnCheckDamageSmoke = (UFunction*) UObject::GObjObjects()->Data[ 51296 ];

	ASGS_Vehicle_execCheckDamageSmoke_Parms CheckDamageSmoke_Parms;

	this->ProcessEvent ( pFnCheckDamageSmoke, &CheckDamageSmoke_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 51287 ];

	ASGS_Vehicle_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_Vehicle::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 51263 ];

	ASGS_Vehicle_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ASGS_Vehicle::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 51254 ];

	ASGS_Vehicle_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.RanInto
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ASGS_Vehicle::eventRanInto ( class AActor* Other )
{
	static UFunction* pFnRanInto = NULL;

	if ( ! pFnRanInto )
		pFnRanInto = (UFunction*) UObject::GObjObjects()->Data[ 51246 ];

	ASGS_Vehicle_eventRanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;

	this->ProcessEvent ( pFnRanInto, &RanInto_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void ASGS_Vehicle::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 51220 ];

	ASGS_Vehicle_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function SGSOrion.SGS_Vehicle.PancakeOther
// [0x00020002] 
// Parameters infos:
// class APawn*                   Other                          ( CPF_Parm )

void ASGS_Vehicle::PancakeOther ( class APawn* Other )
{
	static UFunction* pFnPancakeOther = NULL;

	if ( ! pFnPancakeOther )
		pFnPancakeOther = (UFunction*) UObject::GObjObjects()->Data[ 51213 ];

	ASGS_Vehicle_execPancakeOther_Parms PancakeOther_Parms;
	PancakeOther_Parms.Other = Other;

	this->ProcessEvent ( pFnPancakeOther, &PancakeOther_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.CanBoost
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle::CanBoost ( )
{
	static UFunction* pFnCanBoost = NULL;

	if ( ! pFnCanBoost )
		pFnCanBoost = (UFunction*) UObject::GObjObjects()->Data[ 51211 ];

	ASGS_Vehicle_execCanBoost_Parms CanBoost_Parms;

	this->ProcessEvent ( pFnCanBoost, &CanBoost_Parms, NULL );

	return CanBoost_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.NumSeatsOccupied
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ASGS_Vehicle::NumSeatsOccupied ( )
{
	static UFunction* pFnNumSeatsOccupied = NULL;

	if ( ! pFnNumSeatsOccupied )
		pFnNumSeatsOccupied = (UFunction*) UObject::GObjObjects()->Data[ 51176 ];

	ASGS_Vehicle_execNumSeatsOccupied_Parms NumSeatsOccupied_Parms;

	this->ProcessEvent ( pFnNumSeatsOccupied, &NumSeatsOccupied_Parms, NULL );

	return NumSeatsOccupied_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.Tick
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ASGS_Vehicle::eventTick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51167 ];

	ASGS_Vehicle_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.StopBoost
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle::StopBoost ( )
{
	static UFunction* pFnStopBoost = NULL;

	if ( ! pFnStopBoost )
		pFnStopBoost = (UFunction*) UObject::GObjObjects()->Data[ 51166 ];

	ASGS_Vehicle_execStopBoost_Parms StopBoost_Parms;

	this->ProcessEvent ( pFnStopBoost, &StopBoost_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.Boost
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle::Boost ( )
{
	static UFunction* pFnBoost = NULL;

	if ( ! pFnBoost )
		pFnBoost = (UFunction*) UObject::GObjObjects()->Data[ 51165 ];

	ASGS_Vehicle_execBoost_Parms Boost_Parms;

	this->ProcessEvent ( pFnBoost, &Boost_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.DeactivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle::eventDeactivateRocketBoosters ( )
{
	static UFunction* pFnDeactivateRocketBoosters = NULL;

	if ( ! pFnDeactivateRocketBoosters )
		pFnDeactivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 51162 ];

	ASGS_Vehicle_eventDeactivateRocketBoosters_Parms DeactivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnDeactivateRocketBoosters, &DeactivateRocketBoosters_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.ActivateRocketBoosters
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle::eventActivateRocketBoosters ( )
{
	static UFunction* pFnActivateRocketBoosters = NULL;

	if ( ! pFnActivateRocketBoosters )
		pFnActivateRocketBoosters = (UFunction*) UObject::GObjObjects()->Data[ 51157 ];

	ASGS_Vehicle_eventActivateRocketBoosters_Parms ActivateRocketBoosters_Parms;

	this->ProcessEvent ( pFnActivateRocketBoosters, &ActivateRocketBoosters_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.UnlockWheels
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::UnlockWheels ( )
{
	static UFunction* pFnUnlockWheels = NULL;

	if ( ! pFnUnlockWheels )
		pFnUnlockWheels = (UFunction*) UObject::GObjObjects()->Data[ 51155 ];

	ASGS_Vehicle_execUnlockWheels_Parms UnlockWheels_Parms;

	this->ProcessEvent ( pFnUnlockWheels, &UnlockWheels_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.LockWheels
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle::LockWheels ( )
{
	static UFunction* pFnLockWheels = NULL;

	if ( ! pFnLockWheels )
		pFnLockWheels = (UFunction*) UObject::GObjObjects()->Data[ 51153 ];

	ASGS_Vehicle_execLockWheels_Parms LockWheels_Parms;

	this->ProcessEvent ( pFnLockWheels, &LockWheels_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.EnableFullSteering
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle::eventEnableFullSteering ( )
{
	static UFunction* pFnEnableFullSteering = NULL;

	if ( ! pFnEnableFullSteering )
		pFnEnableFullSteering = (UFunction*) UObject::GObjObjects()->Data[ 51151 ];

	ASGS_Vehicle_eventEnableFullSteering_Parms EnableFullSteering_Parms;

	this->ProcessEvent ( pFnEnableFullSteering, &EnableFullSteering_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PlayBoostSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_Vehicle::PlayBoostSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayBoostSound = NULL;

	if ( ! pFnPlayBoostSound )
		pFnPlayBoostSound = (UFunction*) UObject::GObjObjects()->Data[ 51149 ];

	ASGS_Vehicle_execPlayBoostSound_Parms PlayBoostSound_Parms;
	PlayBoostSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayBoostSound, &PlayBoostSound_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PlaceExitingDriver
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_OptionalParm | CPF_Parm )

bool ASGS_Vehicle::PlaceExitingDriver ( class APawn* ExitingDriver )
{
	static UFunction* pFnPlaceExitingDriver = NULL;

	if ( ! pFnPlaceExitingDriver )
		pFnPlaceExitingDriver = (UFunction*) UObject::GObjObjects()->Data[ 51140 ];

	ASGS_Vehicle_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL );

	return PlaceExitingDriver_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.ServerSetSoundIndex
// [0x002200C2] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_Vehicle::ServerSetSoundIndex ( int Index )
{
	static UFunction* pFnServerSetSoundIndex = NULL;

	if ( ! pFnServerSetSoundIndex )
		pFnServerSetSoundIndex = (UFunction*) UObject::GObjObjects()->Data[ 51138 ];

	ASGS_Vehicle_execServerSetSoundIndex_Parms ServerSetSoundIndex_Parms;
	ServerSetSoundIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnServerSetSoundIndex, &ServerSetSoundIndex_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_Vehicle::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 51135 ];

	ASGS_Vehicle_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle.PlayTurretSound1
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_Vehicle::PlayTurretSound1 ( class USoundCue* Sound )
{
	static UFunction* pFnPlayTurretSound1 = NULL;

	if ( ! pFnPlayTurretSound1 )
		pFnPlayTurretSound1 = (UFunction*) UObject::GObjObjects()->Data[ 51133 ];

	ASGS_Vehicle_execPlayTurretSound1_Parms PlayTurretSound1_Parms;
	PlayTurretSound1_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayTurretSound1, &PlayTurretSound1_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.PlayTurretSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_Vehicle::PlayTurretSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayTurretSound = NULL;

	if ( ! pFnPlayTurretSound )
		pFnPlayTurretSound = (UFunction*) UObject::GObjObjects()->Data[ 51131 ];

	ASGS_Vehicle_execPlayTurretSound_Parms PlayTurretSound_Parms;
	PlayTurretSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayTurretSound, &PlayTurretSound_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    Collision                      ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* Collision )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 51123 ];

	ASGS_Vehicle_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( Collision )
		memcpy ( Collision, &RigidBodyCollision_Parms.Collision, 0x24 );
};

// Function SGSOrion.SGS_Vehicle.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 51114 ];

	ASGS_Vehicle_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.VehicleWeaponImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle::VehicleWeaponImpactEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponImpactEffects = NULL;

	if ( ! pFnVehicleWeaponImpactEffects )
		pFnVehicleWeaponImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 51098 ];

	ASGS_Vehicle_execVehicleWeaponImpactEffects_Parms VehicleWeaponImpactEffects_Parms;
	memcpy ( &VehicleWeaponImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponImpactEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponImpactEffects, &VehicleWeaponImpactEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle.EncroachingOn
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ASGS_Vehicle::eventEncroachingOn ( class AActor* Other )
{
	static UFunction* pFnEncroachingOn = NULL;

	if ( ! pFnEncroachingOn )
		pFnEncroachingOn = (UFunction*) UObject::GObjObjects()->Data[ 51090 ];

	ASGS_Vehicle_eventEncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;

	this->ProcessEvent ( pFnEncroachingOn, &EncroachingOn_Parms, NULL );

	return EncroachingOn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.Show_RespawnTime
// [0x00020000] 
// Parameters infos:
// int                            Time                           ( CPF_Parm )

void USGS_GFXHud::Show_RespawnTime ( int Time )
{
	static UFunction* pFnShow_RespawnTime = NULL;

	if ( ! pFnShow_RespawnTime )
		pFnShow_RespawnTime = (UFunction*) UObject::GObjObjects()->Data[ 58720 ];

	USGS_GFXHud_execShow_RespawnTime_Parms Show_RespawnTime_Parms;
	Show_RespawnTime_Parms.Time = Time;

	this->ProcessEvent ( pFnShow_RespawnTime, &Show_RespawnTime_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateObjectives
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateObjectives ( )
{
	static UFunction* pFnUpdateObjectives = NULL;

	if ( ! pFnUpdateObjectives )
		pFnUpdateObjectives = (UFunction*) UObject::GObjObjects()->Data[ 58716 ];

	USGS_GFXHud_execUpdateObjectives_Parms UpdateObjectives_Parms;

	this->ProcessEvent ( pFnUpdateObjectives, &UpdateObjectives_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.AddObjective
// [0x00824002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 Caption                        ( CPF_Parm | CPF_NeedCtorLink )
// class AActor*                  Owner                          ( CPF_Parm )
// struct FVector                 pos                            ( CPF_OptionalParm | CPF_Parm )
// class UTexture2D*              Tex                            ( CPF_OptionalParm | CPF_Parm )

class UGFxObject* USGS_GFXHud::AddObjective ( struct FString Caption, class AActor* Owner, struct FVector pos, class UTexture2D* Tex )
{
	static UFunction* pFnAddObjective = NULL;

	if ( ! pFnAddObjective )
		pFnAddObjective = (UFunction*) UObject::GObjObjects()->Data[ 58707 ];

	USGS_GFXHud_execAddObjective_Parms AddObjective_Parms;
	memcpy ( &AddObjective_Parms.Caption, &Caption, 0xC );
	AddObjective_Parms.Owner = Owner;
	memcpy ( &AddObjective_Parms.pos, &pos, 0xC );
	AddObjective_Parms.Tex = Tex;

	this->ProcessEvent ( pFnAddObjective, &AddObjective_Parms, NULL );

	return AddObjective_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.UpdateObjThubPos
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GFXHud::UpdateObjThubPos ( class UCanvas* Canvas )
{
	static UFunction* pFnUpdateObjThubPos = NULL;

	if ( ! pFnUpdateObjThubPos )
		pFnUpdateObjThubPos = (UFunction*) UObject::GObjObjects()->Data[ 58697 ];

	USGS_GFXHud_execUpdateObjThubPos_Parms UpdateObjThubPos_Parms;
	UpdateObjThubPos_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnUpdateObjThubPos, &UpdateObjThubPos_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ToggleInGameTeamInfo
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::ToggleInGameTeamInfo ( )
{
	static UFunction* pFnToggleInGameTeamInfo = NULL;

	if ( ! pFnToggleInGameTeamInfo )
		pFnToggleInGameTeamInfo = (UFunction*) UObject::GObjObjects()->Data[ 58695 ];

	USGS_GFXHud_execToggleInGameTeamInfo_Parms ToggleInGameTeamInfo_Parms;

	this->ProcessEvent ( pFnToggleInGameTeamInfo, &ToggleInGameTeamInfo_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateScoreBoard
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateScoreBoard ( )
{
	static UFunction* pFnUpdateScoreBoard = NULL;

	if ( ! pFnUpdateScoreBoard )
		pFnUpdateScoreBoard = (UFunction*) UObject::GObjObjects()->Data[ 58684 ];

	USGS_GFXHud_execUpdateScoreBoard_Parms UpdateScoreBoard_Parms;

	this->ProcessEvent ( pFnUpdateScoreBoard, &UpdateScoreBoard_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.IsValidScoreboardPlayer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerReplicationInfo* PRI                            ( CPF_Parm )

bool USGS_GFXHud::IsValidScoreboardPlayer ( class AUTPlayerReplicationInfo* PRI )
{
	static UFunction* pFnIsValidScoreboardPlayer = NULL;

	if ( ! pFnIsValidScoreboardPlayer )
		pFnIsValidScoreboardPlayer = (UFunction*) UObject::GObjObjects()->Data[ 58681 ];

	USGS_GFXHud_execIsValidScoreboardPlayer_Parms IsValidScoreboardPlayer_Parms;
	IsValidScoreboardPlayer_Parms.PRI = PRI;

	this->ProcessEvent ( pFnIsValidScoreboardPlayer, &IsValidScoreboardPlayer_Parms, NULL );

	return IsValidScoreboardPlayer_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.UpdateScore
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateScore ( )
{
	static UFunction* pFnUpdateScore = NULL;

	if ( ! pFnUpdateScore )
		pFnUpdateScore = (UFunction*) UObject::GObjObjects()->Data[ 58680 ];

	USGS_GFXHud_execUpdateScore_Parms UpdateScore_Parms;

	this->ProcessEvent ( pFnUpdateScore, &UpdateScore_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.HideScoreBoard
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::HideScoreBoard ( )
{
	static UFunction* pFnHideScoreBoard = NULL;

	if ( ! pFnHideScoreBoard )
		pFnHideScoreBoard = (UFunction*) UObject::GObjObjects()->Data[ 58679 ];

	USGS_GFXHud_execHideScoreBoard_Parms HideScoreBoard_Parms;

	this->ProcessEvent ( pFnHideScoreBoard, &HideScoreBoard_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ShowScoreboard
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::ShowScoreboard ( )
{
	static UFunction* pFnShowScoreboard = NULL;

	if ( ! pFnShowScoreboard )
		pFnShowScoreboard = (UFunction*) UObject::GObjObjects()->Data[ 58678 ];

	USGS_GFXHud_execShowScoreboard_Parms ShowScoreboard_Parms;

	this->ProcessEvent ( pFnShowScoreboard, &ShowScoreboard_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.GetTeamInfo
// [0x00020002] 
// Parameters infos:
// class ATeamInfo*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  MyTeam                         ( CPF_Parm )

class ATeamInfo* USGS_GFXHud::GetTeamInfo ( unsigned long MyTeam )
{
	static UFunction* pFnGetTeamInfo = NULL;

	if ( ! pFnGetTeamInfo )
		pFnGetTeamInfo = (UFunction*) UObject::GObjObjects()->Data[ 58674 ];

	USGS_GFXHud_execGetTeamInfo_Parms GetTeamInfo_Parms;
	GetTeamInfo_Parms.MyTeam = MyTeam;

	this->ProcessEvent ( pFnGetTeamInfo, &GetTeamInfo_Parms, NULL );

	return GetTeamInfo_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.GetAltairTeam
// [0x00020002] 
// Parameters infos:
// class ATeamInfo*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATeamInfo* USGS_GFXHud::GetAltairTeam ( )
{
	static UFunction* pFnGetAltairTeam = NULL;

	if ( ! pFnGetAltairTeam )
		pFnGetAltairTeam = (UFunction*) UObject::GObjObjects()->Data[ 58671 ];

	USGS_GFXHud_execGetAltairTeam_Parms GetAltairTeam_Parms;

	this->ProcessEvent ( pFnGetAltairTeam, &GetAltairTeam_Parms, NULL );

	return GetAltairTeam_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.GetCarrierTeam
// [0x00020002] 
// Parameters infos:
// class ATeamInfo*               ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class ATeamInfo* USGS_GFXHud::GetCarrierTeam ( )
{
	static UFunction* pFnGetCarrierTeam = NULL;

	if ( ! pFnGetCarrierTeam )
		pFnGetCarrierTeam = (UFunction*) UObject::GObjObjects()->Data[ 58668 ];

	USGS_GFXHud_execGetCarrierTeam_Parms GetCarrierTeam_Parms;

	this->ProcessEvent ( pFnGetCarrierTeam, &GetCarrierTeam_Parms, NULL );

	return GetCarrierTeam_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.IsChangeTeamOrClassVisible
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_GFXHud::IsChangeTeamOrClassVisible ( )
{
	static UFunction* pFnIsChangeTeamOrClassVisible = NULL;

	if ( ! pFnIsChangeTeamOrClassVisible )
		pFnIsChangeTeamOrClassVisible = (UFunction*) UObject::GObjObjects()->Data[ 58666 ];

	USGS_GFXHud_execIsChangeTeamOrClassVisible_Parms IsChangeTeamOrClassVisible_Parms;

	this->ProcessEvent ( pFnIsChangeTeamOrClassVisible, &IsChangeTeamOrClassVisible_Parms, NULL );

	return IsChangeTeamOrClassVisible_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.ShowClassSelection
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::ShowClassSelection ( )
{
	static UFunction* pFnShowClassSelection = NULL;

	if ( ! pFnShowClassSelection )
		pFnShowClassSelection = (UFunction*) UObject::GObjObjects()->Data[ 58665 ];

	USGS_GFXHud_execShowClassSelection_Parms ShowClassSelection_Parms;

	this->ProcessEvent ( pFnShowClassSelection, &ShowClassSelection_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ShowTeamSelection
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::ShowTeamSelection ( )
{
	static UFunction* pFnShowTeamSelection = NULL;

	if ( ! pFnShowTeamSelection )
		pFnShowTeamSelection = (UFunction*) UObject::GObjObjects()->Data[ 58664 ];

	USGS_GFXHud_execShowTeamSelection_Parms ShowTeamSelection_Parms;

	this->ProcessEvent ( pFnShowTeamSelection, &ShowTeamSelection_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ChangeClass
// [0x00020002] 
// Parameters infos:
// int                            iTeam                          ( CPF_Parm )
// int                            iClass                         ( CPF_Parm )

void USGS_GFXHud::ChangeClass ( int iTeam, int iClass )
{
	static UFunction* pFnChangeClass = NULL;

	if ( ! pFnChangeClass )
		pFnChangeClass = (UFunction*) UObject::GObjObjects()->Data[ 58659 ];

	USGS_GFXHud_execChangeClass_Parms ChangeClass_Parms;
	ChangeClass_Parms.iTeam = iTeam;
	ChangeClass_Parms.iClass = iClass;

	this->ProcessEvent ( pFnChangeClass, &ChangeClass_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.SetSpectatorMode
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::SetSpectatorMode ( )
{
	static UFunction* pFnSetSpectatorMode = NULL;

	if ( ! pFnSetSpectatorMode )
		pFnSetSpectatorMode = (UFunction*) UObject::GObjObjects()->Data[ 58658 ];

	USGS_GFXHud_execSetSpectatorMode_Parms SetSpectatorMode_Parms;

	this->ProcessEvent ( pFnSetSpectatorMode, &SetSpectatorMode_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.HideToolTip
// [0x00020000] 
// Parameters infos:

void USGS_GFXHud::HideToolTip ( )
{
	static UFunction* pFnHideToolTip = NULL;

	if ( ! pFnHideToolTip )
		pFnHideToolTip = (UFunction*) UObject::GObjObjects()->Data[ 58657 ];

	USGS_GFXHud_execHideToolTip_Parms HideToolTip_Parms;

	this->ProcessEvent ( pFnHideToolTip, &HideToolTip_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ShowToolTip
// [0x00020000] 
// Parameters infos:

void USGS_GFXHud::ShowToolTip ( )
{
	static UFunction* pFnShowToolTip = NULL;

	if ( ! pFnShowToolTip )
		pFnShowToolTip = (UFunction*) UObject::GObjObjects()->Data[ 58656 ];

	USGS_GFXHud_execShowToolTip_Parms ShowToolTip_Parms;

	this->ProcessEvent ( pFnShowToolTip, &ShowToolTip_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.SkillBar_Hide
// [0x00020000] 
// Parameters infos:

void USGS_GFXHud::SkillBar_Hide ( )
{
	static UFunction* pFnSkillBar_Hide = NULL;

	if ( ! pFnSkillBar_Hide )
		pFnSkillBar_Hide = (UFunction*) UObject::GObjObjects()->Data[ 58655 ];

	USGS_GFXHud_execSkillBar_Hide_Parms SkillBar_Hide_Parms;

	this->ProcessEvent ( pFnSkillBar_Hide, &SkillBar_Hide_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.SkillBar_Update
// [0x00020000] 
// Parameters infos:
// int                            Percent                        ( CPF_Parm )

void USGS_GFXHud::SkillBar_Update ( int Percent )
{
	static UFunction* pFnSkillBar_Update = NULL;

	if ( ! pFnSkillBar_Update )
		pFnSkillBar_Update = (UFunction*) UObject::GObjObjects()->Data[ 58653 ];

	USGS_GFXHud_execSkillBar_Update_Parms SkillBar_Update_Parms;
	SkillBar_Update_Parms.Percent = Percent;

	this->ProcessEvent ( pFnSkillBar_Update, &SkillBar_Update_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Objetive_UpdatePos
// [0x00020000] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GFXHud::Objetive_UpdatePos ( class UCanvas* Canvas )
{
	static UFunction* pFnObjetive_UpdatePos = NULL;

	if ( ! pFnObjetive_UpdatePos )
		pFnObjetive_UpdatePos = (UFunction*) UObject::GObjObjects()->Data[ 58651 ];

	USGS_GFXHud_execObjetive_UpdatePos_Parms Objetive_UpdatePos_Parms;
	Objetive_UpdatePos_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnObjetive_UpdatePos, &Objetive_UpdatePos_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateHealth
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateHealth ( )
{
	static UFunction* pFnUpdateHealth = NULL;

	if ( ! pFnUpdateHealth )
		pFnUpdateHealth = (UFunction*) UObject::GObjObjects()->Data[ 58643 ];

	USGS_GFXHud_execUpdateHealth_Parms UpdateHealth_Parms;

	this->ProcessEvent ( pFnUpdateHealth, &UpdateHealth_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateHitDamage
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateHitDamage ( )
{
	static UFunction* pFnUpdateHitDamage = NULL;

	if ( ! pFnUpdateHitDamage )
		pFnUpdateHitDamage = (UFunction*) UObject::GObjObjects()->Data[ 58640 ];

	USGS_GFXHud_execUpdateHitDamage_Parms UpdateHitDamage_Parms;

	this->ProcessEvent ( pFnUpdateHitDamage, &UpdateHitDamage_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Update_WeaponIcons
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_GFXHud::Update_WeaponIcons ( )
{
	static UFunction* pFnUpdate_WeaponIcons = NULL;

	if ( ! pFnUpdate_WeaponIcons )
		pFnUpdate_WeaponIcons = (UFunction*) UObject::GObjObjects()->Data[ 58638 ];

	USGS_GFXHud_execUpdate_WeaponIcons_Parms Update_WeaponIcons_Parms;

	this->ProcessEvent ( pFnUpdate_WeaponIcons, &Update_WeaponIcons_Parms, NULL );

	return Update_WeaponIcons_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.Weapon_UpdateFiringMode
// [0x00020002] 
// Parameters infos:
// class ASGWeapon*               Weapon                         ( CPF_Parm )

void USGS_GFXHud::Weapon_UpdateFiringMode ( class ASGWeapon* Weapon )
{
	static UFunction* pFnWeapon_UpdateFiringMode = NULL;

	if ( ! pFnWeapon_UpdateFiringMode )
		pFnWeapon_UpdateFiringMode = (UFunction*) UObject::GObjObjects()->Data[ 58636 ];

	USGS_GFXHud_execWeapon_UpdateFiringMode_Parms Weapon_UpdateFiringMode_Parms;
	Weapon_UpdateFiringMode_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnWeapon_UpdateFiringMode, &Weapon_UpdateFiringMode_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.StringToColor
// [0x00820002] 
// Parameters infos:
// struct FASColorTransform       ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 S                              ( CPF_Parm | CPF_NeedCtorLink )

struct FASColorTransform USGS_GFXHud::StringToColor ( struct FString S )
{
	static UFunction* pFnStringToColor = NULL;

	if ( ! pFnStringToColor )
		pFnStringToColor = (UFunction*) UObject::GObjObjects()->Data[ 58632 ];

	USGS_GFXHud_execStringToColor_Parms StringToColor_Parms;
	memcpy ( &StringToColor_Parms.S, &S, 0xC );

	this->ProcessEvent ( pFnStringToColor, &StringToColor_Parms, NULL );

	return StringToColor_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.ReceiveLocalMessage
// [0x00824002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )
// float                          T                              ( CPF_OptionalParm | CPF_Parm )

void USGS_GFXHud::ReceiveLocalMessage ( struct FString msg, float T )
{
	static UFunction* pFnReceiveLocalMessage = NULL;

	if ( ! pFnReceiveLocalMessage )
		pFnReceiveLocalMessage = (UFunction*) UObject::GObjObjects()->Data[ 58625 ];

	USGS_GFXHud_execReceiveLocalMessage_Parms ReceiveLocalMessage_Parms;
	memcpy ( &ReceiveLocalMessage_Parms.msg, &msg, 0xC );
	ReceiveLocalMessage_Parms.T = T;

	this->ProcessEvent ( pFnReceiveLocalMessage, &ReceiveLocalMessage_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ReceiveKillAssistMessage
// [0x00020002] 
// Parameters infos:
// struct FString                 msg                            ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFXHud::ReceiveKillAssistMessage ( struct FString msg )
{
	static UFunction* pFnReceiveKillAssistMessage = NULL;

	if ( ! pFnReceiveKillAssistMessage )
		pFnReceiveKillAssistMessage = (UFunction*) UObject::GObjObjects()->Data[ 58623 ];

	USGS_GFXHud_execReceiveKillAssistMessage_Parms ReceiveKillAssistMessage_Parms;
	memcpy ( &ReceiveKillAssistMessage_Parms.msg, &msg, 0xC );

	this->ProcessEvent ( pFnReceiveKillAssistMessage, &ReceiveKillAssistMessage_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.SetCrossHairHidden
// [0x00020002] 
// Parameters infos:
// unsigned long                  Hidden                         ( CPF_Parm )

void USGS_GFXHud::SetCrossHairHidden ( unsigned long Hidden )
{
	static UFunction* pFnSetCrossHairHidden = NULL;

	if ( ! pFnSetCrossHairHidden )
		pFnSetCrossHairHidden = (UFunction*) UObject::GObjObjects()->Data[ 58621 ];

	USGS_GFXHud_execSetCrossHairHidden_Parms SetCrossHairHidden_Parms;
	SetCrossHairHidden_Parms.Hidden = Hidden;

	this->ProcessEvent ( pFnSetCrossHairHidden, &SetCrossHairHidden_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.HideScope
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::HideScope ( )
{
	static UFunction* pFnHideScope = NULL;

	if ( ! pFnHideScope )
		pFnHideScope = (UFunction*) UObject::GObjObjects()->Data[ 58620 ];

	USGS_GFXHud_execHideScope_Parms HideScope_Parms;

	this->ProcessEvent ( pFnHideScope, &HideScope_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ShowScope
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::ShowScope ( )
{
	static UFunction* pFnShowScope = NULL;

	if ( ! pFnShowScope )
		pFnShowScope = (UFunction*) UObject::GObjObjects()->Data[ 58619 ];

	USGS_GFXHud_execShowScope_Parms ShowScope_Parms;

	this->ProcessEvent ( pFnShowScope, &ShowScope_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateVehicleWeapon
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateVehicleWeapon ( )
{
	static UFunction* pFnUpdateVehicleWeapon = NULL;

	if ( ! pFnUpdateVehicleWeapon )
		pFnUpdateVehicleWeapon = (UFunction*) UObject::GObjObjects()->Data[ 58617 ];

	USGS_GFXHud_execUpdateVehicleWeapon_Parms UpdateVehicleWeapon_Parms;

	this->ProcessEvent ( pFnUpdateVehicleWeapon, &UpdateVehicleWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Weapon_SetSelected
// [0x00020002] 
// Parameters infos:
// class ASGWeapon*               Weapon                         ( CPF_Parm )

void USGS_GFXHud::Weapon_SetSelected ( class ASGWeapon* Weapon )
{
	static UFunction* pFnWeapon_SetSelected = NULL;

	if ( ! pFnWeapon_SetSelected )
		pFnWeapon_SetSelected = (UFunction*) UObject::GObjObjects()->Data[ 58614 ];

	USGS_GFXHud_execWeapon_SetSelected_Parms Weapon_SetSelected_Parms;
	Weapon_SetSelected_Parms.Weapon = Weapon;

	this->ProcessEvent ( pFnWeapon_SetSelected, &Weapon_SetSelected_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UnHideud
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UnHideud ( )
{
	static UFunction* pFnUnHideud = NULL;

	if ( ! pFnUnHideud )
		pFnUnHideud = (UFunction*) UObject::GObjObjects()->Data[ 58613 ];

	USGS_GFXHud_execUnHideud_Parms UnHideud_Parms;

	this->ProcessEvent ( pFnUnHideud, &UnHideud_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.HideHUD
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::HideHUD ( )
{
	static UFunction* pFnHideHUD = NULL;

	if ( ! pFnHideHUD )
		pFnHideHUD = (UFunction*) UObject::GObjObjects()->Data[ 58612 ];

	USGS_GFXHud_execHideHUD_Parms HideHUD_Parms;

	this->ProcessEvent ( pFnHideHUD, &HideHUD_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Update_AmmoCount
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::Update_AmmoCount ( )
{
	static UFunction* pFnUpdate_AmmoCount = NULL;

	if ( ! pFnUpdate_AmmoCount )
		pFnUpdate_AmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 58611 ];

	USGS_GFXHud_execUpdate_AmmoCount_Parms Update_AmmoCount_Parms;

	this->ProcessEvent ( pFnUpdate_AmmoCount, &Update_AmmoCount_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateWeapon
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateWeapon ( )
{
	static UFunction* pFnUpdateWeapon = NULL;

	if ( ! pFnUpdateWeapon )
		pFnUpdateWeapon = (UFunction*) UObject::GObjObjects()->Data[ 58610 ];

	USGS_GFXHud_execUpdateWeapon_Parms UpdateWeapon_Parms;

	this->ProcessEvent ( pFnUpdateWeapon, &UpdateWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateMouse
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateMouse ( )
{
	static UFunction* pFnUpdateMouse = NULL;

	if ( ! pFnUpdateMouse )
		pFnUpdateMouse = (UFunction*) UObject::GObjObjects()->Data[ 58608 ];

	USGS_GFXHud_execUpdateMouse_Parms UpdateMouse_Parms;

	this->ProcessEvent ( pFnUpdateMouse, &UpdateMouse_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateGrenades
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateGrenades ( )
{
	static UFunction* pFnUpdateGrenades = NULL;

	if ( ! pFnUpdateGrenades )
		pFnUpdateGrenades = (UFunction*) UObject::GObjObjects()->Data[ 58604 ];

	USGS_GFXHud_execUpdateGrenades_Parms UpdateGrenades_Parms;

	this->ProcessEvent ( pFnUpdateGrenades, &UpdateGrenades_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateMessages
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateMessages ( )
{
	static UFunction* pFnUpdateMessages = NULL;

	if ( ! pFnUpdateMessages )
		pFnUpdateMessages = (UFunction*) UObject::GObjObjects()->Data[ 58601 ];

	USGS_GFXHud_execUpdateMessages_Parms UpdateMessages_Parms;

	this->ProcessEvent ( pFnUpdateMessages, &UpdateMessages_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateEnergy
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateEnergy ( )
{
	static UFunction* pFnUpdateEnergy = NULL;

	if ( ! pFnUpdateEnergy )
		pFnUpdateEnergy = (UFunction*) UObject::GObjObjects()->Data[ 58598 ];

	USGS_GFXHud_execUpdateEnergy_Parms UpdateEnergy_Parms;

	this->ProcessEvent ( pFnUpdateEnergy, &UpdateEnergy_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.SetMiniGun
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void USGS_GFXHud::SetMiniGun ( int I )
{
	static UFunction* pFnSetMiniGun = NULL;

	if ( ! pFnSetMiniGun )
		pFnSetMiniGun = (UFunction*) UObject::GObjObjects()->Data[ 58596 ];

	USGS_GFXHud_execSetMiniGun_Parms SetMiniGun_Parms;
	SetMiniGun_Parms.I = I;

	this->ProcessEvent ( pFnSetMiniGun, &SetMiniGun_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateCrossHair
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateCrossHair ( )
{
	static UFunction* pFnUpdateCrossHair = NULL;

	if ( ! pFnUpdateCrossHair )
		pFnUpdateCrossHair = (UFunction*) UObject::GObjObjects()->Data[ 58595 ];

	USGS_GFXHud_execUpdateCrossHair_Parms UpdateCrossHair_Parms;

	this->ProcessEvent ( pFnUpdateCrossHair, &UpdateCrossHair_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateMissionObjectives
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateMissionObjectives ( )
{
	static UFunction* pFnUpdateMissionObjectives = NULL;

	if ( ! pFnUpdateMissionObjectives )
		pFnUpdateMissionObjectives = (UFunction*) UObject::GObjObjects()->Data[ 58591 ];

	USGS_GFXHud_execUpdateMissionObjectives_Parms UpdateMissionObjectives_Parms;

	this->ProcessEvent ( pFnUpdateMissionObjectives, &UpdateMissionObjectives_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateHealAmount
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateHealAmount ( )
{
	static UFunction* pFnUpdateHealAmount = NULL;

	if ( ! pFnUpdateHealAmount )
		pFnUpdateHealAmount = (UFunction*) UObject::GObjObjects()->Data[ 58588 ];

	USGS_GFXHud_execUpdateHealAmount_Parms UpdateHealAmount_Parms;

	this->ProcessEvent ( pFnUpdateHealAmount, &UpdateHealAmount_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateTimerBars
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateTimerBars ( )
{
	static UFunction* pFnUpdateTimerBars = NULL;

	if ( ! pFnUpdateTimerBars )
		pFnUpdateTimerBars = (UFunction*) UObject::GObjObjects()->Data[ 58580 ];

	USGS_GFXHud_execUpdateTimerBars_Parms UpdateTimerBars_Parms;

	this->ProcessEvent ( pFnUpdateTimerBars, &UpdateTimerBars_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.TickHud
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GFXHud::TickHud ( class UCanvas* Canvas )
{
	static UFunction* pFnTickHud = NULL;

	if ( ! pFnTickHud )
		pFnTickHud = (UFunction*) UObject::GObjObjects()->Data[ 58578 ];

	USGS_GFXHud_execTickHud_Parms TickHud_Parms;
	TickHud_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnTickHud, &TickHud_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdatePlayerText
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdatePlayerText ( )
{
	static UFunction* pFnUpdatePlayerText = NULL;

	if ( ! pFnUpdatePlayerText )
		pFnUpdatePlayerText = (UFunction*) UObject::GObjObjects()->Data[ 58577 ];

	USGS_GFXHud_execUpdatePlayerText_Parms UpdatePlayerText_Parms;

	this->ProcessEvent ( pFnUpdatePlayerText, &UpdatePlayerText_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateCompass
// [0x00820002] 
// Parameters infos:

void USGS_GFXHud::UpdateCompass ( )
{
	static UFunction* pFnUpdateCompass = NULL;

	if ( ! pFnUpdateCompass )
		pFnUpdateCompass = (UFunction*) UObject::GObjObjects()->Data[ 58573 ];

	USGS_GFXHud_execUpdateCompass_Parms UpdateCompass_Parms;

	this->ProcessEvent ( pFnUpdateCompass, &UpdateCompass_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateTimer
// [0x00020002] 
// Parameters infos:

void USGS_GFXHud::UpdateTimer ( )
{
	static UFunction* pFnUpdateTimer = NULL;

	if ( ! pFnUpdateTimer )
		pFnUpdateTimer = (UFunction*) UObject::GObjObjects()->Data[ 58572 ];

	USGS_GFXHud_execUpdateTimer_Parms UpdateTimer_Parms;

	this->ProcessEvent ( pFnUpdateTimer, &UpdateTimer_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Hud_TurnOn
// [0x00024002] 
// Parameters infos:
// unsigned long                  bTurnOn                        ( CPF_Parm )
// unsigned long                  bFull                          ( CPF_OptionalParm | CPF_Parm )

void USGS_GFXHud::Hud_TurnOn ( unsigned long bTurnOn, unsigned long bFull )
{
	static UFunction* pFnHud_TurnOn = NULL;

	if ( ! pFnHud_TurnOn )
		pFnHud_TurnOn = (UFunction*) UObject::GObjObjects()->Data[ 58569 ];

	USGS_GFXHud_execHud_TurnOn_Parms Hud_TurnOn_Parms;
	Hud_TurnOn_Parms.bTurnOn = bTurnOn;
	Hud_TurnOn_Parms.bFull = bFull;

	this->ProcessEvent ( pFnHud_TurnOn, &Hud_TurnOn_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateHUD
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_GFXHud::UpdateHUD ( )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 58567 ];

	USGS_GFXHud_execUpdateHUD_Parms UpdateHUD_Parms;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );

	return UpdateHUD_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFXHud.SetMiniMapMode
// [0x00024000] 
// Parameters infos:
// unsigned long                  bLarge                         ( CPF_OptionalParm | CPF_Parm )

void USGS_GFXHud::SetMiniMapMode ( unsigned long bLarge )
{
	static UFunction* pFnSetMiniMapMode = NULL;

	if ( ! pFnSetMiniMapMode )
		pFnSetMiniMapMode = (UFunction*) UObject::GObjObjects()->Data[ 58565 ];

	USGS_GFXHud_execSetMiniMapMode_Parms SetMiniMapMode_Parms;
	SetMiniMapMode_Parms.bLarge = bLarge;

	this->ProcessEvent ( pFnSetMiniMapMode, &SetMiniMapMode_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdatePlayerIcons
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GFXHud::UpdatePlayerIcons ( class UCanvas* Canvas )
{
	static UFunction* pFnUpdatePlayerIcons = NULL;

	if ( ! pFnUpdatePlayerIcons )
		pFnUpdatePlayerIcons = (UFunction*) UObject::GObjObjects()->Data[ 58534 ];

	USGS_GFXHud_execUpdatePlayerIcons_Parms UpdatePlayerIcons_Parms;
	UpdatePlayerIcons_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnUpdatePlayerIcons, &UpdatePlayerIcons_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UnRegisterHudActor
// [0x00820002] 
// Parameters infos:
// class AActor*                  Actor                          ( CPF_Parm )

void USGS_GFXHud::UnRegisterHudActor ( class AActor* Actor )
{
	static UFunction* pFnUnRegisterHudActor = NULL;

	if ( ! pFnUnRegisterHudActor )
		pFnUnRegisterHudActor = (UFunction*) UObject::GObjObjects()->Data[ 58531 ];

	USGS_GFXHud_execUnRegisterHudActor_Parms UnRegisterHudActor_Parms;
	UnRegisterHudActor_Parms.Actor = Actor;

	this->ProcessEvent ( pFnUnRegisterHudActor, &UnRegisterHudActor_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.RegisterHudActor
// [0x00820002] 
// Parameters infos:
// class AActor*                  A                              ( CPF_Parm )
// struct FString                 Type                           ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFXHud::RegisterHudActor ( class AActor* A, struct FString Type )
{
	static UFunction* pFnRegisterHudActor = NULL;

	if ( ! pFnRegisterHudActor )
		pFnRegisterHudActor = (UFunction*) UObject::GObjObjects()->Data[ 58525 ];

	USGS_GFXHud_execRegisterHudActor_Parms RegisterHudActor_Parms;
	RegisterHudActor_Parms.A = A;
	memcpy ( &RegisterHudActor_Parms.Type, &Type, 0xC );

	this->ProcessEvent ( pFnRegisterHudActor, &RegisterHudActor_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.UpdateFreezeCam
// [0x00820002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GFXHud::UpdateFreezeCam ( class UCanvas* Canvas )
{
	static UFunction* pFnUpdateFreezeCam = NULL;

	if ( ! pFnUpdateFreezeCam )
		pFnUpdateFreezeCam = (UFunction*) UObject::GObjObjects()->Data[ 58522 ];

	USGS_GFXHud_execUpdateFreezeCam_Parms UpdateFreezeCam_Parms;
	UpdateFreezeCam_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnUpdateFreezeCam, &UpdateFreezeCam_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.DisplayHit
// [0x00820002] 
// Parameters infos:
// struct FVector                 HitDir                         ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

void USGS_GFXHud::DisplayHit ( struct FVector HitDir, float Damage )
{
	static UFunction* pFnDisplayHit = NULL;

	if ( ! pFnDisplayHit )
		pFnDisplayHit = (UFunction*) UObject::GObjObjects()->Data[ 58513 ];

	USGS_GFXHud_execDisplayHit_Parms DisplayHit_Parms;
	memcpy ( &DisplayHit_Parms.HitDir, &HitDir, 0xC );
	DisplayHit_Parms.Damage = Damage;

	this->ProcessEvent ( pFnDisplayHit, &DisplayHit_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.ShowTutorialTip
// [0x00020002] 
// Parameters infos:
// struct FString                 Tip                            ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFXHud::ShowTutorialTip ( struct FString Tip )
{
	static UFunction* pFnShowTutorialTip = NULL;

	if ( ! pFnShowTutorialTip )
		pFnShowTutorialTip = (UFunction*) UObject::GObjObjects()->Data[ 58511 ];

	USGS_GFXHud_execShowTutorialTip_Parms ShowTutorialTip_Parms;
	memcpy ( &ShowTutorialTip_Parms.Tip, &Tip, 0xC );

	this->ProcessEvent ( pFnShowTutorialTip, &ShowTutorialTip_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHud.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            LocPlay                        ( CPF_OptionalParm | CPF_Parm )

void USGS_GFXHud::Init ( class ULocalPlayer* LocPlay )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58508 ];

	USGS_GFXHud_execInit_Parms Init_Parms;
	Init_Parms.LocPlay = LocPlay;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.UpdateDamage
// [0x00820002] 
// Parameters infos:

void ASGS_HUD::UpdateDamage ( )
{
	static UFunction* pFnUpdateDamage = NULL;

	if ( ! pFnUpdateDamage )
		pFnUpdateDamage = (UFunction*) UObject::GObjObjects()->Data[ 58987 ];

	ASGS_HUD_execUpdateDamage_Parms UpdateDamage_Parms;

	this->ProcessEvent ( pFnUpdateDamage, &UpdateDamage_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CreditsPostRender
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CreditsPostRender ( )
{
	static UFunction* pFnCreditsPostRender = NULL;

	if ( ! pFnCreditsPostRender )
		pFnCreditsPostRender = (UFunction*) UObject::GObjObjects()->Data[ 58984 ];

	ASGS_HUD_execCreditsPostRender_Parms CreditsPostRender_Parms;

	this->ProcessEvent ( pFnCreditsPostRender, &CreditsPostRender_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ASGS_HUD::eventPostRender ( )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 58983 ];

	ASGS_HUD_eventPostRender_Parms PostRender_Parms;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.SGSSetPos
// [0x00020002] 
// Parameters infos:
// int                            X                              ( CPF_Parm )
// int                            Y                              ( CPF_Parm )

void ASGS_HUD::SGSSetPos ( int X, int Y )
{
	static UFunction* pFnSGSSetPos = NULL;

	if ( ! pFnSGSSetPos )
		pFnSGSSetPos = (UFunction*) UObject::GObjObjects()->Data[ 58980 ];

	ASGS_HUD_execSGSSetPos_Parms SGSSetPos_Parms;
	SGSSetPos_Parms.X = X;
	SGSSetPos_Parms.Y = Y;

	this->ProcessEvent ( pFnSGSSetPos, &SGSSetPos_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.TextRenderGameStatus
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::TextRenderGameStatus ( )
{
	static UFunction* pFnTextRenderGameStatus = NULL;

	if ( ! pFnTextRenderGameStatus )
		pFnTextRenderGameStatus = (UFunction*) UObject::GObjObjects()->Data[ 58977 ];

	ASGS_HUD_execTextRenderGameStatus_Parms TextRenderGameStatus_Parms;

	this->ProcessEvent ( pFnTextRenderGameStatus, &TextRenderGameStatus_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CloseAllMenus
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CloseAllMenus ( )
{
	static UFunction* pFnCloseAllMenus = NULL;

	if ( ! pFnCloseAllMenus )
		pFnCloseAllMenus = (UFunction*) UObject::GObjObjects()->Data[ 58976 ];

	ASGS_HUD_execCloseAllMenus_Parms CloseAllMenus_Parms;

	this->ProcessEvent ( pFnCloseAllMenus, &CloseAllMenus_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.TextPostRender
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::TextPostRender ( )
{
	static UFunction* pFnTextPostRender = NULL;

	if ( ! pFnTextPostRender )
		pFnTextPostRender = (UFunction*) UObject::GObjObjects()->Data[ 58972 ];

	ASGS_HUD_execTextPostRender_Parms TextPostRender_Parms;

	this->ProcessEvent ( pFnTextPostRender, &TextPostRender_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.GetCharacterName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString ASGS_HUD::GetCharacterName ( )
{
	static UFunction* pFnGetCharacterName = NULL;

	if ( ! pFnGetCharacterName )
		pFnGetCharacterName = (UFunction*) UObject::GObjObjects()->Data[ 58970 ];

	ASGS_HUD_execGetCharacterName_Parms GetCharacterName_Parms;

	this->ProcessEvent ( pFnGetCharacterName, &GetCharacterName_Parms, NULL );

	return GetCharacterName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_HUD.CompletePauseMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompletePauseMenuClose ( )
{
	static UFunction* pFnCompletePauseMenuClose = NULL;

	if ( ! pFnCompletePauseMenuClose )
		pFnCompletePauseMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58969 ];

	ASGS_HUD_execCompletePauseMenuClose_Parms CompletePauseMenuClose_Parms;

	this->ProcessEvent ( pFnCompletePauseMenuClose, &CompletePauseMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteScoreMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteScoreMenuClose ( )
{
	static UFunction* pFnCompleteScoreMenuClose = NULL;

	if ( ! pFnCompleteScoreMenuClose )
		pFnCompleteScoreMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58968 ];

	ASGS_HUD_execCompleteScoreMenuClose_Parms CompleteScoreMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteScoreMenuClose, &CompleteScoreMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteNotificationMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteNotificationMenuClose ( )
{
	static UFunction* pFnCompleteNotificationMenuClose = NULL;

	if ( ! pFnCompleteNotificationMenuClose )
		pFnCompleteNotificationMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58967 ];

	ASGS_HUD_execCompleteNotificationMenuClose_Parms CompleteNotificationMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteNotificationMenuClose, &CompleteNotificationMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteSelectionMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteSelectionMenuClose ( )
{
	static UFunction* pFnCompleteSelectionMenuClose = NULL;

	if ( ! pFnCompleteSelectionMenuClose )
		pFnCompleteSelectionMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58966 ];

	ASGS_HUD_execCompleteSelectionMenuClose_Parms CompleteSelectionMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteSelectionMenuClose, &CompleteSelectionMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteBarracksBuyMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteBarracksBuyMenuClose ( )
{
	static UFunction* pFnCompleteBarracksBuyMenuClose = NULL;

	if ( ! pFnCompleteBarracksBuyMenuClose )
		pFnCompleteBarracksBuyMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58965 ];

	ASGS_HUD_execCompleteBarracksBuyMenuClose_Parms CompleteBarracksBuyMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteBarracksBuyMenuClose, &CompleteBarracksBuyMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteGarageBuyMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteGarageBuyMenuClose ( )
{
	static UFunction* pFnCompleteGarageBuyMenuClose = NULL;

	if ( ! pFnCompleteGarageBuyMenuClose )
		pFnCompleteGarageBuyMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58964 ];

	ASGS_HUD_execCompleteGarageBuyMenuClose_Parms CompleteGarageBuyMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteGarageBuyMenuClose, &CompleteGarageBuyMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CompleteBuyMenuClose
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CompleteBuyMenuClose ( )
{
	static UFunction* pFnCompleteBuyMenuClose = NULL;

	if ( ! pFnCompleteBuyMenuClose )
		pFnCompleteBuyMenuClose = (UFunction*) UObject::GObjObjects()->Data[ 58963 ];

	ASGS_HUD_execCompleteBuyMenuClose_Parms CompleteBuyMenuClose_Parms;

	this->ProcessEvent ( pFnCompleteBuyMenuClose, &CompleteBuyMenuClose_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.ToggleBuyMenu
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_HUD::ToggleBuyMenu ( int Index )
{
	static UFunction* pFnToggleBuyMenu = NULL;

	if ( ! pFnToggleBuyMenu )
		pFnToggleBuyMenu = (UFunction*) UObject::GObjObjects()->Data[ 58958 ];

	ASGS_HUD_execToggleBuyMenu_Parms ToggleBuyMenu_Parms;
	ToggleBuyMenu_Parms.Index = Index;

	this->ProcessEvent ( pFnToggleBuyMenu, &ToggleBuyMenu_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.TogglePauseMenu
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::TogglePauseMenu ( )
{
	static UFunction* pFnTogglePauseMenu = NULL;

	if ( ! pFnTogglePauseMenu )
		pFnTogglePauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 58956 ];

	ASGS_HUD_execTogglePauseMenu_Parms TogglePauseMenu_Parms;

	this->ProcessEvent ( pFnTogglePauseMenu, &TogglePauseMenu_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CloseBuyMenus
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CloseBuyMenus ( )
{
	static UFunction* pFnCloseBuyMenus = NULL;

	if ( ! pFnCloseBuyMenus )
		pFnCloseBuyMenus = (UFunction*) UObject::GObjObjects()->Data[ 58955 ];

	ASGS_HUD_execCloseBuyMenus_Parms CloseBuyMenus_Parms;

	this->ProcessEvent ( pFnCloseBuyMenus, &CloseBuyMenus_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.CloseOtherMenus
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::CloseOtherMenus ( )
{
	static UFunction* pFnCloseOtherMenus = NULL;

	if ( ! pFnCloseOtherMenus )
		pFnCloseOtherMenus = (UFunction*) UObject::GObjObjects()->Data[ 58954 ];

	ASGS_HUD_execCloseOtherMenus_Parms CloseOtherMenus_Parms;

	this->ProcessEvent ( pFnCloseOtherMenus, &CloseOtherMenus_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.OpenNotificationMovie
// [0x00020002] 
// Parameters infos:
// struct FString                 HeaderText                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BodyText                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 OkText                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NoText                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FScriptDelegate         OnOkPressed                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FScriptDelegate         OnNoPressed                    ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_HUD::OpenNotificationMovie ( struct FString HeaderText, struct FString BodyText, struct FString OkText, struct FString NoText, struct FScriptDelegate OnOkPressed, struct FScriptDelegate OnNoPressed )
{
	static UFunction* pFnOpenNotificationMovie = NULL;

	if ( ! pFnOpenNotificationMovie )
		pFnOpenNotificationMovie = (UFunction*) UObject::GObjObjects()->Data[ 58946 ];

	ASGS_HUD_execOpenNotificationMovie_Parms OpenNotificationMovie_Parms;
	memcpy ( &OpenNotificationMovie_Parms.HeaderText, &HeaderText, 0xC );
	memcpy ( &OpenNotificationMovie_Parms.BodyText, &BodyText, 0xC );
	memcpy ( &OpenNotificationMovie_Parms.OkText, &OkText, 0xC );
	memcpy ( &OpenNotificationMovie_Parms.NoText, &NoText, 0xC );
	memcpy ( &OpenNotificationMovie_Parms.OnOkPressed, &OnOkPressed, 0xC );
	memcpy ( &OpenNotificationMovie_Parms.OnNoPressed, &OnNoPressed, 0xC );

	this->ProcessEvent ( pFnOpenNotificationMovie, &OpenNotificationMovie_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.OpenSelectionMovie
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::OpenSelectionMovie ( )
{
	static UFunction* pFnOpenSelectionMovie = NULL;

	if ( ! pFnOpenSelectionMovie )
		pFnOpenSelectionMovie = (UFunction*) UObject::GObjObjects()->Data[ 58944 ];

	ASGS_HUD_execOpenSelectionMovie_Parms OpenSelectionMovie_Parms;

	this->ProcessEvent ( pFnOpenSelectionMovie, &OpenSelectionMovie_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.OpenScores
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::OpenScores ( )
{
	static UFunction* pFnOpenScores = NULL;

	if ( ! pFnOpenScores )
		pFnOpenScores = (UFunction*) UObject::GObjObjects()->Data[ 58942 ];

	ASGS_HUD_execOpenScores_Parms OpenScores_Parms;

	this->ProcessEvent ( pFnOpenScores, &OpenScores_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.cScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_HUD::cScores ( )
{
	static UFunction* pFncScores = NULL;

	if ( ! pFncScores )
		pFncScores = (UFunction*) UObject::GObjObjects()->Data[ 58941 ];

	ASGS_HUD_execcScores_Parms cScores_Parms;

	this->ProcessEvent ( pFncScores, &cScores_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.oScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_HUD::oScores ( )
{
	static UFunction* pFnoScores = NULL;

	if ( ! pFnoScores )
		pFnoScores = (UFunction*) UObject::GObjObjects()->Data[ 58940 ];

	ASGS_HUD_execoScores_Parms oScores_Parms;

	this->ProcessEvent ( pFnoScores, &oScores_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.RemoveMovies
// [0x00020002] 
// Parameters infos:

void ASGS_HUD::RemoveMovies ( )
{
	static UFunction* pFnRemoveMovies = NULL;

	if ( ! pFnRemoveMovies )
		pFnRemoveMovies = (UFunction*) UObject::GObjObjects()->Data[ 58939 ];

	ASGS_HUD_execRemoveMovies_Parms RemoveMovies_Parms;

	this->ProcessEvent ( pFnRemoveMovies, &RemoveMovies_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.ShowBuyMenu
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_HUD::ShowBuyMenu ( int Index )
{
	static UFunction* pFnShowBuyMenu = NULL;

	if ( ! pFnShowBuyMenu )
		pFnShowBuyMenu = (UFunction*) UObject::GObjObjects()->Data[ 58937 ];

	ASGS_HUD_execShowBuyMenu_Parms ShowBuyMenu_Parms;
	ShowBuyMenu_Parms.Index = Index;

	this->ProcessEvent ( pFnShowBuyMenu, &ShowBuyMenu_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.RadioCommandOpen2
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_HUD::RadioCommandOpen2 ( )
{
	static UFunction* pFnRadioCommandOpen2 = NULL;

	if ( ! pFnRadioCommandOpen2 )
		pFnRadioCommandOpen2 = (UFunction*) UObject::GObjObjects()->Data[ 58936 ];

	ASGS_HUD_execRadioCommandOpen2_Parms RadioCommandOpen2_Parms;

	this->ProcessEvent ( pFnRadioCommandOpen2, &RadioCommandOpen2_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.RadioCommandOpen
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_HUD::RadioCommandOpen ( )
{
	static UFunction* pFnRadioCommandOpen = NULL;

	if ( ! pFnRadioCommandOpen )
		pFnRadioCommandOpen = (UFunction*) UObject::GObjObjects()->Data[ 58935 ];

	ASGS_HUD_execRadioCommandOpen_Parms RadioCommandOpen_Parms;

	this->ProcessEvent ( pFnRadioCommandOpen, &RadioCommandOpen_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.DrawHUD
// [0x00820002] 
// Parameters infos:

void ASGS_HUD::DrawHUD ( )
{
	static UFunction* pFnDrawHUD = NULL;

	if ( ! pFnDrawHUD )
		pFnDrawHUD = (UFunction*) UObject::GObjObjects()->Data[ 58926 ];

	ASGS_HUD_execDrawHUD_Parms DrawHUD_Parms;

	this->ProcessEvent ( pFnDrawHUD, &DrawHUD_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.SGSDrawToolTip
// [0x00024102] 
// Parameters infos:
// class UCanvas*                 Cvs                            ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// float                          X                              ( CPF_Parm )
// float                          Y                              ( CPF_Parm )
// float                          U                              ( CPF_Parm )
// float                          V                              ( CPF_Parm )
// float                          UL                             ( CPF_Parm )
// float                          VL                             ( CPF_Parm )
// float                          ResScale                       ( CPF_Parm )
// class UTexture2D*              IconTexture                    ( CPF_OptionalParm | CPF_Parm )
// float                          Alpha                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bGenerator                     ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPickup                        ( CPF_OptionalParm | CPF_Parm )

void ASGS_HUD::SGSDrawToolTip ( class UCanvas* Cvs, class APlayerController* PC, struct FString Command, float X, float Y, float U, float V, float UL, float VL, float ResScale, class UTexture2D* IconTexture, float Alpha, unsigned long bGenerator, unsigned long bPickup )
{
	static UFunction* pFnSGSDrawToolTip = NULL;

	if ( ! pFnSGSDrawToolTip )
		pFnSGSDrawToolTip = (UFunction*) UObject::GObjObjects()->Data[ 58901 ];

	ASGS_HUD_execSGSDrawToolTip_Parms SGSDrawToolTip_Parms;
	SGSDrawToolTip_Parms.Cvs = Cvs;
	SGSDrawToolTip_Parms.PC = PC;
	memcpy ( &SGSDrawToolTip_Parms.Command, &Command, 0xC );
	SGSDrawToolTip_Parms.X = X;
	SGSDrawToolTip_Parms.Y = Y;
	SGSDrawToolTip_Parms.U = U;
	SGSDrawToolTip_Parms.V = V;
	SGSDrawToolTip_Parms.UL = UL;
	SGSDrawToolTip_Parms.VL = VL;
	SGSDrawToolTip_Parms.ResScale = ResScale;
	SGSDrawToolTip_Parms.IconTexture = IconTexture;
	SGSDrawToolTip_Parms.Alpha = Alpha;
	SGSDrawToolTip_Parms.bGenerator = bGenerator;
	SGSDrawToolTip_Parms.bPickup = bPickup;

	this->ProcessEvent ( pFnSGSDrawToolTip, &SGSDrawToolTip_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_HUD::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 58900 ];

	ASGS_HUD_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.DrawPostGameHud
// [0x00020000] 
// Parameters infos:

void ASGS_HUD::DrawPostGameHud ( )
{
	static UFunction* pFnDrawPostGameHud = NULL;

	if ( ! pFnDrawPostGameHud )
		pFnDrawPostGameHud = (UFunction*) UObject::GObjObjects()->Data[ 58899 ];

	ASGS_HUD_execDrawPostGameHud_Parms DrawPostGameHud_Parms;

	this->ProcessEvent ( pFnDrawPostGameHud, &DrawPostGameHud_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.LocalizedMessage
// [0x00024002] 
// Parameters infos:
// class UClass*                  InMessageClass                 ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_Parm )
// struct FString                 CriticalString                 ( CPF_Parm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_Parm )
// float                          Position                       ( CPF_Parm )
// float                          Lifetime                       ( CPF_Parm )
// int                            FontSize                       ( CPF_Parm )
// struct FColor                  DrawColor                      ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void ASGS_HUD::LocalizedMessage ( class UClass* InMessageClass, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, struct FString CriticalString, int Switch, float Position, float Lifetime, int FontSize, struct FColor DrawColor, class UObject* OptionalObject )
{
	static UFunction* pFnLocalizedMessage = NULL;

	if ( ! pFnLocalizedMessage )
		pFnLocalizedMessage = (UFunction*) UObject::GObjObjects()->Data[ 58888 ];

	ASGS_HUD_execLocalizedMessage_Parms LocalizedMessage_Parms;
	LocalizedMessage_Parms.InMessageClass = InMessageClass;
	LocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	LocalizedMessage_Parms.RelatedPRI01 = RelatedPRI01;
	memcpy ( &LocalizedMessage_Parms.CriticalString, &CriticalString, 0xC );
	LocalizedMessage_Parms.Switch = Switch;
	LocalizedMessage_Parms.Position = Position;
	LocalizedMessage_Parms.Lifetime = Lifetime;
	LocalizedMessage_Parms.FontSize = FontSize;
	memcpy ( &LocalizedMessage_Parms.DrawColor, &DrawColor, 0x4 );
	LocalizedMessage_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnLocalizedMessage, &LocalizedMessage_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.NoPressed
// [0x00120000] 
// Parameters infos:

void ASGS_HUD::NoPressed ( )
{
	static UFunction* pFnNoPressed = NULL;

	if ( ! pFnNoPressed )
		pFnNoPressed = (UFunction*) UObject::GObjObjects()->Data[ 58874 ];

	ASGS_HUD_execNoPressed_Parms NoPressed_Parms;

	this->ProcessEvent ( pFnNoPressed, &NoPressed_Parms, NULL );
};

// Function SGSOrion.SGS_HUD.OkPressed
// [0x00120000] 
// Parameters infos:

void ASGS_HUD::OkPressed ( )
{
	static UFunction* pFnOkPressed = NULL;

	if ( ! pFnOkPressed )
		pFnOkPressed = (UFunction*) UObject::GObjObjects()->Data[ 58876 ];

	ASGS_HUD_execOkPressed_Parms OkPressed_Parms;

	this->ProcessEvent ( pFnOkPressed, &OkPressed_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartCloakLoop
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::StartCloakLoop ( )
{
	static UFunction* pFnStartCloakLoop = NULL;

	if ( ! pFnStartCloakLoop )
		pFnStartCloakLoop = (UFunction*) UObject::GObjObjects()->Data[ 60755 ];

	ASGS_Pawn_Soldier_execStartCloakLoop_Parms StartCloakLoop_Parms;

	this->ProcessEvent ( pFnStartCloakLoop, &StartCloakLoop_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GetDrivenVehicleName
// [0x00020102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ASGS_Pawn_Soldier::GetDrivenVehicleName ( )
{
	static UFunction* pFnGetDrivenVehicleName = NULL;

	if ( ! pFnGetDrivenVehicleName )
		pFnGetDrivenVehicleName = (UFunction*) UObject::GObjObjects()->Data[ 51437 ];

	ASGS_Pawn_Soldier_execGetDrivenVehicleName_Parms GetDrivenVehicleName_Parms;

	this->ProcessEvent ( pFnGetDrivenVehicleName, &GetDrivenVehicleName_Parms, NULL );

	return GetDrivenVehicleName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.HasWeaponAlready
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  WeaponType                     ( CPF_Parm )

bool ASGS_Pawn_Soldier::HasWeaponAlready ( class UClass* WeaponType )
{
	static UFunction* pFnHasWeaponAlready = NULL;

	if ( ! pFnHasWeaponAlready )
		pFnHasWeaponAlready = (UFunction*) UObject::GObjObjects()->Data[ 56954 ];

	ASGS_Pawn_Soldier_execHasWeaponAlready_Parms HasWeaponAlready_Parms;
	HasWeaponAlready_Parms.WeaponType = WeaponType;

	this->ProcessEvent ( pFnHasWeaponAlready, &HasWeaponAlready_Parms, NULL );

	return HasWeaponAlready_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.GivePawnWeapon
// [0x00820002] 
// Parameters infos:
// class UClass*                  WeaponType                     ( CPF_Parm )

void ASGS_Pawn_Soldier::GivePawnWeapon ( class UClass* WeaponType )
{
	static UFunction* pFnGivePawnWeapon = NULL;

	if ( ! pFnGivePawnWeapon )
		pFnGivePawnWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60744 ];

	ASGS_Pawn_Soldier_execGivePawnWeapon_Parms GivePawnWeapon_Parms;
	GivePawnWeapon_Parms.WeaponType = WeaponType;

	this->ProcessEvent ( pFnGivePawnWeapon, &GivePawnWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClientSwitchWeapon
// [0x010201C2] 
// Parameters infos:
// class UClass*                  WeaponType                     ( CPF_Parm )

void ASGS_Pawn_Soldier::ClientSwitchWeapon ( class UClass* WeaponType )
{
	static UFunction* pFnClientSwitchWeapon = NULL;

	if ( ! pFnClientSwitchWeapon )
		pFnClientSwitchWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60742 ];

	ASGS_Pawn_Soldier_execClientSwitchWeapon_Parms ClientSwitchWeapon_Parms;
	ClientSwitchWeapon_Parms.WeaponType = WeaponType;

	this->ProcessEvent ( pFnClientSwitchWeapon, &ClientSwitchWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveWeapon
// [0x002200C2] 
// Parameters infos:
// class UClass*                  WeaponType                     ( CPF_Parm )

void ASGS_Pawn_Soldier::GiveWeapon ( class UClass* WeaponType )
{
	static UFunction* pFnGiveWeapon = NULL;

	if ( ! pFnGiveWeapon )
		pFnGiveWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60740 ];

	ASGS_Pawn_Soldier_execGiveWeapon_Parms GiveWeapon_Parms;
	GiveWeapon_Parms.WeaponType = WeaponType;

	this->ProcessEvent ( pFnGiveWeapon, &GiveWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GivePawnWeaponClipSizeUpgrade
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::GivePawnWeaponClipSizeUpgrade ( )
{
	static UFunction* pFnGivePawnWeaponClipSizeUpgrade = NULL;

	if ( ! pFnGivePawnWeaponClipSizeUpgrade )
		pFnGivePawnWeaponClipSizeUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60739 ];

	ASGS_Pawn_Soldier_execGivePawnWeaponClipSizeUpgrade_Parms GivePawnWeaponClipSizeUpgrade_Parms;

	this->ProcessEvent ( pFnGivePawnWeaponClipSizeUpgrade, &GivePawnWeaponClipSizeUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GivePawnWeaponDamageUpgrade
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::GivePawnWeaponDamageUpgrade ( )
{
	static UFunction* pFnGivePawnWeaponDamageUpgrade = NULL;

	if ( ! pFnGivePawnWeaponDamageUpgrade )
		pFnGivePawnWeaponDamageUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60738 ];

	ASGS_Pawn_Soldier_execGivePawnWeaponDamageUpgrade_Parms GivePawnWeaponDamageUpgrade_Parms;

	this->ProcessEvent ( pFnGivePawnWeaponDamageUpgrade, &GivePawnWeaponDamageUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GivePawnWeaponReloadSpeedUpgrade
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::GivePawnWeaponReloadSpeedUpgrade ( )
{
	static UFunction* pFnGivePawnWeaponReloadSpeedUpgrade = NULL;

	if ( ! pFnGivePawnWeaponReloadSpeedUpgrade )
		pFnGivePawnWeaponReloadSpeedUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60737 ];

	ASGS_Pawn_Soldier_execGivePawnWeaponReloadSpeedUpgrade_Parms GivePawnWeaponReloadSpeedUpgrade_Parms;

	this->ProcessEvent ( pFnGivePawnWeaponReloadSpeedUpgrade, &GivePawnWeaponReloadSpeedUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GivePawnWeaponSpeedUpgrade
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::GivePawnWeaponSpeedUpgrade ( )
{
	static UFunction* pFnGivePawnWeaponSpeedUpgrade = NULL;

	if ( ! pFnGivePawnWeaponSpeedUpgrade )
		pFnGivePawnWeaponSpeedUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60736 ];

	ASGS_Pawn_Soldier_execGivePawnWeaponSpeedUpgrade_Parms GivePawnWeaponSpeedUpgrade_Parms;

	this->ProcessEvent ( pFnGivePawnWeaponSpeedUpgrade, &GivePawnWeaponSpeedUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveWeaponDamageUpgrade
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::GiveWeaponDamageUpgrade ( )
{
	static UFunction* pFnGiveWeaponDamageUpgrade = NULL;

	if ( ! pFnGiveWeaponDamageUpgrade )
		pFnGiveWeaponDamageUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60735 ];

	ASGS_Pawn_Soldier_execGiveWeaponDamageUpgrade_Parms GiveWeaponDamageUpgrade_Parms;

	this->ProcessEvent ( pFnGiveWeaponDamageUpgrade, &GiveWeaponDamageUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveWeaponClipSizeUpgrade
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::GiveWeaponClipSizeUpgrade ( )
{
	static UFunction* pFnGiveWeaponClipSizeUpgrade = NULL;

	if ( ! pFnGiveWeaponClipSizeUpgrade )
		pFnGiveWeaponClipSizeUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60734 ];

	ASGS_Pawn_Soldier_execGiveWeaponClipSizeUpgrade_Parms GiveWeaponClipSizeUpgrade_Parms;

	this->ProcessEvent ( pFnGiveWeaponClipSizeUpgrade, &GiveWeaponClipSizeUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveWeaponReloadSpeedUpgrade
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::GiveWeaponReloadSpeedUpgrade ( )
{
	static UFunction* pFnGiveWeaponReloadSpeedUpgrade = NULL;

	if ( ! pFnGiveWeaponReloadSpeedUpgrade )
		pFnGiveWeaponReloadSpeedUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60733 ];

	ASGS_Pawn_Soldier_execGiveWeaponReloadSpeedUpgrade_Parms GiveWeaponReloadSpeedUpgrade_Parms;

	this->ProcessEvent ( pFnGiveWeaponReloadSpeedUpgrade, &GiveWeaponReloadSpeedUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveWeaponSpeedUpgrade
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::GiveWeaponSpeedUpgrade ( )
{
	static UFunction* pFnGiveWeaponSpeedUpgrade = NULL;

	if ( ! pFnGiveWeaponSpeedUpgrade )
		pFnGiveWeaponSpeedUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60732 ];

	ASGS_Pawn_Soldier_execGiveWeaponSpeedUpgrade_Parms GiveWeaponSpeedUpgrade_Parms;

	this->ProcessEvent ( pFnGiveWeaponSpeedUpgrade, &GiveWeaponSpeedUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveAbilityUpgrade
// [0x002200C2] 
// Parameters infos:
// int                            Upgrade                        ( CPF_Parm )

void ASGS_Pawn_Soldier::GiveAbilityUpgrade ( int Upgrade )
{
	static UFunction* pFnGiveAbilityUpgrade = NULL;

	if ( ! pFnGiveAbilityUpgrade )
		pFnGiveAbilityUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60730 ];

	ASGS_Pawn_Soldier_execGiveAbilityUpgrade_Parms GiveAbilityUpgrade_Parms;
	GiveAbilityUpgrade_Parms.Upgrade = Upgrade;

	this->ProcessEvent ( pFnGiveAbilityUpgrade, &GiveAbilityUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveRollUpgrade
// [0x002200C2] 
// Parameters infos:
// int                            Upgrade                        ( CPF_Parm )

void ASGS_Pawn_Soldier::GiveRollUpgrade ( int Upgrade )
{
	static UFunction* pFnGiveRollUpgrade = NULL;

	if ( ! pFnGiveRollUpgrade )
		pFnGiveRollUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60728 ];

	ASGS_Pawn_Soldier_execGiveRollUpgrade_Parms GiveRollUpgrade_Parms;
	GiveRollUpgrade_Parms.Upgrade = Upgrade;

	this->ProcessEvent ( pFnGiveRollUpgrade, &GiveRollUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveJumpUpgrade
// [0x002200C2] 
// Parameters infos:
// int                            Upgrade                        ( CPF_Parm )

void ASGS_Pawn_Soldier::GiveJumpUpgrade ( int Upgrade )
{
	static UFunction* pFnGiveJumpUpgrade = NULL;

	if ( ! pFnGiveJumpUpgrade )
		pFnGiveJumpUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60726 ];

	ASGS_Pawn_Soldier_execGiveJumpUpgrade_Parms GiveJumpUpgrade_Parms;
	GiveJumpUpgrade_Parms.Upgrade = Upgrade;

	this->ProcessEvent ( pFnGiveJumpUpgrade, &GiveJumpUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GiveMeleeUpgrade
// [0x002200C2] 
// Parameters infos:
// int                            Upgrade                        ( CPF_Parm )

void ASGS_Pawn_Soldier::GiveMeleeUpgrade ( int Upgrade )
{
	static UFunction* pFnGiveMeleeUpgrade = NULL;

	if ( ! pFnGiveMeleeUpgrade )
		pFnGiveMeleeUpgrade = (UFunction*) UObject::GObjObjects()->Data[ 60724 ];

	ASGS_Pawn_Soldier_execGiveMeleeUpgrade_Parms GiveMeleeUpgrade_Parms;
	GiveMeleeUpgrade_Parms.Upgrade = Upgrade;

	this->ProcessEvent ( pFnGiveMeleeUpgrade, &GiveMeleeUpgrade_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.KilledBy
// [0x00020002] 
// Parameters infos:
// class APawn*                   EventInstigator                ( CPF_Parm )

void ASGS_Pawn_Soldier::KilledBy ( class APawn* EventInstigator )
{
	static UFunction* pFnKilledBy = NULL;

	if ( ! pFnKilledBy )
		pFnKilledBy = (UFunction*) UObject::GObjObjects()->Data[ 60722 ];

	ASGS_Pawn_Soldier_execKilledBy_Parms KilledBy_Parms;
	KilledBy_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnKilledBy, &KilledBy_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.IsJetPacking
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsJetPacking ( )
{
	static UFunction* pFnIsJetPacking = NULL;

	if ( ! pFnIsJetPacking )
		pFnIsJetPacking = (UFunction*) UObject::GObjObjects()->Data[ 53302 ];

	ASGS_Pawn_Soldier_execIsJetPacking_Parms IsJetPacking_Parms;

	this->ProcessEvent ( pFnIsJetPacking, &IsJetPacking_Parms, NULL );

	return IsJetPacking_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.ShouldGib
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  UTDamageType                   ( CPF_Parm )

bool ASGS_Pawn_Soldier::ShouldGib ( class UClass* UTDamageType )
{
	static UFunction* pFnShouldGib = NULL;

	if ( ! pFnShouldGib )
		pFnShouldGib = (UFunction*) UObject::GObjObjects()->Data[ 60719 ];

	ASGS_Pawn_Soldier_execShouldGib_Parms ShouldGib_Parms;
	ShouldGib_Parms.UTDamageType = UTDamageType;

	this->ProcessEvent ( pFnShouldGib, &ShouldGib_Parms, NULL );

	return ShouldGib_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.UpdateEyeHeight
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Pawn_Soldier::eventUpdateEyeHeight ( float DeltaTime )
{
	static UFunction* pFnUpdateEyeHeight = NULL;

	if ( ! pFnUpdateEyeHeight )
		pFnUpdateEyeHeight = (UFunction*) UObject::GObjObjects()->Data[ 60704 ];

	ASGS_Pawn_Soldier_eventUpdateEyeHeight_Parms UpdateEyeHeight_Parms;
	UpdateEyeHeight_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateEyeHeight, &UpdateEyeHeight_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GetCloakValue
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Pawn_Soldier::GetCloakValue ( )
{
	static UFunction* pFnGetCloakValue = NULL;

	if ( ! pFnGetCloakValue )
		pFnGetCloakValue = (UFunction*) UObject::GObjObjects()->Data[ 60702 ];

	ASGS_Pawn_Soldier_execGetCloakValue_Parms GetCloakValue_Parms;

	this->ProcessEvent ( pFnGetCloakValue, &GetCloakValue_Parms, NULL );

	return GetCloakValue_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.BecomeViewTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ASGS_Pawn_Soldier::eventBecomeViewTarget ( class APlayerController* PC )
{
	static UFunction* pFnBecomeViewTarget = NULL;

	if ( ! pFnBecomeViewTarget )
		pFnBecomeViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 60700 ];

	ASGS_Pawn_Soldier_eventBecomeViewTarget_Parms BecomeViewTarget_Parms;
	BecomeViewTarget_Parms.PC = PC;

	this->ProcessEvent ( pFnBecomeViewTarget, &BecomeViewTarget_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.EndViewTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ASGS_Pawn_Soldier::eventEndViewTarget ( class APlayerController* PC )
{
	static UFunction* pFnEndViewTarget = NULL;

	if ( ! pFnEndViewTarget )
		pFnEndViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 60698 ];

	ASGS_Pawn_Soldier_eventEndViewTarget_Parms EndViewTarget_Parms;
	EndViewTarget_Parms.PC = PC;

	this->ProcessEvent ( pFnEndViewTarget, &EndViewTarget_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetMeshVisibility
// [0x00020102] 
// Parameters infos:
// unsigned long                  bVisible                       ( CPF_Parm )

void ASGS_Pawn_Soldier::SetMeshVisibility ( unsigned long bVisible )
{
	static UFunction* pFnSetMeshVisibility = NULL;

	if ( ! pFnSetMeshVisibility )
		pFnSetMeshVisibility = (UFunction*) UObject::GObjObjects()->Data[ 60695 ];

	ASGS_Pawn_Soldier_execSetMeshVisibility_Parms SetMeshVisibility_Parms;
	SetMeshVisibility_Parms.bVisible = bVisible;

	this->ProcessEvent ( pFnSetMeshVisibility, &SetMeshVisibility_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ASGS_Pawn_Soldier::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 55968 ];

	ASGS_Pawn_Soldier_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Pawn_Soldier::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 60688 ];

	ASGS_Pawn_Soldier_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetWeapAnimType
// [0x00020100] 
// Parameters infos:
// unsigned char                  AnimType                       ( CPF_Parm )

void ASGS_Pawn_Soldier::SetWeapAnimType ( unsigned char AnimType )
{
	static UFunction* pFnSetWeapAnimType = NULL;

	if ( ! pFnSetWeapAnimType )
		pFnSetWeapAnimType = (UFunction*) UObject::GObjObjects()->Data[ 60686 ];

	ASGS_Pawn_Soldier_execSetWeapAnimType_Parms SetWeapAnimType_Parms;
	SetWeapAnimType_Parms.AnimType = AnimType;

	this->ProcessEvent ( pFnSetWeapAnimType, &SetWeapAnimType_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Pawn_Soldier::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 60684 ];

	ASGS_Pawn_Soldier_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetMyKiller
// [0x010201C2] 
// Parameters infos:
// class APawn*                   Killer                         ( CPF_Parm )

void ASGS_Pawn_Soldier::SetMyKiller ( class APawn* Killer )
{
	static UFunction* pFnSetMyKiller = NULL;

	if ( ! pFnSetMyKiller )
		pFnSetMyKiller = (UFunction*) UObject::GObjObjects()->Data[ 60682 ];

	ASGS_Pawn_Soldier_execSetMyKiller_Parms SetMyKiller_Parms;
	SetMyKiller_Parms.Killer = Killer;

	this->ProcessEvent ( pFnSetMyKiller, &SetMyKiller_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StopFlyingUp
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::StopFlyingUp ( )
{
	static UFunction* pFnStopFlyingUp = NULL;

	if ( ! pFnStopFlyingUp )
		pFnStopFlyingUp = (UFunction*) UObject::GObjObjects()->Data[ 60681 ];

	ASGS_Pawn_Soldier_execStopFlyingUp_Parms StopFlyingUp_Parms;

	this->ProcessEvent ( pFnStopFlyingUp, &StopFlyingUp_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StopGrabbing
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::StopGrabbing ( )
{
	static UFunction* pFnStopGrabbing = NULL;

	if ( ! pFnStopGrabbing )
		pFnStopGrabbing = (UFunction*) UObject::GObjObjects()->Data[ 60680 ];

	ASGS_Pawn_Soldier_execStopGrabbing_Parms StopGrabbing_Parms;

	this->ProcessEvent ( pFnStopGrabbing, &StopGrabbing_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ShouldStillBeGrabbing
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::ShouldStillBeGrabbing ( )
{
	static UFunction* pFnShouldStillBeGrabbing = NULL;

	if ( ! pFnShouldStillBeGrabbing )
		pFnShouldStillBeGrabbing = (UFunction*) UObject::GObjObjects()->Data[ 53146 ];

	ASGS_Pawn_Soldier_execShouldStillBeGrabbing_Parms ShouldStillBeGrabbing_Parms;

	this->ProcessEvent ( pFnShouldStillBeGrabbing, &ShouldStillBeGrabbing_Parms, NULL );

	return ShouldStillBeGrabbing_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.TryToGrab
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::TryToGrab ( )
{
	static UFunction* pFnTryToGrab = NULL;

	if ( ! pFnTryToGrab )
		pFnTryToGrab = (UFunction*) UObject::GObjObjects()->Data[ 60679 ];

	ASGS_Pawn_Soldier_execTryToGrab_Parms TryToGrab_Parms;

	this->ProcessEvent ( pFnTryToGrab, &TryToGrab_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.CalcThirdPersonCam
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ASGS_Pawn_Soldier::CalcThirdPersonCam ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcThirdPersonCam = NULL;

	if ( ! pFnCalcThirdPersonCam )
		pFnCalcThirdPersonCam = (UFunction*) UObject::GObjObjects()->Data[ 60665 ];

	ASGS_Pawn_Soldier_execCalcThirdPersonCam_Parms CalcThirdPersonCam_Parms;
	CalcThirdPersonCam_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcThirdPersonCam, &CalcThirdPersonCam_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcThirdPersonCam_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcThirdPersonCam_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcThirdPersonCam_Parms.out_FOV;

	return CalcThirdPersonCam_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.CalcCamera
// [0x00420102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ASGS_Pawn_Soldier::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 60659 ];

	ASGS_Pawn_Soldier_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.GetGrabbedView
// [0x00C20102] 
// Parameters infos:
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )

void ASGS_Pawn_Soldier::GetGrabbedView ( struct FVector* out_CamLoc, struct FRotator* out_CamRot )
{
	static UFunction* pFnGetGrabbedView = NULL;

	if ( ! pFnGetGrabbedView )
		pFnGetGrabbedView = (UFunction*) UObject::GObjObjects()->Data[ 60655 ];

	ASGS_Pawn_Soldier_execGetGrabbedView_Parms GetGrabbedView_Parms;

	this->ProcessEvent ( pFnGetGrabbedView, &GetGrabbedView_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &GetGrabbedView_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &GetGrabbedView_Parms.out_CamRot, 0xC );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void ASGS_Pawn_Soldier::eventStartDriving ( class AVehicle* V )
{
	static UFunction* pFnStartDriving = NULL;

	if ( ! pFnStartDriving )
		pFnStartDriving = (UFunction*) UObject::GObjObjects()->Data[ 60623 ];

	ASGS_Pawn_Soldier_eventStartDriving_Parms StartDriving_Parms;
	StartDriving_Parms.V = V;

	this->ProcessEvent ( pFnStartDriving, &StartDriving_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_Pawn_Soldier::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 60608 ];

	ASGS_Pawn_Soldier_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.InCombat
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::InCombat ( )
{
	static UFunction* pFnInCombat = NULL;

	if ( ! pFnInCombat )
		pFnInCombat = (UFunction*) UObject::GObjObjects()->Data[ 60606 ];

	ASGS_Pawn_Soldier_execInCombat_Parms InCombat_Parms;

	this->ProcessEvent ( pFnInCombat, &InCombat_Parms, NULL );

	return InCombat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.UpdateHateTimer
// [0x01020142] 
// Parameters infos:

void ASGS_Pawn_Soldier::UpdateHateTimer ( )
{
	static UFunction* pFnUpdateHateTimer = NULL;

	if ( ! pFnUpdateHateTimer )
		pFnUpdateHateTimer = (UFunction*) UObject::GObjObjects()->Data[ 60605 ];

	ASGS_Pawn_Soldier_execUpdateHateTimer_Parms UpdateHateTimer_Parms;

	this->ProcessEvent ( pFnUpdateHateTimer, &UpdateHateTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_Pawn_Soldier::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 60601 ];

	ASGS_Pawn_Soldier_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ReallyPlayDying
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::ReallyPlayDying ( )
{
	static UFunction* pFnReallyPlayDying = NULL;

	if ( ! pFnReallyPlayDying )
		pFnReallyPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 60600 ];

	ASGS_Pawn_Soldier_execReallyPlayDying_Parms ReallyPlayDying_Parms;

	this->ProcessEvent ( pFnReallyPlayDying, &ReallyPlayDying_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PlayDying
// [0x00020102] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLoc                         ( CPF_Parm )

void ASGS_Pawn_Soldier::PlayDying ( class UClass* DamageType, struct FVector HitLoc )
{
	static UFunction* pFnPlayDying = NULL;

	if ( ! pFnPlayDying )
		pFnPlayDying = (UFunction*) UObject::GObjObjects()->Data[ 60597 ];

	ASGS_Pawn_Soldier_execPlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy ( &PlayDying_Parms.HitLoc, &HitLoc, 0xC );

	this->ProcessEvent ( pFnPlayDying, &PlayDying_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStopJetpackLevel
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStopJetpackLevel ( )
{
	static UFunction* pFnServerStopJetpackLevel = NULL;

	if ( ! pFnServerStopJetpackLevel )
		pFnServerStopJetpackLevel = (UFunction*) UObject::GObjObjects()->Data[ 60596 ];

	ASGS_Pawn_Soldier_execServerStopJetpackLevel_Parms ServerStopJetpackLevel_Parms;

	this->ProcessEvent ( pFnServerStopJetpackLevel, &ServerStopJetpackLevel_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStartJetpackLevel
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStartJetpackLevel ( )
{
	static UFunction* pFnServerStartJetpackLevel = NULL;

	if ( ! pFnServerStartJetpackLevel )
		pFnServerStartJetpackLevel = (UFunction*) UObject::GObjObjects()->Data[ 60594 ];

	ASGS_Pawn_Soldier_execServerStartJetpackLevel_Parms ServerStartJetpackLevel_Parms;

	this->ProcessEvent ( pFnServerStartJetpackLevel, &ServerStartJetpackLevel_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DeactivateSkill
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::DeactivateSkill ( )
{
	static UFunction* pFnDeactivateSkill = NULL;

	if ( ! pFnDeactivateSkill )
		pFnDeactivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60593 ];

	ASGS_Pawn_Soldier_execDeactivateSkill_Parms DeactivateSkill_Parms;

	this->ProcessEvent ( pFnDeactivateSkill, &DeactivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerDeactivateSkill
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerDeactivateSkill ( )
{
	static UFunction* pFnServerDeactivateSkill = NULL;

	if ( ! pFnServerDeactivateSkill )
		pFnServerDeactivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60592 ];

	ASGS_Pawn_Soldier_execServerDeactivateSkill_Parms ServerDeactivateSkill_Parms;

	this->ProcessEvent ( pFnServerDeactivateSkill, &ServerDeactivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ActivateSkill
// [0x010201C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ActivateSkill ( )
{
	static UFunction* pFnActivateSkill = NULL;

	if ( ! pFnActivateSkill )
		pFnActivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60591 ];

	ASGS_Pawn_Soldier_execActivateSkill_Parms ActivateSkill_Parms;

	this->ProcessEvent ( pFnActivateSkill, &ActivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerActivateSkill
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerActivateSkill ( )
{
	static UFunction* pFnServerActivateSkill = NULL;

	if ( ! pFnServerActivateSkill )
		pFnServerActivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60590 ];

	ASGS_Pawn_Soldier_execServerActivateSkill_Parms ServerActivateSkill_Parms;

	this->ProcessEvent ( pFnServerActivateSkill, &ServerActivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SpawnVehicle
// [0x002200C2] 
// Parameters infos:
// class UClass*                  V                              ( CPF_Parm )

void ASGS_Pawn_Soldier::SpawnVehicle ( class UClass* V )
{
	static UFunction* pFnSpawnVehicle = NULL;

	if ( ! pFnSpawnVehicle )
		pFnSpawnVehicle = (UFunction*) UObject::GObjObjects()->Data[ 60584 ];

	ASGS_Pawn_Soldier_execSpawnVehicle_Parms SpawnVehicle_Parms;
	SpawnVehicle_Parms.V = V;

	this->ProcessEvent ( pFnSpawnVehicle, &SpawnVehicle_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.IsRolling
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsRolling ( )
{
	static UFunction* pFnIsRolling = NULL;

	if ( ! pFnIsRolling )
		pFnIsRolling = (UFunction*) UObject::GObjObjects()->Data[ 60582 ];

	ASGS_Pawn_Soldier_execIsRolling_Parms IsRolling_Parms;

	this->ProcessEvent ( pFnIsRolling, &IsRolling_Parms, NULL );

	return IsRolling_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerRoll
// [0x002200C2] 
// Parameters infos:
// unsigned char                  rDir                           ( CPF_Parm )

void ASGS_Pawn_Soldier::ServerRoll ( unsigned char rDir )
{
	static UFunction* pFnServerRoll = NULL;

	if ( ! pFnServerRoll )
		pFnServerRoll = (UFunction*) UObject::GObjObjects()->Data[ 60580 ];

	ASGS_Pawn_Soldier_execServerRoll_Parms ServerRoll_Parms;
	ServerRoll_Parms.rDir = rDir;

	this->ProcessEvent ( pFnServerRoll, &ServerRoll_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.AdjustDamage
// [0x00C20002] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            InDamage                       ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void ASGS_Pawn_Soldier::AdjustDamage ( class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser, int* InDamage, struct FVector* Momentum )
{
	static UFunction* pFnAdjustDamage = NULL;

	if ( ! pFnAdjustDamage )
		pFnAdjustDamage = (UFunction*) UObject::GObjObjects()->Data[ 60566 ];

	ASGS_Pawn_Soldier_execAdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &AdjustDamage_Parms.HitLocation, &HitLocation, 0xC );
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy ( &AdjustDamage_Parms.HitInfo, &HitInfo, 0x1C );
	AdjustDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnAdjustDamage, &AdjustDamage_Parms, NULL );

	if ( InDamage )
		*InDamage = AdjustDamage_Parms.InDamage;

	if ( Momentum )
		memcpy ( Momentum, &AdjustDamage_Parms.Momentum, 0xC );
};

// Function SGSOrion.SGS_Pawn_Soldier.Save_SwitchToPreviousWeapon
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::Save_SwitchToPreviousWeapon ( )
{
	static UFunction* pFnSave_SwitchToPreviousWeapon = NULL;

	if ( ! pFnSave_SwitchToPreviousWeapon )
		pFnSave_SwitchToPreviousWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60565 ];

	ASGS_Pawn_Soldier_execSave_SwitchToPreviousWeapon_Parms Save_SwitchToPreviousWeapon_Parms;

	this->ProcessEvent ( pFnSave_SwitchToPreviousWeapon, &Save_SwitchToPreviousWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SkillBar_Hide
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::SkillBar_Hide ( )
{
	static UFunction* pFnSkillBar_Hide = NULL;

	if ( ! pFnSkillBar_Hide )
		pFnSkillBar_Hide = (UFunction*) UObject::GObjObjects()->Data[ 60564 ];

	ASGS_Pawn_Soldier_execSkillBar_Hide_Parms SkillBar_Hide_Parms;

	this->ProcessEvent ( pFnSkillBar_Hide, &SkillBar_Hide_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoShieldHitEffect
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Pawn_Soldier::DoShieldHitEffect ( float DeltaTime )
{
	static UFunction* pFnDoShieldHitEffect = NULL;

	if ( ! pFnDoShieldHitEffect )
		pFnDoShieldHitEffect = (UFunction*) UObject::GObjObjects()->Data[ 60559 ];

	ASGS_Pawn_Soldier_execDoShieldHitEffect_Parms DoShieldHitEffect_Parms;
	DoShieldHitEffect_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnDoShieldHitEffect, &DoShieldHitEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.UpdateWeaponIdles
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::UpdateWeaponIdles ( )
{
	static UFunction* pFnUpdateWeaponIdles = NULL;

	if ( ! pFnUpdateWeaponIdles )
		pFnUpdateWeaponIdles = (UFunction*) UObject::GObjObjects()->Data[ 60558 ];

	ASGS_Pawn_Soldier_execUpdateWeaponIdles_Parms UpdateWeaponIdles_Parms;

	this->ProcessEvent ( pFnUpdateWeaponIdles, &UpdateWeaponIdles_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStopSwooping
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStopSwooping ( )
{
	static UFunction* pFnServerStopSwooping = NULL;

	if ( ! pFnServerStopSwooping )
		pFnServerStopSwooping = (UFunction*) UObject::GObjObjects()->Data[ 60557 ];

	ASGS_Pawn_Soldier_execServerStopSwooping_Parms ServerStopSwooping_Parms;

	this->ProcessEvent ( pFnServerStopSwooping, &ServerStopSwooping_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStartSwooping
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStartSwooping ( )
{
	static UFunction* pFnServerStartSwooping = NULL;

	if ( ! pFnServerStartSwooping )
		pFnServerStartSwooping = (UFunction*) UObject::GObjObjects()->Data[ 60556 ];

	ASGS_Pawn_Soldier_execServerStartSwooping_Parms ServerStartSwooping_Parms;

	this->ProcessEvent ( pFnServerStartSwooping, &ServerStartSwooping_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStopLanding
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStopLanding ( )
{
	static UFunction* pFnServerStopLanding = NULL;

	if ( ! pFnServerStopLanding )
		pFnServerStopLanding = (UFunction*) UObject::GObjObjects()->Data[ 60555 ];

	ASGS_Pawn_Soldier_execServerStopLanding_Parms ServerStopLanding_Parms;

	this->ProcessEvent ( pFnServerStopLanding, &ServerStopLanding_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStartLanding
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStartLanding ( )
{
	static UFunction* pFnServerStartLanding = NULL;

	if ( ! pFnServerStartLanding )
		pFnServerStartLanding = (UFunction*) UObject::GObjObjects()->Data[ 60554 ];

	ASGS_Pawn_Soldier_execServerStartLanding_Parms ServerStartLanding_Parms;

	this->ProcessEvent ( pFnServerStartLanding, &ServerStartLanding_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.UpdateDinoViewPitch
// [0x00820102] 
// Parameters infos:

void ASGS_Pawn_Soldier::UpdateDinoViewPitch ( )
{
	static UFunction* pFnUpdateDinoViewPitch = NULL;

	if ( ! pFnUpdateDinoViewPitch )
		pFnUpdateDinoViewPitch = (UFunction*) UObject::GObjObjects()->Data[ 60543 ];

	ASGS_Pawn_Soldier_execUpdateDinoViewPitch_Parms UpdateDinoViewPitch_Parms;

	this->ProcessEvent ( pFnUpdateDinoViewPitch, &UpdateDinoViewPitch_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.LockOn
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::LockOn ( )
{
	static UFunction* pFnLockOn = NULL;

	if ( ! pFnLockOn )
		pFnLockOn = (UFunction*) UObject::GObjObjects()->Data[ 60538 ];

	ASGS_Pawn_Soldier_execLockOn_Parms LockOn_Parms;

	this->ProcessEvent ( pFnLockOn, &LockOn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerCancelLockOn
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerCancelLockOn ( )
{
	static UFunction* pFnServerCancelLockOn = NULL;

	if ( ! pFnServerCancelLockOn )
		pFnServerCancelLockOn = (UFunction*) UObject::GObjObjects()->Data[ 60537 ];

	ASGS_Pawn_Soldier_execServerCancelLockOn_Parms ServerCancelLockOn_Parms;

	this->ProcessEvent ( pFnServerCancelLockOn, &ServerCancelLockOn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerTryLockOn
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerTryLockOn ( )
{
	static UFunction* pFnServerTryLockOn = NULL;

	if ( ! pFnServerTryLockOn )
		pFnServerTryLockOn = (UFunction*) UObject::GObjObjects()->Data[ 60536 ];

	ASGS_Pawn_Soldier_execServerTryLockOn_Parms ServerTryLockOn_Parms;

	this->ProcessEvent ( pFnServerTryLockOn, &ServerTryLockOn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GetLeftGrabPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Pawn_Soldier::GetLeftGrabPos ( )
{
	static UFunction* pFnGetLeftGrabPos = NULL;

	if ( ! pFnGetLeftGrabPos )
		pFnGetLeftGrabPos = (UFunction*) UObject::GObjObjects()->Data[ 53152 ];

	ASGS_Pawn_Soldier_execGetLeftGrabPos_Parms GetLeftGrabPos_Parms;

	this->ProcessEvent ( pFnGetLeftGrabPos, &GetLeftGrabPos_Parms, NULL );

	return GetLeftGrabPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.GetRightGrabPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Pawn_Soldier::GetRightGrabPos ( )
{
	static UFunction* pFnGetRightGrabPos = NULL;

	if ( ! pFnGetRightGrabPos )
		pFnGetRightGrabPos = (UFunction*) UObject::GObjObjects()->Data[ 53150 ];

	ASGS_Pawn_Soldier_execGetRightGrabPos_Parms GetRightGrabPos_Parms;

	this->ProcessEvent ( pFnGetRightGrabPos, &GetRightGrabPos_Parms, NULL );

	return GetRightGrabPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.GetGrabPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Pawn_Soldier::GetGrabPos ( )
{
	static UFunction* pFnGetGrabPos = NULL;

	if ( ! pFnGetGrabPos )
		pFnGetGrabPos = (UFunction*) UObject::GObjObjects()->Data[ 53148 ];

	ASGS_Pawn_Soldier_execGetGrabPos_Parms GetGrabPos_Parms;

	this->ProcessEvent ( pFnGetGrabPos, &GetGrabPos_Parms, NULL );

	return GetGrabPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.DropPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// struct FName                   Side                           ( CPF_Parm )
// class AController*             C                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )

void ASGS_Pawn_Soldier::DropPawn ( class APawn* P, struct FName Side, class AController* C, float Damage )
{
	static UFunction* pFnDropPawn = NULL;

	if ( ! pFnDropPawn )
		pFnDropPawn = (UFunction*) UObject::GObjObjects()->Data[ 60528 ];

	ASGS_Pawn_Soldier_execDropPawn_Parms DropPawn_Parms;
	DropPawn_Parms.P = P;
	memcpy ( &DropPawn_Parms.Side, &Side, 0x8 );
	DropPawn_Parms.C = C;
	DropPawn_Parms.Damage = Damage;

	this->ProcessEvent ( pFnDropPawn, &DropPawn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GrabPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )
// struct FName                   Socket                         ( CPF_Parm )

void ASGS_Pawn_Soldier::GrabPawn ( class APawn* P, struct FName Socket )
{
	static UFunction* pFnGrabPawn = NULL;

	if ( ! pFnGrabPawn )
		pFnGrabPawn = (UFunction*) UObject::GObjObjects()->Data[ 60524 ];

	ASGS_Pawn_Soldier_execGrabPawn_Parms GrabPawn_Parms;
	GrabPawn_Parms.P = P;
	memcpy ( &GrabPawn_Parms.Socket, &Socket, 0x8 );

	this->ProcessEvent ( pFnGrabPawn, &GrabPawn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.TakeGrabDamage
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::TakeGrabDamage ( )
{
	static UFunction* pFnTakeGrabDamage = NULL;

	if ( ! pFnTakeGrabDamage )
		pFnTakeGrabDamage = (UFunction*) UObject::GObjObjects()->Data[ 60523 ];

	ASGS_Pawn_Soldier_execTakeGrabDamage_Parms TakeGrabDamage_Parms;

	this->ProcessEvent ( pFnTakeGrabDamage, &TakeGrabDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GrabMe
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::GrabMe ( )
{
	static UFunction* pFnGrabMe = NULL;

	if ( ! pFnGrabMe )
		pFnGrabMe = (UFunction*) UObject::GObjObjects()->Data[ 60522 ];

	ASGS_Pawn_Soldier_execGrabMe_Parms GrabMe_Parms;

	this->ProcessEvent ( pFnGrabMe, &GrabMe_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.AdjustDinoToes
// [0x00820102] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void ASGS_Pawn_Soldier::AdjustDinoToes ( float ElapsedTime )
{
	static UFunction* pFnAdjustDinoToes = NULL;

	if ( ! pFnAdjustDinoToes )
		pFnAdjustDinoToes = (UFunction*) UObject::GObjObjects()->Data[ 60510 ];

	ASGS_Pawn_Soldier_execAdjustDinoToes_Parms AdjustDinoToes_Parms;
	AdjustDinoToes_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnAdjustDinoToes, &AdjustDinoToes_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.AdjustFootPosition
// [0x00820102] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void ASGS_Pawn_Soldier::AdjustFootPosition ( float ElapsedTime )
{
	static UFunction* pFnAdjustFootPosition = NULL;

	if ( ! pFnAdjustFootPosition )
		pFnAdjustFootPosition = (UFunction*) UObject::GObjObjects()->Data[ 60497 ];

	ASGS_Pawn_Soldier_execAdjustFootPosition_Parms AdjustFootPosition_Parms;
	AdjustFootPosition_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnAdjustFootPosition, &AdjustFootPosition_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void ASGS_Pawn_Soldier::eventTick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60482 ];

	ASGS_Pawn_Soldier_eventTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.EndWobble
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::EndWobble ( )
{
	static UFunction* pFnEndWobble = NULL;

	if ( ! pFnEndWobble )
		pFnEndWobble = (UFunction*) UObject::GObjObjects()->Data[ 60481 ];

	ASGS_Pawn_Soldier_execEndWobble_Parms EndWobble_Parms;

	this->ProcessEvent ( pFnEndWobble, &EndWobble_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PerformWobble
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::PerformWobble ( )
{
	static UFunction* pFnPerformWobble = NULL;

	if ( ! pFnPerformWobble )
		pFnPerformWobble = (UFunction*) UObject::GObjObjects()->Data[ 60480 ];

	ASGS_Pawn_Soldier_execPerformWobble_Parms PerformWobble_Parms;

	this->ProcessEvent ( pFnPerformWobble, &PerformWobble_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoWobble
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DoWobble ( )
{
	static UFunction* pFnDoWobble = NULL;

	if ( ! pFnDoWobble )
		pFnDoWobble = (UFunction*) UObject::GObjObjects()->Data[ 60479 ];

	ASGS_Pawn_Soldier_execDoWobble_Parms DoWobble_Parms;

	this->ProcessEvent ( pFnDoWobble, &DoWobble_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PossessedBy
// [0x00020102] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Pawn_Soldier::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 60476 ];

	ASGS_Pawn_Soldier_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GetPlayerReplicationInfoClass
// [0x00020102] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ASGS_Pawn_Soldier::GetPlayerReplicationInfoClass ( )
{
	static UFunction* pFnGetPlayerReplicationInfoClass = NULL;

	if ( ! pFnGetPlayerReplicationInfoClass )
		pFnGetPlayerReplicationInfoClass = (UFunction*) UObject::GObjObjects()->Data[ 60474 ];

	ASGS_Pawn_Soldier_execGetPlayerReplicationInfoClass_Parms GetPlayerReplicationInfoClass_Parms;

	this->ProcessEvent ( pFnGetPlayerReplicationInfoClass, &GetPlayerReplicationInfoClass_Parms, NULL );

	return GetPlayerReplicationInfoClass_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.SetMovementPhysics
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::SetMovementPhysics ( )
{
	static UFunction* pFnSetMovementPhysics = NULL;

	if ( ! pFnSetMovementPhysics )
		pFnSetMovementPhysics = (UFunction*) UObject::GObjObjects()->Data[ 60473 ];

	ASGS_Pawn_Soldier_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

	this->ProcessEvent ( pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStopCloak
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStopCloak ( )
{
	static UFunction* pFnServerStopCloak = NULL;

	if ( ! pFnServerStopCloak )
		pFnServerStopCloak = (UFunction*) UObject::GObjObjects()->Data[ 60472 ];

	ASGS_Pawn_Soldier_execServerStopCloak_Parms ServerStopCloak_Parms;

	this->ProcessEvent ( pFnServerStopCloak, &ServerStopCloak_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Pawn_Soldier::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 60470 ];

	ASGS_Pawn_Soldier_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.IsRoaring
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsRoaring ( )
{
	static UFunction* pFnIsRoaring = NULL;

	if ( ! pFnIsRoaring )
		pFnIsRoaring = (UFunction*) UObject::GObjObjects()->Data[ 60468 ];

	ASGS_Pawn_Soldier_execIsRoaring_Parms IsRoaring_Parms;

	this->ProcessEvent ( pFnIsRoaring, &IsRoaring_Parms, NULL );

	return IsRoaring_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.IsPlayingCustomAnim
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsPlayingCustomAnim ( )
{
	static UFunction* pFnIsPlayingCustomAnim = NULL;

	if ( ! pFnIsPlayingCustomAnim )
		pFnIsPlayingCustomAnim = (UFunction*) UObject::GObjObjects()->Data[ 53184 ];

	ASGS_Pawn_Soldier_execIsPlayingCustomAnim_Parms IsPlayingCustomAnim_Parms;

	this->ProcessEvent ( pFnIsPlayingCustomAnim, &IsPlayingCustomAnim_Parms, NULL );

	return IsPlayingCustomAnim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerLand
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerLand ( )
{
	static UFunction* pFnServerLand = NULL;

	if ( ! pFnServerLand )
		pFnServerLand = (UFunction*) UObject::GObjObjects()->Data[ 60467 ];

	ASGS_Pawn_Soldier_execServerLand_Parms ServerLand_Parms;

	this->ProcessEvent ( pFnServerLand, &ServerLand_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerFly
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerFly ( )
{
	static UFunction* pFnServerFly = NULL;

	if ( ! pFnServerFly )
		pFnServerFly = (UFunction*) UObject::GObjObjects()->Data[ 60466 ];

	ASGS_Pawn_Soldier_execServerFly_Parms ServerFly_Parms;

	this->ProcessEvent ( pFnServerFly, &ServerFly_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DinoSecondaryAttack
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DinoSecondaryAttack ( )
{
	static UFunction* pFnDinoSecondaryAttack = NULL;

	if ( ! pFnDinoSecondaryAttack )
		pFnDinoSecondaryAttack = (UFunction*) UObject::GObjObjects()->Data[ 60465 ];

	ASGS_Pawn_Soldier_execDinoSecondaryAttack_Parms DinoSecondaryAttack_Parms;

	this->ProcessEvent ( pFnDinoSecondaryAttack, &DinoSecondaryAttack_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoDinoAttack
// [0x00020002] 
// Parameters infos:
// struct FDinoAttack             ATTACK                         ( CPF_Parm )

void ASGS_Pawn_Soldier::DoDinoAttack ( struct FDinoAttack ATTACK )
{
	static UFunction* pFnDoDinoAttack = NULL;

	if ( ! pFnDoDinoAttack )
		pFnDoDinoAttack = (UFunction*) UObject::GObjObjects()->Data[ 60463 ];

	ASGS_Pawn_Soldier_execDoDinoAttack_Parms DoDinoAttack_Parms;
	memcpy ( &DoDinoAttack_Parms.ATTACK, &ATTACK, 0xC );

	this->ProcessEvent ( pFnDoDinoAttack, &DoDinoAttack_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerDinoAttack
// [0x002200C2] 
// Parameters infos:
// struct FDinoAttack             ATTACK                         ( CPF_Parm )

void ASGS_Pawn_Soldier::ServerDinoAttack ( struct FDinoAttack ATTACK )
{
	static UFunction* pFnServerDinoAttack = NULL;

	if ( ! pFnServerDinoAttack )
		pFnServerDinoAttack = (UFunction*) UObject::GObjObjects()->Data[ 60461 ];

	ASGS_Pawn_Soldier_execServerDinoAttack_Parms ServerDinoAttack_Parms;
	memcpy ( &ServerDinoAttack_Parms.ATTACK, &ATTACK, 0xC );

	this->ProcessEvent ( pFnServerDinoAttack, &ServerDinoAttack_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClearDinoAltAttackTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::ClearDinoAltAttackTimer ( )
{
	static UFunction* pFnClearDinoAltAttackTimer = NULL;

	if ( ! pFnClearDinoAltAttackTimer )
		pFnClearDinoAltAttackTimer = (UFunction*) UObject::GObjObjects()->Data[ 60460 ];

	ASGS_Pawn_Soldier_execClearDinoAltAttackTimer_Parms ClearDinoAltAttackTimer_Parms;

	this->ProcessEvent ( pFnClearDinoAltAttackTimer, &ClearDinoAltAttackTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartDinoAltAttackTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::StartDinoAltAttackTimer ( )
{
	static UFunction* pFnStartDinoAltAttackTimer = NULL;

	if ( ! pFnStartDinoAltAttackTimer )
		pFnStartDinoAltAttackTimer = (UFunction*) UObject::GObjObjects()->Data[ 60459 ];

	ASGS_Pawn_Soldier_execStartDinoAltAttackTimer_Parms StartDinoAltAttackTimer_Parms;

	this->ProcessEvent ( pFnStartDinoAltAttackTimer, &StartDinoAltAttackTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DinoPrimaryAttack
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DinoPrimaryAttack ( )
{
	static UFunction* pFnDinoPrimaryAttack = NULL;

	if ( ! pFnDinoPrimaryAttack )
		pFnDinoPrimaryAttack = (UFunction*) UObject::GObjObjects()->Data[ 60458 ];

	ASGS_Pawn_Soldier_execDinoPrimaryAttack_Parms DinoPrimaryAttack_Parms;

	this->ProcessEvent ( pFnDinoPrimaryAttack, &DinoPrimaryAttack_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClearDinoAttackTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::ClearDinoAttackTimer ( )
{
	static UFunction* pFnClearDinoAttackTimer = NULL;

	if ( ! pFnClearDinoAttackTimer )
		pFnClearDinoAttackTimer = (UFunction*) UObject::GObjObjects()->Data[ 60457 ];

	ASGS_Pawn_Soldier_execClearDinoAttackTimer_Parms ClearDinoAttackTimer_Parms;

	this->ProcessEvent ( pFnClearDinoAttackTimer, &ClearDinoAttackTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartDinoAttackTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::StartDinoAttackTimer ( )
{
	static UFunction* pFnStartDinoAttackTimer = NULL;

	if ( ! pFnStartDinoAttackTimer )
		pFnStartDinoAttackTimer = (UFunction*) UObject::GObjObjects()->Data[ 60456 ];

	ASGS_Pawn_Soldier_execStartDinoAttackTimer_Parms StartDinoAttackTimer_Parms;

	this->ProcessEvent ( pFnStartDinoAttackTimer, &StartDinoAttackTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.IsCloaked
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsCloaked ( )
{
	static UFunction* pFnIsCloaked = NULL;

	if ( ! pFnIsCloaked )
		pFnIsCloaked = (UFunction*) UObject::GObjObjects()->Data[ 52916 ];

	ASGS_Pawn_Soldier_execIsCloaked_Parms IsCloaked_Parms;

	this->ProcessEvent ( pFnIsCloaked, &IsCloaked_Parms, NULL );

	return IsCloaked_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.TakeFallingDamage
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::TakeFallingDamage ( )
{
	static UFunction* pFnTakeFallingDamage = NULL;

	if ( ! pFnTakeFallingDamage )
		pFnTakeFallingDamage = (UFunction*) UObject::GObjObjects()->Data[ 60452 ];

	ASGS_Pawn_Soldier_execTakeFallingDamage_Parms TakeFallingDamage_Parms;

	this->ProcessEvent ( pFnTakeFallingDamage, &TakeFallingDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_Pawn_Soldier::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 60444 ];

	ASGS_Pawn_Soldier_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.IsHeadShot
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ASGS_Pawn_Soldier::IsHeadShot ( struct FVector HitLocation )
{
	static UFunction* pFnIsHeadShot = NULL;

	if ( ! pFnIsHeadShot )
		pFnIsHeadShot = (UFunction*) UObject::GObjObjects()->Data[ 60440 ];

	ASGS_Pawn_Soldier_execIsHeadShot_Parms IsHeadShot_Parms;
	memcpy ( &IsHeadShot_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnIsHeadShot, &IsHeadShot_Parms, NULL );

	return IsHeadShot_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.IsShotOnHead
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 RayDir                         ( CPF_Parm )

bool ASGS_Pawn_Soldier::IsShotOnHead ( struct FVector HitLocation, struct FVector RayDir )
{
	static UFunction* pFnIsShotOnHead = NULL;

	if ( ! pFnIsShotOnHead )
		pFnIsShotOnHead = (UFunction*) UObject::GObjObjects()->Data[ 60436 ];

	ASGS_Pawn_Soldier_execIsShotOnHead_Parms IsShotOnHead_Parms;
	memcpy ( &IsShotOnHead_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &IsShotOnHead_Parms.RayDir, &RayDir, 0xC );

	this->ProcessEvent ( pFnIsShotOnHead, &IsShotOnHead_Parms, NULL );

	return IsShotOnHead_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.IsDino
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::IsDino ( )
{
	static UFunction* pFnIsDino = NULL;

	if ( ! pFnIsDino )
		pFnIsDino = (UFunction*) UObject::GObjObjects()->Data[ 51216 ];

	ASGS_Pawn_Soldier_execIsDino_Parms IsDino_Parms;

	this->ProcessEvent ( pFnIsDino, &IsDino_Parms, NULL );

	return IsDino_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.TextureHack
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::TextureHack ( )
{
	static UFunction* pFnTextureHack = NULL;

	if ( ! pFnTextureHack )
		pFnTextureHack = (UFunction*) UObject::GObjObjects()->Data[ 60435 ];

	ASGS_Pawn_Soldier_execTextureHack_Parms TextureHack_Parms;

	this->ProcessEvent ( pFnTextureHack, &TextureHack_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetCharacterClassFromInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )

void ASGS_Pawn_Soldier::SetCharacterClassFromInfo ( class UClass* Info )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 60429 ];

	ASGS_Pawn_Soldier_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetSkin
// [0x00020100] 
// Parameters infos:
// class UMaterial*               NewMaterial                    ( CPF_Parm )

void ASGS_Pawn_Soldier::SetSkin ( class UMaterial* NewMaterial )
{
	static UFunction* pFnSetSkin = NULL;

	if ( ! pFnSetSkin )
		pFnSetSkin = (UFunction*) UObject::GObjObjects()->Data[ 60427 ];

	ASGS_Pawn_Soldier_execSetSkin_Parms SetSkin_Parms;
	SetSkin_Parms.NewMaterial = NewMaterial;

	this->ProcessEvent ( pFnSetSkin, &SetSkin_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60425 ];

	ASGS_Pawn_Soldier_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DetachVaultWeapon
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DetachVaultWeapon ( )
{
	static UFunction* pFnDetachVaultWeapon = NULL;

	if ( ! pFnDetachVaultWeapon )
		pFnDetachVaultWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60424 ];

	ASGS_Pawn_Soldier_execDetachVaultWeapon_Parms DetachVaultWeapon_Parms;

	this->ProcessEvent ( pFnDetachVaultWeapon, &DetachVaultWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoVault
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DoVault ( )
{
	static UFunction* pFnDoVault = NULL;

	if ( ! pFnDoVault )
		pFnDoVault = (UFunction*) UObject::GObjObjects()->Data[ 60423 ];

	ASGS_Pawn_Soldier_execDoVault_Parms DoVault_Parms;

	this->ProcessEvent ( pFnDoVault, &DoVault_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.NotReadyToVault
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::NotReadyToVault ( )
{
	static UFunction* pFnNotReadyToVault = NULL;

	if ( ! pFnNotReadyToVault )
		pFnNotReadyToVault = (UFunction*) UObject::GObjObjects()->Data[ 60422 ];

	ASGS_Pawn_Soldier_execNotReadyToVault_Parms NotReadyToVault_Parms;

	this->ProcessEvent ( pFnNotReadyToVault, &NotReadyToVault_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClientStopChargingGenerator
// [0x010201C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ClientStopChargingGenerator ( )
{
	static UFunction* pFnClientStopChargingGenerator = NULL;

	if ( ! pFnClientStopChargingGenerator )
		pFnClientStopChargingGenerator = (UFunction*) UObject::GObjObjects()->Data[ 60421 ];

	ASGS_Pawn_Soldier_execClientStopChargingGenerator_Parms ClientStopChargingGenerator_Parms;

	this->ProcessEvent ( pFnClientStopChargingGenerator, &ClientStopChargingGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStopChargingGenerator
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStopChargingGenerator ( )
{
	static UFunction* pFnServerStopChargingGenerator = NULL;

	if ( ! pFnServerStopChargingGenerator )
		pFnServerStopChargingGenerator = (UFunction*) UObject::GObjObjects()->Data[ 60420 ];

	ASGS_Pawn_Soldier_execServerStopChargingGenerator_Parms ServerStopChargingGenerator_Parms;

	this->ProcessEvent ( pFnServerStopChargingGenerator, &ServerStopChargingGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerStartChargingGenerator
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerStartChargingGenerator ( )
{
	static UFunction* pFnServerStartChargingGenerator = NULL;

	if ( ! pFnServerStartChargingGenerator )
		pFnServerStartChargingGenerator = (UFunction*) UObject::GObjObjects()->Data[ 60419 ];

	ASGS_Pawn_Soldier_execServerStartChargingGenerator_Parms ServerStartChargingGenerator_Parms;

	this->ProcessEvent ( pFnServerStartChargingGenerator, &ServerStartChargingGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PlayChargingSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_Pawn_Soldier::PlayChargingSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayChargingSound = NULL;

	if ( ! pFnPlayChargingSound )
		pFnPlayChargingSound = (UFunction*) UObject::GObjObjects()->Data[ 60417 ];

	ASGS_Pawn_Soldier_execPlayChargingSound_Parms PlayChargingSound_Parms;
	PlayChargingSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayChargingSound, &PlayChargingSound_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.HitWall
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )
// class UPrimitiveComponent*     WallComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Pawn_Soldier::eventHitWall ( struct FVector HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp )
{
	static UFunction* pFnHitWall = NULL;

	if ( ! pFnHitWall )
		pFnHitWall = (UFunction*) UObject::GObjObjects()->Data[ 60412 ];

	ASGS_Pawn_Soldier_eventHitWall_Parms HitWall_Parms;
	memcpy ( &HitWall_Parms.HitNormal, &HitNormal, 0xC );
	HitWall_Parms.Wall = Wall;
	HitWall_Parms.WallComp = WallComp;

	this->ProcessEvent ( pFnHitWall, &HitWall_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Bump
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_Pawn_Soldier::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 60403 ];

	ASGS_Pawn_Soldier_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.gibbedBy
// [0x00020002] 
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ASGS_Pawn_Soldier::gibbedBy ( class AActor* Other )
{
	static UFunction* pFngibbedBy = NULL;

	if ( ! pFngibbedBy )
		pFngibbedBy = (UFunction*) UObject::GObjObjects()->Data[ 60401 ];

	ASGS_Pawn_Soldier_execgibbedBy_Parms gibbedBy_Parms;
	gibbedBy_Parms.Other = Other;

	this->ProcessEvent ( pFngibbedBy, &gibbedBy_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoSuperJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ASGS_Pawn_Soldier::DoSuperJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoSuperJump = NULL;

	if ( ! pFnDoSuperJump )
		pFnDoSuperJump = (UFunction*) UObject::GObjObjects()->Data[ 53713 ];

	ASGS_Pawn_Soldier_execDoSuperJump_Parms DoSuperJump_Parms;
	DoSuperJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoSuperJump, &DoSuperJump_Parms, NULL );

	return DoSuperJump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ASGS_Pawn_Soldier::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 60395 ];

	ASGS_Pawn_Soldier_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.EndRoll
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::EndRoll ( )
{
	static UFunction* pFnEndRoll = NULL;

	if ( ! pFnEndRoll )
		pFnEndRoll = (UFunction*) UObject::GObjObjects()->Data[ 60394 ];

	ASGS_Pawn_Soldier_execEndRoll_Parms EndRoll_Parms;

	this->ProcessEvent ( pFnEndRoll, &EndRoll_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PlayerRoll
// [0x00820002] 
// Parameters infos:
// unsigned char                  rDir                           ( CPF_Parm )

void ASGS_Pawn_Soldier::PlayerRoll ( unsigned char rDir )
{
	static UFunction* pFnPlayerRoll = NULL;

	if ( ! pFnPlayerRoll )
		pFnPlayerRoll = (UFunction*) UObject::GObjObjects()->Data[ 60388 ];

	ASGS_Pawn_Soldier_execPlayerRoll_Parms PlayerRoll_Parms;
	PlayerRoll_Parms.rDir = rDir;

	this->ProcessEvent ( pFnPlayerRoll, &PlayerRoll_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PerformRoll
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::PerformRoll ( )
{
	static UFunction* pFnPerformRoll = NULL;

	if ( ! pFnPerformRoll )
		pFnPerformRoll = (UFunction*) UObject::GObjObjects()->Data[ 60387 ];

	ASGS_Pawn_Soldier_execPerformRoll_Parms PerformRoll_Parms;

	this->ProcessEvent ( pFnPerformRoll, &PerformRoll_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DetachTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::DetachTimer ( )
{
	static UFunction* pFnDetachTimer = NULL;

	if ( ! pFnDetachTimer )
		pFnDetachTimer = (UFunction*) UObject::GObjObjects()->Data[ 60386 ];

	ASGS_Pawn_Soldier_execDetachTimer_Parms DetachTimer_Parms;

	this->ProcessEvent ( pFnDetachTimer, &DetachTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClearRollTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::ClearRollTimer ( )
{
	static UFunction* pFnClearRollTimer = NULL;

	if ( ! pFnClearRollTimer )
		pFnClearRollTimer = (UFunction*) UObject::GObjObjects()->Data[ 60385 ];

	ASGS_Pawn_Soldier_execClearRollTimer_Parms ClearRollTimer_Parms;

	this->ProcessEvent ( pFnClearRollTimer, &ClearRollTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StartRollTimer
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::StartRollTimer ( )
{
	static UFunction* pFnStartRollTimer = NULL;

	if ( ! pFnStartRollTimer )
		pFnStartRollTimer = (UFunction*) UObject::GObjObjects()->Data[ 60384 ];

	ASGS_Pawn_Soldier_execStartRollTimer_Parms StartRollTimer_Parms;

	this->ProcessEvent ( pFnStartRollTimer, &StartRollTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SetRollNodes
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::SetRollNodes ( )
{
	static UFunction* pFnSetRollNodes = NULL;

	if ( ! pFnSetRollNodes )
		pFnSetRollNodes = (UFunction*) UObject::GObjObjects()->Data[ 60383 ];

	ASGS_Pawn_Soldier_execSetRollNodes_Parms SetRollNodes_Parms;

	this->ProcessEvent ( pFnSetRollNodes, &SetRollNodes_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ShouldCloak
// [0x00020100] 
// Parameters infos:

void ASGS_Pawn_Soldier::ShouldCloak ( )
{
	static UFunction* pFnShouldCloak = NULL;

	if ( ! pFnShouldCloak )
		pFnShouldCloak = (UFunction*) UObject::GObjObjects()->Data[ 60382 ];

	ASGS_Pawn_Soldier_execShouldCloak_Parms ShouldCloak_Parms;

	this->ProcessEvent ( pFnShouldCloak, &ShouldCloak_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.OnAnimPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UAnimNodeSequence*       SeqNode                        ( CPF_Parm )

void ASGS_Pawn_Soldier::eventOnAnimPlay ( class UAnimNodeSequence* SeqNode )
{
	static UFunction* pFnOnAnimPlay = NULL;

	if ( ! pFnOnAnimPlay )
		pFnOnAnimPlay = (UFunction*) UObject::GObjObjects()->Data[ 60380 ];

	ASGS_Pawn_Soldier_eventOnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;

	this->ProcessEvent ( pFnOnAnimPlay, &OnAnimPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ASGS_Pawn_Soldier::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 60378 ];

	ASGS_Pawn_Soldier_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.JumpOffPawn
// [0x00020000] 
// Parameters infos:

void ASGS_Pawn_Soldier::JumpOffPawn ( )
{
	static UFunction* pFnJumpOffPawn = NULL;

	if ( ! pFnJumpOffPawn )
		pFnJumpOffPawn = (UFunction*) UObject::GObjObjects()->Data[ 60377 ];

	ASGS_Pawn_Soldier_execJumpOffPawn_Parms JumpOffPawn_Parms;

	this->ProcessEvent ( pFnJumpOffPawn, &JumpOffPawn_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.FaceRotation
// [0x00020102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Pawn_Soldier::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 60374 ];

	ASGS_Pawn_Soldier_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClearCustomAnim
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::ClearCustomAnim ( )
{
	static UFunction* pFnClearCustomAnim = NULL;

	if ( ! pFnClearCustomAnim )
		pFnClearCustomAnim = (UFunction*) UObject::GObjObjects()->Data[ 60373 ];

	ASGS_Pawn_Soldier_execClearCustomAnim_Parms ClearCustomAnim_Parms;

	this->ProcessEvent ( pFnClearCustomAnim, &ClearCustomAnim_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.FixAnimBug
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::FixAnimBug ( )
{
	static UFunction* pFnFixAnimBug = NULL;

	if ( ! pFnFixAnimBug )
		pFnFixAnimBug = (UFunction*) UObject::GObjObjects()->Data[ 60372 ];

	ASGS_Pawn_Soldier_execFixAnimBug_Parms FixAnimBug_Parms;

	this->ProcessEvent ( pFnFixAnimBug, &FixAnimBug_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Fatality_Release
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::Fatality_Release ( )
{
	static UFunction* pFnFatality_Release = NULL;

	if ( ! pFnFatality_Release )
		pFnFatality_Release = (UFunction*) UObject::GObjObjects()->Data[ 60371 ];

	ASGS_Pawn_Soldier_execFatality_Release_Parms Fatality_Release_Parms;

	this->ProcessEvent ( pFnFatality_Release, &Fatality_Release_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.FinishMe
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::FinishMe ( )
{
	static UFunction* pFnFinishMe = NULL;

	if ( ! pFnFinishMe )
		pFnFinishMe = (UFunction*) UObject::GObjObjects()->Data[ 60370 ];

	ASGS_Pawn_Soldier_execFinishMe_Parms FinishMe_Parms;

	this->ProcessEvent ( pFnFinishMe, &FinishMe_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Fatality_Grab
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::Fatality_Grab ( )
{
	static UFunction* pFnFatality_Grab = NULL;

	if ( ! pFnFatality_Grab )
		pFnFatality_Grab = (UFunction*) UObject::GObjObjects()->Data[ 60366 ];

	ASGS_Pawn_Soldier_execFatality_Grab_Parms Fatality_Grab_Parms;

	this->ProcessEvent ( pFnFatality_Grab, &Fatality_Grab_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.TRexFix
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::TRexFix ( )
{
	static UFunction* pFnTRexFix = NULL;

	if ( ! pFnTRexFix )
		pFnTRexFix = (UFunction*) UObject::GObjObjects()->Data[ 60365 ];

	ASGS_Pawn_Soldier_execTRexFix_Parms TRexFix_Parms;

	this->ProcessEvent ( pFnTRexFix, &TRexFix_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Cleanup
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 60364 ];

	ASGS_Pawn_Soldier_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.AnimDone
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::AnimDone ( )
{
	static UFunction* pFnAnimDone = NULL;

	if ( ! pFnAnimDone )
		pFnAnimDone = (UFunction*) UObject::GObjObjects()->Data[ 60363 ];

	ASGS_Pawn_Soldier_execAnimDone_Parms AnimDone_Parms;

	this->ProcessEvent ( pFnAnimDone, &AnimDone_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.Release
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::Release ( )
{
	static UFunction* pFnRelease = NULL;

	if ( ! pFnRelease )
		pFnRelease = (UFunction*) UObject::GObjObjects()->Data[ 60362 ];

	ASGS_Pawn_Soldier_execRelease_Parms Release_Parms;

	this->ProcessEvent ( pFnRelease, &Release_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DropCredits
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::DropCredits ( )
{
	static UFunction* pFnDropCredits = NULL;

	if ( ! pFnDropCredits )
		pFnDropCredits = (UFunction*) UObject::GObjObjects()->Data[ 60359 ];

	ASGS_Pawn_Soldier_execDropCredits_Parms DropCredits_Parms;

	this->ProcessEvent ( pFnDropCredits, &DropCredits_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ThrowActiveWeapon
// [0x00024002] 
// Parameters infos:
// unsigned long                  bDestroyWeap                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_Pawn_Soldier::ThrowActiveWeapon ( unsigned long bDestroyWeap )
{
	static UFunction* pFnThrowActiveWeapon = NULL;

	if ( ! pFnThrowActiveWeapon )
		pFnThrowActiveWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60357 ];

	ASGS_Pawn_Soldier_execThrowActiveWeapon_Parms ThrowActiveWeapon_Parms;
	ThrowActiveWeapon_Parms.bDestroyWeap = bDestroyWeap;

	this->ProcessEvent ( pFnThrowActiveWeapon, &ThrowActiveWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.SmashOrThrow
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::SmashOrThrow ( )
{
	static UFunction* pFnSmashOrThrow = NULL;

	if ( ! pFnSmashOrThrow )
		pFnSmashOrThrow = (UFunction*) UObject::GObjObjects()->Data[ 60353 ];

	ASGS_Pawn_Soldier_execSmashOrThrow_Parms SmashOrThrow_Parms;

	this->ProcessEvent ( pFnSmashOrThrow, &SmashOrThrow_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.HeadShake
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::HeadShake ( )
{
	static UFunction* pFnHeadShake = NULL;

	if ( ! pFnHeadShake )
		pFnHeadShake = (UFunction*) UObject::GObjObjects()->Data[ 60350 ];

	ASGS_Pawn_Soldier_execHeadShake_Parms HeadShake_Parms;

	this->ProcessEvent ( pFnHeadShake, &HeadShake_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClientIgnoreLookInput
// [0x010201C2] 
// Parameters infos:
// unsigned long                  ignore                         ( CPF_Parm )

void ASGS_Pawn_Soldier::ClientIgnoreLookInput ( unsigned long ignore )
{
	static UFunction* pFnClientIgnoreLookInput = NULL;

	if ( ! pFnClientIgnoreLookInput )
		pFnClientIgnoreLookInput = (UFunction*) UObject::GObjObjects()->Data[ 60348 ];

	ASGS_Pawn_Soldier_execClientIgnoreLookInput_Parms ClientIgnoreLookInput_Parms;
	ClientIgnoreLookInput_Parms.ignore = ignore;

	this->ProcessEvent ( pFnClientIgnoreLookInput, &ClientIgnoreLookInput_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ClientIgnoreMoveInput
// [0x010201C2] 
// Parameters infos:
// unsigned long                  ignore                         ( CPF_Parm )

void ASGS_Pawn_Soldier::ClientIgnoreMoveInput ( unsigned long ignore )
{
	static UFunction* pFnClientIgnoreMoveInput = NULL;

	if ( ! pFnClientIgnoreMoveInput )
		pFnClientIgnoreMoveInput = (UFunction*) UObject::GObjObjects()->Data[ 60346 ];

	ASGS_Pawn_Soldier_execClientIgnoreMoveInput_Parms ClientIgnoreMoveInput_Parms;
	ClientIgnoreMoveInput_Parms.ignore = ignore;

	this->ProcessEvent ( pFnClientIgnoreMoveInput, &ClientIgnoreMoveInput_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.CanFinish
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Soldier::CanFinish ( )
{
	static UFunction* pFnCanFinish = NULL;

	if ( ! pFnCanFinish )
		pFnCanFinish = (UFunction*) UObject::GObjObjects()->Data[ 60342 ];

	ASGS_Pawn_Soldier_execCanFinish_Parms CanFinish_Parms;

	this->ProcessEvent ( pFnCanFinish, &CanFinish_Parms, NULL );

	return CanFinish_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.CancelLand
// [0x00020002] 
// Parameters infos:

void ASGS_Pawn_Soldier::CancelLand ( )
{
	static UFunction* pFnCancelLand = NULL;

	if ( ! pFnCancelLand )
		pFnCancelLand = (UFunction*) UObject::GObjObjects()->Data[ 60341 ];

	ASGS_Pawn_Soldier_execCancelLand_Parms CancelLand_Parms;

	this->ProcessEvent ( pFnCancelLand, &CancelLand_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.HideRock
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::HideRock ( )
{
	static UFunction* pFnHideRock = NULL;

	if ( ! pFnHideRock )
		pFnHideRock = (UFunction*) UObject::GObjObjects()->Data[ 60340 ];

	ASGS_Pawn_Soldier_execHideRock_Parms HideRock_Parms;

	this->ProcessEvent ( pFnHideRock, &HideRock_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ShowRock
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::ShowRock ( )
{
	static UFunction* pFnShowRock = NULL;

	if ( ! pFnShowRock )
		pFnShowRock = (UFunction*) UObject::GObjObjects()->Data[ 60339 ];

	ASGS_Pawn_Soldier_execShowRock_Parms ShowRock_Parms;

	this->ProcessEvent ( pFnShowRock, &ShowRock_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.EndTaunt
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::EndTaunt ( )
{
	static UFunction* pFnEndTaunt = NULL;

	if ( ! pFnEndTaunt )
		pFnEndTaunt = (UFunction*) UObject::GObjObjects()->Data[ 60338 ];

	ASGS_Pawn_Soldier_execEndTaunt_Parms EndTaunt_Parms;

	this->ProcessEvent ( pFnEndTaunt, &EndTaunt_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.PlayCustomAnim
// [0x00024102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   AnimName                       ( CPF_Parm )
// float                          Rate                           ( CPF_Parm )
// float                          BlendInTime                    ( CPF_OptionalParm | CPF_Parm )
// float                          BlendOutTime                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLooping                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bOverride                      ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bHalfSlot                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRoar                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bOverrideAnim                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLegs                          ( CPF_OptionalParm | CPF_Parm )

float ASGS_Pawn_Soldier::PlayCustomAnim ( struct FName AnimName, float Rate, float BlendInTime, float BlendOutTime, unsigned long bLooping, unsigned long bOverride, float StartTime, unsigned long bHalfSlot, unsigned long bRoar, unsigned long bOverrideAnim, unsigned long bLegs )
{
	static UFunction* pFnPlayCustomAnim = NULL;

	if ( ! pFnPlayCustomAnim )
		pFnPlayCustomAnim = (UFunction*) UObject::GObjObjects()->Data[ 53141 ];

	ASGS_Pawn_Soldier_execPlayCustomAnim_Parms PlayCustomAnim_Parms;
	memcpy ( &PlayCustomAnim_Parms.AnimName, &AnimName, 0x8 );
	PlayCustomAnim_Parms.Rate = Rate;
	PlayCustomAnim_Parms.BlendInTime = BlendInTime;
	PlayCustomAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnim_Parms.bLooping = bLooping;
	PlayCustomAnim_Parms.bOverride = bOverride;
	PlayCustomAnim_Parms.StartTime = StartTime;
	PlayCustomAnim_Parms.bHalfSlot = bHalfSlot;
	PlayCustomAnim_Parms.bRoar = bRoar;
	PlayCustomAnim_Parms.bOverrideAnim = bOverrideAnim;
	PlayCustomAnim_Parms.bLegs = bLegs;

	this->ProcessEvent ( pFnPlayCustomAnim, &PlayCustomAnim_Parms, NULL );

	return PlayCustomAnim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Pawn_Soldier.PlayWeaponSlot
// [0x00020102] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_Pawn_Soldier::PlayWeaponSlot ( int Index )
{
	static UFunction* pFnPlayWeaponSlot = NULL;

	if ( ! pFnPlayWeaponSlot )
		pFnPlayWeaponSlot = (UFunction*) UObject::GObjObjects()->Data[ 60324 ];

	ASGS_Pawn_Soldier_execPlayWeaponSlot_Parms PlayWeaponSlot_Parms;
	PlayWeaponSlot_Parms.Index = Index;

	this->ProcessEvent ( pFnPlayWeaponSlot, &PlayWeaponSlot_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.OnRanOver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ASVehicle*               Vehicle                        ( CPF_Parm )
// class UPrimitiveComponent*     RunOverComponent               ( CPF_Parm | CPF_EditInline )
// int                            WheelIndex                     ( CPF_Parm )

void ASGS_Pawn_Soldier::eventOnRanOver ( class ASVehicle* Vehicle, class UPrimitiveComponent* RunOverComponent, int WheelIndex )
{
	static UFunction* pFnOnRanOver = NULL;

	if ( ! pFnOnRanOver )
		pFnOnRanOver = (UFunction*) UObject::GObjObjects()->Data[ 60319 ];

	ASGS_Pawn_Soldier_eventOnRanOver_Parms OnRanOver_Parms;
	OnRanOver_Parms.Vehicle = Vehicle;
	OnRanOver_Parms.RunOverComponent = RunOverComponent;
	OnRanOver_Parms.WheelIndex = WheelIndex;

	this->ProcessEvent ( pFnOnRanOver, &OnRanOver_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.TossMe
// [0x00820102] 
// Parameters infos:

void ASGS_Pawn_Soldier::TossMe ( )
{
	static UFunction* pFnTossMe = NULL;

	if ( ! pFnTossMe )
		pFnTossMe = (UFunction*) UObject::GObjObjects()->Data[ 60315 ];

	ASGS_Pawn_Soldier_execTossMe_Parms TossMe_Parms;

	this->ProcessEvent ( pFnTossMe, &TossMe_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StopShieldRestoredEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::StopShieldRestoredEffect ( )
{
	static UFunction* pFnStopShieldRestoredEffect = NULL;

	if ( ! pFnStopShieldRestoredEffect )
		pFnStopShieldRestoredEffect = (UFunction*) UObject::GObjObjects()->Data[ 60314 ];

	ASGS_Pawn_Soldier_execStopShieldRestoredEffect_Parms StopShieldRestoredEffect_Parms;

	this->ProcessEvent ( pFnStopShieldRestoredEffect, &StopShieldRestoredEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoShieldRestoredEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::DoShieldRestoredEffect ( )
{
	static UFunction* pFnDoShieldRestoredEffect = NULL;

	if ( ! pFnDoShieldRestoredEffect )
		pFnDoShieldRestoredEffect = (UFunction*) UObject::GObjObjects()->Data[ 60313 ];

	ASGS_Pawn_Soldier_execDoShieldRestoredEffect_Parms DoShieldRestoredEffect_Parms;

	this->ProcessEvent ( pFnDoShieldRestoredEffect, &DoShieldRestoredEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StopShieldDepletedEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::StopShieldDepletedEffect ( )
{
	static UFunction* pFnStopShieldDepletedEffect = NULL;

	if ( ! pFnStopShieldDepletedEffect )
		pFnStopShieldDepletedEffect = (UFunction*) UObject::GObjObjects()->Data[ 60312 ];

	ASGS_Pawn_Soldier_execStopShieldDepletedEffect_Parms StopShieldDepletedEffect_Parms;

	this->ProcessEvent ( pFnStopShieldDepletedEffect, &StopShieldDepletedEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoShieldDepletedEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::DoShieldDepletedEffect ( )
{
	static UFunction* pFnDoShieldDepletedEffect = NULL;

	if ( ! pFnDoShieldDepletedEffect )
		pFnDoShieldDepletedEffect = (UFunction*) UObject::GObjObjects()->Data[ 60311 ];

	ASGS_Pawn_Soldier_execDoShieldDepletedEffect_Parms DoShieldDepletedEffect_Parms;

	this->ProcessEvent ( pFnDoShieldDepletedEffect, &DoShieldDepletedEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.StopCloakEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::StopCloakEffect ( )
{
	static UFunction* pFnStopCloakEffect = NULL;

	if ( ! pFnStopCloakEffect )
		pFnStopCloakEffect = (UFunction*) UObject::GObjObjects()->Data[ 60310 ];

	ASGS_Pawn_Soldier_execStopCloakEffect_Parms StopCloakEffect_Parms;

	this->ProcessEvent ( pFnStopCloakEffect, &StopCloakEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ServerDoTaunt
// [0x002200C2] 
// Parameters infos:

void ASGS_Pawn_Soldier::ServerDoTaunt ( )
{
	static UFunction* pFnServerDoTaunt = NULL;

	if ( ! pFnServerDoTaunt )
		pFnServerDoTaunt = (UFunction*) UObject::GObjObjects()->Data[ 60309 ];

	ASGS_Pawn_Soldier_execServerDoTaunt_Parms ServerDoTaunt_Parms;

	this->ProcessEvent ( pFnServerDoTaunt, &ServerDoTaunt_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.DoCloakEffect
// [0x00020102] 
// Parameters infos:

void ASGS_Pawn_Soldier::DoCloakEffect ( )
{
	static UFunction* pFnDoCloakEffect = NULL;

	if ( ! pFnDoCloakEffect )
		pFnDoCloakEffect = (UFunction*) UObject::GObjObjects()->Data[ 60308 ];

	ASGS_Pawn_Soldier_execDoCloakEffect_Parms DoCloakEffect_Parms;

	this->ProcessEvent ( pFnDoCloakEffect, &DoCloakEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Pawn_Soldier::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 60304 ];

	ASGS_Pawn_Soldier_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.TossInventory
// [0x00824002] 
// Parameters infos:
// class AInventory*              Inv                            ( CPF_Parm )
// struct FVector                 ForceVelocity                  ( CPF_OptionalParm | CPF_Parm )

void ASGS_Pawn_Soldier::TossInventory ( class AInventory* Inv, struct FVector ForceVelocity )
{
	static UFunction* pFnTossInventory = NULL;

	if ( ! pFnTossInventory )
		pFnTossInventory = (UFunction*) UObject::GObjObjects()->Data[ 60295 ];

	ASGS_Pawn_Soldier_execTossInventory_Parms TossInventory_Parms;
	TossInventory_Parms.Inv = Inv;
	memcpy ( &TossInventory_Parms.ForceVelocity, &ForceVelocity, 0xC );

	this->ProcessEvent ( pFnTossInventory, &TossInventory_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Soldier.GetViewRotation
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FRotator ASGS_Pawn_Soldier::eventGetViewRotation ( )
{
	static UFunction* pFnGetViewRotation = NULL;

	if ( ! pFnGetViewRotation )
		pFnGetViewRotation = (UFunction*) UObject::GObjObjects()->Data[ 60292 ];

	ASGS_Pawn_Soldier_eventGetViewRotation_Parms GetViewRotation_Parms;

	this->ProcessEvent ( pFnGetViewRotation, &GetViewRotation_Parms, NULL );

	return GetViewRotation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_FamilyInfo_Dino.DinoWhatToDoNext
// [0x00022000] 
// Parameters infos:
// class ASGS_Controller_Dino*    dino                           ( CPF_Parm )

void USGS_FamilyInfo_Dino::DinoWhatToDoNext ( class ASGS_Controller_Dino* dino )
{
	static UFunction* pFnDinoWhatToDoNext = NULL;

	if ( ! pFnDinoWhatToDoNext )
		pFnDinoWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 55844 ];

	USGS_FamilyInfo_Dino_execDinoWhatToDoNext_Parms DinoWhatToDoNext_Parms;
	DinoWhatToDoNext_Parms.dino = dino;

	this->ProcessEvent ( pFnDinoWhatToDoNext, &DinoWhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerSetRotation
// [0x00220042] 
// Parameters infos:
// struct FRotator                Rot                            ( CPF_Parm )

void ASGS_MechPawn::ServerSetRotation ( struct FRotator Rot )
{
	static UFunction* pFnServerSetRotation = NULL;

	if ( ! pFnServerSetRotation )
		pFnServerSetRotation = (UFunction*) UObject::GObjObjects()->Data[ 59768 ];

	ASGS_MechPawn_execServerSetRotation_Parms ServerSetRotation_Parms;
	memcpy ( &ServerSetRotation_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnServerSetRotation, &ServerSetRotation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.FaceRotation
// [0x00820102] 
// Parameters infos:
// struct FRotator                NewRotation                    ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MechPawn::FaceRotation ( struct FRotator NewRotation, float DeltaTime )
{
	static UFunction* pFnFaceRotation = NULL;

	if ( ! pFnFaceRotation )
		pFnFaceRotation = (UFunction*) UObject::GObjObjects()->Data[ 59763 ];

	ASGS_MechPawn_execFaceRotation_Parms FaceRotation_Parms;
	memcpy ( &FaceRotation_Parms.NewRotation, &NewRotation, 0xC );
	FaceRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnFaceRotation, &FaceRotation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.GetExitRotation
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

struct FRotator ASGS_MechPawn::GetExitRotation ( class AController* C )
{
	static UFunction* pFnGetExitRotation = NULL;

	if ( ! pFnGetExitRotation )
		pFnGetExitRotation = (UFunction*) UObject::GObjObjects()->Data[ 59759 ];

	ASGS_MechPawn_execGetExitRotation_Parms GetExitRotation_Parms;
	GetExitRotation_Parms.C = C;

	this->ProcessEvent ( pFnGetExitRotation, &GetExitRotation_Parms, NULL );

	return GetExitRotation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.DriverLeft
// [0x00020002] 
// Parameters infos:

void ASGS_MechPawn::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 59758 ];

	ASGS_MechPawn_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.DriverLeave
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_MechPawn::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 53750 ];

	ASGS_MechPawn_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_MechPawn::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 59750 ];

	ASGS_MechPawn_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.TryExitPos
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )
// struct FVector                 ExitPos                        ( CPF_Parm )
// unsigned long                  bMustFindGround                ( CPF_Parm )

bool ASGS_MechPawn::TryExitPos ( class APawn* ExitingDriver, struct FVector ExitPos, unsigned long bMustFindGround )
{
	static UFunction* pFnTryExitPos = NULL;

	if ( ! pFnTryExitPos )
		pFnTryExitPos = (UFunction*) UObject::GObjObjects()->Data[ 59739 ];

	ASGS_MechPawn_execTryExitPos_Parms TryExitPos_Parms;
	TryExitPos_Parms.ExitingDriver = ExitingDriver;
	memcpy ( &TryExitPos_Parms.ExitPos, &ExitPos, 0xC );
	TryExitPos_Parms.bMustFindGround = bMustFindGround;

	this->ProcessEvent ( pFnTryExitPos, &TryExitPos_Parms, NULL );

	return TryExitPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.FindAutoExit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )

bool ASGS_MechPawn::FindAutoExit ( class APawn* ExitingDriver )
{
	static UFunction* pFnFindAutoExit = NULL;

	if ( ! pFnFindAutoExit )
		pFnFindAutoExit = (UFunction*) UObject::GObjObjects()->Data[ 59733 ];

	ASGS_MechPawn_execFindAutoExit_Parms FindAutoExit_Parms;
	FindAutoExit_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnFindAutoExit, &FindAutoExit_Parms, NULL );

	return FindAutoExit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.PowerDownLoop
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::PowerDownLoop ( )
{
	static UFunction* pFnPowerDownLoop = NULL;

	if ( ! pFnPowerDownLoop )
		pFnPowerDownLoop = (UFunction*) UObject::GObjObjects()->Data[ 59732 ];

	ASGS_MechPawn_execPowerDownLoop_Parms PowerDownLoop_Parms;

	this->ProcessEvent ( pFnPowerDownLoop, &PowerDownLoop_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PlaceExitingDriver
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_OptionalParm | CPF_Parm )

bool ASGS_MechPawn::PlaceExitingDriver ( class APawn* ExitingDriver )
{
	static UFunction* pFnPlaceExitingDriver = NULL;

	if ( ! pFnPlaceExitingDriver )
		pFnPlaceExitingDriver = (UFunction*) UObject::GObjObjects()->Data[ 59721 ];

	ASGS_MechPawn_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL );

	return PlaceExitingDriver_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.AttachDriver
// [0x00020102] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ASGS_MechPawn::AttachDriver ( class APawn* P )
{
	static UFunction* pFnAttachDriver = NULL;

	if ( ! pFnAttachDriver )
		pFnAttachDriver = (UFunction*) UObject::GObjObjects()->Data[ 59719 ];

	ASGS_MechPawn_execAttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;

	this->ProcessEvent ( pFnAttachDriver, &AttachDriver_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ClearCustomAnim
// [0x00020002] 
// Parameters infos:

void ASGS_MechPawn::ClearCustomAnim ( )
{
	static UFunction* pFnClearCustomAnim = NULL;

	if ( ! pFnClearCustomAnim )
		pFnClearCustomAnim = (UFunction*) UObject::GObjObjects()->Data[ 59718 ];

	ASGS_MechPawn_execClearCustomAnim_Parms ClearCustomAnim_Parms;

	this->ProcessEvent ( pFnClearCustomAnim, &ClearCustomAnim_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PlayCustomAnim
// [0x00024102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   AnimName                       ( CPF_Parm )
// float                          Rate                           ( CPF_Parm )
// float                          BlendInTime                    ( CPF_OptionalParm | CPF_Parm )
// float                          BlendOutTime                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLooping                       ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bOverride                      ( CPF_OptionalParm | CPF_Parm )
// float                          StartTime                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bHalfSlot                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRoar                          ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bOverrideAnim                  ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bLegs                          ( CPF_OptionalParm | CPF_Parm )

float ASGS_MechPawn::PlayCustomAnim ( struct FName AnimName, float Rate, float BlendInTime, float BlendOutTime, unsigned long bLooping, unsigned long bOverride, float StartTime, unsigned long bHalfSlot, unsigned long bRoar, unsigned long bOverrideAnim, unsigned long bLegs )
{
	static UFunction* pFnPlayCustomAnim = NULL;

	if ( ! pFnPlayCustomAnim )
		pFnPlayCustomAnim = (UFunction*) UObject::GObjObjects()->Data[ 59704 ];

	ASGS_MechPawn_execPlayCustomAnim_Parms PlayCustomAnim_Parms;
	memcpy ( &PlayCustomAnim_Parms.AnimName, &AnimName, 0x8 );
	PlayCustomAnim_Parms.Rate = Rate;
	PlayCustomAnim_Parms.BlendInTime = BlendInTime;
	PlayCustomAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnim_Parms.bLooping = bLooping;
	PlayCustomAnim_Parms.bOverride = bOverride;
	PlayCustomAnim_Parms.StartTime = StartTime;
	PlayCustomAnim_Parms.bHalfSlot = bHalfSlot;
	PlayCustomAnim_Parms.bRoar = bRoar;
	PlayCustomAnim_Parms.bOverrideAnim = bOverrideAnim;
	PlayCustomAnim_Parms.bLegs = bLegs;

	this->ProcessEvent ( pFnPlayCustomAnim, &PlayCustomAnim_Parms, NULL );

	return PlayCustomAnim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_MechPawn::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 59700 ];

	ASGS_MechPawn_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.TryToDrive
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_MechPawn::TryToDrive ( class APawn* P )
{
	static UFunction* pFnTryToDrive = NULL;

	if ( ! pFnTryToDrive )
		pFnTryToDrive = (UFunction*) UObject::GObjObjects()->Data[ 53909 ];

	ASGS_MechPawn_execTryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;

	this->ProcessEvent ( pFnTryToDrive, &TryToDrive_Parms, NULL );

	return TryToDrive_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.TryToGetIn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_MechPawn::TryToGetIn ( class APawn* P )
{
	static UFunction* pFnTryToGetIn = NULL;

	if ( ! pFnTryToGetIn )
		pFnTryToGetIn = (UFunction*) UObject::GObjObjects()->Data[ 53907 ];

	ASGS_MechPawn_execTryToGetIn_Parms TryToGetIn_Parms;
	TryToGetIn_Parms.P = P;

	this->ProcessEvent ( pFnTryToGetIn, &TryToGetIn_Parms, NULL );

	return TryToGetIn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.EndAnim_RobotToTank
// [0x00020100] 
// Parameters infos:

void ASGS_MechPawn::EndAnim_RobotToTank ( )
{
	static UFunction* pFnEndAnim_RobotToTank = NULL;

	if ( ! pFnEndAnim_RobotToTank )
		pFnEndAnim_RobotToTank = (UFunction*) UObject::GObjObjects()->Data[ 59696 ];

	ASGS_MechPawn_execEndAnim_RobotToTank_Parms EndAnim_RobotToTank_Parms;

	this->ProcessEvent ( pFnEndAnim_RobotToTank, &EndAnim_RobotToTank_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.EndAnim_TankToRobot
// [0x00020100] 
// Parameters infos:

void ASGS_MechPawn::EndAnim_TankToRobot ( )
{
	static UFunction* pFnEndAnim_TankToRobot = NULL;

	if ( ! pFnEndAnim_TankToRobot )
		pFnEndAnim_TankToRobot = (UFunction*) UObject::GObjObjects()->Data[ 59695 ];

	ASGS_MechPawn_execEndAnim_TankToRobot_Parms EndAnim_TankToRobot_Parms;

	this->ProcessEvent ( pFnEndAnim_TankToRobot, &EndAnim_TankToRobot_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.Update_MechMode
// [0x00020100] 
// Parameters infos:

void ASGS_MechPawn::Update_MechMode ( )
{
	static UFunction* pFnUpdate_MechMode = NULL;

	if ( ! pFnUpdate_MechMode )
		pFnUpdate_MechMode = (UFunction*) UObject::GObjObjects()->Data[ 59694 ];

	ASGS_MechPawn_execUpdate_MechMode_Parms Update_MechMode_Parms;

	this->ProcessEvent ( pFnUpdate_MechMode, &Update_MechMode_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.Server_SetRobotMode
// [0x002200C2] 
// Parameters infos:

void ASGS_MechPawn::Server_SetRobotMode ( )
{
	static UFunction* pFnServer_SetRobotMode = NULL;

	if ( ! pFnServer_SetRobotMode )
		pFnServer_SetRobotMode = (UFunction*) UObject::GObjObjects()->Data[ 59693 ];

	ASGS_MechPawn_execServer_SetRobotMode_Parms Server_SetRobotMode_Parms;

	this->ProcessEvent ( pFnServer_SetRobotMode, &Server_SetRobotMode_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.CalcCamera
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          fDeltaTime                     ( CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// float                          out_FOV                        ( CPF_Parm | CPF_OutParm )

bool ASGS_MechPawn::CalcCamera ( float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot, float* out_FOV )
{
	static UFunction* pFnCalcCamera = NULL;

	if ( ! pFnCalcCamera )
		pFnCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 59679 ];

	ASGS_MechPawn_execCalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;

	this->ProcessEvent ( pFnCalcCamera, &CalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &CalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &CalcCamera_Parms.out_CamRot, 0xC );

	if ( out_FOV )
		*out_FOV = CalcCamera_Parms.out_FOV;

	return CalcCamera_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.SetCharacterClassFromInfo
// [0x00020102] 
// Parameters infos:
// class UClass*                  Info                           ( CPF_Parm )

void ASGS_MechPawn::SetCharacterClassFromInfo ( class UClass* Info )
{
	static UFunction* pFnSetCharacterClassFromInfo = NULL;

	if ( ! pFnSetCharacterClassFromInfo )
		pFnSetCharacterClassFromInfo = (UFunction*) UObject::GObjObjects()->Data[ 59676 ];

	ASGS_MechPawn_execSetCharacterClassFromInfo_Parms SetCharacterClassFromInfo_Parms;
	SetCharacterClassFromInfo_Parms.Info = Info;

	this->ProcessEvent ( pFnSetCharacterClassFromInfo, &SetCharacterClassFromInfo_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.IsDino
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_MechPawn::IsDino ( )
{
	static UFunction* pFnIsDino = NULL;

	if ( ! pFnIsDino )
		pFnIsDino = (UFunction*) UObject::GObjObjects()->Data[ 59674 ];

	ASGS_MechPawn_execIsDino_Parms IsDino_Parms;

	this->ProcessEvent ( pFnIsDino, &IsDino_Parms, NULL );

	return IsDino_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void ASGS_MechPawn::eventBaseChange ( )
{
	static UFunction* pFnBaseChange = NULL;

	if ( ! pFnBaseChange )
		pFnBaseChange = (UFunction*) UObject::GObjObjects()->Data[ 59672 ];

	ASGS_MechPawn_eventBaseChange_Parms BaseChange_Parms;

	this->ProcessEvent ( pFnBaseChange, &BaseChange_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.UpdateBaseTranslation
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MechPawn::UpdateBaseTranslation ( float DeltaTime )
{
	static UFunction* pFnUpdateBaseTranslation = NULL;

	if ( ! pFnUpdateBaseTranslation )
		pFnUpdateBaseTranslation = (UFunction*) UObject::GObjObjects()->Data[ 59650 ];

	ASGS_MechPawn_execUpdateBaseTranslation_Parms UpdateBaseTranslation_Parms;
	UpdateBaseTranslation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateBaseTranslation, &UpdateBaseTranslation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.DoJump
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bUpdating                      ( CPF_Parm )

bool ASGS_MechPawn::DoJump ( unsigned long bUpdating )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 59647 ];

	ASGS_MechPawn_execDoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );

	return DoJump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.StartSmokeEffect
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::StartSmokeEffect ( )
{
	static UFunction* pFnStartSmokeEffect = NULL;

	if ( ! pFnStartSmokeEffect )
		pFnStartSmokeEffect = (UFunction*) UObject::GObjObjects()->Data[ 59646 ];

	ASGS_MechPawn_execStartSmokeEffect_Parms StartSmokeEffect_Parms;

	this->ProcessEvent ( pFnStartSmokeEffect, &StartSmokeEffect_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.StartFireEffect
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::StartFireEffect ( )
{
	static UFunction* pFnStartFireEffect = NULL;

	if ( ! pFnStartFireEffect )
		pFnStartFireEffect = (UFunction*) UObject::GObjObjects()->Data[ 59645 ];

	ASGS_MechPawn_execStartFireEffect_Parms StartFireEffect_Parms;

	this->ProcessEvent ( pFnStartFireEffect, &StartFireEffect_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.StopEffects
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::StopEffects ( )
{
	static UFunction* pFnStopEffects = NULL;

	if ( ! pFnStopEffects )
		pFnStopEffects = (UFunction*) UObject::GObjObjects()->Data[ 59644 ];

	ASGS_MechPawn_execStopEffects_Parms StopEffects_Parms;

	this->ProcessEvent ( pFnStopEffects, &StopEffects_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MechPawn::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 59642 ];

	ASGS_MechPawn_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_MechPawn::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 59640 ];

	ASGS_MechPawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.UpdateRotation
// [0x00820102] 
// Parameters infos:

void ASGS_MechPawn::UpdateRotation ( )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 59630 ];

	ASGS_MechPawn_execUpdateRotation_Parms UpdateRotation_Parms;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerSetView
// [0x00220042] 
// Parameters infos:
// struct FVector                 S                              ( CPF_Parm )
// struct FRotator                D                              ( CPF_Parm )

void ASGS_MechPawn::ServerSetView ( struct FVector S, struct FRotator D )
{
	static UFunction* pFnServerSetView = NULL;

	if ( ! pFnServerSetView )
		pFnServerSetView = (UFunction*) UObject::GObjObjects()->Data[ 59627 ];

	ASGS_MechPawn_execServerSetView_Parms ServerSetView_Parms;
	memcpy ( &ServerSetView_Parms.S, &S, 0xC );
	memcpy ( &ServerSetView_Parms.D, &D, 0xC );

	this->ProcessEvent ( pFnServerSetView, &ServerSetView_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ShouldSpawnExplosionLight
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ASGS_MechPawn::ShouldSpawnExplosionLight ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnShouldSpawnExplosionLight = NULL;

	if ( ! pFnShouldSpawnExplosionLight )
		pFnShouldSpawnExplosionLight = (UFunction*) UObject::GObjObjects()->Data[ 59590 ];

	ASGS_MechPawn_execShouldSpawnExplosionLight_Parms ShouldSpawnExplosionLight_Parms;
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ShouldSpawnExplosionLight_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnShouldSpawnExplosionLight, &ShouldSpawnExplosionLight_Parms, NULL );

	return ShouldSpawnExplosionLight_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.HandleDeadVehicleDriver
// [0x00020002] 
// Parameters infos:

void ASGS_MechPawn::HandleDeadVehicleDriver ( )
{
	static UFunction* pFnHandleDeadVehicleDriver = NULL;

	if ( ! pFnHandleDeadVehicleDriver )
		pFnHandleDeadVehicleDriver = (UFunction*) UObject::GObjObjects()->Data[ 59588 ];

	ASGS_MechPawn_execHandleDeadVehicleDriver_Parms HandleDeadVehicleDriver_Parms;

	this->ProcessEvent ( pFnHandleDeadVehicleDriver, &HandleDeadVehicleDriver_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.Died
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ASGS_MechPawn::Died ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnDied = NULL;

	if ( ! pFnDied )
		pFnDied = (UFunction*) UObject::GObjObjects()->Data[ 59582 ];

	ASGS_MechPawn_execDied_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy ( &Died_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDied, &Died_Parms, NULL );

	return Died_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 59581 ];

	ASGS_MechPawn_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.LeaveABloodSplatterDecal
// [0x00020100] 
// Parameters infos:
// struct FVector                 HitLoc                         ( CPF_Parm )
// struct FVector                 HitNorm                        ( CPF_Parm )

void ASGS_MechPawn::LeaveABloodSplatterDecal ( struct FVector HitLoc, struct FVector HitNorm )
{
	static UFunction* pFnLeaveABloodSplatterDecal = NULL;

	if ( ! pFnLeaveABloodSplatterDecal )
		pFnLeaveABloodSplatterDecal = (UFunction*) UObject::GObjObjects()->Data[ 59578 ];

	ASGS_MechPawn_execLeaveABloodSplatterDecal_Parms LeaveABloodSplatterDecal_Parms;
	memcpy ( &LeaveABloodSplatterDecal_Parms.HitLoc, &HitLoc, 0xC );
	memcpy ( &LeaveABloodSplatterDecal_Parms.HitNorm, &HitNorm, 0xC );

	this->ProcessEvent ( pFnLeaveABloodSplatterDecal, &LeaveABloodSplatterDecal_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.BaseDied
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Killer                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

bool ASGS_MechPawn::BaseDied ( class AController* Killer, class UClass* DamageType, struct FVector HitLocation )
{
	static UFunction* pFnBaseDied = NULL;

	if ( ! pFnBaseDied )
		pFnBaseDied = (UFunction*) UObject::GObjObjects()->Data[ 59572 ];

	ASGS_MechPawn_execBaseDied_Parms BaseDied_Parms;
	BaseDied_Parms.Killer = Killer;
	BaseDied_Parms.DamageType = DamageType;
	memcpy ( &BaseDied_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnBaseDied, &BaseDied_Parms, NULL );

	return BaseDied_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.SpawnTracer
// [0x00820102] 
// Parameters infos:
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::SpawnTracer ( struct FVector EffectLocation, struct FVector HitLocation )
{
	static UFunction* pFnSpawnTracer = NULL;

	if ( ! pFnSpawnTracer )
		pFnSpawnTracer = (UFunction*) UObject::GObjObjects()->Data[ 59566 ];

	ASGS_MechPawn_execSpawnTracer_Parms SpawnTracer_Parms;
	memcpy ( &SpawnTracer_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracer_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnTracer, &SpawnTracer_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.DoFireEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::DoFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnDoFireEffects = NULL;

	if ( ! pFnDoFireEffects )
		pFnDoFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 59563 ];

	ASGS_MechPawn_execDoFireEffects_Parms DoFireEffects_Parms;
	memcpy ( &DoFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnDoFireEffects, &DoFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.FlashLocationUpdated
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// struct FVector                 InFlashLocation                ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )

void ASGS_MechPawn::FlashLocationUpdated ( class AWeapon* InWeapon, struct FVector InFlashLocation, unsigned long bViaReplication )
{
	static UFunction* pFnFlashLocationUpdated = NULL;

	if ( ! pFnFlashLocationUpdated )
		pFnFlashLocationUpdated = (UFunction*) UObject::GObjObjects()->Data[ 59559 ];

	ASGS_MechPawn_execFlashLocationUpdated_Parms FlashLocationUpdated_Parms;
	FlashLocationUpdated_Parms.InWeapon = InWeapon;
	memcpy ( &FlashLocationUpdated_Parms.InFlashLocation, &InFlashLocation, 0xC );
	FlashLocationUpdated_Parms.bViaReplication = bViaReplication;

	this->ProcessEvent ( pFnFlashLocationUpdated, &FlashLocationUpdated_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.SetFlashLocation
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned char                  InFiringMode                   ( CPF_Parm )
// struct FVector                 NewLoc                         ( CPF_Parm )

void ASGS_MechPawn::SetFlashLocation ( class AWeapon* InWeapon, unsigned char InFiringMode, struct FVector NewLoc )
{
	static UFunction* pFnSetFlashLocation = NULL;

	if ( ! pFnSetFlashLocation )
		pFnSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 59555 ];

	ASGS_MechPawn_execSetFlashLocation_Parms SetFlashLocation_Parms;
	SetFlashLocation_Parms.InWeapon = InWeapon;
	SetFlashLocation_Parms.InFiringMode = InFiringMode;
	memcpy ( &SetFlashLocation_Parms.NewLoc, &NewLoc, 0xC );

	this->ProcessEvent ( pFnSetFlashLocation, &SetFlashLocation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerSetFlashLocation
// [0x002200C2] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::ServerSetFlashLocation ( struct FVector HitLocation )
{
	static UFunction* pFnServerSetFlashLocation = NULL;

	if ( ! pFnServerSetFlashLocation )
		pFnServerSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 59553 ];

	ASGS_MechPawn_execServerSetFlashLocation_Parms ServerSetFlashLocation_Parms;
	memcpy ( &ServerSetFlashLocation_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnServerSetFlashLocation, &ServerSetFlashLocation_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.SetFireEffects
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::SetFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnSetFireEffects = NULL;

	if ( ! pFnSetFireEffects )
		pFnSetFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 59551 ];

	ASGS_MechPawn_execSetFireEffects_Parms SetFireEffects_Parms;
	memcpy ( &SetFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSetFireEffects, &SetFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_MechPawn::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 59543 ];

	ASGS_MechPawn_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.OnRanOver
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class ASVehicle*               Vehicle                        ( CPF_Parm )
// class UPrimitiveComponent*     RunOverComponent               ( CPF_Parm | CPF_EditInline )
// int                            WheelIndex                     ( CPF_Parm )

void ASGS_MechPawn::eventOnRanOver ( class ASVehicle* Vehicle, class UPrimitiveComponent* RunOverComponent, int WheelIndex )
{
	static UFunction* pFnOnRanOver = NULL;

	if ( ! pFnOnRanOver )
		pFnOnRanOver = (UFunction*) UObject::GObjObjects()->Data[ 59538 ];

	ASGS_MechPawn_eventOnRanOver_Parms OnRanOver_Parms;
	OnRanOver_Parms.Vehicle = Vehicle;
	OnRanOver_Parms.RunOverComponent = RunOverComponent;
	OnRanOver_Parms.WheelIndex = WheelIndex;

	this->ProcessEvent ( pFnOnRanOver, &OnRanOver_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.GetEffectLocation
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_MechPawn::GetEffectLocation ( )
{
	static UFunction* pFnGetEffectLocation = NULL;

	if ( ! pFnGetEffectLocation )
		pFnGetEffectLocation = (UFunction*) UObject::GObjObjects()->Data[ 59535 ];

	ASGS_MechPawn_execGetEffectLocation_Parms GetEffectLocation_Parms;

	this->ProcessEvent ( pFnGetEffectLocation, &GetEffectLocation_Parms, NULL );

	return GetEffectLocation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ASGS_MechWeapon*         MWeapon                        ( CPF_Parm )

struct FRotator ASGS_MechPawn::GetWeaponAim ( class ASGS_MechWeapon* MWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 59509 ];

	ASGS_MechPawn_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.MWeapon = MWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.GetWeaponStartTraceLocation
// [0x00824902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AWeapon*                 CurrentWeapon                  ( CPF_OptionalParm | CPF_Parm )

struct FVector ASGS_MechPawn::eventGetWeaponStartTraceLocation ( class AWeapon* CurrentWeapon )
{
	static UFunction* pFnGetWeaponStartTraceLocation = NULL;

	if ( ! pFnGetWeaponStartTraceLocation )
		pFnGetWeaponStartTraceLocation = (UFunction*) UObject::GObjObjects()->Data[ 59505 ];

	ASGS_MechPawn_eventGetWeaponStartTraceLocation_Parms GetWeaponStartTraceLocation_Parms;
	GetWeaponStartTraceLocation_Parms.CurrentWeapon = CurrentWeapon;

	this->ProcessEvent ( pFnGetWeaponStartTraceLocation, &GetWeaponStartTraceLocation_Parms, NULL );

	return GetWeaponStartTraceLocation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.GetPhysicalFireStartLoc
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTWeapon*               ForWeapon                      ( CPF_Parm )

struct FVector ASGS_MechPawn::GetPhysicalFireStartLoc ( class AUTWeapon* ForWeapon )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 59501 ];

	ASGS_MechPawn_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	GetPhysicalFireStartLoc_Parms.ForWeapon = ForWeapon;

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.GetBarrelLocationAndRotation
// [0x00424902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 SocketLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                SocketRotation                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void ASGS_MechPawn::eventGetBarrelLocationAndRotation ( struct FVector* SocketLocation, struct FRotator* SocketRotation )
{
	static UFunction* pFnGetBarrelLocationAndRotation = NULL;

	if ( ! pFnGetBarrelLocationAndRotation )
		pFnGetBarrelLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 59498 ];

	ASGS_MechPawn_eventGetBarrelLocationAndRotation_Parms GetBarrelLocationAndRotation_Parms;

	this->ProcessEvent ( pFnGetBarrelLocationAndRotation, &GetBarrelLocationAndRotation_Parms, NULL );

	if ( SocketLocation )
		memcpy ( SocketLocation, &GetBarrelLocationAndRotation_Parms.SocketLocation, 0xC );

	if ( SocketRotation )
		memcpy ( SocketRotation, &GetBarrelLocationAndRotation_Parms.SocketRotation, 0xC );
};

// Function SGSOrion.SGS_MechPawn.PanTread
// [0x00040103] ( FUNC_Final )
// Parameters infos:
// class UMaterialInstanceConstant* TreadPanner                    ( CPF_Parm )
// float                          TreadPan                       ( CPF_Parm )
// int                            Side                           ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MechPawn::PanTread ( class UMaterialInstanceConstant* TreadPanner, float TreadPan, int Side, float DeltaTime )
{
	static UFunction* pFnPanTread = NULL;

	if ( ! pFnPanTread )
		pFnPanTread = (UFunction*) UObject::GObjObjects()->Data[ 59493 ];

	ASGS_MechPawn_execPanTread_Parms PanTread_Parms;
	PanTread_Parms.TreadPanner = TreadPanner;
	PanTread_Parms.TreadPan = TreadPan;
	PanTread_Parms.Side = Side;
	PanTread_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPanTread, &PanTread_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PanTreads
// [0x00040103] ( FUNC_Final )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MechPawn::PanTreads ( float DeltaTime )
{
	static UFunction* pFnPanTreads = NULL;

	if ( ! pFnPanTreads )
		pFnPanTreads = (UFunction*) UObject::GObjObjects()->Data[ 59491 ];

	ASGS_MechPawn_execPanTreads_Parms PanTreads_Parms;
	PanTreads_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPanTreads, &PanTreads_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.SetUpTreads
// [0x00040103] ( FUNC_Final )
// Parameters infos:

void ASGS_MechPawn::SetUpTreads ( )
{
	static UFunction* pFnSetUpTreads = NULL;

	if ( ! pFnSetUpTreads )
		pFnSetUpTreads = (UFunction*) UObject::GObjObjects()->Data[ 59458 ];

	ASGS_MechPawn_execSetUpTreads_Parms SetUpTreads_Parms;

	this->ProcessEvent ( pFnSetUpTreads, &SetUpTreads_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PlayImpactEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 59479 ];

	ASGS_MechPawn_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.AllowImpactEffects
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  HitActor                       ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ASGS_MechPawn::AllowImpactEffects ( class AActor* HitActor, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnAllowImpactEffects = NULL;

	if ( ! pFnAllowImpactEffects )
		pFnAllowImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 59474 ];

	ASGS_MechPawn_execAllowImpactEffects_Parms AllowImpactEffects_Parms;
	AllowImpactEffects_Parms.HitActor = HitActor;
	memcpy ( &AllowImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &AllowImpactEffects_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnAllowImpactEffects, &AllowImpactEffects_Parms, NULL );

	return AllowImpactEffects_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.CheckBulletWhip
// [0x00020102] 
// Parameters infos:
// struct FVector                 FireDir                        ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_MechPawn::CheckBulletWhip ( struct FVector FireDir, struct FVector HitLocation )
{
	static UFunction* pFnCheckBulletWhip = NULL;

	if ( ! pFnCheckBulletWhip )
		pFnCheckBulletWhip = (UFunction*) UObject::GObjObjects()->Data[ 59470 ];

	ASGS_MechPawn_execCheckBulletWhip_Parms CheckBulletWhip_Parms;
	memcpy ( &CheckBulletWhip_Parms.FireDir, &FireDir, 0xC );
	memcpy ( &CheckBulletWhip_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnCheckBulletWhip, &CheckBulletWhip_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.GetImpactEffect
// [0x00020102] 
// Parameters infos:
// struct FMaterialImpactEffect   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )

struct FMaterialImpactEffect ASGS_MechPawn::GetImpactEffect ( class UPhysicalMaterial* HitMaterial )
{
	static UFunction* pFnGetImpactEffect = NULL;

	if ( ! pFnGetImpactEffect )
		pFnGetImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 59465 ];

	ASGS_MechPawn_execGetImpactEffect_Parms GetImpactEffect_Parms;
	GetImpactEffect_Parms.HitMaterial = HitMaterial;

	this->ProcessEvent ( pFnGetImpactEffect, &GetImpactEffect_Parms, NULL );

	return GetImpactEffect_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechPawn.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_MechPawn::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 59461 ];

	ASGS_MechPawn_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.Register
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::Register ( )
{
	static UFunction* pFnRegister = NULL;

	if ( ! pFnRegister )
		pFnRegister = (UFunction*) UObject::GObjObjects()->Data[ 59459 ];

	ASGS_MechPawn_execRegister_Parms Register_Parms;

	this->ProcessEvent ( pFnRegister, &Register_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 59456 ];

	ASGS_MechPawn_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.CauseMuzzleFlashLight
// [0x00020102] 
// Parameters infos:
// int                            SIndex                         ( CPF_Parm )

void ASGS_MechPawn::CauseMuzzleFlashLight ( int SIndex )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 59454 ];

	ASGS_MechPawn_execCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;
	CauseMuzzleFlashLight_Parms.SIndex = SIndex;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PostRenderFor
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_MechPawn::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 59449 ];

	ASGS_MechPawn_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.SetDirection
// [0x00020102] 
// Parameters infos:
// float                          Right                          ( CPF_Parm )
// float                          Forward                        ( CPF_Parm )

void ASGS_MechPawn::SetDirection ( float Right, float Forward )
{
	static UFunction* pFnSetDirection = NULL;

	if ( ! pFnSetDirection )
		pFnSetDirection = (UFunction*) UObject::GObjObjects()->Data[ 59446 ];

	ASGS_MechPawn_execSetDirection_Parms SetDirection_Parms;
	SetDirection_Parms.Right = Right;
	SetDirection_Parms.Forward = Forward;

	this->ProcessEvent ( pFnSetDirection, &SetDirection_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerSetDirection
// [0x002200C2] 
// Parameters infos:
// float                          Right                          ( CPF_Parm )
// float                          Forward                        ( CPF_Parm )

void ASGS_MechPawn::ServerSetDirection ( float Right, float Forward )
{
	static UFunction* pFnServerSetDirection = NULL;

	if ( ! pFnServerSetDirection )
		pFnServerSetDirection = (UFunction*) UObject::GObjObjects()->Data[ 59443 ];

	ASGS_MechPawn_execServerSetDirection_Parms ServerSetDirection_Parms;
	ServerSetDirection_Parms.Right = Right;
	ServerSetDirection_Parms.Forward = Forward;

	this->ProcessEvent ( pFnServerSetDirection, &ServerSetDirection_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.TurnEMPOff
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::TurnEMPOff ( )
{
	static UFunction* pFnTurnEMPOff = NULL;

	if ( ! pFnTurnEMPOff )
		pFnTurnEMPOff = (UFunction*) UObject::GObjObjects()->Data[ 59442 ];

	ASGS_MechPawn_execTurnEMPOff_Parms TurnEMPOff_Parms;

	this->ProcessEvent ( pFnTurnEMPOff, &TurnEMPOff_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.TurnEMPOn
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::TurnEMPOn ( )
{
	static UFunction* pFnTurnEMPOn = NULL;

	if ( ! pFnTurnEMPOn )
		pFnTurnEMPOn = (UFunction*) UObject::GObjObjects()->Data[ 59441 ];

	ASGS_MechPawn_execTurnEMPOn_Parms TurnEMPOn_Parms;

	this->ProcessEvent ( pFnTurnEMPOn, &TurnEMPOn_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.EndEMP
// [0x00020102] 
// Parameters infos:

void ASGS_MechPawn::EndEMP ( )
{
	static UFunction* pFnEndEMP = NULL;

	if ( ! pFnEndEMP )
		pFnEndEMP = (UFunction*) UObject::GObjObjects()->Data[ 59440 ];

	ASGS_MechPawn_execEndEMP_Parms EndEMP_Parms;

	this->ProcessEvent ( pFnEndEMP, &EndEMP_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerStomp
// [0x002200C2] 
// Parameters infos:

void ASGS_MechPawn::ServerStomp ( )
{
	static UFunction* pFnServerStomp = NULL;

	if ( ! pFnServerStomp )
		pFnServerStomp = (UFunction*) UObject::GObjObjects()->Data[ 59439 ];

	ASGS_MechPawn_execServerStomp_Parms ServerStomp_Parms;

	this->ProcessEvent ( pFnServerStomp, &ServerStomp_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.HitWithEMP
// [0x002200C2] 
// Parameters infos:

void ASGS_MechPawn::HitWithEMP ( )
{
	static UFunction* pFnHitWithEMP = NULL;

	if ( ! pFnHitWithEMP )
		pFnHitWithEMP = (UFunction*) UObject::GObjObjects()->Data[ 59438 ];

	ASGS_MechPawn_execHitWithEMP_Parms HitWithEMP_Parms;

	this->ProcessEvent ( pFnHitWithEMP, &HitWithEMP_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PlayTurretSound1
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_MechPawn::PlayTurretSound1 ( class USoundCue* Sound )
{
	static UFunction* pFnPlayTurretSound1 = NULL;

	if ( ! pFnPlayTurretSound1 )
		pFnPlayTurretSound1 = (UFunction*) UObject::GObjObjects()->Data[ 59436 ];

	ASGS_MechPawn_execPlayTurretSound1_Parms PlayTurretSound1_Parms;
	PlayTurretSound1_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayTurretSound1, &PlayTurretSound1_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.PlayTurretSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_MechPawn::PlayTurretSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayTurretSound = NULL;

	if ( ! pFnPlayTurretSound )
		pFnPlayTurretSound = (UFunction*) UObject::GObjObjects()->Data[ 59434 ];

	ASGS_MechPawn_execPlayTurretSound_Parms PlayTurretSound_Parms;
	PlayTurretSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayTurretSound, &PlayTurretSound_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ServerSetSoundIndex
// [0x002200C2] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_MechPawn::ServerSetSoundIndex ( int Index )
{
	static UFunction* pFnServerSetSoundIndex = NULL;

	if ( ! pFnServerSetSoundIndex )
		pFnServerSetSoundIndex = (UFunction*) UObject::GObjObjects()->Data[ 59432 ];

	ASGS_MechPawn_execServerSetSoundIndex_Parms ServerSetSoundIndex_Parms;
	ServerSetSoundIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnServerSetSoundIndex, &ServerSetSoundIndex_Parms, NULL );
};

// Function SGSOrion.SGS_MechPawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_MechPawn::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 59427 ];

	ASGS_MechPawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.FindAutoExit
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   ExitingDriver                  ( CPF_Parm )

bool ASGS_Vehicle_VTOL::FindAutoExit ( class APawn* ExitingDriver )
{
	static UFunction* pFnFindAutoExit = NULL;

	if ( ! pFnFindAutoExit )
		pFnFindAutoExit = (UFunction*) UObject::GObjObjects()->Data[ 62952 ];

	ASGS_Vehicle_VTOL_execFindAutoExit_Parms FindAutoExit_Parms;
	FindAutoExit_Parms.ExitingDriver = ExitingDriver;

	this->ProcessEvent ( pFnFindAutoExit, &FindAutoExit_Parms, NULL );

	return FindAutoExit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle_VTOL::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 62947 ];

	ASGS_Vehicle_VTOL_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.SpawnTracer
// [0x00820102] 
// Parameters infos:
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Vehicle_VTOL::SpawnTracer ( struct FVector EffectLocation, struct FVector HitLocation )
{
	static UFunction* pFnSpawnTracer = NULL;

	if ( ! pFnSpawnTracer )
		pFnSpawnTracer = (UFunction*) UObject::GObjObjects()->Data[ 62942 ];

	ASGS_Vehicle_VTOL_execSpawnTracer_Parms SpawnTracer_Parms;
	memcpy ( &SpawnTracer_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracer_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnTracer, &SpawnTracer_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.VehicleWeaponFireEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_VTOL::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 62938 ];

	ASGS_Vehicle_VTOL_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.GetBarrelLocationAndRotation
// [0x00424902] ( FUNC_Event )
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// struct FVector                 SocketLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                SocketRotation                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_VTOL::eventGetBarrelLocationAndRotation ( int SeatIndex, struct FVector* SocketLocation, struct FRotator* SocketRotation )
{
	static UFunction* pFnGetBarrelLocationAndRotation = NULL;

	if ( ! pFnGetBarrelLocationAndRotation )
		pFnGetBarrelLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 62934 ];

	ASGS_Vehicle_VTOL_eventGetBarrelLocationAndRotation_Parms GetBarrelLocationAndRotation_Parms;
	GetBarrelLocationAndRotation_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetBarrelLocationAndRotation, &GetBarrelLocationAndRotation_Parms, NULL );

	if ( SocketLocation )
		memcpy ( SocketLocation, &GetBarrelLocationAndRotation_Parms.SocketLocation, 0xC );

	if ( SocketRotation )
		memcpy ( SocketRotation, &GetBarrelLocationAndRotation_Parms.SocketRotation, 0xC );
};

// Function SGSOrion.SGS_Vehicle_VTOL.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle_VTOL::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 62932 ];

	ASGS_Vehicle_VTOL_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.VehicleWeaponImpactEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_VTOL::VehicleWeaponImpactEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponImpactEffects = NULL;

	if ( ! pFnVehicleWeaponImpactEffects )
		pFnVehicleWeaponImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 62928 ];

	ASGS_Vehicle_VTOL_execVehicleWeaponImpactEffects_Parms VehicleWeaponImpactEffects_Parms;
	memcpy ( &VehicleWeaponImpactEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponImpactEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponImpactEffects, &VehicleWeaponImpactEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle_VTOL::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 62926 ];

	ASGS_Vehicle_VTOL_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.SitDriver
// [0x00020102] 
// Parameters infos:
// class AUTPawn*                 UTP                            ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_VTOL::SitDriver ( class AUTPawn* UTP, int SeatIndex )
{
	static UFunction* pFnSitDriver = NULL;

	if ( ! pFnSitDriver )
		pFnSitDriver = (UFunction*) UObject::GObjObjects()->Data[ 62923 ];

	ASGS_Vehicle_VTOL_execSitDriver_Parms SitDriver_Parms;
	SitDriver_Parms.UTP = UTP;
	SitDriver_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnSitDriver, &SitDriver_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.PassengerEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

bool ASGS_Vehicle_VTOL::PassengerEnter ( class APawn* P, int SeatIndex )
{
	static UFunction* pFnPassengerEnter = NULL;

	if ( ! pFnPassengerEnter )
		pFnPassengerEnter = (UFunction*) UObject::GObjObjects()->Data[ 62919 ];

	ASGS_Vehicle_VTOL_execPassengerEnter_Parms PassengerEnter_Parms;
	PassengerEnter_Parms.P = P;
	PassengerEnter_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerEnter, &PassengerEnter_Parms, NULL );

	return PassengerEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.PassengerLeave
// [0x00020002] 
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_VTOL::PassengerLeave ( int SeatIndex )
{
	static UFunction* pFnPassengerLeave = NULL;

	if ( ! pFnPassengerLeave )
		pFnPassengerLeave = (UFunction*) UObject::GObjObjects()->Data[ 62917 ];

	ASGS_Vehicle_VTOL_execPassengerLeave_Parms PassengerLeave_Parms;
	PassengerLeave_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnPassengerLeave, &PassengerLeave_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.DriverLeft
// [0x00020002] 
// Parameters infos:

void ASGS_Vehicle_VTOL::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 62916 ];

	ASGS_Vehicle_VTOL_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_Vehicle_VTOL::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 62911 ];

	ASGS_Vehicle_VTOL_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.ImportantVehicle
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle_VTOL::ImportantVehicle ( )
{
	static UFunction* pFnImportantVehicle = NULL;

	if ( ! pFnImportantVehicle )
		pFnImportantVehicle = (UFunction*) UObject::GObjObjects()->Data[ 62909 ];

	ASGS_Vehicle_VTOL_execImportantVehicle_Parms ImportantVehicle_Parms;

	this->ProcessEvent ( pFnImportantVehicle, &ImportantVehicle_Parms, NULL );

	return ImportantVehicle_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.ResetTurningSpeed
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_VTOL::ResetTurningSpeed ( )
{
	static UFunction* pFnResetTurningSpeed = NULL;

	if ( ! pFnResetTurningSpeed )
		pFnResetTurningSpeed = (UFunction*) UObject::GObjObjects()->Data[ 62908 ];

	ASGS_Vehicle_VTOL_execResetTurningSpeed_Parms ResetTurningSpeed_Parms;

	this->ProcessEvent ( pFnResetTurningSpeed, &ResetTurningSpeed_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_VTOL::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 62903 ];

	ASGS_Vehicle_VTOL_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function SGSOrion.SGS_Vehicle_VTOL.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Vehicle_VTOL::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62894 ];

	ASGS_Vehicle_VTOL_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.UpdateGunAim
// [0x00820102] 
// Parameters infos:

void ASGS_Vehicle_VTOL::UpdateGunAim ( )
{
	static UFunction* pFnUpdateGunAim = NULL;

	if ( ! pFnUpdateGunAim )
		pFnUpdateGunAim = (UFunction*) UObject::GObjObjects()->Data[ 62871 ];

	ASGS_Vehicle_VTOL_execUpdateGunAim_Parms UpdateGunAim_Parms;

	this->ProcessEvent ( pFnUpdateGunAim, &UpdateGunAim_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.ServerSetView
// [0x002200C2] 
// Parameters infos:
// struct FVector                 S                              ( CPF_Parm )
// struct FRotator                D                              ( CPF_Parm )

void ASGS_Vehicle_VTOL::ServerSetView ( struct FVector S, struct FRotator D )
{
	static UFunction* pFnServerSetView = NULL;

	if ( ! pFnServerSetView )
		pFnServerSetView = (UFunction*) UObject::GObjObjects()->Data[ 62868 ];

	ASGS_Vehicle_VTOL_execServerSetView_Parms ServerSetView_Parms;
	memcpy ( &ServerSetView_Parms.S, &S, 0xC );
	memcpy ( &ServerSetView_Parms.D, &D, 0xC );

	this->ProcessEvent ( pFnServerSetView, &ServerSetView_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.SetDriving
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewDriving                    ( CPF_Parm )

void ASGS_Vehicle_VTOL::SetDriving ( unsigned long bNewDriving )
{
	static UFunction* pFnSetDriving = NULL;

	if ( ! pFnSetDriving )
		pFnSetDriving = (UFunction*) UObject::GObjObjects()->Data[ 62866 ];

	ASGS_Vehicle_VTOL_execSetDriving_Parms SetDriving_Parms;
	SetDriving_Parms.bNewDriving = bNewDriving;

	this->ProcessEvent ( pFnSetDriving, &SetDriving_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator ASGS_Vehicle_VTOL::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 62846 ];

	ASGS_Vehicle_VTOL_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_VTOL.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_VTOL::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 62844 ];

	ASGS_Vehicle_VTOL_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.StopEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_VTOL::StopEffects ( )
{
	static UFunction* pFnStopEffects = NULL;

	if ( ! pFnStopEffects )
		pFnStopEffects = (UFunction*) UObject::GObjObjects()->Data[ 62842 ];

	ASGS_Vehicle_VTOL_execStopEffects_Parms StopEffects_Parms;

	this->ProcessEvent ( pFnStopEffects, &StopEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.SpawnVTOLEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_VTOL::SpawnVTOLEffects ( )
{
	static UFunction* pFnSpawnVTOLEffects = NULL;

	if ( ! pFnSpawnVTOLEffects )
		pFnSpawnVTOLEffects = (UFunction*) UObject::GObjObjects()->Data[ 62840 ];

	ASGS_Vehicle_VTOL_execSpawnVTOLEffects_Parms SpawnVTOLEffects_Parms;

	this->ProcessEvent ( pFnSpawnVTOLEffects, &SpawnVTOLEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.ServerToggleLandingGear
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle_VTOL::ServerToggleLandingGear ( )
{
	static UFunction* pFnServerToggleLandingGear = NULL;

	if ( ! pFnServerToggleLandingGear )
		pFnServerToggleLandingGear = (UFunction*) UObject::GObjObjects()->Data[ 62837 ];

	ASGS_Vehicle_VTOL_execServerToggleLandingGear_Parms ServerToggleLandingGear_Parms;

	this->ProcessEvent ( pFnServerToggleLandingGear, &ServerToggleLandingGear_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_VTOL::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 62836 ];

	ASGS_Vehicle_VTOL_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_VTOL.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle_VTOL::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62834 ];

	ASGS_Vehicle_VTOL_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_AirVehicle.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool ASGS_AirVehicle::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 51423 ];

	ASGS_AirVehicle_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function SGSOrion.SGS_AirVehicle.RecommendLongRangedAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_AirVehicle::RecommendLongRangedAttack ( )
{
	static UFunction* pFnRecommendLongRangedAttack = NULL;

	if ( ! pFnRecommendLongRangedAttack )
		pFnRecommendLongRangedAttack = (UFunction*) UObject::GObjObjects()->Data[ 51421 ];

	ASGS_AirVehicle_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

	this->ProcessEvent ( pFnRecommendLongRangedAttack, &RecommendLongRangedAttack_Parms, NULL );

	return RecommendLongRangedAttack_Parms.ReturnValue;
};

// Function SGSOrion.SGS_AirVehicle.SetDriving
// [0x00020102] 
// Parameters infos:
// unsigned long                  bNewDriving                    ( CPF_Parm )

void ASGS_AirVehicle::SetDriving ( unsigned long bNewDriving )
{
	static UFunction* pFnSetDriving = NULL;

	if ( ! pFnSetDriving )
		pFnSetDriving = (UFunction*) UObject::GObjObjects()->Data[ 51406 ];

	ASGS_AirVehicle_execSetDriving_Parms SetDriving_Parms;
	SetDriving_Parms.bNewDriving = bNewDriving;

	this->ProcessEvent ( pFnSetDriving, &SetDriving_Parms, NULL );
};

// Function SGSOrion.SGS_AirVehicle.LockOnWarning
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AUDKProjectile*          IncomingMissile                ( CPF_Parm )

void ASGS_AirVehicle::eventLockOnWarning ( class AUDKProjectile* IncomingMissile )
{
	static UFunction* pFnLockOnWarning = NULL;

	if ( ! pFnLockOnWarning )
		pFnLockOnWarning = (UFunction*) UObject::GObjObjects()->Data[ 51404 ];

	ASGS_AirVehicle_eventLockOnWarning_Parms LockOnWarning_Parms;
	LockOnWarning_Parms.IncomingMissile = IncomingMissile;

	this->ProcessEvent ( pFnLockOnWarning, &LockOnWarning_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.GetAlerted
// [0x00020000] 
// Parameters infos:

void ASGS_Controller_Dino::GetAlerted ( )
{
	static UFunction* pFnGetAlerted = NULL;

	if ( ! pFnGetAlerted )
		pFnGetAlerted = (UFunction*) UObject::GObjObjects()->Data[ 53405 ];

	ASGS_Controller_Dino_execGetAlerted_Parms GetAlerted_Parms;

	this->ProcessEvent ( pFnGetAlerted, &GetAlerted_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.WhatToDoNext
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ASGS_Controller_Dino::eventWhatToDoNext ( )
{
	static UFunction* pFnWhatToDoNext = NULL;

	if ( ! pFnWhatToDoNext )
		pFnWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 53404 ];

	ASGS_Controller_Dino_eventWhatToDoNext_Parms WhatToDoNext_Parms;

	this->ProcessEvent ( pFnWhatToDoNext, &WhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.StopLookingDown
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::StopLookingDown ( )
{
	static UFunction* pFnStopLookingDown = NULL;

	if ( ! pFnStopLookingDown )
		pFnStopLookingDown = (UFunction*) UObject::GObjObjects()->Data[ 53327 ];

	ASGS_Controller_Dino_execStopLookingDown_Parms StopLookingDown_Parms;

	this->ProcessEvent ( pFnStopLookingDown, &StopLookingDown_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.ThrowRock
// [0x00820002] 
// Parameters infos:

void ASGS_Controller_Dino::ThrowRock ( )
{
	static UFunction* pFnThrowRock = NULL;

	if ( ! pFnThrowRock )
		pFnThrowRock = (UFunction*) UObject::GObjObjects()->Data[ 53321 ];

	ASGS_Controller_Dino_execThrowRock_Parms ThrowRock_Parms;

	this->ProcessEvent ( pFnThrowRock, &ThrowRock_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.HearNoise
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// float                          Loudness                       ( CPF_Parm )
// class AActor*                  NoiseMaker                     ( CPF_Parm )
// struct FName                   NoiseType                      ( CPF_OptionalParm | CPF_Parm )

void ASGS_Controller_Dino::eventHearNoise ( float Loudness, class AActor* NoiseMaker, struct FName NoiseType )
{
	static UFunction* pFnHearNoise = NULL;

	if ( ! pFnHearNoise )
		pFnHearNoise = (UFunction*) UObject::GObjObjects()->Data[ 53306 ];

	ASGS_Controller_Dino_eventHearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy ( &HearNoise_Parms.NoiseType, &NoiseType, 0x8 );

	this->ProcessEvent ( pFnHearNoise, &HearNoise_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.SetAttractionState
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::SetAttractionState ( )
{
	static UFunction* pFnSetAttractionState = NULL;

	if ( ! pFnSetAttractionState )
		pFnSetAttractionState = (UFunction*) UObject::GObjObjects()->Data[ 53305 ];

	ASGS_Controller_Dino_execSetAttractionState_Parms SetAttractionState_Parms;

	this->ProcessEvent ( pFnSetAttractionState, &SetAttractionState_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.DoStomp
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::DoStomp ( )
{
	static UFunction* pFnDoStomp = NULL;

	if ( ! pFnDoStomp )
		pFnDoStomp = (UFunction*) UObject::GObjObjects()->Data[ 53304 ];

	ASGS_Controller_Dino_execDoStomp_Parms DoStomp_Parms;

	this->ProcessEvent ( pFnDoStomp, &DoStomp_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.TryToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Dino::TryToAttack ( )
{
	static UFunction* pFnTryToAttack = NULL;

	if ( ! pFnTryToAttack )
		pFnTryToAttack = (UFunction*) UObject::GObjObjects()->Data[ 53296 ];

	ASGS_Controller_Dino_execTryToAttack_Parms TryToAttack_Parms;

	this->ProcessEvent ( pFnTryToAttack, &TryToAttack_Parms, NULL );

	return TryToAttack_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.Cleanup
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 53295 ];

	ASGS_Controller_Dino_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.AnimDone
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::AnimDone ( )
{
	static UFunction* pFnAnimDone = NULL;

	if ( ! pFnAnimDone )
		pFnAnimDone = (UFunction*) UObject::GObjObjects()->Data[ 53294 ];

	ASGS_Controller_Dino_execAnimDone_Parms AnimDone_Parms;

	this->ProcessEvent ( pFnAnimDone, &AnimDone_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.IsOnGround
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Dino::IsOnGround ( )
{
	static UFunction* pFnIsOnGround = NULL;

	if ( ! pFnIsOnGround )
		pFnIsOnGround = (UFunction*) UObject::GObjObjects()->Data[ 53290 ];

	ASGS_Controller_Dino_execIsOnGround_Parms IsOnGround_Parms;

	this->ProcessEvent ( pFnIsOnGround, &IsOnGround_Parms, NULL );

	return IsOnGround_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.FallOver
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::FallOver ( )
{
	static UFunction* pFnFallOver = NULL;

	if ( ! pFnFallOver )
		pFnFallOver = (UFunction*) UObject::GObjObjects()->Data[ 53289 ];

	ASGS_Controller_Dino_execFallOver_Parms FallOver_Parms;

	this->ProcessEvent ( pFnFallOver, &FallOver_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.JumpOver
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::JumpOver ( )
{
	static UFunction* pFnJumpOver = NULL;

	if ( ! pFnJumpOver )
		pFnJumpOver = (UFunction*) UObject::GObjObjects()->Data[ 53288 ];

	ASGS_Controller_Dino_execJumpOver_Parms JumpOver_Parms;

	this->ProcessEvent ( pFnJumpOver, &JumpOver_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.DoJump
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::DoJump ( )
{
	static UFunction* pFnDoJump = NULL;

	if ( ! pFnDoJump )
		pFnDoJump = (UFunction*) UObject::GObjObjects()->Data[ 53285 ];

	ASGS_Controller_Dino_execDoJump_Parms DoJump_Parms;

	this->ProcessEvent ( pFnDoJump, &DoJump_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.NavActorReachable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  A                              ( CPF_Parm )

bool ASGS_Controller_Dino::NavActorReachable ( class AActor* A )
{
	static UFunction* pFnNavActorReachable = NULL;

	if ( ! pFnNavActorReachable )
		pFnNavActorReachable = (UFunction*) UObject::GObjObjects()->Data[ 53282 ];

	ASGS_Controller_Dino_execNavActorReachable_Parms NavActorReachable_Parms;
	NavActorReachable_Parms.A = A;

	this->ProcessEvent ( pFnNavActorReachable, &NavActorReachable_Parms, NULL );

	return NavActorReachable_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.CanDirectlyReachGoal
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Dino::CanDirectlyReachGoal ( )
{
	static UFunction* pFnCanDirectlyReachGoal = NULL;

	if ( ! pFnCanDirectlyReachGoal )
		pFnCanDirectlyReachGoal = (UFunction*) UObject::GObjObjects()->Data[ 53276 ];

	ASGS_Controller_Dino_execCanDirectlyReachGoal_Parms CanDirectlyReachGoal_Parms;

	this->ProcessEvent ( pFnCanDirectlyReachGoal, &CanDirectlyReachGoal_Parms, NULL );

	return CanDirectlyReachGoal_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.SeePlayer
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   SeenPlayer                     ( CPF_Parm )

void ASGS_Controller_Dino::eventSeePlayer ( class APawn* SeenPlayer )
{
	static UFunction* pFnSeePlayer = NULL;

	if ( ! pFnSeePlayer )
		pFnSeePlayer = (UFunction*) UObject::GObjObjects()->Data[ 53268 ];

	ASGS_Controller_Dino_eventSeePlayer_Parms SeePlayer_Parms;
	SeePlayer_Parms.SeenPlayer = SeenPlayer;

	this->ProcessEvent ( pFnSeePlayer, &SeePlayer_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.SeeMonster
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   Seen                           ( CPF_Parm )

void ASGS_Controller_Dino::eventSeeMonster ( class APawn* Seen )
{
	static UFunction* pFnSeeMonster = NULL;

	if ( ! pFnSeeMonster )
		pFnSeeMonster = (UFunction*) UObject::GObjObjects()->Data[ 53266 ];

	ASGS_Controller_Dino_eventSeeMonster_Parms SeeMonster_Parms;
	SeeMonster_Parms.Seen = Seen;

	this->ProcessEvent ( pFnSeeMonster, &SeeMonster_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.ShouldDinoMove
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Dino::ShouldDinoMove ( )
{
	static UFunction* pFnShouldDinoMove = NULL;

	if ( ! pFnShouldDinoMove )
		pFnShouldDinoMove = (UFunction*) UObject::GObjObjects()->Data[ 53264 ];

	ASGS_Controller_Dino_execShouldDinoMove_Parms ShouldDinoMove_Parms;

	this->ProcessEvent ( pFnShouldDinoMove, &ShouldDinoMove_Parms, NULL );

	return ShouldDinoMove_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.NotifyBump
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ASGS_Controller_Dino::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 53255 ];

	ASGS_Controller_Dino_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.NotifyHitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 HitNormal                      ( CPF_Parm )
// class AActor*                  Wall                           ( CPF_Parm )

bool ASGS_Controller_Dino::eventNotifyHitWall ( struct FVector HitNormal, class AActor* Wall )
{
	static UFunction* pFnNotifyHitWall = NULL;

	if ( ! pFnNotifyHitWall )
		pFnNotifyHitWall = (UFunction*) UObject::GObjObjects()->Data[ 53251 ];

	ASGS_Controller_Dino_eventNotifyHitWall_Parms NotifyHitWall_Parms;
	memcpy ( &NotifyHitWall_Parms.HitNormal, &HitNormal, 0xC );
	NotifyHitWall_Parms.Wall = Wall;

	this->ProcessEvent ( pFnNotifyHitWall, &NotifyHitWall_Parms, NULL );

	return NotifyHitWall_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.FindRandomDinoAttackPoint
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ASGS_Controller_Dino::FindRandomDinoAttackPoint ( )
{
	static UFunction* pFnFindRandomDinoAttackPoint = NULL;

	if ( ! pFnFindRandomDinoAttackPoint )
		pFnFindRandomDinoAttackPoint = (UFunction*) UObject::GObjObjects()->Data[ 53242 ];

	ASGS_Controller_Dino_execFindRandomDinoAttackPoint_Parms FindRandomDinoAttackPoint_Parms;

	this->ProcessEvent ( pFnFindRandomDinoAttackPoint, &FindRandomDinoAttackPoint_Parms, NULL );

	return FindRandomDinoAttackPoint_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.Roar
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::Roar ( )
{
	static UFunction* pFnRoar = NULL;

	if ( ! pFnRoar )
		pFnRoar = (UFunction*) UObject::GObjObjects()->Data[ 53241 ];

	ASGS_Controller_Dino_execRoar_Parms Roar_Parms;

	this->ProcessEvent ( pFnRoar, &Roar_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             NKiller                        ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_Controller_Dino::NotifyKilled ( class AController* NKiller, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 53236 ];

	ASGS_Controller_Dino_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.NKiller = NKiller;
	NotifyKilled_Parms.KilledPlayer = KilledPlayer;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.NotifyHateTakeHit
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            Damage                         ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )

void ASGS_Controller_Dino::eventNotifyHateTakeHit ( class AController* InstigatedBy, struct FVector HitLocation, int Damage, class UClass* DamageType, struct FVector Momentum )
{
	static UFunction* pFnNotifyHateTakeHit = NULL;

	if ( ! pFnNotifyHateTakeHit )
		pFnNotifyHateTakeHit = (UFunction*) UObject::GObjObjects()->Data[ 53228 ];

	ASGS_Controller_Dino_eventNotifyHateTakeHit_Parms NotifyHateTakeHit_Parms;
	NotifyHateTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &NotifyHateTakeHit_Parms.HitLocation, &HitLocation, 0xC );
	NotifyHateTakeHit_Parms.Damage = Damage;
	NotifyHateTakeHit_Parms.DamageType = DamageType;
	memcpy ( &NotifyHateTakeHit_Parms.Momentum, &Momentum, 0xC );

	this->ProcessEvent ( pFnNotifyHateTakeHit, &NotifyHateTakeHit_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.RemoveFromHatedActors
// [0x00020002] 
// Parameters infos:
// class APawn*                   OldEnemy                       ( CPF_Parm )

void ASGS_Controller_Dino::RemoveFromHatedActors ( class APawn* OldEnemy )
{
	static UFunction* pFnRemoveFromHatedActors = NULL;

	if ( ! pFnRemoveFromHatedActors )
		pFnRemoveFromHatedActors = (UFunction*) UObject::GObjObjects()->Data[ 53225 ];

	ASGS_Controller_Dino_execRemoveFromHatedActors_Parms RemoveFromHatedActors_Parms;
	RemoveFromHatedActors_Parms.OldEnemy = OldEnemy;

	this->ProcessEvent ( pFnRemoveFromHatedActors, &RemoveFromHatedActors_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.ReadjustHate
// [0x00820002] 
// Parameters infos:

void ASGS_Controller_Dino::ReadjustHate ( )
{
	static UFunction* pFnReadjustHate = NULL;

	if ( ! pFnReadjustHate )
		pFnReadjustHate = (UFunction*) UObject::GObjObjects()->Data[ 53222 ];

	ASGS_Controller_Dino_execReadjustHate_Parms ReadjustHate_Parms;

	this->ProcessEvent ( pFnReadjustHate, &ReadjustHate_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.AdjustHate
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_Dino::AdjustHate ( float DeltaTime )
{
	static UFunction* pFnAdjustHate = NULL;

	if ( ! pFnAdjustHate )
		pFnAdjustHate = (UFunction*) UObject::GObjObjects()->Data[ 53218 ];

	ASGS_Controller_Dino_execAdjustHate_Parms AdjustHate_Parms;
	AdjustHate_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnAdjustHate, &AdjustHate_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.SetDinoViewPitch
// [0x00820002] 
// Parameters infos:
// struct FVector                 Dir                            ( CPF_Parm )

void ASGS_Controller_Dino::SetDinoViewPitch ( struct FVector Dir )
{
	static UFunction* pFnSetDinoViewPitch = NULL;

	if ( ! pFnSetDinoViewPitch )
		pFnSetDinoViewPitch = (UFunction*) UObject::GObjObjects()->Data[ 53210 ];

	ASGS_Controller_Dino_execSetDinoViewPitch_Parms SetDinoViewPitch_Parms;
	memcpy ( &SetDinoViewPitch_Parms.Dir, &Dir, 0xC );

	this->ProcessEvent ( pFnSetDinoViewPitch, &SetDinoViewPitch_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.GetStompPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetStompPos ( )
{
	static UFunction* pFnGetStompPos = NULL;

	if ( ! pFnGetStompPos )
		pFnGetStompPos = (UFunction*) UObject::GObjObjects()->Data[ 53206 ];

	ASGS_Controller_Dino_execGetStompPos_Parms GetStompPos_Parms;

	this->ProcessEvent ( pFnGetStompPos, &GetStompPos_Parms, NULL );

	return GetStompPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.GetVehicleFlipPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetVehicleFlipPos ( )
{
	static UFunction* pFnGetVehicleFlipPos = NULL;

	if ( ! pFnGetVehicleFlipPos )
		pFnGetVehicleFlipPos = (UFunction*) UObject::GObjObjects()->Data[ 53203 ];

	ASGS_Controller_Dino_execGetVehicleFlipPos_Parms GetVehicleFlipPos_Parms;

	this->ProcessEvent ( pFnGetVehicleFlipPos, &GetVehicleFlipPos_Parms, NULL );

	return GetVehicleFlipPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.GetRockPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetRockPos ( )
{
	static UFunction* pFnGetRockPos = NULL;

	if ( ! pFnGetRockPos )
		pFnGetRockPos = (UFunction*) UObject::GObjObjects()->Data[ 53200 ];

	ASGS_Controller_Dino_execGetRockPos_Parms GetRockPos_Parms;

	this->ProcessEvent ( pFnGetRockPos, &GetRockPos_Parms, NULL );

	return GetRockPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.GetBitePos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetBitePos ( )
{
	static UFunction* pFnGetBitePos = NULL;

	if ( ! pFnGetBitePos )
		pFnGetBitePos = (UFunction*) UObject::GObjObjects()->Data[ 53197 ];

	ASGS_Controller_Dino_execGetBitePos_Parms GetBitePos_Parms;

	this->ProcessEvent ( pFnGetBitePos, &GetBitePos_Parms, NULL );

	return GetBitePos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.GetAimPos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetAimPos ( )
{
	static UFunction* pFnGetAimPos = NULL;

	if ( ! pFnGetAimPos )
		pFnGetAimPos = (UFunction*) UObject::GObjObjects()->Data[ 53194 ];

	ASGS_Controller_Dino_execGetAimPos_Parms GetAimPos_Parms;

	this->ProcessEvent ( pFnGetAimPos, &GetAimPos_Parms, NULL );

	return GetAimPos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.GetEyePos
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetEyePos ( )
{
	static UFunction* pFnGetEyePos = NULL;

	if ( ! pFnGetEyePos )
		pFnGetEyePos = (UFunction*) UObject::GObjObjects()->Data[ 53191 ];

	ASGS_Controller_Dino_execGetEyePos_Parms GetEyePos_Parms;

	this->ProcessEvent ( pFnGetEyePos, &GetEyePos_Parms, NULL );

	return GetEyePos_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.ResetRoar
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::ResetRoar ( )
{
	static UFunction* pFnResetRoar = NULL;

	if ( ! pFnResetRoar )
		pFnResetRoar = (UFunction*) UObject::GObjObjects()->Data[ 53190 ];

	ASGS_Controller_Dino_execResetRoar_Parms ResetRoar_Parms;

	this->ProcessEvent ( pFnResetRoar, &ResetRoar_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.Tick
// [0x00020102] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void ASGS_Controller_Dino::Tick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53178 ];

	ASGS_Controller_Dino_execTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.TryToJump
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Controller_Dino::TryToJump ( )
{
	static UFunction* pFnTryToJump = NULL;

	if ( ! pFnTryToJump )
		pFnTryToJump = (UFunction*) UObject::GObjObjects()->Data[ 53172 ];

	ASGS_Controller_Dino_execTryToJump_Parms TryToJump_Parms;

	this->ProcessEvent ( pFnTryToJump, &TryToJump_Parms, NULL );

	return TryToJump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.HandleHeadAim
// [0x00820002] 
// Parameters infos:

void ASGS_Controller_Dino::HandleHeadAim ( )
{
	static UFunction* pFnHandleHeadAim = NULL;

	if ( ! pFnHandleHeadAim )
		pFnHandleHeadAim = (UFunction*) UObject::GObjObjects()->Data[ 53170 ];

	ASGS_Controller_Dino_execHandleHeadAim_Parms HandleHeadAim_Parms;

	this->ProcessEvent ( pFnHandleHeadAim, &HandleHeadAim_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.ClearPath
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::ClearPath ( )
{
	static UFunction* pFnClearPath = NULL;

	if ( ! pFnClearPath )
		pFnClearPath = (UFunction*) UObject::GObjObjects()->Data[ 53167 ];

	ASGS_Controller_Dino_execClearPath_Parms ClearPath_Parms;

	this->ProcessEvent ( pFnClearPath, &ClearPath_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.RedoPathing
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::RedoPathing ( )
{
	static UFunction* pFnRedoPathing = NULL;

	if ( ! pFnRedoPathing )
		pFnRedoPathing = (UFunction*) UObject::GObjObjects()->Data[ 53166 ];

	ASGS_Controller_Dino_execRedoPathing_Parms RedoPathing_Parms;

	this->ProcessEvent ( pFnRedoPathing, &RedoPathing_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.HandleMovement
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_Dino::HandleMovement ( float DeltaTime )
{
	static UFunction* pFnHandleMovement = NULL;

	if ( ! pFnHandleMovement )
		pFnHandleMovement = (UFunction*) UObject::GObjObjects()->Data[ 53162 ];

	ASGS_Controller_Dino_execHandleMovement_Parms HandleMovement_Parms;
	HandleMovement_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnHandleMovement, &HandleMovement_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.GetMoveOffsetVector
// [0x00820002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Controller_Dino::GetMoveOffsetVector ( )
{
	static UFunction* pFnGetMoveOffsetVector = NULL;

	if ( ! pFnGetMoveOffsetVector )
		pFnGetMoveOffsetVector = (UFunction*) UObject::GObjObjects()->Data[ 53158 ];

	ASGS_Controller_Dino_execGetMoveOffsetVector_Parms GetMoveOffsetVector_Parms;

	this->ProcessEvent ( pFnGetMoveOffsetVector, &GetMoveOffsetVector_Parms, NULL );

	return GetMoveOffsetVector_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.AdjustSquadPositions
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::AdjustSquadPositions ( )
{
	static UFunction* pFnAdjustSquadPositions = NULL;

	if ( ! pFnAdjustSquadPositions )
		pFnAdjustSquadPositions = (UFunction*) UObject::GObjObjects()->Data[ 53155 ];

	ASGS_Controller_Dino_execAdjustSquadPositions_Parms AdjustSquadPositions_Parms;

	this->ProcessEvent ( pFnAdjustSquadPositions, &AdjustSquadPositions_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.HandleFlyingMovement
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_Dino::HandleFlyingMovement ( float DeltaTime )
{
	static UFunction* pFnHandleFlyingMovement = NULL;

	if ( ! pFnHandleFlyingMovement )
		pFnHandleFlyingMovement = (UFunction*) UObject::GObjObjects()->Data[ 53125 ];

	ASGS_Controller_Dino_execHandleFlyingMovement_Parms HandleFlyingMovement_Parms;
	HandleFlyingMovement_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnHandleFlyingMovement, &HandleFlyingMovement_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.GetMoveTarget
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::GetMoveTarget ( )
{
	static UFunction* pFnGetMoveTarget = NULL;

	if ( ! pFnGetMoveTarget )
		pFnGetMoveTarget = (UFunction*) UObject::GObjObjects()->Data[ 53117 ];

	ASGS_Controller_Dino_execGetMoveTarget_Parms GetMoveTarget_Parms;

	this->ProcessEvent ( pFnGetMoveTarget, &GetMoveTarget_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.DropTheBitch
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::DropTheBitch ( )
{
	static UFunction* pFnDropTheBitch = NULL;

	if ( ! pFnDropTheBitch )
		pFnDropTheBitch = (UFunction*) UObject::GObjObjects()->Data[ 53115 ];

	ASGS_Controller_Dino_execDropTheBitch_Parms DropTheBitch_Parms;

	this->ProcessEvent ( pFnDropTheBitch, &DropTheBitch_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.StopSpecialMovment
// [0x00020002] 
// Parameters infos:

void ASGS_Controller_Dino::StopSpecialMovment ( )
{
	static UFunction* pFnStopSpecialMovment = NULL;

	if ( ! pFnStopSpecialMovment )
		pFnStopSpecialMovment = (UFunction*) UObject::GObjObjects()->Data[ 53114 ];

	ASGS_Controller_Dino_execStopSpecialMovment_Parms StopSpecialMovment_Parms;

	this->ProcessEvent ( pFnStopSpecialMovment, &StopSpecialMovment_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.CheckSpeedAndDirection
// [0x00820002] 
// Parameters infos:

void ASGS_Controller_Dino::CheckSpeedAndDirection ( )
{
	static UFunction* pFnCheckSpeedAndDirection = NULL;

	if ( ! pFnCheckSpeedAndDirection )
		pFnCheckSpeedAndDirection = (UFunction*) UObject::GObjObjects()->Data[ 53106 ];

	ASGS_Controller_Dino_execCheckSpeedAndDirection_Parms CheckSpeedAndDirection_Parms;

	this->ProcessEvent ( pFnCheckSpeedAndDirection, &CheckSpeedAndDirection_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_Dino::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 53100 ];

	ASGS_Controller_Dino_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.AddDamager
// [0x00820002] 
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class ASGS_Controller_Player*  Damager                        ( CPF_Parm )

void ASGS_Controller_Dino::AddDamager ( int Damage, class ASGS_Controller_Player* Damager )
{
	static UFunction* pFnAddDamager = NULL;

	if ( ! pFnAddDamager )
		pFnAddDamager = (UFunction*) UObject::GObjObjects()->Data[ 53094 ];

	ASGS_Controller_Dino_execAddDamager_Parms AddDamager_Parms;
	AddDamager_Parms.Damage = Damage;
	AddDamager_Parms.Damager = Damager;

	this->ProcessEvent ( pFnAddDamager, &AddDamager_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.IsEnemyInRange
// [0x00824002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   pEnemy                         ( CPF_OptionalParm | CPF_Parm )

bool ASGS_Controller_Dino::IsEnemyInRange ( class APawn* pEnemy )
{
	static UFunction* pFnIsEnemyInRange = NULL;

	if ( ! pFnIsEnemyInRange )
		pFnIsEnemyInRange = (UFunction*) UObject::GObjObjects()->Data[ 53087 ];

	ASGS_Controller_Dino_execIsEnemyInRange_Parms IsEnemyInRange_Parms;
	IsEnemyInRange_Parms.pEnemy = pEnemy;

	this->ProcessEvent ( pFnIsEnemyInRange, &IsEnemyInRange_Parms, NULL );

	return IsEnemyInRange_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Controller_Dino.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ASGS_Controller_Dino::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 53086 ];

	ASGS_Controller_Dino_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_Dino.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   inPawn                         ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Controller_Dino::eventPossess ( class APawn* inPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 53083 ];

	ASGS_Controller_Dino_eventPossess_Parms Possess_Parms;
	Possess_Parms.inPawn = inPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.SGSIncrementKills
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnemyKill                     ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )

void ASGS_PlayerReplicationInfo::SGSIncrementKills ( unsigned long bEnemyKill, class APawn* KilledPawn )
{
	static UFunction* pFnSGSIncrementKills = NULL;

	if ( ! pFnSGSIncrementKills )
		pFnSGSIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 61137 ];

	ASGS_PlayerReplicationInfo_execSGSIncrementKills_Parms SGSIncrementKills_Parms;
	SGSIncrementKills_Parms.bEnemyKill = bEnemyKill;
	SGSIncrementKills_Parms.KilledPawn = KilledPawn;

	this->ProcessEvent ( pFnSGSIncrementKills, &SGSIncrementKills_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.IncrementKills
// [0x00020000] 
// Parameters infos:
// unsigned long                  bEnemyKill                     ( CPF_Parm )

void ASGS_PlayerReplicationInfo::IncrementKills ( unsigned long bEnemyKill )
{
	static UFunction* pFnIncrementKills = NULL;

	if ( ! pFnIncrementKills )
		pFnIncrementKills = (UFunction*) UObject::GObjObjects()->Data[ 61135 ];

	ASGS_PlayerReplicationInfo_execIncrementKills_Parms IncrementKills_Parms;
	IncrementKills_Parms.bEnemyKill = bEnemyKill;

	this->ProcessEvent ( pFnIncrementKills, &IncrementKills_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.CarnageWeaponKill
// [0x00020002] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_PlayerReplicationInfo::CarnageWeaponKill ( class UClass* DamageType )
{
	static UFunction* pFnCarnageWeaponKill = NULL;

	if ( ! pFnCarnageWeaponKill )
		pFnCarnageWeaponKill = (UFunction*) UObject::GObjObjects()->Data[ 61133 ];

	ASGS_PlayerReplicationInfo_execCarnageWeaponKill_Parms CarnageWeaponKill_Parms;
	CarnageWeaponKill_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnCarnageWeaponKill, &CarnageWeaponKill_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.CarnageDemotion
// [0x00020002] 
// Parameters infos:

void ASGS_PlayerReplicationInfo::CarnageDemotion ( )
{
	static UFunction* pFnCarnageDemotion = NULL;

	if ( ! pFnCarnageDemotion )
		pFnCarnageDemotion = (UFunction*) UObject::GObjObjects()->Data[ 61132 ];

	ASGS_PlayerReplicationInfo_execCarnageDemotion_Parms CarnageDemotion_Parms;

	this->ProcessEvent ( pFnCarnageDemotion, &CarnageDemotion_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.ShouldBroadCastWelcomeMessage
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bExiting                       ( CPF_OptionalParm | CPF_Parm )

bool ASGS_PlayerReplicationInfo::ShouldBroadCastWelcomeMessage ( unsigned long bExiting )
{
	static UFunction* pFnShouldBroadCastWelcomeMessage = NULL;

	if ( ! pFnShouldBroadCastWelcomeMessage )
		pFnShouldBroadCastWelcomeMessage = (UFunction*) UObject::GObjObjects()->Data[ 61129 ];

	ASGS_PlayerReplicationInfo_execShouldBroadCastWelcomeMessage_Parms ShouldBroadCastWelcomeMessage_Parms;
	ShouldBroadCastWelcomeMessage_Parms.bExiting = bExiting;

	this->ProcessEvent ( pFnShouldBroadCastWelcomeMessage, &ShouldBroadCastWelcomeMessage_Parms, NULL );

	return ShouldBroadCastWelcomeMessage_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PlayerReplicationInfo.SGSUpdateEventStatAchievements
// [0x00024002] 
// Parameters infos:
// struct FName                   StatName                       ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

void ASGS_PlayerReplicationInfo::SGSUpdateEventStatAchievements ( struct FName StatName, int Amount )
{
	static UFunction* pFnSGSUpdateEventStatAchievements = NULL;

	if ( ! pFnSGSUpdateEventStatAchievements )
		pFnSGSUpdateEventStatAchievements = (UFunction*) UObject::GObjObjects()->Data[ 61125 ];

	ASGS_PlayerReplicationInfo_execSGSUpdateEventStatAchievements_Parms SGSUpdateEventStatAchievements_Parms;
	memcpy ( &SGSUpdateEventStatAchievements_Parms.StatName, &StatName, 0x8 );
	SGSUpdateEventStatAchievements_Parms.Amount = Amount;

	this->ProcessEvent ( pFnSGSUpdateEventStatAchievements, &SGSUpdateEventStatAchievements_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.UpdateMacGuyver
// [0x00020002] 
// Parameters infos:
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_PlayerReplicationInfo::UpdateMacGuyver ( class UClass* DamageType )
{
	static UFunction* pFnUpdateMacGuyver = NULL;

	if ( ! pFnUpdateMacGuyver )
		pFnUpdateMacGuyver = (UFunction*) UObject::GObjObjects()->Data[ 61121 ];

	ASGS_PlayerReplicationInfo_execUpdateMacGuyver_Parms UpdateMacGuyver_Parms;
	UpdateMacGuyver_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnUpdateMacGuyver, &UpdateMacGuyver_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.UpdateVehicles
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ASGS_PlayerReplicationInfo::UpdateVehicles ( class APawn* P )
{
	static UFunction* pFnUpdateVehicles = NULL;

	if ( ! pFnUpdateVehicles )
		pFnUpdateVehicles = (UFunction*) UObject::GObjObjects()->Data[ 61117 ];

	ASGS_PlayerReplicationInfo_execUpdateVehicles_Parms UpdateVehicles_Parms;
	UpdateVehicles_Parms.P = P;

	this->ProcessEvent ( pFnUpdateVehicles, &UpdateVehicles_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.UpdatePunches
// [0x00020002] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )

void ASGS_PlayerReplicationInfo::UpdatePunches ( int Index )
{
	static UFunction* pFnUpdatePunches = NULL;

	if ( ! pFnUpdatePunches )
		pFnUpdatePunches = (UFunction*) UObject::GObjObjects()->Data[ 61114 ];

	ASGS_PlayerReplicationInfo_execUpdatePunches_Parms UpdatePunches_Parms;
	UpdatePunches_Parms.Index = Index;

	this->ProcessEvent ( pFnUpdatePunches, &UpdatePunches_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.UpdateWaveKills
// [0x00020002] 
// Parameters infos:

void ASGS_PlayerReplicationInfo::UpdateWaveKills ( )
{
	static UFunction* pFnUpdateWaveKills = NULL;

	if ( ! pFnUpdateWaveKills )
		pFnUpdateWaveKills = (UFunction*) UObject::GObjObjects()->Data[ 61113 ];

	ASGS_PlayerReplicationInfo_execUpdateWaveKills_Parms UpdateWaveKills_Parms;

	this->ProcessEvent ( pFnUpdateWaveKills, &UpdateWaveKills_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.IncrementSGSKillStat
// [0x00020002] 
// Parameters infos:
// struct FName                   KillType                       ( CPF_Parm )

void ASGS_PlayerReplicationInfo::IncrementSGSKillStat ( struct FName KillType )
{
	static UFunction* pFnIncrementSGSKillStat = NULL;

	if ( ! pFnIncrementSGSKillStat )
		pFnIncrementSGSKillStat = (UFunction*) UObject::GObjObjects()->Data[ 61111 ];

	ASGS_PlayerReplicationInfo_execIncrementSGSKillStat_Parms IncrementSGSKillStat_Parms;
	memcpy ( &IncrementSGSKillStat_Parms.KillType, &KillType, 0x8 );

	this->ProcessEvent ( pFnIncrementSGSKillStat, &IncrementSGSKillStat_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerReplicationInfo.IncrementDeathStat
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int ASGS_PlayerReplicationInfo::IncrementDeathStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementDeathStat = NULL;

	if ( ! pFnIncrementDeathStat )
		pFnIncrementDeathStat = (UFunction*) UObject::GObjObjects()->Data[ 56071 ];

	ASGS_PlayerReplicationInfo_execIncrementDeathStat_Parms IncrementDeathStat_Parms;
	memcpy ( &IncrementDeathStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementDeathStat, &IncrementDeathStat_Parms, NULL );

	return IncrementDeathStat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PlayerReplicationInfo.IncrementKillStat
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int ASGS_PlayerReplicationInfo::IncrementKillStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementKillStat = NULL;

	if ( ! pFnIncrementKillStat )
		pFnIncrementKillStat = (UFunction*) UObject::GObjObjects()->Data[ 61107 ];

	ASGS_PlayerReplicationInfo_execIncrementKillStat_Parms IncrementKillStat_Parms;
	memcpy ( &IncrementKillStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementKillStat, &IncrementKillStat_Parms, NULL );

	return IncrementKillStat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PlayerReplicationInfo.IncrementVehicleKillStat
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   NewStatName                    ( CPF_Parm )

int ASGS_PlayerReplicationInfo::IncrementVehicleKillStat ( struct FName NewStatName )
{
	static UFunction* pFnIncrementVehicleKillStat = NULL;

	if ( ! pFnIncrementVehicleKillStat )
		pFnIncrementVehicleKillStat = (UFunction*) UObject::GObjObjects()->Data[ 56069 ];

	ASGS_PlayerReplicationInfo_execIncrementVehicleKillStat_Parms IncrementVehicleKillStat_Parms;
	memcpy ( &IncrementVehicleKillStat_Parms.NewStatName, &NewStatName, 0x8 );

	this->ProcessEvent ( pFnIncrementVehicleKillStat, &IncrementVehicleKillStat_Parms, NULL );

	return IncrementVehicleKillStat_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VehicleWheel.OldDirtEffectFinished
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSystem                        ( CPF_Parm | CPF_EditInline )

void USGS_VehicleWheel::OldDirtEffectFinished ( class UParticleSystemComponent* PSystem )
{
	static UFunction* pFnOldDirtEffectFinished = NULL;

	if ( ! pFnOldDirtEffectFinished )
		pFnOldDirtEffectFinished = (UFunction*) UObject::GObjObjects()->Data[ 62273 ];

	USGS_VehicleWheel_execOldDirtEffectFinished_Parms OldDirtEffectFinished_Parms;
	OldDirtEffectFinished_Parms.PSystem = PSystem;

	this->ProcessEvent ( pFnOldDirtEffectFinished, &OldDirtEffectFinished_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleWheel.UpdateDirtParticle
// [0x00820102] 
// Parameters infos:

void USGS_VehicleWheel::UpdateDirtParticle ( )
{
	static UFunction* pFnUpdateDirtParticle = NULL;

	if ( ! pFnUpdateDirtParticle )
		pFnUpdateDirtParticle = (UFunction*) UObject::GObjObjects()->Data[ 62270 ];

	USGS_VehicleWheel_execUpdateDirtParticle_Parms UpdateDirtParticle_Parms;

	this->ProcessEvent ( pFnUpdateDirtParticle, &UpdateDirtParticle_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleWheel.SetDirtParticle
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// class AUDKVehicle*             OwnerVehicle                   ( CPF_Parm )
// class UParticleSystem*         NewTemplate                    ( CPF_Parm )
// struct FVector                 Offset                         ( CPF_OptionalParm | CPF_Parm )

void USGS_VehicleWheel::eventSetDirtParticle ( class AUDKVehicle* OwnerVehicle, class UParticleSystem* NewTemplate, struct FVector Offset )
{
	static UFunction* pFnSetDirtParticle = NULL;

	if ( ! pFnSetDirtParticle )
		pFnSetDirtParticle = (UFunction*) UObject::GObjObjects()->Data[ 62266 ];

	USGS_VehicleWheel_eventSetDirtParticle_Parms SetDirtParticle_Parms;
	SetDirtParticle_Parms.OwnerVehicle = OwnerVehicle;
	SetDirtParticle_Parms.NewTemplate = NewTemplate;
	memcpy ( &SetDirtParticle_Parms.Offset, &Offset, 0xC );

	this->ProcessEvent ( pFnSetDirtParticle, &SetDirtParticle_Parms, NULL );
};

// Function SGSOrion.SGS_Skill.Update_Hud
// [0x00020102] 
// Parameters infos:

void USGS_Skill::Update_Hud ( )
{
	static UFunction* pFnUpdate_Hud = NULL;

	if ( ! pFnUpdate_Hud )
		pFnUpdate_Hud = (UFunction*) UObject::GObjObjects()->Data[ 61993 ];

	USGS_Skill_execUpdate_Hud_Parms Update_Hud_Parms;

	this->ProcessEvent ( pFnUpdate_Hud, &Update_Hud_Parms, NULL );
};

// Function SGSOrion.SGS_Skill.Tick
// [0x00020002] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void USGS_Skill::Tick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 61991 ];

	USGS_Skill_execTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Skill.OnPlayerMove
// [0x00020000] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USGS_Skill::OnPlayerMove ( float DeltaTime )
{
	static UFunction* pFnOnPlayerMove = NULL;

	if ( ! pFnOnPlayerMove )
		pFnOnPlayerMove = (UFunction*) UObject::GObjObjects()->Data[ 61989 ];

	USGS_Skill_execOnPlayerMove_Parms OnPlayerMove_Parms;
	OnPlayerMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnOnPlayerMove, &OnPlayerMove_Parms, NULL );
};

// Function SGSOrion.SGS_Skill.Deactivate
// [0x00020002] 
// Parameters infos:

void USGS_Skill::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 61988 ];

	USGS_Skill_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill.Activate
// [0x00020002] 
// Parameters infos:

void USGS_Skill::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 61987 ];

	USGS_Skill_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByDrivingSeat.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByDrivingSeat::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51433 ];

	USGS_AnimBlendByDrivingSeat_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByGladiatorTurretAim.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByGladiatorTurretAim::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51441 ];

	USGS_AnimBlendByGladiatorTurretAim_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.SpawnTracer
// [0x00820102] 
// Parameters infos:
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Vehicle_Gladiator::SpawnTracer ( struct FVector EffectLocation, struct FVector HitLocation )
{
	static UFunction* pFnSpawnTracer = NULL;

	if ( ! pFnSpawnTracer )
		pFnSpawnTracer = (UFunction*) UObject::GObjObjects()->Data[ 62460 ];

	ASGS_Vehicle_Gladiator_execSpawnTracer_Parms SpawnTracer_Parms;
	memcpy ( &SpawnTracer_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracer_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnTracer, &SpawnTracer_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.VehicleWeaponFireEffects
// [0x00820102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_Gladiator::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 62456 ];

	ASGS_Vehicle_Gladiator_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle_Gladiator::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 62452 ];

	ASGS_Vehicle_Gladiator_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.PostRenderFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_Vehicle_Gladiator::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 62447 ];

	ASGS_Vehicle_Gladiator_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ASGS_Vehicle_Gladiator::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 62440 ];

	ASGS_Vehicle_Gladiator_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle_Gladiator::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 62437 ];

	ASGS_Vehicle_Gladiator_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Gladiator.DriverLeft
// [0x00020002] 
// Parameters infos:

void ASGS_Vehicle_Gladiator::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 62435 ];

	ASGS_Vehicle_Gladiator_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_Gladiator::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 62430 ];

	ASGS_Vehicle_Gladiator_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.SuspensionHeavyShift
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          Delta                          ( CPF_Parm )

void ASGS_Vehicle_Gladiator::eventSuspensionHeavyShift ( float Delta )
{
	static UFunction* pFnSuspensionHeavyShift = NULL;

	if ( ! pFnSuspensionHeavyShift )
		pFnSuspensionHeavyShift = (UFunction*) UObject::GObjObjects()->Data[ 62428 ];

	ASGS_Vehicle_Gladiator_eventSuspensionHeavyShift_Parms SuspensionHeavyShift_Parms;
	SuspensionHeavyShift_Parms.Delta = Delta;

	this->ProcessEvent ( pFnSuspensionHeavyShift, &SuspensionHeavyShift_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Gladiator::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 62427 ];

	ASGS_Vehicle_Gladiator_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_Gladiator::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 62425 ];

	ASGS_Vehicle_Gladiator_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Gladiator.PostBeginPlay
// [0x00820102] 
// Parameters infos:

void ASGS_Vehicle_Gladiator::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 62422 ];

	ASGS_Vehicle_Gladiator_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByHasDriver.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByHasDriver::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51448 ];

	USGS_AnimBlendByHasDriver_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByJetPack.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByJetPack::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51454 ];

	USGS_AnimBlendByJetPack_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_JetPack.Tick
// [0x00020002] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void USGS_Skill_JetPack::Tick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62067 ];

	USGS_Skill_JetPack_execTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_JetPack.PlayJetSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void USGS_Skill_JetPack::PlayJetSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayJetSound = NULL;

	if ( ! pFnPlayJetSound )
		pFnPlayJetSound = (UFunction*) UObject::GObjObjects()->Data[ 62065 ];

	USGS_Skill_JetPack_execPlayJetSound_Parms PlayJetSound_Parms;
	PlayJetSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayJetSound, &PlayJetSound_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_JetPack.OnPlayerMove
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void USGS_Skill_JetPack::OnPlayerMove ( float DeltaTime )
{
	static UFunction* pFnOnPlayerMove = NULL;

	if ( ! pFnOnPlayerMove )
		pFnOnPlayerMove = (UFunction*) UObject::GObjObjects()->Data[ 62059 ];

	USGS_Skill_JetPack_execOnPlayerMove_Parms OnPlayerMove_Parms;
	OnPlayerMove_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnOnPlayerMove, &OnPlayerMove_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_JetPack.Deactivate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_JetPack::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 62057 ];

	USGS_Skill_JetPack_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_JetPack.Activate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_JetPack::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 62053 ];

	USGS_Skill_JetPack_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByLandingGear.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByLandingGear::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51460 ];

	USGS_AnimBlendByLandingGear_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByRollDirection.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByRollDirection::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51467 ];

	USGS_AnimBlendByRollDirection_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByRolling.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByRolling::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51474 ];

	USGS_AnimBlendByRolling_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_AnimBlendByTankMode.TickAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void USGS_AnimBlendByTankMode::eventTickAnim ( float DeltaSeconds )
{
	static UFunction* pFnTickAnim = NULL;

	if ( ! pFnTickAnim )
		pFnTickAnim = (UFunction*) UObject::GObjObjects()->Data[ 51479 ];

	USGS_AnimBlendByTankMode_eventTickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTickAnim, &TickAnim_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.TakeRadiusDamage
// [0x00024100] 
// Parameters infos:
// class AController*             InstigatedBy                   ( CPF_Parm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          DamageRadius                   ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// unsigned long                  bFullDamage                    ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// float                          DamageFalloffExponent          ( CPF_OptionalParm | CPF_Parm )

void ASGS_BuyStation::TakeRadiusDamage ( class AController* InstigatedBy, float BaseDamage, float DamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, unsigned long bFullDamage, class AActor* DamageCauser, float DamageFalloffExponent )
{
	static UFunction* pFnTakeRadiusDamage = NULL;

	if ( ! pFnTakeRadiusDamage )
		pFnTakeRadiusDamage = (UFunction*) UObject::GObjObjects()->Data[ 51515 ];

	ASGS_BuyStation_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy ( &TakeRadiusDamage_Parms.HurtOrigin, &HurtOrigin, 0xC );
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	TakeRadiusDamage_Parms.DamageFalloffExponent = DamageFalloffExponent;

	this->ProcessEvent ( pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.TurnEMPOff
// [0x00020102] 
// Parameters infos:

void ASGS_BuyStation::TurnEMPOff ( )
{
	static UFunction* pFnTurnEMPOff = NULL;

	if ( ! pFnTurnEMPOff )
		pFnTurnEMPOff = (UFunction*) UObject::GObjObjects()->Data[ 51514 ];

	ASGS_BuyStation_execTurnEMPOff_Parms TurnEMPOff_Parms;

	this->ProcessEvent ( pFnTurnEMPOff, &TurnEMPOff_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.TurnEMPOn
// [0x00020102] 
// Parameters infos:

void ASGS_BuyStation::TurnEMPOn ( )
{
	static UFunction* pFnTurnEMPOn = NULL;

	if ( ! pFnTurnEMPOn )
		pFnTurnEMPOn = (UFunction*) UObject::GObjObjects()->Data[ 51513 ];

	ASGS_BuyStation_execTurnEMPOn_Parms TurnEMPOn_Parms;

	this->ProcessEvent ( pFnTurnEMPOn, &TurnEMPOn_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.EndEMP
// [0x00020002] 
// Parameters infos:

void ASGS_BuyStation::EndEMP ( )
{
	static UFunction* pFnEndEMP = NULL;

	if ( ! pFnEndEMP )
		pFnEndEMP = (UFunction*) UObject::GObjObjects()->Data[ 51512 ];

	ASGS_BuyStation_execEndEMP_Parms EndEMP_Parms;

	this->ProcessEvent ( pFnEndEMP, &EndEMP_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.HitWithEMP
// [0x002200C2] 
// Parameters infos:

void ASGS_BuyStation::HitWithEMP ( )
{
	static UFunction* pFnHitWithEMP = NULL;

	if ( ! pFnHitWithEMP )
		pFnHitWithEMP = (UFunction*) UObject::GObjObjects()->Data[ 51511 ];

	ASGS_BuyStation_execHitWithEMP_Parms HitWithEMP_Parms;

	this->ProcessEvent ( pFnHitWithEMP, &HitWithEMP_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.ApplyImpulse
// [0x00024800] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ImpulseDir                     ( CPF_Parm )
// float                          ImpulseMag                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class UClass*                  DamageType                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_BuyStation::eventApplyImpulse ( struct FVector ImpulseDir, float ImpulseMag, struct FVector HitLocation, struct FTraceHitInfo HitInfo, class UClass* DamageType )
{
	static UFunction* pFnApplyImpulse = NULL;

	if ( ! pFnApplyImpulse )
		pFnApplyImpulse = (UFunction*) UObject::GObjObjects()->Data[ 51505 ];

	ASGS_BuyStation_eventApplyImpulse_Parms ApplyImpulse_Parms;
	memcpy ( &ApplyImpulse_Parms.ImpulseDir, &ImpulseDir, 0xC );
	ApplyImpulse_Parms.ImpulseMag = ImpulseMag;
	memcpy ( &ApplyImpulse_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &ApplyImpulse_Parms.HitInfo, &HitInfo, 0x1C );
	ApplyImpulse_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnApplyImpulse, &ApplyImpulse_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.SetPowered
// [0x00020002] 
// Parameters infos:
// unsigned long                  bPowered                       ( CPF_Parm )

void ASGS_BuyStation::SetPowered ( unsigned long bPowered )
{
	static UFunction* pFnSetPowered = NULL;

	if ( ! pFnSetPowered )
		pFnSetPowered = (UFunction*) UObject::GObjObjects()->Data[ 51503 ];

	ASGS_BuyStation_execSetPowered_Parms SetPowered_Parms;
	SetPowered_Parms.bPowered = bPowered;

	this->ProcessEvent ( pFnSetPowered, &SetPowered_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.TurnPowerOff
// [0x00020102] 
// Parameters infos:

void ASGS_BuyStation::TurnPowerOff ( )
{
	static UFunction* pFnTurnPowerOff = NULL;

	if ( ! pFnTurnPowerOff )
		pFnTurnPowerOff = (UFunction*) UObject::GObjObjects()->Data[ 51502 ];

	ASGS_BuyStation_execTurnPowerOff_Parms TurnPowerOff_Parms;

	this->ProcessEvent ( pFnTurnPowerOff, &TurnPowerOff_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.TurnPowerOn
// [0x00020102] 
// Parameters infos:

void ASGS_BuyStation::TurnPowerOn ( )
{
	static UFunction* pFnTurnPowerOn = NULL;

	if ( ! pFnTurnPowerOn )
		pFnTurnPowerOn = (UFunction*) UObject::GObjObjects()->Data[ 51501 ];

	ASGS_BuyStation_execTurnPowerOn_Parms TurnPowerOn_Parms;

	this->ProcessEvent ( pFnTurnPowerOn, &TurnPowerOn_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.Register
// [0x00020102] 
// Parameters infos:

void ASGS_BuyStation::Register ( )
{
	static UFunction* pFnRegister = NULL;

	if ( ! pFnRegister )
		pFnRegister = (UFunction*) UObject::GObjObjects()->Data[ 51499 ];

	ASGS_BuyStation_execRegister_Parms Register_Parms;

	this->ProcessEvent ( pFnRegister, &Register_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_BuyStation::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51498 ];

	ASGS_BuyStation_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_BuyStation.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_BuyStation::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 51496 ];

	ASGS_BuyStation_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_AssistMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_AssistMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 51583 ];

	USGS_AssistMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_AssistMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_AssistMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 51576 ];

	USGS_AssistMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_AutoTurret.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_AutoTurret::eventTakeDamage ( int Damage, class AController* InstigatedBy, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 51632 ];

	ASGS_AutoTurret_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurret.Tick
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_AutoTurret::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 51624 ];

	ASGS_AutoTurret_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurret.SetMyDesiredRotation
// [0x00020002] 
// Parameters infos:
// struct FRotator                Rot                            ( CPF_Parm )

void ASGS_AutoTurret::SetMyDesiredRotation ( struct FRotator Rot )
{
	static UFunction* pFnSetMyDesiredRotation = NULL;

	if ( ! pFnSetMyDesiredRotation )
		pFnSetMyDesiredRotation = (UFunction*) UObject::GObjObjects()->Data[ 51622 ];

	ASGS_AutoTurret_execSetMyDesiredRotation_Parms SetMyDesiredRotation_Parms;
	memcpy ( &SetMyDesiredRotation_Parms.Rot, &Rot, 0xC );

	this->ProcessEvent ( pFnSetMyDesiredRotation, &SetMyDesiredRotation_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurret.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_AutoTurret::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 51621 ];

	ASGS_AutoTurret_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurretController.CanStillAttackTarget
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_AutoTurretController::CanStillAttackTarget ( )
{
	static UFunction* pFnCanStillAttackTarget = NULL;

	if ( ! pFnCanStillAttackTarget )
		pFnCanStillAttackTarget = (UFunction*) UObject::GObjObjects()->Data[ 51664 ];

	ASGS_AutoTurretController_execCanStillAttackTarget_Parms CanStillAttackTarget_Parms;

	this->ProcessEvent ( pFnCanStillAttackTarget, &CanStillAttackTarget_Parms, NULL );

	return CanStillAttackTarget_Parms.ReturnValue;
};

// Function SGSOrion.SGS_AutoTurretController.StopMuzzleFlash
// [0x00020002] 
// Parameters infos:

void ASGS_AutoTurretController::StopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 51663 ];

	ASGS_AutoTurretController_execStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurretController.FireAtTarget
// [0x00820002] 
// Parameters infos:

void ASGS_AutoTurretController::FireAtTarget ( )
{
	static UFunction* pFnFireAtTarget = NULL;

	if ( ! pFnFireAtTarget )
		pFnFireAtTarget = (UFunction*) UObject::GObjObjects()->Data[ 51658 ];

	ASGS_AutoTurretController_execFireAtTarget_Parms FireAtTarget_Parms;

	this->ProcessEvent ( pFnFireAtTarget, &FireAtTarget_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurretController.FindTarget
// [0x00020002] 
// Parameters infos:

void ASGS_AutoTurretController::FindTarget ( )
{
	static UFunction* pFnFindTarget = NULL;

	if ( ! pFnFindTarget )
		pFnFindTarget = (UFunction*) UObject::GObjObjects()->Data[ 51655 ];

	ASGS_AutoTurretController_execFindTarget_Parms FindTarget_Parms;

	this->ProcessEvent ( pFnFindTarget, &FindTarget_Parms, NULL );
};

// Function SGSOrion.SGS_AutoTurretController.SetAttractionState
// [0x00020002] 
// Parameters infos:

void ASGS_AutoTurretController::SetAttractionState ( )
{
	static UFunction* pFnSetAttractionState = NULL;

	if ( ! pFnSetAttractionState )
		pFnSetAttractionState = (UFunction*) UObject::GObjObjects()->Data[ 51654 ];

	ASGS_AutoTurretController_execSetAttractionState_Parms SetAttractionState_Parms;

	this->ProcessEvent ( pFnSetAttractionState, &SetAttractionState_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.SeePlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APawn*                   SeenPlayer                     ( CPF_Parm )

void ASGS_Bot::eventSeePlayer ( class APawn* SeenPlayer )
{
	static UFunction* pFnSeePlayer = NULL;

	if ( ! pFnSeePlayer )
		pFnSeePlayer = (UFunction*) UObject::GObjObjects()->Data[ 52922 ];

	ASGS_Bot_eventSeePlayer_Parms SeePlayer_Parms;
	SeePlayer_Parms.SeenPlayer = SeenPlayer;

	this->ProcessEvent ( pFnSeePlayer, &SeePlayer_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.Initialize
// [0x00424002] 
// Parameters infos:
// float                          InSkill                        ( CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )
// struct FCharacterInfo          BotInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Bot::Initialize ( float InSkill, int TeamIndex, struct FCharacterInfo* BotInfo )
{
	static UFunction* pFnInitialize = NULL;

	if ( ! pFnInitialize )
		pFnInitialize = (UFunction*) UObject::GObjObjects()->Data[ 52902 ];

	ASGS_Bot_execInitialize_Parms Initialize_Parms;
	Initialize_Parms.InSkill = InSkill;
	Initialize_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnInitialize, &Initialize_Parms, NULL );

	if ( BotInfo )
		memcpy ( BotInfo, &Initialize_Parms.BotInfo, 0x70 );
};

// Function SGSOrion.SGS_Bot.SwitchToBestWeapon
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned long                  bForceNewWeapon                ( CPF_OptionalParm | CPF_Parm )

void ASGS_Bot::SwitchToBestWeapon ( unsigned long bForceNewWeapon )
{
	static UFunction* pFnSwitchToBestWeapon = NULL;

	if ( ! pFnSwitchToBestWeapon )
		pFnSwitchToBestWeapon = (UFunction*) UObject::GObjObjects()->Data[ 52900 ];

	ASGS_Bot_execSwitchToBestWeapon_Parms SwitchToBestWeapon_Parms;
	SwitchToBestWeapon_Parms.bForceNewWeapon = bForceNewWeapon;

	this->ProcessEvent ( pFnSwitchToBestWeapon, &SwitchToBestWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.Possess
// [0x00020002] 
// Parameters infos:
// class APawn*                   aPawn                          ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Bot::Possess ( class APawn* aPawn, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossess = NULL;

	if ( ! pFnPossess )
		pFnPossess = (UFunction*) UObject::GObjObjects()->Data[ 52887 ];

	ASGS_Bot_execPossess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossess, &Possess_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.ExecuteWhatToDoNext
// [0x00080802] ( FUNC_Event )
// Parameters infos:

void ASGS_Bot::eventExecuteWhatToDoNext ( )
{
	static UFunction* pFnExecuteWhatToDoNext = NULL;

	if ( ! pFnExecuteWhatToDoNext )
		pFnExecuteWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 52884 ];

	ASGS_Bot_eventExecuteWhatToDoNext_Parms ExecuteWhatToDoNext_Parms;

	this->ProcessEvent ( pFnExecuteWhatToDoNext, &ExecuteWhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.MoveToDefensePoint
// [0x00020002] 
// Parameters infos:

void ASGS_Bot::MoveToDefensePoint ( )
{
	static UFunction* pFnMoveToDefensePoint = NULL;

	if ( ! pFnMoveToDefensePoint )
		pFnMoveToDefensePoint = (UFunction*) UObject::GObjObjects()->Data[ 52883 ];

	ASGS_Bot_execMoveToDefensePoint_Parms MoveToDefensePoint_Parms;

	this->ProcessEvent ( pFnMoveToDefensePoint, &MoveToDefensePoint_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.ShouldUseSkill
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Bot::ShouldUseSkill ( )
{
	static UFunction* pFnShouldUseSkill = NULL;

	if ( ! pFnShouldUseSkill )
		pFnShouldUseSkill = (UFunction*) UObject::GObjObjects()->Data[ 52879 ];

	ASGS_Bot_execShouldUseSkill_Parms ShouldUseSkill_Parms;

	this->ProcessEvent ( pFnShouldUseSkill, &ShouldUseSkill_Parms, NULL );

	return ShouldUseSkill_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Bot.StopJetPacking
// [0x00020002] 
// Parameters infos:

void ASGS_Bot::StopJetPacking ( )
{
	static UFunction* pFnStopJetPacking = NULL;

	if ( ! pFnStopJetPacking )
		pFnStopJetPacking = (UFunction*) UObject::GObjObjects()->Data[ 52878 ];

	ASGS_Bot_execStopJetPacking_Parms StopJetPacking_Parms;

	this->ProcessEvent ( pFnStopJetPacking, &StopJetPacking_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.JetPack
// [0x00820002] 
// Parameters infos:

void ASGS_Bot::JetPack ( )
{
	static UFunction* pFnJetPack = NULL;

	if ( ! pFnJetPack )
		pFnJetPack = (UFunction*) UObject::GObjObjects()->Data[ 52876 ];

	ASGS_Bot_execJetPack_Parms JetPack_Parms;

	this->ProcessEvent ( pFnJetPack, &JetPack_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASGS_Bot::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52873 ];

	ASGS_Bot_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.NotifyBump
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

bool ASGS_Bot::eventNotifyBump ( class AActor* Other, struct FVector HitNormal )
{
	static UFunction* pFnNotifyBump = NULL;

	if ( ! pFnNotifyBump )
		pFnNotifyBump = (UFunction*) UObject::GObjObjects()->Data[ 52868 ];

	ASGS_Bot_eventNotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy ( &NotifyBump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnNotifyBump, &NotifyBump_Parms, NULL );

	return NotifyBump_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Bot.EnterVehicle
// [0x00020002] 
// Parameters infos:
// class AVehicle*                V                              ( CPF_Parm )

void ASGS_Bot::EnterVehicle ( class AVehicle* V )
{
	static UFunction* pFnEnterVehicle = NULL;

	if ( ! pFnEnterVehicle )
		pFnEnterVehicle = (UFunction*) UObject::GObjObjects()->Data[ 52866 ];

	ASGS_Bot_execEnterVehicle_Parms EnterVehicle_Parms;
	EnterVehicle_Parms.V = V;

	this->ProcessEvent ( pFnEnterVehicle, &EnterVehicle_Parms, NULL );
};

// Function SGSOrion.SGS_Bot.YellAt
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Moron                          ( CPF_Parm )

void ASGS_Bot::YellAt ( class APlayerReplicationInfo* Moron )
{
	static UFunction* pFnYellAt = NULL;

	if ( ! pFnYellAt )
		pFnYellAt = (UFunction*) UObject::GObjObjects()->Data[ 52861 ];

	ASGS_Bot_execYellAt_Parms YellAt_Parms;
	YellAt_Parms.Moron = Moron;

	this->ProcessEvent ( pFnYellAt, &YellAt_Parms, NULL );
};

// Function SGSOrion.SGS_GameCarnage.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_GameCarnage::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 56144 ];

	ASGS_GameCarnage_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCarnage.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ASGS_GameCarnage::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56138 ];

	ASGS_GameCarnage_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCarnage.ScoreKill
// [0x00020000] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )

void ASGS_GameCarnage::ScoreKill ( class AController* Killer, class AController* Other )
{
	static UFunction* pFnScoreKill = NULL;

	if ( ! pFnScoreKill )
		pFnScoreKill = (UFunction*) UObject::GObjObjects()->Data[ 56135 ];

	ASGS_GameCarnage_execScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;

	this->ProcessEvent ( pFnScoreKill, &ScoreKill_Parms, NULL );
};

// Function SGSOrion.SGS_GameCarnage.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_GameCarnage::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 56126 ];

	ASGS_GameCarnage_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function SGSOrion.SGS_GameCarnage.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void ASGS_GameCarnage::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 56124 ];

	ASGS_GameCarnage_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function SGSOrion.SGS_GameCarnage.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ASGS_GameCarnage::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 56119 ];

	ASGS_GameCarnage_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.BroadcastDeathMessage
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             Other                          ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_Game::BroadcastDeathMessage ( class AController* Killer, class AController* Other, class UClass* DamageType )
{
	static UFunction* pFnBroadcastDeathMessage = NULL;

	if ( ! pFnBroadcastDeathMessage )
		pFnBroadcastDeathMessage = (UFunction*) UObject::GObjObjects()->Data[ 56110 ];

	ASGS_Game_execBroadcastDeathMessage_Parms BroadcastDeathMessage_Parms;
	BroadcastDeathMessage_Parms.Killer = Killer;
	BroadcastDeathMessage_Parms.Other = Other;
	BroadcastDeathMessage_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnBroadcastDeathMessage, &BroadcastDeathMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Game.SquadLeaderDied
// [0x00020002] 
// Parameters infos:
// class ASGController_Bot*       dino                           ( CPF_Parm )

void ASGS_Game::SquadLeaderDied ( class ASGController_Bot* dino )
{
	static UFunction* pFnSquadLeaderDied = NULL;

	if ( ! pFnSquadLeaderDied )
		pFnSquadLeaderDied = (UFunction*) UObject::GObjObjects()->Data[ 56105 ];

	ASGS_Game_execSquadLeaderDied_Parms SquadLeaderDied_Parms;
	SquadLeaderDied_Parms.dino = dino;

	this->ProcessEvent ( pFnSquadLeaderDied, &SquadLeaderDied_Parms, NULL );
};

// Function SGSOrion.SGS_Game.RegisterSpawnPoint
// [0x00020002] 
// Parameters infos:
// class ASGS_CapturePoint*       SP                             ( CPF_Parm )

void ASGS_Game::RegisterSpawnPoint ( class ASGS_CapturePoint* SP )
{
	static UFunction* pFnRegisterSpawnPoint = NULL;

	if ( ! pFnRegisterSpawnPoint )
		pFnRegisterSpawnPoint = (UFunction*) UObject::GObjObjects()->Data[ 56103 ];

	ASGS_Game_execRegisterSpawnPoint_Parms RegisterSpawnPoint_Parms;
	RegisterSpawnPoint_Parms.SP = SP;

	this->ProcessEvent ( pFnRegisterSpawnPoint, &RegisterSpawnPoint_Parms, NULL );
};

// Function SGSOrion.SGS_Game.CreateSquad
// [0x00820002] 
// Parameters infos:
// class ASGController_Bot*       dino                           ( CPF_Parm )
// int                            Id                             ( CPF_Parm )

void ASGS_Game::CreateSquad ( class ASGController_Bot* dino, int Id )
{
	static UFunction* pFnCreateSquad = NULL;

	if ( ! pFnCreateSquad )
		pFnCreateSquad = (UFunction*) UObject::GObjObjects()->Data[ 56099 ];

	ASGS_Game_execCreateSquad_Parms CreateSquad_Parms;
	CreateSquad_Parms.dino = dino;
	CreateSquad_Parms.Id = Id;

	this->ProcessEvent ( pFnCreateSquad, &CreateSquad_Parms, NULL );
};

// Function SGSOrion.SGS_Game.AddToSquad
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ASGController_Bot*       dino                           ( CPF_Parm )
// int                            Id                             ( CPF_Parm )

bool ASGS_Game::AddToSquad ( class ASGController_Bot* dino, int Id )
{
	static UFunction* pFnAddToSquad = NULL;

	if ( ! pFnAddToSquad )
		pFnAddToSquad = (UFunction*) UObject::GObjObjects()->Data[ 56094 ];

	ASGS_Game_execAddToSquad_Parms AddToSquad_Parms;
	AddToSquad_Parms.dino = dino;
	AddToSquad_Parms.Id = Id;

	this->ProcessEvent ( pFnAddToSquad, &AddToSquad_Parms, NULL );

	return AddToSquad_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_Game::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 56090 ];

	ASGS_Game_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.EndSpree
// [0x00020002] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Killer                         ( CPF_Parm )
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )

void ASGS_Game::EndSpree ( class AUTPlayerReplicationInfo* Killer, class AUTPlayerReplicationInfo* Other )
{
	static UFunction* pFnEndSpree = NULL;

	if ( ! pFnEndSpree )
		pFnEndSpree = (UFunction*) UObject::GObjObjects()->Data[ 56085 ];

	ASGS_Game_execEndSpree_Parms EndSpree_Parms;
	EndSpree_Parms.Killer = Killer;
	EndSpree_Parms.Other = Other;

	this->ProcessEvent ( pFnEndSpree, &EndSpree_Parms, NULL );
};

// Function SGSOrion.SGS_Game.ForceRespawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Game::ForceRespawn ( )
{
	static UFunction* pFnForceRespawn = NULL;

	if ( ! pFnForceRespawn )
		pFnForceRespawn = (UFunction*) UObject::GObjObjects()->Data[ 56083 ];

	ASGS_Game_execForceRespawn_Parms ForceRespawn_Parms;

	this->ProcessEvent ( pFnForceRespawn, &ForceRespawn_Parms, NULL );

	return ForceRespawn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.NotifySpree
// [0x00020000] 
// Parameters infos:
// class AUTPlayerReplicationInfo* Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )

void ASGS_Game::NotifySpree ( class AUTPlayerReplicationInfo* Other, int Num )
{
	static UFunction* pFnNotifySpree = NULL;

	if ( ! pFnNotifySpree )
		pFnNotifySpree = (UFunction*) UObject::GObjObjects()->Data[ 56080 ];

	ASGS_Game_execNotifySpree_Parms NotifySpree_Parms;
	NotifySpree_Parms.Other = Other;
	NotifySpree_Parms.Num = Num;

	this->ProcessEvent ( pFnNotifySpree, &NotifySpree_Parms, NULL );
};

// Function SGSOrion.SGS_Game.NotifyKilled
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_Game::NotifyKilled ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnNotifyKilled = NULL;

	if ( ! pFnNotifyKilled )
		pFnNotifyKilled = (UFunction*) UObject::GObjObjects()->Data[ 56074 ];

	ASGS_Game_execNotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.KilledPlayer = KilledPlayer;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	NotifyKilled_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnNotifyKilled, &NotifyKilled_Parms, NULL );
};

// Function SGSOrion.SGS_Game.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_Game::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 56059 ];

	ASGS_Game_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function SGSOrion.SGS_Game.GetFlyingRandomDest
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ASGS_Game::GetFlyingRandomDest ( )
{
	static UFunction* pFnGetFlyingRandomDest = NULL;

	if ( ! pFnGetFlyingRandomDest )
		pFnGetFlyingRandomDest = (UFunction*) UObject::GObjObjects()->Data[ 53123 ];

	ASGS_Game_execGetFlyingRandomDest_Parms GetFlyingRandomDest_Parms;

	this->ProcessEvent ( pFnGetFlyingRandomDest, &GetFlyingRandomDest_Parms, NULL );

	return GetFlyingRandomDest_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.AddLife
// [0x00020002] 
// Parameters infos:
// class ASGS_Controller_Player*  C                              ( CPF_Parm )

void ASGS_Game::AddLife ( class ASGS_Controller_Player* C )
{
	static UFunction* pFnAddLife = NULL;

	if ( ! pFnAddLife )
		pFnAddLife = (UFunction*) UObject::GObjObjects()->Data[ 56056 ];

	ASGS_Game_execAddLife_Parms AddLife_Parms;
	AddLife_Parms.C = C;

	this->ProcessEvent ( pFnAddLife, &AddLife_Parms, NULL );
};

// Function SGSOrion.SGS_Game.InitializeBot
// [0x00420002] 
// Parameters infos:
// class AUTBot*                  NewBot                         ( CPF_Parm )
// class AUTTeamInfo*             BotTeam                        ( CPF_Parm )
// struct FCharacterInfo          BotInfo                        ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Game::InitializeBot ( class AUTBot* NewBot, class AUTTeamInfo* BotTeam, struct FCharacterInfo* BotInfo )
{
	static UFunction* pFnInitializeBot = NULL;

	if ( ! pFnInitializeBot )
		pFnInitializeBot = (UFunction*) UObject::GObjObjects()->Data[ 56052 ];

	ASGS_Game_execInitializeBot_Parms InitializeBot_Parms;
	InitializeBot_Parms.NewBot = NewBot;
	InitializeBot_Parms.BotTeam = BotTeam;

	this->ProcessEvent ( pFnInitializeBot, &InitializeBot_Parms, NULL );

	if ( BotInfo )
		memcpy ( BotInfo, &InitializeBot_Parms.BotInfo, 0x70 );
};

// Function SGSOrion.SGS_Game.SpawnBot
// [0x00824002] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* ASGS_Game::SpawnBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnSpawnBot = NULL;

	if ( ! pFnSpawnBot )
		pFnSpawnBot = (UFunction*) UObject::GObjObjects()->Data[ 56044 ];

	ASGS_Game_execSpawnBot_Parms SpawnBot_Parms;
	memcpy ( &SpawnBot_Parms.BotName, &BotName, 0xC );
	SpawnBot_Parms.bUseTeamIndex = bUseTeamIndex;
	SpawnBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnSpawnBot, &SpawnBot_Parms, NULL );

	return SpawnBot_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.AddBot
// [0x00024002] 
// Parameters infos:
// class AUTBot*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 BotName                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// unsigned long                  bUseTeamIndex                  ( CPF_OptionalParm | CPF_Parm )
// int                            TeamIndex                      ( CPF_OptionalParm | CPF_Parm )

class AUTBot* ASGS_Game::AddBot ( struct FString BotName, unsigned long bUseTeamIndex, int TeamIndex )
{
	static UFunction* pFnAddBot = NULL;

	if ( ! pFnAddBot )
		pFnAddBot = (UFunction*) UObject::GObjObjects()->Data[ 56037 ];

	ASGS_Game_execAddBot_Parms AddBot_Parms;
	memcpy ( &AddBot_Parms.BotName, &BotName, 0xC );
	AddBot_Parms.bUseTeamIndex = bUseTeamIndex;
	AddBot_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnAddBot, &AddBot_Parms, NULL );

	return AddBot_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.GenericPlayerInitialization
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ASGS_Game::GenericPlayerInitialization ( class AController* C )
{
	static UFunction* pFnGenericPlayerInitialization = NULL;

	if ( ! pFnGenericPlayerInitialization )
		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 56034 ];

	ASGS_Game_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
	GenericPlayerInitialization_Parms.C = C;

	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
};

// Function SGSOrion.SGS_Game.SetTeam
// [0x00020002] 
// Parameters infos:
// class AController*             Other                          ( CPF_Parm )
// class AUTTeamInfo*             NewTeam                        ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

void ASGS_Game::SetTeam ( class AController* Other, class AUTTeamInfo* NewTeam, unsigned long bNewTeam )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 56029 ];

	ASGS_Game_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Other = Other;
	SetTeam_Parms.NewTeam = NewTeam;
	SetTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function SGSOrion.SGS_Game.ChangeTeam
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             Other                          ( CPF_Parm )
// int                            Num                            ( CPF_Parm )
// unsigned long                  bNewTeam                       ( CPF_Parm )

bool ASGS_Game::ChangeTeam ( class AController* Other, int Num, unsigned long bNewTeam )
{
	static UFunction* pFnChangeTeam = NULL;

	if ( ! pFnChangeTeam )
		pFnChangeTeam = (UFunction*) UObject::GObjObjects()->Data[ 56022 ];

	ASGS_Game_execChangeTeam_Parms ChangeTeam_Parms;
	ChangeTeam_Parms.Other = Other;
	ChangeTeam_Parms.Num = Num;
	ChangeTeam_Parms.bNewTeam = bNewTeam;

	this->ProcessEvent ( pFnChangeTeam, &ChangeTeam_Parms, NULL );

	return ChangeTeam_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.PlayEndOfMatchMessage
// [0x00020002] 
// Parameters infos:

void ASGS_Game::PlayEndOfMatchMessage ( )
{
	static UFunction* pFnPlayEndOfMatchMessage = NULL;

	if ( ! pFnPlayEndOfMatchMessage )
		pFnPlayEndOfMatchMessage = (UFunction*) UObject::GObjObjects()->Data[ 56020 ];

	ASGS_Game_execPlayEndOfMatchMessage_Parms PlayEndOfMatchMessage_Parms;

	this->ProcessEvent ( pFnPlayEndOfMatchMessage, &PlayEndOfMatchMessage_Parms, NULL );
};

// Function SGSOrion.SGS_Game.CanSpectate
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerController*       Viewer                         ( CPF_Parm )
// class APlayerReplicationInfo*  ViewTarget                     ( CPF_Parm )

bool ASGS_Game::CanSpectate ( class APlayerController* Viewer, class APlayerReplicationInfo* ViewTarget )
{
	static UFunction* pFnCanSpectate = NULL;

	if ( ! pFnCanSpectate )
		pFnCanSpectate = (UFunction*) UObject::GObjObjects()->Data[ 56016 ];

	ASGS_Game_execCanSpectate_Parms CanSpectate_Parms;
	CanSpectate_Parms.Viewer = Viewer;
	CanSpectate_Parms.ViewTarget = ViewTarget;

	this->ProcessEvent ( pFnCanSpectate, &CanSpectate_Parms, NULL );

	return CanSpectate_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.PreBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Game::PreBeginPlay ( )
{
	static UFunction* pFnPreBeginPlay = NULL;

	if ( ! pFnPreBeginPlay )
		pFnPreBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56015 ];

	ASGS_Game_execPreBeginPlay_Parms PreBeginPlay_Parms;

	this->ProcessEvent ( pFnPreBeginPlay, &PreBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Game.ReduceDamage
// [0x00420002] 
// Parameters infos:
// class APawn*                   injured                        ( CPF_Parm )
// class AController*             InstigatedBy                   ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_Parm )
// int                            Damage                         ( CPF_Parm | CPF_OutParm )
// struct FVector                 Momentum                       ( CPF_Parm | CPF_OutParm )

void ASGS_Game::ReduceDamage ( class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class AActor* DamageCauser, int* Damage, struct FVector* Momentum )
{
	static UFunction* pFnReduceDamage = NULL;

	if ( ! pFnReduceDamage )
		pFnReduceDamage = (UFunction*) UObject::GObjObjects()->Data[ 56007 ];

	ASGS_Game_execReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy ( &ReduceDamage_Parms.HitLocation, &HitLocation, 0xC );
	ReduceDamage_Parms.DamageType = DamageType;
	ReduceDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnReduceDamage, &ReduceDamage_Parms, NULL );

	if ( Damage )
		*Damage = ReduceDamage_Parms.Damage;

	if ( Momentum )
		memcpy ( Momentum, &ReduceDamage_Parms.Momentum, 0xC );
};

// Function SGSOrion.SGS_Game.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void ASGS_Game::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 56005 ];

	ASGS_Game_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function SGSOrion.SGS_Game.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             NewPlayer                      ( CPF_Parm )

void ASGS_Game::RestartPlayer ( class AController* NewPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 56002 ];

	ASGS_Game_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function SGSOrion.SGS_Game.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ASGS_Game::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 55993 ];

	ASGS_Game_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.InitPawn
// [0x00020002] 
// Parameters infos:
// class APawn*                   Pawn                           ( CPF_Parm )

void ASGS_Game::InitPawn ( class APawn* Pawn )
{
	static UFunction* pFnInitPawn = NULL;

	if ( ! pFnInitPawn )
		pFnInitPawn = (UFunction*) UObject::GObjObjects()->Data[ 55990 ];

	ASGS_Game_execInitPawn_Parms InitPawn_Parms;
	InitPawn_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnInitPawn, &InitPawn_Parms, NULL );
};

// Function SGSOrion.SGS_Game.AddInitialBots
// [0x00020002] 
// Parameters infos:

void ASGS_Game::AddInitialBots ( )
{
	static UFunction* pFnAddInitialBots = NULL;

	if ( ! pFnAddInitialBots )
		pFnAddInitialBots = (UFunction*) UObject::GObjObjects()->Data[ 55988 ];

	ASGS_Game_execAddInitialBots_Parms AddInitialBots_Parms;

	this->ProcessEvent ( pFnAddInitialBots, &AddInitialBots_Parms, NULL );
};

// Function SGSOrion.SGS_Game.AddBots
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// int                            Num                            ( CPF_Parm )

void ASGS_Game::AddBots ( int Num )
{
	static UFunction* pFnAddBots = NULL;

	if ( ! pFnAddBots )
		pFnAddBots = (UFunction*) UObject::GObjObjects()->Data[ 55986 ];

	ASGS_Game_execAddBots_Parms AddBots_Parms;
	AddBots_Parms.Num = Num;

	this->ProcessEvent ( pFnAddBots, &AddBots_Parms, NULL );
};

// Function SGSOrion.SGS_Game.NeedPlayers
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Game::NeedPlayers ( )
{
	static UFunction* pFnNeedPlayers = NULL;

	if ( ! pFnNeedPlayers )
		pFnNeedPlayers = (UFunction*) UObject::GObjObjects()->Data[ 55984 ];

	ASGS_Game_execNeedPlayers_Parms NeedPlayers_Parms;

	this->ProcessEvent ( pFnNeedPlayers, &NeedPlayers_Parms, NULL );

	return NeedPlayers_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Game::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 55977 ];

	ASGS_Game_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function SGSOrion.SGS_Game.AtCapacity
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bSpectator                     ( CPF_Parm )

bool ASGS_Game::AtCapacity ( unsigned long bSpectator )
{
	static UFunction* pFnAtCapacity = NULL;

	if ( ! pFnAtCapacity )
		pFnAtCapacity = (UFunction*) UObject::GObjObjects()->Data[ 55972 ];

	ASGS_Game_execAtCapacity_Parms AtCapacity_Parms;
	AtCapacity_Parms.bSpectator = bSpectator;

	this->ProcessEvent ( pFnAtCapacity, &AtCapacity_Parms, NULL );

	return AtCapacity_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.DinoLive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Game::DinoLive ( )
{
	static UFunction* pFnDinoLive = NULL;

	if ( ! pFnDinoLive )
		pFnDinoLive = (UFunction*) UObject::GObjObjects()->Data[ 55970 ];

	ASGS_Game_execDinoLive_Parms DinoLive_Parms;

	this->ProcessEvent ( pFnDinoLive, &DinoLive_Parms, NULL );
};

// Function SGSOrion.SGS_Game.IceAge
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_Game::IceAge ( )
{
	static UFunction* pFnIceAge = NULL;

	if ( ! pFnIceAge )
		pFnIceAge = (UFunction*) UObject::GObjObjects()->Data[ 55965 ];

	ASGS_Game_execIceAge_Parms IceAge_Parms;

	this->ProcessEvent ( pFnIceAge, &IceAge_Parms, NULL );
};

// Function SGSOrion.SGS_Game.CreateTeam
// [0x00020002] 
// Parameters infos:
// int                            TeamIndex                      ( CPF_Parm )

void ASGS_Game::CreateTeam ( int TeamIndex )
{
	static UFunction* pFnCreateTeam = NULL;

	if ( ! pFnCreateTeam )
		pFnCreateTeam = (UFunction*) UObject::GObjObjects()->Data[ 55963 ];

	ASGS_Game_execCreateTeam_Parms CreateTeam_Parms;
	CreateTeam_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnCreateTeam, &CreateTeam_Parms, NULL );
};

// Function SGSOrion.SGS_Game.IsADeveloperID
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ASGS_Controller_Player*  C                              ( CPF_Parm )

bool ASGS_Game::IsADeveloperID ( class ASGS_Controller_Player* C )
{
	static UFunction* pFnIsADeveloperID = NULL;

	if ( ! pFnIsADeveloperID )
		pFnIsADeveloperID = (UFunction*) UObject::GObjObjects()->Data[ 55959 ];

	ASGS_Game_execIsADeveloperID_Parms IsADeveloperID_Parms;
	IsADeveloperID_Parms.C = C;

	this->ProcessEvent ( pFnIsADeveloperID, &IsADeveloperID_Parms, NULL );

	return IsADeveloperID_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Game.UpdateGameSettings
// [0x00020002] 
// Parameters infos:

void ASGS_Game::UpdateGameSettings ( )
{
	static UFunction* pFnUpdateGameSettings = NULL;

	if ( ! pFnUpdateGameSettings )
		pFnUpdateGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 55955 ];

	ASGS_Game_execUpdateGameSettings_Parms UpdateGameSettings_Parms;

	this->ProcessEvent ( pFnUpdateGameSettings, &UpdateGameSettings_Parms, NULL );
};

// Function SGSOrion.SGS_Game.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MapName                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Portal                         ( CPF_Parm | CPF_NeedCtorLink )

class UClass* ASGS_Game::eventSetGameType ( struct FString MapName, struct FString Options, struct FString Portal )
{
	static UFunction* pFnSetGameType = NULL;

	if ( ! pFnSetGameType )
		pFnSetGameType = (UFunction*) UObject::GObjObjects()->Data[ 55944 ];

	ASGS_Game_eventSetGameType_Parms SetGameType_Parms;
	memcpy ( &SetGameType_Parms.MapName, &MapName, 0xC );
	memcpy ( &SetGameType_Parms.Options, &Options, 0xC );
	memcpy ( &SetGameType_Parms.Portal, &Portal, 0xC );

	this->ProcessEvent ( pFnSetGameType, &SetGameType_Parms, NULL );

	return SetGameType_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_GameCTF::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 56209 ];

	ASGS_GameCTF_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.ScoreFlag
// [0x00820002] 
// Parameters infos:
// class AController*             Scorer                         ( CPF_Parm )
// class AUTCTFFlag*              theFlag                        ( CPF_Parm )

void ASGS_GameCTF::ScoreFlag ( class AController* Scorer, class AUTCTFFlag* theFlag )
{
	static UFunction* pFnScoreFlag = NULL;

	if ( ! pFnScoreFlag )
		pFnScoreFlag = (UFunction*) UObject::GObjObjects()->Data[ 56197 ];

	ASGS_GameCTF_execScoreFlag_Parms ScoreFlag_Parms;
	ScoreFlag_Parms.Scorer = Scorer;
	ScoreFlag_Parms.theFlag = theFlag;

	this->ProcessEvent ( pFnScoreFlag, &ScoreFlag_Parms, NULL );
};

// Function SGSOrion.SGS_GameCTF.GetAutoObjectiveFor
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTPlayerController*     PC                             ( CPF_Parm )

class AActor* ASGS_GameCTF::GetAutoObjectiveFor ( class AUTPlayerController* PC )
{
	static UFunction* pFnGetAutoObjectiveFor = NULL;

	if ( ! pFnGetAutoObjectiveFor )
		pFnGetAutoObjectiveFor = (UFunction*) UObject::GObjObjects()->Data[ 56194 ];

	ASGS_GameCTF_execGetAutoObjectiveFor_Parms GetAutoObjectiveFor_Parms;
	GetAutoObjectiveFor_Parms.PC = PC;

	this->ProcessEvent ( pFnGetAutoObjectiveFor, &GetAutoObjectiveFor_Parms, NULL );

	return GetAutoObjectiveFor_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.ViewObjective
// [0x00020002] 
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )

void ASGS_GameCTF::ViewObjective ( class APlayerController* PC )
{
	static UFunction* pFnViewObjective = NULL;

	if ( ! pFnViewObjective )
		pFnViewObjective = (UFunction*) UObject::GObjObjects()->Data[ 56191 ];

	ASGS_GameCTF_execViewObjective_Parms ViewObjective_Parms;
	ViewObjective_Parms.PC = PC;

	this->ProcessEvent ( pFnViewObjective, &ViewObjective_Parms, NULL );
};

// Function SGSOrion.SGS_GameCTF.GetLocationFor
// [0x00420002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   StatusPawn                     ( CPF_Parm )
// int                            LocationSpeechOffset           ( CPF_Parm )
// class AActor*                  LocationObject                 ( CPF_Parm | CPF_OutParm )
// int                            MessageIndex                   ( CPF_Parm | CPF_OutParm )

bool ASGS_GameCTF::GetLocationFor ( class APawn* StatusPawn, int LocationSpeechOffset, class AActor** LocationObject, int* MessageIndex )
{
	static UFunction* pFnGetLocationFor = NULL;

	if ( ! pFnGetLocationFor )
		pFnGetLocationFor = (UFunction*) UObject::GObjObjects()->Data[ 56176 ];

	ASGS_GameCTF_execGetLocationFor_Parms GetLocationFor_Parms;
	GetLocationFor_Parms.StatusPawn = StatusPawn;
	GetLocationFor_Parms.LocationSpeechOffset = LocationSpeechOffset;

	this->ProcessEvent ( pFnGetLocationFor, &GetLocationFor_Parms, NULL );

	if ( LocationObject )
		*LocationObject = GetLocationFor_Parms.LocationObject;

	if ( MessageIndex )
		*MessageIndex = GetLocationFor_Parms.MessageIndex;

	return GetLocationFor_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ASGS_GameCTF::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56169 ];

	ASGS_GameCTF_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.WantFastSpawnFor
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AAIController*           B                              ( CPF_Parm )

bool ASGS_GameCTF::WantFastSpawnFor ( class AAIController* B )
{
	static UFunction* pFnWantFastSpawnFor = NULL;

	if ( ! pFnWantFastSpawnFor )
		pFnWantFastSpawnFor = (UFunction*) UObject::GObjObjects()->Data[ 56165 ];

	ASGS_GameCTF_execWantFastSpawnFor_Parms WantFastSpawnFor_Parms;
	WantFastSpawnFor_Parms.B = B;

	this->ProcessEvent ( pFnWantFastSpawnFor, &WantFastSpawnFor_Parms, NULL );

	return WantFastSpawnFor_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.NearGoal
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AController*             C                              ( CPF_Parm )

bool ASGS_GameCTF::NearGoal ( class AController* C )
{
	static UFunction* pFnNearGoal = NULL;

	if ( ! pFnNearGoal )
		pFnNearGoal = (UFunction*) UObject::GObjObjects()->Data[ 56161 ];

	ASGS_GameCTF_execNearGoal_Parms NearGoal_Parms;
	NearGoal_Parms.C = C;

	this->ProcessEvent ( pFnNearGoal, &NearGoal_Parms, NULL );

	return NearGoal_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameCTF.RegisterFlag
// [0x00020002] 
// Parameters infos:
// class AUTCTFFlag*              F                              ( CPF_Parm )
// int                            TeamIndex                      ( CPF_Parm )

void ASGS_GameCTF::RegisterFlag ( class AUTCTFFlag* F, int TeamIndex )
{
	static UFunction* pFnRegisterFlag = NULL;

	if ( ! pFnRegisterFlag )
		pFnRegisterFlag = (UFunction*) UObject::GObjObjects()->Data[ 56158 ];

	ASGS_GameCTF_execRegisterFlag_Parms RegisterFlag_Parms;
	RegisterFlag_Parms.F = F;
	RegisterFlag_Parms.TeamIndex = TeamIndex;

	this->ProcessEvent ( pFnRegisterFlag, &RegisterFlag_Parms, NULL );
};

// Function SGSOrion.SGS_GameCTF.SetEndGameFocus
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )

void ASGS_GameCTF::SetEndGameFocus ( class APlayerReplicationInfo* Winner )
{
	static UFunction* pFnSetEndGameFocus = NULL;

	if ( ! pFnSetEndGameFocus )
		pFnSetEndGameFocus = (UFunction*) UObject::GObjObjects()->Data[ 56155 ];

	ASGS_GameCTF_execSetEndGameFocus_Parms SetEndGameFocus_Parms;
	SetEndGameFocus_Parms.Winner = Winner;

	this->ProcessEvent ( pFnSetEndGameFocus, &SetEndGameFocus_Parms, NULL );
};

// Function SGSOrion.SGS_GameCTF.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASGS_GameCTF::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56149 ];

	ASGS_GameCTF_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_MedicGun.Tick
// [0x00020002] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void USGS_Skill_MedicGun::Tick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62076 ];

	USGS_Skill_MedicGun_execTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_MedicGun.PlayHealSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void USGS_Skill_MedicGun::PlayHealSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayHealSound = NULL;

	if ( ! pFnPlayHealSound )
		pFnPlayHealSound = (UFunction*) UObject::GObjObjects()->Data[ 62074 ];

	USGS_Skill_MedicGun_execPlayHealSound_Parms PlayHealSound_Parms;
	PlayHealSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayHealSound, &PlayHealSound_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_MedicGun.Deactivate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_MedicGun::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 62073 ];

	USGS_Skill_MedicGun_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_MedicGun.Activate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_MedicGun::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 62072 ];

	USGS_Skill_MedicGun_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_Cloack.PlayCloakSound
// [0x00020002] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void USGS_Skill_Cloack::PlayCloakSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayCloakSound = NULL;

	if ( ! pFnPlayCloakSound )
		pFnPlayCloakSound = (UFunction*) UObject::GObjObjects()->Data[ 62040 ];

	USGS_Skill_Cloack_execPlayCloakSound_Parms PlayCloakSound_Parms;
	PlayCloakSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayCloakSound, &PlayCloakSound_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_Cloack.Deactivate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_Cloack::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 62038 ];

	USGS_Skill_Cloack_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_Cloack.Activate
// [0x00020002] 
// Parameters infos:

void USGS_Skill_Cloack::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 62036 ];

	USGS_Skill_Cloack_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Skill_Cloack.Tick
// [0x00020002] 
// Parameters infos:
// float                          ElapsedTime                    ( CPF_Parm )

void USGS_Skill_Cloack::Tick ( float ElapsedTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62029 ];

	USGS_Skill_Cloack_execTick_Parms Tick_Parms;
	Tick_Parms.ElapsedTime = ElapsedTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_CapturePoint.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_CapturePoint::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 52947 ];

	ASGS_CapturePoint_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_CapturePoint.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASGS_CapturePoint::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 52943 ];

	ASGS_CapturePoint_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_CapturePoint.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_CapturePoint::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 52934 ];

	ASGS_CapturePoint_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_GameReplicationInfo.UpdateCapturePointInfo
// [0x00020002] 
// Parameters infos:
// class ASGS_CapturePoint*       cp                             ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

void ASGS_GameReplicationInfo::UpdateCapturePointInfo ( class ASGS_CapturePoint* cp, int Index )
{
	static UFunction* pFnUpdateCapturePointInfo = NULL;

	if ( ! pFnUpdateCapturePointInfo )
		pFnUpdateCapturePointInfo = (UFunction*) UObject::GObjObjects()->Data[ 56560 ];

	ASGS_GameReplicationInfo_execUpdateCapturePointInfo_Parms UpdateCapturePointInfo_Parms;
	UpdateCapturePointInfo_Parms.cp = cp;
	UpdateCapturePointInfo_Parms.Index = Index;

	this->ProcessEvent ( pFnUpdateCapturePointInfo, &UpdateCapturePointInfo_Parms, NULL );
};

// Function SGSOrion.SGS_GameReplicationInfo.RegisterCapturePoint
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class ASGS_CapturePoint*       cp                             ( CPF_Parm )

int ASGS_GameReplicationInfo::RegisterCapturePoint ( class ASGS_CapturePoint* cp )
{
	static UFunction* pFnRegisterCapturePoint = NULL;

	if ( ! pFnRegisterCapturePoint )
		pFnRegisterCapturePoint = (UFunction*) UObject::GObjObjects()->Data[ 52945 ];

	ASGS_GameReplicationInfo_execRegisterCapturePoint_Parms RegisterCapturePoint_Parms;
	RegisterCapturePoint_Parms.cp = cp;

	this->ProcessEvent ( pFnRegisterCapturePoint, &RegisterCapturePoint_Parms, NULL );

	return RegisterCapturePoint_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameReplicationInfo.UpdateFlags
// [0x00020002] 
// Parameters infos:

void ASGS_GameReplicationInfo::UpdateFlags ( )
{
	static UFunction* pFnUpdateFlags = NULL;

	if ( ! pFnUpdateFlags )
		pFnUpdateFlags = (UFunction*) UObject::GObjObjects()->Data[ 56556 ];

	ASGS_GameReplicationInfo_execUpdateFlags_Parms UpdateFlags_Parms;

	this->ProcessEvent ( pFnUpdateFlags, &UpdateFlags_Parms, NULL );
};

// Function SGSOrion.SGS_GameReplicationInfo.GundyLog
// [0x00020002] 
// Parameters infos:

void ASGS_GameReplicationInfo::GundyLog ( )
{
	static UFunction* pFnGundyLog = NULL;

	if ( ! pFnGundyLog )
		pFnGundyLog = (UFunction*) UObject::GObjObjects()->Data[ 56555 ];

	ASGS_GameReplicationInfo_execGundyLog_Parms GundyLog_Parms;

	this->ProcessEvent ( pFnGundyLog, &GundyLog_Parms, NULL );
};

// Function SGSOrion.SGS_GameReplicationInfo.Timer
// [0x00020102] 
// Parameters infos:

void ASGS_GameReplicationInfo::Timer ( )
{
	static UFunction* pFnTimer = NULL;

	if ( ! pFnTimer )
		pFnTimer = (UFunction*) UObject::GObjObjects()->Data[ 56552 ];

	ASGS_GameReplicationInfo_execTimer_Parms Timer_Parms;

	this->ProcessEvent ( pFnTimer, &Timer_Parms, NULL );
};

// Function SGSOrion.SGS_GameReplicationInfo.SetTeam
// [0x00020102] 
// Parameters infos:
// int                            Index                          ( CPF_Parm )
// class ATeamInfo*               TI                             ( CPF_Parm )

void ASGS_GameReplicationInfo::SetTeam ( int Index, class ATeamInfo* TI )
{
	static UFunction* pFnSetTeam = NULL;

	if ( ! pFnSetTeam )
		pFnSetTeam = (UFunction*) UObject::GObjObjects()->Data[ 56549 ];

	ASGS_GameReplicationInfo_execSetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Index = Index;
	SetTeam_Parms.TI = TI;

	this->ProcessEvent ( pFnSetTeam, &SetTeam_Parms, NULL );
};

// Function SGSOrion.SGS_CapturePointMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_CapturePointMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 52998 ];

	USGS_CapturePointMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_CarnageMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_CarnageMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 53008 ];

	USGS_CarnageMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_GameDinoSurvival::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 56398 ];

	ASGS_GameDinoSurvival_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ASGS_GameDinoSurvival::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56390 ];

	ASGS_GameDinoSurvival_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.CheckNumberOfDinosRemaining
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ASGS_GameDinoSurvival::CheckNumberOfDinosRemaining ( )
{
	static UFunction* pFnCheckNumberOfDinosRemaining = NULL;

	if ( ! pFnCheckNumberOfDinosRemaining )
		pFnCheckNumberOfDinosRemaining = (UFunction*) UObject::GObjObjects()->Data[ 56386 ];

	ASGS_GameDinoSurvival_execCheckNumberOfDinosRemaining_Parms CheckNumberOfDinosRemaining_Parms;

	this->ProcessEvent ( pFnCheckNumberOfDinosRemaining, &CheckNumberOfDinosRemaining_Parms, NULL );

	return CheckNumberOfDinosRemaining_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.AllPlayersDead
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_GameDinoSurvival::AllPlayersDead ( )
{
	static UFunction* pFnAllPlayersDead = NULL;

	if ( ! pFnAllPlayersDead )
		pFnAllPlayersDead = (UFunction*) UObject::GObjObjects()->Data[ 56382 ];

	ASGS_GameDinoSurvival_execAllPlayersDead_Parms AllPlayersDead_Parms;

	this->ProcessEvent ( pFnAllPlayersDead, &AllPlayersDead_Parms, NULL );

	return AllPlayersDead_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_GameDinoSurvival::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 56378 ];

	ASGS_GameDinoSurvival_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.RatePlayerStart
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerStart*            P                              ( CPF_Parm )
// unsigned char                  Team                           ( CPF_Parm )
// class AController*             Player                         ( CPF_Parm )

float ASGS_GameDinoSurvival::RatePlayerStart ( class APlayerStart* P, unsigned char Team, class AController* Player )
{
	static UFunction* pFnRatePlayerStart = NULL;

	if ( ! pFnRatePlayerStart )
		pFnRatePlayerStart = (UFunction*) UObject::GObjObjects()->Data[ 56372 ];

	ASGS_GameDinoSurvival_execRatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;

	this->ProcessEvent ( pFnRatePlayerStart, &RatePlayerStart_Parms, NULL );

	return RatePlayerStart_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.ActuallyDoSpawns
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::ActuallyDoSpawns ( )
{
	static UFunction* pFnActuallyDoSpawns = NULL;

	if ( ! pFnActuallyDoSpawns )
		pFnActuallyDoSpawns = (UFunction*) UObject::GObjObjects()->Data[ 56367 ];

	ASGS_GameDinoSurvival_execActuallyDoSpawns_Parms ActuallyDoSpawns_Parms;

	this->ProcessEvent ( pFnActuallyDoSpawns, &ActuallyDoSpawns_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.DoCountDownTimer
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::DoCountDownTimer ( )
{
	static UFunction* pFnDoCountDownTimer = NULL;

	if ( ! pFnDoCountDownTimer )
		pFnDoCountDownTimer = (UFunction*) UObject::GObjObjects()->Data[ 56365 ];

	ASGS_GameDinoSurvival_execDoCountDownTimer_Parms DoCountDownTimer_Parms;

	this->ProcessEvent ( pFnDoCountDownTimer, &DoCountDownTimer_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.NextWaveIncoming
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::NextWaveIncoming ( )
{
	static UFunction* pFnNextWaveIncoming = NULL;

	if ( ! pFnNextWaveIncoming )
		pFnNextWaveIncoming = (UFunction*) UObject::GObjObjects()->Data[ 56363 ];

	ASGS_GameDinoSurvival_execNextWaveIncoming_Parms NextWaveIncoming_Parms;

	this->ProcessEvent ( pFnNextWaveIncoming, &NextWaveIncoming_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RestartPlayer
// [0x00020002] 
// Parameters infos:
// class AController*             NewPlayer                      ( CPF_Parm )

void ASGS_GameDinoSurvival::RestartPlayer ( class AController* NewPlayer )
{
	static UFunction* pFnRestartPlayer = NULL;

	if ( ! pFnRestartPlayer )
		pFnRestartPlayer = (UFunction*) UObject::GObjObjects()->Data[ 56361 ];

	ASGS_GameDinoSurvival_execRestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnRestartPlayer, &RestartPlayer_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.ReallySpawnDeadPlayers
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::ReallySpawnDeadPlayers ( )
{
	static UFunction* pFnReallySpawnDeadPlayers = NULL;

	if ( ! pFnReallySpawnDeadPlayers )
		pFnReallySpawnDeadPlayers = (UFunction*) UObject::GObjObjects()->Data[ 56359 ];

	ASGS_GameDinoSurvival_execReallySpawnDeadPlayers_Parms ReallySpawnDeadPlayers_Parms;

	this->ProcessEvent ( pFnReallySpawnDeadPlayers, &ReallySpawnDeadPlayers_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.SpawnDeadPlayers
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::SpawnDeadPlayers ( )
{
	static UFunction* pFnSpawnDeadPlayers = NULL;

	if ( ! pFnSpawnDeadPlayers )
		pFnSpawnDeadPlayers = (UFunction*) UObject::GObjObjects()->Data[ 56358 ];

	ASGS_GameDinoSurvival_execSpawnDeadPlayers_Parms SpawnDeadPlayers_Parms;

	this->ProcessEvent ( pFnSpawnDeadPlayers, &SpawnDeadPlayers_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.SpawnNextWave
// [0x00024002] 
// Parameters infos:
// class APlayerReplicationInfo*  Scorer                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bFirst                         ( CPF_OptionalParm | CPF_Parm )

void ASGS_GameDinoSurvival::SpawnNextWave ( class APlayerReplicationInfo* Scorer, unsigned long bFirst )
{
	static UFunction* pFnSpawnNextWave = NULL;

	if ( ! pFnSpawnNextWave )
		pFnSpawnNextWave = (UFunction*) UObject::GObjObjects()->Data[ 56349 ];

	ASGS_GameDinoSurvival_execSpawnNextWave_Parms SpawnNextWave_Parms;
	SpawnNextWave_Parms.Scorer = Scorer;
	SpawnNextWave_Parms.bFirst = bFirst;

	this->ProcessEvent ( pFnSpawnNextWave, &SpawnNextWave_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.CanDinoSpawn
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_GameDinoSurvival::CanDinoSpawn ( )
{
	static UFunction* pFnCanDinoSpawn = NULL;

	if ( ! pFnCanDinoSpawn )
		pFnCanDinoSpawn = (UFunction*) UObject::GObjObjects()->Data[ 56347 ];

	ASGS_GameDinoSurvival_execCanDinoSpawn_Parms CanDinoSpawn_Parms;

	this->ProcessEvent ( pFnCanDinoSpawn, &CanDinoSpawn_Parms, NULL );

	return CanDinoSpawn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.GiveAssistCredits
// [0x00020002] 
// Parameters infos:
// class ASGS_Controller_Player*  P                              ( CPF_Parm )
// float                          Damage                         ( CPF_Parm )
// int                            Worth                          ( CPF_Parm )

void ASGS_GameDinoSurvival::GiveAssistCredits ( class ASGS_Controller_Player* P, float Damage, int Worth )
{
	static UFunction* pFnGiveAssistCredits = NULL;

	if ( ! pFnGiveAssistCredits )
		pFnGiveAssistCredits = (UFunction*) UObject::GObjObjects()->Data[ 56342 ];

	ASGS_GameDinoSurvival_execGiveAssistCredits_Parms GiveAssistCredits_Parms;
	GiveAssistCredits_Parms.P = P;
	GiveAssistCredits_Parms.Damage = Damage;
	GiveAssistCredits_Parms.Worth = Worth;

	this->ProcessEvent ( pFnGiveAssistCredits, &GiveAssistCredits_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.CanSpawnTrex
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_GameDinoSurvival::CanSpawnTrex ( )
{
	static UFunction* pFnCanSpawnTrex = NULL;

	if ( ! pFnCanSpawnTrex )
		pFnCanSpawnTrex = (UFunction*) UObject::GObjObjects()->Data[ 56340 ];

	ASGS_GameDinoSurvival_execCanSpawnTrex_Parms CanSpawnTrex_Parms;

	this->ProcessEvent ( pFnCanSpawnTrex, &CanSpawnTrex_Parms, NULL );

	return CanSpawnTrex_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.MoveToNextBase
// [0x00020002] 
// Parameters infos:
// class ASGS_PowerGenerator*     Gen                            ( CPF_Parm )

void ASGS_GameDinoSurvival::MoveToNextBase ( class ASGS_PowerGenerator* Gen )
{
	static UFunction* pFnMoveToNextBase = NULL;

	if ( ! pFnMoveToNextBase )
		pFnMoveToNextBase = (UFunction*) UObject::GObjObjects()->Data[ 56336 ];

	ASGS_GameDinoSurvival_execMoveToNextBase_Parms MoveToNextBase_Parms;
	MoveToNextBase_Parms.Gen = Gen;

	this->ProcessEvent ( pFnMoveToNextBase, &MoveToNextBase_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.FirstSpawns
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::FirstSpawns ( )
{
	static UFunction* pFnFirstSpawns = NULL;

	if ( ! pFnFirstSpawns )
		pFnFirstSpawns = (UFunction*) UObject::GObjObjects()->Data[ 56330 ];

	ASGS_GameDinoSurvival_execFirstSpawns_Parms FirstSpawns_Parms;

	this->ProcessEvent ( pFnFirstSpawns, &FirstSpawns_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.PostBeginPlay
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 56329 ];

	ASGS_GameDinoSurvival_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterBarracks
// [0x00020000] 
// Parameters infos:
// class ASGS_Barracks*           newBarracks                    ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterBarracks ( class ASGS_Barracks* newBarracks )
{
	static UFunction* pFnRegisterBarracks = NULL;

	if ( ! pFnRegisterBarracks )
		pFnRegisterBarracks = (UFunction*) UObject::GObjObjects()->Data[ 56327 ];

	ASGS_GameDinoSurvival_execRegisterBarracks_Parms RegisterBarracks_Parms;
	RegisterBarracks_Parms.newBarracks = newBarracks;

	this->ProcessEvent ( pFnRegisterBarracks, &RegisterBarracks_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterArmory
// [0x00020000] 
// Parameters infos:
// class ASGS_Armory*             newArmory                      ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterArmory ( class ASGS_Armory* newArmory )
{
	static UFunction* pFnRegisterArmory = NULL;

	if ( ! pFnRegisterArmory )
		pFnRegisterArmory = (UFunction*) UObject::GObjObjects()->Data[ 56325 ];

	ASGS_GameDinoSurvival_execRegisterArmory_Parms RegisterArmory_Parms;
	RegisterArmory_Parms.newArmory = newArmory;

	this->ProcessEvent ( pFnRegisterArmory, &RegisterArmory_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.PowerUpStations
// [0x00020002] 
// Parameters infos:
// class ASGS_PowerGenerator*     Gen                            ( CPF_Parm )

void ASGS_GameDinoSurvival::PowerUpStations ( class ASGS_PowerGenerator* Gen )
{
	static UFunction* pFnPowerUpStations = NULL;

	if ( ! pFnPowerUpStations )
		pFnPowerUpStations = (UFunction*) UObject::GObjObjects()->Data[ 56322 ];

	ASGS_GameDinoSurvival_execPowerUpStations_Parms PowerUpStations_Parms;
	PowerUpStations_Parms.Gen = Gen;

	this->ProcessEvent ( pFnPowerUpStations, &PowerUpStations_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.PowerUpGenerators
// [0x00020002] 
// Parameters infos:

void ASGS_GameDinoSurvival::PowerUpGenerators ( )
{
	static UFunction* pFnPowerUpGenerators = NULL;

	if ( ! pFnPowerUpGenerators )
		pFnPowerUpGenerators = (UFunction*) UObject::GObjObjects()->Data[ 56317 ];

	ASGS_GameDinoSurvival_execPowerUpGenerators_Parms PowerUpGenerators_Parms;

	this->ProcessEvent ( pFnPowerUpGenerators, &PowerUpGenerators_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.IsPawnFacingGenerators
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_GameDinoSurvival::IsPawnFacingGenerators ( class APawn* P )
{
	static UFunction* pFnIsPawnFacingGenerators = NULL;

	if ( ! pFnIsPawnFacingGenerators )
		pFnIsPawnFacingGenerators = (UFunction*) UObject::GObjObjects()->Data[ 56312 ];

	ASGS_GameDinoSurvival_execIsPawnFacingGenerators_Parms IsPawnFacingGenerators_Parms;
	IsPawnFacingGenerators_Parms.P = P;

	this->ProcessEvent ( pFnIsPawnFacingGenerators, &IsPawnFacingGenerators_Parms, NULL );

	return IsPawnFacingGenerators_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.LoseGenerator
// [0x00020002] 
// Parameters infos:
// class ASGS_PowerGenerator*     Gen                            ( CPF_Parm )

void ASGS_GameDinoSurvival::LoseGenerator ( class ASGS_PowerGenerator* Gen )
{
	static UFunction* pFnLoseGenerator = NULL;

	if ( ! pFnLoseGenerator )
		pFnLoseGenerator = (UFunction*) UObject::GObjObjects()->Data[ 56305 ];

	ASGS_GameDinoSurvival_execLoseGenerator_Parms LoseGenerator_Parms;
	LoseGenerator_Parms.Gen = Gen;

	this->ProcessEvent ( pFnLoseGenerator, &LoseGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.GetActiveGenerator
// [0x00020002] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ASGS_GameDinoSurvival::GetActiveGenerator ( )
{
	static UFunction* pFnGetActiveGenerator = NULL;

	if ( ! pFnGetActiveGenerator )
		pFnGetActiveGenerator = (UFunction*) UObject::GObjObjects()->Data[ 53120 ];

	ASGS_GameDinoSurvival_execGetActiveGenerator_Parms GetActiveGenerator_Parms;

	this->ProcessEvent ( pFnGetActiveGenerator, &GetActiveGenerator_Parms, NULL );

	return GetActiveGenerator_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.RecoverGenerator
// [0x00020002] 
// Parameters infos:
// class ASGS_PowerGenerator*     Gen                            ( CPF_Parm )

void ASGS_GameDinoSurvival::RecoverGenerator ( class ASGS_PowerGenerator* Gen )
{
	static UFunction* pFnRecoverGenerator = NULL;

	if ( ! pFnRecoverGenerator )
		pFnRecoverGenerator = (UFunction*) UObject::GObjObjects()->Data[ 56302 ];

	ASGS_GameDinoSurvival_execRecoverGenerator_Parms RecoverGenerator_Parms;
	RecoverGenerator_Parms.Gen = Gen;

	this->ProcessEvent ( pFnRecoverGenerator, &RecoverGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterGarage
// [0x00020000] 
// Parameters infos:
// class ASGS_Garage*             newGarage                      ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterGarage ( class ASGS_Garage* newGarage )
{
	static UFunction* pFnRegisterGarage = NULL;

	if ( ! pFnRegisterGarage )
		pFnRegisterGarage = (UFunction*) UObject::GObjObjects()->Data[ 56300 ];

	ASGS_GameDinoSurvival_execRegisterGarage_Parms RegisterGarage_Parms;
	RegisterGarage_Parms.newGarage = newGarage;

	this->ProcessEvent ( pFnRegisterGarage, &RegisterGarage_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterGenerator
// [0x00020000] 
// Parameters infos:
// class ASGS_PowerGenerator*     newGenerator                   ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterGenerator ( class ASGS_PowerGenerator* newGenerator )
{
	static UFunction* pFnRegisterGenerator = NULL;

	if ( ! pFnRegisterGenerator )
		pFnRegisterGenerator = (UFunction*) UObject::GObjObjects()->Data[ 56298 ];

	ASGS_GameDinoSurvival_execRegisterGenerator_Parms RegisterGenerator_Parms;
	RegisterGenerator_Parms.newGenerator = newGenerator;

	this->ProcessEvent ( pFnRegisterGenerator, &RegisterGenerator_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterBase
// [0x00020002] 
// Parameters infos:
// class ASGS_DinoSurvivalBase*   NewBase                        ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterBase ( class ASGS_DinoSurvivalBase* NewBase )
{
	static UFunction* pFnRegisterBase = NULL;

	if ( ! pFnRegisterBase )
		pFnRegisterBase = (UFunction*) UObject::GObjObjects()->Data[ 56296 ];

	ASGS_GameDinoSurvival_execRegisterBase_Parms RegisterBase_Parms;
	RegisterBase_Parms.NewBase = NewBase;

	this->ProcessEvent ( pFnRegisterBase, &RegisterBase_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.RegisterSettings
// [0x00020002] 
// Parameters infos:
// class ASGS_DinoSurvivalSettings* DS                             ( CPF_Parm )

void ASGS_GameDinoSurvival::RegisterSettings ( class ASGS_DinoSurvivalSettings* DS )
{
	static UFunction* pFnRegisterSettings = NULL;

	if ( ! pFnRegisterSettings )
		pFnRegisterSettings = (UFunction*) UObject::GObjObjects()->Data[ 56294 ];

	ASGS_GameDinoSurvival_execRegisterSettings_Parms RegisterSettings_Parms;
	RegisterSettings_Parms.DS = DS;

	this->ProcessEvent ( pFnRegisterSettings, &RegisterSettings_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.GetNextBaseName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ASGS_GameDinoSurvival::GetNextBaseName ( )
{
	static UFunction* pFnGetNextBaseName = NULL;

	if ( ! pFnGetNextBaseName )
		pFnGetNextBaseName = (UFunction*) UObject::GObjObjects()->Data[ 56291 ];

	ASGS_GameDinoSurvival_execGetNextBaseName_Parms GetNextBaseName_Parms;

	this->ProcessEvent ( pFnGetNextBaseName, &GetNextBaseName_Parms, NULL );

	return GetNextBaseName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.GetBaseName
// [0x00020002] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName ASGS_GameDinoSurvival::GetBaseName ( )
{
	static UFunction* pFnGetBaseName = NULL;

	if ( ! pFnGetBaseName )
		pFnGetBaseName = (UFunction*) UObject::GObjObjects()->Data[ 56288 ];

	ASGS_GameDinoSurvival_execGetBaseName_Parms GetBaseName_Parms;

	this->ProcessEvent ( pFnGetBaseName, &GetBaseName_Parms, NULL );

	return GetBaseName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.GetBaseLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_GameDinoSurvival::GetBaseLocation ( )
{
	static UFunction* pFnGetBaseLocation = NULL;

	if ( ! pFnGetBaseLocation )
		pFnGetBaseLocation = (UFunction*) UObject::GObjObjects()->Data[ 56285 ];

	ASGS_GameDinoSurvival_execGetBaseLocation_Parms GetBaseLocation_Parms;

	this->ProcessEvent ( pFnGetBaseLocation, &GetBaseLocation_Parms, NULL );

	return GetBaseLocation_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoSurvival.GetDinosRemainingString
// [0x00420002] 
// Parameters infos:
// int                            nRaptor                        ( CPF_Parm | CPF_OutParm )
// int                            nTrex                          ( CPF_Parm | CPF_OutParm )
// int                            nRham                          ( CPF_Parm | CPF_OutParm )

void ASGS_GameDinoSurvival::GetDinosRemainingString ( int* nRaptor, int* nTrex, int* nRham )
{
	static UFunction* pFnGetDinosRemainingString = NULL;

	if ( ! pFnGetDinosRemainingString )
		pFnGetDinosRemainingString = (UFunction*) UObject::GObjObjects()->Data[ 56280 ];

	ASGS_GameDinoSurvival_execGetDinosRemainingString_Parms GetDinosRemainingString_Parms;

	this->ProcessEvent ( pFnGetDinosRemainingString, &GetDinosRemainingString_Parms, NULL );

	if ( nRaptor )
		*nRaptor = GetDinosRemainingString_Parms.nRaptor;

	if ( nTrex )
		*nTrex = GetDinosRemainingString_Parms.nTrex;

	if ( nRham )
		*nRham = GetDinosRemainingString_Parms.nRham;
};

// Function SGSOrion.SGS_GameDinoSurvival.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       NewPlayer                      ( CPF_Parm )

void ASGS_GameDinoSurvival::eventPostLogin ( class APlayerController* NewPlayer )
{
	static UFunction* pFnPostLogin = NULL;

	if ( ! pFnPostLogin )
		pFnPostLogin = (UFunction*) UObject::GObjObjects()->Data[ 56277 ];

	ASGS_GameDinoSurvival_eventPostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;

	this->ProcessEvent ( pFnPostLogin, &PostLogin_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoSurvival.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:
// struct FString                 Options                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ErrorMessage                   ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_GameDinoSurvival::eventInitGame ( struct FString Options, struct FString* ErrorMessage )
{
	static UFunction* pFnInitGame = NULL;

	if ( ! pFnInitGame )
		pFnInitGame = (UFunction*) UObject::GObjObjects()->Data[ 56274 ];

	ASGS_GameDinoSurvival_eventInitGame_Parms InitGame_Parms;
	memcpy ( &InitGame_Parms.Options, &Options, 0xC );

	this->ProcessEvent ( pFnInitGame, &InitGame_Parms, NULL );

	if ( ErrorMessage )
		memcpy ( ErrorMessage, &InitGame_Parms.ErrorMessage, 0xC );
};

// Function SGSOrion.SGS_FamilyInfo_Dino_Rham.DinoWhatToDoNext
// [0x00022002] 
// Parameters infos:
// class ASGS_Controller_Dino*    dino                           ( CPF_Parm )

void USGS_FamilyInfo_Dino_Rham::DinoWhatToDoNext ( class ASGS_Controller_Dino* dino )
{
	static UFunction* pFnDinoWhatToDoNext = NULL;

	if ( ! pFnDinoWhatToDoNext )
		pFnDinoWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 55858 ];

	USGS_FamilyInfo_Dino_Rham_execDinoWhatToDoNext_Parms DinoWhatToDoNext_Parms;
	DinoWhatToDoNext_Parms.dino = dino;

	this->ProcessEvent ( pFnDinoWhatToDoNext, &DinoWhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnFireOff
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnFireOff ( )
{
	static UFunction* pFnTurnFireOff = NULL;

	if ( ! pFnTurnFireOff )
		pFnTurnFireOff = (UFunction*) UObject::GObjObjects()->Data[ 61181 ];

	ASGS_PowerGenerator_execTurnFireOff_Parms TurnFireOff_Parms;

	this->ProcessEvent ( pFnTurnFireOff, &TurnFireOff_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnFireOn
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnFireOn ( )
{
	static UFunction* pFnTurnFireOn = NULL;

	if ( ! pFnTurnFireOn )
		pFnTurnFireOn = (UFunction*) UObject::GObjObjects()->Data[ 61180 ];

	ASGS_PowerGenerator_execTurnFireOn_Parms TurnFireOn_Parms;

	this->ProcessEvent ( pFnTurnFireOn, &TurnFireOn_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnWaitingForInputOff
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnWaitingForInputOff ( )
{
	static UFunction* pFnTurnWaitingForInputOff = NULL;

	if ( ! pFnTurnWaitingForInputOff )
		pFnTurnWaitingForInputOff = (UFunction*) UObject::GObjObjects()->Data[ 61179 ];

	ASGS_PowerGenerator_execTurnWaitingForInputOff_Parms TurnWaitingForInputOff_Parms;

	this->ProcessEvent ( pFnTurnWaitingForInputOff, &TurnWaitingForInputOff_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnWaitingForInputOn
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnWaitingForInputOn ( )
{
	static UFunction* pFnTurnWaitingForInputOn = NULL;

	if ( ! pFnTurnWaitingForInputOn )
		pFnTurnWaitingForInputOn = (UFunction*) UObject::GObjObjects()->Data[ 61178 ];

	ASGS_PowerGenerator_execTurnWaitingForInputOn_Parms TurnWaitingForInputOn_Parms;

	this->ProcessEvent ( pFnTurnWaitingForInputOn, &TurnWaitingForInputOn_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.SwitchOn
// [0x00020002] 
// Parameters infos:

void ASGS_PowerGenerator::SwitchOn ( )
{
	static UFunction* pFnSwitchOn = NULL;

	if ( ! pFnSwitchOn )
		pFnSwitchOn = (UFunction*) UObject::GObjObjects()->Data[ 61177 ];

	ASGS_PowerGenerator_execSwitchOn_Parms SwitchOn_Parms;

	this->ProcessEvent ( pFnSwitchOn, &SwitchOn_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.Powerup
// [0x00020002] 
// Parameters infos:

void ASGS_PowerGenerator::Powerup ( )
{
	static UFunction* pFnPowerup = NULL;

	if ( ! pFnPowerup )
		pFnPowerup = (UFunction*) UObject::GObjObjects()->Data[ 61176 ];

	ASGS_PowerGenerator_execPowerup_Parms Powerup_Parms;

	this->ProcessEvent ( pFnPowerup, &Powerup_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnEMPOff
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnEMPOff ( )
{
	static UFunction* pFnTurnEMPOff = NULL;

	if ( ! pFnTurnEMPOff )
		pFnTurnEMPOff = (UFunction*) UObject::GObjObjects()->Data[ 61175 ];

	ASGS_PowerGenerator_execTurnEMPOff_Parms TurnEMPOff_Parms;

	this->ProcessEvent ( pFnTurnEMPOff, &TurnEMPOff_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TurnEMPOn
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::TurnEMPOn ( )
{
	static UFunction* pFnTurnEMPOn = NULL;

	if ( ! pFnTurnEMPOn )
		pFnTurnEMPOn = (UFunction*) UObject::GObjObjects()->Data[ 61174 ];

	ASGS_PowerGenerator_execTurnEMPOn_Parms TurnEMPOn_Parms;

	this->ProcessEvent ( pFnTurnEMPOn, &TurnEMPOn_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.EndEMP
// [0x00020002] 
// Parameters infos:

void ASGS_PowerGenerator::EndEMP ( )
{
	static UFunction* pFnEndEMP = NULL;

	if ( ! pFnEndEMP )
		pFnEndEMP = (UFunction*) UObject::GObjObjects()->Data[ 61173 ];

	ASGS_PowerGenerator_execEndEMP_Parms EndEMP_Parms;

	this->ProcessEvent ( pFnEndEMP, &EndEMP_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.HitWithEMP
// [0x002200C2] 
// Parameters infos:

void ASGS_PowerGenerator::HitWithEMP ( )
{
	static UFunction* pFnHitWithEMP = NULL;

	if ( ! pFnHitWithEMP )
		pFnHitWithEMP = (UFunction*) UObject::GObjObjects()->Data[ 61172 ];

	ASGS_PowerGenerator_execHitWithEMP_Parms HitWithEMP_Parms;

	this->ProcessEvent ( pFnHitWithEMP, &HitWithEMP_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.PowerDown
// [0x00020002] 
// Parameters infos:

void ASGS_PowerGenerator::PowerDown ( )
{
	static UFunction* pFnPowerDown = NULL;

	if ( ! pFnPowerDown )
		pFnPowerDown = (UFunction*) UObject::GObjObjects()->Data[ 61171 ];

	ASGS_PowerGenerator_execPowerDown_Parms PowerDown_Parms;

	this->ProcessEvent ( pFnPowerDown, &PowerDown_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// int                            DamageAmount                   ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCasuer                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_PowerGenerator::eventTakeDamage ( int DamageAmount, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCasuer )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 61163 ];

	ASGS_PowerGenerator_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.DamageAmount = DamageAmount;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCasuer = DamageCasuer;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.Register
// [0x00020102] 
// Parameters infos:

void ASGS_PowerGenerator::Register ( )
{
	static UFunction* pFnRegister = NULL;

	if ( ! pFnRegister )
		pFnRegister = (UFunction*) UObject::GObjObjects()->Data[ 61161 ];

	ASGS_PowerGenerator_execRegister_Parms Register_Parms;

	this->ProcessEvent ( pFnRegister, &Register_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.CanBeTurnedOn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_PowerGenerator::CanBeTurnedOn ( )
{
	static UFunction* pFnCanBeTurnedOn = NULL;

	if ( ! pFnCanBeTurnedOn )
		pFnCanBeTurnedOn = (UFunction*) UObject::GObjObjects()->Data[ 61159 ];

	ASGS_PowerGenerator_execCanBeTurnedOn_Parms CanBeTurnedOn_Parms;

	this->ProcessEvent ( pFnCanBeTurnedOn, &CanBeTurnedOn_Parms, NULL );

	return CanBeTurnedOn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PowerGenerator.RegisterGame
// [0x00020002] 
// Parameters infos:

void ASGS_PowerGenerator::RegisterGame ( )
{
	static UFunction* pFnRegisterGame = NULL;

	if ( ! pFnRegisterGame )
		pFnRegisterGame = (UFunction*) UObject::GObjObjects()->Data[ 61158 ];

	ASGS_PowerGenerator_execRegisterGame_Parms RegisterGame_Parms;

	this->ProcessEvent ( pFnRegisterGame, &RegisterGame_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_PowerGenerator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 61157 ];

	ASGS_PowerGenerator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_PowerGenerator::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 61155 ];

	ASGS_PowerGenerator_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_PowerGenerator.PostRenderFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class APlayerController*       PC                             ( CPF_Parm )
// class UCanvas*                 Canvas                         ( CPF_Parm )
// struct FVector                 CameraPosition                 ( CPF_Parm )
// struct FVector                 CameraDir                      ( CPF_Parm )

void ASGS_PowerGenerator::eventPostRenderFor ( class APlayerController* PC, class UCanvas* Canvas, struct FVector CameraPosition, struct FVector CameraDir )
{
	static UFunction* pFnPostRenderFor = NULL;

	if ( ! pFnPostRenderFor )
		pFnPostRenderFor = (UFunction*) UObject::GObjObjects()->Data[ 61148 ];

	ASGS_PowerGenerator_eventPostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy ( &PostRenderFor_Parms.CameraPosition, &CameraPosition, 0xC );
	memcpy ( &PostRenderFor_Parms.CameraDir, &CameraDir, 0xC );

	this->ProcessEvent ( pFnPostRenderFor, &PostRenderFor_Parms, NULL );
};

// Function SGSOrion.SGS_Controller_PathFollower.Tick
// [0x00020900] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Controller_PathFollower::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 53408 ];

	ASGS_Controller_PathFollower_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.DumpGameSearchData
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UOnlineGameSearch*       GameSearch                     ( CPF_Parm )

void USGS_DBMainMenu::DumpGameSearchData ( class UOnlineGameSearch* GameSearch )
{
	static UFunction* pFnDumpGameSearchData = NULL;

	if ( ! pFnDumpGameSearchData )
		pFnDumpGameSearchData = (UFunction*) UObject::GObjObjects()->Data[ 55072 ];

	USGS_DBMainMenu_execDumpGameSearchData_Parms DumpGameSearchData_Parms;
	DumpGameSearchData_Parms.GameSearch = GameSearch;

	this->ProcessEvent ( pFnDumpGameSearchData, &DumpGameSearchData_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnFilterButtonInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_DBMainMenu::OnFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnOnFilterButtonInput = NULL;

	if ( ! pFnOnFilterButtonInput )
		pFnOnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 55233 ];

	USGS_DBMainMenu_execOnFilterButtonInput_Parms OnFilterButtonInput_Parms;
	OnFilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &OnFilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	OnFilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnOnFilterButtonInput, &OnFilterButtonInput_Parms, NULL );

	return OnFilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_DBMainMenu::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 55220 ];

	USGS_DBMainMenu_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.JoinNow
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::JoinNow ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnJoinNow = NULL;

	if ( ! pFnJoinNow )
		pFnJoinNow = (UFunction*) UObject::GObjObjects()->Data[ 55217 ];

	USGS_DBMainMenu_execJoinNow_Parms JoinNow_Parms;
	memcpy ( &JoinNow_Parms.SessionName, &SessionName, 0x8 );
	JoinNow_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnJoinNow, &JoinNow_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.CreateNow
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::CreateNow ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnCreateNow = NULL;

	if ( ! pFnCreateNow )
		pFnCreateNow = (UFunction*) UObject::GObjObjects()->Data[ 55214 ];

	USGS_DBMainMenu_execCreateNow_Parms CreateNow_Parms;
	memcpy ( &CreateNow_Parms.SessionName, &SessionName, 0x8 );
	CreateNow_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnCreateNow, &CreateNow_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.WidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )
// int                            Index                          ( CPF_Parm )

bool USGS_DBMainMenu::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget, int Index )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 55209 ];

	USGS_DBMainMenu_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;
	WidgetInit_Parms.Index = Index;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.SortBrowser
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 ColumnName                     ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_DBMainMenu::eventSortBrowser ( struct FString ColumnName )
{
	static UFunction* pFnSortBrowser = NULL;

	if ( ! pFnSortBrowser )
		pFnSortBrowser = (UFunction*) UObject::GObjObjects()->Data[ 55201 ];

	USGS_DBMainMenu_eventSortBrowser_Parms SortBrowser_Parms;
	memcpy ( &SortBrowser_Parms.ColumnName, &ColumnName, 0xC );

	this->ProcessEvent ( pFnSortBrowser, &SortBrowser_Parms, NULL );

	return SortBrowser_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.UpdateFilters
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_DBMainMenu::eventUpdateFilters ( )
{
	static UFunction* pFnUpdateFilters = NULL;

	if ( ! pFnUpdateFilters )
		pFnUpdateFilters = (UFunction*) UObject::GObjObjects()->Data[ 55199 ];

	USGS_DBMainMenu_eventUpdateFilters_Parms UpdateFilters_Parms;

	this->ProcessEvent ( pFnUpdateFilters, &UpdateFilters_Parms, NULL );

	return UpdateFilters_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_DBMainMenu::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 55193 ];

	USGS_DBMainMenu_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.OnGameCreated
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::OnGameCreated ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnGameCreated = NULL;

	if ( ! pFnOnGameCreated )
		pFnOnGameCreated = (UFunction*) UObject::GObjObjects()->Data[ 55182 ];

	USGS_DBMainMenu_execOnGameCreated_Parms OnGameCreated_Parms;
	memcpy ( &OnGameCreated_Parms.SessionName, &SessionName, 0x8 );
	OnGameCreated_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnGameCreated, &OnGameCreated_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetPauseMenu
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetPauseMenu ( )
{
	static UFunction* pFnSetPauseMenu = NULL;

	if ( ! pFnSetPauseMenu )
		pFnSetPauseMenu = (UFunction*) UObject::GObjObjects()->Data[ 55181 ];

	USGS_DBMainMenu_execSetPauseMenu_Parms SetPauseMenu_Parms;

	this->ProcessEvent ( pFnSetPauseMenu, &SetPauseMenu_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetupGameSettings
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetupGameSettings ( )
{
	static UFunction* pFnSetupGameSettings = NULL;

	if ( ! pFnSetupGameSettings )
		pFnSetupGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 55174 ];

	USGS_DBMainMenu_execSetupGameSettings_Parms SetupGameSettings_Parms;

	this->ProcessEvent ( pFnSetupGameSettings, &SetupGameSettings_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.CreateOnlineGame
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_DBMainMenu::CreateOnlineGame ( int PlayerIndex )
{
	static UFunction* pFnCreateOnlineGame = NULL;

	if ( ! pFnCreateOnlineGame )
		pFnCreateOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 55172 ];

	USGS_DBMainMenu_execCreateOnlineGame_Parms CreateOnlineGame_Parms;
	CreateOnlineGame_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateOnlineGame, &CreateOnlineGame_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.GetPlayerControllerId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_Parm )

int USGS_DBMainMenu::GetPlayerControllerId ( int PlayerIndex )
{
	static UFunction* pFnGetPlayerControllerId = NULL;

	if ( ! pFnGetPlayerControllerId )
		pFnGetPlayerControllerId = (UFunction*) UObject::GObjObjects()->Data[ 55169 ];

	USGS_DBMainMenu_execGetPlayerControllerId_Parms GetPlayerControllerId_Parms;
	GetPlayerControllerId_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetPlayerControllerId, &GetPlayerControllerId_Parms, NULL );

	return GetPlayerControllerId_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.GetCommonOptionsURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USGS_DBMainMenu::GetCommonOptionsURL ( )
{
	static UFunction* pFnGetCommonOptionsURL = NULL;

	if ( ! pFnGetCommonOptionsURL )
		pFnGetCommonOptionsURL = (UFunction*) UObject::GObjObjects()->Data[ 55166 ];

	USGS_DBMainMenu_execGetCommonOptionsURL_Parms GetCommonOptionsURL_Parms;

	this->ProcessEvent ( pFnGetCommonOptionsURL, &GetCommonOptionsURL_Parms, NULL );

	return GetCommonOptionsURL_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.FinishStartDedicated
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::FinishStartDedicated ( )
{
	static UFunction* pFnFinishStartDedicated = NULL;

	if ( ! pFnFinishStartDedicated )
		pFnFinishStartDedicated = (UFunction*) UObject::GObjObjects()->Data[ 55155 ];

	USGS_DBMainMenu_execFinishStartDedicated_Parms FinishStartDedicated_Parms;

	this->ProcessEvent ( pFnFinishStartDedicated, &FinishStartDedicated_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SaveGameCreationSettings
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SaveGameCreationSettings ( )
{
	static UFunction* pFnSaveGameCreationSettings = NULL;

	if ( ! pFnSaveGameCreationSettings )
		pFnSaveGameCreationSettings = (UFunction*) UObject::GObjObjects()->Data[ 55153 ];

	USGS_DBMainMenu_execSaveGameCreationSettings_Parms SaveGameCreationSettings_Parms;

	this->ProcessEvent ( pFnSaveGameCreationSettings, &SaveGameCreationSettings_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnStartGame_Confirm
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 55151 ];

	USGS_DBMainMenu_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.NotifyGameTypeChanged
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::NotifyGameTypeChanged ( )
{
	static UFunction* pFnNotifyGameTypeChanged = NULL;

	if ( ! pFnNotifyGameTypeChanged )
		pFnNotifyGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 55150 ];

	USGS_DBMainMenu_execNotifyGameTypeChanged_Parms NotifyGameTypeChanged_Parms;

	this->ProcessEvent ( pFnNotifyGameTypeChanged, &NotifyGameTypeChanged_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnCancelSearchComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::OnCancelSearchComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnCancelSearchComplete = NULL;

	if ( ! pFnOnCancelSearchComplete )
		pFnOnCancelSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 55147 ];

	USGS_DBMainMenu_execOnCancelSearchComplete_Parms OnCancelSearchComplete_Parms;
	OnCancelSearchComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnCancelSearchComplete, &OnCancelSearchComplete_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetRefreshing
// [0x00020002] 
// Parameters infos:
// unsigned long                  IsRefreshing                   ( CPF_Parm )

void USGS_DBMainMenu::SetRefreshing ( unsigned long IsRefreshing )
{
	static UFunction* pFnSetRefreshing = NULL;

	if ( ! pFnSetRefreshing )
		pFnSetRefreshing = (UFunction*) UObject::GObjObjects()->Data[ 55145 ];

	USGS_DBMainMenu_execSetRefreshing_Parms SetRefreshing_Parms;
	SetRefreshing_Parms.IsRefreshing = IsRefreshing;

	this->ProcessEvent ( pFnSetRefreshing, &SetRefreshing_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.CancelQuery
// [0x00024002] 
// Parameters infos:
// unsigned char                  DesiredCancelAction            ( CPF_OptionalParm | CPF_Parm )

void USGS_DBMainMenu::CancelQuery ( unsigned char DesiredCancelAction )
{
	static UFunction* pFnCancelQuery = NULL;

	if ( ! pFnCancelQuery )
		pFnCancelQuery = (UFunction*) UObject::GObjObjects()->Data[ 55140 ];

	USGS_DBMainMenu_execCancelQuery_Parms CancelQuery_Parms;
	CancelQuery_Parms.DesiredCancelAction = DesiredCancelAction;

	this->ProcessEvent ( pFnCancelQuery, &CancelQuery_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.AllowJoinServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_DBMainMenu::AllowJoinServer ( )
{
	static UFunction* pFnAllowJoinServer = NULL;

	if ( ! pFnAllowJoinServer )
		pFnAllowJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 55137 ];

	USGS_DBMainMenu_execAllowJoinServer_Parms AllowJoinServer_Parms;

	this->ProcessEvent ( pFnAllowJoinServer, &AllowJoinServer_Parms, NULL );

	return AllowJoinServer_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.OnJoinGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bSuccessful                    ( CPF_Parm )

void USGS_DBMainMenu::OnJoinGameComplete ( struct FName SessionName, unsigned long bSuccessful )
{
	static UFunction* pFnOnJoinGameComplete = NULL;

	if ( ! pFnOnJoinGameComplete )
		pFnOnJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 55131 ];

	USGS_DBMainMenu_execOnJoinGameComplete_Parms OnJoinGameComplete_Parms;
	memcpy ( &OnJoinGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnJoinGameComplete_Parms.bSuccessful = bSuccessful;

	this->ProcessEvent ( pFnOnJoinGameComplete, &OnJoinGameComplete_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ProcessJoin
// [0x00840003] ( FUNC_Final )
// Parameters infos:

void USGS_DBMainMenu::ProcessJoin ( )
{
	static UFunction* pFnProcessJoin = NULL;

	if ( ! pFnProcessJoin )
		pFnProcessJoin = (UFunction*) UObject::GObjObjects()->Data[ 55054 ];

	USGS_DBMainMenu_execProcessJoin_Parms ProcessJoin_Parms;

	this->ProcessEvent ( pFnProcessJoin, &ProcessJoin_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.JoinServer
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::JoinServer ( )
{
	static UFunction* pFnJoinServer = NULL;

	if ( ! pFnJoinServer )
		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 55125 ];

	USGS_DBMainMenu_execJoinServer_Parms JoinServer_Parms;

	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.JoinServerClikListener
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::JoinServerClikListener ( struct FEventData ev )
{
	static UFunction* pFnJoinServerClikListener = NULL;

	if ( ! pFnJoinServerClikListener )
		pFnJoinServerClikListener = (UFunction*) UObject::GObjObjects()->Data[ 55122 ];

	USGS_DBMainMenu_execJoinServerClikListener_Parms JoinServerClikListener_Parms;
	memcpy ( &JoinServerClikListener_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnJoinServerClikListener, &JoinServerClikListener_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SpectateServer
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::SpectateServer ( struct FEventData ev )
{
	static UFunction* pFnSpectateServer = NULL;

	if ( ! pFnSpectateServer )
		pFnSpectateServer = (UFunction*) UObject::GObjObjects()->Data[ 55119 ];

	USGS_DBMainMenu_execSpectateServer_Parms SpectateServer_Parms;
	memcpy ( &SpectateServer_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSpectateServer, &SpectateServer_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnServerListItemPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnServerListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerListItemPress = NULL;

	if ( ! pFnOnServerListItemPress )
		pFnOnServerListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 55117 ];

	USGS_DBMainMenu_execOnServerListItemPress_Parms OnServerListItemPress_Parms;
	memcpy ( &OnServerListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerListItemPress, &OnServerListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnPingHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnPingHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPingHeaderPress = NULL;

	if ( ! pFnOnPingHeaderPress )
		pFnOnPingHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 55115 ];

	USGS_DBMainMenu_execOnPingHeaderPress_Parms OnPingHeaderPress_Parms;
	memcpy ( &OnPingHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPingHeaderPress, &OnPingHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnPlayersHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnPlayersHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPlayersHeaderPress = NULL;

	if ( ! pFnOnPlayersHeaderPress )
		pFnOnPlayersHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 55113 ];

	USGS_DBMainMenu_execOnPlayersHeaderPress_Parms OnPlayersHeaderPress_Parms;
	memcpy ( &OnPlayersHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPlayersHeaderPress, &OnPlayersHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnMapHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnMapHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnMapHeaderPress = NULL;

	if ( ! pFnOnMapHeaderPress )
		pFnOnMapHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 55111 ];

	USGS_DBMainMenu_execOnMapHeaderPress_Parms OnMapHeaderPress_Parms;
	memcpy ( &OnMapHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnMapHeaderPress, &OnMapHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnServerHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnServerHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerHeaderPress = NULL;

	if ( ! pFnOnServerHeaderPress )
		pFnOnServerHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 55109 ];

	USGS_DBMainMenu_execOnServerHeaderPress_Parms OnServerHeaderPress_Parms;
	memcpy ( &OnServerHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerHeaderPress, &OnServerHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.UpdateListDataProvider
// [0x00820002] 
// Parameters infos:

void USGS_DBMainMenu::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 55092 ];

	USGS_DBMainMenu_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ClearBrowser
// [0x00020002] 
// Parameters infos:
// int                            I                              ( CPF_Parm )

void USGS_DBMainMenu::ClearBrowser ( int I )
{
	static UFunction* pFnClearBrowser = NULL;

	if ( ! pFnClearBrowser )
		pFnClearBrowser = (UFunction*) UObject::GObjObjects()->Data[ 55090 ];

	USGS_DBMainMenu_execClearBrowser_Parms ClearBrowser_Parms;
	ClearBrowser_Parms.I = I;

	this->ProcessEvent ( pFnClearBrowser, &ClearBrowser_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ServerFilterChangedGameType
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::ServerFilterChangedGameType ( )
{
	static UFunction* pFnServerFilterChangedGameType = NULL;

	if ( ! pFnServerFilterChangedGameType )
		pFnServerFilterChangedGameType = (UFunction*) UObject::GObjObjects()->Data[ 55089 ];

	USGS_DBMainMenu_execServerFilterChangedGameType_Parms ServerFilterChangedGameType_Parms;

	this->ProcessEvent ( pFnServerFilterChangedGameType, &ServerFilterChangedGameType_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnFilterButtonPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnFilterButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnFilterButtonPress = NULL;

	if ( ! pFnOnFilterButtonPress )
		pFnOnFilterButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 55087 ];

	USGS_DBMainMenu_execOnFilterButtonPress_Parms OnFilterButtonPress_Parms;
	memcpy ( &OnFilterButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFilterButtonPress, &OnFilterButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnRefreshButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnRefreshButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnRefreshButtonPress = NULL;

	if ( ! pFnOnRefreshButtonPress )
		pFnOnRefreshButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 55085 ];

	USGS_DBMainMenu_execOnRefreshButtonPress_Parms OnRefreshButtonPress_Parms;
	memcpy ( &OnRefreshButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnRefreshButtonPress, &OnRefreshButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.GetDesiredMatchType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USGS_DBMainMenu::GetDesiredMatchType ( )
{
	static UFunction* pFnGetDesiredMatchType = NULL;

	if ( ! pFnGetDesiredMatchType )
		pFnGetDesiredMatchType = (UFunction*) UObject::GObjObjects()->Data[ 55083 ];

	USGS_DBMainMenu_execGetDesiredMatchType_Parms GetDesiredMatchType_Parms;

	this->ProcessEvent ( pFnGetDesiredMatchType, &GetDesiredMatchType_Parms, NULL );

	return GetDesiredMatchType_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.OnFindOnlineGamesComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::OnFindOnlineGamesComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesComplete = NULL;

	if ( ! pFnOnFindOnlineGamesComplete )
		pFnOnFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 55079 ];

	USGS_DBMainMenu_execOnFindOnlineGamesComplete_Parms OnFindOnlineGamesComplete_Parms;
	OnFindOnlineGamesComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesComplete, &OnFindOnlineGamesComplete_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.DoItUp
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::DoItUp ( )
{
	static UFunction* pFnDoItUp = NULL;

	if ( ! pFnDoItUp )
		pFnDoItUp = (UFunction*) UObject::GObjObjects()->Data[ 55078 ];

	USGS_DBMainMenu_execDoItUp_Parms DoItUp_Parms;

	this->ProcessEvent ( pFnDoItUp, &DoItUp_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnFindOnlineGamesCompleteDelegate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::OnFindOnlineGamesCompleteDelegate ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnOnFindOnlineGamesCompleteDelegate )
		pFnOnFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 55075 ];

	USGS_DBMainMenu_execOnFindOnlineGamesCompleteDelegate_Parms OnFindOnlineGamesCompleteDelegate_Parms;
	OnFindOnlineGamesCompleteDelegate_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesCompleteDelegate, &OnFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SubmitServerListQuery
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_DBMainMenu::SubmitServerListQuery ( int PlayerIndex )
{
	static UFunction* pFnSubmitServerListQuery = NULL;

	if ( ! pFnSubmitServerListQuery )
		pFnSubmitServerListQuery = (UFunction*) UObject::GObjObjects()->Data[ 55073 ];

	USGS_DBMainMenu_execSubmitServerListQuery_Parms SubmitServerListQuery_Parms;
	SubmitServerListQuery_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSubmitServerListQuery, &SubmitServerListQuery_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.RefreshServerList
// [0x00024002] 
// Parameters infos:
// int                            InPlayerIndex                  ( CPF_Parm )
// int                            MaxResults                     ( CPF_OptionalParm | CPF_Parm )

void USGS_DBMainMenu::RefreshServerList ( int InPlayerIndex, int MaxResults )
{
	static UFunction* pFnRefreshServerList = NULL;

	if ( ! pFnRefreshServerList )
		pFnRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 55067 ];

	USGS_DBMainMenu_execRefreshServerList_Parms RefreshServerList_Parms;
	RefreshServerList_Parms.InPlayerIndex = InPlayerIndex;
	RefreshServerList_Parms.MaxResults = MaxResults;

	this->ProcessEvent ( pFnRefreshServerList, &RefreshServerList_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.BuildJoinURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ResolvedConnectionURL          ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_DBMainMenu::BuildJoinURL ( struct FString ResolvedConnectionURL )
{
	static UFunction* pFnBuildJoinURL = NULL;

	if ( ! pFnBuildJoinURL )
		pFnBuildJoinURL = (UFunction*) UObject::GObjObjects()->Data[ 55063 ];

	USGS_DBMainMenu_execBuildJoinURL_Parms BuildJoinURL_Parms;
	memcpy ( &BuildJoinURL_Parms.ResolvedConnectionURL, &ResolvedConnectionURL, 0xC );

	this->ProcessEvent ( pFnBuildJoinURL, &BuildJoinURL_Parms, NULL );

	return BuildJoinURL_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.UpdateServerCount
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::UpdateServerCount ( )
{
	static UFunction* pFnUpdateServerCount = NULL;

	if ( ! pFnUpdateServerCount )
		pFnUpdateServerCount = (UFunction*) UObject::GObjObjects()->Data[ 55059 ];

	USGS_DBMainMenu_execUpdateServerCount_Parms UpdateServerCount_Parms;

	this->ProcessEvent ( pFnUpdateServerCount, &UpdateServerCount_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.PasswordOK
// [0x00020002] 
// Parameters infos:
// struct FString                 pass                           ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::PasswordOK ( struct FString pass )
{
	static UFunction* pFnPasswordOK = NULL;

	if ( ! pFnPasswordOK )
		pFnPasswordOK = (UFunction*) UObject::GObjObjects()->Data[ 55056 ];

	USGS_DBMainMenu_execPasswordOK_Parms PasswordOK_Parms;
	memcpy ( &PasswordOK_Parms.pass, &pass, 0xC );

	this->ProcessEvent ( pFnPasswordOK, &PasswordOK_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ShowPasswordPrompt
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::ShowPasswordPrompt ( )
{
	static UFunction* pFnShowPasswordPrompt = NULL;

	if ( ! pFnShowPasswordPrompt )
		pFnShowPasswordPrompt = (UFunction*) UObject::GObjObjects()->Data[ 55055 ];

	USGS_DBMainMenu_execShowPasswordPrompt_Parms ShowPasswordPrompt_Parms;

	this->ProcessEvent ( pFnShowPasswordPrompt, &ShowPasswordPrompt_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnPasswordDialog_OK
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnPasswordDialog_OK ( struct FEventData ev )
{
	static UFunction* pFnOnPasswordDialog_OK = NULL;

	if ( ! pFnOnPasswordDialog_OK )
		pFnOnPasswordDialog_OK = (UFunction*) UObject::GObjObjects()->Data[ 55043 ];

	USGS_DBMainMenu_execOnPasswordDialog_OK_Parms OnPasswordDialog_OK_Parms;
	memcpy ( &OnPasswordDialog_OK_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPasswordDialog_OK, &OnPasswordDialog_OK_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.StripInvalidPasswordCharacters
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 PasswordString                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InvalidChars                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_DBMainMenu::StripInvalidPasswordCharacters ( struct FString PasswordString, struct FString InvalidChars )
{
	static UFunction* pFnStripInvalidPasswordCharacters = NULL;

	if ( ! pFnStripInvalidPasswordCharacters )
		pFnStripInvalidPasswordCharacters = (UFunction*) UObject::GObjObjects()->Data[ 55038 ];

	USGS_DBMainMenu_execStripInvalidPasswordCharacters_Parms StripInvalidPasswordCharacters_Parms;
	memcpy ( &StripInvalidPasswordCharacters_Parms.PasswordString, &PasswordString, 0xC );
	memcpy ( &StripInvalidPasswordCharacters_Parms.InvalidChars, &InvalidChars, 0xC );

	this->ProcessEvent ( pFnStripInvalidPasswordCharacters, &StripInvalidPasswordCharacters_Parms, NULL );

	return StripInvalidPasswordCharacters_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.PromptForServerPassword
// [0x00040001] ( FUNC_Final )
// Parameters infos:

void USGS_DBMainMenu::PromptForServerPassword ( )
{
	static UFunction* pFnPromptForServerPassword = NULL;

	if ( ! pFnPromptForServerPassword )
		pFnPromptForServerPassword = (UFunction*) UObject::GObjObjects()->Data[ 55037 ];

	USGS_DBMainMenu_execPromptForServerPassword_Parms PromptForServerPassword_Parms;

	this->ProcessEvent ( pFnPromptForServerPassword, &PromptForServerPassword_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.UpdateButtonStates
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::UpdateButtonStates ( )
{
	static UFunction* pFnUpdateButtonStates = NULL;

	if ( ! pFnUpdateButtonStates )
		pFnUpdateButtonStates = (UFunction*) UObject::GObjObjects()->Data[ 55034 ];

	USGS_DBMainMenu_execUpdateButtonStates_Parms UpdateButtonStates_Parms;

	this->ProcessEvent ( pFnUpdateButtonStates, &UpdateButtonStates_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ConditionalRefreshServerList
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_DBMainMenu::ConditionalRefreshServerList ( int PlayerIndex )
{
	static UFunction* pFnConditionalRefreshServerList = NULL;

	if ( ! pFnConditionalRefreshServerList )
		pFnConditionalRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 55030 ];

	USGS_DBMainMenu_execConditionalRefreshServerList_Parms ConditionalRefreshServerList_Parms;
	ConditionalRefreshServerList_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConditionalRefreshServerList, &ConditionalRefreshServerList_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnGameTypeChanged
// [0x00024002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

void USGS_DBMainMenu::OnGameTypeChanged ( int PlayerIndex )
{
	static UFunction* pFnOnGameTypeChanged = NULL;

	if ( ! pFnOnGameTypeChanged )
		pFnOnGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 55018 ];

	USGS_DBMainMenu_execOnGameTypeChanged_Parms OnGameTypeChanged_Parms;
	OnGameTypeChanged_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGameTypeChanged, &OnGameTypeChanged_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.GetGameTypeSearchProviderIndex
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GameClassName                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

int USGS_DBMainMenu::GetGameTypeSearchProviderIndex ( struct FString GameClassName )
{
	static UFunction* pFnGetGameTypeSearchProviderIndex = NULL;

	if ( ! pFnGetGameTypeSearchProviderIndex )
		pFnGetGameTypeSearchProviderIndex = (UFunction*) UObject::GObjObjects()->Data[ 55009 ];

	USGS_DBMainMenu_execGetGameTypeSearchProviderIndex_Parms GetGameTypeSearchProviderIndex_Parms;
	memcpy ( &GetGameTypeSearchProviderIndex_Parms.GameClassName, &GameClassName, 0xC );

	this->ProcessEvent ( pFnGetGameTypeSearchProviderIndex, &GetGameTypeSearchProviderIndex_Parms, NULL );

	return GetGameTypeSearchProviderIndex_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.UpdateFilterButton
// [0x00020001] ( FUNC_Final )
// Parameters infos:

void USGS_DBMainMenu::UpdateFilterButton ( )
{
	static UFunction* pFnUpdateFilterButton = NULL;

	if ( ! pFnUpdateFilterButton )
		pFnUpdateFilterButton = (UFunction*) UObject::GObjObjects()->Data[ 54981 ];

	USGS_DBMainMenu_execUpdateFilterButton_Parms UpdateFilterButton_Parms;

	this->ProcessEvent ( pFnUpdateFilterButton, &UpdateFilterButton_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.Cleanup
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 55008 ];

	USGS_DBMainMenu_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ForceLANOption
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USGS_DBMainMenu::ForceLANOption ( )
{
	static UFunction* pFnForceLANOption = NULL;

	if ( ! pFnForceLANOption )
		pFnForceLANOption = (UFunction*) UObject::GObjObjects()->Data[ 54994 ];

	USGS_DBMainMenu_execForceLANOption_Parms ForceLANOption_Parms;

	this->ProcessEvent ( pFnForceLANOption, &ForceLANOption_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.IsLoggedIn
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bRequireOnlineLogin            ( CPF_OptionalParm | CPF_Parm )

bool USGS_DBMainMenu::eventIsLoggedIn ( int ControllerId, unsigned long bRequireOnlineLogin )
{
	static UFunction* pFnIsLoggedIn = NULL;

	if ( ! pFnIsLoggedIn )
		pFnIsLoggedIn = (UFunction*) UObject::GObjObjects()->Data[ 54995 ];

	USGS_DBMainMenu_eventIsLoggedIn_Parms IsLoggedIn_Parms;
	IsLoggedIn_Parms.ControllerId = ControllerId;
	IsLoggedIn_Parms.bRequireOnlineLogin = bRequireOnlineLogin;

	this->ProcessEvent ( pFnIsLoggedIn, &IsLoggedIn_Parms, NULL );

	return IsLoggedIn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.ValidateServerType
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 54991 ];

	USGS_DBMainMenu_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.GetPlayerIndex
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USGS_DBMainMenu::GetPlayerIndex ( )
{
	static UFunction* pFnGetPlayerIndex = NULL;

	if ( ! pFnGetPlayerIndex )
		pFnGetPlayerIndex = (UFunction*) UObject::GObjObjects()->Data[ 54987 ];

	USGS_DBMainMenu_execGetPlayerIndex_Parms GetPlayerIndex_Parms;

	this->ProcessEvent ( pFnGetPlayerIndex, &GetPlayerIndex_Parms, NULL );

	return GetPlayerIndex_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.GetPlayerOwner
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// class ULocalPlayer*            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

class ULocalPlayer* USGS_DBMainMenu::GetPlayerOwner ( int PlayerIndex )
{
	static UFunction* pFnGetPlayerOwner = NULL;

	if ( ! pFnGetPlayerOwner )
		pFnGetPlayerOwner = (UFunction*) UObject::GObjObjects()->Data[ 54984 ];

	USGS_DBMainMenu_execGetPlayerOwner_Parms GetPlayerOwner_Parms;
	GetPlayerOwner_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetPlayerOwner, &GetPlayerOwner_Parms, NULL );

	return GetPlayerOwner_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.DisableSubComponents
// [0x00020000] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_DBMainMenu::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 54982 ];

	USGS_DBMainMenu_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 54972 ];

	USGS_DBMainMenu_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnReadAvatarComplete
// [0x00020002] 
// Parameters infos:
// struct FUniqueNetId            PlayerNetId                    ( CPF_Const | CPF_Parm )
// class UTexture2D*              Avatar                         ( CPF_Parm )

void USGS_DBMainMenu::OnReadAvatarComplete ( struct FUniqueNetId PlayerNetId, class UTexture2D* Avatar )
{
	static UFunction* pFnOnReadAvatarComplete = NULL;

	if ( ! pFnOnReadAvatarComplete )
		pFnOnReadAvatarComplete = (UFunction*) UObject::GObjObjects()->Data[ 54969 ];

	USGS_DBMainMenu_execOnReadAvatarComplete_Parms OnReadAvatarComplete_Parms;
	memcpy ( &OnReadAvatarComplete_Parms.PlayerNetId, &PlayerNetId, 0x8 );
	OnReadAvatarComplete_Parms.Avatar = Avatar;

	this->ProcessEvent ( pFnOnReadAvatarComplete, &OnReadAvatarComplete_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.GetGamma
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::GetGamma ( )
{
	static UFunction* pFnGetGamma = NULL;

	if ( ! pFnGetGamma )
		pFnGetGamma = (UFunction*) UObject::GObjObjects()->Data[ 54967 ];

	USGS_DBMainMenu_execGetGamma_Parms GetGamma_Parms;

	this->ProcessEvent ( pFnGetGamma, &GetGamma_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetGamma
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetGamma ( )
{
	static UFunction* pFnSetGamma = NULL;

	if ( ! pFnSetGamma )
		pFnSetGamma = (UFunction*) UObject::GObjObjects()->Data[ 54965 ];

	USGS_DBMainMenu_execSetGamma_Parms SetGamma_Parms;

	this->ProcessEvent ( pFnSetGamma, &SetGamma_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetVolumes
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetVolumes ( )
{
	static UFunction* pFnSetVolumes = NULL;

	if ( ! pFnSetVolumes )
		pFnSetVolumes = (UFunction*) UObject::GObjObjects()->Data[ 54960 ];

	USGS_DBMainMenu_execSetVolumes_Parms SetVolumes_Parms;

	this->ProcessEvent ( pFnSetVolumes, &SetVolumes_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.HandleVolumes
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::HandleVolumes ( )
{
	static UFunction* pFnHandleVolumes = NULL;

	if ( ! pFnHandleVolumes )
		pFnHandleVolumes = (UFunction*) UObject::GObjObjects()->Data[ 54955 ];

	USGS_DBMainMenu_execHandleVolumes_Parms HandleVolumes_Parms;

	this->ProcessEvent ( pFnHandleVolumes, &HandleVolumes_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SaveOptions
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SaveOptions ( )
{
	static UFunction* pFnSaveOptions = NULL;

	if ( ! pFnSaveOptions )
		pFnSaveOptions = (UFunction*) UObject::GObjObjects()->Data[ 54953 ];

	USGS_DBMainMenu_execSaveOptions_Parms SaveOptions_Parms;

	this->ProcessEvent ( pFnSaveOptions, &SaveOptions_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.CheckResolution
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::CheckResolution ( )
{
	static UFunction* pFnCheckResolution = NULL;

	if ( ! pFnCheckResolution )
		pFnCheckResolution = (UFunction*) UObject::GObjObjects()->Data[ 54949 ];

	USGS_DBMainMenu_execCheckResolution_Parms CheckResolution_Parms;

	this->ProcessEvent ( pFnCheckResolution, &CheckResolution_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.HandleResolutions
// [0x00820002] 
// Parameters infos:

void USGS_DBMainMenu::HandleResolutions ( )
{
	static UFunction* pFnHandleResolutions = NULL;

	if ( ! pFnHandleResolutions )
		pFnHandleResolutions = (UFunction*) UObject::GObjObjects()->Data[ 54934 ];

	USGS_DBMainMenu_execHandleResolutions_Parms HandleResolutions_Parms;

	this->ProcessEvent ( pFnHandleResolutions, &HandleResolutions_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ResetButtons
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::ResetButtons ( )
{
	static UFunction* pFnResetButtons = NULL;

	if ( ! pFnResetButtons )
		pFnResetButtons = (UFunction*) UObject::GObjObjects()->Data[ 54932 ];

	USGS_DBMainMenu_execResetButtons_Parms ResetButtons_Parms;

	this->ProcessEvent ( pFnResetButtons, &ResetButtons_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetButtons
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetButtons ( )
{
	static UFunction* pFnSetButtons = NULL;

	if ( ! pFnSetButtons )
		pFnSetButtons = (UFunction*) UObject::GObjObjects()->Data[ 54928 ];

	USGS_DBMainMenu_execSetButtons_Parms SetButtons_Parms;

	this->ProcessEvent ( pFnSetButtons, &SetButtons_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ResetKeys
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::ResetKeys ( )
{
	static UFunction* pFnResetKeys = NULL;

	if ( ! pFnResetKeys )
		pFnResetKeys = (UFunction*) UObject::GObjObjects()->Data[ 54925 ];

	USGS_DBMainMenu_execResetKeys_Parms ResetKeys_Parms;

	this->ProcessEvent ( pFnResetKeys, &ResetKeys_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SetKeys
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::SetKeys ( )
{
	static UFunction* pFnSetKeys = NULL;

	if ( ! pFnSetKeys )
		pFnSetKeys = (UFunction*) UObject::GObjObjects()->Data[ 54921 ];

	USGS_DBMainMenu_execSetKeys_Parms SetKeys_Parms;

	this->ProcessEvent ( pFnSetKeys, &SetKeys_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.InitList
// [0x00020002] 
// Parameters infos:
// int                            Size                           ( CPF_Parm )

void USGS_DBMainMenu::InitList ( int Size )
{
	static UFunction* pFnInitList = NULL;

	if ( ! pFnInitList )
		pFnInitList = (UFunction*) UObject::GObjObjects()->Data[ 54919 ];

	USGS_DBMainMenu_execInitList_Parms InitList_Parms;
	InitList_Parms.Size = Size;

	this->ProcessEvent ( pFnInitList, &InitList_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ResetList
// [0x00020002] 
// Parameters infos:
// int                            Size                           ( CPF_Parm )

void USGS_DBMainMenu::ResetList ( int Size )
{
	static UFunction* pFnResetList = NULL;

	if ( ! pFnResetList )
		pFnResetList = (UFunction*) UObject::GObjObjects()->Data[ 54917 ];

	USGS_DBMainMenu_execResetList_Parms ResetList_Parms;
	ResetList_Parms.Size = Size;

	this->ProcessEvent ( pFnResetList, &ResetList_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SendControllerToAS3
// [0x00020002] 
// Parameters infos:
// struct FString                 bName                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::SendControllerToAS3 ( struct FString bName )
{
	static UFunction* pFnSendControllerToAS3 = NULL;

	if ( ! pFnSendControllerToAS3 )
		pFnSendControllerToAS3 = (UFunction*) UObject::GObjObjects()->Data[ 54915 ];

	USGS_DBMainMenu_execSendControllerToAS3_Parms SendControllerToAS3_Parms;
	memcpy ( &SendControllerToAS3_Parms.bName, &bName, 0xC );

	this->ProcessEvent ( pFnSendControllerToAS3, &SendControllerToAS3_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.SendMouseToAS3
// [0x00020002] 
// Parameters infos:
// struct FString                 bName                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::SendMouseToAS3 ( struct FString bName )
{
	static UFunction* pFnSendMouseToAS3 = NULL;

	if ( ! pFnSendMouseToAS3 )
		pFnSendMouseToAS3 = (UFunction*) UObject::GObjObjects()->Data[ 54913 ];

	USGS_DBMainMenu_execSendMouseToAS3_Parms SendMouseToAS3_Parms;
	memcpy ( &SendMouseToAS3_Parms.bName, &bName, 0xC );

	this->ProcessEvent ( pFnSendMouseToAS3, &SendMouseToAS3_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_DBMainMenu::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 54907 ];

	USGS_DBMainMenu_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.FilterControllerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_DBMainMenu::eventFilterControllerInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterControllerInput = NULL;

	if ( ! pFnFilterControllerInput )
		pFnFilterControllerInput = (UFunction*) UObject::GObjObjects()->Data[ 54902 ];

	USGS_DBMainMenu_eventFilterControllerInput_Parms FilterControllerInput_Parms;
	FilterControllerInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterControllerInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterControllerInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterControllerInput, &FilterControllerInput_Parms, NULL );

	return FilterControllerInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.IsControllerInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   ButtonName                     ( CPF_Parm )

bool USGS_DBMainMenu::IsControllerInput ( struct FName ButtonName )
{
	static UFunction* pFnIsControllerInput = NULL;

	if ( ! pFnIsControllerInput )
		pFnIsControllerInput = (UFunction*) UObject::GObjObjects()->Data[ 54899 ];

	USGS_DBMainMenu_execIsControllerInput_Parms IsControllerInput_Parms;
	memcpy ( &IsControllerInput_Parms.ButtonName, &ButtonName, 0x8 );

	this->ProcessEvent ( pFnIsControllerInput, &IsControllerInput_Parms, NULL );

	return IsControllerInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.ControllerConvertString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Str                            ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_DBMainMenu::ControllerConvertString ( struct FString Str )
{
	static UFunction* pFnControllerConvertString = NULL;

	if ( ! pFnControllerConvertString )
		pFnControllerConvertString = (UFunction*) UObject::GObjObjects()->Data[ 54895 ];

	USGS_DBMainMenu_execControllerConvertString_Parms ControllerConvertString_Parms;
	memcpy ( &ControllerConvertString_Parms.Str, &Str, 0xC );

	this->ProcessEvent ( pFnControllerConvertString, &ControllerConvertString_Parms, NULL );

	return ControllerConvertString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.PopulateButtonBindings
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::PopulateButtonBindings ( )
{
	static UFunction* pFnPopulateButtonBindings = NULL;

	if ( ! pFnPopulateButtonBindings )
		pFnPopulateButtonBindings = (UFunction*) UObject::GObjObjects()->Data[ 54887 ];

	USGS_DBMainMenu_execPopulateButtonBindings_Parms PopulateButtonBindings_Parms;

	this->ProcessEvent ( pFnPopulateButtonBindings, &PopulateButtonBindings_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ConvertString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Str                            ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_DBMainMenu::ConvertString ( struct FString Str )
{
	static UFunction* pFnConvertString = NULL;

	if ( ! pFnConvertString )
		pFnConvertString = (UFunction*) UObject::GObjObjects()->Data[ 54883 ];

	USGS_DBMainMenu_execConvertString_Parms ConvertString_Parms;
	memcpy ( &ConvertString_Parms.Str, &Str, 0xC );

	this->ProcessEvent ( pFnConvertString, &ConvertString_Parms, NULL );

	return ConvertString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DBMainMenu.PopulateKeyBindings
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::PopulateKeyBindings ( )
{
	static UFunction* pFnPopulateKeyBindings = NULL;

	if ( ! pFnPopulateKeyBindings )
		pFnPopulateKeyBindings = (UFunction*) UObject::GObjObjects()->Data[ 54876 ];

	USGS_DBMainMenu_execPopulateKeyBindings_Parms PopulateKeyBindings_Parms;

	this->ProcessEvent ( pFnPopulateKeyBindings, &PopulateKeyBindings_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.LoadOptions
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::LoadOptions ( )
{
	static UFunction* pFnLoadOptions = NULL;

	if ( ! pFnLoadOptions )
		pFnLoadOptions = (UFunction*) UObject::GObjObjects()->Data[ 54856 ];

	USGS_DBMainMenu_execLoadOptions_Parms LoadOptions_Parms;

	this->ProcessEvent ( pFnLoadOptions, &LoadOptions_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ReadAchievementStatsComplete
// [0x00820002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_DBMainMenu::ReadAchievementStatsComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnReadAchievementStatsComplete = NULL;

	if ( ! pFnReadAchievementStatsComplete )
		pFnReadAchievementStatsComplete = (UFunction*) UObject::GObjObjects()->Data[ 54841 ];

	USGS_DBMainMenu_execReadAchievementStatsComplete_Parms ReadAchievementStatsComplete_Parms;
	ReadAchievementStatsComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnReadAchievementStatsComplete, &ReadAchievementStatsComplete_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.PopulateAchievements
// [0x00020002] 
// Parameters infos:

void USGS_DBMainMenu::PopulateAchievements ( )
{
	static UFunction* pFnPopulateAchievements = NULL;

	if ( ! pFnPopulateAchievements )
		pFnPopulateAchievements = (UFunction*) UObject::GObjObjects()->Data[ 54840 ];

	USGS_DBMainMenu_execPopulateAchievements_Parms PopulateAchievements_Parms;

	this->ProcessEvent ( pFnPopulateAchievements, &PopulateAchievements_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            LocPlay                        ( CPF_OptionalParm | CPF_Parm )

void USGS_DBMainMenu::Init ( class ULocalPlayer* LocPlay )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 54827 ];

	USGS_DBMainMenu_execInit_Parms Init_Parms;
	Init_Parms.LocPlay = LocPlay;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.ExitGame
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::ExitGame ( struct FEventData ev )
{
	static UFunction* pFnExitGame = NULL;

	if ( ! pFnExitGame )
		pFnExitGame = (UFunction*) UObject::GObjObjects()->Data[ 54825 ];

	USGS_DBMainMenu_execExitGame_Parms ExitGame_Parms;
	memcpy ( &ExitGame_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnExitGame, &ExitGame_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.OnJoinGameKeyButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_DBMainMenu::OnJoinGameKeyButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnJoinGameKeyButtonPress = NULL;

	if ( ! pFnOnJoinGameKeyButtonPress )
		pFnOnJoinGameKeyButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 54823 ];

	USGS_DBMainMenu_execOnJoinGameKeyButtonPress_Parms OnJoinGameKeyButtonPress_Parms;
	memcpy ( &OnJoinGameKeyButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnJoinGameKeyButtonPress, &OnJoinGameKeyButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_DBMainMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_DBMainMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 54813 ];

	USGS_DBMainMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoAttack.CheckMaxLives
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_GameDinoAttack::CheckMaxLives ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckMaxLives = NULL;

	if ( ! pFnCheckMaxLives )
		pFnCheckMaxLives = (UFunction*) UObject::GObjObjects()->Data[ 56233 ];

	ASGS_GameDinoAttack_execCheckMaxLives_Parms CheckMaxLives_Parms;
	CheckMaxLives_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckMaxLives, &CheckMaxLives_Parms, NULL );

	return CheckMaxLives_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoAttack.CheckScore
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Scorer                         ( CPF_Parm )

bool ASGS_GameDinoAttack::CheckScore ( class APlayerReplicationInfo* Scorer )
{
	static UFunction* pFnCheckScore = NULL;

	if ( ! pFnCheckScore )
		pFnCheckScore = (UFunction*) UObject::GObjObjects()->Data[ 56230 ];

	ASGS_GameDinoAttack_execCheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;

	this->ProcessEvent ( pFnCheckScore, &CheckScore_Parms, NULL );

	return CheckScore_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoAttack.CheckEndGame
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

bool ASGS_GameDinoAttack::CheckEndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnCheckEndGame = NULL;

	if ( ! pFnCheckEndGame )
		pFnCheckEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56226 ];

	ASGS_GameDinoAttack_execCheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy ( &CheckEndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnCheckEndGame, &CheckEndGame_Parms, NULL );

	return CheckEndGame_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameDinoAttack.EndGame
// [0x00020002] 
// Parameters infos:
// class APlayerReplicationInfo*  Winner                         ( CPF_Parm )
// struct FString                 Reason                         ( CPF_Parm | CPF_NeedCtorLink )

void ASGS_GameDinoAttack::EndGame ( class APlayerReplicationInfo* Winner, struct FString Reason )
{
	static UFunction* pFnEndGame = NULL;

	if ( ! pFnEndGame )
		pFnEndGame = (UFunction*) UObject::GObjObjects()->Data[ 56222 ];

	ASGS_GameDinoAttack_execEndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy ( &EndGame_Parms.Reason, &Reason, 0xC );

	this->ProcessEvent ( pFnEndGame, &EndGame_Parms, NULL );
};

// Function SGSOrion.SGS_GameDinoAttack.Killed
// [0x00020002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_Parm )
// class AController*             KilledPlayer                   ( CPF_Parm )
// class APawn*                   KilledPawn                     ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )

void ASGS_GameDinoAttack::Killed ( class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType )
{
	static UFunction* pFnKilled = NULL;

	if ( ! pFnKilled )
		pFnKilled = (UFunction*) UObject::GObjObjects()->Data[ 56216 ];

	ASGS_GameDinoAttack_execKilled_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;

	this->ProcessEvent ( pFnKilled, &Killed_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_TREK12.InstantFire
// [0x00820102] 
// Parameters infos:

void ASGS_Weap_TREK12::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 64049 ];

	ASGS_Weap_TREK12_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_TREK12.AddSpread
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FRotator                BaseAim                        ( CPF_Parm )

struct FRotator ASGS_Weap_TREK12::AddSpread ( struct FRotator BaseAim )
{
	static UFunction* pFnAddSpread = NULL;

	if ( ! pFnAddSpread )
		pFnAddSpread = (UFunction*) UObject::GObjObjects()->Data[ 64046 ];

	ASGS_Weap_TREK12_execAddSpread_Parms AddSpread_Parms;
	memcpy ( &AddSpread_Parms.BaseAim, &BaseAim, 0xC );

	this->ProcessEvent ( pFnAddSpread, &AddSpread_Parms, NULL );

	return AddSpread_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_Weap_EnergyCarbine::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 63645 ];

	ASGS_Weap_EnergyCarbine_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.SetMuzzleFlashParams
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ASGS_Weap_EnergyCarbine::SetMuzzleFlashParams ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetMuzzleFlashParams = NULL;

	if ( ! pFnSetMuzzleFlashParams )
		pFnSetMuzzleFlashParams = (UFunction*) UObject::GObjObjects()->Data[ 63641 ];

	ASGS_Weap_EnergyCarbine_execSetMuzzleFlashParams_Parms SetMuzzleFlashParams_Parms;
	SetMuzzleFlashParams_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetMuzzleFlashParams, &SetMuzzleFlashParams_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.SetFlashLocation
// [0x00020002] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Weap_EnergyCarbine::SetFlashLocation ( struct FVector HitLocation )
{
	static UFunction* pFnSetFlashLocation = NULL;

	if ( ! pFnSetFlashLocation )
		pFnSetFlashLocation = (UFunction*) UObject::GObjObjects()->Data[ 63638 ];

	ASGS_Weap_EnergyCarbine_execSetFlashLocation_Parms SetFlashLocation_Parms;
	memcpy ( &SetFlashLocation_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSetFlashLocation, &SetFlashLocation_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.CalcWeaponFire
// [0x00C24102] 
// Parameters infos:
// struct FImpactInfo             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )
// struct FVector                 EndTrace                       ( CPF_Parm )
// struct FVector                 Extent                         ( CPF_OptionalParm | CPF_Parm )
// TArray< struct FImpactInfo >   ImpactList                     ( CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

struct FImpactInfo ASGS_Weap_EnergyCarbine::CalcWeaponFire ( struct FVector StartTrace, struct FVector EndTrace, struct FVector Extent, TArray< struct FImpactInfo >* ImpactList )
{
	static UFunction* pFnCalcWeaponFire = NULL;

	if ( ! pFnCalcWeaponFire )
		pFnCalcWeaponFire = (UFunction*) UObject::GObjObjects()->Data[ 63630 ];

	ASGS_Weap_EnergyCarbine_execCalcWeaponFire_Parms CalcWeaponFire_Parms;
	memcpy ( &CalcWeaponFire_Parms.StartTrace, &StartTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.EndTrace, &EndTrace, 0xC );
	memcpy ( &CalcWeaponFire_Parms.Extent, &Extent, 0xC );

	this->ProcessEvent ( pFnCalcWeaponFire, &CalcWeaponFire_Parms, NULL );

	if ( ImpactList )
		memcpy ( ImpactList, &CalcWeaponFire_Parms.ImpactList, 0xC );

	return CalcWeaponFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.GetAdjustedAim
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ASGS_Weap_EnergyCarbine::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 63624 ];

	ASGS_Weap_EnergyCarbine_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_Weap_EnergyCarbine::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 63621 ];

	ASGS_Weap_EnergyCarbine_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ASGS_Weap_EnergyCarbine::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 63617 ];

	ASGS_Weap_EnergyCarbine_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.ClearCombo
// [0x00020002] 
// Parameters infos:

void ASGS_Weap_EnergyCarbine::ClearCombo ( )
{
	static UFunction* pFnClearCombo = NULL;

	if ( ! pFnClearCombo )
		pFnClearCombo = (UFunction*) UObject::GObjObjects()->Data[ 63616 ];

	ASGS_Weap_EnergyCarbine_execClearCombo_Parms ClearCombo_Parms;

	this->ProcessEvent ( pFnClearCombo, &ClearCombo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.DoCombo
// [0x00020002] 
// Parameters infos:

void ASGS_Weap_EnergyCarbine::DoCombo ( )
{
	static UFunction* pFnDoCombo = NULL;

	if ( ! pFnDoCombo )
		pFnDoCombo = (UFunction*) UObject::GObjObjects()->Data[ 63615 ];

	ASGS_Weap_EnergyCarbine_execDoCombo_Parms DoCombo_Parms;

	this->ProcessEvent ( pFnDoCombo, &DoCombo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_EnergyCarbine::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 63613 ];

	ASGS_Weap_EnergyCarbine_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.SuggestAttackStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Weap_EnergyCarbine::SuggestAttackStyle ( )
{
	static UFunction* pFnSuggestAttackStyle = NULL;

	if ( ! pFnSuggestAttackStyle )
		pFnSuggestAttackStyle = (UFunction*) UObject::GObjObjects()->Data[ 63611 ];

	ASGS_Weap_EnergyCarbine_execSuggestAttackStyle_Parms SuggestAttackStyle_Parms;

	this->ProcessEvent ( pFnSuggestAttackStyle, &SuggestAttackStyle_Parms, NULL );

	return SuggestAttackStyle_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.RangedAttackTime
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Weap_EnergyCarbine::RangedAttackTime ( )
{
	static UFunction* pFnRangedAttackTime = NULL;

	if ( ! pFnRangedAttackTime )
		pFnRangedAttackTime = (UFunction*) UObject::GObjObjects()->Data[ 63608 ];

	ASGS_Weap_EnergyCarbine_execRangedAttackTime_Parms RangedAttackTime_Parms;

	this->ProcessEvent ( pFnRangedAttackTime, &RangedAttackTime_Parms, NULL );

	return RangedAttackTime_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.SetComboTarget
// [0x00020002] 
// Parameters infos:
// class AUTProj_Shockball*       S                              ( CPF_Parm )

void ASGS_Weap_EnergyCarbine::SetComboTarget ( class AUTProj_Shockball* S )
{
	static UFunction* pFnSetComboTarget = NULL;

	if ( ! pFnSetComboTarget )
		pFnSetComboTarget = (UFunction*) UObject::GObjObjects()->Data[ 63606 ];

	ASGS_Weap_EnergyCarbine_execSetComboTarget_Parms SetComboTarget_Parms;
	SetComboTarget_Parms.S = S;

	this->ProcessEvent ( pFnSetComboTarget, &SetComboTarget_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.InstantFireStartTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_Weap_EnergyCarbine::InstantFireStartTrace ( )
{
	static UFunction* pFnInstantFireStartTrace = NULL;

	if ( ! pFnInstantFireStartTrace )
		pFnInstantFireStartTrace = (UFunction*) UObject::GObjObjects()->Data[ 63604 ];

	ASGS_Weap_EnergyCarbine_execInstantFireStartTrace_Parms InstantFireStartTrace_Parms;

	this->ProcessEvent ( pFnInstantFireStartTrace, &InstantFireStartTrace_Parms, NULL );

	return InstantFireStartTrace_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_EnergyCarbine.GetAIRating
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Weap_EnergyCarbine::GetAIRating ( )
{
	static UFunction* pFnGetAIRating = NULL;

	if ( ! pFnGetAIRating )
		pFnGetAIRating = (UFunction*) UObject::GObjObjects()->Data[ 63601 ];

	ASGS_Weap_EnergyCarbine_execGetAIRating_Parms GetAIRating_Parms;

	this->ProcessEvent ( pFnGetAIRating, &GetAIRating_Parms, NULL );

	return GetAIRating_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Weap_RocketLauncher::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 64286 ];

	ASGS_Weap_RocketLauncher_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.AddAmmo
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Amount                         ( CPF_Parm )

int ASGS_Weap_RocketLauncher::AddAmmo ( int Amount )
{
	static UFunction* pFnAddAmmo = NULL;

	if ( ! pFnAddAmmo )
		pFnAddAmmo = (UFunction*) UObject::GObjObjects()->Data[ 64282 ];

	ASGS_Weap_RocketLauncher_execAddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnAddAmmo, &AddAmmo_Parms, NULL );

	return AddAmmo_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.UpdateAmmoVisibility
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::UpdateAmmoVisibility ( )
{
	static UFunction* pFnUpdateAmmoVisibility = NULL;

	if ( ! pFnUpdateAmmoVisibility )
		pFnUpdateAmmoVisibility = (UFunction*) UObject::GObjObjects()->Data[ 64281 ];

	ASGS_Weap_RocketLauncher_execUpdateAmmoVisibility_Parms UpdateAmmoVisibility_Parms;

	this->ProcessEvent ( pFnUpdateAmmoVisibility, &UpdateAmmoVisibility_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.HideRocket
// [0x00020102] 
// Parameters infos:
// struct FName                   RocketName                     ( CPF_Parm )
// unsigned long                  ShouldHide                     ( CPF_Parm )

void ASGS_Weap_RocketLauncher::HideRocket ( struct FName RocketName, unsigned long ShouldHide )
{
	static UFunction* pFnHideRocket = NULL;

	if ( ! pFnHideRocket )
		pFnHideRocket = (UFunction*) UObject::GObjObjects()->Data[ 64277 ];

	ASGS_Weap_RocketLauncher_execHideRocket_Parms HideRocket_Parms;
	memcpy ( &HideRocket_Parms.RocketName, &RocketName, 0x8 );
	HideRocket_Parms.ShouldHide = ShouldHide;

	this->ProcessEvent ( pFnHideRocket, &HideRocket_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.HideRocketAmmo
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::HideRocketAmmo ( )
{
	static UFunction* pFnHideRocketAmmo = NULL;

	if ( ! pFnHideRocketAmmo )
		pFnHideRocketAmmo = (UFunction*) UObject::GObjObjects()->Data[ 64276 ];

	ASGS_Weap_RocketLauncher_execHideRocketAmmo_Parms HideRocketAmmo_Parms;

	this->ProcessEvent ( pFnHideRocketAmmo, &HideRocketAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.PlayFiringSound
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 64275 ];

	ASGS_Weap_RocketLauncher_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.GetProjectileClass
// [0x00020002] 
// Parameters infos:
// class UClass*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UClass* ASGS_Weap_RocketLauncher::GetProjectileClass ( )
{
	static UFunction* pFnGetProjectileClass = NULL;

	if ( ! pFnGetProjectileClass )
		pFnGetProjectileClass = (UFunction*) UObject::GObjObjects()->Data[ 64273 ];

	ASGS_Weap_RocketLauncher_execGetProjectileClass_Parms GetProjectileClass_Parms;

	this->ProcessEvent ( pFnGetProjectileClass, &GetProjectileClass_Parms, NULL );

	return GetProjectileClass_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_Weap_RocketLauncher::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 64270 ];

	ASGS_Weap_RocketLauncher_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.FireLoad
// [0x00820002] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::FireLoad ( )
{
	static UFunction* pFnFireLoad = NULL;

	if ( ! pFnFireLoad )
		pFnFireLoad = (UFunction*) UObject::GObjObjects()->Data[ 64249 ];

	ASGS_Weap_RocketLauncher_execFireLoad_Parms FireLoad_Parms;

	this->ProcessEvent ( pFnFireLoad, &FireLoad_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.WeaponFireLoad
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::WeaponFireLoad ( )
{
	static UFunction* pFnWeaponFireLoad = NULL;

	if ( ! pFnWeaponFireLoad )
		pFnWeaponFireLoad = (UFunction*) UObject::GObjObjects()->Data[ 64248 ];

	ASGS_Weap_RocketLauncher_execWeaponFireLoad_Parms WeaponFireLoad_Parms;

	this->ProcessEvent ( pFnWeaponFireLoad, &WeaponFireLoad_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.GetSpreadDist
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ASGS_Weap_RocketLauncher::GetSpreadDist ( )
{
	static UFunction* pFnGetSpreadDist = NULL;

	if ( ! pFnGetSpreadDist )
		pFnGetSpreadDist = (UFunction*) UObject::GObjObjects()->Data[ 64246 ];

	ASGS_Weap_RocketLauncher_execGetSpreadDist_Parms GetSpreadDist_Parms;

	this->ProcessEvent ( pFnGetSpreadDist, &GetSpreadDist_Parms, NULL );

	return GetSpreadDist_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.BestMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ASGS_Weap_RocketLauncher::BestMode ( )
{
	static UFunction* pFnBestMode = NULL;

	if ( ! pFnBestMode )
		pFnBestMode = (UFunction*) UObject::GObjObjects()->Data[ 64243 ];

	ASGS_Weap_RocketLauncher_execBestMode_Parms BestMode_Parms;

	this->ProcessEvent ( pFnBestMode, &BestMode_Parms, NULL );

	return BestMode_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.GetAIRating
// [0x00820002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Weap_RocketLauncher::GetAIRating ( )
{
	static UFunction* pFnGetAIRating = NULL;

	if ( ! pFnGetAIRating )
		pFnGetAIRating = (UFunction*) UObject::GObjObjects()->Data[ 64236 ];

	ASGS_Weap_RocketLauncher_execGetAIRating_Parms GetAIRating_Parms;

	this->ProcessEvent ( pFnGetAIRating, &GetAIRating_Parms, NULL );

	return GetAIRating_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.SuggestAttackStyle
// [0x00020002] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Weap_RocketLauncher::SuggestAttackStyle ( )
{
	static UFunction* pFnSuggestAttackStyle = NULL;

	if ( ! pFnSuggestAttackStyle )
		pFnSuggestAttackStyle = (UFunction*) UObject::GObjObjects()->Data[ 64233 ];

	ASGS_Weap_RocketLauncher_execSuggestAttackStyle_Parms SuggestAttackStyle_Parms;

	this->ProcessEvent ( pFnSuggestAttackStyle, &SuggestAttackStyle_Parms, NULL );

	return SuggestAttackStyle_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.DrawLFMData
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void ASGS_Weap_RocketLauncher::DrawLFMData ( class AHUD* HUD )
{
	static UFunction* pFnDrawLFMData = NULL;

	if ( ! pFnDrawLFMData )
		pFnDrawLFMData = (UFunction*) UObject::GObjObjects()->Data[ 64217 ];

	ASGS_Weap_RocketLauncher_execDrawLFMData_Parms DrawLFMData_Parms;
	DrawLFMData_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawLFMData, &DrawLFMData_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.CauseMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Weap_RocketLauncher::eventCauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 64214 ];

	ASGS_Weap_RocketLauncher_eventCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.DetachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::DetachMuzzleFlash ( )
{
	static UFunction* pFnDetachMuzzleFlash = NULL;

	if ( ! pFnDetachMuzzleFlash )
		pFnDetachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 64211 ];

	ASGS_Weap_RocketLauncher_execDetachMuzzleFlash_Parms DetachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnDetachMuzzleFlash, &DetachMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 64208 ];

	ASGS_Weap_RocketLauncher_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.CauseMuzzleFlashLight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Weap_RocketLauncher::eventCauseMuzzleFlashLight ( )
{
	static UFunction* pFnCauseMuzzleFlashLight = NULL;

	if ( ! pFnCauseMuzzleFlashLight )
		pFnCauseMuzzleFlashLight = (UFunction*) UObject::GObjObjects()->Data[ 64206 ];

	ASGS_Weap_RocketLauncher_eventCauseMuzzleFlashLight_Parms CauseMuzzleFlashLight_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlashLight, &CauseMuzzleFlashLight_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.StopMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Weap_RocketLauncher::eventStopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 64205 ];

	ASGS_Weap_RocketLauncher_eventStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.MuzzleFlashTimer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Weap_RocketLauncher::eventMuzzleFlashTimer ( )
{
	static UFunction* pFnMuzzleFlashTimer = NULL;

	if ( ! pFnMuzzleFlashTimer )
		pFnMuzzleFlashTimer = (UFunction*) UObject::GObjObjects()->Data[ 64202 ];

	ASGS_Weap_RocketLauncher_eventMuzzleFlashTimer_Parms MuzzleFlashTimer_Parms;

	this->ProcessEvent ( pFnMuzzleFlashTimer, &MuzzleFlashTimer_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.ActiveRenderOverlays
// [0x00020102] 
// Parameters infos:
// class AHUD*                    H                              ( CPF_Parm )

void ASGS_Weap_RocketLauncher::ActiveRenderOverlays ( class AHUD* H )
{
	static UFunction* pFnActiveRenderOverlays = NULL;

	if ( ! pFnActiveRenderOverlays )
		pFnActiveRenderOverlays = (UFunction*) UObject::GObjObjects()->Data[ 64199 ];

	ASGS_Weap_RocketLauncher_execActiveRenderOverlays_Parms ActiveRenderOverlays_Parms;
	ActiveRenderOverlays_Parms.H = H;

	this->ProcessEvent ( pFnActiveRenderOverlays, &ActiveRenderOverlays_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Weap_RocketLauncher::eventDestroyed ( )
{
	static UFunction* pFnDestroyed = NULL;

	if ( ! pFnDestroyed )
		pFnDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 64198 ];

	ASGS_Weap_RocketLauncher_eventDestroyed_Parms Destroyed_Parms;

	this->ProcessEvent ( pFnDestroyed, &Destroyed_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.CheckTargetLock
// [0x00820002] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::CheckTargetLock ( )
{
	static UFunction* pFnCheckTargetLock = NULL;

	if ( ! pFnCheckTargetLock )
		pFnCheckTargetLock = (UFunction*) UObject::GObjObjects()->Data[ 64176 ];

	ASGS_Weap_RocketLauncher_execCheckTargetLock_Parms CheckTargetLock_Parms;

	this->ProcessEvent ( pFnCheckTargetLock, &CheckTargetLock_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Weap_RocketLauncher::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 64174 ];

	ASGS_Weap_RocketLauncher_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.CanLockOnTo
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TA                             ( CPF_Parm )

bool ASGS_Weap_RocketLauncher::CanLockOnTo ( class AActor* TA )
{
	static UFunction* pFnCanLockOnTo = NULL;

	if ( ! pFnCanLockOnTo )
		pFnCanLockOnTo = (UFunction*) UObject::GObjObjects()->Data[ 64171 ];

	ASGS_Weap_RocketLauncher_execCanLockOnTo_Parms CanLockOnTo_Parms;
	CanLockOnTo_Parms.TA = TA;

	this->ProcessEvent ( pFnCanLockOnTo, &CanLockOnTo_Parms, NULL );

	return CanLockOnTo_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.AdjustLockTarget
// [0x00020002] 
// Parameters infos:
// class AActor*                  NewLockTarget                  ( CPF_Parm )

void ASGS_Weap_RocketLauncher::AdjustLockTarget ( class AActor* NewLockTarget )
{
	static UFunction* pFnAdjustLockTarget = NULL;

	if ( ! pFnAdjustLockTarget )
		pFnAdjustLockTarget = (UFunction*) UObject::GObjObjects()->Data[ 64169 ];

	ASGS_Weap_RocketLauncher_execAdjustLockTarget_Parms AdjustLockTarget_Parms;
	AdjustLockTarget_Parms.NewLockTarget = NewLockTarget;

	this->ProcessEvent ( pFnAdjustLockTarget, &AdjustLockTarget_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 64168 ];

	ASGS_Weap_RocketLauncher_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.GetWeaponDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Weap_RocketLauncher::GetWeaponDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetWeaponDebug = NULL;

	if ( ! pFnGetWeaponDebug )
		pFnGetWeaponDebug = (UFunction*) UObject::GObjObjects()->Data[ 64165 ];

	ASGS_Weap_RocketLauncher_execGetWeaponDebug_Parms GetWeaponDebug_Parms;

	this->ProcessEvent ( pFnGetWeaponDebug, &GetWeaponDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetWeaponDebug_Parms.DebugInfo, 0xC );
};

// Function SGSOrion.SGS_Weap_RocketLauncher.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float ASGS_Weap_RocketLauncher::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 64162 ];

	ASGS_Weap_RocketLauncher_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_RocketLauncher.AdjustWeaponTimingForConsole
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_RocketLauncher::AdjustWeaponTimingForConsole ( )
{
	static UFunction* pFnAdjustWeaponTimingForConsole = NULL;

	if ( ! pFnAdjustWeaponTimingForConsole )
		pFnAdjustWeaponTimingForConsole = (UFunction*) UObject::GObjObjects()->Data[ 64160 ];

	ASGS_Weap_RocketLauncher_execAdjustWeaponTimingForConsole_Parms AdjustWeaponTimingForConsole_Parms;

	this->ProcessEvent ( pFnAdjustWeaponTimingForConsole, &AdjustWeaponTimingForConsole_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_LaserRifle.PlayChargingSound
// [0x00020102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )

void ASGS_Weap_LaserRifle::PlayChargingSound ( class USoundCue* Sound )
{
	static UFunction* pFnPlayChargingSound = NULL;

	if ( ! pFnPlayChargingSound )
		pFnPlayChargingSound = (UFunction*) UObject::GObjObjects()->Data[ 63737 ];

	ASGS_Weap_LaserRifle_execPlayChargingSound_Parms PlayChargingSound_Parms;
	PlayChargingSound_Parms.Sound = Sound;

	this->ProcessEvent ( pFnPlayChargingSound, &PlayChargingSound_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_LaserRifle.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_LaserRifle::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 63735 ];

	ASGS_Weap_LaserRifle_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_Weap_GrenadeCAR::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 63713 ];

	ASGS_Weap_GrenadeCAR_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.PlayThirdPersonGrenadeThrow
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_GrenadeCAR::PlayThirdPersonGrenadeThrow ( )
{
	static UFunction* pFnPlayThirdPersonGrenadeThrow = NULL;

	if ( ! pFnPlayThirdPersonGrenadeThrow )
		pFnPlayThirdPersonGrenadeThrow = (UFunction*) UObject::GObjObjects()->Data[ 63712 ];

	ASGS_Weap_GrenadeCAR_execPlayThirdPersonGrenadeThrow_Parms PlayThirdPersonGrenadeThrow_Parms;

	this->ProcessEvent ( pFnPlayThirdPersonGrenadeThrow, &PlayThirdPersonGrenadeThrow_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.ConsumeAmmo
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_GrenadeCAR::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 63710 ];

	ASGS_Weap_GrenadeCAR_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_GrenadeCAR::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 63709 ];

	ASGS_Weap_GrenadeCAR_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.ExplodeInHands
// [0x00020100] 
// Parameters infos:

void ASGS_Weap_GrenadeCAR::ExplodeInHands ( )
{
	static UFunction* pFnExplodeInHands = NULL;

	if ( ! pFnExplodeInHands )
		pFnExplodeInHands = (UFunction*) UObject::GObjObjects()->Data[ 63708 ];

	ASGS_Weap_GrenadeCAR_execExplodeInHands_Parms ExplodeInHands_Parms;

	this->ProcessEvent ( pFnExplodeInHands, &ExplodeInHands_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_GrenadeCAR.Activate
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_GrenadeCAR::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 63707 ];

	ASGS_Weap_GrenadeCAR_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_SmokeGrenade.PlayThirdPersonGrenadeThrow
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_SmokeGrenade::PlayThirdPersonGrenadeThrow ( )
{
	static UFunction* pFnPlayThirdPersonGrenadeThrow = NULL;

	if ( ! pFnPlayThirdPersonGrenadeThrow )
		pFnPlayThirdPersonGrenadeThrow = (UFunction*) UObject::GObjObjects()->Data[ 64371 ];

	ASGS_Weap_SmokeGrenade_execPlayThirdPersonGrenadeThrow_Parms PlayThirdPersonGrenadeThrow_Parms;

	this->ProcessEvent ( pFnPlayThirdPersonGrenadeThrow, &PlayThirdPersonGrenadeThrow_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_SmokeGrenade.ConsumeAmmo
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_SmokeGrenade::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 64369 ];

	ASGS_Weap_SmokeGrenade_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_SmokeGrenade.ExplodeInHands
// [0x00020100] 
// Parameters infos:

void ASGS_Weap_SmokeGrenade::ExplodeInHands ( )
{
	static UFunction* pFnExplodeInHands = NULL;

	if ( ! pFnExplodeInHands )
		pFnExplodeInHands = (UFunction*) UObject::GObjObjects()->Data[ 64368 ];

	ASGS_Weap_SmokeGrenade_execExplodeInHands_Parms ExplodeInHands_Parms;

	this->ProcessEvent ( pFnExplodeInHands, &ExplodeInHands_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_SmokeGrenade.Activate
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_SmokeGrenade::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 64367 ];

	ASGS_Weap_SmokeGrenade_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EMPGrenade.PlayThirdPersonGrenadeThrow
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_EMPGrenade::PlayThirdPersonGrenadeThrow ( )
{
	static UFunction* pFnPlayThirdPersonGrenadeThrow = NULL;

	if ( ! pFnPlayThirdPersonGrenadeThrow )
		pFnPlayThirdPersonGrenadeThrow = (UFunction*) UObject::GObjObjects()->Data[ 63583 ];

	ASGS_Weap_EMPGrenade_execPlayThirdPersonGrenadeThrow_Parms PlayThirdPersonGrenadeThrow_Parms;

	this->ProcessEvent ( pFnPlayThirdPersonGrenadeThrow, &PlayThirdPersonGrenadeThrow_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EMPGrenade.ConsumeAmmo
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_EMPGrenade::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 63581 ];

	ASGS_Weap_EMPGrenade_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EMPGrenade.ExplodeInHands
// [0x00020100] 
// Parameters infos:

void ASGS_Weap_EMPGrenade::ExplodeInHands ( )
{
	static UFunction* pFnExplodeInHands = NULL;

	if ( ! pFnExplodeInHands )
		pFnExplodeInHands = (UFunction*) UObject::GObjObjects()->Data[ 63580 ];

	ASGS_Weap_EMPGrenade_execExplodeInHands_Parms ExplodeInHands_Parms;

	this->ProcessEvent ( pFnExplodeInHands, &ExplodeInHands_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_EMPGrenade.Activate
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_EMPGrenade::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 63579 ];

	ASGS_Weap_EMPGrenade_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle_Griffin::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 62590 ];

	ASGS_Vehicle_Griffin_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Griffin::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 62589 ];

	ASGS_Vehicle_Griffin_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Griffin::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 62588 ];

	ASGS_Vehicle_Griffin_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle_Griffin::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 62580 ];

	ASGS_Vehicle_Griffin_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.SetVehicleEffectParms
// [0x00020102] 
// Parameters infos:
// struct FName                   TriggerName                    ( CPF_Parm )
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_Griffin::SetVehicleEffectParms ( struct FName TriggerName, class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetVehicleEffectParms = NULL;

	if ( ! pFnSetVehicleEffectParms )
		pFnSetVehicleEffectParms = (UFunction*) UObject::GObjObjects()->Data[ 62577 ];

	ASGS_Vehicle_Griffin_execSetVehicleEffectParms_Parms SetVehicleEffectParms_Parms;
	memcpy ( &SetVehicleEffectParms_Parms.TriggerName, &TriggerName, 0x8 );
	SetVehicleEffectParms_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetVehicleEffectParms, &SetVehicleEffectParms_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.MantaDuckEffect
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle_Griffin::eventMantaDuckEffect ( )
{
	static UFunction* pFnMantaDuckEffect = NULL;

	if ( ! pFnMantaDuckEffect )
		pFnMantaDuckEffect = (UFunction*) UObject::GObjObjects()->Data[ 62576 ];

	ASGS_Vehicle_Griffin_eventMantaDuckEffect_Parms MantaDuckEffect_Parms;

	this->ProcessEvent ( pFnMantaDuckEffect, &MantaDuckEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.MantaJumpEffect
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle_Griffin::eventMantaJumpEffect ( )
{
	static UFunction* pFnMantaJumpEffect = NULL;

	if ( ! pFnMantaJumpEffect )
		pFnMantaJumpEffect = (UFunction*) UObject::GObjObjects()->Data[ 62575 ];

	ASGS_Vehicle_Griffin_eventMantaJumpEffect_Parms MantaJumpEffect_Parms;

	this->ProcessEvent ( pFnMantaJumpEffect, &MantaJumpEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.InitializeEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Griffin::InitializeEffects ( )
{
	static UFunction* pFnInitializeEffects = NULL;

	if ( ! pFnInitializeEffects )
		pFnInitializeEffects = (UFunction*) UObject::GObjObjects()->Data[ 62574 ];

	ASGS_Vehicle_Griffin_execInitializeEffects_Parms InitializeEffects_Parms;

	this->ProcessEvent ( pFnInitializeEffects, &InitializeEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.RecommendCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool ASGS_Vehicle_Griffin::RecommendCharge ( class AUTBot* B, class APawn* Enemy )
{
	static UFunction* pFnRecommendCharge = NULL;

	if ( ! pFnRecommendCharge )
		pFnRecommendCharge = (UFunction*) UObject::GObjObjects()->Data[ 62570 ];

	ASGS_Vehicle_Griffin_execRecommendCharge_Parms RecommendCharge_Parms;
	RecommendCharge_Parms.B = B;
	RecommendCharge_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnRecommendCharge, &RecommendCharge_Parms, NULL );

	return RecommendCharge_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ASGS_Vehicle_Griffin::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 62565 ];

	ASGS_Vehicle_Griffin_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle_Griffin::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 62563 ];

	ASGS_Vehicle_Griffin_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_Griffin::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 62558 ];

	ASGS_Vehicle_Griffin_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function SGSOrion.SGS_Vehicle_Griffin.GetChargePower
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Vehicle_Griffin::GetChargePower ( )
{
	static UFunction* pFnGetChargePower = NULL;

	if ( ! pFnGetChargePower )
		pFnGetChargePower = (UFunction*) UObject::GObjObjects()->Data[ 62556 ];

	ASGS_Vehicle_Griffin_execGetChargePower_Parms GetChargePower_Parms;

	this->ProcessEvent ( pFnGetChargePower, &GetChargePower_Parms, NULL );

	return GetChargePower_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle_Griffin::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62554 ];

	ASGS_Vehicle_Griffin_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle_Griffin::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 62551 ];

	ASGS_Vehicle_Griffin_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.IncomingMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void ASGS_Vehicle_Griffin::IncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 62548 ];

	ASGS_Vehicle_Griffin_execIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool ASGS_Vehicle_Griffin::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 62545 ];

	ASGS_Vehicle_Griffin_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.ChooseFireMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ASGS_Vehicle_Griffin::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 62542 ];

	ASGS_Vehicle_Griffin_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Vehicle_Griffin::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 62539 ];

	ASGS_Vehicle_Griffin_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.OverrideEndFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ASGS_Vehicle_Griffin::OverrideEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideEndFire = NULL;

	if ( ! pFnOverrideEndFire )
		pFnOverrideEndFire = (UFunction*) UObject::GObjObjects()->Data[ 62536 ];

	ASGS_Vehicle_Griffin_execOverrideEndFire_Parms OverrideEndFire_Parms;
	OverrideEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideEndFire, &OverrideEndFire_Parms, NULL );

	return OverrideEndFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.OverrideBeginFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ASGS_Vehicle_Griffin::OverrideBeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideBeginFire = NULL;

	if ( ! pFnOverrideBeginFire )
		pFnOverrideBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 62533 ];

	ASGS_Vehicle_Griffin_execOverrideBeginFire_Parms OverrideBeginFire_Parms;
	OverrideBeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideBeginFire, &OverrideBeginFire_Parms, NULL );

	return OverrideBeginFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_Vehicle_Griffin::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 62529 ];

	ASGS_Vehicle_Griffin_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.CanBeBaseForPawn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool ASGS_Vehicle_Griffin::CanBeBaseForPawn ( class APawn* aPawn )
{
	static UFunction* pFnCanBeBaseForPawn = NULL;

	if ( ! pFnCanBeBaseForPawn )
		pFnCanBeBaseForPawn = (UFunction*) UObject::GObjObjects()->Data[ 62526 ];

	ASGS_Vehicle_Griffin_execCanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;
	CanBeBaseForPawn_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnCanBeBaseForPawn, &CanBeBaseForPawn_Parms, NULL );

	return CanBeBaseForPawn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ASGS_Vehicle_Griffin::eventTick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62523 ];

	ASGS_Vehicle_Griffin_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Griffin.GetCameraStart
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector ASGS_Vehicle_Griffin::GetCameraStart ( int SeatIndex )
{
	static UFunction* pFnGetCameraStart = NULL;

	if ( ! pFnGetCameraStart )
		pFnGetCameraStart = (UFunction*) UObject::GObjObjects()->Data[ 62512 ];

	ASGS_Vehicle_Griffin_execGetCameraStart_Parms GetCameraStart_Parms;
	GetCameraStart_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraStart, &GetCameraStart_Parms, NULL );

	return GetCameraStart_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Griffin.GetCameraFocus
// [0x00820102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            SeatIndex                      ( CPF_Parm )

struct FVector ASGS_Vehicle_Griffin::GetCameraFocus ( int SeatIndex )
{
	static UFunction* pFnGetCameraFocus = NULL;

	if ( ! pFnGetCameraFocus )
		pFnGetCameraFocus = (UFunction*) UObject::GObjObjects()->Data[ 62505 ];

	ASGS_Vehicle_Griffin_execGetCameraFocus_Parms GetCameraFocus_Parms;
	GetCameraFocus_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetCameraFocus, &GetCameraFocus_Parms, NULL );

	return GetCameraFocus_Parms.ReturnValue;
};

// Function SGSOrion.SGS_RadioMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_RadioMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 61300 ];

	USGS_RadioMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_RadioMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_RadioMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 61294 ];

	USGS_RadioMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_FamilyInfo_Dino_TRex.DinoWhatToDoNext
// [0x00022002] 
// Parameters infos:
// class ASGS_Controller_Dino*    dino                           ( CPF_Parm )

void USGS_FamilyInfo_Dino_TRex::DinoWhatToDoNext ( class ASGS_Controller_Dino* dino )
{
	static UFunction* pFnDinoWhatToDoNext = NULL;

	if ( ! pFnDinoWhatToDoNext )
		pFnDinoWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 55877 ];

	USGS_FamilyInfo_Dino_TRex_execDinoWhatToDoNext_Parms DinoWhatToDoNext_Parms;
	DinoWhatToDoNext_Parms.dino = dino;

	this->ProcessEvent ( pFnDinoWhatToDoNext, &DinoWhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_FamilyInfo_Dino_Raptor.DinoWhatToDoNext
// [0x00022000] 
// Parameters infos:
// class ASGS_Controller_Dino*    dino                           ( CPF_Parm )

void USGS_FamilyInfo_Dino_Raptor::DinoWhatToDoNext ( class ASGS_Controller_Dino* dino )
{
	static UFunction* pFnDinoWhatToDoNext = NULL;

	if ( ! pFnDinoWhatToDoNext )
		pFnDinoWhatToDoNext = (UFunction*) UObject::GObjObjects()->Data[ 55847 ];

	USGS_FamilyInfo_Dino_Raptor_execDinoWhatToDoNext_Parms DinoWhatToDoNext_Parms;
	DinoWhatToDoNext_Parms.dino = dino;

	this->ProcessEvent ( pFnDinoWhatToDoNext, &DinoWhatToDoNext_Parms, NULL );
};

// Function SGSOrion.SGS_StartupMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_StartupMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 62116 ];

	USGS_StartupMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_StartupMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_StartupMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 62106 ];

	USGS_StartupMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_GameMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 56455 ];

	USGS_GameMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_WeaponKillRewardMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_WeaponKillRewardMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 64432 ];

	USGS_WeaponKillRewardMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GeneratorMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_GeneratorMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 56911 ];

	USGS_GeneratorMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_GeneratorMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_GeneratorMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 56904 ];

	USGS_GeneratorMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PlayerInput.XBoxNextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxNextWeapon ( )
{
	static UFunction* pFnXBoxNextWeapon = NULL;

	if ( ! pFnXBoxNextWeapon )
		pFnXBoxNextWeapon = (UFunction*) UObject::GObjObjects()->Data[ 60978 ];

	USGS_PlayerInput_execXBoxNextWeapon_Parms XBoxNextWeapon_Parms;

	this->ProcessEvent ( pFnXBoxNextWeapon, &XBoxNextWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.T
// [0x00020002] 
// Parameters infos:

void USGS_PlayerInput::T ( )
{
	static UFunction* pFnT = NULL;

	if ( ! pFnT )
		pFnT = (UFunction*) UObject::GObjObjects()->Data[ 60977 ];

	USGS_PlayerInput_execT_Parms T_Parms;

	this->ProcessEvent ( pFnT, &T_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxWeaponSelect
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxWeaponSelect ( )
{
	static UFunction* pFnXBoxWeaponSelect = NULL;

	if ( ! pFnXBoxWeaponSelect )
		pFnXBoxWeaponSelect = (UFunction*) UObject::GObjObjects()->Data[ 60976 ];

	USGS_PlayerInput_execXBoxWeaponSelect_Parms XBoxWeaponSelect_Parms;

	this->ProcessEvent ( pFnXBoxWeaponSelect, &XBoxWeaponSelect_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxReload
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxReload ( )
{
	static UFunction* pFnXBoxReload = NULL;

	if ( ! pFnXBoxReload )
		pFnXBoxReload = (UFunction*) UObject::GObjObjects()->Data[ 60975 ];

	USGS_PlayerInput_execXBoxReload_Parms XBoxReload_Parms;

	this->ProcessEvent ( pFnXBoxReload, &XBoxReload_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxUse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxUse ( )
{
	static UFunction* pFnXBoxUse = NULL;

	if ( ! pFnXBoxUse )
		pFnXBoxUse = (UFunction*) UObject::GObjObjects()->Data[ 60974 ];

	USGS_PlayerInput_execXBoxUse_Parms XBoxUse_Parms;

	this->ProcessEvent ( pFnXBoxUse, &XBoxUse_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.GetRollDirection
// [0x00020002] 
// Parameters infos:

void USGS_PlayerInput::GetRollDirection ( )
{
	static UFunction* pFnGetRollDirection = NULL;

	if ( ! pFnGetRollDirection )
		pFnGetRollDirection = (UFunction*) UObject::GObjObjects()->Data[ 60973 ];

	USGS_PlayerInput_execGetRollDirection_Parms GetRollDirection_Parms;

	this->ProcessEvent ( pFnGetRollDirection, &GetRollDirection_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.Duck
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::Duck ( )
{
	static UFunction* pFnDuck = NULL;

	if ( ! pFnDuck )
		pFnDuck = (UFunction*) UObject::GObjObjects()->Data[ 60972 ];

	USGS_PlayerInput_execDuck_Parms Duck_Parms;

	this->ProcessEvent ( pFnDuck, &Duck_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.UnDuck
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::UnDuck ( )
{
	static UFunction* pFnUnDuck = NULL;

	if ( ! pFnUnDuck )
		pFnUnDuck = (UFunction*) UObject::GObjObjects()->Data[ 60971 ];

	USGS_PlayerInput_execUnDuck_Parms UnDuck_Parms;

	this->ProcessEvent ( pFnUnDuck, &UnDuck_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.FinishMelee
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::FinishMelee ( )
{
	static UFunction* pFnFinishMelee = NULL;

	if ( ! pFnFinishMelee )
		pFnFinishMelee = (UFunction*) UObject::GObjObjects()->Data[ 60970 ];

	USGS_PlayerInput_execFinishMelee_Parms FinishMelee_Parms;

	this->ProcessEvent ( pFnFinishMelee, &FinishMelee_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.DoMelee
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::DoMelee ( )
{
	static UFunction* pFnDoMelee = NULL;

	if ( ! pFnDoMelee )
		pFnDoMelee = (UFunction*) UObject::GObjObjects()->Data[ 60969 ];

	USGS_PlayerInput_execDoMelee_Parms DoMelee_Parms;

	this->ProcessEvent ( pFnDoMelee, &DoMelee_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.HideTeamInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::HideTeamInfo ( )
{
	static UFunction* pFnHideTeamInfo = NULL;

	if ( ! pFnHideTeamInfo )
		pFnHideTeamInfo = (UFunction*) UObject::GObjObjects()->Data[ 60968 ];

	USGS_PlayerInput_execHideTeamInfo_Parms HideTeamInfo_Parms;

	this->ProcessEvent ( pFnHideTeamInfo, &HideTeamInfo_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.ShowTeamInfo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::ShowTeamInfo ( )
{
	static UFunction* pFnShowTeamInfo = NULL;

	if ( ! pFnShowTeamInfo )
		pFnShowTeamInfo = (UFunction*) UObject::GObjObjects()->Data[ 60967 ];

	USGS_PlayerInput_execShowTeamInfo_Parms ShowTeamInfo_Parms;

	this->ProcessEvent ( pFnShowTeamInfo, &ShowTeamInfo_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.RequestClassSelection
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::RequestClassSelection ( )
{
	static UFunction* pFnRequestClassSelection = NULL;

	if ( ! pFnRequestClassSelection )
		pFnRequestClassSelection = (UFunction*) UObject::GObjObjects()->Data[ 60966 ];

	USGS_PlayerInput_execRequestClassSelection_Parms RequestClassSelection_Parms;

	this->ProcessEvent ( pFnRequestClassSelection, &RequestClassSelection_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.RequestTeamSelection
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::RequestTeamSelection ( )
{
	static UFunction* pFnRequestTeamSelection = NULL;

	if ( ! pFnRequestTeamSelection )
		pFnRequestTeamSelection = (UFunction*) UObject::GObjObjects()->Data[ 60965 ];

	USGS_PlayerInput_execRequestTeamSelection_Parms RequestTeamSelection_Parms;

	this->ProcessEvent ( pFnRequestTeamSelection, &RequestTeamSelection_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.ChangeFireMode
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::ChangeFireMode ( )
{
	static UFunction* pFnChangeFireMode = NULL;

	if ( ! pFnChangeFireMode )
		pFnChangeFireMode = (UFunction*) UObject::GObjObjects()->Data[ 60963 ];

	USGS_PlayerInput_execChangeFireMode_Parms ChangeFireMode_Parms;

	this->ProcessEvent ( pFnChangeFireMode, &ChangeFireMode_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StopAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void USGS_PlayerInput::StopAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopAltFire = NULL;

	if ( ! pFnStopAltFire )
		pFnStopAltFire = (UFunction*) UObject::GObjObjects()->Data[ 60961 ];

	USGS_PlayerInput_execStopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopAltFire, &StopAltFire_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StartAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void USGS_PlayerInput::StartAltFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartAltFire = NULL;

	if ( ! pFnStartAltFire )
		pFnStartAltFire = (UFunction*) UObject::GObjObjects()->Data[ 60959 ];

	USGS_PlayerInput_execStartAltFire_Parms StartAltFire_Parms;
	StartAltFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartAltFire, &StartAltFire_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StopFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void USGS_PlayerInput::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 60957 ];

	USGS_PlayerInput_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StartFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_OptionalParm | CPF_Parm )

void USGS_PlayerInput::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 60955 ];

	USGS_PlayerInput_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.ReleaseBar
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::ReleaseBar ( )
{
	static UFunction* pFnReleaseBar = NULL;

	if ( ! pFnReleaseBar )
		pFnReleaseBar = (UFunction*) UObject::GObjObjects()->Data[ 60954 ];

	USGS_PlayerInput_execReleaseBar_Parms ReleaseBar_Parms;

	this->ProcessEvent ( pFnReleaseBar, &ReleaseBar_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.Jump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::Jump ( )
{
	static UFunction* pFnJump = NULL;

	if ( ! pFnJump )
		pFnJump = (UFunction*) UObject::GObjObjects()->Data[ 60953 ];

	USGS_PlayerInput_execJump_Parms Jump_Parms;

	this->ProcessEvent ( pFnJump, &Jump_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxReleaseBar
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxReleaseBar ( )
{
	static UFunction* pFnXBoxReleaseBar = NULL;

	if ( ! pFnXBoxReleaseBar )
		pFnXBoxReleaseBar = (UFunction*) UObject::GObjObjects()->Data[ 60952 ];

	USGS_PlayerInput_execXBoxReleaseBar_Parms XBoxReleaseBar_Parms;

	this->ProcessEvent ( pFnXBoxReleaseBar, &XBoxReleaseBar_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XboxJump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XboxJump ( )
{
	static UFunction* pFnXboxJump = NULL;

	if ( ! pFnXboxJump )
		pFnXboxJump = (UFunction*) UObject::GObjObjects()->Data[ 60951 ];

	USGS_PlayerInput_execXboxJump_Parms XboxJump_Parms;

	this->ProcessEvent ( pFnXboxJump, &XboxJump_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.DeactivateSkill
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::DeactivateSkill ( )
{
	static UFunction* pFnDeactivateSkill = NULL;

	if ( ! pFnDeactivateSkill )
		pFnDeactivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60950 ];

	USGS_PlayerInput_execDeactivateSkill_Parms DeactivateSkill_Parms;

	this->ProcessEvent ( pFnDeactivateSkill, &DeactivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.SGSRemoveBind
// [0x00C20202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   BindName                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void USGS_PlayerInput::SGSRemoveBind ( struct FString Command, struct FName* BindName )
{
	static UFunction* pFnSGSRemoveBind = NULL;

	if ( ! pFnSGSRemoveBind )
		pFnSGSRemoveBind = (UFunction*) UObject::GObjObjects()->Data[ 60945 ];

	USGS_PlayerInput_execSGSRemoveBind_Parms SGSRemoveBind_Parms;
	memcpy ( &SGSRemoveBind_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnSGSRemoveBind, &SGSRemoveBind_Parms, NULL );

	if ( BindName )
		memcpy ( BindName, &SGSRemoveBind_Parms.BindName, 0x8 );
};

// Function SGSOrion.SGS_PlayerInput.SGSSetButton
// [0x00C20202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   BindName                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void USGS_PlayerInput::SGSSetButton ( struct FString Command, struct FName* BindName )
{
	static UFunction* pFnSGSSetButton = NULL;

	if ( ! pFnSGSSetButton )
		pFnSGSSetButton = (UFunction*) UObject::GObjObjects()->Data[ 60940 ];

	USGS_PlayerInput_execSGSSetButton_Parms SGSSetButton_Parms;
	memcpy ( &SGSSetButton_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnSGSSetButton, &SGSSetButton_Parms, NULL );

	if ( BindName )
		memcpy ( BindName, &SGSSetButton_Parms.BindName, 0x8 );
};

// Function SGSOrion.SGS_PlayerInput.SGSSetBind
// [0x00C20202] ( FUNC_Exec )
// Parameters infos:
// struct FString                 Command                        ( CPF_Parm | CPF_NeedCtorLink )
// struct FName                   BindName                       ( CPF_Const | CPF_Parm | CPF_OutParm )

void USGS_PlayerInput::SGSSetBind ( struct FString Command, struct FName* BindName )
{
	static UFunction* pFnSGSSetBind = NULL;

	if ( ! pFnSGSSetBind )
		pFnSGSSetBind = (UFunction*) UObject::GObjObjects()->Data[ 60935 ];

	USGS_PlayerInput_execSGSSetBind_Parms SGSSetBind_Parms;
	memcpy ( &SGSSetBind_Parms.Command, &Command, 0xC );

	this->ProcessEvent ( pFnSGSSetBind, &SGSSetBind_Parms, NULL );

	if ( BindName )
		memcpy ( BindName, &SGSSetBind_Parms.BindName, 0x8 );
};

// Function SGSOrion.SGS_PlayerInput.ActivateSkill
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::ActivateSkill ( )
{
	static UFunction* pFnActivateSkill = NULL;

	if ( ! pFnActivateSkill )
		pFnActivateSkill = (UFunction*) UObject::GObjObjects()->Data[ 60933 ];

	USGS_PlayerInput_execActivateSkill_Parms ActivateSkill_Parms;

	this->ProcessEvent ( pFnActivateSkill, &ActivateSkill_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.WeaponReload
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::WeaponReload ( )
{
	static UFunction* pFnWeaponReload = NULL;

	if ( ! pFnWeaponReload )
		pFnWeaponReload = (UFunction*) UObject::GObjObjects()->Data[ 60932 ];

	USGS_PlayerInput_execWeaponReload_Parms WeaponReload_Parms;

	this->ProcessEvent ( pFnWeaponReload, &WeaponReload_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StopRunning
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::StopRunning ( )
{
	static UFunction* pFnStopRunning = NULL;

	if ( ! pFnStopRunning )
		pFnStopRunning = (UFunction*) UObject::GObjObjects()->Data[ 60931 ];

	USGS_PlayerInput_execStopRunning_Parms StopRunning_Parms;

	this->ProcessEvent ( pFnStopRunning, &StopRunning_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.Run
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::Run ( )
{
	static UFunction* pFnRun = NULL;

	if ( ! pFnRun )
		pFnRun = (UFunction*) UObject::GObjObjects()->Data[ 60930 ];

	USGS_PlayerInput_execRun_Parms Run_Parms;

	this->ProcessEvent ( pFnRun, &Run_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxStopRunning
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxStopRunning ( )
{
	static UFunction* pFnXBoxStopRunning = NULL;

	if ( ! pFnXBoxStopRunning )
		pFnXBoxStopRunning = (UFunction*) UObject::GObjObjects()->Data[ 60929 ];

	USGS_PlayerInput_execXBoxStopRunning_Parms XBoxStopRunning_Parms;

	this->ProcessEvent ( pFnXBoxStopRunning, &XBoxStopRunning_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.XBoxRun
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::XBoxRun ( )
{
	static UFunction* pFnXBoxRun = NULL;

	if ( ! pFnXBoxRun )
		pFnXBoxRun = (UFunction*) UObject::GObjObjects()->Data[ 60928 ];

	USGS_PlayerInput_execXBoxRun_Parms XBoxRun_Parms;

	this->ProcessEvent ( pFnXBoxRun, &XBoxRun_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.StopPTT
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::StopPTT ( )
{
	static UFunction* pFnStopPTT = NULL;

	if ( ! pFnStopPTT )
		pFnStopPTT = (UFunction*) UObject::GObjObjects()->Data[ 60927 ];

	USGS_PlayerInput_execStopPTT_Parms StopPTT_Parms;

	this->ProcessEvent ( pFnStopPTT, &StopPTT_Parms, NULL );
};

// Function SGSOrion.SGS_PlayerInput.PTT
// [0x00020302] ( FUNC_Exec )
// Parameters infos:

void USGS_PlayerInput::PTT ( )
{
	static UFunction* pFnPTT = NULL;

	if ( ! pFnPTT )
		pFnPTT = (UFunction*) UObject::GObjObjects()->Data[ 60926 ];

	USGS_PlayerInput_execPTT_Parms PTT_Parms;

	this->ProcessEvent ( pFnPTT, &PTT_Parms, NULL );
};

// Function SGSOrion.SGS_CTFBase_Blue.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_CTFBase_Blue::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54240 ];

	ASGS_CTFBase_Blue_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Blue.Score
// [0x00020002] 
// Parameters infos:

void ASGS_CTFFlag_Blue::Score ( )
{
	static UFunction* pFnScore = NULL;

	if ( ! pFnScore )
		pFnScore = (UFunction*) UObject::GObjObjects()->Data[ 54563 ];

	ASGS_CTFFlag_Blue_execScore_Parms Score_Parms;

	this->ProcessEvent ( pFnScore, &Score_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Blue.Drop
// [0x00024002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void ASGS_CTFFlag_Blue::Drop ( class AController* Killer )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 54561 ];

	ASGS_CTFFlag_Blue_execDrop_Parms Drop_Parms;
	Drop_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Blue.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ASGS_CTFFlag_Blue::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 54559 ];

	ASGS_CTFFlag_Blue_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Blue.LogDropped
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ASGS_CTFFlag_Blue::LogDropped ( class AController* EventInstigator )
{
	static UFunction* pFnLogDropped = NULL;

	if ( ! pFnLogDropped )
		pFnLogDropped = (UFunction*) UObject::GObjObjects()->Data[ 54556 ];

	ASGS_CTFFlag_Blue_execLogDropped_Parms LogDropped_Parms;
	LogDropped_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogDropped, &LogDropped_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Blue.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_CTFFlag_Blue::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 54554 ];

	ASGS_CTFFlag_Blue_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_CTFMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_CTFMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 54726 ];

	USGS_CTFMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_CTFMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_CTFMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 54719 ];

	USGS_CTFMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_CTFMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_CTFMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 54712 ];

	USGS_CTFMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_CTFMessage.ShouldBeRemoved
// [0x00022002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTQueuedAnnouncement*   MyAnnouncement                 ( CPF_Parm )
// class UClass*                  NewAnnouncementClass           ( CPF_Parm )
// int                            NewMessageIndex                ( CPF_Parm )

bool USGS_CTFMessage::ShouldBeRemoved ( class AUTQueuedAnnouncement* MyAnnouncement, class UClass* NewAnnouncementClass, int NewMessageIndex )
{
	static UFunction* pFnShouldBeRemoved = NULL;

	if ( ! pFnShouldBeRemoved )
		pFnShouldBeRemoved = (UFunction*) UObject::GObjObjects()->Data[ 54705 ];

	USGS_CTFMessage_execShouldBeRemoved_Parms ShouldBeRemoved_Parms;
	ShouldBeRemoved_Parms.MyAnnouncement = MyAnnouncement;
	ShouldBeRemoved_Parms.NewAnnouncementClass = NewAnnouncementClass;
	ShouldBeRemoved_Parms.NewMessageIndex = NewMessageIndex;

	this->ProcessEvent ( pFnShouldBeRemoved, &ShouldBeRemoved_Parms, NULL );

	return ShouldBeRemoved_Parms.ReturnValue;
};

// Function SGSOrion.SGS_CTFBase_Red.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_CTFBase_Red::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 54260 ];

	ASGS_CTFBase_Red_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Red.Score
// [0x00020002] 
// Parameters infos:

void ASGS_CTFFlag_Red::Score ( )
{
	static UFunction* pFnScore = NULL;

	if ( ! pFnScore )
		pFnScore = (UFunction*) UObject::GObjObjects()->Data[ 54613 ];

	ASGS_CTFFlag_Red_execScore_Parms Score_Parms;

	this->ProcessEvent ( pFnScore, &Score_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Red.Drop
// [0x00024002] 
// Parameters infos:
// class AController*             Killer                         ( CPF_OptionalParm | CPF_Parm )

void ASGS_CTFFlag_Red::Drop ( class AController* Killer )
{
	static UFunction* pFnDrop = NULL;

	if ( ! pFnDrop )
		pFnDrop = (UFunction*) UObject::GObjObjects()->Data[ 54611 ];

	ASGS_CTFFlag_Red_execDrop_Parms Drop_Parms;
	Drop_Parms.Killer = Killer;

	this->ProcessEvent ( pFnDrop, &Drop_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Red.SetHolder
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ASGS_CTFFlag_Red::SetHolder ( class AController* C )
{
	static UFunction* pFnSetHolder = NULL;

	if ( ! pFnSetHolder )
		pFnSetHolder = (UFunction*) UObject::GObjObjects()->Data[ 54609 ];

	ASGS_CTFFlag_Red_execSetHolder_Parms SetHolder_Parms;
	SetHolder_Parms.C = C;

	this->ProcessEvent ( pFnSetHolder, &SetHolder_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Red.LogDropped
// [0x00020002] 
// Parameters infos:
// class AController*             EventInstigator                ( CPF_Parm )

void ASGS_CTFFlag_Red::LogDropped ( class AController* EventInstigator )
{
	static UFunction* pFnLogDropped = NULL;

	if ( ! pFnLogDropped )
		pFnLogDropped = (UFunction*) UObject::GObjObjects()->Data[ 54607 ];

	ASGS_CTFFlag_Red_execLogDropped_Parms LogDropped_Parms;
	LogDropped_Parms.EventInstigator = EventInstigator;

	this->ProcessEvent ( pFnLogDropped, &LogDropped_Parms, NULL );
};

// Function SGSOrion.SGS_CTFFlag_Red.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_CTFFlag_Red::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 54605 ];

	ASGS_CTFFlag_Red_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_LastSecondMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_LastSecondMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59261 ];

	USGS_LastSecondMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_LastSecondMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_LastSecondMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59256 ];

	USGS_LastSecondMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_TeamScoreMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_TeamScoreMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 62202 ];

	USGS_TeamScoreMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_PasswordDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 58223 ];

	USGS_GFxFrontEnd_PasswordDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.ClearPasswordRenderer
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd_PasswordDialog::ClearPasswordRenderer ( )
{
	static UFunction* pFnClearPasswordRenderer = NULL;

	if ( ! pFnClearPasswordRenderer )
		pFnClearPasswordRenderer = (UFunction*) UObject::GObjObjects()->Data[ 58215 ];

	USGS_GFxFrontEnd_PasswordDialog_execClearPasswordRenderer_Parms ClearPasswordRenderer_Parms;

	this->ProcessEvent ( pFnClearPasswordRenderer, &ClearPasswordRenderer_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.GetPassword
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_PasswordDialog::GetPassword ( )
{
	static UFunction* pFnGetPassword = NULL;

	if ( ! pFnGetPassword )
		pFnGetPassword = (UFunction*) UObject::GObjObjects()->Data[ 55051 ];

	USGS_GFxFrontEnd_PasswordDialog_execGetPassword_Parms GetPassword_Parms;

	this->ProcessEvent ( pFnGetPassword, &GetPassword_Parms, NULL );

	return GetPassword_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.SetOKButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_PasswordDialog::SetOKButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetOKButtonListener = NULL;

	if ( ! pFnSetOKButtonListener )
		pFnSetOKButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 58221 ];

	USGS_GFxFrontEnd_PasswordDialog_execSetOKButtonListener_Parms SetOKButtonListener_Parms;
	memcpy ( &SetOKButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetOKButtonListener, &SetOKButtonListener_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.SetBackButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_PasswordDialog::SetBackButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetBackButtonListener = NULL;

	if ( ! pFnSetBackButtonListener )
		pFnSetBackButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 58219 ];

	USGS_GFxFrontEnd_PasswordDialog_execSetBackButtonListener_Parms SetBackButtonListener_Parms;
	memcpy ( &SetBackButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetBackButtonListener, &SetBackButtonListener_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnableComponents              ( CPF_Parm )

void USGS_GFxFrontEnd_PasswordDialog::DisableSubComponents ( unsigned long bEnableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 58217 ];

	USGS_GFxFrontEnd_PasswordDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bEnableComponents = bEnableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_PasswordDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 58216 ];

	USGS_GFxFrontEnd_PasswordDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_PasswordDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_PasswordDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 58213 ];

	USGS_GFxFrontEnd_PasswordDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_Dialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57371 ];

	USGS_GFxFrontEnd_Dialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Dialog::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 57369 ];

	USGS_GFxFrontEnd_Dialog_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.SetBackButton_OnPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         EventListener                  ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Dialog::SetBackButton_OnPress ( struct FScriptDelegate EventListener )
{
	static UFunction* pFnSetBackButton_OnPress = NULL;

	if ( ! pFnSetBackButton_OnPress )
		pFnSetBackButton_OnPress = (UFunction*) UObject::GObjObjects()->Data[ 57367 ];

	USGS_GFxFrontEnd_Dialog_execSetBackButton_OnPress_Parms SetBackButton_OnPress_Parms;
	memcpy ( &SetBackButton_OnPress_Parms.EventListener, &EventListener, 0xC );

	this->ProcessEvent ( pFnSetBackButton_OnPress, &SetBackButton_OnPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.SetBackButton
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              InBackButton                   ( CPF_Parm )

void USGS_GFxFrontEnd_Dialog::SetBackButton ( class UGFxObject* InBackButton )
{
	static UFunction* pFnSetBackButton = NULL;

	if ( ! pFnSetBackButton )
		pFnSetBackButton = (UFunction*) UObject::GObjObjects()->Data[ 57365 ];

	USGS_GFxFrontEnd_Dialog_execSetBackButton_Parms SetBackButton_Parms;
	SetBackButton_Parms.InBackButton = InBackButton;

	this->ProcessEvent ( pFnSetBackButton, &SetBackButton_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_Dialog::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57364 ];

	USGS_GFxFrontEnd_Dialog_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.PlayOpenAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_Dialog::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57363 ];

	USGS_GFxFrontEnd_Dialog_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_Dialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57361 ];

	USGS_GFxFrontEnd_Dialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.DisableSubComponents
// [0x00020000] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_Dialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57359 ];

	USGS_GFxFrontEnd_Dialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.OnViewClosed
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_Dialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57358 ];

	USGS_GFxFrontEnd_Dialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Dialog.AcceptDelegate
// [0x00120000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Dialog::AcceptDelegate ( struct FEventData ev )
{
	static UFunction* pFnAcceptDelegate = NULL;

	if ( ! pFnAcceptDelegate )
		pFnAcceptDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57351 ];

	USGS_GFxFrontEnd_Dialog_execAcceptDelegate_Parms AcceptDelegate_Parms;
	memcpy ( &AcceptDelegate_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnAcceptDelegate, &AcceptDelegate_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_View::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57344 ];

	USGS_GFxFrontEnd_View_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_View.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_View::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 57343 ];

	USGS_GFxFrontEnd_View_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.MoveBackImpl
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_View::MoveBackImpl ( )
{
	static UFunction* pFnMoveBackImpl = NULL;

	if ( ! pFnMoveBackImpl )
		pFnMoveBackImpl = (UFunction*) UObject::GObjObjects()->Data[ 57342 ];

	USGS_GFxFrontEnd_View_execMoveBackImpl_Parms MoveBackImpl_Parms;

	this->ProcessEvent ( pFnMoveBackImpl, &MoveBackImpl_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_View::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 57340 ];

	USGS_GFxFrontEnd_View_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_View::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57339 ];

	USGS_GFxFrontEnd_View_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.PlayOpenAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_View::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57338 ];

	USGS_GFxFrontEnd_View_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.DisableSubComponents
// [0x00020000] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_View::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57336 ];

	USGS_GFxFrontEnd_View_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_View::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57335 ];

	USGS_GFxFrontEnd_View_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.OnViewActivated
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_View::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 57334 ];

	USGS_GFxFrontEnd_View_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_View::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57332 ];

	USGS_GFxFrontEnd_View_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_View.OnViewLoaded
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_View::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57331 ];

	USGS_GFxFrontEnd_View_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnFilterButtonInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GFxFrontEnd_JoinGame::OnFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnOnFilterButtonInput = NULL;

	if ( ! pFnOnFilterButtonInput )
		pFnOnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 57194 ];

	USGS_GFxFrontEnd_JoinGame_execOnFilterButtonInput_Parms OnFilterButtonInput_Parms;
	OnFilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &OnFilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	OnFilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnOnFilterButtonInput, &OnFilterButtonInput_Parms, NULL );

	return OnFilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_JoinGame::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57935 ];

	USGS_GFxFrontEnd_JoinGame_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.NotifyGameTypeChanged
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::NotifyGameTypeChanged ( )
{
	static UFunction* pFnNotifyGameTypeChanged = NULL;

	if ( ! pFnNotifyGameTypeChanged )
		pFnNotifyGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 57934 ];

	USGS_GFxFrontEnd_JoinGame_execNotifyGameTypeChanged_Parms NotifyGameTypeChanged_Parms;

	this->ProcessEvent ( pFnNotifyGameTypeChanged, &NotifyGameTypeChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnCancelSearchComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnCancelSearchComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnCancelSearchComplete = NULL;

	if ( ! pFnOnCancelSearchComplete )
		pFnOnCancelSearchComplete = (UFunction*) UObject::GObjObjects()->Data[ 57930 ];

	USGS_GFxFrontEnd_JoinGame_execOnCancelSearchComplete_Parms OnCancelSearchComplete_Parms;
	OnCancelSearchComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnCancelSearchComplete, &OnCancelSearchComplete_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.SetRefreshing
// [0x00020002] 
// Parameters infos:
// unsigned long                  IsRefreshing                   ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::SetRefreshing ( unsigned long IsRefreshing )
{
	static UFunction* pFnSetRefreshing = NULL;

	if ( ! pFnSetRefreshing )
		pFnSetRefreshing = (UFunction*) UObject::GObjObjects()->Data[ 57927 ];

	USGS_GFxFrontEnd_JoinGame_execSetRefreshing_Parms SetRefreshing_Parms;
	SetRefreshing_Parms.IsRefreshing = IsRefreshing;

	this->ProcessEvent ( pFnSetRefreshing, &SetRefreshing_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.CancelQuery
// [0x00024002] 
// Parameters infos:
// unsigned char                  DesiredCancelAction            ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::CancelQuery ( unsigned char DesiredCancelAction )
{
	static UFunction* pFnCancelQuery = NULL;

	if ( ! pFnCancelQuery )
		pFnCancelQuery = (UFunction*) UObject::GObjObjects()->Data[ 57925 ];

	USGS_GFxFrontEnd_JoinGame_execCancelQuery_Parms CancelQuery_Parms;
	CancelQuery_Parms.DesiredCancelAction = DesiredCancelAction;

	this->ProcessEvent ( pFnCancelQuery, &CancelQuery_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.AllowJoinServer
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_GFxFrontEnd_JoinGame::AllowJoinServer ( )
{
	static UFunction* pFnAllowJoinServer = NULL;

	if ( ! pFnAllowJoinServer )
		pFnAllowJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 57922 ];

	USGS_GFxFrontEnd_JoinGame_execAllowJoinServer_Parms AllowJoinServer_Parms;

	this->ProcessEvent ( pFnAllowJoinServer, &AllowJoinServer_Parms, NULL );

	return AllowJoinServer_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnJoinGameComplete
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bSuccessful                    ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnJoinGameComplete ( struct FName SessionName, unsigned long bSuccessful )
{
	static UFunction* pFnOnJoinGameComplete = NULL;

	if ( ! pFnOnJoinGameComplete )
		pFnOnJoinGameComplete = (UFunction*) UObject::GObjObjects()->Data[ 57916 ];

	USGS_GFxFrontEnd_JoinGame_execOnJoinGameComplete_Parms OnJoinGameComplete_Parms;
	memcpy ( &OnJoinGameComplete_Parms.SessionName, &SessionName, 0x8 );
	OnJoinGameComplete_Parms.bSuccessful = bSuccessful;

	this->ProcessEvent ( pFnOnJoinGameComplete, &OnJoinGameComplete_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.ProcessJoin
// [0x00840003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::ProcessJoin ( )
{
	static UFunction* pFnProcessJoin = NULL;

	if ( ! pFnProcessJoin )
		pFnProcessJoin = (UFunction*) UObject::GObjObjects()->Data[ 57848 ];

	USGS_GFxFrontEnd_JoinGame_execProcessJoin_Parms ProcessJoin_Parms;

	this->ProcessEvent ( pFnProcessJoin, &ProcessJoin_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.JoinServer
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::JoinServer ( )
{
	static UFunction* pFnJoinServer = NULL;

	if ( ! pFnJoinServer )
		pFnJoinServer = (UFunction*) UObject::GObjObjects()->Data[ 57910 ];

	USGS_GFxFrontEnd_JoinGame_execJoinServer_Parms JoinServer_Parms;

	this->ProcessEvent ( pFnJoinServer, &JoinServer_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.JoinServerClikListener
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::JoinServerClikListener ( struct FEventData ev )
{
	static UFunction* pFnJoinServerClikListener = NULL;

	if ( ! pFnJoinServerClikListener )
		pFnJoinServerClikListener = (UFunction*) UObject::GObjObjects()->Data[ 57908 ];

	USGS_GFxFrontEnd_JoinGame_execJoinServerClikListener_Parms JoinServerClikListener_Parms;
	memcpy ( &JoinServerClikListener_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnJoinServerClikListener, &JoinServerClikListener_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.SpectateServer
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::SpectateServer ( struct FEventData ev )
{
	static UFunction* pFnSpectateServer = NULL;

	if ( ! pFnSpectateServer )
		pFnSpectateServer = (UFunction*) UObject::GObjObjects()->Data[ 57906 ];

	USGS_GFxFrontEnd_JoinGame_execSpectateServer_Parms SpectateServer_Parms;
	memcpy ( &SpectateServer_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSpectateServer, &SpectateServer_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnServerListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnServerListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerListItemPress = NULL;

	if ( ! pFnOnServerListItemPress )
		pFnOnServerListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 57899 ];

	USGS_GFxFrontEnd_JoinGame_execOnServerListItemPress_Parms OnServerListItemPress_Parms;
	memcpy ( &OnServerListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerListItemPress, &OnServerListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnPingHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnPingHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPingHeaderPress = NULL;

	if ( ! pFnOnPingHeaderPress )
		pFnOnPingHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 57897 ];

	USGS_GFxFrontEnd_JoinGame_execOnPingHeaderPress_Parms OnPingHeaderPress_Parms;
	memcpy ( &OnPingHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPingHeaderPress, &OnPingHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnPlayersHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnPlayersHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnPlayersHeaderPress = NULL;

	if ( ! pFnOnPlayersHeaderPress )
		pFnOnPlayersHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 57895 ];

	USGS_GFxFrontEnd_JoinGame_execOnPlayersHeaderPress_Parms OnPlayersHeaderPress_Parms;
	memcpy ( &OnPlayersHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPlayersHeaderPress, &OnPlayersHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnMapHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnMapHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnMapHeaderPress = NULL;

	if ( ! pFnOnMapHeaderPress )
		pFnOnMapHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 57893 ];

	USGS_GFxFrontEnd_JoinGame_execOnMapHeaderPress_Parms OnMapHeaderPress_Parms;
	memcpy ( &OnMapHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnMapHeaderPress, &OnMapHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnServerHeaderPress
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnServerHeaderPress ( struct FEventData ev )
{
	static UFunction* pFnOnServerHeaderPress = NULL;

	if ( ! pFnOnServerHeaderPress )
		pFnOnServerHeaderPress = (UFunction*) UObject::GObjObjects()->Data[ 57891 ];

	USGS_GFxFrontEnd_JoinGame_execOnServerHeaderPress_Parms OnServerHeaderPress_Parms;
	memcpy ( &OnServerHeaderPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnServerHeaderPress, &OnServerHeaderPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.UpdateListDataProvider
// [0x00820002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 57880 ];

	USGS_GFxFrontEnd_JoinGame_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.ServerFilterChangedGameType
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::ServerFilterChangedGameType ( )
{
	static UFunction* pFnServerFilterChangedGameType = NULL;

	if ( ! pFnServerFilterChangedGameType )
		pFnServerFilterChangedGameType = (UFunction*) UObject::GObjObjects()->Data[ 57879 ];

	USGS_GFxFrontEnd_JoinGame_execServerFilterChangedGameType_Parms ServerFilterChangedGameType_Parms;

	this->ProcessEvent ( pFnServerFilterChangedGameType, &ServerFilterChangedGameType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnFilterButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnFilterButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnFilterButtonPress = NULL;

	if ( ! pFnOnFilterButtonPress )
		pFnOnFilterButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 57876 ];

	USGS_GFxFrontEnd_JoinGame_execOnFilterButtonPress_Parms OnFilterButtonPress_Parms;
	memcpy ( &OnFilterButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFilterButtonPress, &OnFilterButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnRefreshButtonPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnRefreshButtonPress ( struct FEventData ev )
{
	static UFunction* pFnOnRefreshButtonPress = NULL;

	if ( ! pFnOnRefreshButtonPress )
		pFnOnRefreshButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 57874 ];

	USGS_GFxFrontEnd_JoinGame_execOnRefreshButtonPress_Parms OnRefreshButtonPress_Parms;
	memcpy ( &OnRefreshButtonPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnRefreshButtonPress, &OnRefreshButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.GetDesiredMatchType
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USGS_GFxFrontEnd_JoinGame::GetDesiredMatchType ( )
{
	static UFunction* pFnGetDesiredMatchType = NULL;

	if ( ! pFnGetDesiredMatchType )
		pFnGetDesiredMatchType = (UFunction*) UObject::GObjObjects()->Data[ 57872 ];

	USGS_GFxFrontEnd_JoinGame_execGetDesiredMatchType_Parms GetDesiredMatchType_Parms;

	this->ProcessEvent ( pFnGetDesiredMatchType, &GetDesiredMatchType_Parms, NULL );

	return GetDesiredMatchType_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnFindOnlineGamesComplete
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnFindOnlineGamesComplete ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesComplete = NULL;

	if ( ! pFnOnFindOnlineGamesComplete )
		pFnOnFindOnlineGamesComplete = (UFunction*) UObject::GObjObjects()->Data[ 57869 ];

	USGS_GFxFrontEnd_JoinGame_execOnFindOnlineGamesComplete_Parms OnFindOnlineGamesComplete_Parms;
	OnFindOnlineGamesComplete_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesComplete, &OnFindOnlineGamesComplete_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnFindOnlineGamesCompleteDelegate
// [0x00020002] 
// Parameters infos:
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnFindOnlineGamesCompleteDelegate ( unsigned long bWasSuccessful )
{
	static UFunction* pFnOnFindOnlineGamesCompleteDelegate = NULL;

	if ( ! pFnOnFindOnlineGamesCompleteDelegate )
		pFnOnFindOnlineGamesCompleteDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57866 ];

	USGS_GFxFrontEnd_JoinGame_execOnFindOnlineGamesCompleteDelegate_Parms OnFindOnlineGamesCompleteDelegate_Parms;
	OnFindOnlineGamesCompleteDelegate_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnFindOnlineGamesCompleteDelegate, &OnFindOnlineGamesCompleteDelegate_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.SubmitServerListQuery
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::SubmitServerListQuery ( int PlayerIndex )
{
	static UFunction* pFnSubmitServerListQuery = NULL;

	if ( ! pFnSubmitServerListQuery )
		pFnSubmitServerListQuery = (UFunction*) UObject::GObjObjects()->Data[ 57864 ];

	USGS_GFxFrontEnd_JoinGame_execSubmitServerListQuery_Parms SubmitServerListQuery_Parms;
	SubmitServerListQuery_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnSubmitServerListQuery, &SubmitServerListQuery_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.RefreshServerList
// [0x00024002] 
// Parameters infos:
// int                            InPlayerIndex                  ( CPF_Parm )
// int                            MaxResults                     ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::RefreshServerList ( int InPlayerIndex, int MaxResults )
{
	static UFunction* pFnRefreshServerList = NULL;

	if ( ! pFnRefreshServerList )
		pFnRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 57859 ];

	USGS_GFxFrontEnd_JoinGame_execRefreshServerList_Parms RefreshServerList_Parms;
	RefreshServerList_Parms.InPlayerIndex = InPlayerIndex;
	RefreshServerList_Parms.MaxResults = MaxResults;

	this->ProcessEvent ( pFnRefreshServerList, &RefreshServerList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.BuildJoinURL
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 ResolvedConnectionURL          ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_JoinGame::BuildJoinURL ( struct FString ResolvedConnectionURL )
{
	static UFunction* pFnBuildJoinURL = NULL;

	if ( ! pFnBuildJoinURL )
		pFnBuildJoinURL = (UFunction*) UObject::GObjObjects()->Data[ 57854 ];

	USGS_GFxFrontEnd_JoinGame_execBuildJoinURL_Parms BuildJoinURL_Parms;
	memcpy ( &BuildJoinURL_Parms.ResolvedConnectionURL, &ResolvedConnectionURL, 0xC );

	this->ProcessEvent ( pFnBuildJoinURL, &BuildJoinURL_Parms, NULL );

	return BuildJoinURL_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.UpdateServerCount
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::UpdateServerCount ( )
{
	static UFunction* pFnUpdateServerCount = NULL;

	if ( ! pFnUpdateServerCount )
		pFnUpdateServerCount = (UFunction*) UObject::GObjObjects()->Data[ 57849 ];

	USGS_GFxFrontEnd_JoinGame_execUpdateServerCount_Parms UpdateServerCount_Parms;

	this->ProcessEvent ( pFnUpdateServerCount, &UpdateServerCount_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnPasswordDialog_OK
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinGame::OnPasswordDialog_OK ( struct FEventData ev )
{
	static UFunction* pFnOnPasswordDialog_OK = NULL;

	if ( ! pFnOnPasswordDialog_OK )
		pFnOnPasswordDialog_OK = (UFunction*) UObject::GObjObjects()->Data[ 57844 ];

	USGS_GFxFrontEnd_JoinGame_execOnPasswordDialog_OK_Parms OnPasswordDialog_OK_Parms;
	memcpy ( &OnPasswordDialog_OK_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnPasswordDialog_OK, &OnPasswordDialog_OK_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.StripInvalidPasswordCharacters
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 PasswordString                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InvalidChars                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_JoinGame::StripInvalidPasswordCharacters ( struct FString PasswordString, struct FString InvalidChars )
{
	static UFunction* pFnStripInvalidPasswordCharacters = NULL;

	if ( ! pFnStripInvalidPasswordCharacters )
		pFnStripInvalidPasswordCharacters = (UFunction*) UObject::GObjObjects()->Data[ 57839 ];

	USGS_GFxFrontEnd_JoinGame_execStripInvalidPasswordCharacters_Parms StripInvalidPasswordCharacters_Parms;
	memcpy ( &StripInvalidPasswordCharacters_Parms.PasswordString, &PasswordString, 0xC );
	memcpy ( &StripInvalidPasswordCharacters_Parms.InvalidChars, &InvalidChars, 0xC );

	this->ProcessEvent ( pFnStripInvalidPasswordCharacters, &StripInvalidPasswordCharacters_Parms, NULL );

	return StripInvalidPasswordCharacters_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.PromptForServerPassword
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::PromptForServerPassword ( )
{
	static UFunction* pFnPromptForServerPassword = NULL;

	if ( ! pFnPromptForServerPassword )
		pFnPromptForServerPassword = (UFunction*) UObject::GObjObjects()->Data[ 57837 ];

	USGS_GFxFrontEnd_JoinGame_execPromptForServerPassword_Parms PromptForServerPassword_Parms;

	this->ProcessEvent ( pFnPromptForServerPassword, &PromptForServerPassword_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.UpdateButtonStates
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::UpdateButtonStates ( )
{
	static UFunction* pFnUpdateButtonStates = NULL;

	if ( ! pFnUpdateButtonStates )
		pFnUpdateButtonStates = (UFunction*) UObject::GObjObjects()->Data[ 57835 ];

	USGS_GFxFrontEnd_JoinGame_execUpdateButtonStates_Parms UpdateButtonStates_Parms;

	this->ProcessEvent ( pFnUpdateButtonStates, &UpdateButtonStates_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.UseLANMode
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::UseLANMode ( )
{
	static UFunction* pFnUseLANMode = NULL;

	if ( ! pFnUseLANMode )
		pFnUseLANMode = (UFunction*) UObject::GObjObjects()->Data[ 57834 ];

	USGS_GFxFrontEnd_JoinGame_execUseLANMode_Parms UseLANMode_Parms;

	this->ProcessEvent ( pFnUseLANMode, &UseLANMode_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.ConditionalRefreshServerList
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::ConditionalRefreshServerList ( int PlayerIndex )
{
	static UFunction* pFnConditionalRefreshServerList = NULL;

	if ( ! pFnConditionalRefreshServerList )
		pFnConditionalRefreshServerList = (UFunction*) UObject::GObjObjects()->Data[ 57830 ];

	USGS_GFxFrontEnd_JoinGame_execConditionalRefreshServerList_Parms ConditionalRefreshServerList_Parms;
	ConditionalRefreshServerList_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnConditionalRefreshServerList, &ConditionalRefreshServerList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnGameTypeChanged
// [0x00024002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnGameTypeChanged ( int PlayerIndex )
{
	static UFunction* pFnOnGameTypeChanged = NULL;

	if ( ! pFnOnGameTypeChanged )
		pFnOnGameTypeChanged = (UFunction*) UObject::GObjObjects()->Data[ 57821 ];

	USGS_GFxFrontEnd_JoinGame_execOnGameTypeChanged_Parms OnGameTypeChanged_Parms;
	OnGameTypeChanged_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnOnGameTypeChanged, &OnGameTypeChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.GetGameTypeSearchProviderIndex
// [0x00024002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 GameClassName                  ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

int USGS_GFxFrontEnd_JoinGame::GetGameTypeSearchProviderIndex ( struct FString GameClassName )
{
	static UFunction* pFnGetGameTypeSearchProviderIndex = NULL;

	if ( ! pFnGetGameTypeSearchProviderIndex )
		pFnGetGameTypeSearchProviderIndex = (UFunction*) UObject::GObjObjects()->Data[ 57811 ];

	USGS_GFxFrontEnd_JoinGame_execGetGameTypeSearchProviderIndex_Parms GetGameTypeSearchProviderIndex_Parms;
	memcpy ( &GetGameTypeSearchProviderIndex_Parms.GameClassName, &GameClassName, 0xC );

	this->ProcessEvent ( pFnGetGameTypeSearchProviderIndex, &GetGameTypeSearchProviderIndex_Parms, NULL );

	return GetGameTypeSearchProviderIndex_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.UpdateFilterButton
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::UpdateFilterButton ( )
{
	static UFunction* pFnUpdateFilterButton = NULL;

	if ( ! pFnUpdateFilterButton )
		pFnUpdateFilterButton = (UFunction*) UObject::GObjObjects()->Data[ 57782 ];

	USGS_GFxFrontEnd_JoinGame_execUpdateFilterButton_Parms UpdateFilterButton_Parms;

	this->ProcessEvent ( pFnUpdateFilterButton, &UpdateFilterButton_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.Cleanup
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::Cleanup ( )
{
	static UFunction* pFnCleanup = NULL;

	if ( ! pFnCleanup )
		pFnCleanup = (UFunction*) UObject::GObjObjects()->Data[ 57802 ];

	USGS_GFxFrontEnd_JoinGame_execCleanup_Parms Cleanup_Parms;

	this->ProcessEvent ( pFnCleanup, &Cleanup_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.ForceLANOption
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::ForceLANOption ( int PlayerIndex )
{
	static UFunction* pFnForceLANOption = NULL;

	if ( ! pFnForceLANOption )
		pFnForceLANOption = (UFunction*) UObject::GObjObjects()->Data[ 57793 ];

	USGS_GFxFrontEnd_JoinGame_execForceLANOption_Parms ForceLANOption_Parms;
	ForceLANOption_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnForceLANOption, &ForceLANOption_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.ValidateServerType
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 57790 ];

	USGS_GFxFrontEnd_JoinGame_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57787 ];

	USGS_GFxFrontEnd_JoinGame_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57786 ];

	USGS_GFxFrontEnd_JoinGame_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_JoinGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57783 ];

	USGS_GFxFrontEnd_JoinGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 57773 ];

	USGS_GFxFrontEnd_JoinGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinGame.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_JoinGame::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57766 ];

	USGS_GFxFrontEnd_JoinGame_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Screen.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_Screen::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57478 ];

	USGS_GFxFrontEnd_Screen_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Screen.UpdateHelpButtonImages
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Screen::UpdateHelpButtonImages ( )
{
	static UFunction* pFnUpdateHelpButtonImages = NULL;

	if ( ! pFnUpdateHelpButtonImages )
		pFnUpdateHelpButtonImages = (UFunction*) UObject::GObjObjects()->Data[ 57477 ];

	USGS_GFxFrontEnd_Screen_execUpdateHelpButtonImages_Parms UpdateHelpButtonImages_Parms;

	this->ProcessEvent ( pFnUpdateHelpButtonImages, &UpdateHelpButtonImages_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Screen.FocusIn_BackButton
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Screen::FocusIn_BackButton ( struct FEventData ev )
{
	static UFunction* pFnFocusIn_BackButton = NULL;

	if ( ! pFnFocusIn_BackButton )
		pFnFocusIn_BackButton = (UFunction*) UObject::GObjObjects()->Data[ 57475 ];

	USGS_GFxFrontEnd_Screen_execFocusIn_BackButton_Parms FocusIn_BackButton_Parms;
	memcpy ( &FocusIn_BackButton_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnFocusIn_BackButton, &FocusIn_BackButton_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_Mutators::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 58203 ];

	USGS_GFxFrontEnd_Mutators_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.SetConfigList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ConfigList                     ( CPF_Parm )

void USGS_GFxFrontEnd_Mutators::SetConfigList ( class UGFxObject* ConfigList )
{
	static UFunction* pFnSetConfigList = NULL;

	if ( ! pFnSetConfigList )
		pFnSetConfigList = (UFunction*) UObject::GObjObjects()->Data[ 58201 ];

	USGS_GFxFrontEnd_Mutators_execSetConfigList_Parms SetConfigList_Parms;
	SetConfigList_Parms.ConfigList = ConfigList;

	this->ProcessEvent ( pFnSetConfigList, &SetConfigList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void USGS_GFxFrontEnd_Mutators::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 58199 ];

	USGS_GFxFrontEnd_Mutators_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.IsCurrentMutatorConfigurable
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool USGS_GFxFrontEnd_Mutators::IsCurrentMutatorConfigurable ( )
{
	static UFunction* pFnIsCurrentMutatorConfigurable = NULL;

	if ( ! pFnIsCurrentMutatorConfigurable )
		pFnIsCurrentMutatorConfigurable = (UFunction*) UObject::GObjObjects()->Data[ 58197 ];

	USGS_GFxFrontEnd_Mutators_execIsCurrentMutatorConfigurable_Parms IsCurrentMutatorConfigurable_Parms;

	this->ProcessEvent ( pFnIsCurrentMutatorConfigurable, &IsCurrentMutatorConfigurable_Parms, NULL );

	return IsCurrentMutatorConfigurable_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.ApplyGameModeFilter
// [0x00022002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::ApplyGameModeFilter ( )
{
	static UFunction* pFnApplyGameModeFilter = NULL;

	if ( ! pFnApplyGameModeFilter )
		pFnApplyGameModeFilter = (UFunction*) UObject::GObjObjects()->Data[ 58189 ];

	USGS_GFxFrontEnd_Mutators_execApplyGameModeFilter_Parms ApplyGameModeFilter_Parms;

	this->ProcessEvent ( pFnApplyGameModeFilter, &ApplyGameModeFilter_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.GetNumEnabledMutators
// [0x00022002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int USGS_GFxFrontEnd_Mutators::GetNumEnabledMutators ( )
{
	static UFunction* pFnGetNumEnabledMutators = NULL;

	if ( ! pFnGetNumEnabledMutators )
		pFnGetNumEnabledMutators = (UFunction*) UObject::GObjObjects()->Data[ 57610 ];

	USGS_GFxFrontEnd_Mutators_execGetNumEnabledMutators_Parms GetNumEnabledMutators_Parms;

	this->ProcessEvent ( pFnGetNumEnabledMutators, &GetNumEnabledMutators_Parms, NULL );

	return GetNumEnabledMutators_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.GetEnabledMutators
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_Mutators::GetEnabledMutators ( )
{
	static UFunction* pFnGetEnabledMutators = NULL;

	if ( ! pFnGetEnabledMutators )
		pFnGetEnabledMutators = (UFunction*) UObject::GObjObjects()->Data[ 55164 ];

	USGS_GFxFrontEnd_Mutators_execGetEnabledMutators_Parms GetEnabledMutators_Parms;

	this->ProcessEvent ( pFnGetEnabledMutators, &GetEnabledMutators_Parms, NULL );

	return GetEnabledMutators_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.AddMutatorAndFilterList
// [0x00020002] 
// Parameters infos:
// int                            NewMutator                     ( CPF_Parm )

void USGS_GFxFrontEnd_Mutators::AddMutatorAndFilterList ( int NewMutator )
{
	static UFunction* pFnAddMutatorAndFilterList = NULL;

	if ( ! pFnAddMutatorAndFilterList )
		pFnAddMutatorAndFilterList = (UFunction*) UObject::GObjObjects()->Data[ 58167 ];

	USGS_GFxFrontEnd_Mutators_execAddMutatorAndFilterList_Parms AddMutatorAndFilterList_Parms;
	AddMutatorAndFilterList_Parms.NewMutator = NewMutator;

	this->ProcessEvent ( pFnAddMutatorAndFilterList, &AddMutatorAndFilterList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.SetMutatorEnabled
// [0x00020002] 
// Parameters infos:
// int                            MutatorId                      ( CPF_Parm )

void USGS_GFxFrontEnd_Mutators::SetMutatorEnabled ( int MutatorId )
{
	static UFunction* pFnSetMutatorEnabled = NULL;

	if ( ! pFnSetMutatorEnabled )
		pFnSetMutatorEnabled = (UFunction*) UObject::GObjObjects()->Data[ 58165 ];

	USGS_GFxFrontEnd_Mutators_execSetMutatorEnabled_Parms SetMutatorEnabled_Parms;
	SetMutatorEnabled_Parms.MutatorId = MutatorId;

	this->ProcessEvent ( pFnSetMutatorEnabled, &SetMutatorEnabled_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.UpdateConfigListDataProvider
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::UpdateConfigListDataProvider ( )
{
	static UFunction* pFnUpdateConfigListDataProvider = NULL;

	if ( ! pFnUpdateConfigListDataProvider )
		pFnUpdateConfigListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58164 ];

	USGS_GFxFrontEnd_Mutators_execUpdateConfigListDataProvider_Parms UpdateConfigListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateConfigListDataProvider, &UpdateConfigListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58155 ];

	USGS_GFxFrontEnd_Mutators_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 58150 ];

	USGS_GFxFrontEnd_Mutators_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Mutators::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 58148 ];

	USGS_GFxFrontEnd_Mutators_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.FindMutatorIndexByClass
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 MutatorClass                   ( CPF_Parm | CPF_NeedCtorLink )

unsigned char USGS_GFxFrontEnd_Mutators::FindMutatorIndexByClass ( struct FString MutatorClass )
{
	static UFunction* pFnFindMutatorIndexByClass = NULL;

	if ( ! pFnFindMutatorIndexByClass )
		pFnFindMutatorIndexByClass = (UFunction*) UObject::GObjObjects()->Data[ 58144 ];

	USGS_GFxFrontEnd_Mutators_execFindMutatorIndexByClass_Parms FindMutatorIndexByClass_Parms;
	memcpy ( &FindMutatorIndexByClass_Parms.MutatorClass, &MutatorClass, 0xC );

	this->ProcessEvent ( pFnFindMutatorIndexByClass, &FindMutatorIndexByClass_Parms, NULL );

	return FindMutatorIndexByClass_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Mutators::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 58139 ];

	USGS_GFxFrontEnd_Mutators_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 58138 ];

	USGS_GFxFrontEnd_Mutators_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_Mutators::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 58136 ];

	USGS_GFxFrontEnd_Mutators_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_Mutators::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 58134 ];

	USGS_GFxFrontEnd_Mutators_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.SortAllMutatorsBasedOnOfficialArray
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::SortAllMutatorsBasedOnOfficialArray ( )
{
	static UFunction* pFnSortAllMutatorsBasedOnOfficialArray = NULL;

	if ( ! pFnSortAllMutatorsBasedOnOfficialArray )
		pFnSortAllMutatorsBasedOnOfficialArray = (UFunction*) UObject::GObjObjects()->Data[ 58123 ];

	USGS_GFxFrontEnd_Mutators_execSortAllMutatorsBasedOnOfficialArray_Parms SortAllMutatorsBasedOnOfficialArray_Parms;

	this->ProcessEvent ( pFnSortAllMutatorsBasedOnOfficialArray, &SortAllMutatorsBasedOnOfficialArray_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 58122 ];

	USGS_GFxFrontEnd_Mutators_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Mutators.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Mutators::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 58121 ];

	USGS_GFxFrontEnd_Mutators_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_JoinDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57758 ];

	USGS_GFxFrontEnd_JoinDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.SetSpectateButtonPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         SpectateButtonListener         ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinDialog::SetSpectateButtonPress ( struct FScriptDelegate SpectateButtonListener )
{
	static UFunction* pFnSetSpectateButtonPress = NULL;

	if ( ! pFnSetSpectateButtonPress )
		pFnSetSpectateButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 57756 ];

	USGS_GFxFrontEnd_JoinDialog_execSetSpectateButtonPress_Parms SetSpectateButtonPress_Parms;
	memcpy ( &SetSpectateButtonPress_Parms.SpectateButtonListener, &SpectateButtonListener, 0xC );

	this->ProcessEvent ( pFnSetSpectateButtonPress, &SetSpectateButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.SetJoinButtonPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         JoinButtonListener             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_JoinDialog::SetJoinButtonPress ( struct FScriptDelegate JoinButtonListener )
{
	static UFunction* pFnSetJoinButtonPress = NULL;

	if ( ! pFnSetJoinButtonPress )
		pFnSetJoinButtonPress = (UFunction*) UObject::GObjObjects()->Data[ 57754 ];

	USGS_GFxFrontEnd_JoinDialog_execSetJoinButtonPress_Parms SetJoinButtonPress_Parms;
	memcpy ( &SetJoinButtonPress_Parms.JoinButtonListener, &JoinButtonListener, 0xC );

	this->ProcessEvent ( pFnSetJoinButtonPress, &SetJoinButtonPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.PopulateServerInfo
// [0x00820002] 
// Parameters infos:
// class UOnlineGameSettings*     GameSettings                   ( CPF_Parm )

void USGS_GFxFrontEnd_JoinDialog::PopulateServerInfo ( class UOnlineGameSettings* GameSettings )
{
	static UFunction* pFnPopulateServerInfo = NULL;

	if ( ! pFnPopulateServerInfo )
		pFnPopulateServerInfo = (UFunction*) UObject::GObjObjects()->Data[ 57734 ];

	USGS_GFxFrontEnd_JoinDialog_execPopulateServerInfo_Parms PopulateServerInfo_Parms;
	PopulateServerInfo_Parms.GameSettings = GameSettings;

	this->ProcessEvent ( pFnPopulateServerInfo, &PopulateServerInfo_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_JoinDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57732 ];

	USGS_GFxFrontEnd_JoinDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_JoinDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_JoinDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57730 ];

	USGS_GFxFrontEnd_JoinDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_DeathMessage.SuperClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_DeathMessage::SuperClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnSuperClientReceive = NULL;

	if ( ! pFnSuperClientReceive )
		pFnSuperClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55422 ];

	USGS_DeathMessage_execSuperClientReceive_Parms SuperClientReceive_Parms;
	SuperClientReceive_Parms.P = P;
	SuperClientReceive_Parms.Switch = Switch;
	SuperClientReceive_Parms.RelatedPRI = RelatedPRI;
	SuperClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	SuperClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnSuperClientReceive, &SuperClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_DeathMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_DeathMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55412 ];

	USGS_DeathMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DeathMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_DeathMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55399 ];

	USGS_DeathMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_KillerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_KillerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55406 ];

	USGS_KillerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MultiKillMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_MultiKillMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 60007 ];

	USGS_MultiKillMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MultiKillMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_MultiKillMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 60002 ];

	USGS_MultiKillMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MultiKillMessage.SuperClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_MultiKillMessage::SuperClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnSuperClientReceive = NULL;

	if ( ! pFnSuperClientReceive )
		pFnSuperClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59995 ];

	USGS_MultiKillMessage_execSuperClientReceive_Parms SuperClientReceive_Parms;
	SuperClientReceive_Parms.P = P;
	SuperClientReceive_Parms.Switch = Switch;
	SuperClientReceive_Parms.RelatedPRI = RelatedPRI;
	SuperClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	SuperClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnSuperClientReceive, &SuperClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_MultiKillMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_MultiKillMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59989 ];

	USGS_MultiKillMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_VictimMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_VictimMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55410 ];

	USGS_VictimMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DemoRecSpectator.UpdateRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_DemoRecSpectator::UpdateRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 55482 ];

	ASGS_DemoRecSpectator_execUpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 CameraLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                CameraRotation                 ( CPF_Parm | CPF_OutParm )

void ASGS_DemoRecSpectator::eventGetPlayerViewPoint ( struct FVector* CameraLocation, struct FRotator* CameraRotation )
{
	static UFunction* pFnGetPlayerViewPoint = NULL;

	if ( ! pFnGetPlayerViewPoint )
		pFnGetPlayerViewPoint = (UFunction*) UObject::GObjObjects()->Data[ 55479 ];

	ASGS_DemoRecSpectator_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

	this->ProcessEvent ( pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL );

	if ( CameraLocation )
		memcpy ( CameraLocation, &GetPlayerViewPoint_Parms.CameraLocation, 0xC );

	if ( CameraRotation )
		memcpy ( CameraRotation, &GetPlayerViewPoint_Parms.CameraRotation, 0xC );
};

// Function SGSOrion.SGS_DemoRecSpectator.Pause
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_DemoRecSpectator::Pause ( )
{
	static UFunction* pFnPause = NULL;

	if ( ! pFnPause )
		pFnPause = (UFunction*) UObject::GObjObjects()->Data[ 55463 ];

	ASGS_DemoRecSpectator_execPause_Parms Pause_Parms;

	this->ProcessEvent ( pFnPause, &Pause_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.SetPause
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bPause                         ( CPF_Parm )
// struct FScriptDelegate         CanUnpauseDelegate             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool ASGS_DemoRecSpectator::SetPause ( unsigned long bPause, struct FScriptDelegate CanUnpauseDelegate )
{
	static UFunction* pFnSetPause = NULL;

	if ( ! pFnSetPause )
		pFnSetPause = (UFunction*) UObject::GObjObjects()->Data[ 55459 ];

	ASGS_DemoRecSpectator_execSetPause_Parms SetPause_Parms;
	SetPause_Parms.bPause = bPause;
	memcpy ( &SetPause_Parms.CanUnpauseDelegate, &CanUnpauseDelegate, 0xC );

	this->ProcessEvent ( pFnSetPause, &SetPause_Parms, NULL );

	return SetPause_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DemoRecSpectator.ClientSetRealViewTarget
// [0x010201C2] 
// Parameters infos:
// class APlayerReplicationInfo*  NewTarget                      ( CPF_Parm )

void ASGS_DemoRecSpectator::ClientSetRealViewTarget ( class APlayerReplicationInfo* NewTarget )
{
	static UFunction* pFnClientSetRealViewTarget = NULL;

	if ( ! pFnClientSetRealViewTarget )
		pFnClientSetRealViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 55457 ];

	ASGS_DemoRecSpectator_execClientSetRealViewTarget_Parms ClientSetRealViewTarget_Parms;
	ClientSetRealViewTarget_Parms.NewTarget = NewTarget;

	this->ProcessEvent ( pFnClientSetRealViewTarget, &ClientSetRealViewTarget_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.ServerViewSelf
// [0x00224042] 
// Parameters infos:
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ASGS_DemoRecSpectator::ServerViewSelf ( struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnServerViewSelf = NULL;

	if ( ! pFnServerViewSelf )
		pFnServerViewSelf = (UFunction*) UObject::GObjObjects()->Data[ 55455 ];

	ASGS_DemoRecSpectator_execServerViewSelf_Parms ServerViewSelf_Parms;
	memcpy ( &ServerViewSelf_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnServerViewSelf, &ServerViewSelf_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.SetViewTarget
// [0x00024002] 
// Parameters infos:
// class AActor*                  NewViewTarget                  ( CPF_Parm )
// struct FViewTargetTransitionParams TransitionParams               ( CPF_OptionalParm | CPF_Parm )

void ASGS_DemoRecSpectator::SetViewTarget ( class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams )
{
	static UFunction* pFnSetViewTarget = NULL;

	if ( ! pFnSetViewTarget )
		pFnSetViewTarget = (UFunction*) UObject::GObjObjects()->Data[ 55452 ];

	ASGS_DemoRecSpectator_execSetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy ( &SetViewTarget_Parms.TransitionParams, &TransitionParams, 0x10 );

	this->ProcessEvent ( pFnSetViewTarget, &SetViewTarget_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.DemoViewNextPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void ASGS_DemoRecSpectator::DemoViewNextPlayer ( )
{
	static UFunction* pFnDemoViewNextPlayer = NULL;

	if ( ! pFnDemoViewNextPlayer )
		pFnDemoViewNextPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55448 ];

	ASGS_DemoRecSpectator_execDemoViewNextPlayer_Parms DemoViewNextPlayer_Parms;

	this->ProcessEvent ( pFnDemoViewNextPlayer, &DemoViewNextPlayer_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.ViewClass
// [0x00024202] ( FUNC_Exec )
// Parameters infos:
// class UClass*                  aClass                         ( CPF_Parm )
// unsigned long                  bQuiet                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bCheat                         ( CPF_OptionalParm | CPF_Parm )

void ASGS_DemoRecSpectator::ViewClass ( class UClass* aClass, unsigned long bQuiet, unsigned long bCheat )
{
	static UFunction* pFnViewClass = NULL;

	if ( ! pFnViewClass )
		pFnViewClass = (UFunction*) UObject::GObjObjects()->Data[ 55441 ];

	ASGS_DemoRecSpectator_execViewClass_Parms ViewClass_Parms;
	ViewClass_Parms.aClass = aClass;
	ViewClass_Parms.bQuiet = bQuiet;
	ViewClass_Parms.bCheat = bCheat;

	this->ProcessEvent ( pFnViewClass, &ViewClass_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.Slomo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:
// float                          NewTimeDilation                ( CPF_Parm )

void ASGS_DemoRecSpectator::Slomo ( float NewTimeDilation )
{
	static UFunction* pFnSlomo = NULL;

	if ( ! pFnSlomo )
		pFnSlomo = (UFunction*) UObject::GObjObjects()->Data[ 55439 ];

	ASGS_DemoRecSpectator_execSlomo_Parms Slomo_Parms;
	Slomo_Parms.NewTimeDilation = NewTimeDilation;

	this->ProcessEvent ( pFnSlomo, &Slomo_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.InitPlayerReplicationInfo
// [0x00020002] 
// Parameters infos:

void ASGS_DemoRecSpectator::InitPlayerReplicationInfo ( )
{
	static UFunction* pFnInitPlayerReplicationInfo = NULL;

	if ( ! pFnInitPlayerReplicationInfo )
		pFnInitPlayerReplicationInfo = (UFunction*) UObject::GObjObjects()->Data[ 55438 ];

	ASGS_DemoRecSpectator_execInitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;

	this->ProcessEvent ( pFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_DemoRecSpectator::eventReceivedPlayer ( )
{
	static UFunction* pFnReceivedPlayer = NULL;

	if ( ! pFnReceivedPlayer )
		pFnReceivedPlayer = (UFunction*) UObject::GObjObjects()->Data[ 55437 ];

	ASGS_DemoRecSpectator_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

	this->ProcessEvent ( pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL );
};

// Function SGSOrion.SGS_DemoRecSpectator.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_DemoRecSpectator::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55436 ];

	ASGS_DemoRecSpectator_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvival_SpawnDino.CanSpawn
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  Family                         ( CPF_Parm )

bool ASGS_DinoSurvival_SpawnDino::CanSpawn ( class UClass* Family )
{
	static UFunction* pFnCanSpawn = NULL;

	if ( ! pFnCanSpawn )
		pFnCanSpawn = (UFunction*) UObject::GObjObjects()->Data[ 55512 ];

	ASGS_DinoSurvival_SpawnDino_execCanSpawn_Parms CanSpawn_Parms;
	CanSpawn_Parms.Family = Family;

	this->ProcessEvent ( pFnCanSpawn, &CanSpawn_Parms, NULL );

	return CanSpawn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvival_SpawnDino.ReallySpawnDino
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  Family                         ( CPF_Parm )

bool ASGS_DinoSurvival_SpawnDino::ReallySpawnDino ( class UClass* Family )
{
	static UFunction* pFnReallySpawnDino = NULL;

	if ( ! pFnReallySpawnDino )
		pFnReallySpawnDino = (UFunction*) UObject::GObjObjects()->Data[ 55506 ];

	ASGS_DinoSurvival_SpawnDino_execReallySpawnDino_Parms ReallySpawnDino_Parms;
	ReallySpawnDino_Parms.Family = Family;

	this->ProcessEvent ( pFnReallySpawnDino, &ReallySpawnDino_Parms, NULL );

	return ReallySpawnDino_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvival_SpawnDino.SpawnDino
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class UClass*                  Family                         ( CPF_Parm )

bool ASGS_DinoSurvival_SpawnDino::SpawnDino ( class UClass* Family )
{
	static UFunction* pFnSpawnDino = NULL;

	if ( ! pFnSpawnDino )
		pFnSpawnDino = (UFunction*) UObject::GObjObjects()->Data[ 55503 ];

	ASGS_DinoSurvival_SpawnDino_execSpawnDino_Parms SpawnDino_Parms;
	SpawnDino_Parms.Family = Family;

	this->ProcessEvent ( pFnSpawnDino, &SpawnDino_Parms, NULL );

	return SpawnDino_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvivalBase.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ASGS_DinoSurvivalBase::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55538 ];

	ASGS_DinoSurvivalBase_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalBase.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_DinoSurvivalBase::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55533 ];

	ASGS_DinoSurvivalBase_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalBase.RegisterHudActor
// [0x00020102] 
// Parameters infos:

void ASGS_DinoSurvivalBase::RegisterHudActor ( )
{
	static UFunction* pFnRegisterHudActor = NULL;

	if ( ! pFnRegisterHudActor )
		pFnRegisterHudActor = (UFunction*) UObject::GObjObjects()->Data[ 55531 ];

	ASGS_DinoSurvivalBase_execRegisterHudActor_Parms RegisterHudActor_Parms;

	this->ProcessEvent ( pFnRegisterHudActor, &RegisterHudActor_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalBase.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_DinoSurvivalBase::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55530 ];

	ASGS_DinoSurvivalBase_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalBaseChangeMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_DinoSurvivalBaseChangeMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55549 ];

	USGS_DinoSurvivalBaseChangeMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalBaseChangeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_DinoSurvivalBaseChangeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55542 ];

	USGS_DinoSurvivalBaseChangeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvivalMessage.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_DinoSurvivalMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55564 ];

	USGS_DinoSurvivalMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_DinoSurvivalMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55557 ];

	USGS_DinoSurvivalMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvivalMessageHelper.ClientReceive
// [0x00026002] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_DinoSurvivalMessageHelper::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 55579 ];

	USGS_DinoSurvivalMessageHelper_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_DinoSurvivalMessageHelper.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_DinoSurvivalMessageHelper::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55572 ];

	USGS_DinoSurvivalMessageHelper_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_DinoSurvivalSettings.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ASGS_DinoSurvivalSettings::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55594 ];

	ASGS_DinoSurvivalSettings_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Message_VehicleKill.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_Message_VehicleKill::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59941 ];

	USGS_Message_VehicleKill_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Message_VehicleKill.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_Message_VehicleKill::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59936 ];

	USGS_Message_VehicleKill_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_EvacuationPoint.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )

void ASGS_EvacuationPoint::eventUnTouch ( class AActor* Other )
{
	static UFunction* pFnUnTouch = NULL;

	if ( ! pFnUnTouch )
		pFnUnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55727 ];

	ASGS_EvacuationPoint_eventUnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;

	this->ProcessEvent ( pFnUnTouch, &UnTouch_Parms, NULL );
};

// Function SGSOrion.SGS_EvacuationPoint.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_EvacuationPoint::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 55722 ];

	ASGS_EvacuationPoint_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SGSOrion.SGS_EvacuationPoint.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_EvacuationPoint::eventPostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 55721 ];

	ASGS_EvacuationPoint_eventPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.ConsumeAmmo
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_OSOR::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 64008 ];

	ASGS_Weap_OSOR_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.IncrementFlashCount
// [0x00020100] 
// Parameters infos:

void ASGS_Weap_OSOR::IncrementFlashCount ( )
{
	static UFunction* pFnIncrementFlashCount = NULL;

	if ( ! pFnIncrementFlashCount )
		pFnIncrementFlashCount = (UFunction*) UObject::GObjObjects()->Data[ 64007 ];

	ASGS_Weap_OSOR_execIncrementFlashCount_Parms IncrementFlashCount_Parms;

	this->ProcessEvent ( pFnIncrementFlashCount, &IncrementFlashCount_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.GetPhysicalFireStartLoc
// [0x00824102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ASGS_Weap_OSOR::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 64003 ];

	ASGS_Weap_OSOR_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_OSOR.Hud_HideProgressBar
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_OSOR::Hud_HideProgressBar ( )
{
	static UFunction* pFnHud_HideProgressBar = NULL;

	if ( ! pFnHud_HideProgressBar )
		pFnHud_HideProgressBar = (UFunction*) UObject::GObjObjects()->Data[ 63976 ];

	ASGS_Weap_OSOR_execHud_HideProgressBar_Parms Hud_HideProgressBar_Parms;

	this->ProcessEvent ( pFnHud_HideProgressBar, &Hud_HideProgressBar_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.Hud_ShowProgressBar
// [0x00020102] 
// Parameters infos:
// float                          Time                           ( CPF_Parm )

void ASGS_Weap_OSOR::Hud_ShowProgressBar ( float Time )
{
	static UFunction* pFnHud_ShowProgressBar = NULL;

	if ( ! pFnHud_ShowProgressBar )
		pFnHud_ShowProgressBar = (UFunction*) UObject::GObjObjects()->Data[ 63974 ];

	ASGS_Weap_OSOR_execHud_ShowProgressBar_Parms Hud_ShowProgressBar_Parms;
	Hud_ShowProgressBar_Parms.Time = Time;

	this->ProcessEvent ( pFnHud_ShowProgressBar, &Hud_ShowProgressBar_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Weap_OSOR::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 63956 ];

	ASGS_Weap_OSOR_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_OSOR::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 63955 ];

	ASGS_Weap_OSOR_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.DoTeleport
// [0x00820002] 
// Parameters infos:

void ASGS_Weap_OSOR::DoTeleport ( )
{
	static UFunction* pFnDoTeleport = NULL;

	if ( ! pFnDoTeleport )
		pFnDoTeleport = (UFunction*) UObject::GObjObjects()->Data[ 63947 ];

	ASGS_Weap_OSOR_execDoTeleport_Parms DoTeleport_Parms;

	this->ProcessEvent ( pFnDoTeleport, &DoTeleport_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.FindFriendWithNoShield
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Weap_OSOR::FindFriendWithNoShield ( )
{
	static UFunction* pFnFindFriendWithNoShield = NULL;

	if ( ! pFnFindFriendWithNoShield )
		pFnFindFriendWithNoShield = (UFunction*) UObject::GObjObjects()->Data[ 63940 ];

	ASGS_Weap_OSOR_execFindFriendWithNoShield_Parms FindFriendWithNoShield_Parms;

	this->ProcessEvent ( pFnFindFriendWithNoShield, &FindFriendWithNoShield_Parms, NULL );

	return FindFriendWithNoShield_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_OSOR.FindLockDevice
// [0x00820002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Weap_OSOR::FindLockDevice ( )
{
	static UFunction* pFnFindLockDevice = NULL;

	if ( ! pFnFindLockDevice )
		pFnFindLockDevice = (UFunction*) UObject::GObjObjects()->Data[ 63933 ];

	ASGS_Weap_OSOR_execFindLockDevice_Parms FindLockDevice_Parms;

	this->ProcessEvent ( pFnFindLockDevice, &FindLockDevice_Parms, NULL );

	return FindLockDevice_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_OSOR.Activate
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_OSOR::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 63932 ];

	ASGS_Weap_OSOR_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.Deactivate
// [0x002200C0] 
// Parameters infos:

void ASGS_Weap_OSOR::Deactivate ( )
{
	static UFunction* pFnDeactivate = NULL;

	if ( ! pFnDeactivate )
		pFnDeactivate = (UFunction*) UObject::GObjObjects()->Data[ 63931 ];

	ASGS_Weap_OSOR_execDeactivate_Parms Deactivate_Parms;

	this->ProcessEvent ( pFnDeactivate, &Deactivate_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.ReloadAmmo
// [0x002200C0] 
// Parameters infos:

void ASGS_Weap_OSOR::ReloadAmmo ( )
{
	static UFunction* pFnReloadAmmo = NULL;

	if ( ! pFnReloadAmmo )
		pFnReloadAmmo = (UFunction*) UObject::GObjObjects()->Data[ 63930 ];

	ASGS_Weap_OSOR_execReloadAmmo_Parms ReloadAmmo_Parms;

	this->ProcessEvent ( pFnReloadAmmo, &ReloadAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Weap_OSOR::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 63928 ];

	ASGS_Weap_OSOR_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.StopAiming
// [0x00024100] 
// Parameters infos:
// unsigned long                  bPlayAnim                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlaySound                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_Weap_OSOR::StopAiming ( unsigned long bPlayAnim, unsigned long bPlaySound )
{
	static UFunction* pFnStopAiming = NULL;

	if ( ! pFnStopAiming )
		pFnStopAiming = (UFunction*) UObject::GObjObjects()->Data[ 63925 ];

	ASGS_Weap_OSOR_execStopAiming_Parms StopAiming_Parms;
	StopAiming_Parms.bPlayAnim = bPlayAnim;
	StopAiming_Parms.bPlaySound = bPlaySound;

	this->ProcessEvent ( pFnStopAiming, &StopAiming_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_OSOR.StartAiming
// [0x00024100] 
// Parameters infos:
// unsigned long                  bPlayAnim                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlaySound                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_Weap_OSOR::StartAiming ( unsigned long bPlayAnim, unsigned long bPlaySound )
{
	static UFunction* pFnStartAiming = NULL;

	if ( ! pFnStartAiming )
		pFnStartAiming = (UFunction*) UObject::GObjObjects()->Data[ 63922 ];

	ASGS_Weap_OSOR_execStartAiming_Parms StartAiming_Parms;
	StartAiming_Parms.bPlayAnim = bPlayAnim;
	StartAiming_Parms.bPlaySound = bPlaySound;

	this->ProcessEvent ( pFnStartAiming, &StartAiming_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.ShouldRefire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Weap_MedicGun::ShouldRefire ( )
{
	static UFunction* pFnShouldRefire = NULL;

	if ( ! pFnShouldRefire )
		pFnShouldRefire = (UFunction*) UObject::GObjObjects()->Data[ 63844 ];

	ASGS_Weap_MedicGun_execShouldRefire_Parms ShouldRefire_Parms;

	this->ProcessEvent ( pFnShouldRefire, &ShouldRefire_Parms, NULL );

	return ShouldRefire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_MedicGun.Think
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Weap_MedicGun::Think ( float DeltaTime )
{
	static UFunction* pFnThink = NULL;

	if ( ! pFnThink )
		pFnThink = (UFunction*) UObject::GObjObjects()->Data[ 63818 ];

	ASGS_Weap_MedicGun_execThink_Parms Think_Parms;
	Think_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnThink, &Think_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.HandleFinishedFiring
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_MedicGun::HandleFinishedFiring ( )
{
	static UFunction* pFnHandleFinishedFiring = NULL;

	if ( ! pFnHandleFinishedFiring )
		pFnHandleFinishedFiring = (UFunction*) UObject::GObjObjects()->Data[ 63808 ];

	ASGS_Weap_MedicGun_execHandleFinishedFiring_Parms HandleFinishedFiring_Parms;

	this->ProcessEvent ( pFnHandleFinishedFiring, &HandleFinishedFiring_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_MedicGun::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 63788 ];

	ASGS_Weap_MedicGun_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_MedicGun::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 63786 ];

	ASGS_Weap_MedicGun_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.StopAiming
// [0x00024100] 
// Parameters infos:
// unsigned long                  bPlayAnim                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlaySound                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_Weap_MedicGun::StopAiming ( unsigned long bPlayAnim, unsigned long bPlaySound )
{
	static UFunction* pFnStopAiming = NULL;

	if ( ! pFnStopAiming )
		pFnStopAiming = (UFunction*) UObject::GObjObjects()->Data[ 63783 ];

	ASGS_Weap_MedicGun_execStopAiming_Parms StopAiming_Parms;
	StopAiming_Parms.bPlayAnim = bPlayAnim;
	StopAiming_Parms.bPlaySound = bPlaySound;

	this->ProcessEvent ( pFnStopAiming, &StopAiming_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun.StartAiming
// [0x00024100] 
// Parameters infos:
// unsigned long                  bPlayAnim                      ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPlaySound                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_Weap_MedicGun::StartAiming ( unsigned long bPlayAnim, unsigned long bPlaySound )
{
	static UFunction* pFnStartAiming = NULL;

	if ( ! pFnStartAiming )
		pFnStartAiming = (UFunction*) UObject::GObjObjects()->Data[ 63780 ];

	ASGS_Weap_MedicGun_execStartAiming_Parms StartAiming_Parms;
	StartAiming_Parms.bPlayAnim = bPlayAnim;
	StartAiming_Parms.bPlaySound = bPlaySound;

	this->ProcessEvent ( pFnStartAiming, &StartAiming_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_CV10_Silenced.UpdateHealEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_CV10_Silenced::UpdateHealEffects ( )
{
	static UFunction* pFnUpdateHealEffects = NULL;

	if ( ! pFnUpdateHealEffects )
		pFnUpdateHealEffects = (UFunction*) UObject::GObjObjects()->Data[ 63562 ];

	ASGS_Weap_CV10_Silenced_execUpdateHealEffects_Parms UpdateHealEffects_Parms;

	this->ProcessEvent ( pFnUpdateHealEffects, &UpdateHealEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_CV10_Silenced.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Weap_CV10_Silenced::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 63560 ];

	ASGS_Weap_CV10_Silenced_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_CV10_Silenced.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_CV10_Silenced::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 63559 ];

	ASGS_Weap_CV10_Silenced_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Pawn_Dino.IsDino
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Pawn_Dino::IsDino ( )
{
	static UFunction* pFnIsDino = NULL;

	if ( ! pFnIsDino )
		pFnIsDino = (UFunction*) UObject::GObjObjects()->Data[ 60793 ];

	ASGS_Pawn_Dino_execIsDino_Parms IsDino_Parms;

	this->ProcessEvent ( pFnIsDino, &IsDino_Parms, NULL );

	return IsDino_Parms.ReturnValue;
};

// Function SGSOrion.SGS_PawnSoundGroup_TRex.PlayLandSound
// [0x00022000] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void USGS_PawnSoundGroup_TRex::PlayLandSound ( class APawn* P )
{
	static UFunction* pFnPlayLandSound = NULL;

	if ( ! pFnPlayLandSound )
		pFnPlayLandSound = (UFunction*) UObject::GObjObjects()->Data[ 60824 ];

	USGS_PawnSoundGroup_TRex_execPlayLandSound_Parms PlayLandSound_Parms;
	PlayLandSound_Parms.P = P;

	this->ProcessEvent ( pFnPlayLandSound, &PlayLandSound_Parms, NULL );
};

// Function SGSOrion.SGS_FirstBloodMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_FirstBloodMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 55920 ];

	USGS_FirstBloodMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_FirstBloodMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_FirstBloodMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 55914 ];

	USGS_FirstBloodMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameMenu.GenericPlayerInitialization
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )

void ASGS_GameMenu::GenericPlayerInitialization ( class AController* C )
{
	static UFunction* pFnGenericPlayerInitialization = NULL;

	if ( ! pFnGenericPlayerInitialization )
		pFnGenericPlayerInitialization = (UFunction*) UObject::GObjObjects()->Data[ 56409 ];

	ASGS_GameMenu_execGenericPlayerInitialization_Parms GenericPlayerInitialization_Parms;
	GenericPlayerInitialization_Parms.C = C;

	this->ProcessEvent ( pFnGenericPlayerInitialization, &GenericPlayerInitialization_Parms, NULL );
};

// Function SGSOrion.SGS_KillingSpreeMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_KillingSpreeMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59204 ];

	USGS_KillingSpreeMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GameMessageDB.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_GameMessageDB::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 56463 ];

	USGS_GameMessageDB_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_HudCarnage.TextPostRender
// [0x00020002] 
// Parameters infos:

void ASGS_HudCarnage::TextPostRender ( )
{
	static UFunction* pFnTextPostRender = NULL;

	if ( ! pFnTextPostRender )
		pFnTextPostRender = (UFunction*) UObject::GObjObjects()->Data[ 59004 ];

	ASGS_HudCarnage_execTextPostRender_Parms TextPostRender_Parms;

	this->ProcessEvent ( pFnTextPostRender, &TextPostRender_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHudCTF.UpdateObjectives
// [0x00820002] 
// Parameters infos:

void USGS_GFXHudCTF::UpdateObjectives ( )
{
	static UFunction* pFnUpdateObjectives = NULL;

	if ( ! pFnUpdateObjectives )
		pFnUpdateObjectives = (UFunction*) UObject::GObjObjects()->Data[ 58744 ];

	USGS_GFXHudCTF_execUpdateObjectives_Parms UpdateObjectives_Parms;

	this->ProcessEvent ( pFnUpdateObjectives, &UpdateObjectives_Parms, NULL );
};

// Function SGSOrion.SGS_GFXHudCTF.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            LocPlay                        ( CPF_OptionalParm | CPF_Parm )

void USGS_GFXHudCTF::Init ( class ULocalPlayer* LocPlay )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58742 ];

	USGS_GFXHudCTF_execInit_Parms Init_Parms;
	Init_Parms.LocPlay = LocPlay;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function SGSOrion.SGS_TeamScoreMessageCTF.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_TeamScoreMessageCTF::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 62210 ];

	USGS_TeamScoreMessageCTF_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_SupplyCabinet.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_SupplyCabinet::eventTouch ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnTouch = NULL;

	if ( ! pFnTouch )
		pFnTouch = (UFunction*) UObject::GObjObjects()->Data[ 62150 ];

	ASGS_SupplyCabinet_eventTouch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy ( &Touch_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &Touch_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnTouch, &Touch_Parms, NULL );
};

// Function SGSOrion.SGS_SupplyCabinet.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class AActor*                  Other                          ( CPF_Parm )
// class UPrimitiveComponent*     OtherComp                      ( CPF_Parm | CPF_EditInline )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_SupplyCabinet::eventBump ( class AActor* Other, class UPrimitiveComponent* OtherComp, struct FVector HitNormal )
{
	static UFunction* pFnBump = NULL;

	if ( ! pFnBump )
		pFnBump = (UFunction*) UObject::GObjObjects()->Data[ 62146 ];

	ASGS_SupplyCabinet_eventBump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy ( &Bump_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnBump, &Bump_Parms, NULL );
};

// Function SGSOrion.SGS_SupplyCabinet.CanSupply
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

bool ASGS_SupplyCabinet::CanSupply ( class APawn* Pawn )
{
	static UFunction* pFnCanSupply = NULL;

	if ( ! pFnCanSupply )
		pFnCanSupply = (UFunction*) UObject::GObjObjects()->Data[ 62140 ];

	ASGS_SupplyCabinet_execCanSupply_Parms CanSupply_Parms;
	CanSupply_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnCanSupply, &CanSupply_Parms, NULL );

	return CanSupply_Parms.ReturnValue;
};

// Function SGSOrion.SGS_SupplyCabinet.ClearSuppliedVar
// [0x00020002] 
// Parameters infos:

void ASGS_SupplyCabinet::ClearSuppliedVar ( )
{
	static UFunction* pFnClearSuppliedVar = NULL;

	if ( ! pFnClearSuppliedVar )
		pFnClearSuppliedVar = (UFunction*) UObject::GObjObjects()->Data[ 62139 ];

	ASGS_SupplyCabinet_execClearSuppliedVar_Parms ClearSuppliedVar_Parms;

	this->ProcessEvent ( pFnClearSuppliedVar, &ClearSuppliedVar_Parms, NULL );
};

// Function SGSOrion.SGS_SupplyCabinet.Supply
// [0x002200C2] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   Pawn                           ( CPF_Parm )

bool ASGS_SupplyCabinet::Supply ( class APawn* Pawn )
{
	static UFunction* pFnSupply = NULL;

	if ( ! pFnSupply )
		pFnSupply = (UFunction*) UObject::GObjObjects()->Data[ 62132 ];

	ASGS_SupplyCabinet_execSupply_Parms Supply_Parms;
	Supply_Parms.Pawn = Pawn;

	this->ProcessEvent ( pFnSupply, &Supply_Parms, NULL );

	return Supply_Parms.ReturnValue;
};

// Function SGSOrion.SGS_SupplyCabinet.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_SupplyCabinet::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62130 ];

	ASGS_SupplyCabinet_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_HudDinoSurvival.TextRenderGameStatus
// [0x00020002] 
// Parameters infos:

void ASGS_HudDinoSurvival::TextRenderGameStatus ( )
{
	static UFunction* pFnTextRenderGameStatus = NULL;

	if ( ! pFnTextRenderGameStatus )
		pFnTextRenderGameStatus = (UFunction*) UObject::GObjObjects()->Data[ 59015 ];

	ASGS_HudDinoSurvival_execTextRenderGameStatus_Parms TextRenderGameStatus_Parms;

	this->ProcessEvent ( pFnTextRenderGameStatus, &TextRenderGameStatus_Parms, NULL );
};

// Function SGSOrion.SGS_GameViewportClient.DrawTransition
// [0x00020002] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GameViewportClient::DrawTransition ( class UCanvas* Canvas )
{
	static UFunction* pFnDrawTransition = NULL;

	if ( ! pFnDrawTransition )
		pFnDrawTransition = (UFunction*) UObject::GObjObjects()->Data[ 56884 ];

	USGS_GameViewportClient_execDrawTransition_Parms DrawTransition_Parms;
	DrawTransition_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnDrawTransition, &DrawTransition_Parms, NULL );
};

// Function SGSOrion.SGS_GameViewportClient.NotifyConnectionError
// [0x00024002] 
// Parameters infos:
// unsigned char                  MessageType                    ( CPF_Parm )
// struct FString                 Message                        ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 Title                          ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void USGS_GameViewportClient::NotifyConnectionError ( unsigned char MessageType, struct FString Message, struct FString Title )
{
	static UFunction* pFnNotifyConnectionError = NULL;

	if ( ! pFnNotifyConnectionError )
		pFnNotifyConnectionError = (UFunction*) UObject::GObjObjects()->Data[ 56879 ];

	USGS_GameViewportClient_execNotifyConnectionError_Parms NotifyConnectionError_Parms;
	NotifyConnectionError_Parms.MessageType = MessageType;
	memcpy ( &NotifyConnectionError_Parms.Message, &Message, 0xC );
	memcpy ( &NotifyConnectionError_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnNotifyConnectionError, &NotifyConnectionError_Parms, NULL );
};

// Function SGSOrion.SGS_GameViewportClient.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )

void USGS_GameViewportClient::eventPostRender ( class UCanvas* Canvas )
{
	static UFunction* pFnPostRender = NULL;

	if ( ! pFnPostRender )
		pFnPostRender = (UFunction*) UObject::GObjObjects()->Data[ 56874 ];

	USGS_GameViewportClient_eventPostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;

	this->ProcessEvent ( pFnPostRender, &PostRender_Parms, NULL );
};

// Function SGSOrion.SGS_GameViewportClient.SGSHandleInputAxis
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   Key                            ( CPF_Parm )
// float                          Delta                          ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// unsigned long                  bGamepad                       ( CPF_Parm )

bool USGS_GameViewportClient::eventSGSHandleInputAxis ( int ControllerId, struct FName Key, float Delta, float DeltaTime, unsigned long bGamepad )
{
	static UFunction* pFnSGSHandleInputAxis = NULL;

	if ( ! pFnSGSHandleInputAxis )
		pFnSGSHandleInputAxis = (UFunction*) UObject::GObjObjects()->Data[ 56867 ];

	USGS_GameViewportClient_eventSGSHandleInputAxis_Parms SGSHandleInputAxis_Parms;
	SGSHandleInputAxis_Parms.ControllerId = ControllerId;
	memcpy ( &SGSHandleInputAxis_Parms.Key, &Key, 0x8 );
	SGSHandleInputAxis_Parms.Delta = Delta;
	SGSHandleInputAxis_Parms.DeltaTime = DeltaTime;
	SGSHandleInputAxis_Parms.bGamepad = bGamepad;

	this->ProcessEvent ( pFnSGSHandleInputAxis, &SGSHandleInputAxis_Parms, NULL );

	return SGSHandleInputAxis_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GfxBuyMenu::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 56962 ];

	USGS_GfxBuyMenu_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GfxBuyMenu.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GfxBuyMenu::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 56961 ];

	USGS_GfxBuyMenu_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GfxBuyMenu.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GfxBuyMenu::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 56956 ];

	USGS_GfxBuyMenu_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu.WidgetInit
// [0x00024802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )
// unsigned char                  Index                          ( CPF_OptionalParm | CPF_Parm )

bool USGS_GfxBuyMenu::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget, unsigned char Index )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 56949 ];

	USGS_GfxBuyMenu_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;
	WidgetInit_Parms.Index = Index;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_GfxBuyMenu::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 56946 ];

	USGS_GfxBuyMenu_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu.WidgetInit2
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ParentName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GfxBuyMenu::eventWidgetInit2 ( struct FString WidgetName, struct FString ParentName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit2 = NULL;

	if ( ! pFnWidgetInit2 )
		pFnWidgetInit2 = (UFunction*) UObject::GObjObjects()->Data[ 56936 ];

	USGS_GfxBuyMenu_eventWidgetInit2_Parms WidgetInit2_Parms;
	memcpy ( &WidgetInit2_Parms.WidgetName, &WidgetName, 0xC );
	memcpy ( &WidgetInit2_Parms.ParentName, &ParentName, 0xC );
	WidgetInit2_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit2, &WidgetInit2_Parms, NULL );

	return WidgetInit2_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GfxBuyMenu::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 56933 ];

	USGS_GfxBuyMenu_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GfxBuyMenu_Barracks::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57002 ];

	USGS_GfxBuyMenu_Barracks_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GfxBuyMenu_Barracks::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57001 ];

	USGS_GfxBuyMenu_Barracks_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GfxBuyMenu_Barracks::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 56996 ];

	USGS_GfxBuyMenu_Barracks_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.WidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GfxBuyMenu_Barracks::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 56992 ];

	USGS_GfxBuyMenu_Barracks_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_GfxBuyMenu_Barracks::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 56989 ];

	USGS_GfxBuyMenu_Barracks_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.WidgetInit2
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ParentName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GfxBuyMenu_Barracks::eventWidgetInit2 ( struct FString WidgetName, struct FString ParentName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit2 = NULL;

	if ( ! pFnWidgetInit2 )
		pFnWidgetInit2 = (UFunction*) UObject::GObjObjects()->Data[ 56982 ];

	USGS_GfxBuyMenu_Barracks_eventWidgetInit2_Parms WidgetInit2_Parms;
	memcpy ( &WidgetInit2_Parms.WidgetName, &WidgetName, 0xC );
	memcpy ( &WidgetInit2_Parms.ParentName, &ParentName, 0xC );
	WidgetInit2_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit2, &WidgetInit2_Parms, NULL );

	return WidgetInit2_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GfxBuyMenu_Barracks.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GfxBuyMenu_Barracks::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 56979 ];

	USGS_GfxBuyMenu_Barracks_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxBuyMenu_Garage::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57042 ];

	USGS_GFxBuyMenu_Garage_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxBuyMenu_Garage::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57041 ];

	USGS_GFxBuyMenu_Garage_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.WidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxBuyMenu_Garage::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 57037 ];

	USGS_GFxBuyMenu_Garage_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.WidgetInit2
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 ParentName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxBuyMenu_Garage::eventWidgetInit2 ( struct FString WidgetName, struct FString ParentName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit2 = NULL;

	if ( ! pFnWidgetInit2 )
		pFnWidgetInit2 = (UFunction*) UObject::GObjObjects()->Data[ 57030 ];

	USGS_GFxBuyMenu_Garage_eventWidgetInit2_Parms WidgetInit2_Parms;
	memcpy ( &WidgetInit2_Parms.WidgetName, &WidgetName, 0xC );
	memcpy ( &WidgetInit2_Parms.ParentName, &ParentName, 0xC );
	WidgetInit2_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit2, &WidgetInit2_Parms, NULL );

	return WidgetInit2_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GFxBuyMenu_Garage::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 57025 ];

	USGS_GFxBuyMenu_Garage_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_GFxBuyMenu_Garage::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 57022 ];

	USGS_GFxBuyMenu_Garage_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxBuyMenu_Garage.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GFxBuyMenu_Garage::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 57019 ];

	USGS_GFxBuyMenu_Garage_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxClassSelection.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxClassSelection::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57062 ];

	USGS_GFxClassSelection_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxClassSelection.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxClassSelection::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57061 ];

	USGS_GFxClassSelection_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxClassSelection.FilterButtonInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GFxClassSelection::eventFilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 57056 ];

	USGS_GFxClassSelection_eventFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxClassSelection.WidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxClassSelection::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 57052 ];

	USGS_GFxClassSelection_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxClassSelection.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_GFxClassSelection::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 57049 ];

	USGS_GFxClassSelection_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxClassSelection.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GFxClassSelection::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 57046 ];

	USGS_GFxClassSelection_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.FilterButtonInput
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            ControllerId                   ( CPF_Parm )
// struct FName                   ButtonName                     ( CPF_Parm )
// unsigned char                  InputEvent                     ( CPF_Parm )

bool USGS_GFxFrontEnd::FilterButtonInput ( int ControllerId, struct FName ButtonName, unsigned char InputEvent )
{
	static UFunction* pFnFilterButtonInput = NULL;

	if ( ! pFnFilterButtonInput )
		pFnFilterButtonInput = (UFunction*) UObject::GObjObjects()->Data[ 57189 ];

	USGS_GFxFrontEnd_execFilterButtonInput_Parms FilterButtonInput_Parms;
	FilterButtonInput_Parms.ControllerId = ControllerId;
	memcpy ( &FilterButtonInput_Parms.ButtonName, &ButtonName, 0x8 );
	FilterButtonInput_Parms.InputEvent = InputEvent;

	this->ProcessEvent ( pFnFilterButtonInput, &FilterButtonInput_Parms, NULL );

	return FilterButtonInput_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.DestroyDependantViews
// [0x00020001] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void USGS_GFxFrontEnd::DestroyDependantViews ( struct FName InViewName )
{
	static UFunction* pFnDestroyDependantViews = NULL;

	if ( ! pFnDestroyDependantViews )
		pFnDestroyDependantViews = (UFunction*) UObject::GObjObjects()->Data[ 57187 ];

	USGS_GFxFrontEnd_execDestroyDependantViews_Parms DestroyDependantViews_Parms;
	memcpy ( &DestroyDependantViews_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnDestroyDependantViews, &DestroyDependantViews_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.LoadDependantViews
// [0x00020001] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void USGS_GFxFrontEnd::LoadDependantViews ( struct FName InViewName )
{
	static UFunction* pFnLoadDependantViews = NULL;

	if ( ! pFnLoadDependantViews )
		pFnLoadDependantViews = (UFunction*) UObject::GObjObjects()->Data[ 57185 ];

	USGS_GFxFrontEnd_execLoadDependantViews_Parms LoadDependantViews_Parms;
	memcpy ( &LoadDependantViews_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnLoadDependantViews, &LoadDependantViews_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57178 ];

	USGS_GFxFrontEnd_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.CheckLinkConnectionAndError
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 AlternateTitle                 ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )
// struct FString                 AlternateMessage               ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

bool USGS_GFxFrontEnd::CheckLinkConnectionAndError ( struct FString AlternateTitle, struct FString AlternateMessage )
{
	static UFunction* pFnCheckLinkConnectionAndError = NULL;

	if ( ! pFnCheckLinkConnectionAndError )
		pFnCheckLinkConnectionAndError = (UFunction*) UObject::GObjObjects()->Data[ 57170 ];

	USGS_GFxFrontEnd_execCheckLinkConnectionAndError_Parms CheckLinkConnectionAndError_Parms;
	memcpy ( &CheckLinkConnectionAndError_Parms.AlternateTitle, &AlternateTitle, 0xC );
	memcpy ( &CheckLinkConnectionAndError_Parms.AlternateMessage, &AlternateMessage, 0xC );

	this->ProcessEvent ( pFnCheckLinkConnectionAndError, &CheckLinkConnectionAndError_Parms, NULL );

	return CheckLinkConnectionAndError_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.PostWidgetInit
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd::PostWidgetInit ( )
{
	static UFunction* pFnPostWidgetInit = NULL;

	if ( ! pFnPostWidgetInit )
		pFnPostWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 57169 ];

	USGS_GFxFrontEnd_execPostWidgetInit_Parms PostWidgetInit_Parms;

	this->ProcessEvent ( pFnPostWidgetInit, &PostWidgetInit_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.ASShowCursor
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// unsigned long                  bShowCursor                    ( CPF_Parm )

void USGS_GFxFrontEnd::ASShowCursor ( unsigned long bShowCursor )
{
	static UFunction* pFnASShowCursor = NULL;

	if ( ! pFnASShowCursor )
		pFnASShowCursor = (UFunction*) UObject::GObjObjects()->Data[ 57113 ];

	USGS_GFxFrontEnd_execASShowCursor_Parms ASShowCursor_Parms;
	ASShowCursor_Parms.bShowCursor = bShowCursor;

	this->ProcessEvent ( pFnASShowCursor, &ASShowCursor_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.ConfigureView
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class USGS_GFxFrontEnd_View*   InView                         ( CPF_Parm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )

void USGS_GFxFrontEnd::ConfigureView ( class USGS_GFxFrontEnd_View* InView, struct FName WidgetName, struct FName WidgetPath )
{
	static UFunction* pFnConfigureView = NULL;

	if ( ! pFnConfigureView )
		pFnConfigureView = (UFunction*) UObject::GObjObjects()->Data[ 57163 ];

	USGS_GFxFrontEnd_execConfigureView_Parms ConfigureView_Parms;
	ConfigureView_Parms.InView = InView;
	memcpy ( &ConfigureView_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &ConfigureView_Parms.WidgetPath, &WidgetPath, 0x8 );

	this->ProcessEvent ( pFnConfigureView, &ConfigureView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.UpdateViewLayout
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd::UpdateViewLayout ( )
{
	static UFunction* pFnUpdateViewLayout = NULL;

	if ( ! pFnUpdateViewLayout )
		pFnUpdateViewLayout = (UFunction*) UObject::GObjObjects()->Data[ 57162 ];

	USGS_GFxFrontEnd_execUpdateViewLayout_Parms UpdateViewLayout_Parms;

	this->ProcessEvent ( pFnUpdateViewLayout, &UpdateViewLayout_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.PopViewStub
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* USGS_GFxFrontEnd::PopViewStub ( )
{
	static UFunction* pFnPopViewStub = NULL;

	if ( ! pFnPopViewStub )
		pFnPopViewStub = (UFunction*) UObject::GObjObjects()->Data[ 57160 ];

	USGS_GFxFrontEnd_execPopViewStub_Parms PopViewStub_Parms;

	this->ProcessEvent ( pFnPopViewStub, &PopViewStub_Parms, NULL );

	return PopViewStub_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.PopView
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class UGFxObject* USGS_GFxFrontEnd::PopView ( )
{
	static UFunction* pFnPopView = NULL;

	if ( ! pFnPopView )
		pFnPopView = (UFunction*) UObject::GObjObjects()->Data[ 57158 ];

	USGS_GFxFrontEnd_execPopView_Parms PopView_Parms;

	this->ProcessEvent ( pFnPopView, &PopView_Parms, NULL );

	return PopView_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.ASSetSelectionFocus
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              MovieClip                      ( CPF_Parm )

void USGS_GFxFrontEnd::ASSetSelectionFocus ( class UGFxObject* MovieClip )
{
	static UFunction* pFnASSetSelectionFocus = NULL;

	if ( ! pFnASSetSelectionFocus )
		pFnASSetSelectionFocus = (UFunction*) UObject::GObjObjects()->Data[ 57156 ];

	USGS_GFxFrontEnd_execASSetSelectionFocus_Parms ASSetSelectionFocus_Parms;
	ASSetSelectionFocus_Parms.MovieClip = MovieClip;

	this->ProcessEvent ( pFnASSetSelectionFocus, &ASSetSelectionFocus_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.SetSelectionFocus
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              MovieClip                      ( CPF_Parm | CPF_CoerceParm )

void USGS_GFxFrontEnd::SetSelectionFocus ( class UGFxObject* MovieClip )
{
	static UFunction* pFnSetSelectionFocus = NULL;

	if ( ! pFnSetSelectionFocus )
		pFnSetSelectionFocus = (UFunction*) UObject::GObjObjects()->Data[ 57154 ];

	USGS_GFxFrontEnd_execSetSelectionFocus_Parms SetSelectionFocus_Parms;
	SetSelectionFocus_Parms.MovieClip = MovieClip;

	this->ProcessEvent ( pFnSetSelectionFocus, &SetSelectionFocus_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.PushDialogView
// [0x00020002] 
// Parameters infos:
// class USGS_GFxFrontEnd_View*   dialogView                     ( CPF_Parm | CPF_CoerceParm )

void USGS_GFxFrontEnd::PushDialogView ( class USGS_GFxFrontEnd_View* dialogView )
{
	static UFunction* pFnPushDialogView = NULL;

	if ( ! pFnPushDialogView )
		pFnPushDialogView = (UFunction*) UObject::GObjObjects()->Data[ 57152 ];

	USGS_GFxFrontEnd_execPushDialogView_Parms PushDialogView_Parms;
	PushDialogView_Parms.dialogView = dialogView;

	this->ProcessEvent ( pFnPushDialogView, &PushDialogView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.PushView
// [0x00020002] 
// Parameters infos:
// class USGS_GFxFrontEnd_View*   TargetView                     ( CPF_Parm | CPF_CoerceParm )

void USGS_GFxFrontEnd::PushView ( class USGS_GFxFrontEnd_View* TargetView )
{
	static UFunction* pFnPushView = NULL;

	if ( ! pFnPushView )
		pFnPushView = (UFunction*) UObject::GObjObjects()->Data[ 57150 ];

	USGS_GFxFrontEnd_execPushView_Parms PushView_Parms;
	PushView_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnPushView, &PushView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.IsViewAllowed
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class USGS_GFxFrontEnd_View*   TargetView                     ( CPF_Parm )

bool USGS_GFxFrontEnd::IsViewAllowed ( class USGS_GFxFrontEnd_View* TargetView )
{
	static UFunction* pFnIsViewAllowed = NULL;

	if ( ! pFnIsViewAllowed )
		pFnIsViewAllowed = (UFunction*) UObject::GObjObjects()->Data[ 57144 ];

	USGS_GFxFrontEnd_execIsViewAllowed_Parms IsViewAllowed_Parms;
	IsViewAllowed_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnIsViewAllowed, &IsViewAllowed_Parms, NULL );

	return IsViewAllowed_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.ConfigureTargetView
// [0x00020002] 
// Parameters infos:
// class USGS_GFxFrontEnd_View*   TargetView                     ( CPF_Parm )

void USGS_GFxFrontEnd::ConfigureTargetView ( class USGS_GFxFrontEnd_View* TargetView )
{
	static UFunction* pFnConfigureTargetView = NULL;

	if ( ! pFnConfigureTargetView )
		pFnConfigureTargetView = (UFunction*) UObject::GObjObjects()->Data[ 57142 ];

	USGS_GFxFrontEnd_execConfigureTargetView_Parms ConfigureTargetView_Parms;
	ConfigureTargetView_Parms.TargetView = TargetView;

	this->ProcessEvent ( pFnConfigureTargetView, &ConfigureTargetView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.ConfigureTargetDialog
// [0x00020002] 
// Parameters infos:
// class USGS_GFxFrontEnd_View*   TargetDialog                   ( CPF_Parm | CPF_CoerceParm )

void USGS_GFxFrontEnd::ConfigureTargetDialog ( class USGS_GFxFrontEnd_View* TargetDialog )
{
	static UFunction* pFnConfigureTargetDialog = NULL;

	if ( ! pFnConfigureTargetDialog )
		pFnConfigureTargetDialog = (UFunction*) UObject::GObjObjects()->Data[ 57140 ];

	USGS_GFxFrontEnd_execConfigureTargetDialog_Parms ConfigureTargetDialog_Parms;
	ConfigureTargetDialog_Parms.TargetDialog = TargetDialog;

	this->ProcessEvent ( pFnConfigureTargetDialog, &ConfigureTargetDialog_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.SpawnDialog
// [0x00024002] 
// Parameters infos:
// class USGS_GFxFrontEnd_Dialog* ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   TargetDialogName               ( CPF_Parm )
// class USGS_GFxFrontEnd_Screen* ParentView                     ( CPF_OptionalParm | CPF_Parm )

class USGS_GFxFrontEnd_Dialog* USGS_GFxFrontEnd::SpawnDialog ( struct FName TargetDialogName, class USGS_GFxFrontEnd_Screen* ParentView )
{
	static UFunction* pFnSpawnDialog = NULL;

	if ( ! pFnSpawnDialog )
		pFnSpawnDialog = (UFunction*) UObject::GObjObjects()->Data[ 57136 ];

	USGS_GFxFrontEnd_execSpawnDialog_Parms SpawnDialog_Parms;
	memcpy ( &SpawnDialog_Parms.TargetDialogName, &TargetDialogName, 0x8 );
	SpawnDialog_Parms.ParentView = ParentView;

	this->ProcessEvent ( pFnSpawnDialog, &SpawnDialog_Parms, NULL );

	return SpawnDialog_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.PushViewByName
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FName                   TargetViewName                 ( CPF_Parm )
// class USGS_GFxFrontEnd_Screen* ParentView                     ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd::PushViewByName ( struct FName TargetViewName, class USGS_GFxFrontEnd_Screen* ParentView )
{
	static UFunction* pFnPushViewByName = NULL;

	if ( ! pFnPushViewByName )
		pFnPushViewByName = (UFunction*) UObject::GObjObjects()->Data[ 57133 ];

	USGS_GFxFrontEnd_execPushViewByName_Parms PushViewByName_Parms;
	memcpy ( &PushViewByName_Parms.TargetViewName, &TargetViewName, 0x8 );
	PushViewByName_Parms.ParentView = ParentView;

	this->ProcessEvent ( pFnPushViewByName, &PushViewByName_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.SetEscapeDelegate
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FScriptDelegate         InDelegate                     ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd::SetEscapeDelegate ( struct FScriptDelegate InDelegate )
{
	static UFunction* pFnSetEscapeDelegate = NULL;

	if ( ! pFnSetEscapeDelegate )
		pFnSetEscapeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57130 ];

	USGS_GFxFrontEnd_execSetEscapeDelegate_Parms SetEscapeDelegate_Parms;
	memcpy ( &SetEscapeDelegate_Parms.InDelegate, &InDelegate, 0xC );

	this->ProcessEvent ( pFnSetEscapeDelegate, &SetEscapeDelegate_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.IsViewLoaded
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   InViewName                     ( CPF_Parm )

bool USGS_GFxFrontEnd::IsViewLoaded ( struct FName InViewName )
{
	static UFunction* pFnIsViewLoaded = NULL;

	if ( ! pFnIsViewLoaded )
		pFnIsViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57126 ];

	USGS_GFxFrontEnd_execIsViewLoaded_Parms IsViewLoaded_Parms;
	memcpy ( &IsViewLoaded_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnIsViewLoaded, &IsViewLoaded_Parms, NULL );

	return IsViewLoaded_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.LoadViewByName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   InViewName                     ( CPF_Parm )

void USGS_GFxFrontEnd::LoadViewByName ( struct FName InViewName )
{
	static UFunction* pFnLoadViewByName = NULL;

	if ( ! pFnLoadViewByName )
		pFnLoadViewByName = (UFunction*) UObject::GObjObjects()->Data[ 57123 ];

	USGS_GFxFrontEnd_execLoadViewByName_Parms LoadViewByName_Parms;
	memcpy ( &LoadViewByName_Parms.InViewName, &InViewName, 0x8 );

	this->ProcessEvent ( pFnLoadViewByName, &LoadViewByName_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.LoadView
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct USGS_GFxFrontEnd_FViewInfo InViewInfo                     ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd::LoadView ( struct USGS_GFxFrontEnd_FViewInfo InViewInfo )
{
	static UFunction* pFnLoadView = NULL;

	if ( ! pFnLoadView )
		pFnLoadView = (UFunction*) UObject::GObjObjects()->Data[ 57116 ];

	USGS_GFxFrontEnd_execLoadView_Parms LoadView_Parms;
	memcpy ( &LoadView_Parms.InViewInfo, &InViewInfo, 0x20 );

	this->ProcessEvent ( pFnLoadView, &LoadView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.LoadViews
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd::LoadViews ( )
{
	static UFunction* pFnLoadViews = NULL;

	if ( ! pFnLoadViews )
		pFnLoadViews = (UFunction*) UObject::GObjObjects()->Data[ 57114 ];

	USGS_GFxFrontEnd_execLoadViews_Parms LoadViews_Parms;

	this->ProcessEvent ( pFnLoadViews, &LoadViews_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.ConfigFrontEnd
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd::ConfigFrontEnd ( )
{
	static UFunction* pFnConfigFrontEnd = NULL;

	if ( ! pFnConfigFrontEnd )
		pFnConfigFrontEnd = (UFunction*) UObject::GObjObjects()->Data[ 57112 ];

	USGS_GFxFrontEnd_execConfigFrontEnd_Parms ConfigFrontEnd_Parms;

	this->ProcessEvent ( pFnConfigFrontEnd, &ConfigFrontEnd_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GFxFrontEnd::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 57109 ];

	USGS_GFxFrontEnd_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd.EscapeDelegate
// [0x00120000] 
// Parameters infos:

void USGS_GFxFrontEnd::EscapeDelegate ( )
{
	static UFunction* pFnEscapeDelegate = NULL;

	if ( ! pFnEscapeDelegate )
		pFnEscapeDelegate = (UFunction*) UObject::GObjObjects()->Data[ 57073 ];

	USGS_GFxFrontEnd_execEscapeDelegate_Parms EscapeDelegate_Parms;

	this->ProcessEvent ( pFnEscapeDelegate, &EscapeDelegate_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_ErrorDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57387 ];

	USGS_GFxFrontEnd_ErrorDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_ErrorDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57386 ];

	USGS_GFxFrontEnd_ErrorDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.SetButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 ButtonLabel                    ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_ErrorDialog::SetButtonLabel ( struct FString ButtonLabel )
{
	static UFunction* pFnSetButtonLabel = NULL;

	if ( ! pFnSetButtonLabel )
		pFnSetButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 57384 ];

	USGS_GFxFrontEnd_ErrorDialog_execSetButtonLabel_Parms SetButtonLabel_Parms;
	memcpy ( &SetButtonLabel_Parms.ButtonLabel, &ButtonLabel, 0xC );

	this->ProcessEvent ( pFnSetButtonLabel, &SetButtonLabel_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.SetInfo
// [0x00020002] 
// Parameters infos:
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_ErrorDialog::SetInfo ( struct FString Info )
{
	static UFunction* pFnSetInfo = NULL;

	if ( ! pFnSetInfo )
		pFnSetInfo = (UFunction*) UObject::GObjObjects()->Data[ 57382 ];

	USGS_GFxFrontEnd_ErrorDialog_execSetInfo_Parms SetInfo_Parms;
	memcpy ( &SetInfo_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSetInfo, &SetInfo_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.SetTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_ErrorDialog::SetTitle ( struct FString Title )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 57380 ];

	USGS_GFxFrontEnd_ErrorDialog_execSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ErrorDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_ErrorDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57378 ];

	USGS_GFxFrontEnd_ErrorDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_FilterDialog::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57457 ];

	USGS_GFxFrontEnd_FilterDialog_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.PushFilterListUpdate
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::PushFilterListUpdate ( )
{
	static UFunction* pFnPushFilterListUpdate = NULL;

	if ( ! pFnPushFilterListUpdate )
		pFnPushFilterListUpdate = (UFunction*) UObject::GObjObjects()->Data[ 57456 ];

	USGS_GFxFrontEnd_FilterDialog_execPushFilterListUpdate_Parms PushFilterListUpdate_Parms;

	this->ProcessEvent ( pFnPushFilterListUpdate, &PushFilterListUpdate_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.SetupListDataProvider
// [0x00820002] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::SetupListDataProvider ( )
{
	static UFunction* pFnSetupListDataProvider = NULL;

	if ( ! pFnSetupListDataProvider )
		pFnSetupListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 57448 ];

	USGS_GFxFrontEnd_FilterDialog_execSetupListDataProvider_Parms SetupListDataProvider_Parms;

	this->ProcessEvent ( pFnSetupListDataProvider, &SetupListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.SetFilterNetworkType
// [0x00024002] 
// Parameters infos:
// unsigned long                  bLAN                           ( CPF_Parm )
// unsigned long                  bSkipUIUpdate                  ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_FilterDialog::SetFilterNetworkType ( unsigned long bLAN, unsigned long bSkipUIUpdate )
{
	static UFunction* pFnSetFilterNetworkType = NULL;

	if ( ! pFnSetFilterNetworkType )
		pFnSetFilterNetworkType = (UFunction*) UObject::GObjObjects()->Data[ 57441 ];

	USGS_GFxFrontEnd_FilterDialog_execSetFilterNetworkType_Parms SetFilterNetworkType_Parms;
	SetFilterNetworkType_Parms.bLAN = bLAN;
	SetFilterNetworkType_Parms.bSkipUIUpdate = bSkipUIUpdate;

	this->ProcessEvent ( pFnSetFilterNetworkType, &SetFilterNetworkType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.OnFilterList_OptionChanged
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_FilterDialog::OnFilterList_OptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnFilterList_OptionChanged = NULL;

	if ( ! pFnOnFilterList_OptionChanged )
		pFnOnFilterList_OptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 57432 ];

	USGS_GFxFrontEnd_FilterDialog_execOnFilterList_OptionChanged_Parms OnFilterList_OptionChanged_Parms;
	memcpy ( &OnFilterList_OptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnFilterList_OptionChanged, &OnFilterList_OptionChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.GetGameClassByFriendlyName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 FriendlyName                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_FilterDialog::GetGameClassByFriendlyName ( struct FString FriendlyName )
{
	static UFunction* pFnGetGameClassByFriendlyName = NULL;

	if ( ! pFnGetGameClassByFriendlyName )
		pFnGetGameClassByFriendlyName = (UFunction*) UObject::GObjObjects()->Data[ 57429 ];

	USGS_GFxFrontEnd_FilterDialog_execGetGameClassByFriendlyName_Parms GetGameClassByFriendlyName_Parms;
	memcpy ( &GetGameClassByFriendlyName_Parms.FriendlyName, &FriendlyName, 0xC );

	this->ProcessEvent ( pFnGetGameClassByFriendlyName, &GetGameClassByFriendlyName_Parms, NULL );

	return GetGameClassByFriendlyName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.ForceLANOption
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_GFxFrontEnd_FilterDialog::ForceLANOption ( int PlayerIndex )
{
	static UFunction* pFnForceLANOption = NULL;

	if ( ! pFnForceLANOption )
		pFnForceLANOption = (UFunction*) UObject::GObjObjects()->Data[ 57420 ];

	USGS_GFxFrontEnd_FilterDialog_execForceLANOption_Parms ForceLANOption_Parms;
	ForceLANOption_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnForceLANOption, &ForceLANOption_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.ValidateServerType
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 57415 ];

	USGS_GFxFrontEnd_FilterDialog_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.SetBackButtonListener
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         DelegateListener               ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_FilterDialog::SetBackButtonListener ( struct FScriptDelegate DelegateListener )
{
	static UFunction* pFnSetBackButtonListener = NULL;

	if ( ! pFnSetBackButtonListener )
		pFnSetBackButtonListener = (UFunction*) UObject::GObjObjects()->Data[ 57413 ];

	USGS_GFxFrontEnd_FilterDialog_execSetBackButtonListener_Parms SetBackButtonListener_Parms;
	memcpy ( &SetBackButtonListener_Parms.DelegateListener, &DelegateListener, 0xC );

	this->ProcessEvent ( pFnSetBackButtonListener, &SetBackButtonListener_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bEnableComponents              ( CPF_Parm )

void USGS_GFxFrontEnd_FilterDialog::DisableSubComponents ( unsigned long bEnableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57411 ];

	USGS_GFxFrontEnd_FilterDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bEnableComponents = bEnableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57410 ];

	USGS_GFxFrontEnd_FilterDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_FilterDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57408 ];

	USGS_GFxFrontEnd_FilterDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57407 ];

	USGS_GFxFrontEnd_FilterDialog_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_FilterDialog.OnSwitchedGameType
// [0x00120000] 
// Parameters infos:

void USGS_GFxFrontEnd_FilterDialog::OnSwitchedGameType ( )
{
	static UFunction* pFnOnSwitchedGameType = NULL;

	if ( ! pFnOnSwitchedGameType )
		pFnOnSwitchedGameType = (UFunction*) UObject::GObjObjects()->Data[ 57394 ];

	USGS_GFxFrontEnd_FilterDialog_execOnSwitchedGameType_Parms OnSwitchedGameType_Parms;

	this->ProcessEvent ( pFnOnSwitchedGameType, &OnSwitchedGameType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.SetAcceptButton_OnPress
// [0x00020002] 
// Parameters infos:
// struct FScriptDelegate         EventListener                  ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_InfoDialog::SetAcceptButton_OnPress ( struct FScriptDelegate EventListener )
{
	static UFunction* pFnSetAcceptButton_OnPress = NULL;

	if ( ! pFnSetAcceptButton_OnPress )
		pFnSetAcceptButton_OnPress = (UFunction*) UObject::GObjObjects()->Data[ 57711 ];

	USGS_GFxFrontEnd_InfoDialog_execSetAcceptButton_OnPress_Parms SetAcceptButton_OnPress_Parms;
	memcpy ( &SetAcceptButton_OnPress_Parms.EventListener, &EventListener, 0xC );

	this->ProcessEvent ( pFnSetAcceptButton_OnPress, &SetAcceptButton_OnPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.SetBackButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_InfoDialog::SetBackButtonLabel ( struct FString Label )
{
	static UFunction* pFnSetBackButtonLabel = NULL;

	if ( ! pFnSetBackButtonLabel )
		pFnSetBackButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 57709 ];

	USGS_GFxFrontEnd_InfoDialog_execSetBackButtonLabel_Parms SetBackButtonLabel_Parms;
	memcpy ( &SetBackButtonLabel_Parms.Label, &Label, 0xC );

	this->ProcessEvent ( pFnSetBackButtonLabel, &SetBackButtonLabel_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.SetAcceptButtonLabel
// [0x00020002] 
// Parameters infos:
// struct FString                 Label                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_InfoDialog::SetAcceptButtonLabel ( struct FString Label )
{
	static UFunction* pFnSetAcceptButtonLabel = NULL;

	if ( ! pFnSetAcceptButtonLabel )
		pFnSetAcceptButtonLabel = (UFunction*) UObject::GObjObjects()->Data[ 57707 ];

	USGS_GFxFrontEnd_InfoDialog_execSetAcceptButtonLabel_Parms SetAcceptButtonLabel_Parms;
	memcpy ( &SetAcceptButtonLabel_Parms.Label, &Label, 0xC );

	this->ProcessEvent ( pFnSetAcceptButtonLabel, &SetAcceptButtonLabel_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.SetInfo
// [0x00020002] 
// Parameters infos:
// struct FString                 Info                           ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_InfoDialog::SetInfo ( struct FString Info )
{
	static UFunction* pFnSetInfo = NULL;

	if ( ! pFnSetInfo )
		pFnSetInfo = (UFunction*) UObject::GObjObjects()->Data[ 57705 ];

	USGS_GFxFrontEnd_InfoDialog_execSetInfo_Parms SetInfo_Parms;
	memcpy ( &SetInfo_Parms.Info, &Info, 0xC );

	this->ProcessEvent ( pFnSetInfo, &SetInfo_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.SetTitle
// [0x00020002] 
// Parameters infos:
// struct FString                 Title                          ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_InfoDialog::SetTitle ( struct FString Title )
{
	static UFunction* pFnSetTitle = NULL;

	if ( ! pFnSetTitle )
		pFnSetTitle = (UFunction*) UObject::GObjObjects()->Data[ 57703 ];

	USGS_GFxFrontEnd_InfoDialog_execSetTitle_Parms SetTitle_Parms;
	memcpy ( &SetTitle_Parms.Title, &Title, 0xC );

	this->ProcessEvent ( pFnSetTitle, &SetTitle_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_InfoDialog::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57701 ];

	USGS_GFxFrontEnd_InfoDialog_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_InfoDialog::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57699 ];

	USGS_GFxFrontEnd_InfoDialog_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InfoDialog.OnViewClosed
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_InfoDialog::OnViewClosed ( )
{
	static UFunction* pFnOnViewClosed = NULL;

	if ( ! pFnOnViewClosed )
		pFnOnViewClosed = (UFunction*) UObject::GObjObjects()->Data[ 57698 ];

	USGS_GFxFrontEnd_InfoDialog_execOnViewClosed_Parms OnViewClosed_Parms;

	this->ProcessEvent ( pFnOnViewClosed, &OnViewClosed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.FindControlByUTClassName
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// unsigned char                  UTUIControlClass               ( CPF_Parm )

struct FString USGS_GFxFrontEnd_ServerSettings::FindControlByUTClassName ( unsigned char UTUIControlClass )
{
	static UFunction* pFnFindControlByUTClassName = NULL;

	if ( ! pFnFindControlByUTClassName )
		pFnFindControlByUTClassName = (UFunction*) UObject::GObjObjects()->Data[ 58342 ];

	USGS_GFxFrontEnd_ServerSettings_execFindControlByUTClassName_Parms FindControlByUTClassName_Parms;
	FindControlByUTClassName_Parms.UTUIControlClass = UTUIControlClass;

	this->ProcessEvent ( pFnFindControlByUTClassName, &FindControlByUTClassName_Parms, NULL );

	return FindControlByUTClassName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.PopulateOptionDataProviderForIndex
// [0x00420002] 
// Parameters infos:
// int                            Index                          ( CPF_Const | CPF_Parm )
// class UGFxObject*              OutDataProvider                ( CPF_Parm | CPF_OutParm )
// struct FString                 OutDefaultValue                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            OutDefaultIndex                ( CPF_Parm | CPF_OutParm )

void USGS_GFxFrontEnd_ServerSettings::PopulateOptionDataProviderForIndex ( int Index, class UGFxObject** OutDataProvider, struct FString* OutDefaultValue, int* OutDefaultIndex )
{
	static UFunction* pFnPopulateOptionDataProviderForIndex = NULL;

	if ( ! pFnPopulateOptionDataProviderForIndex )
		pFnPopulateOptionDataProviderForIndex = (UFunction*) UObject::GObjObjects()->Data[ 58332 ];

	USGS_GFxFrontEnd_ServerSettings_execPopulateOptionDataProviderForIndex_Parms PopulateOptionDataProviderForIndex_Parms;
	PopulateOptionDataProviderForIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnPopulateOptionDataProviderForIndex, &PopulateOptionDataProviderForIndex_Parms, NULL );

	if ( OutDataProvider )
		*OutDataProvider = PopulateOptionDataProviderForIndex_Parms.OutDataProvider;

	if ( OutDefaultValue )
		memcpy ( OutDefaultValue, &PopulateOptionDataProviderForIndex_Parms.OutDefaultValue, 0xC );

	if ( OutDefaultIndex )
		*OutDefaultIndex = PopulateOptionDataProviderForIndex_Parms.OutDefaultIndex;
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_ServerSettings::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58314 ];

	USGS_GFxFrontEnd_ServerSettings_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.SaveState
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_ServerSettings::SaveState ( )
{
	static UFunction* pFnSaveState = NULL;

	if ( ! pFnSaveState )
		pFnSaveState = (UFunction*) UObject::GObjObjects()->Data[ 58302 ];

	USGS_GFxFrontEnd_ServerSettings_execSaveState_Parms SaveState_Parms;

	this->ProcessEvent ( pFnSaveState, &SaveState_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.OnOptionChanged
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_ServerSettings::OnOptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnOptionChanged = NULL;

	if ( ! pFnOnOptionChanged )
		pFnOnOptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 58298 ];

	USGS_GFxFrontEnd_ServerSettings_execOnOptionChanged_Parms OnOptionChanged_Parms;
	memcpy ( &OnOptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnOptionChanged, &OnOptionChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_ServerSettings.SetSelectedOptionSet
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_ServerSettings::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 58297 ];

	USGS_GFxFrontEnd_ServerSettings_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_SettingsBase::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 58289 ];

	USGS_GFxFrontEnd_SettingsBase_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.FindPropertyIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InPropertyName                 ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

int USGS_GFxFrontEnd_SettingsBase::FindPropertyIndexByName ( struct FString InPropertyName )
{
	static UFunction* pFnFindPropertyIndexByName = NULL;

	if ( ! pFnFindPropertyIndexByName )
		pFnFindPropertyIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 58283 ];

	USGS_GFxFrontEnd_SettingsBase_execFindPropertyIndexByName_Parms FindPropertyIndexByName_Parms;
	memcpy ( &FindPropertyIndexByName_Parms.InPropertyName, &InPropertyName, 0xC );

	this->ProcessEvent ( pFnFindPropertyIndexByName, &FindPropertyIndexByName_Parms, NULL );

	return FindPropertyIndexByName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.Select_BackImpl
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::Select_BackImpl ( )
{
	static UFunction* pFnSelect_BackImpl = NULL;

	if ( ! pFnSelect_BackImpl )
		pFnSelect_BackImpl = (UFunction*) UObject::GObjObjects()->Data[ 58282 ];

	USGS_GFxFrontEnd_SettingsBase_execSelect_BackImpl_Parms Select_BackImpl_Parms;

	this->ProcessEvent ( pFnSelect_BackImpl, &Select_BackImpl_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 58281 ];

	USGS_GFxFrontEnd_SettingsBase_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.FindLocalizedSettingIndexByName
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 InSettingName                  ( CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink )

int USGS_GFxFrontEnd_SettingsBase::FindLocalizedSettingIndexByName ( struct FString InSettingName )
{
	static UFunction* pFnFindLocalizedSettingIndexByName = NULL;

	if ( ! pFnFindLocalizedSettingIndexByName )
		pFnFindLocalizedSettingIndexByName = (UFunction*) UObject::GObjObjects()->Data[ 58275 ];

	USGS_GFxFrontEnd_SettingsBase_execFindLocalizedSettingIndexByName_Parms FindLocalizedSettingIndexByName_Parms;
	memcpy ( &FindLocalizedSettingIndexByName_Parms.InSettingName, &InSettingName, 0xC );

	this->ProcessEvent ( pFnFindLocalizedSettingIndexByName, &FindLocalizedSettingIndexByName_Parms, NULL );

	return FindLocalizedSettingIndexByName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.UpdateListDataProvider
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58274 ];

	USGS_GFxFrontEnd_SettingsBase_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 58271 ];

	USGS_GFxFrontEnd_SettingsBase_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnOptionChanged
// [0x00020000] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_SettingsBase::OnOptionChanged ( struct FEventData ev )
{
	static UFunction* pFnOnOptionChanged = NULL;

	if ( ! pFnOnOptionChanged )
		pFnOnOptionChanged = (UFunction*) UObject::GObjObjects()->Data[ 58269 ];

	USGS_GFxFrontEnd_SettingsBase_execOnOptionChanged_Parms OnOptionChanged_Parms;
	memcpy ( &OnOptionChanged_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnOptionChanged, &OnOptionChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_SettingsBase::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 58267 ];

	USGS_GFxFrontEnd_SettingsBase_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void USGS_GFxFrontEnd_SettingsBase::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 58265 ];

	USGS_GFxFrontEnd_SettingsBase_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.SaveState
// [0x00820002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::SaveState ( )
{
	static UFunction* pFnSaveState = NULL;

	if ( ! pFnSaveState )
		pFnSaveState = (UFunction*) UObject::GObjObjects()->Data[ 58257 ];

	USGS_GFxFrontEnd_SettingsBase_execSaveState_Parms SaveState_Parms;

	this->ProcessEvent ( pFnSaveState, &SaveState_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.Select_Back
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_SettingsBase::Select_Back ( struct FEventData ev )
{
	static UFunction* pFnSelect_Back = NULL;

	if ( ! pFnSelect_Back )
		pFnSelect_Back = (UFunction*) UObject::GObjObjects()->Data[ 58255 ];

	USGS_GFxFrontEnd_SettingsBase_execSelect_Back_Parms Select_Back_Parms;
	memcpy ( &Select_Back_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnSelect_Back, &Select_Back_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.LoadDataFromStore
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::LoadDataFromStore ( )
{
	static UFunction* pFnLoadDataFromStore = NULL;

	if ( ! pFnLoadDataFromStore )
		pFnLoadDataFromStore = (UFunction*) UObject::GObjObjects()->Data[ 58245 ];

	USGS_GFxFrontEnd_SettingsBase_execLoadDataFromStore_Parms LoadDataFromStore_Parms;

	this->ProcessEvent ( pFnLoadDataFromStore, &LoadDataFromStore_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.SetSelectedOptionSet
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 58244 ];

	USGS_GFxFrontEnd_SettingsBase_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_SettingsBase::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 58242 ];

	USGS_GFxFrontEnd_SettingsBase_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_SettingsBase::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 58240 ];

	USGS_GFxFrontEnd_SettingsBase_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 58239 ];

	USGS_GFxFrontEnd_SettingsBase_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_SettingsBase.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_SettingsBase::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 58238 ];

	USGS_GFxFrontEnd_SettingsBase_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Settings.PopulateOptionDataProviderForIndex
// [0x00420002] 
// Parameters infos:
// int                            Index                          ( CPF_Const | CPF_Parm )
// class UGFxObject*              OutDataProvider                ( CPF_Parm | CPF_OutParm )
// struct FString                 OutDefaultValue                ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )
// int                            OutDefaultIndex                ( CPF_Parm | CPF_OutParm )

void USGS_GFxFrontEnd_Settings::PopulateOptionDataProviderForIndex ( int Index, class UGFxObject** OutDataProvider, struct FString* OutDefaultValue, int* OutDefaultIndex )
{
	static UFunction* pFnPopulateOptionDataProviderForIndex = NULL;

	if ( ! pFnPopulateOptionDataProviderForIndex )
		pFnPopulateOptionDataProviderForIndex = (UFunction*) UObject::GObjObjects()->Data[ 58355 ];

	USGS_GFxFrontEnd_Settings_execPopulateOptionDataProviderForIndex_Parms PopulateOptionDataProviderForIndex_Parms;
	PopulateOptionDataProviderForIndex_Parms.Index = Index;

	this->ProcessEvent ( pFnPopulateOptionDataProviderForIndex, &PopulateOptionDataProviderForIndex_Parms, NULL );

	if ( OutDataProvider )
		*OutDataProvider = PopulateOptionDataProviderForIndex_Parms.OutDataProvider;

	if ( OutDefaultValue )
		memcpy ( OutDefaultValue, &PopulateOptionDataProviderForIndex_Parms.OutDefaultValue, 0xC );

	if ( OutDefaultIndex )
		*OutDefaultIndex = PopulateOptionDataProviderForIndex_Parms.OutDefaultIndex;
};

// Function SGSOrion.SGS_GFxFrontEnd_Settings.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Settings::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58348 ];

	USGS_GFxFrontEnd_Settings_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Settings.SetSelectedOptionSet
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Settings::SetSelectedOptionSet ( )
{
	static UFunction* pFnSetSelectedOptionSet = NULL;

	if ( ! pFnSetSelectedOptionSet )
		pFnSetSelectedOptionSet = (UFunction*) UObject::GObjObjects()->Data[ 58346 ];

	USGS_GFxFrontEnd_Settings_execSetSelectedOptionSet_Parms SetSelectedOptionSet_Parms;

	this->ProcessEvent ( pFnSetSelectedOptionSet, &SetSelectedOptionSet_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_GameMode::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57540 ];

	USGS_GFxFrontEnd_GameMode_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.ASSetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void USGS_GFxFrontEnd_GameMode::ASSetList ( class UGFxObject* List )
{
	static UFunction* pFnASSetList = NULL;

	if ( ! pFnASSetList )
		pFnASSetList = (UFunction*) UObject::GObjObjects()->Data[ 57538 ];

	USGS_GFxFrontEnd_GameMode_execASSetList_Parms ASSetList_Parms;
	ASSetList_Parms.List = List;

	this->ProcessEvent ( pFnASSetList, &ASSetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.SetImgScroller
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxClikWidget*          InImgScroller                  ( CPF_Parm )

void USGS_GFxFrontEnd_GameMode::SetImgScroller ( class UGFxClikWidget* InImgScroller )
{
	static UFunction* pFnSetImgScroller = NULL;

	if ( ! pFnSetImgScroller )
		pFnSetImgScroller = (UFunction*) UObject::GObjObjects()->Data[ 57536 ];

	USGS_GFxFrontEnd_GameMode_execSetImgScroller_Parms SetImgScroller_Parms;
	SetImgScroller_Parms.InImgScroller = InImgScroller;

	this->ProcessEvent ( pFnSetImgScroller, &SetImgScroller_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_GameMode::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 57528 ];

	USGS_GFxFrontEnd_GameMode_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_GameMode::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 57524 ];

	USGS_GFxFrontEnd_GameMode_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_GameMode::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 57522 ];

	USGS_GFxFrontEnd_GameMode_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_GameMode::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 57519 ];

	USGS_GFxFrontEnd_GameMode_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnGameModeChange
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// int                            SelectedIndex                  ( CPF_Parm )

void USGS_GFxFrontEnd_GameMode::OnGameModeChange ( int SelectedIndex )
{
	static UFunction* pFnOnGameModeChange = NULL;

	if ( ! pFnOnGameModeChange )
		pFnOnGameModeChange = (UFunction*) UObject::GObjObjects()->Data[ 57512 ];

	USGS_GFxFrontEnd_GameMode_execOnGameModeChange_Parms OnGameModeChange_Parms;
	OnGameModeChange_Parms.SelectedIndex = SelectedIndex;

	this->ProcessEvent ( pFnOnGameModeChange, &OnGameModeChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnGameModeSelected
// [0x00024003] ( FUNC_Final )
// Parameters infos:
// struct FString                 InGameMode                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InDefaultMap                   ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InGameSettingsClass            ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_GameMode::OnGameModeSelected ( struct FString InGameMode, struct FString InDefaultMap, struct FString InGameSettingsClass )
{
	static UFunction* pFnOnGameModeSelected = NULL;

	if ( ! pFnOnGameModeSelected )
		pFnOnGameModeSelected = (UFunction*) UObject::GObjObjects()->Data[ 57504 ];

	USGS_GFxFrontEnd_GameMode_execOnGameModeSelected_Parms OnGameModeSelected_Parms;
	memcpy ( &OnGameModeSelected_Parms.InGameMode, &InGameMode, 0xC );
	memcpy ( &OnGameModeSelected_Parms.InDefaultMap, &InDefaultMap, 0xC );
	memcpy ( &OnGameModeSelected_Parms.InGameSettingsClass, &InGameSettingsClass, 0xC );

	this->ProcessEvent ( pFnOnGameModeSelected, &OnGameModeSelected_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_GameMode::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57502 ];

	USGS_GFxFrontEnd_GameMode_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_GameMode::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57500 ];

	USGS_GFxFrontEnd_GameMode_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_GameMode.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_GameMode::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57495 ];

	USGS_GFxFrontEnd_GameMode_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_MapSelect::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 58063 ];

	USGS_GFxFrontEnd_MapSelect_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.GetMapFriendlyName
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 Map                            ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_MapSelect::GetMapFriendlyName ( struct FString Map )
{
	static UFunction* pFnGetMapFriendlyName = NULL;

	if ( ! pFnGetMapFriendlyName )
		pFnGetMapFriendlyName = (UFunction*) UObject::GObjObjects()->Data[ 58032 ];

	USGS_GFxFrontEnd_MapSelect_execGetMapFriendlyName_Parms GetMapFriendlyName_Parms;
	memcpy ( &GetMapFriendlyName_Parms.Map, &Map, 0xC );

	this->ProcessEvent ( pFnGetMapFriendlyName, &GetMapFriendlyName_Parms, NULL );

	return GetMapFriendlyName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.GetSelectedMap
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_MapSelect::GetSelectedMap ( )
{
	static UFunction* pFnGetSelectedMap = NULL;

	if ( ! pFnGetSelectedMap )
		pFnGetSelectedMap = (UFunction*) UObject::GObjObjects()->Data[ 58051 ];

	USGS_GFxFrontEnd_MapSelect_execGetSelectedMap_Parms GetSelectedMap_Parms;

	this->ProcessEvent ( pFnGetSelectedMap, &GetSelectedMap_Parms, NULL );

	return GetSelectedMap_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.SetupMapCycle
// [0x00820003] ( FUNC_Final )
// Parameters infos:
// struct FString                 SelectedMap                    ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MapSelect::SetupMapCycle ( struct FString SelectedMap )
{
	static UFunction* pFnSetupMapCycle = NULL;

	if ( ! pFnSetupMapCycle )
		pFnSetupMapCycle = (UFunction*) UObject::GObjObjects()->Data[ 58046 ];

	USGS_GFxFrontEnd_MapSelect_execSetupMapCycle_Parms SetupMapCycle_Parms;
	memcpy ( &SetupMapCycle_Parms.SelectedMap, &SelectedMap, 0xC );

	this->ProcessEvent ( pFnSetupMapCycle, &SetupMapCycle_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.GetCurrentGameMode
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FName USGS_GFxFrontEnd_MapSelect::GetCurrentGameMode ( )
{
	static UFunction* pFnGetCurrentGameMode = NULL;

	if ( ! pFnGetCurrentGameMode )
		pFnGetCurrentGameMode = (UFunction*) UObject::GObjObjects()->Data[ 58042 ];

	USGS_GFxFrontEnd_MapSelect_execGetCurrentGameMode_Parms GetCurrentGameMode_Parms;

	this->ProcessEvent ( pFnGetCurrentGameMode, &GetCurrentGameMode_Parms, NULL );

	return GetCurrentGameMode_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.GetImageMarkupByMapName
// [0x00022003] ( FUNC_Final )
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InMapName                      ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_MapSelect::GetImageMarkupByMapName ( struct FString InMapName )
{
	static UFunction* pFnGetImageMarkupByMapName = NULL;

	if ( ! pFnGetImageMarkupByMapName )
		pFnGetImageMarkupByMapName = (UFunction*) UObject::GObjObjects()->Data[ 57510 ];

	USGS_GFxFrontEnd_MapSelect_execGetImageMarkupByMapName_Parms GetImageMarkupByMapName_Parms;
	memcpy ( &GetImageMarkupByMapName_Parms.InMapName, &InMapName, 0xC );

	this->ProcessEvent ( pFnGetImageMarkupByMapName, &GetImageMarkupByMapName_Parms, NULL );

	return GetImageMarkupByMapName_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.SetImgScroller
// [0x00020003] ( FUNC_Final )
// Parameters infos:
// class UGFxClikWidget*          InImgScroller                  ( CPF_Parm )

void USGS_GFxFrontEnd_MapSelect::SetImgScroller ( class UGFxClikWidget* InImgScroller )
{
	static UFunction* pFnSetImgScroller = NULL;

	if ( ! pFnSetImgScroller )
		pFnSetImgScroller = (UFunction*) UObject::GObjObjects()->Data[ 58033 ];

	USGS_GFxFrontEnd_MapSelect_execSetImgScroller_Parms SetImgScroller_Parms;
	SetImgScroller_Parms.InImgScroller = InImgScroller;

	this->ProcessEvent ( pFnSetImgScroller, &SetImgScroller_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MapSelect::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58023 ];

	USGS_GFxFrontEnd_MapSelect_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MapSelect::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 58018 ];

	USGS_GFxFrontEnd_MapSelect_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              List                           ( CPF_Parm )

void USGS_GFxFrontEnd_MapSelect::SetList ( class UGFxObject* List )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 58016 ];

	USGS_GFxFrontEnd_MapSelect_execSetList_Parms SetList_Parms;
	SetList_Parms.List = List;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.OnMapList_ValueChanged
// [0x00024002] 
// Parameters infos:
// struct FString                 InMapSelected                  ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InMapImageSelected             ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MapSelect::OnMapList_ValueChanged ( struct FString InMapSelected, struct FString InMapImageSelected )
{
	static UFunction* pFnOnMapList_ValueChanged = NULL;

	if ( ! pFnOnMapList_ValueChanged )
		pFnOnMapList_ValueChanged = (UFunction*) UObject::GObjObjects()->Data[ 58012 ];

	USGS_GFxFrontEnd_MapSelect_execOnMapList_ValueChanged_Parms OnMapList_ValueChanged_Parms;
	memcpy ( &OnMapList_ValueChanged_Parms.InMapSelected, &InMapSelected, 0xC );
	memcpy ( &OnMapList_ValueChanged_Parms.InMapImageSelected, &InMapImageSelected, 0xC );

	this->ProcessEvent ( pFnOnMapList_ValueChanged, &OnMapList_ValueChanged_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_MapSelect::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 58010 ];

	USGS_GFxFrontEnd_MapSelect_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_MapSelect::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 58008 ];

	USGS_GFxFrontEnd_MapSelect_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MapSelect.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MapSelect::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 58007 ];

	USGS_GFxFrontEnd_MapSelect_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.OnStartGame_Confirm
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_HostGame::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 57695 ];

	USGS_GFxFrontEnd_HostGame_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.FinishStartDedicated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_HostGame::FinishStartDedicated ( )
{
	static UFunction* pFnFinishStartDedicated = NULL;

	if ( ! pFnFinishStartDedicated )
		pFnFinishStartDedicated = (UFunction*) UObject::GObjObjects()->Data[ 57687 ];

	USGS_GFxFrontEnd_HostGame_execFinishStartDedicated_Parms FinishStartDedicated_Parms;

	this->ProcessEvent ( pFnFinishStartDedicated, &FinishStartDedicated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.OnGameCreated
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_GFxFrontEnd_HostGame::OnGameCreated ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnGameCreated = NULL;

	if ( ! pFnOnGameCreated )
		pFnOnGameCreated = (UFunction*) UObject::GObjObjects()->Data[ 57676 ];

	USGS_GFxFrontEnd_HostGame_execOnGameCreated_Parms OnGameCreated_Parms;
	memcpy ( &OnGameCreated_Parms.SessionName, &SessionName, 0x8 );
	OnGameCreated_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnGameCreated, &OnGameCreated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.CreateOnlineGame
// [0x00020002] 
// Parameters infos:
// int                            PlayerIndex                    ( CPF_Parm )

void USGS_GFxFrontEnd_HostGame::CreateOnlineGame ( int PlayerIndex )
{
	static UFunction* pFnCreateOnlineGame = NULL;

	if ( ! pFnCreateOnlineGame )
		pFnCreateOnlineGame = (UFunction*) UObject::GObjObjects()->Data[ 57672 ];

	USGS_GFxFrontEnd_HostGame_execCreateOnlineGame_Parms CreateOnlineGame_Parms;
	CreateOnlineGame_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnCreateOnlineGame, &CreateOnlineGame_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.SetupGameSettings
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_HostGame::SetupGameSettings ( )
{
	static UFunction* pFnSetupGameSettings = NULL;

	if ( ! pFnSetupGameSettings )
		pFnSetupGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 57665 ];

	USGS_GFxFrontEnd_HostGame_execSetupGameSettings_Parms SetupGameSettings_Parms;

	this->ProcessEvent ( pFnSetupGameSettings, &SetupGameSettings_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.GenerateMutatorURLString
// [0x00020002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_HostGame::GenerateMutatorURLString ( )
{
	static UFunction* pFnGenerateMutatorURLString = NULL;

	if ( ! pFnGenerateMutatorURLString )
		pFnGenerateMutatorURLString = (UFunction*) UObject::GObjObjects()->Data[ 57654 ];

	USGS_GFxFrontEnd_HostGame_execGenerateMutatorURLString_Parms GenerateMutatorURLString_Parms;

	this->ProcessEvent ( pFnGenerateMutatorURLString, &GenerateMutatorURLString_Parms, NULL );

	return GenerateMutatorURLString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.ValidateServerType
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_HostGame::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 57649 ];

	USGS_GFxFrontEnd_HostGame_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.StripInvalidPasswordCharacters
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 PasswordString                 ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 InvalidChars                   ( CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_HostGame::StripInvalidPasswordCharacters ( struct FString PasswordString, struct FString InvalidChars )
{
	static UFunction* pFnStripInvalidPasswordCharacters = NULL;

	if ( ! pFnStripInvalidPasswordCharacters )
		pFnStripInvalidPasswordCharacters = (UFunction*) UObject::GObjObjects()->Data[ 57644 ];

	USGS_GFxFrontEnd_HostGame_execStripInvalidPasswordCharacters_Parms StripInvalidPasswordCharacters_Parms;
	memcpy ( &StripInvalidPasswordCharacters_Parms.PasswordString, &PasswordString, 0xC );
	memcpy ( &StripInvalidPasswordCharacters_Parms.InvalidChars, &InvalidChars, 0xC );

	this->ProcessEvent ( pFnStripInvalidPasswordCharacters, &StripInvalidPasswordCharacters_Parms, NULL );

	return StripInvalidPasswordCharacters_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_HostGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57642 ];

	USGS_GFxFrontEnd_HostGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_HostGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_HostGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 57638 ];

	USGS_GFxFrontEnd_HostGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_LaunchGame::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57627 ];

	USGS_GFxFrontEnd_LaunchGame_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.GetGameModeFriendlyString
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 InGameMode                     ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxFrontEnd_LaunchGame::GetGameModeFriendlyString ( struct FString InGameMode )
{
	static UFunction* pFnGetGameModeFriendlyString = NULL;

	if ( ! pFnGetGameModeFriendlyString )
		pFnGetGameModeFriendlyString = (UFunction*) UObject::GObjObjects()->Data[ 57533 ];

	USGS_GFxFrontEnd_LaunchGame_execGetGameModeFriendlyString_Parms GetGameModeFriendlyString_Parms;
	memcpy ( &GetGameModeFriendlyString_Parms.InGameMode, &InGameMode, 0xC );

	this->ProcessEvent ( pFnGetGameModeFriendlyString, &GetGameModeFriendlyString_Parms, NULL );

	return GetGameModeFriendlyString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 57621 ];

	USGS_GFxFrontEnd_LaunchGame_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 57618 ];

	USGS_GFxFrontEnd_LaunchGame_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_LaunchGame::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 57616 ];

	USGS_GFxFrontEnd_LaunchGame_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_LaunchGame::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 57612 ];

	USGS_GFxFrontEnd_LaunchGame_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.UpdateGameSettingsPanel
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::UpdateGameSettingsPanel ( )
{
	static UFunction* pFnUpdateGameSettingsPanel = NULL;

	if ( ! pFnUpdateGameSettingsPanel )
		pFnUpdateGameSettingsPanel = (UFunction*) UObject::GObjObjects()->Data[ 57593 ];

	USGS_GFxFrontEnd_LaunchGame_execUpdateGameSettingsPanel_Parms UpdateGameSettingsPanel_Parms;

	this->ProcessEvent ( pFnUpdateGameSettingsPanel, &UpdateGameSettingsPanel_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnStartGame_Confirm
// [0x00020000] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 57596 ];

	USGS_GFxFrontEnd_LaunchGame_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57595 ];

	USGS_GFxFrontEnd_LaunchGame_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 57594 ];

	USGS_GFxFrontEnd_LaunchGame_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_LaunchGame::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57591 ];

	USGS_GFxFrontEnd_LaunchGame_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_LaunchGame::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57589 ];

	USGS_GFxFrontEnd_LaunchGame_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 57583 ];

	USGS_GFxFrontEnd_LaunchGame_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_LaunchGame.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_LaunchGame::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57581 ];

	USGS_GFxFrontEnd_LaunchGame_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_Multiplayer::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 58101 ];

	USGS_GFxFrontEnd_Multiplayer_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              InList                         ( CPF_Parm )

void USGS_GFxFrontEnd_Multiplayer::SetList ( class UGFxObject* InList )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 58099 ];

	USGS_GFxFrontEnd_Multiplayer_execSetList_Parms SetList_Parms;
	SetList_Parms.InList = InList;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Multiplayer::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 58095 ];

	USGS_GFxFrontEnd_Multiplayer_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Multiplayer::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 58092 ];

	USGS_GFxFrontEnd_Multiplayer_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.OnListChange
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Multiplayer::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 58090 ];

	USGS_GFxFrontEnd_Multiplayer_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.OnListItemPress
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_Multiplayer::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 58086 ];

	USGS_GFxFrontEnd_Multiplayer_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.Select_HostGame
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Multiplayer::Select_HostGame ( )
{
	static UFunction* pFnSelect_HostGame = NULL;

	if ( ! pFnSelect_HostGame )
		pFnSelect_HostGame = (UFunction*) UObject::GObjObjects()->Data[ 58085 ];

	USGS_GFxFrontEnd_Multiplayer_execSelect_HostGame_Parms Select_HostGame_Parms;

	this->ProcessEvent ( pFnSelect_HostGame, &Select_HostGame_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.Select_JoinGame
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Multiplayer::Select_JoinGame ( )
{
	static UFunction* pFnSelect_JoinGame = NULL;

	if ( ! pFnSelect_JoinGame )
		pFnSelect_JoinGame = (UFunction*) UObject::GObjObjects()->Data[ 58084 ];

	USGS_GFxFrontEnd_Multiplayer_execSelect_JoinGame_Parms Select_JoinGame_Parms;

	this->ProcessEvent ( pFnSelect_JoinGame, &Select_JoinGame_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_Multiplayer::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 58082 ];

	USGS_GFxFrontEnd_Multiplayer_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_Multiplayer::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 58080 ];

	USGS_GFxFrontEnd_Multiplayer_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_Multiplayer.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_Multiplayer::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 58079 ];

	USGS_GFxFrontEnd_Multiplayer_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InstantAction.OnStartGame_Confirm
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_InstantAction::OnStartGame_Confirm ( )
{
	static UFunction* pFnOnStartGame_Confirm = NULL;

	if ( ! pFnOnStartGame_Confirm )
		pFnOnStartGame_Confirm = (UFunction*) UObject::GObjObjects()->Data[ 57716 ];

	USGS_GFxFrontEnd_InstantAction_execOnStartGame_Confirm_Parms OnStartGame_Confirm_Parms;

	this->ProcessEvent ( pFnOnStartGame_Confirm, &OnStartGame_Confirm_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_InstantAction.OnViewActivated
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_InstantAction::OnViewActivated ( )
{
	static UFunction* pFnOnViewActivated = NULL;

	if ( ! pFnOnViewActivated )
		pFnOnViewActivated = (UFunction*) UObject::GObjObjects()->Data[ 57714 ];

	USGS_GFxFrontEnd_InstantAction_execOnViewActivated_Parms OnViewActivated_Parms;

	this->ProcessEvent ( pFnOnViewActivated, &OnViewActivated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.WidgetInitialized
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FName                   WidgetName                     ( CPF_Parm )
// struct FName                   WidgetPath                     ( CPF_Parm )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxFrontEnd_MainMenu::eventWidgetInitialized ( struct FName WidgetName, struct FName WidgetPath, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInitialized = NULL;

	if ( ! pFnWidgetInitialized )
		pFnWidgetInitialized = (UFunction*) UObject::GObjObjects()->Data[ 57993 ];

	USGS_GFxFrontEnd_MainMenu_eventWidgetInitialized_Parms WidgetInitialized_Parms;
	memcpy ( &WidgetInitialized_Parms.WidgetName, &WidgetName, 0x8 );
	memcpy ( &WidgetInitialized_Parms.WidgetPath, &WidgetPath, 0x8 );
	WidgetInitialized_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInitialized, &WidgetInitialized_Parms, NULL );

	return WidgetInitialized_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.OnEscapeKeyPress
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::OnEscapeKeyPress ( )
{
	static UFunction* pFnOnEscapeKeyPress = NULL;

	if ( ! pFnOnEscapeKeyPress )
		pFnOnEscapeKeyPress = (UFunction*) UObject::GObjObjects()->Data[ 57992 ];

	USGS_GFxFrontEnd_MainMenu_execOnEscapeKeyPress_Parms OnEscapeKeyPress_Parms;

	this->ProcessEvent ( pFnOnEscapeKeyPress, &OnEscapeKeyPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.SetList
// [0x00020002] 
// Parameters infos:
// class UGFxObject*              InList                         ( CPF_Parm )

void USGS_GFxFrontEnd_MainMenu::SetList ( class UGFxObject* InList )
{
	static UFunction* pFnSetList = NULL;

	if ( ! pFnSetList )
		pFnSetList = (UFunction*) UObject::GObjObjects()->Data[ 57990 ];

	USGS_GFxFrontEnd_MainMenu_execSetList_Parms SetList_Parms;
	SetList_Parms.InList = InList;

	this->ProcessEvent ( pFnSetList, &SetList_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.UpdateListDataProvider
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::UpdateListDataProvider ( )
{
	static UFunction* pFnUpdateListDataProvider = NULL;

	if ( ! pFnUpdateListDataProvider )
		pFnUpdateListDataProvider = (UFunction*) UObject::GObjObjects()->Data[ 57986 ];

	USGS_GFxFrontEnd_MainMenu_execUpdateListDataProvider_Parms UpdateListDataProvider_Parms;

	this->ProcessEvent ( pFnUpdateListDataProvider, &UpdateListDataProvider_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.UpdateDescription
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::UpdateDescription ( )
{
	static UFunction* pFnUpdateDescription = NULL;

	if ( ! pFnUpdateDescription )
		pFnUpdateDescription = (UFunction*) UObject::GObjObjects()->Data[ 57983 ];

	USGS_GFxFrontEnd_MainMenu_execUpdateDescription_Parms UpdateDescription_Parms;

	this->ProcessEvent ( pFnUpdateDescription, &UpdateDescription_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.OnListChange
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MainMenu::OnListChange ( struct FEventData ev )
{
	static UFunction* pFnOnListChange = NULL;

	if ( ! pFnOnListChange )
		pFnOnListChange = (UFunction*) UObject::GObjObjects()->Data[ 57981 ];

	USGS_GFxFrontEnd_MainMenu_execOnListChange_Parms OnListChange_Parms;
	memcpy ( &OnListChange_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListChange, &OnListChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.OnListItemPress
// [0x00040003] ( FUNC_Final )
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MainMenu::OnListItemPress ( struct FEventData ev )
{
	static UFunction* pFnOnListItemPress = NULL;

	if ( ! pFnOnListItemPress )
		pFnOnListItemPress = (UFunction*) UObject::GObjObjects()->Data[ 57977 ];

	USGS_GFxFrontEnd_MainMenu_execOnListItemPress_Parms OnListItemPress_Parms;
	memcpy ( &OnListItemPress_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnOnListItemPress, &OnListItemPress_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.ExitDialog_SelectBack
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MainMenu::ExitDialog_SelectBack ( struct FEventData ev )
{
	static UFunction* pFnExitDialog_SelectBack = NULL;

	if ( ! pFnExitDialog_SelectBack )
		pFnExitDialog_SelectBack = (UFunction*) UObject::GObjObjects()->Data[ 57975 ];

	USGS_GFxFrontEnd_MainMenu_execExitDialog_SelectBack_Parms ExitDialog_SelectBack_Parms;
	memcpy ( &ExitDialog_SelectBack_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnExitDialog_SelectBack, &ExitDialog_SelectBack_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.ExitDialog_SelectOK
// [0x00020002] 
// Parameters infos:
// struct FEventData              ev                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxFrontEnd_MainMenu::ExitDialog_SelectOK ( struct FEventData ev )
{
	static UFunction* pFnExitDialog_SelectOK = NULL;

	if ( ! pFnExitDialog_SelectOK )
		pFnExitDialog_SelectOK = (UFunction*) UObject::GObjObjects()->Data[ 57973 ];

	USGS_GFxFrontEnd_MainMenu_execExitDialog_SelectOK_Parms ExitDialog_SelectOK_Parms;
	memcpy ( &ExitDialog_SelectOK_Parms.ev, &ev, 0x28 );

	this->ProcessEvent ( pFnExitDialog_SelectOK, &ExitDialog_SelectOK_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.Select_ExitGame
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::Select_ExitGame ( )
{
	static UFunction* pFnSelect_ExitGame = NULL;

	if ( ! pFnSelect_ExitGame )
		pFnSelect_ExitGame = (UFunction*) UObject::GObjObjects()->Data[ 57971 ];

	USGS_GFxFrontEnd_MainMenu_execSelect_ExitGame_Parms Select_ExitGame_Parms;

	this->ProcessEvent ( pFnSelect_ExitGame, &Select_ExitGame_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.Select_Multiplayer
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::Select_Multiplayer ( )
{
	static UFunction* pFnSelect_Multiplayer = NULL;

	if ( ! pFnSelect_Multiplayer )
		pFnSelect_Multiplayer = (UFunction*) UObject::GObjObjects()->Data[ 57970 ];

	USGS_GFxFrontEnd_MainMenu_execSelect_Multiplayer_Parms Select_Multiplayer_Parms;

	this->ProcessEvent ( pFnSelect_Multiplayer, &Select_Multiplayer_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.Select_InstantAction
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::Select_InstantAction ( )
{
	static UFunction* pFnSelect_InstantAction = NULL;

	if ( ! pFnSelect_InstantAction )
		pFnSelect_InstantAction = (UFunction*) UObject::GObjObjects()->Data[ 57969 ];

	USGS_GFxFrontEnd_MainMenu_execSelect_InstantAction_Parms Select_InstantAction_Parms;

	this->ProcessEvent ( pFnSelect_InstantAction, &Select_InstantAction_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.DisableSubComponents
// [0x00020002] 
// Parameters infos:
// unsigned long                  bDisableComponents             ( CPF_Parm )

void USGS_GFxFrontEnd_MainMenu::DisableSubComponents ( unsigned long bDisableComponents )
{
	static UFunction* pFnDisableSubComponents = NULL;

	if ( ! pFnDisableSubComponents )
		pFnDisableSubComponents = (UFunction*) UObject::GObjObjects()->Data[ 57967 ];

	USGS_GFxFrontEnd_MainMenu_execDisableSubComponents_Parms DisableSubComponents_Parms;
	DisableSubComponents_Parms.bDisableComponents = bDisableComponents;

	this->ProcessEvent ( pFnDisableSubComponents, &DisableSubComponents_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.OnTopMostView
// [0x00024002] 
// Parameters infos:
// unsigned long                  bPlayOpenAnimation             ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxFrontEnd_MainMenu::OnTopMostView ( unsigned long bPlayOpenAnimation )
{
	static UFunction* pFnOnTopMostView = NULL;

	if ( ! pFnOnTopMostView )
		pFnOnTopMostView = (UFunction*) UObject::GObjObjects()->Data[ 57965 ];

	USGS_GFxFrontEnd_MainMenu_execOnTopMostView_Parms OnTopMostView_Parms;
	OnTopMostView_Parms.bPlayOpenAnimation = bPlayOpenAnimation;

	this->ProcessEvent ( pFnOnTopMostView, &OnTopMostView_Parms, NULL );
};

// Function SGSOrion.SGS_GFxFrontEnd_MainMenu.OnViewLoaded
// [0x00020002] 
// Parameters infos:

void USGS_GFxFrontEnd_MainMenu::OnViewLoaded ( )
{
	static UFunction* pFnOnViewLoaded = NULL;

	if ( ! pFnOnViewLoaded )
		pFnOnViewLoaded = (UFunction*) UObject::GObjObjects()->Data[ 57964 ];

	USGS_GFxFrontEnd_MainMenu_execOnViewLoaded_Parms OnViewLoaded_Parms;

	this->ProcessEvent ( pFnOnViewLoaded, &OnViewLoaded_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.ServerGotoState
// [0x002200C2] 
// Parameters infos:
// struct FName                   S                              ( CPF_Parm )

void ASGS_MWeap_MiniGun::ServerGotoState ( struct FName S )
{
	static UFunction* pFnServerGotoState = NULL;

	if ( ! pFnServerGotoState )
		pFnServerGotoState = (UFunction*) UObject::GObjObjects()->Data[ 60183 ];

	ASGS_MWeap_MiniGun_execServerGotoState_Parms ServerGotoState_Parms;
	memcpy ( &ServerGotoState_Parms.S, &S, 0x8 );

	this->ProcessEvent ( pFnServerGotoState, &ServerGotoState_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_MWeap_MiniGun::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 60181 ];

	ASGS_MWeap_MiniGun_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.ServerResetShots
// [0x002200C2] 
// Parameters infos:

void ASGS_MWeap_MiniGun::ServerResetShots ( )
{
	static UFunction* pFnServerResetShots = NULL;

	if ( ! pFnServerResetShots )
		pFnServerResetShots = (UFunction*) UObject::GObjObjects()->Data[ 60180 ];

	ASGS_MWeap_MiniGun_execServerResetShots_Parms ServerResetShots_Parms;

	this->ProcessEvent ( pFnServerResetShots, &ServerResetShots_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.HandleFinishedFiring
// [0x00020102] 
// Parameters infos:

void ASGS_MWeap_MiniGun::HandleFinishedFiring ( )
{
	static UFunction* pFnHandleFinishedFiring = NULL;

	if ( ! pFnHandleFinishedFiring )
		pFnHandleFinishedFiring = (UFunction*) UObject::GObjObjects()->Data[ 60179 ];

	ASGS_MWeap_MiniGun_execHandleFinishedFiring_Parms HandleFinishedFiring_Parms;

	this->ProcessEvent ( pFnHandleFinishedFiring, &HandleFinishedFiring_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.ShouldRefire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_MWeap_MiniGun::ShouldRefire ( )
{
	static UFunction* pFnShouldRefire = NULL;

	if ( ! pFnShouldRefire )
		pFnShouldRefire = (UFunction*) UObject::GObjObjects()->Data[ 60177 ];

	ASGS_MWeap_MiniGun_execShouldRefire_Parms ShouldRefire_Parms;

	this->ProcessEvent ( pFnShouldRefire, &ShouldRefire_Parms, NULL );

	return ShouldRefire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MWeap_MiniGun.LoadRocket
// [0x00020102] 
// Parameters infos:

void ASGS_MWeap_MiniGun::LoadRocket ( )
{
	static UFunction* pFnLoadRocket = NULL;

	if ( ! pFnLoadRocket )
		pFnLoadRocket = (UFunction*) UObject::GObjObjects()->Data[ 60176 ];

	ASGS_MWeap_MiniGun_execLoadRocket_Parms LoadRocket_Parms;

	this->ProcessEvent ( pFnLoadRocket, &LoadRocket_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_MWeap_MiniGun::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 60173 ];

	ASGS_MWeap_MiniGun_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MWeap_MiniGun.SetMuzzleFlashParams
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ASGS_MWeap_MiniGun::SetMuzzleFlashParams ( class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetMuzzleFlashParams = NULL;

	if ( ! pFnSetMuzzleFlashParams )
		pFnSetMuzzleFlashParams = (UFunction*) UObject::GObjObjects()->Data[ 60171 ];

	ASGS_MWeap_MiniGun_execSetMuzzleFlashParams_Parms SetMuzzleFlashParams_Parms;
	SetMuzzleFlashParams_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetMuzzleFlashParams, &SetMuzzleFlashParams_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.UpdateGunRotation
// [0x00820002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MWeap_MiniGun::UpdateGunRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateGunRotation = NULL;

	if ( ! pFnUpdateGunRotation )
		pFnUpdateGunRotation = (UFunction*) UObject::GObjObjects()->Data[ 60168 ];

	ASGS_MWeap_MiniGun_execUpdateGunRotation_Parms UpdateGunRotation_Parms;
	UpdateGunRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateGunRotation, &UpdateGunRotation_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.HasAmmo
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )
// int                            Amount                         ( CPF_OptionalParm | CPF_Parm )

bool ASGS_MWeap_MiniGun::HasAmmo ( unsigned char FireModeNum, int Amount )
{
	static UFunction* pFnHasAmmo = NULL;

	if ( ! pFnHasAmmo )
		pFnHasAmmo = (UFunction*) UObject::GObjObjects()->Data[ 60161 ];

	ASGS_MWeap_MiniGun_execHasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;

	this->ProcessEvent ( pFnHasAmmo, &HasAmmo_Parms, NULL );

	return HasAmmo_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MWeap_MiniGun.CauseMuzzleFlash
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_MWeap_MiniGun::eventCauseMuzzleFlash ( )
{
	static UFunction* pFnCauseMuzzleFlash = NULL;

	if ( ! pFnCauseMuzzleFlash )
		pFnCauseMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60158 ];

	ASGS_MWeap_MiniGun_eventCauseMuzzleFlash_Parms CauseMuzzleFlash_Parms;

	this->ProcessEvent ( pFnCauseMuzzleFlash, &CauseMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.AttachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ASGS_MWeap_MiniGun::AttachMuzzleFlash ( )
{
	static UFunction* pFnAttachMuzzleFlash = NULL;

	if ( ! pFnAttachMuzzleFlash )
		pFnAttachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60156 ];

	ASGS_MWeap_MiniGun_execAttachMuzzleFlash_Parms AttachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnAttachMuzzleFlash, &AttachMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.DetachMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ASGS_MWeap_MiniGun::DetachMuzzleFlash ( )
{
	static UFunction* pFnDetachMuzzleFlash = NULL;

	if ( ! pFnDetachMuzzleFlash )
		pFnDetachMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 60154 ];

	ASGS_MWeap_MiniGun_execDetachMuzzleFlash_Parms DetachMuzzleFlash_Parms;

	this->ProcessEvent ( pFnDetachMuzzleFlash, &DetachMuzzleFlash_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.PlayFireEffects
// [0x00024102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_MWeap_MiniGun::PlayFireEffects ( unsigned char FireModeNum, struct FVector HitLocation )
{
	static UFunction* pFnPlayFireEffects = NULL;

	if ( ! pFnPlayFireEffects )
		pFnPlayFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 60151 ];

	ASGS_MWeap_MiniGun_execPlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy ( &PlayFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayFireEffects, &PlayFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.PlayFiringSound
// [0x00020100] 
// Parameters infos:

void ASGS_MWeap_MiniGun::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 60150 ];

	ASGS_MWeap_MiniGun_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.UpdateHUD
// [0x00020102] 
// Parameters infos:

void ASGS_MWeap_MiniGun::UpdateHUD ( )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 60149 ];

	ASGS_MWeap_MiniGun_execUpdateHUD_Parms UpdateHUD_Parms;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.WeaponPlaySound
// [0x00024100] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )

void ASGS_MWeap_MiniGun::WeaponPlaySound ( class USoundCue* Sound, float NoiseLoudness )
{
	static UFunction* pFnWeaponPlaySound = NULL;

	if ( ! pFnWeaponPlaySound )
		pFnWeaponPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 60136 ];

	ASGS_MWeap_MiniGun_execWeaponPlaySound_Parms WeaponPlaySound_Parms;
	WeaponPlaySound_Parms.Sound = Sound;
	WeaponPlaySound_Parms.NoiseLoudness = NoiseLoudness;

	this->ProcessEvent ( pFnWeaponPlaySound, &WeaponPlaySound_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.GetFireStartLocationAndRotation
// [0x00420102] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm | CPF_OutParm )
// struct FRotator                StartRotation                  ( CPF_Parm | CPF_OutParm )

void ASGS_MWeap_MiniGun::GetFireStartLocationAndRotation ( struct FVector* StartLocation, struct FRotator* StartRotation )
{
	static UFunction* pFnGetFireStartLocationAndRotation = NULL;

	if ( ! pFnGetFireStartLocationAndRotation )
		pFnGetFireStartLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 60120 ];

	ASGS_MWeap_MiniGun_execGetFireStartLocationAndRotation_Parms GetFireStartLocationAndRotation_Parms;

	this->ProcessEvent ( pFnGetFireStartLocationAndRotation, &GetFireStartLocationAndRotation_Parms, NULL );

	if ( StartLocation )
		memcpy ( StartLocation, &GetFireStartLocationAndRotation_Parms.StartLocation, 0xC );

	if ( StartRotation )
		memcpy ( StartRotation, &GetFireStartLocationAndRotation_Parms.StartRotation, 0xC );
};

// Function SGSOrion.SGS_MWeap_MiniGun.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MWeap_MiniGun::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60110 ];

	ASGS_MWeap_MiniGun_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_MWeap_MiniGun::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 60108 ];

	ASGS_MWeap_MiniGun_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.SetCurrentFireMode
// [0x00020102] 
// Parameters infos:
// unsigned char                  FiringModeNum                  ( CPF_Parm )

void ASGS_MWeap_MiniGun::SetCurrentFireMode ( unsigned char FiringModeNum )
{
	static UFunction* pFnSetCurrentFireMode = NULL;

	if ( ! pFnSetCurrentFireMode )
		pFnSetCurrentFireMode = (UFunction*) UObject::GObjObjects()->Data[ 60106 ];

	ASGS_MWeap_MiniGun_execSetCurrentFireMode_Parms SetCurrentFireMode_Parms;
	SetCurrentFireMode_Parms.FiringModeNum = FiringModeNum;

	this->ProcessEvent ( pFnSetCurrentFireMode, &SetCurrentFireMode_Parms, NULL );
};

// Function SGSOrion.SGS_MWeap_MiniGun.ProcessInstantHit
// [0x00824102] 
// Parameters infos:
// unsigned char                  FiringMode                     ( CPF_Parm )
// struct FImpactInfo             Impact                         ( CPF_Parm )
// int                            NumHits                        ( CPF_OptionalParm | CPF_Parm )

void ASGS_MWeap_MiniGun::ProcessInstantHit ( unsigned char FiringMode, struct FImpactInfo Impact, int NumHits )
{
	static UFunction* pFnProcessInstantHit = NULL;

	if ( ! pFnProcessInstantHit )
		pFnProcessInstantHit = (UFunction*) UObject::GObjObjects()->Data[ 60097 ];

	ASGS_MWeap_MiniGun_execProcessInstantHit_Parms ProcessInstantHit_Parms;
	ProcessInstantHit_Parms.FiringMode = FiringMode;
	memcpy ( &ProcessInstantHit_Parms.Impact, &Impact, 0x50 );
	ProcessInstantHit_Parms.NumHits = NumHits;

	this->ProcessEvent ( pFnProcessInstantHit, &ProcessInstantHit_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.EndZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void ASGS_MechWeapon::EndZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnEndZoom = NULL;

	if ( ! pFnEndZoom )
		pFnEndZoom = (UFunction*) UObject::GObjObjects()->Data[ 59909 ];

	ASGS_MechWeapon_execEndZoom_Parms EndZoom_Parms;
	EndZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnEndZoom, &EndZoom_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.StartZoom
// [0x00020102] 
// Parameters infos:
// class AUTPlayerController*     PC                             ( CPF_Parm )

void ASGS_MechWeapon::StartZoom ( class AUTPlayerController* PC )
{
	static UFunction* pFnStartZoom = NULL;

	if ( ! pFnStartZoom )
		pFnStartZoom = (UFunction*) UObject::GObjObjects()->Data[ 59907 ];

	ASGS_MechWeapon_execStartZoom_Parms StartZoom_Parms;
	StartZoom_Parms.PC = PC;

	this->ProcessEvent ( pFnStartZoom, &StartZoom_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.ServerSetZoom
// [0x002200C2] 
// Parameters infos:
// unsigned long                  bNowZoomed                     ( CPF_Parm )

void ASGS_MechWeapon::ServerSetZoom ( unsigned long bNowZoomed )
{
	static UFunction* pFnServerSetZoom = NULL;

	if ( ! pFnServerSetZoom )
		pFnServerSetZoom = (UFunction*) UObject::GObjObjects()->Data[ 59905 ];

	ASGS_MechWeapon_execServerSetZoom_Parms ServerSetZoom_Parms;
	ServerSetZoom_Parms.bNowZoomed = bNowZoomed;

	this->ProcessEvent ( pFnServerSetZoom, &ServerSetZoom_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.GetZoomedState
// [0x00020102] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ASGS_MechWeapon::GetZoomedState ( )
{
	static UFunction* pFnGetZoomedState = NULL;

	if ( ! pFnGetZoomedState )
		pFnGetZoomedState = (UFunction*) UObject::GObjObjects()->Data[ 59903 ];

	ASGS_MechWeapon_execGetZoomedState_Parms GetZoomedState_Parms;

	this->ProcessEvent ( pFnGetZoomedState, &GetZoomedState_Parms, NULL );

	return GetZoomedState_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.WeaponPlaySound
// [0x00824102] 
// Parameters infos:
// class USoundCue*               Sound                          ( CPF_Parm )
// float                          NoiseLoudness                  ( CPF_OptionalParm | CPF_Parm )

void ASGS_MechWeapon::WeaponPlaySound ( class USoundCue* Sound, float NoiseLoudness )
{
	static UFunction* pFnWeaponPlaySound = NULL;

	if ( ! pFnWeaponPlaySound )
		pFnWeaponPlaySound = (UFunction*) UObject::GObjObjects()->Data[ 59896 ];

	ASGS_MechWeapon_execWeaponPlaySound_Parms WeaponPlaySound_Parms;
	WeaponPlaySound_Parms.Sound = Sound;
	WeaponPlaySound_Parms.NoiseLoudness = NoiseLoudness;

	this->ProcessEvent ( pFnWeaponPlaySound, &WeaponPlaySound_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.NotifyVehicleUndeployed
// [0x00020100] 
// Parameters infos:

void ASGS_MechWeapon::NotifyVehicleUndeployed ( )
{
	static UFunction* pFnNotifyVehicleUndeployed = NULL;

	if ( ! pFnNotifyVehicleUndeployed )
		pFnNotifyVehicleUndeployed = (UFunction*) UObject::GObjObjects()->Data[ 59895 ];

	ASGS_MechWeapon_execNotifyVehicleUndeployed_Parms NotifyVehicleUndeployed_Parms;

	this->ProcessEvent ( pFnNotifyVehicleUndeployed, &NotifyVehicleUndeployed_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.NotifyVehicleDeployed
// [0x00020100] 
// Parameters infos:

void ASGS_MechWeapon::NotifyVehicleDeployed ( )
{
	static UFunction* pFnNotifyVehicleDeployed = NULL;

	if ( ! pFnNotifyVehicleDeployed )
		pFnNotifyVehicleDeployed = (UFunction*) UObject::GObjObjects()->Data[ 59894 ];

	ASGS_MechWeapon_execNotifyVehicleDeployed_Parms NotifyVehicleDeployed_Parms;

	this->ProcessEvent ( pFnNotifyVehicleDeployed, &NotifyVehicleDeployed_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.GetMaxFinalAimAdjustment
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_MechWeapon::GetMaxFinalAimAdjustment ( )
{
	static UFunction* pFnGetMaxFinalAimAdjustment = NULL;

	if ( ! pFnGetMaxFinalAimAdjustment )
		pFnGetMaxFinalAimAdjustment = (UFunction*) UObject::GObjObjects()->Data[ 59531 ];

	ASGS_MechWeapon_execGetMaxFinalAimAdjustment_Parms GetMaxFinalAimAdjustment_Parms;

	this->ProcessEvent ( pFnGetMaxFinalAimAdjustment, &GetMaxFinalAimAdjustment_Parms, NULL );

	return GetMaxFinalAimAdjustment_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.GetTraceOwner
// [0x00020102] 
// Parameters infos:
// class AActor*                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AActor* ASGS_MechWeapon::GetTraceOwner ( )
{
	static UFunction* pFnGetTraceOwner = NULL;

	if ( ! pFnGetTraceOwner )
		pFnGetTraceOwner = (UFunction*) UObject::GObjObjects()->Data[ 59892 ];

	ASGS_MechWeapon_execGetTraceOwner_Parms GetTraceOwner_Parms;

	this->ProcessEvent ( pFnGetTraceOwner, &GetTraceOwner_Parms, NULL );

	return GetTraceOwner_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.InstantFireEndTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartTrace                     ( CPF_Parm )

struct FVector ASGS_MechWeapon::InstantFireEndTrace ( struct FVector StartTrace )
{
	static UFunction* pFnInstantFireEndTrace = NULL;

	if ( ! pFnInstantFireEndTrace )
		pFnInstantFireEndTrace = (UFunction*) UObject::GObjObjects()->Data[ 59889 ];

	ASGS_MechWeapon_execInstantFireEndTrace_Parms InstantFireEndTrace_Parms;
	memcpy ( &InstantFireEndTrace_Parms.StartTrace, &StartTrace, 0xC );

	this->ProcessEvent ( pFnInstantFireEndTrace, &InstantFireEndTrace_Parms, NULL );

	return InstantFireEndTrace_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.InstantFireStartTrace
// [0x00020102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

struct FVector ASGS_MechWeapon::InstantFireStartTrace ( )
{
	static UFunction* pFnInstantFireStartTrace = NULL;

	if ( ! pFnInstantFireStartTrace )
		pFnInstantFireStartTrace = (UFunction*) UObject::GObjObjects()->Data[ 59887 ];

	ASGS_MechWeapon_execInstantFireStartTrace_Parms InstantFireStartTrace_Parms;

	this->ProcessEvent ( pFnInstantFireStartTrace, &InstantFireStartTrace_Parms, NULL );

	return InstantFireStartTrace_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.InstantFire
// [0x00820102] 
// Parameters infos:

void ASGS_MechWeapon::InstantFire ( )
{
	static UFunction* pFnInstantFire = NULL;

	if ( ! pFnInstantFire )
		pFnInstantFire = (UFunction*) UObject::GObjObjects()->Data[ 59878 ];

	ASGS_MechWeapon_execInstantFire_Parms InstantFire_Parms;

	this->ProcessEvent ( pFnInstantFire, &InstantFire_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_MechWeapon::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 59875 ];

	ASGS_MechWeapon_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.GetAdjustedAim
// [0x00020102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ASGS_MechWeapon::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 59533 ];

	ASGS_MechWeapon_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.EndFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_MechWeapon::EndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnEndFire = NULL;

	if ( ! pFnEndFire )
		pFnEndFire = (UFunction*) UObject::GObjObjects()->Data[ 59872 ];

	ASGS_MechWeapon_execEndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnEndFire, &EndFire_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.BeginFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_MechWeapon::BeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnBeginFire = NULL;

	if ( ! pFnBeginFire )
		pFnBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 59870 ];

	ASGS_MechWeapon_execBeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnBeginFire, &BeginFire_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.GetPhysicalFireStartLoc
// [0x00024102] 
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 AimDir                         ( CPF_OptionalParm | CPF_Parm )

struct FVector ASGS_MechWeapon::GetPhysicalFireStartLoc ( struct FVector AimDir )
{
	static UFunction* pFnGetPhysicalFireStartLoc = NULL;

	if ( ! pFnGetPhysicalFireStartLoc )
		pFnGetPhysicalFireStartLoc = (UFunction*) UObject::GObjObjects()->Data[ 59867 ];

	ASGS_MechWeapon_execGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy ( &GetPhysicalFireStartLoc_Parms.AimDir, &AimDir, 0xC );

	this->ProcessEvent ( pFnGetPhysicalFireStartLoc, &GetPhysicalFireStartLoc_Parms, NULL );

	return GetPhysicalFireStartLoc_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.PutDownWeapon
// [0x00020102] 
// Parameters infos:

void ASGS_MechWeapon::PutDownWeapon ( )
{
	static UFunction* pFnPutDownWeapon = NULL;

	if ( ! pFnPutDownWeapon )
		pFnPutDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59866 ];

	ASGS_MechWeapon_execPutDownWeapon_Parms PutDownWeapon_Parms;

	this->ProcessEvent ( pFnPutDownWeapon, &PutDownWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.Activate
// [0x00020102] 
// Parameters infos:

void ASGS_MechWeapon::Activate ( )
{
	static UFunction* pFnActivate = NULL;

	if ( ! pFnActivate )
		pFnActivate = (UFunction*) UObject::GObjObjects()->Data[ 59865 ];

	ASGS_MechWeapon_execActivate_Parms Activate_Parms;

	this->ProcessEvent ( pFnActivate, &Activate_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.DetachWeapon
// [0x00020100] 
// Parameters infos:

void ASGS_MechWeapon::DetachWeapon ( )
{
	static UFunction* pFnDetachWeapon = NULL;

	if ( ! pFnDetachWeapon )
		pFnDetachWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59864 ];

	ASGS_MechWeapon_execDetachWeapon_Parms DetachWeapon_Parms;

	this->ProcessEvent ( pFnDetachWeapon, &DetachWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.AttachWeaponTo
// [0x00024100] 
// Parameters infos:
// class USkeletalMeshComponent*  MeshCpnt                       ( CPF_Parm | CPF_EditInline )
// struct FName                   SocketName                     ( CPF_OptionalParm | CPF_Parm )

void ASGS_MechWeapon::AttachWeaponTo ( class USkeletalMeshComponent* MeshCpnt, struct FName SocketName )
{
	static UFunction* pFnAttachWeaponTo = NULL;

	if ( ! pFnAttachWeaponTo )
		pFnAttachWeaponTo = (UFunction*) UObject::GObjObjects()->Data[ 59861 ];

	ASGS_MechWeapon_execAttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy ( &AttachWeaponTo_Parms.SocketName, &SocketName, 0x8 );

	this->ProcessEvent ( pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.GetImpactEffect
// [0x00022102] 
// Parameters infos:
// struct FMaterialImpactEffect   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// class AActor*                  HitActor                       ( CPF_Parm )
// class UPhysicalMaterial*       HitMaterial                    ( CPF_Parm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

struct FMaterialImpactEffect ASGS_MechWeapon::GetImpactEffect ( class AActor* HitActor, class UPhysicalMaterial* HitMaterial, unsigned char FireModeNum )
{
	static UFunction* pFnGetImpactEffect = NULL;

	if ( ! pFnGetImpactEffect )
		pFnGetImpactEffect = (UFunction*) UObject::GObjObjects()->Data[ 59854 ];

	ASGS_MechWeapon_execGetImpactEffect_Parms GetImpactEffect_Parms;
	GetImpactEffect_Parms.HitActor = HitActor;
	GetImpactEffect_Parms.HitMaterial = HitMaterial;
	GetImpactEffect_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetImpactEffect, &GetImpactEffect_Parms, NULL );

	return GetImpactEffect_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.GetFireInterval
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

float ASGS_MechWeapon::GetFireInterval ( unsigned char FireModeNum )
{
	static UFunction* pFnGetFireInterval = NULL;

	if ( ! pFnGetFireInterval )
		pFnGetFireInterval = (UFunction*) UObject::GObjObjects()->Data[ 59850 ];

	ASGS_MechWeapon_execGetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnGetFireInterval, &GetFireInterval_Parms, NULL );

	return GetFireInterval_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.GetFireTriggerTag
// [0x00022102] 
// Parameters infos:
// struct FName                   ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            BarrelIndex                    ( CPF_Parm )
// int                            FireMode                       ( CPF_Parm )

struct FName ASGS_MechWeapon::GetFireTriggerTag ( int BarrelIndex, int FireMode )
{
	static UFunction* pFnGetFireTriggerTag = NULL;

	if ( ! pFnGetFireTriggerTag )
		pFnGetFireTriggerTag = (UFunction*) UObject::GObjObjects()->Data[ 59846 ];

	ASGS_MechWeapon_execGetFireTriggerTag_Parms GetFireTriggerTag_Parms;
	GetFireTriggerTag_Parms.BarrelIndex = BarrelIndex;
	GetFireTriggerTag_Parms.FireMode = FireMode;

	this->ProcessEvent ( pFnGetFireTriggerTag, &GetFireTriggerTag_Parms, NULL );

	return GetFireTriggerTag_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.IsAimCorrect
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_MechWeapon::eventIsAimCorrect ( )
{
	static UFunction* pFnIsAimCorrect = NULL;

	if ( ! pFnIsAimCorrect )
		pFnIsAimCorrect = (UFunction*) UObject::GObjObjects()->Data[ 59840 ];

	ASGS_MechWeapon_eventIsAimCorrect_Parms IsAimCorrect_Parms;

	this->ProcessEvent ( pFnIsAimCorrect, &IsAimCorrect_Parms, NULL );

	return IsAimCorrect_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.GetFireStartLocationAndRotation
// [0x00420102] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm | CPF_OutParm )
// struct FRotator                StartRotation                  ( CPF_Parm | CPF_OutParm )

void ASGS_MechWeapon::GetFireStartLocationAndRotation ( struct FVector* StartLocation, struct FRotator* StartRotation )
{
	static UFunction* pFnGetFireStartLocationAndRotation = NULL;

	if ( ! pFnGetFireStartLocationAndRotation )
		pFnGetFireStartLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 59837 ];

	ASGS_MechWeapon_execGetFireStartLocationAndRotation_Parms GetFireStartLocationAndRotation_Parms;

	this->ProcessEvent ( pFnGetFireStartLocationAndRotation, &GetFireStartLocationAndRotation_Parms, NULL );

	if ( StartLocation )
		memcpy ( StartLocation, &GetFireStartLocationAndRotation_Parms.StartLocation, 0xC );

	if ( StartRotation )
		memcpy ( StartRotation, &GetFireStartLocationAndRotation_Parms.StartRotation, 0xC );
};

// Function SGSOrion.SGS_MechWeapon.GetDesiredAimPoint
// [0x00C24902] ( FUNC_Event )
// Parameters infos:
// struct FVector                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  TargetActor                    ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

struct FVector ASGS_MechWeapon::eventGetDesiredAimPoint ( class AActor** TargetActor )
{
	static UFunction* pFnGetDesiredAimPoint = NULL;

	if ( ! pFnGetDesiredAimPoint )
		pFnGetDesiredAimPoint = (UFunction*) UObject::GObjObjects()->Data[ 59827 ];

	ASGS_MechWeapon_eventGetDesiredAimPoint_Parms GetDesiredAimPoint_Parms;

	this->ProcessEvent ( pFnGetDesiredAimPoint, &GetDesiredAimPoint_Parms, NULL );

	if ( TargetActor )
		*TargetActor = GetDesiredAimPoint_Parms.TargetActor;

	return GetDesiredAimPoint_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MechWeapon.DrawWeaponCrosshair
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void ASGS_MechWeapon::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 59825 ];

	ASGS_MechWeapon_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.GetCrosshairScaling
// [0x00020102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void ASGS_MechWeapon::GetCrosshairScaling ( class AHUD* HUD )
{
	static UFunction* pFnGetCrosshairScaling = NULL;

	if ( ! pFnGetCrosshairScaling )
		pFnGetCrosshairScaling = (UFunction*) UObject::GObjObjects()->Data[ 59823 ];

	ASGS_MechWeapon_execGetCrosshairScaling_Parms GetCrosshairScaling_Parms;
	GetCrosshairScaling_Parms.HUD = HUD;

	this->ProcessEvent ( pFnGetCrosshairScaling, &GetCrosshairScaling_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.DrawKillIcon
// [0x00022102] 
// Parameters infos:
// class UCanvas*                 Canvas                         ( CPF_Parm )
// float                          ScreenX                        ( CPF_Parm )
// float                          ScreenY                        ( CPF_Parm )
// float                          HUDScaleX                      ( CPF_Parm )
// float                          HUDScaleY                      ( CPF_Parm )

void ASGS_MechWeapon::DrawKillIcon ( class UCanvas* Canvas, float ScreenX, float ScreenY, float HUDScaleX, float HUDScaleY )
{
	static UFunction* pFnDrawKillIcon = NULL;

	if ( ! pFnDrawKillIcon )
		pFnDrawKillIcon = (UFunction*) UObject::GObjObjects()->Data[ 59817 ];

	ASGS_MechWeapon_execDrawKillIcon_Parms DrawKillIcon_Parms;
	DrawKillIcon_Parms.Canvas = Canvas;
	DrawKillIcon_Parms.ScreenX = ScreenX;
	DrawKillIcon_Parms.ScreenY = ScreenY;
	DrawKillIcon_Parms.HUDScaleX = HUDScaleX;
	DrawKillIcon_Parms.HUDScaleY = HUDScaleY;

	this->ProcessEvent ( pFnDrawKillIcon, &DrawKillIcon_Parms, NULL );
};

// Function SGSOrion.SGS_MechWeapon.CanHitDesiredTarget
// [0x00C20102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 SocketLocation                 ( CPF_Parm )
// struct FRotator                SocketRotation                 ( CPF_Parm )
// struct FVector                 DesiredAimPoint                ( CPF_Parm )
// class AActor*                  TargetActor                    ( CPF_Parm )
// struct FVector                 RealAimPoint                   ( CPF_Parm | CPF_OutParm )

bool ASGS_MechWeapon::CanHitDesiredTarget ( struct FVector SocketLocation, struct FRotator SocketRotation, struct FVector DesiredAimPoint, class AActor* TargetActor, struct FVector* RealAimPoint )
{
	static UFunction* pFnCanHitDesiredTarget = NULL;

	if ( ! pFnCanHitDesiredTarget )
		pFnCanHitDesiredTarget = (UFunction*) UObject::GObjObjects()->Data[ 59803 ];

	ASGS_MechWeapon_execCanHitDesiredTarget_Parms CanHitDesiredTarget_Parms;
	memcpy ( &CanHitDesiredTarget_Parms.SocketLocation, &SocketLocation, 0xC );
	memcpy ( &CanHitDesiredTarget_Parms.SocketRotation, &SocketRotation, 0xC );
	memcpy ( &CanHitDesiredTarget_Parms.DesiredAimPoint, &DesiredAimPoint, 0xC );
	CanHitDesiredTarget_Parms.TargetActor = TargetActor;

	this->ProcessEvent ( pFnCanHitDesiredTarget, &CanHitDesiredTarget_Parms, NULL );

	if ( RealAimPoint )
		memcpy ( RealAimPoint, &CanHitDesiredTarget_Parms.RealAimPoint, 0xC );

	return CanHitDesiredTarget_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.ServerGotoState
// [0x002200C2] 
// Parameters infos:
// struct FName                   S                              ( CPF_Parm )

void ASGS_VWeap_VTOLMiniGun::ServerGotoState ( struct FName S )
{
	static UFunction* pFnServerGotoState = NULL;

	if ( ! pFnServerGotoState )
		pFnServerGotoState = (UFunction*) UObject::GObjObjects()->Data[ 63490 ];

	ASGS_VWeap_VTOLMiniGun_execServerGotoState_Parms ServerGotoState_Parms;
	memcpy ( &ServerGotoState_Parms.S, &S, 0x8 );

	this->ProcessEvent ( pFnServerGotoState, &ServerGotoState_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_VWeap_VTOLMiniGun::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 63488 ];

	ASGS_VWeap_VTOLMiniGun_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.ServerResetShots
// [0x002200C2] 
// Parameters infos:

void ASGS_VWeap_VTOLMiniGun::ServerResetShots ( )
{
	static UFunction* pFnServerResetShots = NULL;

	if ( ! pFnServerResetShots )
		pFnServerResetShots = (UFunction*) UObject::GObjObjects()->Data[ 63487 ];

	ASGS_VWeap_VTOLMiniGun_execServerResetShots_Parms ServerResetShots_Parms;

	this->ProcessEvent ( pFnServerResetShots, &ServerResetShots_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.HandleFinishedFiring
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_VTOLMiniGun::HandleFinishedFiring ( )
{
	static UFunction* pFnHandleFinishedFiring = NULL;

	if ( ! pFnHandleFinishedFiring )
		pFnHandleFinishedFiring = (UFunction*) UObject::GObjObjects()->Data[ 63486 ];

	ASGS_VWeap_VTOLMiniGun_execHandleFinishedFiring_Parms HandleFinishedFiring_Parms;

	this->ProcessEvent ( pFnHandleFinishedFiring, &HandleFinishedFiring_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.ShouldRefire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_VWeap_VTOLMiniGun::ShouldRefire ( )
{
	static UFunction* pFnShouldRefire = NULL;

	if ( ! pFnShouldRefire )
		pFnShouldRefire = (UFunction*) UObject::GObjObjects()->Data[ 63484 ];

	ASGS_VWeap_VTOLMiniGun_execShouldRefire_Parms ShouldRefire_Parms;

	this->ProcessEvent ( pFnShouldRefire, &ShouldRefire_Parms, NULL );

	return ShouldRefire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.FireAmmunition
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_VTOLMiniGun::FireAmmunition ( )
{
	static UFunction* pFnFireAmmunition = NULL;

	if ( ! pFnFireAmmunition )
		pFnFireAmmunition = (UFunction*) UObject::GObjObjects()->Data[ 63483 ];

	ASGS_VWeap_VTOLMiniGun_execFireAmmunition_Parms FireAmmunition_Parms;

	this->ProcessEvent ( pFnFireAmmunition, &FireAmmunition_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_VWeap_VTOLMiniGun::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 63481 ];

	ASGS_VWeap_VTOLMiniGun_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.UpdateGunRotation
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_VWeap_VTOLMiniGun::UpdateGunRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateGunRotation = NULL;

	if ( ! pFnUpdateGunRotation )
		pFnUpdateGunRotation = (UFunction*) UObject::GObjObjects()->Data[ 63477 ];

	ASGS_VWeap_VTOLMiniGun_execUpdateGunRotation_Parms UpdateGunRotation_Parms;
	UpdateGunRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateGunRotation, &UpdateGunRotation_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.SetCurrentFireMode
// [0x00020102] 
// Parameters infos:
// unsigned char                  FiringModeNum                  ( CPF_Parm )

void ASGS_VWeap_VTOLMiniGun::SetCurrentFireMode ( unsigned char FiringModeNum )
{
	static UFunction* pFnSetCurrentFireMode = NULL;

	if ( ! pFnSetCurrentFireMode )
		pFnSetCurrentFireMode = (UFunction*) UObject::GObjObjects()->Data[ 63472 ];

	ASGS_VWeap_VTOLMiniGun_execSetCurrentFireMode_Parms SetCurrentFireMode_Parms;
	SetCurrentFireMode_Parms.FiringModeNum = FiringModeNum;

	this->ProcessEvent ( pFnSetCurrentFireMode, &SetCurrentFireMode_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.PlayFiringSound
// [0x00020100] 
// Parameters infos:

void ASGS_VWeap_VTOLMiniGun::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 63471 ];

	ASGS_VWeap_VTOLMiniGun_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ASGS_VWeap_VTOLMiniGun::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 63469 ];

	ASGS_VWeap_VTOLMiniGun_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.LoadRocket
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_VTOLMiniGun::LoadRocket ( )
{
	static UFunction* pFnLoadRocket = NULL;

	if ( ! pFnLoadRocket )
		pFnLoadRocket = (UFunction*) UObject::GObjObjects()->Data[ 63468 ];

	ASGS_VWeap_VTOLMiniGun_execLoadRocket_Parms LoadRocket_Parms;

	this->ProcessEvent ( pFnLoadRocket, &LoadRocket_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_VTOLMiniGun.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_VWeap_VTOLMiniGun::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 63465 ];

	ASGS_VWeap_VTOLMiniGun_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_MiniGun.PlayFiringSound
// [0x00020100] 
// Parameters infos:

void ASGS_VWeap_MiniGun::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 63436 ];

	ASGS_VWeap_MiniGun_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.UpdateGunRotation
// [0x00820102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_VWeap_MiniGun::UpdateGunRotation ( float DeltaTime )
{
	static UFunction* pFnUpdateGunRotation = NULL;

	if ( ! pFnUpdateGunRotation )
		pFnUpdateGunRotation = (UFunction*) UObject::GObjObjects()->Data[ 63432 ];

	ASGS_VWeap_MiniGun_execUpdateGunRotation_Parms UpdateGunRotation_Parms;
	UpdateGunRotation_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateGunRotation, &UpdateGunRotation_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.HandleFinishedFiring
// [0x00020100] 
// Parameters infos:

void ASGS_VWeap_MiniGun::HandleFinishedFiring ( )
{
	static UFunction* pFnHandleFinishedFiring = NULL;

	if ( ! pFnHandleFinishedFiring )
		pFnHandleFinishedFiring = (UFunction*) UObject::GObjObjects()->Data[ 63431 ];

	ASGS_VWeap_MiniGun_execHandleFinishedFiring_Parms HandleFinishedFiring_Parms;

	this->ProcessEvent ( pFnHandleFinishedFiring, &HandleFinishedFiring_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.UpdateHUD
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_MiniGun::UpdateHUD ( )
{
	static UFunction* pFnUpdateHUD = NULL;

	if ( ! pFnUpdateHUD )
		pFnUpdateHUD = (UFunction*) UObject::GObjObjects()->Data[ 63425 ];

	ASGS_VWeap_MiniGun_execUpdateHUD_Parms UpdateHUD_Parms;

	this->ProcessEvent ( pFnUpdateHUD, &UpdateHUD_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.Tick
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_VWeap_MiniGun::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 63391 ];

	ASGS_VWeap_MiniGun_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.PlayImpactEffects
// [0x00020100] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_VWeap_MiniGun::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 63389 ];

	ASGS_VWeap_MiniGun_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_MiniGun.DrawWeaponCrosshair
// [0x00020100] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )

void ASGS_VWeap_MiniGun::DrawWeaponCrosshair ( class AHUD* HUD )
{
	static UFunction* pFnDrawWeaponCrosshair = NULL;

	if ( ! pFnDrawWeaponCrosshair )
		pFnDrawWeaponCrosshair = (UFunction*) UObject::GObjObjects()->Data[ 63387 ];

	ASGS_VWeap_MiniGun_execDrawWeaponCrosshair_Parms DrawWeaponCrosshair_Parms;
	DrawWeaponCrosshair_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDrawWeaponCrosshair, &DrawWeaponCrosshair_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleWeapon.AddAimKick
// [0x00820102] 
// Parameters infos:
// struct FRotator                AimKick                        ( CPF_Parm )

void ASGS_VehicleWeapon::AddAimKick ( struct FRotator AimKick )
{
	static UFunction* pFnAddAimKick = NULL;

	if ( ! pFnAddAimKick )
		pFnAddAimKick = (UFunction*) UObject::GObjObjects()->Data[ 63257 ];

	ASGS_VehicleWeapon_execAddAimKick_Parms AddAimKick_Parms;
	memcpy ( &AddAimKick_Parms.AimKick, &AimKick, 0xC );

	this->ProcessEvent ( pFnAddAimKick, &AddAimKick_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleWeapon.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_VehicleWeapon::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 63255 ];

	ASGS_VehicleWeapon_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.OnGameModeChange
// [0x00020000] 
// Parameters infos:
// class UGFxObject*              DDGameMode                     ( CPF_Parm )
// int                            SelectedIndex                  ( CPF_Parm )

void USGS_GFxMainMenu::OnGameModeChange ( class UGFxObject* DDGameMode, int SelectedIndex )
{
	static UFunction* pFnOnGameModeChange = NULL;

	if ( ! pFnOnGameModeChange )
		pFnOnGameModeChange = (UFunction*) UObject::GObjObjects()->Data[ 58812 ];

	USGS_GFxMainMenu_execOnGameModeChange_Parms OnGameModeChange_Parms;
	OnGameModeChange_Parms.DDGameMode = DDGameMode;
	OnGameModeChange_Parms.SelectedIndex = SelectedIndex;

	this->ProcessEvent ( pFnOnGameModeChange, &OnGameModeChange_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.ShowGameModes
// [0x00820002] 
// Parameters infos:
// class UGFxObject*              gfxGameModeList                ( CPF_Parm )

void USGS_GFxMainMenu::ShowGameModes ( class UGFxObject* gfxGameModeList )
{
	static UFunction* pFnShowGameModes = NULL;

	if ( ! pFnShowGameModes )
		pFnShowGameModes = (UFunction*) UObject::GObjObjects()->Data[ 58803 ];

	USGS_GFxMainMenu_execShowGameModes_Parms ShowGameModes_Parms;
	ShowGameModes_Parms.gfxGameModeList = gfxGameModeList;

	this->ProcessEvent ( pFnShowGameModes, &ShowGameModes_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.ShowLevelNames
// [0x00820002] 
// Parameters infos:
// class UGFxObject*              LevelList                      ( CPF_Parm )

void USGS_GFxMainMenu::ShowLevelNames ( class UGFxObject* LevelList )
{
	static UFunction* pFnShowLevelNames = NULL;

	if ( ! pFnShowLevelNames )
		pFnShowLevelNames = (UFunction*) UObject::GObjObjects()->Data[ 58794 ];

	USGS_GFxMainMenu_execShowLevelNames_Parms ShowLevelNames_Parms;
	ShowLevelNames_Parms.LevelList = LevelList;

	this->ProcessEvent ( pFnShowLevelNames, &ShowLevelNames_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.OnGameCreated
// [0x00020002] 
// Parameters infos:
// struct FName                   SessionName                    ( CPF_Parm )
// unsigned long                  bWasSuccessful                 ( CPF_Parm )

void USGS_GFxMainMenu::OnGameCreated ( struct FName SessionName, unsigned long bWasSuccessful )
{
	static UFunction* pFnOnGameCreated = NULL;

	if ( ! pFnOnGameCreated )
		pFnOnGameCreated = (UFunction*) UObject::GObjObjects()->Data[ 58787 ];

	USGS_GFxMainMenu_execOnGameCreated_Parms OnGameCreated_Parms;
	memcpy ( &OnGameCreated_Parms.SessionName, &SessionName, 0x8 );
	OnGameCreated_Parms.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent ( pFnOnGameCreated, &OnGameCreated_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.Create
// [0x00020002] 
// Parameters infos:
// struct FString                 URL                            ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxMainMenu::Create ( struct FString URL )
{
	static UFunction* pFnCreate = NULL;

	if ( ! pFnCreate )
		pFnCreate = (UFunction*) UObject::GObjObjects()->Data[ 58783 ];

	USGS_GFxMainMenu_execCreate_Parms Create_Parms;
	memcpy ( &Create_Parms.URL, &URL, 0xC );

	this->ProcessEvent ( pFnCreate, &Create_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.SetupGameSettings
// [0x00020002] 
// Parameters infos:

void USGS_GFxMainMenu::SetupGameSettings ( )
{
	static UFunction* pFnSetupGameSettings = NULL;

	if ( ! pFnSetupGameSettings )
		pFnSetupGameSettings = (UFunction*) UObject::GObjObjects()->Data[ 58780 ];

	USGS_GFxMainMenu_execSetupGameSettings_Parms SetupGameSettings_Parms;

	this->ProcessEvent ( pFnSetupGameSettings, &SetupGameSettings_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.ValidateServerType
// [0x00020002] 
// Parameters infos:

void USGS_GFxMainMenu::ValidateServerType ( )
{
	static UFunction* pFnValidateServerType = NULL;

	if ( ! pFnValidateServerType )
		pFnValidateServerType = (UFunction*) UObject::GObjObjects()->Data[ 58778 ];

	USGS_GFxMainMenu_execValidateServerType_Parms ValidateServerType_Parms;

	this->ProcessEvent ( pFnValidateServerType, &ValidateServerType_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.join
// [0x00020002] 
// Parameters infos:
// int                            SelectedIndex                  ( CPF_Parm )
// struct FString                 IP                             ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxMainMenu::join ( int SelectedIndex, struct FString IP )
{
	static UFunction* pFnjoin = NULL;

	if ( ! pFnjoin )
		pFnjoin = (UFunction*) UObject::GObjObjects()->Data[ 58775 ];

	USGS_GFxMainMenu_execjoin_Parms join_Parms;
	join_Parms.SelectedIndex = SelectedIndex;
	memcpy ( &join_Parms.IP, &IP, 0xC );

	this->ProcessEvent ( pFnjoin, &join_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.OnRefresh
// [0x00020002] 
// Parameters infos:

void USGS_GFxMainMenu::OnRefresh ( )
{
	static UFunction* pFnOnRefresh = NULL;

	if ( ! pFnOnRefresh )
		pFnOnRefresh = (UFunction*) UObject::GObjObjects()->Data[ 58774 ];

	USGS_GFxMainMenu_execOnRefresh_Parms OnRefresh_Parms;

	this->ProcessEvent ( pFnOnRefresh, &OnRefresh_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.OnQuit
// [0x00020002] 
// Parameters infos:

void USGS_GFxMainMenu::OnQuit ( )
{
	static UFunction* pFnOnQuit = NULL;

	if ( ! pFnOnQuit )
		pFnOnQuit = (UFunction*) UObject::GObjObjects()->Data[ 58773 ];

	USGS_GFxMainMenu_execOnQuit_Parms OnQuit_Parms;

	this->ProcessEvent ( pFnOnQuit, &OnQuit_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.Init
// [0x00024002] 
// Parameters infos:
// class ULocalPlayer*            LocPlay                        ( CPF_OptionalParm | CPF_Parm )

void USGS_GFxMainMenu::Init ( class ULocalPlayer* LocPlay )
{
	static UFunction* pFnInit = NULL;

	if ( ! pFnInit )
		pFnInit = (UFunction*) UObject::GObjObjects()->Data[ 58770 ];

	USGS_GFxMainMenu_execInit_Parms Init_Parms;
	Init_Parms.LocPlay = LocPlay;

	this->ProcessEvent ( pFnInit, &Init_Parms, NULL );
};

// Function SGSOrion.SGS_GFxMainMenu.GetPlayerControllerId
// [0x00020002] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            PlayerIndex                    ( CPF_Parm )

int USGS_GFxMainMenu::GetPlayerControllerId ( int PlayerIndex )
{
	static UFunction* pFnGetPlayerControllerId = NULL;

	if ( ! pFnGetPlayerControllerId )
		pFnGetPlayerControllerId = (UFunction*) UObject::GObjObjects()->Data[ 58767 ];

	USGS_GFxMainMenu_execGetPlayerControllerId_Parms GetPlayerControllerId_Parms;
	GetPlayerControllerId_Parms.PlayerIndex = PlayerIndex;

	this->ProcessEvent ( pFnGetPlayerControllerId, &GetPlayerControllerId_Parms, NULL );

	return GetPlayerControllerId_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxMainMenu.GetStringFromMarkup
// [0x00022002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// struct FString                 MarkupString                   ( CPF_Parm | CPF_NeedCtorLink )

struct FString USGS_GFxMainMenu::GetStringFromMarkup ( struct FString MarkupString )
{
	static UFunction* pFnGetStringFromMarkup = NULL;

	if ( ! pFnGetStringFromMarkup )
		pFnGetStringFromMarkup = (UFunction*) UObject::GObjObjects()->Data[ 58763 ];

	USGS_GFxMainMenu_execGetStringFromMarkup_Parms GetStringFromMarkup_Parms;
	memcpy ( &GetStringFromMarkup_Parms.MarkupString, &MarkupString, 0xC );

	this->ProcessEvent ( pFnGetStringFromMarkup, &GetStringFromMarkup_Parms, NULL );

	return GetStringFromMarkup_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxNotification.PlayCloseAnimation
// [0x00020000] 
// Parameters infos:

void USGS_GFxNotification::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 58845 ];

	USGS_GFxNotification_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxNotification.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:
// struct FString                 HeaderText                     ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 BodyText                       ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 OkText                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FString                 NoText                         ( CPF_Parm | CPF_NeedCtorLink )
// struct FScriptDelegate         OnOkPressed                    ( CPF_Parm | CPF_NeedCtorLink )
// struct FScriptDelegate         OnNoPressed                    ( CPF_Parm | CPF_NeedCtorLink )

void USGS_GFxNotification::PlayOpenAnimation ( struct FString HeaderText, struct FString BodyText, struct FString OkText, struct FString NoText, struct FScriptDelegate OnOkPressed, struct FScriptDelegate OnNoPressed )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 58838 ];

	USGS_GFxNotification_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;
	memcpy ( &PlayOpenAnimation_Parms.HeaderText, &HeaderText, 0xC );
	memcpy ( &PlayOpenAnimation_Parms.BodyText, &BodyText, 0xC );
	memcpy ( &PlayOpenAnimation_Parms.OkText, &OkText, 0xC );
	memcpy ( &PlayOpenAnimation_Parms.NoText, &NoText, 0xC );
	memcpy ( &PlayOpenAnimation_Parms.OnOkPressed, &OnOkPressed, 0xC );
	memcpy ( &PlayOpenAnimation_Parms.OnNoPressed, &OnNoPressed, 0xC );

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxNotification.PlayMenuSound
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 SoundName                      ( CPF_Parm | CPF_NeedCtorLink )

bool USGS_GFxNotification::eventPlayMenuSound ( struct FString SoundName )
{
	static UFunction* pFnPlayMenuSound = NULL;

	if ( ! pFnPlayMenuSound )
		pFnPlayMenuSound = (UFunction*) UObject::GObjObjects()->Data[ 58835 ];

	USGS_GFxNotification_eventPlayMenuSound_Parms PlayMenuSound_Parms;
	memcpy ( &PlayMenuSound_Parms.SoundName, &SoundName, 0xC );

	this->ProcessEvent ( pFnPlayMenuSound, &PlayMenuSound_Parms, NULL );

	return PlayMenuSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxNotification.WidgetInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FString                 WidgetName                     ( CPF_Parm | CPF_NeedCtorLink )
// class UGFxObject*              Widget                         ( CPF_Parm )

bool USGS_GFxNotification::eventWidgetInit ( struct FString WidgetName, class UGFxObject* Widget )
{
	static UFunction* pFnWidgetInit = NULL;

	if ( ! pFnWidgetInit )
		pFnWidgetInit = (UFunction*) UObject::GObjObjects()->Data[ 58831 ];

	USGS_GFxNotification_eventWidgetInit_Parms WidgetInit_Parms;
	memcpy ( &WidgetInit_Parms.WidgetName, &WidgetName, 0xC );
	WidgetInit_Parms.Widget = Widget;

	this->ProcessEvent ( pFnWidgetInit, &WidgetInit_Parms, NULL );

	return WidgetInit_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxNotification.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GFxNotification::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 58828 ];

	USGS_GFxNotification_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_GFxNotification.NoPressed
// [0x00120000] 
// Parameters infos:

void USGS_GFxNotification::NoPressed ( )
{
	static UFunction* pFnNoPressed = NULL;

	if ( ! pFnNoPressed )
		pFnNoPressed = (UFunction*) UObject::GObjObjects()->Data[ 58820 ];

	USGS_GFxNotification_execNoPressed_Parms NoPressed_Parms;

	this->ProcessEvent ( pFnNoPressed, &NoPressed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxNotification.OkPressed
// [0x00120000] 
// Parameters infos:

void USGS_GFxNotification::OkPressed ( )
{
	static UFunction* pFnOkPressed = NULL;

	if ( ! pFnOkPressed )
		pFnOkPressed = (UFunction*) UObject::GObjObjects()->Data[ 58822 ];

	USGS_GFxNotification_execOkPressed_Parms OkPressed_Parms;

	this->ProcessEvent ( pFnOkPressed, &OkPressed_Parms, NULL );
};

// Function SGSOrion.SGS_GFxScoreScreen.RemoveAttachedObject
// [0x00820002] 
// Parameters infos:
// class UGFxObject*              Obj                            ( CPF_Parm )

void USGS_GFxScoreScreen::RemoveAttachedObject ( class UGFxObject* Obj )
{
	static UFunction* pFnRemoveAttachedObject = NULL;

	if ( ! pFnRemoveAttachedObject )
		pFnRemoveAttachedObject = (UFunction*) UObject::GObjObjects()->Data[ 58867 ];

	USGS_GFxScoreScreen_execRemoveAttachedObject_Parms RemoveAttachedObject_Parms;
	RemoveAttachedObject_Parms.Obj = Obj;

	this->ProcessEvent ( pFnRemoveAttachedObject, &RemoveAttachedObject_Parms, NULL );
};

// Function SGSOrion.SGS_GFxScoreScreen.PlayCloseAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxScoreScreen::PlayCloseAnimation ( )
{
	static UFunction* pFnPlayCloseAnimation = NULL;

	if ( ! pFnPlayCloseAnimation )
		pFnPlayCloseAnimation = (UFunction*) UObject::GObjObjects()->Data[ 58865 ];

	USGS_GFxScoreScreen_execPlayCloseAnimation_Parms PlayCloseAnimation_Parms;

	this->ProcessEvent ( pFnPlayCloseAnimation, &PlayCloseAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxScoreScreen.PlayOpenAnimation
// [0x00020002] 
// Parameters infos:

void USGS_GFxScoreScreen::PlayOpenAnimation ( )
{
	static UFunction* pFnPlayOpenAnimation = NULL;

	if ( ! pFnPlayOpenAnimation )
		pFnPlayOpenAnimation = (UFunction*) UObject::GObjObjects()->Data[ 58861 ];

	USGS_GFxScoreScreen_execPlayOpenAnimation_Parms PlayOpenAnimation_Parms;

	this->ProcessEvent ( pFnPlayOpenAnimation, &PlayOpenAnimation_Parms, NULL );
};

// Function SGSOrion.SGS_GFxScoreScreen.Start
// [0x00024002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  StartPaused                    ( CPF_OptionalParm | CPF_Parm )

bool USGS_GFxScoreScreen::Start ( unsigned long StartPaused )
{
	static UFunction* pFnStart = NULL;

	if ( ! pFnStart )
		pFnStart = (UFunction*) UObject::GObjObjects()->Data[ 58858 ];

	USGS_GFxScoreScreen_execStart_Parms Start_Parms;
	Start_Parms.StartPaused = StartPaused;

	this->ProcessEvent ( pFnStart, &Start_Parms, NULL );

	return Start_Parms.ReturnValue;
};

// Function SGSOrion.SGS_MusicManager.ChangeSoundTrack
// [0x00020002] 
// Parameters infos:
// unsigned char                  NewState                       ( CPF_Parm )

void ASGS_MusicManager::ChangeSoundTrack ( unsigned char NewState )
{
	static UFunction* pFnChangeSoundTrack = NULL;

	if ( ! pFnChangeSoundTrack )
		pFnChangeSoundTrack = (UFunction*) UObject::GObjObjects()->Data[ 60068 ];

	ASGS_MusicManager_execChangeSoundTrack_Parms ChangeSoundTrack_Parms;
	ChangeSoundTrack_Parms.NewState = NewState;

	this->ProcessEvent ( pFnChangeSoundTrack, &ChangeSoundTrack_Parms, NULL );
};

// Function SGSOrion.SGS_MusicManager.DecideWhichTrackToPlay
// [0x00020002] 
// Parameters infos:

void ASGS_MusicManager::DecideWhichTrackToPlay ( )
{
	static UFunction* pFnDecideWhichTrackToPlay = NULL;

	if ( ! pFnDecideWhichTrackToPlay )
		pFnDecideWhichTrackToPlay = (UFunction*) UObject::GObjObjects()->Data[ 60062 ];

	ASGS_MusicManager_execDecideWhichTrackToPlay_Parms DecideWhichTrackToPlay_Parms;

	this->ProcessEvent ( pFnDecideWhichTrackToPlay, &DecideWhichTrackToPlay_Parms, NULL );
};

// Function SGSOrion.SGS_MusicManager.Tick
// [0x00020002] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_MusicManager::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 60059 ];

	ASGS_MusicManager_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_MusicManager.IntroFinished
// [0x00020002] 
// Parameters infos:
// class UAudioComponent*         AC                             ( CPF_Parm | CPF_EditInline )

void ASGS_MusicManager::IntroFinished ( class UAudioComponent* AC )
{
	static UFunction* pFnIntroFinished = NULL;

	if ( ! pFnIntroFinished )
		pFnIntroFinished = (UFunction*) UObject::GObjObjects()->Data[ 60057 ];

	ASGS_MusicManager_execIntroFinished_Parms IntroFinished_Parms;
	IntroFinished_Parms.AC = AC;

	this->ProcessEvent ( pFnIntroFinished, &IntroFinished_Parms, NULL );
};

// Function SGSOrion.SGS_MusicManager.StartMusic
// [0x00020002] 
// Parameters infos:

void ASGS_MusicManager::StartMusic ( )
{
	static UFunction* pFnStartMusic = NULL;

	if ( ! pFnStartMusic )
		pFnStartMusic = (UFunction*) UObject::GObjObjects()->Data[ 60051 ];

	ASGS_MusicManager_execStartMusic_Parms StartMusic_Parms;

	this->ProcessEvent ( pFnStartMusic, &StartMusic_Parms, NULL );
};

// Function SGSOrion.SGS_HudDinoAttack.TextPostRender
// [0x00020002] 
// Parameters infos:

void ASGS_HudDinoAttack::TextPostRender ( )
{
	static UFunction* pFnTextPostRender = NULL;

	if ( ! pFnTextPostRender )
		pFnTextPostRender = (UFunction*) UObject::GObjObjects()->Data[ 59010 ];

	ASGS_HudDinoAttack_execTextPostRender_Parms TextPostRender_Parms;

	this->ProcessEvent ( pFnTextPostRender, &TextPostRender_Parms, NULL );
};

// Function SGSOrion.SGS_Inventory.DropFrom
// [0x00020002] 
// Parameters infos:
// struct FVector                 StartLocation                  ( CPF_Parm )
// struct FVector                 StartVelocity                  ( CPF_Parm )

void ASGS_Inventory::DropFrom ( struct FVector StartLocation, struct FVector StartVelocity )
{
	static UFunction* pFnDropFrom = NULL;

	if ( ! pFnDropFrom )
		pFnDropFrom = (UFunction*) UObject::GObjObjects()->Data[ 59031 ];

	ASGS_Inventory_execDropFrom_Parms DropFrom_Parms;
	memcpy ( &DropFrom_Parms.StartLocation, &StartLocation, 0xC );
	memcpy ( &DropFrom_Parms.StartVelocity, &StartVelocity, 0xC );

	this->ProcessEvent ( pFnDropFrom, &DropFrom_Parms, NULL );
};

// Function SGSOrion.SGS_InventoryManager.GetBestWeapon
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceADifferentWeapon         ( CPF_OptionalParm | CPF_Parm )

class AWeapon* ASGS_InventoryManager::GetBestWeapon ( unsigned long bForceADifferentWeapon )
{
	static UFunction* pFnGetBestWeapon = NULL;

	if ( ! pFnGetBestWeapon )
		pFnGetBestWeapon = (UFunction*) UObject::GObjObjects()->Data[ 59146 ];

	ASGS_InventoryManager_execGetBestWeapon_Parms GetBestWeapon_Parms;
	GetBestWeapon_Parms.bForceADifferentWeapon = bForceADifferentWeapon;

	this->ProcessEvent ( pFnGetBestWeapon, &GetBestWeapon_Parms, NULL );

	return GetBestWeapon_Parms.ReturnValue;
};

// Function SGSOrion.SGS_InventoryManager.RemoveFromInventory
// [0x00020102] 
// Parameters infos:
// class AInventory*              ItemToRemove                   ( CPF_Parm )

void ASGS_InventoryManager::RemoveFromInventory ( class AInventory* ItemToRemove )
{
	static UFunction* pFnRemoveFromInventory = NULL;

	if ( ! pFnRemoveFromInventory )
		pFnRemoveFromInventory = (UFunction*) UObject::GObjObjects()->Data[ 59142 ];

	ASGS_InventoryManager_execRemoveFromInventory_Parms RemoveFromInventory_Parms;
	RemoveFromInventory_Parms.ItemToRemove = ItemToRemove;

	this->ProcessEvent ( pFnRemoveFromInventory, &RemoveFromInventory_Parms, NULL );
};

// Function SGSOrion.SGS_InventoryManager.ClientSetLastGroup
// [0x010201C2] 
// Parameters infos:
// int                            G                              ( CPF_Parm )

void ASGS_InventoryManager::ClientSetLastGroup ( int G )
{
	static UFunction* pFnClientSetLastGroup = NULL;

	if ( ! pFnClientSetLastGroup )
		pFnClientSetLastGroup = (UFunction*) UObject::GObjObjects()->Data[ 59140 ];

	ASGS_InventoryManager_execClientSetLastGroup_Parms ClientSetLastGroup_Parms;
	ClientSetLastGroup_Parms.G = G;

	this->ProcessEvent ( pFnClientSetLastGroup, &ClientSetLastGroup_Parms, NULL );
};

// Function SGSOrion.SGS_LockdownMessage.GetColor
// [0x00026002] 
// Parameters infos:
// struct FColor                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FColor USGS_LockdownMessage::GetColor ( int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetColor = NULL;

	if ( ! pFnGetColor )
		pFnGetColor = (UFunction*) UObject::GObjObjects()->Data[ 59293 ];

	USGS_LockdownMessage_execGetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI01 = RelatedPRI01;
	GetColor_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetColor, &GetColor_Parms, NULL );

	return GetColor_Parms.ReturnValue;
};

// Function SGSOrion.SGS_LockdownMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_LockdownMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 59286 ];

	USGS_LockdownMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_LockdownMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_LockdownMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 59281 ];

	USGS_LockdownMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_LockdownMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_LockdownMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 59274 ];

	USGS_LockdownMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_LockdownMessage.AnnouncementLevel
// [0x00022002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  MessageIndex                   ( CPF_Parm )

unsigned char USGS_LockdownMessage::AnnouncementLevel ( unsigned char MessageIndex )
{
	static UFunction* pFnAnnouncementLevel = NULL;

	if ( ! pFnAnnouncementLevel )
		pFnAnnouncementLevel = (UFunction*) UObject::GObjObjects()->Data[ 59271 ];

	USGS_LockdownMessage_execAnnouncementLevel_Parms AnnouncementLevel_Parms;
	AnnouncementLevel_Parms.MessageIndex = MessageIndex;

	this->ProcessEvent ( pFnAnnouncementLevel, &AnnouncementLevel_Parms, NULL );

	return AnnouncementLevel_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Proj_HomingRocket.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Proj_HomingRocket::eventTick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 61260 ];

	ASGS_Proj_HomingRocket_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_PickupCash.SpawnCopyFor
// [0x00020002] 
// Parameters infos:
// class APawn*                   Recipient                      ( CPF_Parm )

void ASGS_PickupCash::SpawnCopyFor ( class APawn* Recipient )
{
	static UFunction* pFnSpawnCopyFor = NULL;

	if ( ! pFnSpawnCopyFor )
		pFnSpawnCopyFor = (UFunction*) UObject::GObjObjects()->Data[ 60918 ];

	ASGS_PickupCash_execSpawnCopyFor_Parms SpawnCopyFor_Parms;
	SpawnCopyFor_Parms.Recipient = Recipient;

	this->ProcessEvent ( pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL );
};

// Function SGSOrion.SGS_PickupCash.GiveTo
// [0x00020002] 
// Parameters infos:
// class APawn*                   P                              ( CPF_Parm )

void ASGS_PickupCash::GiveTo ( class APawn* P )
{
	static UFunction* pFnGiveTo = NULL;

	if ( ! pFnGiveTo )
		pFnGiveTo = (UFunction*) UObject::GObjObjects()->Data[ 60916 ];

	ASGS_PickupCash_execGiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.P = P;

	this->ProcessEvent ( pFnGiveTo, &GiveTo_Parms, NULL );
};

// Function SGSOrion.SGS_PickupCash.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_PickupCash::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 60915 ];

	ASGS_PickupCash_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.WeaponFired
// [0x00024102] 
// Parameters infos:
// class AWeapon*                 InWeapon                       ( CPF_Parm )
// unsigned long                  bViaReplication                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle_Sceptor::WeaponFired ( class AWeapon* InWeapon, unsigned long bViaReplication, struct FVector HitLocation )
{
	static UFunction* pFnWeaponFired = NULL;

	if ( ! pFnWeaponFired )
		pFnWeaponFired = (UFunction*) UObject::GObjObjects()->Data[ 62785 ];

	ASGS_Vehicle_Sceptor_execWeaponFired_Parms WeaponFired_Parms;
	WeaponFired_Parms.InWeapon = InWeapon;
	WeaponFired_Parms.bViaReplication = bViaReplication;
	memcpy ( &WeaponFired_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnWeaponFired, &WeaponFired_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.BlowupVehicle
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Sceptor::BlowupVehicle ( )
{
	static UFunction* pFnBlowupVehicle = NULL;

	if ( ! pFnBlowupVehicle )
		pFnBlowupVehicle = (UFunction*) UObject::GObjObjects()->Data[ 62784 ];

	ASGS_Vehicle_Sceptor_execBlowupVehicle_Parms BlowupVehicle_Parms;

	this->ProcessEvent ( pFnBlowupVehicle, &BlowupVehicle_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.DrivingStatusChanged
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Sceptor::DrivingStatusChanged ( )
{
	static UFunction* pFnDrivingStatusChanged = NULL;

	if ( ! pFnDrivingStatusChanged )
		pFnDrivingStatusChanged = (UFunction*) UObject::GObjObjects()->Data[ 62783 ];

	ASGS_Vehicle_Sceptor_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

	this->ProcessEvent ( pFnDrivingStatusChanged, &DrivingStatusChanged_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:
// int                            Damage                         ( CPF_Parm )
// class AController*             EventInstigator                ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 Momentum                       ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// struct FTraceHitInfo           HitInfo                        ( CPF_OptionalParm | CPF_Parm )
// class AActor*                  DamageCauser                   ( CPF_OptionalParm | CPF_Parm )

void ASGS_Vehicle_Sceptor::eventTakeDamage ( int Damage, class AController* EventInstigator, struct FVector HitLocation, struct FVector Momentum, class UClass* DamageType, struct FTraceHitInfo HitInfo, class AActor* DamageCauser )
{
	static UFunction* pFnTakeDamage = NULL;

	if ( ! pFnTakeDamage )
		pFnTakeDamage = (UFunction*) UObject::GObjObjects()->Data[ 62775 ];

	ASGS_Vehicle_Sceptor_eventTakeDamage_Parms TakeDamage_Parms;
	TakeDamage_Parms.Damage = Damage;
	TakeDamage_Parms.EventInstigator = EventInstigator;
	memcpy ( &TakeDamage_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &TakeDamage_Parms.Momentum, &Momentum, 0xC );
	TakeDamage_Parms.DamageType = DamageType;
	memcpy ( &TakeDamage_Parms.HitInfo, &HitInfo, 0x1C );
	TakeDamage_Parms.DamageCauser = DamageCauser;

	this->ProcessEvent ( pFnTakeDamage, &TakeDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.SetVehicleEffectParms
// [0x00020102] 
// Parameters infos:
// struct FName                   TriggerName                    ( CPF_Parm )
// class UParticleSystemComponent* PSC                            ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_Sceptor::SetVehicleEffectParms ( struct FName TriggerName, class UParticleSystemComponent* PSC )
{
	static UFunction* pFnSetVehicleEffectParms = NULL;

	if ( ! pFnSetVehicleEffectParms )
		pFnSetVehicleEffectParms = (UFunction*) UObject::GObjObjects()->Data[ 62772 ];

	ASGS_Vehicle_Sceptor_execSetVehicleEffectParms_Parms SetVehicleEffectParms_Parms;
	memcpy ( &SetVehicleEffectParms_Parms.TriggerName, &TriggerName, 0x8 );
	SetVehicleEffectParms_Parms.PSC = PSC;

	this->ProcessEvent ( pFnSetVehicleEffectParms, &SetVehicleEffectParms_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.MantaDuckEffect
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle_Sceptor::eventMantaDuckEffect ( )
{
	static UFunction* pFnMantaDuckEffect = NULL;

	if ( ! pFnMantaDuckEffect )
		pFnMantaDuckEffect = (UFunction*) UObject::GObjObjects()->Data[ 62771 ];

	ASGS_Vehicle_Sceptor_eventMantaDuckEffect_Parms MantaDuckEffect_Parms;

	this->ProcessEvent ( pFnMantaDuckEffect, &MantaDuckEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.MantaJumpEffect
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASGS_Vehicle_Sceptor::eventMantaJumpEffect ( )
{
	static UFunction* pFnMantaJumpEffect = NULL;

	if ( ! pFnMantaJumpEffect )
		pFnMantaJumpEffect = (UFunction*) UObject::GObjObjects()->Data[ 62770 ];

	ASGS_Vehicle_Sceptor_eventMantaJumpEffect_Parms MantaJumpEffect_Parms;

	this->ProcessEvent ( pFnMantaJumpEffect, &MantaJumpEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.InitializeEffects
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Sceptor::InitializeEffects ( )
{
	static UFunction* pFnInitializeEffects = NULL;

	if ( ! pFnInitializeEffects )
		pFnInitializeEffects = (UFunction*) UObject::GObjObjects()->Data[ 62769 ];

	ASGS_Vehicle_Sceptor_execInitializeEffects_Parms InitializeEffects_Parms;

	this->ProcessEvent ( pFnInitializeEffects, &InitializeEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.RecommendCharge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTBot*                  B                              ( CPF_Parm )
// class APawn*                   Enemy                          ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::RecommendCharge ( class AUTBot* B, class APawn* Enemy )
{
	static UFunction* pFnRecommendCharge = NULL;

	if ( ! pFnRecommendCharge )
		pFnRecommendCharge = (UFunction*) UObject::GObjObjects()->Data[ 62765 ];

	ASGS_Vehicle_Sceptor_execRecommendCharge_Parms RecommendCharge_Parms;
	RecommendCharge_Parms.B = B;
	RecommendCharge_Parms.Enemy = Enemy;

	this->ProcessEvent ( pFnRecommendCharge, &RecommendCharge_Parms, NULL );

	return RecommendCharge_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.TooCloseToAttack
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AActor*                  Other                          ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::TooCloseToAttack ( class AActor* Other )
{
	static UFunction* pFnTooCloseToAttack = NULL;

	if ( ! pFnTooCloseToAttack )
		pFnTooCloseToAttack = (UFunction*) UObject::GObjObjects()->Data[ 62760 ];

	ASGS_Vehicle_Sceptor_execTooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;

	this->ProcessEvent ( pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL );

	return TooCloseToAttack_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.ShouldClamp
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

bool ASGS_Vehicle_Sceptor::ShouldClamp ( )
{
	static UFunction* pFnShouldClamp = NULL;

	if ( ! pFnShouldClamp )
		pFnShouldClamp = (UFunction*) UObject::GObjObjects()->Data[ 62758 ];

	ASGS_Vehicle_Sceptor_execShouldClamp_Parms ShouldClamp_Parms;

	this->ProcessEvent ( pFnShouldClamp, &ShouldClamp_Parms, NULL );

	return ShouldClamp_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_Sceptor::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 62753 ];

	ASGS_Vehicle_Sceptor_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.GetChargePower
// [0x00020102] 
// Parameters infos:
// float                          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

float ASGS_Vehicle_Sceptor::GetChargePower ( )
{
	static UFunction* pFnGetChargePower = NULL;

	if ( ! pFnGetChargePower )
		pFnGetChargePower = (UFunction*) UObject::GObjObjects()->Data[ 62751 ];

	ASGS_Vehicle_Sceptor_execGetChargePower_Parms GetChargePower_Parms;

	this->ProcessEvent ( pFnGetChargePower, &GetChargePower_Parms, NULL );

	return GetChargePower_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle_Sceptor::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62749 ];

	ASGS_Vehicle_Sceptor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.DriverLeave
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 62746 ];

	ASGS_Vehicle_Sceptor_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.IncomingMissile
// [0x00020002] 
// Parameters infos:
// class AProjectile*             P                              ( CPF_Parm )

void ASGS_Vehicle_Sceptor::IncomingMissile ( class AProjectile* P )
{
	static UFunction* pFnIncomingMissile = NULL;

	if ( ! pFnIncomingMissile )
		pFnIncomingMissile = (UFunction*) UObject::GObjObjects()->Data[ 62743 ];

	ASGS_Vehicle_Sceptor_execIncomingMissile_Parms IncomingMissile_Parms;
	IncomingMissile_Parms.P = P;

	this->ProcessEvent ( pFnIncomingMissile, &IncomingMissile_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.Dodge
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  DoubleClickMove                ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::Dodge ( unsigned char DoubleClickMove )
{
	static UFunction* pFnDodge = NULL;

	if ( ! pFnDodge )
		pFnDodge = (UFunction*) UObject::GObjObjects()->Data[ 62740 ];

	ASGS_Vehicle_Sceptor_execDodge_Parms Dodge_Parms;
	Dodge_Parms.DoubleClickMove = DoubleClickMove;

	this->ProcessEvent ( pFnDodge, &Dodge_Parms, NULL );

	return Dodge_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.ChooseFireMode
// [0x00020002] 
// Parameters infos:
// unsigned char                  ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

unsigned char ASGS_Vehicle_Sceptor::ChooseFireMode ( )
{
	static UFunction* pFnChooseFireMode = NULL;

	if ( ! pFnChooseFireMode )
		pFnChooseFireMode = (UFunction*) UObject::GObjObjects()->Data[ 62737 ];

	ASGS_Vehicle_Sceptor_execChooseFireMode_Parms ChooseFireMode_Parms;

	this->ProcessEvent ( pFnChooseFireMode, &ChooseFireMode_Parms, NULL );

	return ChooseFireMode_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.PossessedBy
// [0x00020002] 
// Parameters infos:
// class AController*             C                              ( CPF_Parm )
// unsigned long                  bVehicleTransition             ( CPF_Parm )

void ASGS_Vehicle_Sceptor::PossessedBy ( class AController* C, unsigned long bVehicleTransition )
{
	static UFunction* pFnPossessedBy = NULL;

	if ( ! pFnPossessedBy )
		pFnPossessedBy = (UFunction*) UObject::GObjObjects()->Data[ 62734 ];

	ASGS_Vehicle_Sceptor_execPossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent ( pFnPossessedBy, &PossessedBy_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Sceptor.OverrideEndFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::OverrideEndFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideEndFire = NULL;

	if ( ! pFnOverrideEndFire )
		pFnOverrideEndFire = (UFunction*) UObject::GObjObjects()->Data[ 62731 ];

	ASGS_Vehicle_Sceptor_execOverrideEndFire_Parms OverrideEndFire_Parms;
	OverrideEndFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideEndFire, &OverrideEndFire_Parms, NULL );

	return OverrideEndFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.OverrideBeginFire
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned char                  FireModeNum                    ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::OverrideBeginFire ( unsigned char FireModeNum )
{
	static UFunction* pFnOverrideBeginFire = NULL;

	if ( ! pFnOverrideBeginFire )
		pFnOverrideBeginFire = (UFunction*) UObject::GObjObjects()->Data[ 62728 ];

	ASGS_Vehicle_Sceptor_execOverrideBeginFire_Parms OverrideBeginFire_Parms;
	OverrideBeginFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnOverrideBeginFire, &OverrideBeginFire_Parms, NULL );

	return OverrideBeginFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.DriverEnter
// [0x00020002] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   P                              ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::DriverEnter ( class APawn* P )
{
	static UFunction* pFnDriverEnter = NULL;

	if ( ! pFnDriverEnter )
		pFnDriverEnter = (UFunction*) UObject::GObjObjects()->Data[ 62724 ];

	ASGS_Vehicle_Sceptor_execDriverEnter_Parms DriverEnter_Parms;
	DriverEnter_Parms.P = P;

	this->ProcessEvent ( pFnDriverEnter, &DriverEnter_Parms, NULL );

	return DriverEnter_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.CanBeBaseForPawn
// [0x00020102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class APawn*                   aPawn                          ( CPF_Parm )

bool ASGS_Vehicle_Sceptor::CanBeBaseForPawn ( class APawn* aPawn )
{
	static UFunction* pFnCanBeBaseForPawn = NULL;

	if ( ! pFnCanBeBaseForPawn )
		pFnCanBeBaseForPawn = (UFunction*) UObject::GObjObjects()->Data[ 62721 ];

	ASGS_Vehicle_Sceptor_execCanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;
	CanBeBaseForPawn_Parms.aPawn = aPawn;

	this->ProcessEvent ( pFnCanBeBaseForPawn, &CanBeBaseForPawn_Parms, NULL );

	return CanBeBaseForPawn_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Sceptor.Tick
// [0x00020802] ( FUNC_Event )
// Parameters infos:
// float                          DeltaSeconds                   ( CPF_Parm )

void ASGS_Vehicle_Sceptor::eventTick ( float DeltaSeconds )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62718 ];

	ASGS_Vehicle_Sceptor_eventTick_Parms Tick_Parms;
	Tick_Parms.DeltaSeconds = DeltaSeconds;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_Parasite::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 62687 ];

	ASGS_Vehicle_Parasite_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.UpdateRotation
// [0x00820102] 
// Parameters infos:

void ASGS_Vehicle_Parasite::UpdateRotation ( )
{
	static UFunction* pFnUpdateRotation = NULL;

	if ( ! pFnUpdateRotation )
		pFnUpdateRotation = (UFunction*) UObject::GObjObjects()->Data[ 62681 ];

	ASGS_Vehicle_Parasite_execUpdateRotation_Parms UpdateRotation_Parms;

	this->ProcessEvent ( pFnUpdateRotation, &UpdateRotation_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_Parasite::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 62657 ];

	ASGS_Vehicle_Parasite_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function SGSOrion.SGS_Vehicle_Parasite.GetWeaponAim
// [0x00820002] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// class AUTVehicleWeapon*        VWeapon                        ( CPF_Parm )

struct FRotator ASGS_Vehicle_Parasite::GetWeaponAim ( class AUTVehicleWeapon* VWeapon )
{
	static UFunction* pFnGetWeaponAim = NULL;

	if ( ! pFnGetWeaponAim )
		pFnGetWeaponAim = (UFunction*) UObject::GObjObjects()->Data[ 62637 ];

	ASGS_Vehicle_Parasite_execGetWeaponAim_Parms GetWeaponAim_Parms;
	GetWeaponAim_Parms.VWeapon = VWeapon;

	this->ProcessEvent ( pFnGetWeaponAim, &GetWeaponAim_Parms, NULL );

	return GetWeaponAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Parasite.ServerTransformation
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle_Parasite::ServerTransformation ( )
{
	static UFunction* pFnServerTransformation = NULL;

	if ( ! pFnServerTransformation )
		pFnServerTransformation = (UFunction*) UObject::GObjObjects()->Data[ 62636 ];

	ASGS_Vehicle_Parasite_execServerTransformation_Parms ServerTransformation_Parms;

	this->ProcessEvent ( pFnServerTransformation, &ServerTransformation_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.ToggleMechMode
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Parasite::ToggleMechMode ( )
{
	static UFunction* pFnToggleMechMode = NULL;

	if ( ! pFnToggleMechMode )
		pFnToggleMechMode = (UFunction*) UObject::GObjObjects()->Data[ 62635 ];

	ASGS_Vehicle_Parasite_execToggleMechMode_Parms ToggleMechMode_Parms;

	this->ProcessEvent ( pFnToggleMechMode, &ToggleMechMode_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.SetInputs
// [0x00820102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ASGS_Vehicle_Parasite::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 62630 ];

	ASGS_Vehicle_Parasite_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle_Parasite::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62628 ];

	ASGS_Vehicle_Parasite_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Parasite.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Parasite::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 62627 ];

	ASGS_Vehicle_Parasite_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_EMPGrenade.CustomExplode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_Proj_EMPGrenade::CustomExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnCustomExplode = NULL;

	if ( ! pFnCustomExplode )
		pFnCustomExplode = (UFunction*) UObject::GObjObjects()->Data[ 61200 ];

	ASGS_Proj_EMPGrenade_execCustomExplode_Parms CustomExplode_Parms;
	memcpy ( &CustomExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &CustomExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnCustomExplode, &CustomExplode_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_EMPGrenade.HurtRadius
// [0x00024102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          DamageAmount                   ( CPF_Parm )
// float                          InDamageRadius                 ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// class AActor*                  IgnoredActor                   ( CPF_OptionalParm | CPF_Parm )
// class AController*             InstigatedByController         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoFullDamage                  ( CPF_OptionalParm | CPF_Parm )

bool ASGS_Proj_EMPGrenade::HurtRadius ( float DamageAmount, float InDamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, class AActor* IgnoredActor, class AController* InstigatedByController, unsigned long bDoFullDamage )
{
	static UFunction* pFnHurtRadius = NULL;

	if ( ! pFnHurtRadius )
		pFnHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 61188 ];

	ASGS_Proj_EMPGrenade_execHurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.DamageAmount = DamageAmount;
	HurtRadius_Parms.InDamageRadius = InDamageRadius;
	HurtRadius_Parms.DamageType = DamageType;
	HurtRadius_Parms.Momentum = Momentum;
	memcpy ( &HurtRadius_Parms.HurtOrigin, &HurtOrigin, 0xC );
	HurtRadius_Parms.IgnoredActor = IgnoredActor;
	HurtRadius_Parms.InstigatedByController = InstigatedByController;
	HurtRadius_Parms.bDoFullDamage = bDoFullDamage;

	this->ProcessEvent ( pFnHurtRadius, &HurtRadius_Parms, NULL );

	return HurtRadius_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Proj_EMPGrenade.SetExplosionEffectParameters
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void ASGS_Proj_EMPGrenade::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 61186 ];

	ASGS_Proj_EMPGrenade_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_GrenadeCAR.HurtRadius
// [0x00824102] 
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// float                          BaseDamage                     ( CPF_Parm )
// float                          InDamageRadius                 ( CPF_Parm )
// class UClass*                  DamageType                     ( CPF_Parm )
// float                          Momentum                       ( CPF_Parm )
// struct FVector                 HurtOrigin                     ( CPF_Parm )
// class AActor*                  IgnoredActor                   ( CPF_OptionalParm | CPF_Parm )
// class AController*             InstigatedByController         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bDoFullDamage                  ( CPF_OptionalParm | CPF_Parm )

bool ASGS_Proj_GrenadeCAR::HurtRadius ( float BaseDamage, float InDamageRadius, class UClass* DamageType, float Momentum, struct FVector HurtOrigin, class AActor* IgnoredActor, class AController* InstigatedByController, unsigned long bDoFullDamage )
{
	static UFunction* pFnHurtRadius = NULL;

	if ( ! pFnHurtRadius )
		pFnHurtRadius = (UFunction*) UObject::GObjObjects()->Data[ 61221 ];

	ASGS_Proj_GrenadeCAR_execHurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.BaseDamage = BaseDamage;
	HurtRadius_Parms.InDamageRadius = InDamageRadius;
	HurtRadius_Parms.DamageType = DamageType;
	HurtRadius_Parms.Momentum = Momentum;
	memcpy ( &HurtRadius_Parms.HurtOrigin, &HurtOrigin, 0xC );
	HurtRadius_Parms.IgnoredActor = IgnoredActor;
	HurtRadius_Parms.InstigatedByController = InstigatedByController;
	HurtRadius_Parms.bDoFullDamage = bDoFullDamage;

	this->ProcessEvent ( pFnHurtRadius, &HurtRadius_Parms, NULL );

	return HurtRadius_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Proj_GrenadeCAR.CustomExplode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_Proj_GrenadeCAR::CustomExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnCustomExplode = NULL;

	if ( ! pFnCustomExplode )
		pFnCustomExplode = (UFunction*) UObject::GObjObjects()->Data[ 61216 ];

	ASGS_Proj_GrenadeCAR_execCustomExplode_Parms CustomExplode_Parms;
	memcpy ( &CustomExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &CustomExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnCustomExplode, &CustomExplode_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_GrenadeCAR.SetExplosionEffectParameters
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void ASGS_Proj_GrenadeCAR::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 61214 ];

	ASGS_Proj_GrenadeCAR_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_SmokeGrenade.CustomExplode
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// struct FVector                 HitNormal                      ( CPF_Parm )

void ASGS_Proj_SmokeGrenade::CustomExplode ( struct FVector HitLocation, struct FVector HitNormal )
{
	static UFunction* pFnCustomExplode = NULL;

	if ( ! pFnCustomExplode )
		pFnCustomExplode = (UFunction*) UObject::GObjObjects()->Data[ 61282 ];

	ASGS_Proj_SmokeGrenade_execCustomExplode_Parms CustomExplode_Parms;
	memcpy ( &CustomExplode_Parms.HitLocation, &HitLocation, 0xC );
	memcpy ( &CustomExplode_Parms.HitNormal, &HitNormal, 0xC );

	this->ProcessEvent ( pFnCustomExplode, &CustomExplode_Parms, NULL );
};

// Function SGSOrion.SGS_Proj_SmokeGrenade.SetExplosionEffectParameters
// [0x00020102] 
// Parameters infos:
// class UParticleSystemComponent* ProjExplosion                  ( CPF_Parm | CPF_EditInline )

void ASGS_Proj_SmokeGrenade::SetExplosionEffectParameters ( class UParticleSystemComponent* ProjExplosion )
{
	static UFunction* pFnSetExplosionEffectParameters = NULL;

	if ( ! pFnSetExplosionEffectParameters )
		pFnSetExplosionEffectParameters = (UFunction*) UObject::GObjObjects()->Data[ 61280 ];

	ASGS_Proj_SmokeGrenade_execSetExplosionEffectParameters_Parms SetExplosionEffectParameters_Parms;
	SetExplosionEffectParameters_Parms.ProjExplosion = ProjExplosion;

	this->ProcessEvent ( pFnSetExplosionEffectParameters, &SetExplosionEffectParameters_Parms, NULL );
};

// Function SGSOrion.SGS_TimerMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_TimerMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 62252 ];

	USGS_TimerMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Cobra.SetInputs
// [0x00020102] 
// Parameters infos:
// float                          InForward                      ( CPF_Parm )
// float                          InStrafe                       ( CPF_Parm )
// float                          InUp                           ( CPF_Parm )

void ASGS_Vehicle_Cobra::SetInputs ( float InForward, float InStrafe, float InUp )
{
	static UFunction* pFnSetInputs = NULL;

	if ( ! pFnSetInputs )
		pFnSetInputs = (UFunction*) UObject::GObjObjects()->Data[ 62368 ];

	ASGS_Vehicle_Cobra_execSetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;

	this->ProcessEvent ( pFnSetInputs, &SetInputs_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:
// class UPrimitiveComponent*     HitComponent                   ( CPF_Parm | CPF_EditInline )
// class UPrimitiveComponent*     OtherComponent                 ( CPF_Parm | CPF_EditInline )
// int                            ContactIndex                   ( CPF_Parm )
// struct FCollisionImpactData    RigidCollisionData             ( CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_Cobra::eventRigidBodyCollision ( class UPrimitiveComponent* HitComponent, class UPrimitiveComponent* OtherComponent, int ContactIndex, struct FCollisionImpactData* RigidCollisionData )
{
	static UFunction* pFnRigidBodyCollision = NULL;

	if ( ! pFnRigidBodyCollision )
		pFnRigidBodyCollision = (UFunction*) UObject::GObjObjects()->Data[ 62363 ];

	ASGS_Vehicle_Cobra_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;

	this->ProcessEvent ( pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL );

	if ( RigidCollisionData )
		memcpy ( RigidCollisionData, &RigidBodyCollision_Parms.RigidCollisionData, 0x24 );
};

// Function SGSOrion.SGS_Vehicle_Cobra.VehicleWeaponFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )

void ASGS_Vehicle_Cobra::VehicleWeaponFireEffects ( struct FVector HitLocation, int SeatIndex )
{
	static UFunction* pFnVehicleWeaponFireEffects = NULL;

	if ( ! pFnVehicleWeaponFireEffects )
		pFnVehicleWeaponFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 62359 ];

	ASGS_Vehicle_Cobra_execVehicleWeaponFireEffects_Parms VehicleWeaponFireEffects_Parms;
	memcpy ( &VehicleWeaponFireEffects_Parms.HitLocation, &HitLocation, 0xC );
	VehicleWeaponFireEffects_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnVehicleWeaponFireEffects, &VehicleWeaponFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.TriggerVehicleEffect
// [0x00020102] 
// Parameters infos:
// struct FName                   EventTag                       ( CPF_Parm )

void ASGS_Vehicle_Cobra::TriggerVehicleEffect ( struct FName EventTag )
{
	static UFunction* pFnTriggerVehicleEffect = NULL;

	if ( ! pFnTriggerVehicleEffect )
		pFnTriggerVehicleEffect = (UFunction*) UObject::GObjObjects()->Data[ 62357 ];

	ASGS_Vehicle_Cobra_execTriggerVehicleEffect_Parms TriggerVehicleEffect_Parms;
	memcpy ( &TriggerVehicleEffect_Parms.EventTag, &EventTag, 0x8 );

	this->ProcessEvent ( pFnTriggerVehicleEffect, &TriggerVehicleEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.CreateVehicleEffect
// [0x00020102] 
// Parameters infos:
// int                            EffectIndex                    ( CPF_Parm )

void ASGS_Vehicle_Cobra::CreateVehicleEffect ( int EffectIndex )
{
	static UFunction* pFnCreateVehicleEffect = NULL;

	if ( ! pFnCreateVehicleEffect )
		pFnCreateVehicleEffect = (UFunction*) UObject::GObjObjects()->Data[ 62355 ];

	ASGS_Vehicle_Cobra_execCreateVehicleEffect_Parms CreateVehicleEffect_Parms;
	CreateVehicleEffect_Parms.EffectIndex = EffectIndex;

	this->ProcessEvent ( pFnCreateVehicleEffect, &CreateVehicleEffect_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.GetBarrelLocationAndRotation
// [0x00424902] ( FUNC_Event )
// Parameters infos:
// int                            SeatIndex                      ( CPF_Parm )
// struct FVector                 SocketLocation                 ( CPF_Parm | CPF_OutParm )
// struct FRotator                SocketRotation                 ( CPF_OptionalParm | CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_Cobra::eventGetBarrelLocationAndRotation ( int SeatIndex, struct FVector* SocketLocation, struct FRotator* SocketRotation )
{
	static UFunction* pFnGetBarrelLocationAndRotation = NULL;

	if ( ! pFnGetBarrelLocationAndRotation )
		pFnGetBarrelLocationAndRotation = (UFunction*) UObject::GObjObjects()->Data[ 62351 ];

	ASGS_Vehicle_Cobra_eventGetBarrelLocationAndRotation_Parms GetBarrelLocationAndRotation_Parms;
	GetBarrelLocationAndRotation_Parms.SeatIndex = SeatIndex;

	this->ProcessEvent ( pFnGetBarrelLocationAndRotation, &GetBarrelLocationAndRotation_Parms, NULL );

	if ( SocketLocation )
		memcpy ( SocketLocation, &GetBarrelLocationAndRotation_Parms.SocketLocation, 0xC );

	if ( SocketRotation )
		memcpy ( SocketRotation, &GetBarrelLocationAndRotation_Parms.SocketRotation, 0xC );
};

// Function SGSOrion.SGS_Vehicle_Cobra.PanTread
// [0x00C40103] ( FUNC_Final )
// Parameters infos:
// class UMaterialInstanceConstant* TreadPanner                    ( CPF_Parm )
// int                            Side                           ( CPF_Parm )
// float                          DeltaTime                      ( CPF_Parm )
// float                          TreadPan                       ( CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_Cobra::PanTread ( class UMaterialInstanceConstant* TreadPanner, int Side, float DeltaTime, float* TreadPan )
{
	static UFunction* pFnPanTread = NULL;

	if ( ! pFnPanTread )
		pFnPanTread = (UFunction*) UObject::GObjObjects()->Data[ 62342 ];

	ASGS_Vehicle_Cobra_execPanTread_Parms PanTread_Parms;
	PanTread_Parms.TreadPanner = TreadPanner;
	PanTread_Parms.Side = Side;
	PanTread_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPanTread, &PanTread_Parms, NULL );

	if ( TreadPan )
		*TreadPan = PanTread_Parms.TreadPan;
};

// Function SGSOrion.SGS_Vehicle_Cobra.PanTreads
// [0x00040103] ( FUNC_Final )
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Vehicle_Cobra::PanTreads ( float DeltaTime )
{
	static UFunction* pFnPanTreads = NULL;

	if ( ! pFnPanTreads )
		pFnPanTreads = (UFunction*) UObject::GObjObjects()->Data[ 62340 ];

	ASGS_Vehicle_Cobra_execPanTreads_Parms PanTreads_Parms;
	PanTreads_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnPanTreads, &PanTreads_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.SetUpTreads
// [0x00040103] ( FUNC_Final )
// Parameters infos:

void ASGS_Vehicle_Cobra::SetUpTreads ( )
{
	static UFunction* pFnSetUpTreads = NULL;

	if ( ! pFnSetUpTreads )
		pFnSetUpTreads = (UFunction*) UObject::GObjObjects()->Data[ 62328 ];

	ASGS_Vehicle_Cobra_execSetUpTreads_Parms SetUpTreads_Parms;

	this->ProcessEvent ( pFnSetUpTreads, &SetUpTreads_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.Tick
// [0x00020102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Vehicle_Cobra::Tick ( float DeltaTime )
{
	static UFunction* pFnTick = NULL;

	if ( ! pFnTick )
		pFnTick = (UFunction*) UObject::GObjObjects()->Data[ 62338 ];

	ASGS_Vehicle_Cobra_execTick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnTick, &Tick_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// class USkeletalMeshComponent*  SkelComp                       ( CPF_Parm | CPF_EditInline )

void ASGS_Vehicle_Cobra::eventPostInitAnimTree ( class USkeletalMeshComponent* SkelComp )
{
	static UFunction* pFnPostInitAnimTree = NULL;

	if ( ! pFnPostInitAnimTree )
		pFnPostInitAnimTree = (UFunction*) UObject::GObjObjects()->Data[ 62336 ];

	ASGS_Vehicle_Cobra_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;

	this->ProcessEvent ( pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.EndAnim_RobotToTank
// [0x00020100] 
// Parameters infos:

void ASGS_Vehicle_Cobra::EndAnim_RobotToTank ( )
{
	static UFunction* pFnEndAnim_RobotToTank = NULL;

	if ( ! pFnEndAnim_RobotToTank )
		pFnEndAnim_RobotToTank = (UFunction*) UObject::GObjObjects()->Data[ 62335 ];

	ASGS_Vehicle_Cobra_execEndAnim_RobotToTank_Parms EndAnim_RobotToTank_Parms;

	this->ProcessEvent ( pFnEndAnim_RobotToTank, &EndAnim_RobotToTank_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.EndAnim_TankToRobot
// [0x00020100] 
// Parameters infos:

void ASGS_Vehicle_Cobra::EndAnim_TankToRobot ( )
{
	static UFunction* pFnEndAnim_TankToRobot = NULL;

	if ( ! pFnEndAnim_TankToRobot )
		pFnEndAnim_TankToRobot = (UFunction*) UObject::GObjObjects()->Data[ 62334 ];

	ASGS_Vehicle_Cobra_execEndAnim_TankToRobot_Parms EndAnim_TankToRobot_Parms;

	this->ProcessEvent ( pFnEndAnim_TankToRobot, &EndAnim_TankToRobot_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.Update_RobotMode
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Cobra::Update_RobotMode ( )
{
	static UFunction* pFnUpdate_RobotMode = NULL;

	if ( ! pFnUpdate_RobotMode )
		pFnUpdate_RobotMode = (UFunction*) UObject::GObjObjects()->Data[ 62333 ];

	ASGS_Vehicle_Cobra_execUpdate_RobotMode_Parms Update_RobotMode_Parms;

	this->ProcessEvent ( pFnUpdate_RobotMode, &Update_RobotMode_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.Server_SetRobotMode
// [0x002200C2] 
// Parameters infos:

void ASGS_Vehicle_Cobra::Server_SetRobotMode ( )
{
	static UFunction* pFnServer_SetRobotMode = NULL;

	if ( ! pFnServer_SetRobotMode )
		pFnServer_SetRobotMode = (UFunction*) UObject::GObjObjects()->Data[ 62332 ];

	ASGS_Vehicle_Cobra_execServer_SetRobotMode_Parms Server_SetRobotMode_Parms;

	this->ProcessEvent ( pFnServer_SetRobotMode, &Server_SetRobotMode_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.ToggleRobotMode
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Cobra::ToggleRobotMode ( )
{
	static UFunction* pFnToggleRobotMode = NULL;

	if ( ! pFnToggleRobotMode )
		pFnToggleRobotMode = (UFunction*) UObject::GObjObjects()->Data[ 62331 ];

	ASGS_Vehicle_Cobra_execToggleRobotMode_Parms ToggleRobotMode_Parms;

	this->ProcessEvent ( pFnToggleRobotMode, &ToggleRobotMode_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.DriverLeft
// [0x00020002] 
// Parameters infos:

void ASGS_Vehicle_Cobra::DriverLeft ( )
{
	static UFunction* pFnDriverLeft = NULL;

	if ( ! pFnDriverLeft )
		pFnDriverLeft = (UFunction*) UObject::GObjObjects()->Data[ 62329 ];

	ASGS_Vehicle_Cobra_execDriverLeft_Parms DriverLeft_Parms;

	this->ProcessEvent ( pFnDriverLeft, &DriverLeft_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Vehicle_Cobra::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 62327 ];

	ASGS_Vehicle_Cobra_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.DisplayWheelsDebug
// [0x00820102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          YL                             ( CPF_Parm )

void ASGS_Vehicle_Cobra::DisplayWheelsDebug ( class AHUD* HUD, float YL )
{
	static UFunction* pFnDisplayWheelsDebug = NULL;

	if ( ! pFnDisplayWheelsDebug )
		pFnDisplayWheelsDebug = (UFunction*) UObject::GObjObjects()->Data[ 62315 ];

	ASGS_Vehicle_Cobra_execDisplayWheelsDebug_Parms DisplayWheelsDebug_Parms;
	DisplayWheelsDebug_Parms.HUD = HUD;
	DisplayWheelsDebug_Parms.YL = YL;

	this->ProcessEvent ( pFnDisplayWheelsDebug, &DisplayWheelsDebug_Parms, NULL );
};

// Function SGSOrion.SGS_Vehicle_Cobra.DisplayDebug
// [0x00420102] 
// Parameters infos:
// class AHUD*                    HUD                            ( CPF_Parm )
// float                          out_YL                         ( CPF_Parm | CPF_OutParm )
// float                          out_YPos                       ( CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_Cobra::DisplayDebug ( class AHUD* HUD, float* out_YL, float* out_YPos )
{
	static UFunction* pFnDisplayDebug = NULL;

	if ( ! pFnDisplayDebug )
		pFnDisplayDebug = (UFunction*) UObject::GObjObjects()->Data[ 62311 ];

	ASGS_Vehicle_Cobra_execDisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;

	this->ProcessEvent ( pFnDisplayDebug, &DisplayDebug_Parms, NULL );

	if ( out_YL )
		*out_YL = DisplayDebug_Parms.out_YL;

	if ( out_YPos )
		*out_YPos = DisplayDebug_Parms.out_YPos;
};

// Function SGSOrion.SGS_Vehicle_Cobra.GetSVehicleDebug
// [0x00420102] 
// Parameters infos:
// TArray< struct FString >       DebugInfo                      ( CPF_Parm | CPF_OutParm | CPF_NeedCtorLink )

void ASGS_Vehicle_Cobra::GetSVehicleDebug ( TArray< struct FString >* DebugInfo )
{
	static UFunction* pFnGetSVehicleDebug = NULL;

	if ( ! pFnGetSVehicleDebug )
		pFnGetSVehicleDebug = (UFunction*) UObject::GObjObjects()->Data[ 62308 ];

	ASGS_Vehicle_Cobra_execGetSVehicleDebug_Parms GetSVehicleDebug_Parms;

	this->ProcessEvent ( pFnGetSVehicleDebug, &GetSVehicleDebug_Parms, NULL );

	if ( DebugInfo )
		memcpy ( DebugInfo, &GetSVehicleDebug_Parms.DebugInfo, 0xC );
};

// Function SGSOrion.SGS_Vehicle_Cobra.VehicleCalcCamera
// [0x00C24102] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )
// int                            SeatIndex                      ( CPF_Parm )
// unsigned long                  bPivotOnly                     ( CPF_OptionalParm | CPF_Parm )
// struct FVector                 out_CamLoc                     ( CPF_Parm | CPF_OutParm )
// struct FRotator                out_CamRot                     ( CPF_Parm | CPF_OutParm )
// struct FVector                 CamStart                       ( CPF_Parm | CPF_OutParm )

void ASGS_Vehicle_Cobra::VehicleCalcCamera ( float DeltaTime, int SeatIndex, unsigned long bPivotOnly, struct FVector* out_CamLoc, struct FRotator* out_CamRot, struct FVector* CamStart )
{
	static UFunction* pFnVehicleCalcCamera = NULL;

	if ( ! pFnVehicleCalcCamera )
		pFnVehicleCalcCamera = (UFunction*) UObject::GObjObjects()->Data[ 62296 ];

	ASGS_Vehicle_Cobra_execVehicleCalcCamera_Parms VehicleCalcCamera_Parms;
	VehicleCalcCamera_Parms.DeltaTime = DeltaTime;
	VehicleCalcCamera_Parms.SeatIndex = SeatIndex;
	VehicleCalcCamera_Parms.bPivotOnly = bPivotOnly;

	this->ProcessEvent ( pFnVehicleCalcCamera, &VehicleCalcCamera_Parms, NULL );

	if ( out_CamLoc )
		memcpy ( out_CamLoc, &VehicleCalcCamera_Parms.out_CamLoc, 0xC );

	if ( out_CamRot )
		memcpy ( out_CamRot, &VehicleCalcCamera_Parms.out_CamRot, 0xC );

	if ( CamStart )
		memcpy ( CamStart, &VehicleCalcCamera_Parms.CamStart, 0xC );
};

// Function SGSOrion.SGS_Vehicle_Cobra.DriverLeave
// [0x00820802] ( FUNC_Event )
// Parameters infos:
// bool                           ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// unsigned long                  bForceLeave                    ( CPF_Parm )

bool ASGS_Vehicle_Cobra::eventDriverLeave ( unsigned long bForceLeave )
{
	static UFunction* pFnDriverLeave = NULL;

	if ( ! pFnDriverLeave )
		pFnDriverLeave = (UFunction*) UObject::GObjObjects()->Data[ 62292 ];

	ASGS_Vehicle_Cobra_eventDriverLeave_Parms DriverLeave_Parms;
	DriverLeave_Parms.bForceLeave = bForceLeave;

	this->ProcessEvent ( pFnDriverLeave, &DriverLeave_Parms, NULL );

	return DriverLeave_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Vehicle_Cobra.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:
// struct FName                   VarName                        ( CPF_Parm )

void ASGS_Vehicle_Cobra::eventReplicatedEvent ( struct FName VarName )
{
	static UFunction* pFnReplicatedEvent = NULL;

	if ( ! pFnReplicatedEvent )
		pFnReplicatedEvent = (UFunction*) UObject::GObjObjects()->Data[ 62290 ];

	ASGS_Vehicle_Cobra_eventReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy ( &ReplicatedEvent_Parms.VarName, &VarName, 0x8 );

	this->ProcessEvent ( pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.SetCurrentFireMode
// [0x00020102] 
// Parameters infos:
// unsigned char                  FiringModeNum                  ( CPF_Parm )

void ASGS_VWeap_CobraRocket::SetCurrentFireMode ( unsigned char FiringModeNum )
{
	static UFunction* pFnSetCurrentFireMode = NULL;

	if ( ! pFnSetCurrentFireMode )
		pFnSetCurrentFireMode = (UFunction*) UObject::GObjObjects()->Data[ 63340 ];

	ASGS_VWeap_CobraRocket_execSetCurrentFireMode_Parms SetCurrentFireMode_Parms;
	SetCurrentFireMode_Parms.FiringModeNum = FiringModeNum;

	this->ProcessEvent ( pFnSetCurrentFireMode, &SetCurrentFireMode_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.PlayFiringSound
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_CobraRocket::PlayFiringSound ( )
{
	static UFunction* pFnPlayFiringSound = NULL;

	if ( ! pFnPlayFiringSound )
		pFnPlayFiringSound = (UFunction*) UObject::GObjObjects()->Data[ 63339 ];

	ASGS_VWeap_CobraRocket_execPlayFiringSound_Parms PlayFiringSound_Parms;

	this->ProcessEvent ( pFnPlayFiringSound, &PlayFiringSound_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.GetAmmoCount
// [0x00020102] 
// Parameters infos:
// int                            ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

int ASGS_VWeap_CobraRocket::GetAmmoCount ( )
{
	static UFunction* pFnGetAmmoCount = NULL;

	if ( ! pFnGetAmmoCount )
		pFnGetAmmoCount = (UFunction*) UObject::GObjObjects()->Data[ 63337 ];

	ASGS_VWeap_CobraRocket_execGetAmmoCount_Parms GetAmmoCount_Parms;

	this->ProcessEvent ( pFnGetAmmoCount, &GetAmmoCount_Parms, NULL );

	return GetAmmoCount_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_CobraRocket.StopFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_VWeap_CobraRocket::StopFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStopFire = NULL;

	if ( ! pFnStopFire )
		pFnStopFire = (UFunction*) UObject::GObjObjects()->Data[ 63335 ];

	ASGS_VWeap_CobraRocket_execStopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStopFire, &StopFire_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.StartFire
// [0x00020102] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_VWeap_CobraRocket::StartFire ( unsigned char FireModeNum )
{
	static UFunction* pFnStartFire = NULL;

	if ( ! pFnStartFire )
		pFnStartFire = (UFunction*) UObject::GObjObjects()->Data[ 63333 ];

	ASGS_VWeap_CobraRocket_execStartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnStartFire, &StartFire_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.LoadRocket
// [0x00020102] 
// Parameters infos:

void ASGS_VWeap_CobraRocket::LoadRocket ( )
{
	static UFunction* pFnLoadRocket = NULL;

	if ( ! pFnLoadRocket )
		pFnLoadRocket = (UFunction*) UObject::GObjObjects()->Data[ 63332 ];

	ASGS_VWeap_CobraRocket_execLoadRocket_Parms LoadRocket_Parms;

	this->ProcessEvent ( pFnLoadRocket, &LoadRocket_Parms, NULL );
};

// Function SGSOrion.SGS_VWeap_CobraRocket.ProjectileFire
// [0x00020102] 
// Parameters infos:
// class AProjectile*             ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )

class AProjectile* ASGS_VWeap_CobraRocket::ProjectileFire ( )
{
	static UFunction* pFnProjectileFire = NULL;

	if ( ! pFnProjectileFire )
		pFnProjectileFire = (UFunction*) UObject::GObjObjects()->Data[ 63329 ];

	ASGS_VWeap_CobraRocket_execProjectileFire_Parms ProjectileFire_Parms;

	this->ProcessEvent ( pFnProjectileFire, &ProjectileFire_Parms, NULL );

	return ProjectileFire_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_CobraRocket.GetAdjustedAim
// [0x00820102] 
// Parameters infos:
// struct FRotator                ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// struct FVector                 StartFireLoc                   ( CPF_Parm )

struct FRotator ASGS_VWeap_CobraRocket::GetAdjustedAim ( struct FVector StartFireLoc )
{
	static UFunction* pFnGetAdjustedAim = NULL;

	if ( ! pFnGetAdjustedAim )
		pFnGetAdjustedAim = (UFunction*) UObject::GObjObjects()->Data[ 63325 ];

	ASGS_VWeap_CobraRocket_execGetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy ( &GetAdjustedAim_Parms.StartFireLoc, &StartFireLoc, 0xC );

	this->ProcessEvent ( pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL );

	return GetAdjustedAim_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VWeap_CobraRocket.SpawnTracer
// [0x00820102] 
// Parameters infos:
// struct FVector                 EffectLocation                 ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_VWeap_CobraRocket::SpawnTracer ( struct FVector EffectLocation, struct FVector HitLocation )
{
	static UFunction* pFnSpawnTracer = NULL;

	if ( ! pFnSpawnTracer )
		pFnSpawnTracer = (UFunction*) UObject::GObjObjects()->Data[ 63321 ];

	ASGS_VWeap_CobraRocket_execSpawnTracer_Parms SpawnTracer_Parms;
	memcpy ( &SpawnTracer_Parms.EffectLocation, &EffectLocation, 0xC );
	memcpy ( &SpawnTracer_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnSpawnTracer, &SpawnTracer_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Cobra.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_Cobra::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63040 ];

	ASGS_VehicleFactory_Cobra_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Cobra.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_Cobra::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63039 ];

	ASGS_VehicleFactory_Cobra_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Gladiator.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_Gladiator::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63053 ];

	ASGS_VehicleFactory_Gladiator_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Gladiator.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_Gladiator::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63052 ];

	ASGS_VehicleFactory_Gladiator_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Griffin.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_Griffin::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63062 ];

	ASGS_VehicleFactory_Griffin_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Griffin.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_Griffin::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63061 ];

	ASGS_VehicleFactory_Griffin_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Parasite.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_Parasite::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63071 ];

	ASGS_VehicleFactory_Parasite_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Parasite.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_Parasite::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63070 ];

	ASGS_VehicleFactory_Parasite_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Sceptor.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_Sceptor::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63080 ];

	ASGS_VehicleFactory_Sceptor_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_Sceptor.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_Sceptor::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63079 ];

	ASGS_VehicleFactory_Sceptor_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_VTOL.VehicleDestroyed
// [0x00020002] 
// Parameters infos:
// class AUTVehicle*              V                              ( CPF_Parm )

void ASGS_VehicleFactory_VTOL::VehicleDestroyed ( class AUTVehicle* V )
{
	static UFunction* pFnVehicleDestroyed = NULL;

	if ( ! pFnVehicleDestroyed )
		pFnVehicleDestroyed = (UFunction*) UObject::GObjObjects()->Data[ 63089 ];

	ASGS_VehicleFactory_VTOL_execVehicleDestroyed_Parms VehicleDestroyed_Parms;
	VehicleDestroyed_Parms.V = V;

	this->ProcessEvent ( pFnVehicleDestroyed, &VehicleDestroyed_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleFactory_VTOL.VehicleTaken
// [0x00020002] 
// Parameters infos:

void ASGS_VehicleFactory_VTOL::VehicleTaken ( )
{
	static UFunction* pFnVehicleTaken = NULL;

	if ( ! pFnVehicleTaken )
		pFnVehicleTaken = (UFunction*) UObject::GObjObjects()->Data[ 63088 ];

	ASGS_VehicleFactory_VTOL_execVehicleTaken_Parms VehicleTaken_Parms;

	this->ProcessEvent ( pFnVehicleTaken, &VehicleTaken_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleKillMessage.AnnouncementSound
// [0x00022002] 
// Parameters infos:
// class USoundNodeWave*          ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm )
// int                            MessageIndex                   ( CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_Parm )
// class APlayerController*       PC                             ( CPF_Parm )

class USoundNodeWave* USGS_VehicleKillMessage::AnnouncementSound ( int MessageIndex, class UObject* OptionalObject, class APlayerController* PC )
{
	static UFunction* pFnAnnouncementSound = NULL;

	if ( ! pFnAnnouncementSound )
		pFnAnnouncementSound = (UFunction*) UObject::GObjObjects()->Data[ 63113 ];

	USGS_VehicleKillMessage_execAnnouncementSound_Parms AnnouncementSound_Parms;
	AnnouncementSound_Parms.MessageIndex = MessageIndex;
	AnnouncementSound_Parms.OptionalObject = OptionalObject;
	AnnouncementSound_Parms.PC = PC;

	this->ProcessEvent ( pFnAnnouncementSound, &AnnouncementSound_Parms, NULL );

	return AnnouncementSound_Parms.ReturnValue;
};

// Function SGSOrion.SGS_VehicleKillMessage.ClientReceive
// [0x00026102] 
// Parameters infos:
// class APlayerController*       P                              ( CPF_Parm )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

void USGS_VehicleKillMessage::ClientReceive ( class APlayerController* P, int Switch, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnClientReceive = NULL;

	if ( ! pFnClientReceive )
		pFnClientReceive = (UFunction*) UObject::GObjObjects()->Data[ 63106 ];

	USGS_VehicleKillMessage_execClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI01 = RelatedPRI01;
	ClientReceive_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnClientReceive, &ClientReceive_Parms, NULL );
};

// Function SGSOrion.SGS_VehicleKillMessage.GetString
// [0x00026002] 
// Parameters infos:
// struct FString                 ReturnValue                    ( CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink )
// int                            Switch                         ( CPF_OptionalParm | CPF_Parm )
// unsigned long                  bPRI1HUD                       ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI                     ( CPF_OptionalParm | CPF_Parm )
// class APlayerReplicationInfo*  RelatedPRI01                   ( CPF_OptionalParm | CPF_Parm )
// class UObject*                 OptionalObject                 ( CPF_OptionalParm | CPF_Parm )

struct FString USGS_VehicleKillMessage::GetString ( int Switch, unsigned long bPRI1HUD, class APlayerReplicationInfo* RelatedPRI, class APlayerReplicationInfo* RelatedPRI01, class UObject* OptionalObject )
{
	static UFunction* pFnGetString = NULL;

	if ( ! pFnGetString )
		pFnGetString = (UFunction*) UObject::GObjObjects()->Data[ 63099 ];

	USGS_VehicleKillMessage_execGetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI01 = RelatedPRI01;
	GetString_Parms.OptionalObject = OptionalObject;

	this->ProcessEvent ( pFnGetString, &GetString_Parms, NULL );

	return GetString_Parms.ReturnValue;
};

// Function SGSOrion.SGS_Weap_CV10_Silenced3D.PostBeginPlay
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_CV10_Silenced3D::PostBeginPlay ( )
{
	static UFunction* pFnPostBeginPlay = NULL;

	if ( ! pFnPostBeginPlay )
		pFnPostBeginPlay = (UFunction*) UObject::GObjObjects()->Data[ 63573 ];

	ASGS_Weap_CV10_Silenced3D_execPostBeginPlay_Parms PostBeginPlay_Parms;

	this->ProcessEvent ( pFnPostBeginPlay, &PostBeginPlay_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.CustomFire
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_Flag::CustomFire ( )
{
	static UFunction* pFnCustomFire = NULL;

	if ( ! pFnCustomFire )
		pFnCustomFire = (UFunction*) UObject::GObjObjects()->Data[ 63678 ];

	ASGS_Weap_Flag_execCustomFire_Parms CustomFire_Parms;

	this->ProcessEvent ( pFnCustomFire, &CustomFire_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.DoDamage
// [0x00820002] 
// Parameters infos:

void ASGS_Weap_Flag::DoDamage ( )
{
	static UFunction* pFnDoDamage = NULL;

	if ( ! pFnDoDamage )
		pFnDoDamage = (UFunction*) UObject::GObjObjects()->Data[ 63675 ];

	ASGS_Weap_Flag_execDoDamage_Parms DoDamage_Parms;

	this->ProcessEvent ( pFnDoDamage, &DoDamage_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.PutDownWeapon
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_Flag::PutDownWeapon ( )
{
	static UFunction* pFnPutDownWeapon = NULL;

	if ( ! pFnPutDownWeapon )
		pFnPutDownWeapon = (UFunction*) UObject::GObjObjects()->Data[ 63674 ];

	ASGS_Weap_Flag_execPutDownWeapon_Parms PutDownWeapon_Parms;

	this->ProcessEvent ( pFnPutDownWeapon, &PutDownWeapon_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.UpdateAimSpread
// [0x00020100] 
// Parameters infos:
// float                          DeltaTime                      ( CPF_Parm )

void ASGS_Weap_Flag::UpdateAimSpread ( float DeltaTime )
{
	static UFunction* pFnUpdateAimSpread = NULL;

	if ( ! pFnUpdateAimSpread )
		pFnUpdateAimSpread = (UFunction*) UObject::GObjObjects()->Data[ 63672 ];

	ASGS_Weap_Flag_execUpdateAimSpread_Parms UpdateAimSpread_Parms;
	UpdateAimSpread_Parms.DeltaTime = DeltaTime;

	this->ProcessEvent ( pFnUpdateAimSpread, &UpdateAimSpread_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.ReloadAmmo
// [0x002200C0] 
// Parameters infos:

void ASGS_Weap_Flag::ReloadAmmo ( )
{
	static UFunction* pFnReloadAmmo = NULL;

	if ( ! pFnReloadAmmo )
		pFnReloadAmmo = (UFunction*) UObject::GObjObjects()->Data[ 63671 ];

	ASGS_Weap_Flag_execReloadAmmo_Parms ReloadAmmo_Parms;

	this->ProcessEvent ( pFnReloadAmmo, &ReloadAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_Flag.ConsumeAmmo
// [0x00020000] 
// Parameters infos:
// unsigned char                  FireModeNum                    ( CPF_Parm )

void ASGS_Weap_Flag::ConsumeAmmo ( unsigned char FireModeNum )
{
	static UFunction* pFnConsumeAmmo = NULL;

	if ( ! pFnConsumeAmmo )
		pFnConsumeAmmo = (UFunction*) UObject::GObjObjects()->Data[ 63669 ];

	ASGS_Weap_Flag_execConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;

	this->ProcessEvent ( pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun_3D.PlayImpactEffects
// [0x00020100] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Weap_MedicGun_3D::PlayImpactEffects ( struct FVector HitLocation )
{
	static UFunction* pFnPlayImpactEffects = NULL;

	if ( ! pFnPlayImpactEffects )
		pFnPlayImpactEffects = (UFunction*) UObject::GObjObjects()->Data[ 63870 ];

	ASGS_Weap_MedicGun_3D_execPlayImpactEffects_Parms PlayImpactEffects_Parms;
	memcpy ( &PlayImpactEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnPlayImpactEffects, &PlayImpactEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun_3D.ThirdPersonFireEffects
// [0x00020102] 
// Parameters infos:
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Weap_MedicGun_3D::ThirdPersonFireEffects ( struct FVector HitLocation )
{
	static UFunction* pFnThirdPersonFireEffects = NULL;

	if ( ! pFnThirdPersonFireEffects )
		pFnThirdPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 63865 ];

	ASGS_Weap_MedicGun_3D_execThirdPersonFireEffects_Parms ThirdPersonFireEffects_Parms;
	memcpy ( &ThirdPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnThirdPersonFireEffects, &ThirdPersonFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun_3D.FirstPersonFireEffects
// [0x00020102] 
// Parameters infos:
// class AWeapon*                 PawnWeapon                     ( CPF_Parm )
// struct FVector                 HitLocation                    ( CPF_Parm )

void ASGS_Weap_MedicGun_3D::FirstPersonFireEffects ( class AWeapon* PawnWeapon, struct FVector HitLocation )
{
	static UFunction* pFnFirstPersonFireEffects = NULL;

	if ( ! pFnFirstPersonFireEffects )
		pFnFirstPersonFireEffects = (UFunction*) UObject::GObjObjects()->Data[ 63862 ];

	ASGS_Weap_MedicGun_3D_execFirstPersonFireEffects_Parms FirstPersonFireEffects_Parms;
	FirstPersonFireEffects_Parms.PawnWeapon = PawnWeapon;
	memcpy ( &FirstPersonFireEffects_Parms.HitLocation, &HitLocation, 0xC );

	this->ProcessEvent ( pFnFirstPersonFireEffects, &FirstPersonFireEffects_Parms, NULL );
};

// Function SGSOrion.SGS_Weap_MedicGun_3D.StopMuzzleFlash
// [0x00020102] 
// Parameters infos:

void ASGS_Weap_MedicGun_3D::StopMuzzleFlash ( )
{
	static UFunction* pFnStopMuzzleFlash = NULL;

	if ( ! pFnStopMuzzleFlash )
		pFnStopMuzzleFlash = (UFunction*) UObject::GObjObjects()->Data[ 63861 ];

	ASGS_Weap_MedicGun_3D_execStopMuzzleFlash_Parms StopMuzzleFlash_Parms;

	this->ProcessEvent ( pFnStopMuzzleFlash, &StopMuzzleFlash_Parms, NULL );
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif