/*
#############################################################################################
# Bullet Run (Unknown) SDK
# ========================================================================================= #
# File: PlanBGame_classes.h
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Constants
# ========================================================================================= #
*/

#define CONST_ACHIEVEMENT_SEPARATOR                              2880154539
#define CONST_MAX_MOD_TYPE_COUNT                                 7
#define CONST_MAX_PARTS                                          13
#define CONST_MAX_TEX_SCHEMES                                    5
#define CONST_MAX_ATTACHMENTS                                    4
#define CONST_MAX_COLOR_SCHEMES                                  2
#define CONST_MAX_MODS                                           7
#define CONST_INVALID_BASE_WEAPON                                255
#define CONST_MAX_MOD_CODE                                       15
#define CONST_fMaxSprintStamina                                  100.f
#define CONST_iMaxSprintRecheckCounter                           3
#define CONST_MinTimeBetweenPainSounds                           0.35
#define CONST_MaxMessageHistory                                  50
#define CONST_DeathInfoXSpacing                                  5
#define CONST_DeathInfoYSpacing                                  5
#define CONST_GS_USERNAME_MAXLENGTH                              25
#define CONST_GS_PASSWORD_MAXLENGTH                              10
#define CONST_GS_MESSAGE_MAXLENGTH                               255
#define CONST_GS_EMAIL_MAXLENGTH                                 50
#define CONST_GS_CDKEY_PART_MAXLENGTH                            4
#define CONST_CONTEXT_PRESENCE_MENUPRESENCE                      0
#define CONST_CONTEXT_GAME_MODE                                  0x0000800B
#define CONST_CONTEXT_GAME_MODE_DM                               0
#define CONST_CONTEXT_GAME_MODE_CTF                              1
#define CONST_CONTEXT_GAME_MODE_WAR                              2
#define CONST_CONTEXT_GAME_MODE_VCTF                             3
#define CONST_CONTEXT_GAME_MODE_TDM                              4
#define CONST_CONTEXT_GAME_MODE_DUEL                             5
#define CONST_CONTEXT_GAME_MODE_CUSTOM                           6
#define CONST_CONTEXT_GAME_MODE_CAMPAIGN                         7
#define CONST_CONTEXT_GAME_MODE_LTS                              8
#define CONST_CONTEXT_BOTSKILL                                   0
#define CONST_CONTEXT_MAPNAME                                    1
#define CONST_CONTEXT_PURESERVER                                 6
#define CONST_CONTEXT_LOCKEDSERVER                               7
#define CONST_CONTEXT_VSBOTS                                     8
#define CONST_CONTEXT_CAMPAIGN                                   9
#define CONST_CONTEXT_FORCERESPAWN                               10
#define CONST_CONTEXT_ALLOWKEYBOARD                              11
#define CONST_CONTEXT_FULLSERVER                                 12
#define CONST_CONTEXT_EMPTYSERVER                                13
#define CONST_CONTEXT_DEDICATEDSERVER                            14
#define CONST_CONTEXT_INLOBBY                                    15
#define CONST_CONTEXT_FRIENDLYFIRE                               16
#define CONST_CONTEXT_BOOST                                      17
#define CONST_CONTEXT_MAPNAME_CUSTOM                             0
#define CONST_CONTEXT_BOTSKILL_AUTOADJUSTSKILL                   0
#define CONST_CONTEXT_BOTSKILL_NOVICE                            1
#define CONST_CONTEXT_BOTSKILL_AVERAGE                           2
#define CONST_CONTEXT_BOTSKILL_EXPERIENCED                       3
#define CONST_CONTEXT_BOTSKILL_SKILLED                           4
#define CONST_CONTEXT_BOTSKILL_ADEPT                             5
#define CONST_CONTEXT_BOTSKILL_MASTERFUL                         6
#define CONST_CONTEXT_BOTSKILL_INHUMAN                           7
#define CONST_CONTEXT_BOTSKILL_GODLIKE                           8
#define CONST_CONTEXT_GOALSCORE                                  0
#define CONST_CONTEXT_GOALSCORE01                                1
#define CONST_CONTEXT_GOALSCORE02                                2
#define CONST_CONTEXT_GOALSCORE03                                3
#define CONST_CONTEXT_GOALSCORE04                                4
#define CONST_CONTEXT_NUMBOTS                                    0
#define CONST_CONTEXT_NUMBOTS01                                  1
#define CONST_CONTEXT_NUMBOTS02                                  2
#define CONST_CONTEXT_NUMBOTS03                                  3
#define CONST_CONTEXT_NUMBOTS04                                  4
#define CONST_CONTEXT_NUMBOTS05                                  5
#define CONST_CONTEXT_NUMBOTS06                                  6
#define CONST_CONTEXT_NUMBOTS07                                  7
#define CONST_CONTEXT_NUMBOTS08                                  8
#define CONST_CONTEXT_TIMELIMIT                                  0
#define CONST_CONTEXT_TIMELIMIT01                                1
#define CONST_CONTEXT_TIMELIMIT02                                2
#define CONST_CONTEXT_TIMELIMIT03                                3
#define CONST_CONTEXT_TIMELIMIT04                                4
#define CONST_CONTEXT_PURESERVER_NO                              0
#define CONST_CONTEXT_PURESERVER_YES                             1
#define CONST_CONTEXT_PURESERVER_ANY                             2
#define CONST_CONTEXT_INLOBBY_NO                                 0
#define CONST_CONTEXT_INLOBBY_YES                                1
#define CONST_CONTEXT_INLOBBY_ANY                                2
#define CONST_CONTEXT_FRIENDLYFIRE_NO                            0
#define CONST_CONTEXT_FRIENDLYFIRE_YES                           1
#define CONST_CONTEXT_FRIENDLYFIRE_ANY                           2
#define CONST_CONTEXT_BOOST_NO                                   1
#define CONST_CONTEXT_BOOST_ANY                                  0
#define CONST_CONTEXT_LOCKEDSERVER_NO                            0
#define CONST_CONTEXT_LOCKEDSERVER_YES                           1
#define CONST_CONTEXT_CAMPAIGN_NO                                0
#define CONST_CONTEXT_CAMPAIGN_YES                               1
#define CONST_CONTEXT_FORCERESPAWN_NO                            0
#define CONST_CONTEXT_FORCERESPAWN_YES                           1
#define CONST_CONTEXT_ALLOWKEYBOARD_NO                           0
#define CONST_CONTEXT_ALLOWKEYBOARD_YES                          1
#define CONST_CONTEXT_ALLOWKEYBOARD_ANY                          2
#define CONST_CONTEXT_FULLSERVER_NO                              0
#define CONST_CONTEXT_FULLSERVER_YES                             1
#define CONST_CONTEXT_EMPTYSERVER_NO                             0
#define CONST_CONTEXT_EMPTYSERVER_YES                            1
#define CONST_CONTEXT_DEDICATEDSERVER_NO                         0
#define CONST_CONTEXT_DEDICATEDSERVER_YES                        1
#define CONST_CONTEXT_VSBOTS_NONE                                0
#define CONST_CONTEXT_VSBOTS_1_TO                                1
#define CONST_CONTEXT_VSBOTS_1_TO01                              2
#define CONST_CONTEXT_VSBOTS_3_TO                                3
#define CONST_CONTEXT_VSBOTS_2_TO                                4
#define CONST_CONTEXT_VSBOTS_3_TO01                              5
#define CONST_CONTEXT_VSBOTS_4_TO                                6
#define CONST_PROPERTY_NUMBOTS                                   0x100000F7
#define CONST_PROPERTY_GOALSCORE                                 0x100000F8
#define CONST_PROPERTY_TIMELIMIT                                 0x100000F9
#define CONST_PROPERTY_LEADERBOARDRATING                         0x20000004
#define CONST_PROPERTY_EPICMUTATORS                              0x10000105
#define CONST_PROPERTY_RESPAWNTIME                               0x10000106
#define CONST_PROPERTY_CAMPAIGNTIMER                             0x10000107
#define CONST_PROPERTY_PLAYSTYLE                                 0x10000108
#define CONST_PROPERTY_GAMEVERSION                               0x10000109
#define CONST_PROPERTY_NUMSPECTATORS                             0x1000010A
#define CONST_PROPERTY_MAXSPECTATORS                             0x1000010B
#define CONST_PROPERTY_REGION                                    0x1000010C
#define CONST_PROPERTY_SPECIAL                                   0x1000010D
#define CONST_PROPERTY_ACCOUNTTYPE                               0x1000010E
#define CONST_PROPERTY_GAMERANK                                  0x1000010F
#define CONST_PROPERTY_CUSTOMMAPNAME                             0x40000001
#define CONST_PROPERTY_CUSTOMGAMEMODE                            0x40000002
#define CONST_PROPERTY_SERVERDESCRIPTION                         0x40000003
#define CONST_PROPERTY_CUSTOMMUTATORS                            0x40000004
#define CONST_PROPERTY_BANNEDPLAYERS                             0x40000005
#define CONST_PROPERTY_SERVERTAGS                                0x40000006
#define CONST_QUERY_DM                                           0
#define CONST_QUERY_TDM                                          1
#define CONST_QUERY_CTF                                          2
#define CONST_QUERY_VCTF                                         3
#define CONST_QUERY_WAR                                          4
#define CONST_QUERY_DUEL                                         5
#define CONST_QUERY_CAMPAIGN                                     6
#define CONST_STATS_VIEW_DM_PLAYER_ALLTIME                       1
#define CONST_STATS_VIEW_DM_RANKED_ALLTIME                       2
#define CONST_STATS_VIEW_DM_WEAPONS_ALLTIME                      3
#define CONST_STATS_VIEW_DM_VEHICLES_ALLTIME                     4
#define CONST_STATS_VIEW_DM_VEHICLEWEAPONS_ALLTIME               5
#define CONST_STATS_VIEW_DM_VEHICLES_RANKED_ALLTIME              6
#define CONST_STATS_VIEW_DM_VEHICLEWEAPONS_RANKED_ALLTIME        7
#define CONST_STATS_VIEW_DM_WEAPONS_RANKED_ALLTIME               8
#define CONST_m_sMessage_IAmOnline                               "\`systemmessage:iamonline\`"
#define CONST_FIXED_FORWARD                                      0
#define CONST_FIXED_BACKWARD                                     1
#define CONST_FIXED_RIGHT                                        2
#define CONST_FIXED_LEFT                                         3
#define CONST_FIXED_UP                                           4
#define CONST_FIXED_DOWN                                         5
#define CONST_FiringCountInfo_STILL_FIRING                       128
#define CONST_FiringCountInfo_MAX_COUNT                          50
#define CONST_maxPawnShots                                       6
#define CONST_maxWorldShots                                      6
#define CONST_MAXSTAKEOUTDIST                                    2000
#define CONST_ENEMYLOCATIONFUZZ                                  1200
#define CONST_TACTICALHEIGHTADVANTAGE                            320
#define CONST_MINSTRAFEDIST                                      200
#define CONST_MINVIEWDIST                                        200
#define CONST_AngleConvert                                       0.0000958738
#define CONST_maxPECounter                                       16
#define CONST_maxAwards                                          4
#define CONST_maxAwardItems                                      4
#define CONST_MaxTiers                                           4
#define CONST_PBCC_CACHESIZE_PERPLAYER                           6
#define CONST_PBCC_CACHESIZE_PERLOCALPLAYER                      15
#define CONST_PBCC_CACHESIZE_DROPPEDWEAPONS                      30
#define CONST_PBCC_MAXPLAYERS                                    20
#define CONST_defaultLifeSpan                                    4
#define CONST_Threshold                                          10
#define CONST_PresetBitsCount                                    4
#define CONST_MAX_ITEMS_IN_BASKET                                40
#define CONST_FansAndIGCStartX                                   512.f
#define CONST_FansAndIGCStartZ                                   -80.f
#define CONST_PBManagerErrorStart                                100
#define CONST_InvalidPrimaryIndex                                0xFF
#define CONST_PrimaryMask                                        0x000000FF
#define CONST_BonusMask                                          0xFFFFFFFF
#define CONST_NUM_WEAPONS_IN_PRESET                              4
#define CONST_iMaxRunningRequests                                1
#define CONST_bLogOutput                                         true
#define CONST_bUseKostasLog                                      false
#define CONST_MaxGameSetupOptions                                8
#define CONST_MaxNextMapVoteOptions                              100
#define CONST_PSI_CustomCharData                                 200
#define CONST_PSI_PlayStyle                                      201
#define CONST_PSI_AvatarPictureIndex                             202
#define CONST_PSI_XPPoints                                       203
#define CONST_PSI_Rank                                           204
#define CONST_PSI_WeaponPresets                                  205
#define CONST_PSI_WeaponConditions                               206
#define CONST_PSI_Country                                        207
#define CONST_PSI_Credits                                        208
#define CONST_PSI_Boosters                                       209
#define CONST_PSI_Coolness                                       210
#define CONST_PBPID_TextToSpeechMode                             367
#define CONST_PBPID_AllowCustomCharacters                        410
#define CONST_PBPID_MouseSmoothing                               420
#define CONST_PBPID_MouseSensitivityGame                         421
#define CONST_PBPID_MouseSensitivityMenus                        422
#define CONST_PBID_PlayerOnlineStatus                            423
#define CONST_PBID_PlayerOnlineStatusForced                      424
#define CONST_PBID_InputInvertMouse                              600
#define CONST_PBID_InputSmoothMouse                              601
#define CONST_PBID_InputAccelerateMouse                          602
#define CONST_PBID_InputMouseSensitivity                         603
#define CONST_PBID_InputToggleAimInput                           604
#define CONST_PBID_InputProfanityFilter                          605
#define CONST_MaxRanks                                           3
#define CONST_NEAROBJECTIVEDIST                                  500.0
#define CONST_TIME_DIFFERENCE                                    0.2f
#define CONST_INVALIDFIELD                                       -1

/*
# ========================================================================================= #
# Enums
# ========================================================================================= #
*/


/*
# ========================================================================================= #
# Classes
# ========================================================================================= #
*/

// Class PlanBGame.AGBakeMapsCommandlet
// 0x0000 (0x007C - 0x007C)
class UAGBakeMapsCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBAccountLevelCommand
// 0x0014 (0x0050 - 0x003C)
class UPBAccountLevelCommand : public UObject
{
public:
	class UPBAccountLevelCommand*                      pPB_ALC_Instance;                                 		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FAccountCanCommand >                permissionList;                                   		// 0x0040 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                accountLevel;                                     		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAccountTypeList
// 0x0010 (0x004C - 0x003C)
class UPBAccountTypeList : public UObject
{
public:
	class UPBAccountTypeList*                          pAccountTypeListArchetype;                        		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBAccountTypeContainer >           AccountTypeList;                                  		// 0x0040 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAchievement
// 0x0070 (0x00AC - 0x003C)
class UPBAchievement : public UObject
{
public:
	class APlayerController*                           m_Owner;                                          		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nID;                                            		// 0x0040 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	TArray< struct FTAchievementSupportedEvent >       m_Events;                                         		// 0x0044 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      m_bHidden : 1;                                    		// 0x0050 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      m_bLocked : 1;                                    		// 0x0050 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      m_bCompleted : 1;                                 		// 0x0050 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      m_bValuesStored : 1;                              		// 0x0050 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      m_bAnnounced : 1;                                 		// 0x0050 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      m_bClosed : 1;                                    		// 0x0050 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      m_bHasLockEvents : 1;                             		// 0x0050 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      m_bBeingUnlocked : 1;                             		// 0x0050 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	int                                                m_nClosedID;                                      		// 0x0054 (0x0004) [0x0000000000000000]              
	TArray< struct FName >                             m_sUnlockAchievementNames;                        		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UPBAchievement* >                    m_UnlockAchievementsArray;                        		// 0x0064 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBAchievement*                              m_InitialAchievement;                             		// 0x0070 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_sAchievementCaption;                            		// 0x0074 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     m_sAchievementDescription;                        		// 0x0080 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	int                                                m_nIconColumn;                                    		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nIconRow;                                       		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       m_AchievementSet;                                 		// 0x0094 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nSetID;                                         		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< unsigned char >                            m_Categories;                                     		// 0x00A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAchievementList
// 0x0070 (0x0248 - 0x01D8)
class APBAchievementList : public AActor
{
public:
	TArray< class UPBAchievement* >                    m_Achievements;                                   		// 0x01D8 (0x000C) [0x0000000014402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineUse )
	int                                                m_nMaxID;                                         		// 0x01E4 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	TArray< unsigned char >                            m_DisplayedCategories;                            		// 0x01E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UTexture2D*                                  m_AchievementsIcons;                              		// 0x01F4 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	float                                              m_nIconWidth;                                     		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              m_nIconHeight;                                    		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nOngoingCol;                                    		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nOngoingRow;                                    		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nLockedCol;                                     		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nLockedRow;                                     		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nHiddenCol;                                     		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nHiddenRow;                                     		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nCompleteCol;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nCompleteRow;                                   		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     m_SecretAchievementCaption;                       		// 0x0220 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     m_SecretAchievementDescription;                   		// 0x022C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USoundCue*                                   m_CompleteSoundCue;                               		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_AccomplishedSoundCue;                           		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_UnlockedSoundCue;                               		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBAchievementList*                          Archetype;                                        		// 0x0244 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBActorController
// 0x003C (0x04E0 - 0x04A4)
class APBActorController : public APawn
{
public:
	int                                                MovingTicks;                                      		// 0x04A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              MovingTicksMinMove;                               		// 0x04A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MovingTicksToMoveAnim;                            		// 0x04AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      MovementMode;                                     		// 0x04B0 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      sEnergyStatus;                                    		// 0x04B1 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	class APBCharacter*                                PreviousCharacter;                                		// 0x04B4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     PawnAcceleration;                                 		// 0x04B8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     SkillIconName;                                    		// 0x04C4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fEnergyRemaining;                                 		// 0x04D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     CustomActionName;                                 		// 0x04D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBPaperPlanePawn
// 0x0138 (0x0618 - 0x04E0)
class APBPaperPlanePawn : public APBActorController
{
public:
	float                                              fHeatUpPercent;                                   		// 0x04E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bAutoAccending : 1;                               		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bCanSpeedBoost : 1;                               		// 0x04E4 (0x0004) [0x0000000000002020] [0x00000002] ( CPF_Net | CPF_Transient )
	unsigned long                                      bSpeedBoostUsed : 1;                              		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bSpeedBoostActive : 1;                            		// 0x04E4 (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	unsigned long                                      bShieldsUp : 1;                                   		// 0x04E4 (0x0004) [0x0000000000002020] [0x00000010] ( CPF_Net | CPF_Transient )
	unsigned long                                      bShouldDecend : 1;                                		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bShouldAccend : 1;                                		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bAligningToCamera : 1;                            		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bAligningToCameraLocation : 1;                    		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bFirstCameraView : 1;                             		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bDontAutoExplode : 1;                             		// 0x04E4 (0x0004) [0x0000000000002020] [0x00000400] ( CPF_Net | CPF_Transient )
	unsigned long                                      bSwitchToPDAPending : 1;                          		// 0x04E4 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      PlayingSmoke : 1;                                 		// 0x04E4 (0x0004) [0x0000000000002020] [0x00001000] ( CPF_Net | CPF_Transient )
	unsigned long                                      PlayingFire : 1;                                  		// 0x04E4 (0x0004) [0x0000000000002020] [0x00002000] ( CPF_Net | CPF_Transient )
	unsigned long                                      PlayingSparks : 1;                                		// 0x04E4 (0x0004) [0x0000000000002020] [0x00004000] ( CPF_Net | CPF_Transient )
	struct FName                                       CurrentState;                                     		// 0x04E8 (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                TargetTeam;                                       		// 0x04F0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fAccumulatedHeat;                                 		// 0x04F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                OldYaw;                                           		// 0x04F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                CurrentYaw;                                       		// 0x04FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MovingUp;                                         		// 0x0500 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     CameraStartLocation;                              		// 0x0504 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    CameraStartRotation;                              		// 0x0510 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              AlignTimeLeft;                                    		// 0x051C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              AlignTimeMax;                                     		// 0x0520 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      ownerTeam;                                        		// 0x0524 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	float                                              EnvironmentalDamageTaken;                         		// 0x0528 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                EnvironmentalDamagePerSecond;                     		// 0x052C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinimumDamageForSmoke;                            		// 0x0530 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinimumDamageForFire;                             		// 0x0534 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinimumEnvironmentalDamageForExplode;             		// 0x0538 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                FloorDistanceFromPlaneForDamage;                  		// 0x053C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     BaseTrailEffectVelocity;                          		// 0x0540 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     BoostTrailEffectVelocity;                         		// 0x054C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMeshComponent*                      pShieldMeshComp;                                  		// 0x0558 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      pSkelMesh;                                        		// 0x055C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pFlyingLoopAC;                                    		// 0x0560 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pSparksComponent;                                 		// 0x0564 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pSmokeComponent;                                  		// 0x0568 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pFireComponent;                                   		// 0x056C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    TrailEffectComponentLeft;                         		// 0x0570 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    TrailEffectComponentRight;                        		// 0x0574 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             BoostStartSoundComponent;                         		// 0x0578 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             BoostSoundComponent;                              		// 0x057C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             OverheatSoundComponent;                           		// 0x0580 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             GrindingSoundComponent;                           		// 0x0584 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             FireSoundComponent;                               		// 0x0588 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              BoostStartFadeinDuration;                         		// 0x058C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BoostEndFadeoutDuration;                          		// 0x0590 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OverheatFadeInDuration;                           		// 0x0594 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OverheatFadeOutDuration;                          		// 0x0598 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BostLoopingSoundDelay;                            		// 0x059C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             BreakingPS;                                       		// 0x05A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x05A4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInterface*                          pFriendlyMaterialInstance;                        		// 0x05A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pEnemyMaterialInstance;                           		// 0x05AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pFriendlyShieldMaterialInstance;                  		// 0x05B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pEnemyShieldMaterialInstance;                     		// 0x05B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCameraHeightFromLocation;                        		// 0x05B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCameraDistanceFromLocation;                      		// 0x05BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HitLife;                                          		// 0x05C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHeatPerSecondWhileBoosting;                      		// 0x05C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxBoostingHeat;                                 		// 0x05C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBoostingHeatDecay;                               		// 0x05CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                AirSpeedBoost;                                    		// 0x05D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilDestroyAfterDeath;                      		// 0x05D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilReleaseControlAfterDeath;               		// 0x05D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilAutoAccendEnd;                          		// 0x05DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeBoostLasts;                                  		// 0x05E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AttackDistance;                                   		// 0x05E4 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              ExplodingDamage;                                  		// 0x05E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplodingRadiusMax;                               		// 0x05EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplodingRadiusEffective;                         		// 0x05F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAccendZ;                                         		// 0x05F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDecayZ;                                          		// 0x05F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDecayZInAutoMode;                                		// 0x05FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fManualAccend;                                    		// 0x0600 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fManualDecend;                                    		// 0x0604 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinPitchAngle;                                   		// 0x0608 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxPitchAngle;                                   		// 0x060C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   NormalFlyingLoopingSound;                         		// 0x0610 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BlowupOneShotSound;                               		// 0x0614 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBActorFactoryAI
// 0x0008 (0x008C - 0x0084)
class UPBActorFactoryAI : public UActorFactoryAI
{
public:
	class APBCharacter*                                PawnArchetype;                                    		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Health;                                           		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnalyzeCookedContentCommandlet
// 0x0018 (0x0094 - 0x007C)
class UPBAnalyzeCookedContentCommandlet : public UCommandlet
{
public:
	unsigned char                                      UnknownData00[ 0x18 ];                            		// 0x007C (0x0018) MISSED OFFSET
public:
};

// Class PlanBGame.PBAnalyzeCookedPackagesCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBAnalyzeCookedPackagesCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBAnim_AimOffset
// 0x001C (0x0158 - 0x013C)
class UPBAnim_AimOffset : public UAnimNodeAimOffset
{
public:
	class APBPawn*                                     WarPawnOwner;                                     		// 0x013C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              TurnInPlaceOffset;                                		// 0x0140 (0x0004) [0x0000000000002003]              ( CPF_Edit | CPF_Const | CPF_Transient )
	float                                              LastAimX;                                         		// 0x0144 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bInterpolating : 1;                               		// 0x0148 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	float                                              InterpSpeed;                                      		// 0x014C (0x0004) [0x0000000000000000]              
	struct FName                                       CurProfileName;                                   		// 0x0150 (0x0008) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_BlendAnimsByAim
// 0x0004 (0x01C0 - 0x01BC)
class UPBAnim_BlendAnimsByAim : public UAnimNodeSequenceBlendByAim
{
public:
	class APBPawn*                                     WarPawnOwner;                                     		// 0x01BC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_BlendByDirection
// 0x0010 (0x015C - 0x014C)
class UPBAnim_BlendByDirection : public UAnimNodeSequenceBlendBase
{
public:
	float                                              BlendSpeed;                                       		// 0x014C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DirAngle;                                         		// 0x0150 (0x0004) [0x0000000000000000]              
	float                                              LastRelevantTime;                                 		// 0x0154 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bInterpolateWeights : 1;                          		// 0x0158 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_DirectionalMove2Idle
// 0x000C (0x0168 - 0x015C)
class UPBAnim_DirectionalMove2Idle : public UPBAnim_BlendByDirection
{
public:
	TArray< struct FDTransInfo >                       DTransList;                                       		// 0x015C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_BlendList
// 0x000C (0x0120 - 0x0114)
class UPBAnim_BlendList : public UAnimNodeBlendList
{
public:
	TArray< float >                                    ChildBlendInTime;                                 		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_BlendByFire
// 0x0004 (0x0124 - 0x0120)
class UPBAnim_BlendByFire : public UPBAnim_BlendList
{
public:
	class APBPawn*                                     PBPawnOwner;                                      		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_BlendByTargeting
// 0x000C (0x012C - 0x0120)
class UPBAnim_BlendByTargeting : public UPBAnim_BlendList
{
public:
	class APBPawn*                                     PBPawnOwner;                                      		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bMergeAimFiringIntoIdle : 1;                      		// 0x0124 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bMergeAimIdleIntoIdleReady : 1;                   		// 0x0124 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bMergeDownSightsIntoAim : 1;                      		// 0x0124 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bMergeDownSightsFireIntoIdle : 1;                 		// 0x0124 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              Aim2IdleBlendOutTime;                             		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnim_BlendListByConsoleCommand
// 0x0000 (0x0120 - 0x0120)
class UPBAnim_BlendListByConsoleCommand : public UPBAnim_BlendList
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByHolster
// 0x0000 (0x0120 - 0x0120)
class UPBAnimBlendByHolster : public UPBAnim_BlendList
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByLadderPosition
// 0x0004 (0x0124 - 0x0120)
class UPBAnimBlendByLadderPosition : public UPBAnim_BlendList
{
public:
	class APBPawn*                                     PBPawnOwner;                                      		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnimBlendByVelocityZ
// 0x000C (0x012C - 0x0120)
class UPBAnimBlendByVelocityZ : public UPBAnim_BlendList
{
public:
	class APBPawn*                                     PBPawnOwner;                                      		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              VelocityIdleThreshold;                            		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Move2IdleBlendOutTime;                            		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNodeSlot
// 0x0010 (0x0130 - 0x0120)
class UPBAnimNodeSlot : public UPBAnim_BlendList
{
public:
	float                                              BlendTime;                                        		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       DefaultChannel;                                   		// 0x0124 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFilterAnimEndEvents : 1;                         		// 0x012C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPlaySourceIfSlotNotFound : 1;                    		// 0x012C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDoNotRestartSequences : 1;                       		// 0x012C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bActiveChannelLooping : 1;                        		// 0x012C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bActivePauseAtEnd : 1;                            		// 0x012C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bIsPlayingChannel : 1;                            		// 0x012C (0x0004) [0x0000000000002002] [0x00000020] ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_BlendPerBone
// 0x003B (0x012C - 0x00F1)
class UPBAnim_BlendPerBone : public UAnimNodeBlendBase
{
public:
	class APBPawn*                                     WarPawnOwner;                                     		// 0x00F4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FPBPerBoneMaskInfo >                MaskList;                                         		// 0x00F8 (0x000C) [0x0000000004400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
	unsigned char                                      RotationBlendType;                                		// 0x0104 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FBoneAtom >                         SourceAtoms;                                      		// 0x0108 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FMatrix >                           SourceMeshSpaceTM;                                		// 0x0114 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FMatrix >                           ResultMeshSpaceTM;                                		// 0x0120 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_MovementNode
// 0x0064 (0x0178 - 0x0114)
class UPBAnim_MovementNode : public UAnimNodeBlendList
{
public:
	unsigned char                                      SpeedType;                                        		// 0x0114 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bScaleAnimationsPlayRateBySpeed : 1;              		// 0x0118 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bScaleConstraintsByBaseSpeed : 1;                 		// 0x0118 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bShouldHandleTransitions : 1;                     		// 0x0118 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPlayingTransitionToIdle : 1;                     		// 0x0118 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bTransitionFinished : 1;                          		// 0x0118 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	class APBPawn*                                     WarPawnOwner;                                     		// 0x011C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              Speed;                                            		// 0x0120 (0x0004) [0x0000000000000000]              
	float                                              IdleBlendOutTime;                                 		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendUpTime;                                      		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDownTime;                                    		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDownPerc;                                    		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MoveCycleFirstStepStartPosition;                  		// 0x0134 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimNodeSynch*                              SynchNode;                                        		// 0x0138 (0x0004) [0x0000000000000000]              
	struct FName                                       Name_SynchNode;                                   		// 0x013C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       Name_SynchGroupName;                              		// 0x0144 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              TransitionBlendOutTime;                           		// 0x014C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UAnimNode* >                         TransitionNodes;                                  		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              PrevGroupRelPos;                                  		// 0x015C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              GroupRelPos;                                      		// 0x0160 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FMovementDef >                      Movements;                                        		// 0x0164 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FPointer                                    LastTransInfo;                                    		// 0x0170 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              TransWeightResumeTheshold;                        		// 0x0174 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnim_Offset
// 0x002B (0x011C - 0x00F1)
class UPBAnim_Offset : public UAnimNodeBlendBase
{
public:
	TArray< struct FOffsetComponent >                  Offsets;                                          		// 0x00F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                PassThroughAtOrAboveLOD;                          		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< unsigned char >                            RequiredBones;                                    		// 0x0104 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      BoneToOfstCpnt;                                   		// 0x0110 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_TurnInPlace
// 0x004C (0x0150 - 0x0104)
class UPBAnim_TurnInPlace : public UAnimNodeBlend
{
public:
	unsigned long                                      bInitialized : 1;                                 		// 0x0104 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bRootRotInitialized : 1;                          		// 0x0104 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bDelayBlendOutToPlayAnim : 1;                     		// 0x0104 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPlayingTurnTransition : 1;                       		// 0x0104 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	int                                                LastPawnYaw;                                      		// 0x0108 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              PawnRotationRate;                                 		// 0x010C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                LastRootBoneYaw;                                  		// 0x0110 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                YawOffset;                                        		// 0x0114 (0x0004) [0x0000000000002003]              ( CPF_Edit | CPF_Const | CPF_Transient )
	float                                              RelativeOffset;                                   		// 0x0118 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class APBPawn*                                     WarPawnOwner;                                     		// 0x011C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< class UPBAnim_AimOffset* >                 OffsetNodes;                                      		// 0x0120 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FRotTransitionInfo >                RotTransitions;                                   		// 0x012C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              TransitionBlendTime;                              		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CurrentTransitionIndex;                           		// 0x013C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              TransitionThresholdAngle;                         		// 0x0140 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UPBAnim_TurnInPlace_Player* >        PlayerNodes;                                      		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_TurnInPlace_Player
// 0x000C (0x014C - 0x0140)
class UPBAnim_TurnInPlace_Player : public UAnimNodeSequence
{
public:
	TArray< struct FTIP_Transition >                   TIP_Transitions;                                  		// 0x0140 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnim_TurnInPlace_Rotator
// 0x0007 (0x00F8 - 0x00F1)
class UPBAnim_TurnInPlace_Rotator : public UAnimNodeBlendBase
{
public:
	class UPBAnim_TurnInPlace*                         TurnInPlaceNode;                                  		// 0x00F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class PlanBGame.PBAnimBlendBase
// 0x0010 (0x0124 - 0x0114)
class UPBAnimBlendBase : public UAnimNodeBlendList
{
public:
	float                                              BlendTime;                                        		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< float >                                    ChildBlendTimes;                                  		// 0x0118 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAnimBlendByDirection
// 0x0005 (0x0129 - 0x0124)
class UPBAnimBlendByDirection : public UPBAnimBlendBase
{
public:
	unsigned long                                      bAdjustRateByVelocity : 1;                        		// 0x0124 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      LastDirection;                                    		// 0x0128 (0x0001) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class PlanBGame.PBAnimBlendByDodge
// 0x0003 (0x012C - 0x0129)
class UPBAnimBlendByDodge : public UPBAnimBlendByDirection
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByFall
// 0x0020 (0x0144 - 0x0124)
class UPBAnimBlendByFall : public UPBAnimBlendBase
{
public:
	unsigned long                                      bIgnoreDoubleJumps : 1;                           		// 0x0124 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDidDoubleJump : 1;                               		// 0x0124 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bDodgeFall : 1;                                   		// 0x0124 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDidLongFallJump : 1;                             		// 0x0124 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	float                                              PreLandTime;                                      		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PreLandStartUprightTime;                          		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ToDblJumpUprightTime;                             		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      FallState;                                        		// 0x0134 (0x0001) [0x0000000000000002]              ( CPF_Const )
	float                                              LastFallingVelocity;                              		// 0x0138 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              PlayDoubleFallWhenHigherThen;                     		// 0x013C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UPBAnimNodeJumpLeanOffset*                   CachedLeanNode;                                   		// 0x0140 (0x0004) [0x0000000020000002]              ( CPF_Const | CPF_Deprecated )
public:
};

// Class PlanBGame.PBAnimBlendByGender
// 0x0000 (0x0124 - 0x0124)
class UPBAnimBlendByGender : public UPBAnimBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByIdle
// 0x001C (0x0140 - 0x0124)
class UPBAnimBlendByIdle : public UPBAnimBlendBase
{
public:
	class UPBSkelControl_Twist*                        TwistControl;                                     		// 0x0124 (0x0004) [0x0000000020002000]              ( CPF_Transient | CPF_Deprecated )
	struct FName                                       TwistControlName;                                 		// 0x0128 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TurnAnimNames[ 0x2 ];                             		// 0x0130 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimBlendByPhysics
// 0x0040 (0x0164 - 0x0124)
class UPBAnimBlendByPhysics : public UPBAnimBlendBase
{
public:
	int                                                PhysicsMap[ 0xC ];                                		// 0x0124 (0x0030) [0x0000000000000001]              ( CPF_Edit )
	int                                                LastPhysics;                                      		// 0x0154 (0x0004) [0x0000000000000000]              
	float                                              LandBlendDelay;                                   		// 0x0158 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PendingChildIndex;                                		// 0x015C (0x0004) [0x0000000000000000]              
	float                                              PendingTimeToGo;                                  		// 0x0160 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBAnimBlendByPosture
// 0x0000 (0x0124 - 0x0124)
class UPBAnimBlendByPosture : public UPBAnimBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByPostureTransition
// 0x0004 (0x0128 - 0x0124)
class UPBAnimBlendByPostureTransition : public UPBAnimBlendBase
{
public:
	unsigned long                                      bCrouching : 1;                                   		// 0x0124 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPlayingTransition : 1;                           		// 0x0124 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBAnimBlendBySurface
// 0x0000 (0x0124 - 0x0124)
class UPBAnimBlendBySurface : public UPBAnimBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByWeaponType
// 0x0000 (0x0124 - 0x0124)
class UPBAnimBlendByWeaponType : public UPBAnimBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimBlendRagdoll
// 0x0000 (0x0124 - 0x0124)
class UPBAnimBlendRagdoll : public UPBAnimBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByDriving
// 0x0000 (0x012C - 0x012C)
class UPBAnimBlendByDriving : public UAnimNodeBlendPerBone
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByGroundDodge
// 0x0081 (0x0195 - 0x0114)
class UPBAnimBlendByGroundDodge : public UAnimNodeBlendList
{
public:
	struct FName                                       DodgeAnims[ 0x10 ];                               		// 0x0114 (0x0080) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LastDodgeDir;                                     		// 0x0194 (0x0001) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBAnimBlendBySpeed
// 0x0008 (0x010C - 0x0104)
class UPBAnimBlendBySpeed : public UAnimNodeBlend
{
public:
	float                                              MinSpeed;                                         		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxSpeed;                                         		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimBlendByWeapon
// 0x0010 (0x013C - 0x012C)
class UPBAnimBlendByWeapon : public UAnimNodeBlendPerBone
{
public:
	unsigned long                                      bLooping : 1;                                     		// 0x012C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bReloading : 1;                                   		// 0x012C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bPrevReloadingState : 1;                          		// 0x012C (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	struct FName                                       LoopingAnim;                                      		// 0x0130 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendTime;                                        		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNode_BlendAnimsByDirection
// 0x0024 (0x0170 - 0x014C)
class UPBAnimNode_BlendAnimsByDirection : public UAnimNodeSequenceBlendBase
{
public:
	unsigned long                                      bAddRotationRate : 1;                             		// 0x014C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              BlendSpeed;                                       		// 0x0150 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DirAngle;                                         		// 0x0154 (0x0004) [0x0000000000000000]              
	struct FVector                                     MoveDir;                                          		// 0x0158 (0x000C) [0x0000000000000000]              
	int                                                LastYaw;                                          		// 0x0164 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              YawRotationRate;                                  		// 0x0168 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPawn*                                     pPBPawn;                                          		// 0x016C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnimNodeJumpLeanOffset
// 0x002C (0x0168 - 0x013C)
class UPBAnimNodeJumpLeanOffset : public UAnimNodeAimOffset
{
public:
	float                                              JumpLeanStrength;                                 		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxLeanChangeSpeed;                               		// 0x0140 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bMultiplyByZVelocity : 1;                         		// 0x0144 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDodging : 1;                                     		// 0x0144 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOldDodging : 1;                                  		// 0x0144 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDoubleJumping : 1;                               		// 0x0144 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bOldDoubleJumping : 1;                            		// 0x0144 (0x0004) [0x0000000000000000] [0x00000010] 
	class UAnimNodeAimOffset*                          CachedAimNode;                                    		// 0x0148 (0x0004) [0x0000000000000000]              
	struct FName                                       OldAimProfileName;                                		// 0x014C (0x0008) [0x0000000000000000]              
	struct FVector2D                                   PreBlendAim;                                      		// 0x0154 (0x0008) [0x0000000000000000]              
	float                                              LeanWeight;                                       		// 0x015C (0x0004) [0x0000000000000000]              
	float                                              LeanWeightTarget;                                 		// 0x0160 (0x0004) [0x0000000000000000]              
	float                                              BlendTimeToGo;                                    		// 0x0164 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBAnimNodeSequence
// 0x0010 (0x0150 - 0x0140)
class UPBAnimNodeSequence : public UAnimNodeSequence
{
public:
	unsigned long                                      bAutoStart : 1;                                   		// 0x0140 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLoopLastSequence : 1;                            		// 0x0140 (0x0004) [0x0000000000000000] [0x00000002] 
	TArray< struct FName >                             SeqStack;                                         		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAvoidMarker
// 0x0008 (0x01E0 - 0x01D8)
class APBAvoidMarker : public AActor
{
public:
	unsigned char                                      TeamNum;                                          		// 0x01D8 (0x0001) [0x0000000000000000]              
	float                                              FearFactor;                                       		// 0x01DC (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBBasicSteam
// 0x0028 (0x0064 - 0x003C)
class UPBBasicSteam : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FScriptDelegate                             __delegateOnSteamShutdown__Delegate;              		// 0x0040 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnSteamGameOverlayActivated__Delegate;  		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnSteamMicroTxAuthorizationResponse__Delegate;		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBBot
// 0x0228 (0x05E0 - 0x03B8)
class APBBot : public AAIController
{
public:
	struct FVector                                     Destination;                                      		// 0x03B8 (0x000C) [0x0000000000000000]              
	float                                              WarningDelay;                                     		// 0x03C4 (0x0004) [0x0000000000000000]              
	class AProjectile*                                 WarningProjectile;                                		// 0x03C8 (0x0004) [0x0000000000000000]              
	struct FVector                                     MonitorStartLoc;                                  		// 0x03CC (0x000C) [0x0000000000000000]              
	class APawn*                                       MonitoredPawn;                                    		// 0x03D8 (0x0004) [0x0000000000000000]              
	float                                              MonitorMaxDistSq;                                 		// 0x03DC (0x0004) [0x0000000000000000]              
	struct FVector                                     LastSeenPos;                                      		// 0x03E0 (0x000C) [0x0000000000000000]              
	struct FVector                                     LastSeeingPos;                                    		// 0x03EC (0x000C) [0x0000000000000000]              
	float                                              LastSeenTime;                                     		// 0x03F8 (0x0004) [0x0000000000000000]              
	float                                              LastWarningTime;                                  		// 0x03FC (0x0004) [0x0000000000000000]              
	unsigned long                                      bHuntPlayer : 1;                                  		// 0x0400 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bEnemyInfoValid : 1;                              		// 0x0400 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCanFire : 1;                                     		// 0x0400 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bStrafeDir : 1;                                   		// 0x0400 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bLeadTarget : 1;                                  		// 0x0400 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bChangeDir : 1;                                   		// 0x0400 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bFrustrated : 1;                                  		// 0x0400 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bInitLifeMessage : 1;                             		// 0x0400 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bReachedGatherPoint : 1;                          		// 0x0400 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bWasNearObjective : 1;                            		// 0x0400 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bHasFired : 1;                                    		// 0x0400 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bForcedDirection : 1;                             		// 0x0400 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bFireSuccess : 1;                                 		// 0x0400 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bStoppedFiring : 1;                               		// 0x0400 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bEnemyIsVisible : 1;                              		// 0x0400 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bEnemyEngaged : 1;                                		// 0x0400 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bMustCharge : 1;                                  		// 0x0400 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bJustLanded : 1;                                  		// 0x0400 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bRecommendFastMove : 1;                           		// 0x0400 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bIgnoreEnemyChange : 1;                           		// 0x0400 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bPlannedJump : 1;                                 		// 0x0400 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bEnemyAcquired : 1;                               		// 0x0400 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bScriptedFrozen : 1;                              		// 0x0400 (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bSpawnedByKismet : 1;                             		// 0x0400 (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bUsingSquadRoute : 1;                             		// 0x0400 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bUsePreviousSquadRoute : 1;                       		// 0x0400 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bExecutingWhatToDoNext : 1;                       		// 0x0400 (0x0004) [0x0000000000000000] [0x04000000] 
	int                                                AcquisitionYawRate;                               		// 0x0404 (0x0004) [0x0000000000000000]              
	struct FName                                       OldMessageType;                                   		// 0x0408 (0x0008) [0x0000000000000000]              
	int                                                OldMessageID;                                     		// 0x0410 (0x0004) [0x0000000000000000]              
	struct FVector                                     HidingSpot;                                       		// 0x0414 (0x000C) [0x0000000000000000]              
	float                                              Aggressiveness;                                   		// 0x0420 (0x0004) [0x0000000000000000]              
	float                                              LastAttractCheck;                                 		// 0x0424 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            BlockedPath;                                      		// 0x0428 (0x0004) [0x0000000000000000]              
	float                                              AcquireTime;                                      		// 0x042C (0x0004) [0x0000000000000000]              
	float                                              Aggression;                                       		// 0x0430 (0x0004) [0x0000000000000000]              
	float                                              LoseEnemyCheckTime;                               		// 0x0434 (0x0004) [0x0000000000000000]              
	class AActor*                                      StartleActor;                                     		// 0x0438 (0x0004) [0x0000000000000000]              
	float                                              StartTacticalTime;                                		// 0x043C (0x0004) [0x0000000000000000]              
	float                                              LastUnderFire;                                    		// 0x0440 (0x0004) [0x0000000000000000]              
	float                                              BaseAlertness;                                    		// 0x0444 (0x0004) [0x0000000000000000]              
	float                                              Accuracy;                                         		// 0x0448 (0x0004) [0x0000000000000000]              
	float                                              BaseAggressiveness;                               		// 0x044C (0x0004) [0x0000000000000000]              
	float                                              StrafingAbility;                                  		// 0x0450 (0x0004) [0x0000000000000000]              
	float                                              CombatStyle;                                      		// 0x0454 (0x0004) [0x0000000000000000]              
	float                                              Tactics;                                          		// 0x0458 (0x0004) [0x0000000000000000]              
	float                                              ReactionTime;                                     		// 0x045C (0x0004) [0x0000000000000000]              
	float                                              Jumpiness;                                        		// 0x0460 (0x0004) [0x0000000000000000]              
	class UClass*                                      FavoriteWeapon;                                   		// 0x0464 (0x0004) [0x0000000000000000]              
	float                                              OldMessageTime;                                   		// 0x0468 (0x0004) [0x0000000000000000]              
	struct FString                                     GoalString;                                       		// 0x046C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SoakString;                                       		// 0x0478 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class APBSquadAI*                                  Squad;                                            		// 0x0484 (0x0004) [0x0000000000000000]              
	class APBBot*                                      NextSquadMember;                                  		// 0x0488 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            SquadRouteGoal;                                   		// 0x048C (0x0004) [0x0000000000000000]              
	float                                              ReTaskTime;                                       		// 0x0490 (0x0004) [0x0000000000000000]              
	class APBDefensePoint*                             DefensePoint;                                     		// 0x0494 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            DefensivePosition;                                		// 0x0498 (0x0004) [0x0000000000000000]              
	struct FVector                                     DirectionHint;                                    		// 0x049C (0x000C) [0x0000000000000000]              
	float                                              StopStartTime;                                    		// 0x04A8 (0x0004) [0x0000000000000000]              
	float                                              LastRespawnTime;                                  		// 0x04AC (0x0004) [0x0000000000000000]              
	float                                              FailedHuntTime;                                   		// 0x04B0 (0x0004) [0x0000000000000000]              
	class APawn*                                       FailedHuntEnemy;                                  		// 0x04B4 (0x0004) [0x0000000000000000]              
	float                                              EnemyVisibilityTime;                              		// 0x04B8 (0x0004) [0x0000000000000000]              
	class APawn*                                       VisibleEnemy;                                     		// 0x04BC (0x0004) [0x0000000000000000]              
	float                                              LastSearchTime;                                   		// 0x04C0 (0x0004) [0x0000000000000000]              
	float                                              LastSearchWeight;                                 		// 0x04C4 (0x0004) [0x0000000000000000]              
	float                                              CampTime;                                         		// 0x04C8 (0x0004) [0x0000000000000000]              
	int                                                NumRandomJumps;                                   		// 0x04CC (0x0004) [0x0000000000000000]              
	float                                              LastFireAttempt;                                  		// 0x04D0 (0x0004) [0x0000000000000000]              
	float                                              GatherTime;                                       		// 0x04D4 (0x0004) [0x0000000000000000]              
	struct FName                                       OrderNames[ 0x10 ];                               		// 0x04D8 (0x0080) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       OldOrders;                                        		// 0x0558 (0x0008) [0x0000000000000000]              
	class AController*                                 OldOrderGiver;                                    		// 0x0560 (0x0004) [0x0000000000000000]              
	float                                              TrackingReactionTime;                             		// 0x0564 (0x0004) [0x0000000000000000]              
	float                                              BaseTrackingReactionTime;                         		// 0x0568 (0x0004) [0x0000000000000000]              
	class APawn*                                       CurrentlyTrackedEnemy;                            		// 0x056C (0x0004) [0x0000000000000000]              
	struct FVector                                     TrackedVelocity;                                  		// 0x0570 (0x000C) [0x0000000000000000]              
	TArray< struct FEnemyPosition >                    SavedPositions;                                   		// 0x057C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVector                                     LastKnownPosition;                                		// 0x0588 (0x000C) [0x0000000000000000]              
	struct FVector                                     LastKillerPosition;                               		// 0x0594 (0x000C) [0x0000000000000000]              
	class APBAvoidMarker*                              FearSpots[ 0x2 ];                                 		// 0x05A0 (0x0008) [0x0000000000000000]              
	struct FVector                                     ImpactVelocity;                                   		// 0x05A8 (0x000C) [0x0000000000000000]              
	float                                              AimUpdateFrequency;                               		// 0x05B4 (0x0004) [0x0000000000000000]              
	float                                              LastAimUpdateTime;                                		// 0x05B8 (0x0004) [0x0000000000000000]              
	float                                              ErrorUpdateFrequency;                             		// 0x05BC (0x0004) [0x0000000000000000]              
	float                                              LastErrorUpdateTime;                              		// 0x05C0 (0x0004) [0x0000000000000000]              
	float                                              CurrentAimError;                                  		// 0x05C4 (0x0004) [0x0000000000000000]              
	class AActor*                                      ScriptedTarget;                                   		// 0x05C8 (0x0004) [0x0000000000000000]              
	unsigned char                                      ScriptedFireMode;                                 		// 0x05CC (0x0001) [0x0000000000000000]              
	class UPBBotDecisionComponent*                     DecisionComponent;                                		// 0x05D0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FScriptDelegate                             __CustomActionFunc__Delegate;                     		// 0x05D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBBotDecisionComponent
// 0x0007 (0x005C - 0x0055)
class UPBBotDecisionComponent : public UActorComponent
{
public:
	unsigned long                                      bTriggered : 1;                                   		// 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBBreakableActor
// 0x0000 (0x0240 - 0x0240)
class APBBreakableActor : public AInterpActor
{
public:
public:
};

// Class PlanBGame.PBCamMod_ScreenShake
// 0x0074 (0x00CC - 0x0058)
class UPBCamMod_ScreenShake : public UCameraModifier
{
public:
	TArray< struct FScreenShakeStruct >                Shakes;                                           		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScreenShakeStruct                          TestShake;                                        		// 0x0064 (0x0068) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBCheatManager
// 0x0004 (0x0060 - 0x005C)
class UPBCheatManager : public UCheatManager
{
public:
	unsigned long                                      bIsSlomoOn : 1;                                   		// 0x005C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBCheckMapsLightingCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBCheckMapsLightingCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBChoiseLimiter
// 0x0000 (0x003C - 0x003C)
class UPBChoiseLimiter : public UObject
{
public:
public:
};

// Class PlanBGame.PBCommCenter
// 0x0158 (0x0194 - 0x003C)
class UPBCommCenter : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	TArray< struct FString >                           SystemMessages;                                   		// 0x0040 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           SystemNotificationsLog;                           		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     StationHandle;                                    		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FTBuddy >                           BuddyList;                                        		// 0x0064 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTBuddyMessages >                   BuddiesMessageList;                               		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     BuddyRequestNick;                                 		// 0x007C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     BuddyRequestMessage;                              		// 0x0088 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FSearchAccountProfile >             SearchResults;                                    		// 0x0094 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCommCenter*                               pCommCenter;                                      		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                Counter;                                          		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      m_GetFriendsStatus;                               		// 0x00A8 (0x0001) [0x0000000000000000]              
	class ULocalPlayer*                                OnlinePlayer;                                     		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APlayerController*                           PC;                                               		// 0x00B0 (0x0004) [0x0000000000000000]              
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UOnlineSubsystemGameSpy*                     PlayerInterface;                                  		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     ServerPassword;                                   		// 0x00BC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FOnlineFriend >                     FriendsList;                                      		// 0x00C8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           AuthorizationList;                                		// 0x00D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBProfileSettings*                          Profile;                                          		// 0x00E0 (0x0004) [0x0000000000000000]              
	struct FString                                     AddFriendMessage;                                 		// 0x00E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              LastMsgNotified;                                  		// 0x00F0 (0x0004) [0x0000000000000000]              
	float                                              InGameNotificationTime;                           		// 0x00F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bIsUpdatingFriendList : 1;                        		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPendingFriendUpdate : 1;                         		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bForcedStatus : 1;                                		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bConnectionLost : 1;                              		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bFinishReadingFriendship : 1;                     		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000010] 
	float                                              LastUpdateListTime;                               		// 0x00FC (0x0004) [0x0000000000000000]              
	float                                              IgnoreUpdateListTimeout;                          		// 0x0100 (0x0004) [0x0000000000000000]              
	TArray< struct FString >                           FriendStatusChangedList;                          		// 0x0104 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateCompleted__Delegate;                    		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSearchCompleted__Delegate;                    		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRequestAddSent__Delegate;                     		// 0x0128 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRequestIgnored__Delegate;                     		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMessageReceived__Delegate;                    		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMessageSent__Delegate;                        		// 0x014C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnStatusChanged__Delegate;                      		// 0x0158 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGameJoinCompleted__Delegate;                  		// 0x0164 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnBuddyRemoved__Delegate;                       		// 0x0170 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLogoutCompleted__Delegate;                    		// 0x017C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSystemAvailable__Delegate;                    		// 0x0188 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCommentatorSystem
// 0x0070 (0x0248 - 0x01D8)
class APBCommentatorSystem : public AActor
{
public:
	class APBCommentatorSystem*                        pCommentatorSystem;                               		// 0x01D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FVOLayer >                          AudioLayers;                                      		// 0x01DC (0x000C) [0x0000000000480000]              ( CPF_Component | CPF_NeedCtorLink )
	class UAudioComponent*                             CrowdAudio;                                       		// 0x01E8 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	unsigned char                                      CurrentAudioLayer;                                		// 0x01EC (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FCommentatorTrackInfo                       CurrentTrack;                                     		// 0x01F0 (0x002C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCommentatorSystemArc*                     CommentatorArch;                                  		// 0x021C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              FadeOutDuration;                                  		// 0x0220 (0x0004) [0x0000000000000000]              
	float                                              AudioLoadTimeout;                                 		// 0x0224 (0x0004) [0x0000000000000000]              
	float                                              AudioResetTime;                                   		// 0x0228 (0x0004) [0x0000000000000000]              
	float                                              AudioLastLoaded;                                  		// 0x022C (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __AsyncObjectLoadCallback__Delegate;              		// 0x0230 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnAudioFinished__Delegate;                      		// 0x023C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_ItemSearchCache
// 0x0010 (0x004C - 0x003C)
class UPBCustomChar_ItemSearchCache : public UObject
{
public:
	TArray< struct FPBItemGenderCache >                ItemSearchCache;                                  		// 0x003C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bItemSearchCacheValid : 1;                        		// 0x0048 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBCustomChar_MenuDataBase
// 0x000C (0x0048 - 0x003C)
class UPBCustomChar_MenuDataBase : public UObject
{
public:
	struct FScriptDelegate                             __OnAllRequestsAreDone__Delegate;                 		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_MenuData
// 0x02BC (0x0304 - 0x0048)
class UPBCustomChar_MenuData : public UPBCustomChar_MenuDataBase
{
public:
	struct FGuid                                       mLastSelectedCharacterGuid;                       		// 0x0048 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                mnLastSelectedCharacterIndex;                     		// 0x0058 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FTPBShopNavigationInfo                      NavigationInfo;                                   		// 0x005C (0x002C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bProfileIDValid : 1;                              		// 0x0088 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bProfileCacheValid : 1;                           		// 0x0088 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bNavigateToTab : 1;                               		// 0x0088 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bIsPremium : 1;                                   		// 0x0088 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bNullShopActive : 1;                              		// 0x0088 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      isGameMaster : 1;                                 		// 0x0088 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	struct FGuid                                       ActiveProfileID;                                  		// 0x008C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBExtendedProfile >                ProfileList;                                      		// 0x009C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      mCharacterActorIDs;                               		// 0x00A8 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	int                                                m_nMaxProfilesCount;                              		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FCustomCharData                             ActiveCharData;                                   		// 0x00B8 (0x010C) [0x0000000000002000]              ( CPF_Transient )
	int                                                ActiveCharPart;                                   		// 0x01C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ActiveSlotIndex;                                  		// 0x01C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ActiveSchemeIndex;                                		// 0x01CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ActiveWeaponPresetIndex;                          		// 0x01D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ActiveSkillTierIndex;                             		// 0x01D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     sNavigateToCategory;                              		// 0x01D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      ActiveWeaponCategory;                             		// 0x01E4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      accountLevel;                                     		// 0x01E5 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     ActiveGameSpyToken;                               		// 0x01E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     ActiveGameSpyChallenge;                           		// 0x01F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                Head_StoreID;                                     		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SkinTone_StoreID;                                 		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SkinTone_SchemeID;                                		// 0x0208 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     CharacterName;                                    		// 0x020C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       characterGender;                                  		// 0x0218 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       characterHead;                                    		// 0x0228 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       characterSkin;                                    		// 0x0238 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                avatarPicture;                                    		// 0x0248 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                Rank;                                             		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                xp;                                               		// 0x0250 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              xpPercentage;                                     		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                credits;                                          		// 0x0258 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                coins;                                            		// 0x025C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                coolness;                                         		// 0x0260 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                lastDisplayedCoolness;                            		// 0x0264 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBItem >                           InventoryItemCache;                               		// 0x0268 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBItemLocator >                    InventoryItemLocatorCache;                        		// 0x0274 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBBoosterInfo >                   BoostersInfoCache;                                		// 0x0280 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                FirstNonFakeItemIndex;                            		// 0x028C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBItem >                           NewItemsCache;                                    		// 0x0290 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBItem >                           ItemsToPurchase;                                  		// 0x029C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           weaponPresetNames;                                		// 0x02A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       subscriptionId;                                   		// 0x02B4 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionCreditsBoost;                         		// 0x02C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionXpBoost;                              		// 0x02C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionSlowWeaponDamage;                     		// 0x02CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionSlowStyleLoss;                        		// 0x02D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionGroupXpBoost;                         		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionGroupCreditsBoost;                    		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionItemShopRankBonus;                    		// 0x02DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionDuration;                             		// 0x02E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                subscriptionDiscount;                             		// 0x02E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_ItemSearchCache*               ItemCache;                                        		// 0x02E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       LastBoughtItemId;                                 		// 0x02EC (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                iLastBoughtItemOwnerGender;                       		// 0x02FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBItemShopClient*                           ItemShop;                                         		// 0x0300 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBCustomSkeletalMesh
// 0x000C (0x03D8 - 0x03CC)
class UPBCustomSkeletalMesh : public USkeletalMesh
{
public:
	unsigned char                                      MeshType;                                         		// 0x03CC (0x0001) [0x0000000000000000]              
	unsigned long                                      bFirstPerson : 1;                                 		// 0x03D0 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bAttachmentsMesh : 1;                             		// 0x03D0 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	int                                                Category;                                         		// 0x03D4 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class PlanBGame.PBDefensePoint
// 0x0028 (0x02D8 - 0x02B0)
class APBDefensePoint : public ANavigationPoint
{
public:
	class AController*                                 CurrentUser;                                      		// 0x02B0 (0x0004) [0x0000000000000000]              
	class APBDefensePoint*                             NextDefensePoint;                                 		// 0x02B4 (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            DefendedObjective;                                		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFirstScript : 1;                                 		// 0x02BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSniping : 1;                                     		// 0x02BC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FName                                       DefenseGroup;                                     		// 0x02C0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DefensePriority;                                  		// 0x02C8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UTexture2D* >                        TeamSprites;                                      		// 0x02CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBDestroyableActor
// 0x0000 (0x01D8 - 0x01D8)
class APBDestroyableActor : public AActor
{
public:
public:
};

// Class PlanBGame.PBDestructibleStaticActor
// 0x0074 (0x0254 - 0x01E0)
class APBDestructibleStaticActor : public AStaticMeshActor
{
public:
	int                                                iCurrHealth;                                      		// 0x01E0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iCurMeshIndex;                                    		// 0x01E4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iCurMeshIndexEffects;                             		// 0x01E8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              CurMeshIndexEffectsTimeout;                       		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bPhysicsOff : 1;                                  		// 0x01F0 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      bCollisionEnabled : 1;                            		// 0x01F0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bHideObjectWhenDead : 1;                          		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bIntegerRandom : 1;                               		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bAnimationEnabled : 1;                            		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	class UMaterialInstanceConstant*                   pGlobalMatInstance;                               		// 0x01F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UStaticMesh*                                 pBaseStaticMesh;                                  		// 0x01F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInterface*                          pBaseStaticMeshMaterial;                          		// 0x01FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x0200 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	int                                                iStartingHealth;                                  		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iDamageThreshold;                                 		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRandomMin;                                       		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRandomMax;                                       		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MaterialHealthScalarParamName;                    		// 0x0214 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MaterialStateScalarParamName;                     		// 0x021C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MaterialRandomNumberParamName;                    		// 0x0224 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vExplosionPositionOffset;                         		// 0x022C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FDestructibleMeshInfo >             MeshInfo;                                         		// 0x0238 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UAudioComponent* >                   rPlayingAudioComponents;                          		// 0x0244 (0x000C) [0x0000000004482008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                iLastDamagerPlayerId;                             		// 0x0250 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBDumpItemListCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBDumpItemListCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBDynamicPhysicsAsset
// 0x0000 (0x01E8 - 0x01E8)
class APBDynamicPhysicsAsset : public AKAsset
{
public:
public:
};

// Class PlanBGame.PBEmitterPool
// 0x000C (0x023C - 0x0230)
class APBEmitterPool : public AEmitterPool
{
public:
	TArray< struct FAttachedExplosionLight >           RelativeExplosionLights;                          		// 0x0230 (0x000C) [0x0000000000480000]              ( CPF_Component | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBEventSystem
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem : public UObject
{
public:
public:
};

// Class PlanBGame.PBEventSystem_BaseStorage
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_BaseStorage : public UObject
{
public:
public:
};

// Class PlanBGame.PBEventSystem_Event
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_Event : public UObject
{
public:
public:
};

// Class PlanBGame.PBFindReplaceCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBFindReplaceCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBFollowSplineActor
// 0x0070 (0x0298 - 0x0228)
class APBFollowSplineActor : public ASplineActor
{
public:
	struct FName                                       animation;                                        		// 0x0228 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              PauseTime;                                        		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       PauseAnimation;                                   		// 0x0234 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      StartNode;                                        		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MoveSpeed;                                        		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RollSpeed;                                        		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RollMultiplier;                                   		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationSpeed;                                    		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLoop : 1;                                        		// 0x0250 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIgnoreRotation : 1;                              		// 0x0250 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      StartNode_bAnimNodeSlotInitialized : 1;           		// 0x0250 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	float                                              EaseInOutDistance;                                		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   PlaySound;                                        		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USplineComponent*                            NextSplineComponent;                              		// 0x025C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class ASplineActor*                                NextSplineActor;                                  		// 0x0260 (0x0004) [0x0000000000000000]              
	class ASkeletalMeshActor*                          StartNode_SkMesh;                                 		// 0x0264 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBAnimNodeSlot*                             StartNode_AnimNodeSlot;                           		// 0x0268 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBFollowSplineActor*                        CurNode;                                          		// 0x026C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurDistance;                                      		// 0x0270 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurPauseTime;                                     		// 0x0274 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    PrevRotation;                                     		// 0x0278 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class USplineComponent*                            CurSplineComponent;                               		// 0x0284 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USplineComponent*                            PrevSplineComponent;                              		// 0x0288 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       CurAnimation;                                     		// 0x028C (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class UAudioComponent*                             SoundComponent;                                   		// 0x0294 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBGameInfo
// 0x00E4 (0x0468 - 0x0384)
class APBGameInfo : public AGameInfo
{
public:
	unsigned long                                      bIgnoreTeamForVoiceChat : 1;                      		// 0x0384 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCanRestartPlayer : 1;                            		// 0x0384 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bTutorialMode : 1;                                		// 0x0384 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      iTeamAutoSelection : 1;                           		// 0x0384 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bStatisticsLog : 1;                               		// 0x0384 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bShutdownIssued : 1;                              		// 0x0384 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bServerLocked : 1;                                		// 0x0384 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bTDMSpawnSystem : 1;                              		// 0x0384 (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bDebugTDMSpawnSystem : 1;                         		// 0x0384 (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	unsigned long                                      bDebugTDMLineOfSight : 1;                         		// 0x0384 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bDebugTDMDistance : 1;                            		// 0x0384 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bSkipOnlineSubsystem : 1;                         		// 0x0384 (0x0004) [0x0000000000004000] [0x00000800] ( CPF_Config )
	unsigned long                                      bCheckCamping : 1;                                		// 0x0384 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	int                                                iTeams;                                           		// 0x0388 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                iSpottedDuration;                                 		// 0x038C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iElapsedTime;                                     		// 0x0390 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ANavigationPoint*                            LastPlayerStartSpot;                              		// 0x0394 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            LastStartSpot;                                    		// 0x0398 (0x0004) [0x0000000000000000]              
	class UPBGameStatisticsLog*                        PlayerStatisticsLog;                              		// 0x039C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBTeamInfo*                                 EnemyRoster;                                      		// 0x03A0 (0x0004) [0x0000000000000000]              
	struct FString                                     EnemyRosterName;                                  		// 0x03A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     DefaultEnemyRosterClass;                          		// 0x03B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           GameSpyPublishedMaps;                             		// 0x03BC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	TArray< struct FLocalizedCountryData >             LocalizedCountryMappings;                         		// 0x03C8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     DefaultLobbyLevel;                                		// 0x03D4 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      CurrentGameType;                                  		// 0x03E0 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     strShutdownReason;                                		// 0x03E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBOperatorServerRequestHandler*             pRequestHandler;                                  		// 0x03F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fPingInterval;                                    		// 0x03F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMaxPingFailuresAllowed;                          		// 0x03F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPingFailures;                                    		// 0x03FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBGameReplicationInfo*                      pGameInfo;                                        		// 0x0400 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_ItemSearchCache*               pItemCache;                                       		// 0x0404 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fGameSetupUnbalanceTime;                          		// 0x0408 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fLastPlayerConnectedTime;                         		// 0x040C (0x0004) [0x0000000000000000]              
	float                                              fTimeToDisconnectWhenEmpty;                       		// 0x0410 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fShutdownTime;                                    		// 0x0414 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fStartEPOverride;                                 		// 0x0418 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                Region;                                           		// 0x041C (0x0004) [0x0000000000000000]              
	int                                                iTeamLimit;                                       		// 0x0420 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                nMaxProgressionSubmitCount;                       		// 0x0424 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FBoostersAvailable                          mAllBoosters;                                     		// 0x0428 (0x0014) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UPBPlayerStatistics* >               mStoredStatistics;                                		// 0x043C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       mCurrentMatchGuid;                                		// 0x0448 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                AverageRank;                                      		// 0x0458 (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __OnSubmitProgressionServerDoneDelegate__Delegate;		// 0x045C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBMenuGame
// 0x0000 (0x0468 - 0x0468)
class APBMenuGame : public APBGameInfo
{
public:
public:
};

// Class PlanBGame.PBItemComparisonGame
// 0x0288 (0x06F0 - 0x0468)
class APBItemComparisonGame : public APBMenuGame
{
public:
	TArray< struct FCustomCharData >                   CharacterDataArray;                               		// 0x0468 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FCustomCharData >                   FetchedCharacterDataArray;                        		// 0x0474 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FCustomWeaponDataEx >               WeaponDataArray;                                  		// 0x0480 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FCustomWeaponDataEx >               FetchedWeaponDataArray;                           		// 0x048C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FCustomWeaponDataEx                         CurrentWeaponData;                                		// 0x0498 (0x0010) [0x0000000000000000]              
	int                                                MAX_CHARACTERS;                                   		// 0x04A8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                MAX_EXTRACHARACTERS;                              		// 0x04AC (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                Iteration;                                        		// 0x04B0 (0x0004) [0x0000000000000000]              
	int                                                IterationExtra;                                   		// 0x04B4 (0x0004) [0x0000000000000000]              
	struct FCustomCharData                             CurrentCharacterData;                             		// 0x04B8 (0x010C) [0x0000000000000000]              
	struct FCustomCharData                             MutableCharacterData;                             		// 0x05C4 (0x010C) [0x0000000000000000]              
	int                                                NewItemsCount;                                    		// 0x06D0 (0x0004) [0x0000000000000000]              
	int                                                ScreenShotProgress;                               		// 0x06D4 (0x0004) [0x0000000000000000]              
	int                                                TotalItemsCount;                                  		// 0x06D8 (0x0004) [0x0000000000000000]              
	struct FString                                     ScreenShotName;                                   		// 0x06DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      CurrentGender;                                    		// 0x06E8 (0x0001) [0x0000000000000000]              
	unsigned long                                      UseOnlyFetched : 1;                               		// 0x06EC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      SkipCurrent : 1;                                  		// 0x06EC (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBRoundGame
// 0x0000 (0x0468 - 0x0468)
class APBRoundGame : public APBGameInfo
{
public:
public:
};

// Class PlanBGame.PBGameMapInfo
// 0x003C (0x0078 - 0x003C)
class UPBGameMapInfo : public UMapInfo
{
public:
	class ACameraActor*                                pCameraForEndOfRound;                             		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class ACameraActor* >                      pCamerasForSpectator;                             		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UTexture*                                    MapTexture;                                       		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MapOverlayTexture;                                		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mBoundTop;                                        		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mBoundLeft;                                       		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mBoundBottom;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mBoundRight;                                      		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBDTB_SiegeZone*                            pCaptureObjective1;                               		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBDTB_SiegeZone*                            pCaptureObjective2;                               		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBAAMTerminal*                              pSNDObjective1;                                   		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBAAMTerminal*                              pSNDObjective2;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ACameraActor*                                pOverviewCamera;                                  		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBGameObjective
// 0x003C (0x02EC - 0x02B0)
class APBGameObjective : public ANavigationPoint
{
public:
	class UPBMinimapDrawer_Objective*                  mMinimapDrawer;                                   		// 0x02B0 (0x0004) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bFirstObjective : 1;                              		// 0x02B4 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAddToObjectiveArray : 1;                         		// 0x02B4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bAllowOnlyShootable : 1;                          		// 0x02B4 (0x0004) [0x0000000000000000] [0x00000004] 
	class APBGameObjective*                            NextObjective;                                    		// 0x02B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      DefensePriority;                                  		// 0x02BC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DefenderTeamIndex;                                		// 0x02BD (0x0001) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	unsigned char                                      StartTeam;                                        		// 0x02BE (0x0001) [0x0000000000000000]              
	unsigned char                                      replicateStateId;                                 		// 0x02BF (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBSquadAI*                                  DefenseSquad;                                     		// 0x02C0 (0x0004) [0x0000000000000000]              
	class APBDefensePoint*                             DefensePoints;                                    		// 0x02C4 (0x0004) [0x0000000000000000]              
	TArray< class ANavigationPoint* >                  ShootSpots;                                       		// 0x02C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ObjectiveName;                                    		// 0x02D4 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	TArray< struct FName >                             stateNames;                                       		// 0x02E0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameObjectiveByVolume
// 0x0010 (0x02FC - 0x02EC)
class APBGameObjectiveByVolume : public APBGameObjective
{
public:
	unsigned long                                      bAchieved : 1;                                    		// 0x02EC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	TArray< class APBObjectiveVolume* >                ObjectiveVolumes;                                 		// 0x02F0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInteractiveObjective
// 0x0065 (0x0351 - 0x02EC)
class APBInteractiveObjective : public APBGameObjective
{
public:
	int                                                iStartingTeam;                                    		// 0x02EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInteractDistance;                                		// 0x02F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fObjectSize;                                      		// 0x02F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      pRenderingActor;                                  		// 0x02F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFreezePlayerMove : 1;                            		// 0x02FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFreezePlayerLook : 1;                            		// 0x02FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBeingInteractedWith : 1;                         		// 0x02FC (0x0004) [0x0000000000002020] [0x00000004] ( CPF_Net | CPF_Transient )
	unsigned long                                      bUsed : 1;                                        		// 0x02FC (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	unsigned long                                      bVolumeInteraction : 1;                           		// 0x02FC (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	struct FVector                                     vObjectiveIconOffset;                             		// 0x0300 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x030C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              fInteractTime;                                    		// 0x0310 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fIMG_Duration;                                    		// 0x0314 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fIMG_MinTimePerc;                                 		// 0x0318 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fIMG_TargerZoneSize;                              		// 0x031C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fIMG_TargetZoneNum;                               		// 0x0320 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fIMG_FailAddDuration;                             		// 0x0324 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fIMG_FailNum;                                     		// 0x0328 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iObjectiveTeam;                                   		// 0x032C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fLastTitleHideTime;                               		// 0x0330 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastLevelImageHideTime;                          		// 0x0334 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UStaticMeshComponent*                        pMeshComponent;                                   		// 0x0338 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class AController*                                 InteractiveController;                            		// 0x033C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class AController*                                 PlacedController;                                 		// 0x0340 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   StartInteractSoundCue;                            		// 0x0344 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   CantInteractSoundCue;                             		// 0x0348 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        pInteractionVolume;                               		// 0x034C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned char                                      myPhysics;                                        		// 0x0350 (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBWeaponPickup
// 0x0093 (0x03E4 - 0x0351)
class APBWeaponPickup : public APBInteractiveObjective
{
public:
	struct FSDroppedWeaponData                         WeaponData;                                       		// 0x0354 (0x001C) [0x0000000000000020]              ( CPF_Net )
	struct FweaponRB                                   serverRB;                                         		// 0x0370 (0x0030) [0x0000000000000020]              ( CPF_Net )
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                            		// 0x03A0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x03A4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bUsing3PWeaponMesh : 1;                           		// 0x03A8 (0x0004) [0x0000000000000000] [0x00000001] 
	class USkeletalMesh*                               PreparedSkeletalMesh1P;                           		// 0x03AC (0x0004) [0x0000000000000000]              
	class UMaterialInstance*                           WeapMatInstMesh;                                  		// 0x03B0 (0x0004) [0x0000000000000000]              
	int                                                OwningPlayerId;                                   		// 0x03B4 (0x0004) [0x0000000000000000]              
	float                                              fWeaponLifetime;                                  		// 0x03B8 (0x0004) [0x0000000000000000]              
	struct FVector                                     lastSecondLocation;                               		// 0x03BC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              lastSecondVelocity;                               		// 0x03C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct APBWeaponPickup_FTInteractStruct >  m_Controllers;                                    		// 0x03CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class AController* >                       m_SuccessfulControllers;                          		// 0x03D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameReplicationInfo
// 0x0140 (0x0374 - 0x0234)
class APBGameReplicationInfo : public APBBaseGameReplicationInfo
{
public:
	int                                                iRoundTimeLimit;                                  		// 0x0234 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iVictoriousTeam;                                  		// 0x0238 (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned long                                      bForceDefaultCharacter : 1;                       		// 0x023C (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bRoundPlaying : 1;                                		// 0x023C (0x0004) [0x0000000000002020] [0x00000002] ( CPF_Net | CPF_Transient )
	unsigned long                                      bRoundTimerPaused : 1;                            		// 0x023C (0x0004) [0x0000000000002020] [0x00000004] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsBuySafety : 1;                                 		// 0x023C (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	unsigned long                                      bFriendlyFire : 1;                                		// 0x023C (0x0004) [0x0000000000002020] [0x00000010] ( CPF_Net | CPF_Transient )
	unsigned long                                      bForceSincronizeRound : 1;                        		// 0x023C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bVotingHasStarted : 1;                            		// 0x023C (0x0004) [0x0000000000000020] [0x00000040] ( CPF_Net )
	unsigned long                                      bVotingHasFinished : 1;                           		// 0x023C (0x0004) [0x0000000000000020] [0x00000080] ( CPF_Net )
	unsigned long                                      bGotoLobby : 1;                                   		// 0x023C (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bGotoVotedMap : 1;                                		// 0x023C (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bRepeatMatch : 1;                                 		// 0x023C (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bRenderServerBoneInfo : 1;                        		// 0x023C (0x0004) [0x0000000000002020] [0x00000800] ( CPF_Net | CPF_Transient )
	unsigned long                                      bProcessedInitialCharacters : 1;                  		// 0x023C (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bCharacterProcessingRequested : 1;                		// 0x023C (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bGameStatCollectorLoggingEnabled : 1;             		// 0x023C (0x0004) [0x0000000000002020] [0x00004000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bDisableCharacterMerging : 1;                     		// 0x023C (0x0004) [0x0000000000044001] [0x00008000] ( CPF_Edit | CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bDisableWeaponMerging : 1;                        		// 0x023C (0x0004) [0x0000000000044001] [0x00010000] ( CPF_Edit | CPF_Config | CPF_GlobalConfig )
	int                                                iRound;                                           		// 0x0240 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iLastNotifiedSafetyBuyTimer;                      		// 0x0244 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBuySafetyTimer;                                  		// 0x0248 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FName                                       GameState;                                        		// 0x024C (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iRoundRemainingTime;                              		// 0x0254 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iInitialRoundTime;                                		// 0x0258 (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      iRoundTimeSwitcher;                               		// 0x025C (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      VoteType;                                         		// 0x025D (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      ePlayingGamemode;                                 		// 0x025E (0x0001) [0x0000000000000020]              ( CPF_Net )
	int                                                iAlphaVotes;                                      		// 0x0260 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iBetaVotes;                                       		// 0x0264 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     sVoteTarget;                                      		// 0x0268 (0x000C) [0x0000000000402020]              ( CPF_Net | CPF_Transient | CPF_NeedCtorLink )
	int                                                iVotingTeam;                                      		// 0x0274 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iVoteTimer;                                       		// 0x0278 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     sVoteStarter;                                     		// 0x027C (0x000C) [0x0000000000402020]              ( CPF_Net | CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      MapVotes;                                         		// 0x0288 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     NextMap;                                          		// 0x0294 (0x000C) [0x0000000000402020]              ( CPF_Net | CPF_Transient | CPF_NeedCtorLink )
	int                                                MaxTeamSize;                                      		// 0x02A0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iAttackingTeam;                                   		// 0x02A4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class APBCharacter*                                MaleArchetype;                                    		// 0x02A8 (0x0004) [0x0000000000000000]              
	class APBCharacter*                                FemaleArchetype;                                  		// 0x02AC (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            ObjectiveList;                                    		// 0x02B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              StartCreateCharTime;                              		// 0x02B4 (0x0004) [0x0000000000000000]              
	TArray< struct FCreateCharStatus >                 CharStatus;                                       		// 0x02B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              StartCreateWeaponTime;                            		// 0x02C4 (0x0004) [0x0000000000000000]              
	TArray< struct FCreateWeaponStatus >               WeaponStatus;                                     		// 0x02C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPropertyWindows >                  rPropertyWindows;                                 		// 0x02D4 (0x000C) [0x0000000000402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink )
	class UPBCustomizationCache*                       CustomizationCache;                               		// 0x02E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBWeaponPickup* >                   rAllWeaponPickups;                                		// 0x02E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBAugmentedRealityAdvert* >         rAllAugmentedRealityAdverts;                      		// 0x02F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBAmmunitionCrate* >                rAllAmmoCrates;                                   		// 0x02FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                MaxSpectators;                                    		// 0x0308 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                NumSpectators;                                    		// 0x030C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                MaxPlayers;                                       		// 0x0310 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                NumPlayers;                                       		// 0x0314 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                Region;                                           		// 0x0318 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                Special;                                          		// 0x031C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fRoundStartTime;                                  		// 0x0320 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTotalMatchTime;                                  		// 0x0324 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBKWeaponSettings*                          pWeaponSettings;                                  		// 0x0328 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< class APBSkill_TurretWeapon* >             skillTurrets;                                     		// 0x032C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBSpawnVolumeTDM* >                 spawnVolumes;                                     		// 0x0338 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBHeatSystemHandler*                        heatHandler;                                      		// 0x0344 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumPlayersAtMatchStart;                           		// 0x0348 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< unsigned long >                            VotesHistory;                                     		// 0x034C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTRankFormulaValues                         rankFormulaValues;                                		// 0x0358 (0x0010) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FTConversionFormulaValues                   conversionFormulaValues;                          		// 0x0368 (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APlayerReplicationInfo*                      LastKiller;                                       		// 0x0370 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBGameSettingsCommon
// 0x0014 (0x00E4 - 0x00D0)
class UPBGameSettingsCommon : public UOnlineGameSettings
{
public:
	int                                                MaxPlayers;                                       		// 0x00D0 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	int                                                MinNetPlayers;                                    		// 0x00D4 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	TArray< struct FBannedPlayer >                     BannedPlayerList;                                 		// 0x00D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameStat
// 0x0000 (0x003C - 0x003C)
class UPBGameStat : public UObject
{
public:
public:
};

// Class PlanBGame.PBGameStatRead
// 0x0008 (0x00A4 - 0x009C)
class UPBGameStatRead : public UOnlineStatsRead
{
public:
	unsigned long                                      m_bReadingFinished : 1;                           		// 0x009C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bCalculated : 1;                                		// 0x009C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UPBStatisticsStats*                          StatisticsStats;                                  		// 0x00A0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBGameComplexStatRead
// 0x000C (0x00B0 - 0x00A4)
class UPBGameComplexStatRead : public UPBGameStatRead
{
public:
	TArray< class UPBGameStatRead* >                   m_ReadArray;                                      		// 0x00A4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGamePlayerStatRead
// 0x003C (0x00E0 - 0x00A4)
class UPBGamePlayerStatRead : public UPBGameStatRead
{
public:
	struct FTCalculatedPlayerStatistics                CalculatedPlayerStatsData;                        		// 0x00A4 (0x0030) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             CalculatedPlayerStats;                            		// 0x00D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameWeaponStatRead
// 0x003C (0x00E0 - 0x00A4)
class UPBGameWeaponStatRead : public UPBGameStatRead
{
public:
	TArray< struct FString >                           CalculatedWeaponStats;                            		// 0x00A4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTCalculatedWeaponStatistics                CalculatedWeaponStatsValues;                      		// 0x00B0 (0x001C) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           m_EachWeaponStat;                                 		// 0x00CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m_nWeaponIndex;                                   		// 0x00D8 (0x0004) [0x0000000000000000]              
	int                                                m_nMapIndex;                                      		// 0x00DC (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBHeatEvent
// 0x0000 (0x003C - 0x003C)
class UPBHeatEvent : public UObject
{
public:
public:
};

// Class PlanBGame.PBHeatEventManager
// 0x0090 (0x0268 - 0x01D8)
class APBHeatEventManager : public AReplicationInfo
{
public:
	float                                              fDelayUntilDisplayEventQueue;                     		// 0x01D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCrosshairValue;                                  		// 0x01DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastCrosshairDisplayTime;                        		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bHeatBufferCountDown : 1;                         		// 0x01E4 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      bTauntIsEnabled : 1;                              		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      FillersEnabled : 1;                               		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bIsFemale : 1;                                    		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      onHold : 1;                                       		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	int                                                iHeatBuffer;                                      		// 0x01E8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iHeatBufferDisplay;                               		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fHeatBufferTimeLeft;                              		// 0x01F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FEventQueueItem >                   rEventQueueDesc;                                  		// 0x01F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBHeatSystemArc*                            pHeatSystemArc;                                   		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iUnsubmittedPrimaryEventCode;                     		// 0x0204 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iScheduledPrimaryEventCode;                       		// 0x0205 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	int                                                iUnsubmittedBonusEventCode;                       		// 0x0208 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              iUnsubmittedPrimaryEventMultiplyer;               		// 0x020C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTauntStartTime;                                  		// 0x0210 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTauntStopTime;                                   		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTauntMultipier;                                  		// 0x0218 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iStartedTauntIndex;                               		// 0x021C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPreviousHeat;                                    		// 0x0220 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iUnlockedHeatTier;                                		// 0x0224 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fUnlockedHeatTierTime;                            		// 0x0228 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                CommentatorTrackPlaying;                          		// 0x022C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fFillerTimeLeft;                                  		// 0x0230 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FCommentatorTrackInfo >             QueuedHeatEventTracks;                            		// 0x0234 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                HeatEventPriority[ 0x2 ];                         		// 0x0240 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   QueuedCrowdSound;                                 		// 0x0248 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                DebugFillerCatergory;                             		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< unsigned char >                            onHoldPrimary;                                    		// 0x0250 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      onHoldBonus;                                      		// 0x025C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBHeatSystemArc
// 0x0088 (0x00C4 - 0x003C)
class UPBHeatSystemArc : public UObject
{
public:
	TArray< struct FHeatCollectorInfo >                rHeatCollectors;                                  		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPrimaryEventInfo >                 rPrimaryEvents;                                   		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FBonusEventInfo >                   rBonusEvents;                                     		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                iShotsForSharpshooter;                            		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLongRangeDistance;                               		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fShortRangeDistance;                              		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bQueueSecondBonusEvent : 1;                       		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bRandomizeWithoutReplacement : 1;                 		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	int                                                iMaxStyleBonus;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fUnlockHeatTierTextTime;                          		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHeatBufferTimeout;                               		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHeatBufferDisplayIncSpeed;                       		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iHeatBufferMinimumTransfer;                       		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWaitTimeUntilFirstEventDesc;                     		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventDescLifeTime;                               		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventDescFadeupTime;                             		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventDescFadeStartPerc;                          		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairTimeToMergeHeatValue;                   		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairDisplayTime;                            		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairStartFadingAfter;                       		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairTimeToFadeUp;                           		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilMultiKillExpires;                       		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxHeatDisplayed;                                 		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTauntTimeToMultiplier;                           		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventTransitionStartOffset;                      		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventTransitionMidpointOffset;                   		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventDescriptionStartOffset;                     		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEventDescriptionEndOffset;                       		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              heatBufferTransitionStartZ;                       		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBHUD
// 0x0045 (0x04A5 - 0x0460)
class APBHUD : public AHUD
{
public:
	unsigned long                                      bDrawCrossHair : 1;                               		// 0x0460 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDrawHud : 1;                                     		// 0x0460 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bShowMap : 1;                                     		// 0x0460 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bShowWiningScreen : 1;                            		// 0x0460 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bHudHealthGroup : 1;                              		// 0x0460 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bHudWeaponGroup : 1;                              		// 0x0460 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bIsInMenu : 1;                                    		// 0x0460 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bShowNewScoreboard : 1;                           		// 0x0460 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bPlayerSettingsOpen : 1;                          		// 0x0460 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bSNDMinigameArming : 1;                           		// 0x0460 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bConsolidatedLobbyUnlocked : 1;                   		// 0x0460 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bShowMapVoting : 1;                               		// 0x0460 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bShowVictoryScreen : 1;                           		// 0x0460 (0x0004) [0x0000000000000000] [0x00001000] 
	float                                              LastPickupTime;                                   		// 0x0464 (0x0004) [0x0000000000000000]              
	float                                              LastAmmoPickupTime;                               		// 0x0468 (0x0004) [0x0000000000000000]              
	float                                              LastWeaponPickupTime;                             		// 0x046C (0x0004) [0x0000000000000000]              
	struct FColor                                      cMMFriendColor;                                   		// 0x0470 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cMMEnemyColor;                                    		// 0x0474 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMMPlayerSize;                                    		// 0x0478 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      BlueColor;                                        		// 0x047C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UTextureRenderTarget2D*                      pRenderTargetForSNDMinigame;                      		// 0x0480 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBGFxMoviePlayer_SNDMinigame*               pCurrentSNDMinigame;                              		// 0x0484 (0x0004) [0x0000000000000000]              
	class APBInteractiveObjective*                     minigameObjective;                                		// 0x0488 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBAvatarData*                               AvatarData;                                       		// 0x048C (0x0004) [0x0000000000000000]              
	class UPBGFxMoviePlayer_NextMapVote*               pNextMapVoteMovie;                                		// 0x0490 (0x0004) [0x0000000000000000]              
	class APBPlayerController*                         PBPlayerOwner;                                    		// 0x0494 (0x0004) [0x0000000000000000]              
	TArray< struct FChatMessage >                      rChatMessages;                                    		// 0x0498 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      InitialLobbyScreen;                               		// 0x04A4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBImpactData
// 0x0048 (0x0084 - 0x003C)
class UPBImpactData : public UObject
{
public:
	unsigned char                                      Type;                                             		// 0x003C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          DecalMaterial;                                    		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecalWidth;                                       		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecalHeight;                                      		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecalThickness;                                   		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      DecalNoClip : 1;                                  		// 0x0050 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bProjectOnTerrain : 1;                            		// 0x0050 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bProjectOnSkeletalMeshes : 1;                     		// 0x0050 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	int                                                DecalRandomRotationRange;                         		// 0x0054 (0x0004) [0x0000000020000001]              ( CPF_Edit | CPF_Deprecated )
	float                                              DecalRandomSizeFactor;                            		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecalLifeSpan;                                    		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ImpactParticleSystem;                             		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSound;                                      		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSoundAlternative;                           		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSoundLand;                                  		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSoundTakeoff;                               		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ExitParticleSystem;                               		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             WakeupParticleSystem;                             		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             RestOnGroundParticleSystem;                       		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              damageFactor;                                     		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKActorClientOnly
// 0x0004 (0x02CC - 0x02C8)
class APBKActorClientOnly : public AKActor
{
public:
	unsigned long                                      bDirty : 1;                                       		// 0x02C8 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBKWeaponGlobals
// 0x0114 (0x02EC - 0x01D8)
class APBKWeaponGlobals : public AActor
{
public:
	float                                              fRecoilNodeStrengthModifier;                      		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseCameraSocket : 1;                             		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAlwaysUseWeaponMeshAim : 1;                      		// 0x01DC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDebugShowSphereOnLightPos : 1;                   		// 0x01DC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAlwaysUseUIDot : 1;                              		// 0x01DC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bUsePointLight : 1;                               		// 0x01DC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bEnableWorldDOF : 1;                              		// 0x01DC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDisplayCenterDot : 1;                            		// 0x01DC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bShowDamageNumbers : 1;                           		// 0x01DC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bWeaponConditionTrackingEnabled : 1;              		// 0x01DC (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bDBG_DisplayHUDWeaponInfo : 1;                    		// 0x01DC (0x0004) [0x0000000000002001] [0x00000200] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bDBG_RenderBulletTrace : 1;                       		// 0x01DC (0x0004) [0x0000000000002001] [0x00000400] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bDBG_MaxRadiusSpread : 1;                         		// 0x01DC (0x0004) [0x0000000000002001] [0x00000800] ( CPF_Edit | CPF_Transient )
	struct FName                                       EyeRotationSocketName;                            		// 0x01E0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    EyeOffsetRotation;                                		// 0x01E8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireBlendTime;                                   		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimFireBlendTime;                                		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEyeRotBlendFactor;                               		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMovingSpeedPct;                                  		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLaserDotScale;                                   		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLaserDotSizeModifier1P;                          		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLaserDotSizeModifier3P;                          		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFarDistanceToUpscale;                            		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFarScaleModifier;                                		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNearDistanceToStartScaling;                      		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNearScaleModifier;                               		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    rOffsetRotation;                                  		// 0x0220 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLightRadiusMin;                                  		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLightRadiusMax;                                  		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDistanceToPullBackLaserLight;                    		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLaserMinDist;                                    		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLaserMaxDist;                                    		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScaleAtMax;                                      		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScaleAtMin;                                      		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ADecalActorMovable*                          pMovableDecal;                                    		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSmoothedRotSpeed;                                		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWorldDOFFocusInnerRadius;                        		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWorldDOFDistance;                                		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintOffsetExponent;                            		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iMaxImpactSoundsPerFrame;                         		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  EnemyHitIndicatorTexture;                         		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstance*                           CrosshairEnemyHitIndicator;                       		// 0x0264 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cNormalCrosshairColor;                            		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cEnemyAimCrosshairColor;                          		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cFriendlyAimCrosshairColor;                       		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnemyHitCrosshairDisplayTime;                    		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  CrosshairTexture;                                 		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  CrosshairDotTexture;                              		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstance*                           CrosshairMaterialInstance;                        		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstance*                           CrosshairCenterMatInstance;                       		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fGlobalDamageModifier;                            		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMuzzleTimer;                                     		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cMuzzleLightColor;                                		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   CharacterHitSoundCue;                             		// 0x0294 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fForceOutOfAimUpVelocity;                         		// 0x0298 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fForceOutOfAimDownVelocity;                       		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    ZoomCaptureOffsetRotation;                        		// 0x02A0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UTextureRenderTarget2D*                      SniperZoomTextureRT;                              		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstance*                           SniperZoomMaterial;                               		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeGap;                                        		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNonAimForcedWorldFOV;                            		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTextureRenderTarget2D*                      FlashBangRenderTexture;                           		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBrokenWeaponDmgModifier;                         		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCPModifier;                                      		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCPMax;                                           		// 0x02C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRepairCrFactor;                                  		// 0x02CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRepairCOFactor;                                  		// 0x02D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinCPMaxCondition;                               		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxCPModifier;                                   		// 0x02D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   pCrosshairMI;                                     		// 0x02DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pCrosshairCenterMI;                               		// 0x02E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pCrosshairEnemyHitMI;                             		// 0x02E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBKWeaponGlobals*                           pCurrentWeaponGlobals;                            		// 0x02E8 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
public:
};

// Class PlanBGame.PBKWeaponInfo
// 0x00A4 (0x027C - 0x01D8)
class APBKWeaponInfo : public AActor
{
public:
	struct FSWeaponCode                                CurrentWeaponCode;                                		// 0x01D8 (0x000C) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class APBKWeaponParams*                            WeaponParams;                                     		// 0x01E4 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class APBNWeaponCustomParams*                      WeaponCustomParams;                               		// 0x01E8 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	TArray< class UPBKWeaponMod* >                     CurrentWeaponMods;                                		// 0x01EC (0x000C) [0x0000000000422001]              ( CPF_Edit | CPF_Transient | CPF_EditConst | CPF_NeedCtorLink )
	unsigned long                                      bAttached1P : 1;                                  		// 0x01F8 (0x0004) [0x0000000000022001] [0x00000001] ( CPF_Edit | CPF_Transient | CPF_EditConst )
	unsigned long                                      bAttached3P : 1;                                  		// 0x01F8 (0x0004) [0x0000000000022001] [0x00000002] ( CPF_Edit | CPF_Transient | CPF_EditConst )
	unsigned long                                      bFiringSoundPlaying : 1;                          		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEquipUnequip : 1;                                		// 0x01F8 (0x0004) [0x0000000000002001] [0x00000008] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bVisibilityInitialized : 1;                       		// 0x01F8 (0x0004) [0x0000000000002001] [0x00000010] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bCachedFirstPerson : 1;                           		// 0x01F8 (0x0004) [0x0000000000002001] [0x00000020] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bCachedCurrentlyEquipped : 1;                     		// 0x01F8 (0x0004) [0x0000000000002001] [0x00000040] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bCachedInAimMode : 1;                             		// 0x01F8 (0x0004) [0x0000000000002001] [0x00000080] ( CPF_Edit | CPF_Transient )
	class APBKWeaponGlobals*                           pGlobals;                                         		// 0x01FC (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class USkeletalMesh*                               pWeaponMesh1P;                                    		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               pWeaponMesh3P;                                    		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPBKWeaponMod_AimMod*                        pAimMod;                                          		// 0x0208 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_Barrel*                        pBarrelMod;                                       		// 0x020C (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_LaserPointer*                  pLaserMod;                                        		// 0x0210 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_Magazine*                      pMagazineMod;                                     		// 0x0214 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_Muzzle*                        pMuzzleMod;                                       		// 0x0218 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_Stock*                         pStockMod;                                        		// 0x021C (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class UPBKWeaponMod_Trigger*                       pTriggerMod;                                      		// 0x0220 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	unsigned char                                      curTriggerMode;                                   		// 0x0224 (0x0001) [0x0000000000022000]              ( CPF_Transient | CPF_EditConst )
	unsigned char                                      iCurFlashCount;                                   		// 0x0225 (0x0001) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	class APBKWeapon*                                  pCachedWeapon;                                    		// 0x0228 (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class APBKWeaponSettings*                          pWeaponSettings;                                  		// 0x022C (0x0004) [0x0000000000022001]              ( CPF_Edit | CPF_Transient | CPF_EditConst )
	class USkeletalMeshComponent*                      HandMeshComponent;                                		// 0x0230 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< struct FTWeaponMeshComp >                  rWeaponVisualsComp1P;                             		// 0x0234 (0x000C) [0x0000000004482001]              ( CPF_Edit | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FTWeaponMeshComp >                  rWeaponVisualsComp3P;                             		// 0x0240 (0x000C) [0x0000000004482001]              ( CPF_Edit | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	class UPhysicsAsset*                               HandsPhysicsAsset;                                		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UStaticMeshComponent*                        pWeaponBulletMeshComponent;                       		// 0x0250 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UPointLightComponent*                        MuzzleFlashLight3P;                               		// 0x0254 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	int                                                iTracerBulletCount;                               		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iPreviousBulletsLeft;                             		// 0x025C (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	float                                              fLastImpactSound;                                 		// 0x0260 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	int                                                iImpactSoundsPlayed;                              		// 0x0264 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	int                                                iFirePattern;                                     		// 0x0268 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	int                                                iFireEffectsIndex;                                		// 0x026C (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	float                                              fMaxTraceRange;                                   		// 0x0270 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	class USoundCue*                                   NoGoSoundCue;                                     		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBSkill*                                    pOwningSkill;                                     		// 0x0278 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeaponSettings
// 0x0010 (0x01E8 - 0x01D8)
class APBKWeaponSettings : public AActor
{
public:
	unsigned long                                      bAlwaysDoTracers : 1;                             		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	unsigned long                                      bShowHitSpheres : 1;                              		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000002] ( CPF_Edit | CPF_Net )
	unsigned long                                      bGivePresetsInstantly : 1;                        		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bRecoilActive : 1;                                		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000008] ( CPF_Edit | CPF_Net )
	unsigned long                                      bAllowFiring : 1;                                 		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSpreadActive : 1;                                		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000020] ( CPF_Edit | CPF_Net )
	unsigned long                                      bDebugLaserPointer : 1;                           		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000040] ( CPF_Edit | CPF_Net )
	unsigned long                                      bDebugFreezeLaserPointer : 1;                     		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000080] ( CPF_Edit | CPF_Net )
	unsigned long                                      bFastSkillRecharge : 1;                           		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000100] ( CPF_Edit | CPF_Net )
	unsigned long                                      bAlwaysShowCrosshair : 1;                         		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000200] ( CPF_Edit | CPF_Net )
	unsigned long                                      bInfiniteStamina : 1;                             		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000400] ( CPF_Edit | CPF_Net )
	unsigned long                                      bOldMeleeSystem : 1;                              		// 0x01D8 (0x0004) [0x0000000000000021] [0x00000800] ( CPF_Edit | CPF_Net )
	unsigned long                                      bSyncMoreSingleShot : 1;                          		// 0x01D8 (0x0004) [0x0000000000000021] [0x00001000] ( CPF_Edit | CPF_Net )
	unsigned long                                      bDisableMuzzleFlash : 1;                          		// 0x01D8 (0x0004) [0x0000000000000021] [0x00002000] ( CPF_Edit | CPF_Net )
	unsigned long                                      bCompensateLagForGrenadeThrow : 1;                		// 0x01D8 (0x0004) [0x0000000000000021] [0x00004000] ( CPF_Edit | CPF_Net )
	unsigned long                                      bRenderShotText : 1;                              		// 0x01D8 (0x0004) [0x0000000000000021] [0x00008000] ( CPF_Edit | CPF_Net )
	TArray< struct FWeaponSettingInfo >                rSettings;                                        		// 0x01DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBMapList
// 0x0050 (0x008C - 0x003C)
class UPBMapList : public UObject
{
public:
	TArray< struct FGameSetupOption >                  rAllSetupOptions;                                 		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FMapElementInfo >                   rMapList;                                         		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FGameModeInfo >                     rGameModeList;                                    		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBMapList*                                  pMapListArchetype;                                		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      DefaultGameMode;                                  		// 0x0064 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     DefaultMapName;                                   		// 0x0068 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fResultScreenTimeToShow;                          		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScoreboardScreenTimeToShow;                      		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fProgressionScreenTimeToShow;                     		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FScriptDelegate                             __MapSort__Delegate;                              		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBMoveMapAndContentCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBMoveMapAndContentCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBNotificationSystem
// 0x0344 (0x0380 - 0x003C)
class UPBNotificationSystem : public UObject
{
public:
	float                                              mNotificationPopupDisplayTime;                    		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              mNotificationPopupFadeTime;                       		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              mPopupNotificationTimer;                          		// 0x0044 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mPopupNotificationVisible : 1;                    		// 0x0048 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mDetailNotificationVisible : 1;                   		// 0x0048 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mDetailNotificationOpening : 1;                   		// 0x0048 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      mProfileSelected : 1;                             		// 0x0048 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      mProfileCreation : 1;                             		// 0x0048 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      mInitialized2 : 1;                                		// 0x0048 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bSwallowNotification : 1;                         		// 0x0048 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	int                                                mDetailedNotificationsPending;                    		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FSubscriptionData >                 PBN_LastSubscriptionDuration;                     		// 0x0050 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                PBN_SubscriptionAboutToExpireTime;                		// 0x005C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                PBN_CurrentAccountLastSubscriptionDuration;       		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FBuddyNotification >                PBN_BuddyNotificationList;                        		// 0x0064 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     NS_NotificationExpired;                           		// 0x0070 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_NotificationExpired_Title;                     		// 0x007C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PendingBuddyRequests;                          		// 0x0088 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PendingBuddyRequests_title;                    		// 0x0094 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PendingBuddyRequests_popup;                    		// 0x00A0 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PendingBuddyRequests_popupTitle;               		// 0x00AC (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_IngameServiceExpired;                          		// 0x00B8 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_IngameServiceExpired_Title;                    		// 0x00C4 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServiceWillExpire;                             		// 0x00D0 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServiceWillExpire_Title;                       		// 0x00DC (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemAdded;                                     		// 0x00E8 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemAdded_Title;                               		// 0x00F4 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_CreditAdded;                                   		// 0x0100 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_CreditAdded_Title;                             		// 0x010C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_AchievementComplete_title;                     		// 0x0118 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_AchievementComplete;                           		// 0x0124 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_AchievementAccomplished_Title;                 		// 0x0130 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_AchievementAccomplished;                       		// 0x013C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_BannedByGM_Title;                              		// 0x0148 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_BannedByGM;                                    		// 0x0154 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Kicked_Title;                                  		// 0x0160 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_KickedByGM;                                    		// 0x016C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Muted_Title;                                   		// 0x0178 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_MutedByGM;                                     		// 0x0184 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_CSIntervention_Title;                          		// 0x0190 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Kicked;                                        		// 0x019C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Muted;                                         		// 0x01A8 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemAddedDtl;                                  		// 0x01B4 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemRemoved_Title;                             		// 0x01C0 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemRemoved;                                   		// 0x01CC (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemUnusable_Title;                            		// 0x01D8 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ItemUnusable;                                  		// 0x01E4 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PromotionCode_Title;                           		// 0x01F0 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_PromotionCode;                                 		// 0x01FC (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServiceExpired_Title;                          		// 0x0208 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServiceExpired;                                		// 0x0214 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Rankup_Title;                                  		// 0x0220 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_Rankup;                                        		// 0x022C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServerShutdown_Title;                          		// 0x0238 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_ServerAnnouncement_Title;                      		// 0x0244 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_MaintenanceAnnouncement_Title;                 		// 0x0250 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_MaintenanceAnnouncement;                       		// 0x025C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_BuddyAdded_title;                              		// 0x0268 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NS_BuddyAdded_Detail;                             		// 0x0274 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PremiumSubscriptionTitle;                         		// 0x0280 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PremiumExpired;                                   		// 0x028C (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PremiumDuration;                                  		// 0x0298 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PremiumBought;                                    		// 0x02A4 (0x000C) [0x000000000040A002]              ( CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink )
	TArray< struct FString >                           testGMEvents;                                     		// 0x02B0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBShopEvent >                      testPBManagerEvents_eventCodes;                   		// 0x02BC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBShopEvent >                      testPBManagerEvents_criticalEvents;               		// 0x02C8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APlayerController*                           mPC;                                              		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mLocalPlayerOwnerIndex;                           		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mPendingEvents;                                   		// 0x02DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mPendingEventsGM;                                 		// 0x02E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mPendingEventsPBM;                                		// 0x02E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mPendingEventsGS;                                 		// 0x02E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      mRequestPBMEvents;                                		// 0x02EC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      mPendingPBMEvents;                                		// 0x02F8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           rNotificationPictures;                            		// 0x0304 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FdateStruct                                 NotificationSystemStartDate;                      		// 0x0310 (0x0018) [0x0000000000002000]              ( CPF_Transient )
	int                                                NotificationSystemElapsedSeconds;                 		// 0x0328 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              mNotificationElapsedTimeFreq;                     		// 0x032C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mSheduledNotificationAheadTime;                   		// 0x0330 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FNotification >                     popupNotificationList;                            		// 0x0334 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FsheduledNotification >             sheduledNotificationList;                         		// 0x0340 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FsheduledNotification >             sheduledNotificationListAllChar;                  		// 0x034C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FNotification                               currPopupNotification;                            		// 0x0358 (0x0024) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBNotificationSystem*                       pPBNotInstance;                                   		// 0x037C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBNWeapon
// 0x0004 (0x02CC - 0x02C8)
class APBNWeapon : public AWeapon
{
public:
	int                                                m_RandSeed;                                       		// 0x02C8 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBKWeapon
// 0x02EC (0x05B8 - 0x02CC)
class APBKWeapon : public APBNWeapon
{
public:
	class AActor*                                      DDDProjectile;                                    		// 0x02CC (0x0004) [0x0000000000000000]              
	struct FVector                                     DDDProjectileL;                                   		// 0x02D0 (0x000C) [0x0000000000000000]              
	TArray< struct FDebugHitInfo >                     rDebugHitInfo;                                    		// 0x02DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FTWeaponInitParams                          m_InitParams;                                     		// 0x02E8 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FDebugWeaponInfo >                  rDebugFunctions;                                  		// 0x02F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FWRLMiniGameResult                          MiniGameData;                                     		// 0x0304 (0x0008) [0x0000000000000000]              
	unsigned char                                      MiniGameLastResult;                               		// 0x030C (0x0001) [0x0000000000000000]              
	unsigned char                                      eCurrentAimInterpMode;                            		// 0x030D (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      CurrentCharStance;                                		// 0x030E (0x0001) [0x0000000000000000]              
	unsigned char                                      CurrentTriggerMode;                               		// 0x030F (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPingStartTime;                                   		// 0x0310 (0x0004) [0x0000000000000000]              
	unsigned long                                      bShowFullClip : 1;                                		// 0x0314 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bRenderShotInfo : 1;                              		// 0x0314 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bTickEnabled : 1;                                 		// 0x0314 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bShowOnlyCenterDot : 1;                           		// 0x0314 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bIsLocalPlayer : 1;                               		// 0x0314 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bReloadRequested : 1;                             		// 0x0314 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bInterruptReloadAllowed : 1;                      		// 0x0314 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bInterruptReload : 1;                             		// 0x0314 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bScheduleBurstRetrigger : 1;                      		// 0x0314 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bCurrentlyFalling : 1;                            		// 0x0314 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bNewAimingAimIn : 1;                              		// 0x0314 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bInSecondaryZoom : 1;                             		// 0x0314 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bRequestedAimIn : 1;                              		// 0x0314 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bReadyToThrow : 1;                                		// 0x0314 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bThrowIncreasing : 1;                             		// 0x0314 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bFlashActive : 1;                                 		// 0x0314 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bGoSprint : 1;                                    		// 0x0314 (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bLaserDotVisible : 1;                             		// 0x0314 (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bPreventSelect : 1;                               		// 0x0314 (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      bHasBeenReplaced : 1;                             		// 0x0314 (0x0004) [0x0000000000000020] [0x00080000] ( CPF_Net )
	unsigned long                                      bReloadInPerfectPos : 1;                          		// 0x0314 (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      bSkipEquip1PAnim : 1;                             		// 0x0314 (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	unsigned long                                      bSkipPutdown1PAnim : 1;                           		// 0x0314 (0x0004) [0x0000000000002000] [0x00400000] ( CPF_Transient )
	unsigned long                                      bWeaponBroken : 1;                                		// 0x0314 (0x0004) [0x0000000000002000] [0x00800000] ( CPF_Transient )
	unsigned long                                      bSplashJump : 1;                                  		// 0x0314 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bSplashDamage : 1;                                		// 0x0314 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bRecommendSplashDamage : 1;                       		// 0x0314 (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bSniping : 1;                                     		// 0x0314 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bShouldReplicateBulletCounts : 1;                 		// 0x0314 (0x0004) [0x0000000000002001] [0x10000000] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bPauseBobbing : 1;                                		// 0x0314 (0x0004) [0x0000000000002000] [0x20000000] ( CPF_Transient )
	class APBKWeaponGlobals*                           pGlobals;                                         		// 0x0318 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBKWeaponSettings*                          pWeaponSettings;                                  		// 0x031C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                CompleteWeaponCode;                               		// 0x0320 (0x000C) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	struct FGuid                                       WeaponSerialNumber;                               		// 0x032C (0x0010) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              fSpreadToDistance;                                		// 0x033C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    rEyeRot;                                          		// 0x0340 (0x000C) [0x0000000000000000]              
	float                                              fEyeRotFactor;                                    		// 0x034C (0x0004) [0x0000000000000000]              
	float                                              fBlendFactor;                                     		// 0x0350 (0x0004) [0x0000000000000000]              
	float                                              fLastShotHitEnemyTime;                            		// 0x0354 (0x0004) [0x0000000000000000]              
	float                                              fCurrentSpreadRadius;                             		// 0x0358 (0x0004) [0x0000000000000000]              
	float                                              fCurMinimumSpreadRadius;                          		// 0x035C (0x0004) [0x0000000000000000]              
	float                                              fTargetMinimumSpreadRadius;                       		// 0x0360 (0x0004) [0x0000000000000000]              
	float                                              fCurMinimumChangeSpeed;                           		// 0x0364 (0x0004) [0x0000000000000000]              
	float                                              fLastActivityTime;                                		// 0x0368 (0x0004) [0x0000000000000000]              
	struct FVector                                     vWeaponOffset;                                    		// 0x036C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCurPushBack;                                     		// 0x0378 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentFiringOffsetValue;                        		// 0x037C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vCurrentWeaponFiringOffset;                       		// 0x0380 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastSpreadFireTime;                              		// 0x038C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobTime;                                         		// 0x0390 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fViewBobPitch;                                    		// 0x0394 (0x0004) [0x0000000000000000]              
	float                                              fViewBobYaw;                                      		// 0x0398 (0x0004) [0x0000000000000000]              
	struct FRotator                                    rCurrentViewOffset;                               		// 0x039C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLastBurstFiringTime;                             		// 0x03A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fThrowStrength;                                   		// 0x03AC (0x0004) [0x0000000000000000]              
	float                                              fCurrentThrowPause;                               		// 0x03B0 (0x0004) [0x0000000000000000]              
	float                                              fLastRollTime;                                    		// 0x03B4 (0x0004) [0x0000000000000000]              
	struct FRotator                                    BobTurningCurrentRot;                             		// 0x03B8 (0x000C) [0x0000000000000000]              
	float                                              fTurnBobCurPitch;                                 		// 0x03C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTurnBobCurYaw;                                   		// 0x03C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fRecoilBulletCount;                               		// 0x03CC (0x0004) [0x0000000000000000]              
	float                                              fLastRecoilBulletCount;                           		// 0x03D0 (0x0004) [0x0000000000000000]              
	struct FVector                                     vLastRecoil;                                      		// 0x03D4 (0x000C) [0x0000000000000000]              
	float                                              fRequiredBullets;                                 		// 0x03E0 (0x0004) [0x0000000000000000]              
	struct FVector                                     vCurrentRecoil;                                   		// 0x03E4 (0x000C) [0x0000000000000000]              
	struct FVector                                     vRemainingRecoil;                                 		// 0x03F0 (0x000C) [0x0000000000000000]              
	float                                              fFlashStartTime;                                  		// 0x03FC (0x0004) [0x0000000000000000]              
	class AActor*                                      CookedProjectile;                                 		// 0x0400 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              fSprintPerc;                                      		// 0x0404 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vLaserLastPosition;                               		// 0x0408 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLaserPointDistance;                              		// 0x0414 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    recoilForBot;                                     		// 0x0418 (0x000C) [0x0000000000000000]              
	class APBKWeaponInfo*                              WeaponInfo;                                       		// 0x0424 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	class APBKWeaponParams*                            pWeaponParams;                                    		// 0x0428 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_LaserPointer*                  pLaserMod;                                        		// 0x042C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_Stock*                         pStockMod;                                        		// 0x0430 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_Barrel*                        pBarrelMod;                                       		// 0x0434 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_Magazine*                      pMagazineMod;                                     		// 0x0438 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_Trigger*                       pTriggerMod;                                      		// 0x043C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_Muzzle*                        pMuzzleMod;                                       		// 0x0440 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBKWeaponMod_AimMod*                        pAimMod;                                          		// 0x0444 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FTWeaponCondition                           WeaponCondition;                                  		// 0x0448 (0x0024) [0x0000000000000001]              ( CPF_Edit )
	int                                                curSemiModeShotCount;                             		// 0x046C (0x0004) [0x0000000000000000]              
	int                                                PBfireMode;                                       		// 0x0470 (0x0004) [0x0000000000000000]              
	TArray< struct FName >                             PBFireModeNames;                                  		// 0x0474 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< int >                                      ShotCost;                                         		// 0x0480 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< float >                                    MinReloadPct;                                     		// 0x048C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UDOFEffect*                                  pBackgroundDOF;                                   		// 0x0498 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMaxTraceRange;                                   		// 0x049C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iWeaponStatsIdx;                                  		// 0x04A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FRangeDmgInfo >                     rCachedRangeDmg;                                  		// 0x04A4 (0x000C) [0x0000000000402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink )
	struct FGeneralCache                               CachedGeneral;                                    		// 0x04B0 (0x0084) [0x0000000000000001]              ( CPF_Edit )
	struct FSpreadCache                                CachedSpread;                                     		// 0x0534 (0x005C) [0x0000000000000001]              ( CPF_Edit )
	struct FRecoilCache                                CachedRecoil;                                     		// 0x0590 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              CurrentRating;                                    		// 0x059C (0x0004) [0x0000000000000000]              
	int                                                ClientCurrentAmmo;                                		// 0x05A0 (0x0004) [0x0000000000000000]              
	int                                                MagazineAmmoSize;                                 		// 0x05A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CurrentAmmo;                                      		// 0x05A8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                TotalAmmoLeft;                                    		// 0x05AC (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	int                                                iTimesFiredBeforeSmoke;                           		// 0x05B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                previousWeaponOwnerId;                            		// 0x05B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBNWeaponCustomParams
// 0x0100 (0x02D8 - 0x01D8)
class APBNWeaponCustomParams : public AActor
{
public:
	struct FPBNWeaponCustomization                     CustomizationInfo;                                		// 0x01D8 (0x00CC) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     WeaponMenuName;                                   		// 0x02A4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     WeaponMenuDescription;                            		// 0x02B0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     WeaponMenuCategory;                               		// 0x02BC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                AvailableModSlots;                                		// 0x02C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Price;                                            		// 0x02CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                RealMoneyPrice;                                   		// 0x02D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                requiredRank;                                     		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBNWeaponGlowColorList
// 0x000C (0x01E4 - 0x01D8)
class APBNWeaponGlowColorList : public AActor
{
public:
	TArray< struct FPBNWeaponGlowColorInfo >           Colors;                                           		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBNWeaponObject
// 0x0000 (0x003C - 0x003C)
class UPBNWeaponObject : public UObject
{
public:
public:
};

// Class PlanBGame.PBNWeaponList
// 0x00B0 (0x00EC - 0x003C)
class UPBNWeaponList : public UPBNWeaponObject
{
public:
	TArray< struct FPBWeaponItemInfo >                 rAllWeaponsList;                                  		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                m_nMaxStatisticalIndex;                           		// 0x0048 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FPBNWeaponGlobalCustomizationInfo           GlobalInfo;                                       		// 0x004C (0x004C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              CustomWeaponTextureStreamTimeout;                 		// 0x0098 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FSWeaponModTypeDesc >               ModeTypesDescriptions;                            		// 0x009C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FSWeaponCategoryDesc >              WeaponCategoriesDescriptions;                     		// 0x00A8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBNWeaponList*                              pWeaponListArcNative;                             		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UClass*                                      WeaponPresetClass;                                		// 0x00B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     ItemShopModsCategory;                             		// 0x00BC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     ItemShopMaterialsCategory;                        		// 0x00C8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     ItemShopDecalsCategory;                           		// 0x00D4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     ItemShopRepairCategory;                           		// 0x00E0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBWeaponList
// 0x0004 (0x00F0 - 0x00EC)
class UPBWeaponList : public UPBNWeaponList
{
public:
	class UPBWeaponList*                               pWeaponListArc;                                   		// 0x00EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBNWeaponMod
// 0x0000 (0x003C - 0x003C)
class UPBNWeaponMod : public UPBNWeaponObject
{
public:
public:
};

// Class PlanBGame.PBKWeaponMod
// 0x001C (0x0058 - 0x003C)
class UPBKWeaponMod : public UPBNWeaponMod
{
public:
	unsigned char                                      WeaponModType;                                    		// 0x003C (0x0001) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                iRequiredSlots;                                   		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RangeInfoMod;                                     		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AccuracyInfoMod;                                  		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageInfoMod;                                    		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpeedInfoMod;                                     		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RateOfFireInfoMod;                                		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeaponMod_AimMod
// 0x0070 (0x00C8 - 0x0058)
class UPBKWeaponMod_AimMod : public UPBKWeaponMod
{
public:
	struct FRotator                                    rAimOffsetRotation;                               		// 0x0058 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vAimOffsetPosition;                               		// 0x0064 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimingFOVFactor;                                 		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimingWeaponFOVFactor;                           		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFOVSmoothTransition : 1;                         		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHasSecondaryZoom : 1;                            		// 0x0078 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bHideWeaponOnAim : 1;                             		// 0x0078 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bNoMuzzleEffectsOnAim : 1;                        		// 0x0078 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bEnableAimFiringPushback : 1;                     		// 0x0078 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	float                                              fAimingSecondaryFOVFactor;                        		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          AimSceneMaterial;                                 		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnBobAimingDamping;                            		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnBobAimingFadeSpeed;                          		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnBobAimingMinFadeSpeed;                       		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vTurnBobAimingCenter;                             		// 0x0090 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    rTurnBobAimingMinRotation;                        		// 0x009C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    rTurnBobAimingMaxRotation;                        		// 0x00A8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPushbackPerBullet;                               		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPushbackForcedWhenFiring;                        		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPushBackMaxLimit;                                		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPushBackDecay;                                   		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimFiringOffsetDecay;                            		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeaponMod_Barrel
// 0x0018 (0x0070 - 0x0058)
class UPBKWeaponMod_Barrel : public UPBKWeaponMod
{
public:
	TArray< struct FRangeDmgInfo >                     rAddRangeDmg;                                     		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fSpreadChangeTimeModifier;                        		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAllMovementModifier;                       		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimInTimeModifier;                               		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeaponMod_LaserPointer
// 0x001C (0x0074 - 0x0058)
class UPBKWeaponMod_LaserPointer : public UPBKWeaponMod
{
public:
	unsigned long                                      bUseLaserDot : 1;                                 		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              fMinSpreadModifier;                               		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpreadModifier;                               		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBulletModifier;                         		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rAddRangeDmg;                                     		// 0x0068 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBKWeaponMod_Magazine
// 0x0024 (0x007C - 0x0058)
class UPBKWeaponMod_Magazine : public UPBKWeaponMod
{
public:
	float                                              fBaseDamageModifier;                              		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rAddRangeDmg;                                     		// 0x005C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                iAdditionalMagazineCapacity;                      		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iAdditionalStartingAmmo;                          		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBulletModifier;                         		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifier;                          		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBProjectile*                               ProjectileArchetype;                              		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeaponMod_Muzzle
// 0x0048 (0x00A0 - 0x0058)
class UPBKWeaponMod_Muzzle : public UPBKWeaponMod
{
public:
	float                                              fMaxSpreadRadiusModifier;                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNormalDamageModifer;                             		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAimMinModifer;                             		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadStandMinModifer;                           		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadCrouchMinModifer;                          		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             MuzzleFlashPSCTemplate1P;                         		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             MuzzleFlashPSCTemplate3P;                         		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MuzzleFlashOffset;                                		// 0x0074 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      EnableMuzzleLight : 1;                            		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSilencer : 1;                                    		// 0x0080 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class UParticleSystem*                             MuzzleFireStopFX1P;                               		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifier;                          		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponFiringSound1P;                              		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponFiringSound3P;                              		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rAddRangeDmg;                                     		// 0x0094 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBKWeaponMod_Stock
// 0x0024 (0x007C - 0x0058)
class UPBKWeaponMod_Stock : public UPBKWeaponMod
{
public:
	float                                              fMinSpreadModifier;                               		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBulletModifier;                         		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpreadModifier;                               		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifier;                          		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxYawPitchModifier;                             		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fGroundSpeedModifier;                             		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadChangeTimeModifier;                        		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAllMovementModifier;                       		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimInTimeModifier;                               		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeaponMod_Trigger
// 0x0050 (0x00A8 - 0x0058)
class UPBKWeaponMod_Trigger : public UPBKWeaponMod
{
public:
	unsigned char                                      TriggerMode;                                      		// 0x0058 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                SemiModeShotCount;                                		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireRateModifier;                                		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnableAutoRetrigger : 1;                         		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              fAddFiringDecay;                                  		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAddNormalDecay;                                  		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifier;                          		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifierAim;                       		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBurstTriggerPause;                               		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBulletModifier;                         		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadDecaySpeedModifer;                         		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadFastMoveModifier;                          		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpreadRadiusModifier;                         		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNormalDamageModifer;                             		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAimMinModifer;                             		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadStandMinModifer;                           		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadCrouchMinModifer;                          		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rAddRangeDmg;                                     		// 0x009C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBNWeaponModParam
// 0x0018 (0x0054 - 0x003C)
class UPBNWeaponModParam : public UPBNWeaponObject
{
public:
	struct FString                                     Mesh1P_Ref;                                       		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     Mesh3P_Ref;                                       		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBNWeaponPreset
// 0x0130 (0x016C - 0x003C)
class UPBNWeaponPreset : public UPBNWeaponObject
{
public:
	struct FString                                     PresetGivenName;                                  		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bDisabledPreset : 1;                              		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FString                                     PrimaryWeaponParamName;                           		// 0x004C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FString >                           PrimaryMods;                                      		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     PrimaryMaterialName;                              		// 0x0064 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     SecondaryWeaponParamName;                         		// 0x0070 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FString >                           SecondaryMods;                                    		// 0x007C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     SecondaryMaterialName;                            		// 0x0088 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     GrenadesParamName;                                		// 0x0094 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     MeleeParamName;                                   		// 0x00A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FSWeaponCode                                iPrimaryWeaponCode;                               		// 0x00AC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                iSecondaryWeaponCode;                             		// 0x00B8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                iGrenadeWeaponCode;                               		// 0x00C4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                iMeleeWeaponCode;                                 		// 0x00D0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponPresetCodes                         sWeaponCodes;                                     		// 0x00DC (0x0030) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       PrimaryWeaponSerialNumber;                        		// 0x010C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       SecondaryWeaponSerialNumber;                      		// 0x011C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       GrenadeWeaponSerialNumber;                        		// 0x012C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       MeleeWeaponSerialNumber;                          		// 0x013C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	int                                                iPrimaryWeaponCurCondition;                       		// 0x014C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iSecondaryWeaponCurCondition;                     		// 0x0150 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iGrenadeWeaponCurCondition;                       		// 0x0154 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iMeleeWeaponCurCondition;                         		// 0x0158 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iPrimaryWeaponCurMaxCondition;                    		// 0x015C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iSecondaryWeaponCurMaxCondition;                  		// 0x0160 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iGrenadeWeaponCurMaxCondition;                    		// 0x0164 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iMeleeWeaponCurMaxCondition;                      		// 0x0168 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBNWeaponParams
// 0x0048 (0x0220 - 0x01D8)
class APBNWeaponParams : public AActor
{
public:
	unsigned char                                      WeaponCategory;                                   		// 0x01D8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     ItemShopSubCategory;                              		// 0x01DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBNWeaponModType >                 ModTypes;                                         		// 0x01E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     WeaponMenuName;                                   		// 0x01F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bWeaponDisabledInMenu : 1;                        		// 0x0200 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FPBGameItem_IconCoordsInfo                  WeaponMenuIcon;                                   		// 0x0204 (0x001C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBKWeaponParams
// 0x05A8 (0x07C8 - 0x0220)
class APBKWeaponParams : public APBNWeaponParams
{
public:
	float                                              fZoneDmgModifier_Head;                            		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fZoneDmgModifier_Body;                            		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fZoneDmgModifier_Legs;                            		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bGivesKillerHeat : 1;                             		// 0x022C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSelectableWhenEmpty : 1;                         		// 0x022C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bNotUserSelectable : 1;                           		// 0x022C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPreventWeaponChange : 1;                         		// 0x022C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bTrackWeaponCondition : 1;                        		// 0x022C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bApplyWeaponMaterialFor3P : 1;                    		// 0x022C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bCreateBulletComponent : 1;                       		// 0x022C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bKeepCrosshairOnAim : 1;                          		// 0x022C (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bEnableSprintBobbing : 1;                         		// 0x022C (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bEnableSprintViewBobbing : 1;                     		// 0x022C (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bSprintAllowed : 1;                               		// 0x022C (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bSpreadEnabled : 1;                               		// 0x022C (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bDisableFor3rdPerson : 1;                         		// 0x022C (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bEnableRecoil : 1;                                		// 0x022C (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bSkipBulletCountDecay : 1;                        		// 0x022C (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bClampMaxBulletCount : 1;                         		// 0x022C (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      bEnableBobbing : 1;                               		// 0x022C (0x0004) [0x0000000000000001] [0x00010000] ( CPF_Edit )
	unsigned long                                      bBobViewOnAim : 1;                                		// 0x022C (0x0004) [0x0000000000000001] [0x00020000] ( CPF_Edit )
	unsigned long                                      bEnableTurnBobbing : 1;                           		// 0x022C (0x0004) [0x0000000000000001] [0x00040000] ( CPF_Edit )
	unsigned long                                      bAutoReload : 1;                                  		// 0x022C (0x0004) [0x0000000000000001] [0x00080000] ( CPF_Edit )
	unsigned long                                      bReloadsSingleBullets : 1;                        		// 0x022C (0x0004) [0x0000000000000001] [0x00100000] ( CPF_Edit )
	unsigned long                                      bHasSecondaryFire : 1;                            		// 0x022C (0x0004) [0x0000000000000001] [0x00200000] ( CPF_Edit )
	unsigned long                                      bMarkOnMinimapWhenFiring : 1;                     		// 0x022C (0x0004) [0x0000000000000001] [0x00400000] ( CPF_Edit )
	unsigned long                                      bHasHoldState : 1;                                		// 0x022C (0x0004) [0x0000000000000001] [0x00800000] ( CPF_Edit )
	unsigned long                                      bThrowMinigameAlt : 1;                            		// 0x022C (0x0004) [0x0000000000000001] [0x01000000] ( CPF_Edit )
	unsigned long                                      bPlayEquipAnimAfterFire : 1;                      		// 0x022C (0x0004) [0x0000000000000001] [0x02000000] ( CPF_Edit )
	unsigned long                                      bUseAimFireAnim : 1;                              		// 0x022C (0x0004) [0x0000000000000001] [0x04000000] ( CPF_Edit )
	unsigned long                                      bHideCrosshair : 1;                               		// 0x022C (0x0004) [0x0000000000000001] [0x08000000] ( CPF_Edit )
	unsigned long                                      bShowOnlyCenterDot : 1;                           		// 0x022C (0x0004) [0x0000000000000001] [0x10000000] ( CPF_Edit )
	unsigned long                                      bConsumeNoAmmo : 1;                               		// 0x022C (0x0004) [0x0000000000000001] [0x20000000] ( CPF_Edit )
	unsigned long                                      bDisplayTotalBulletCount : 1;                     		// 0x022C (0x0004) [0x0000000000000001] [0x40000000] ( CPF_Edit )
	unsigned long                                      bHasLightEffect : 1;                              		// 0x022C (0x0004) [0x0000000000000001] [0x80000000] ( CPF_Edit )
	unsigned long                                      bUseHandsIK : 1;                                  		// 0x0230 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      KillerBonusHeatEventForWeapon;                    		// 0x0234 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      WeaponType;                                       		// 0x0235 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      eWeaponAimInInterpolationMethod;                  		// 0x0236 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      eWeaponAimOutInterpolationMethod;                 		// 0x0237 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DefaultTriggerMode;                               		// 0x0238 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      impacttype;                                       		// 0x0239 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      WeaponFireType;                                   		// 0x023A (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      HUDBulletSize;                                    		// 0x023B (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      WeaponClass;                                      		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      WeaponInfoClass;                                  		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fGroundSpeedModifier;                             		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          WeaponMaterialForFriendly;                        		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          WeaponMaterialForEnemy;                           		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTWeaponComponents >                rWeaponComponentInfo1P;                           		// 0x0250 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FTWeaponComponents >                rWeaponComponentInfo3P;                           		// 0x025C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UStaticMesh*                                 BulletsStaticMesh;                                		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BulletSocketName;                                 		// 0x026C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fOffsetWhenFull;                                  		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fOffsetWhenEmpty;                                 		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxAmmoBulletsAtMinigamePct;                     		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ClientSideDmg;                                    		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInterpExponent;                                  		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimGroundSpeedFactor;                            		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimPctForRecoilAndSpread;                        		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vNormalPosOffset;                                 		// 0x0290 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    vNormalRotOffset;                                 		// 0x029C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobVertAmount;                             		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobHorizAmount;                            		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobLeftAmount;                             		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobRightAmount;                            		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobSprintSpeedModifier;                          		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobViewHorizModifier;                      		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobViewVertModifier;                       		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintBobViewSpeedModifier;                      		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vSprintPosOffset;                                 		// 0x02C8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    vSprintRotOffset;                                 		// 0x02D4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintSpeedModifier;                             		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SprintTransitionAnimName;                         		// 0x02E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SprintLoopingAnimName;                            		// 0x02EC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInSprintTime;                                    		// 0x02F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fOutSprintTime;                                   		// 0x02F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpreadRadius;                                 		// 0x02FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBullet;                                 		// 0x0300 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadDecaySpeed;                                		// 0x0304 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadMinChangeTime;                             		// 0x0308 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadMinChangeTimeAimModifier;                  		// 0x030C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadCenterZone;                                		// 0x0310 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadHitsOnCenterZone;                          		// 0x0314 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadNumberOfZones;                             		// 0x0318 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadStandMin;                                  		// 0x031C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadCrouchMin;                                 		// 0x0320 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAimMin;                                    		// 0x0324 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadCrouchMaxModifier;                         		// 0x0328 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadMaxJumpModifier;                           		// 0x032C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadAimMoveModifier;                           		// 0x0330 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadSlowMoveModifier;                          		// 0x0334 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadFastMoveModifier;                          		// 0x0338 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadJumpModifier;                              		// 0x033C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iShouldDrawTracerAfter;                           		// 0x0340 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pTracerParticleSystem;                            		// 0x0344 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pTracerParticleSystem3P;                          		// 0x0348 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilMaxPitch;                                  		// 0x034C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilMaxYaw;                                    		// 0x0350 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilMaxRoll;                                   		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinRollStep;                                     		// 0x0358 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxRollStep;                                     		// 0x035C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilFiringDecay;                               		// 0x0360 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilDecay;                                     		// 0x0364 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilElasticDecay;                              		// 0x0368 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilElasticFiringDecay;                        		// 0x036C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRecoilNode >                       rRecoilNodes;                                     		// 0x0370 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fRecoilSpeed;                                     		// 0x037C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilElasticTransferSpeed;                      		// 0x0380 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilNodesStrength;                             		// 0x0384 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilStrengthModifierAim;                       		// 0x0388 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilSpeedModifierAim;                          		// 0x038C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRecoilDecayModifierAim;                          		// 0x0390 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPositionChangeSpeed;                             		// 0x0394 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vCrouchPosition;                                  		// 0x0398 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vStandMovePosition;                               		// 0x03A4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWeaponPosCrouchMoveModifier;                     		// 0x03B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBaseBobSpeed;                                    		// 0x03B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobVertAmount;                                   		// 0x03B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobHorizAmount;                                  		// 0x03BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobLeftAmount;                                   		// 0x03C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobRightAmount;                                  		// 0x03C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobAmountAimModifier;                            		// 0x03C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobSpeedAddPerVelocity;                          		// 0x03CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobOnAirSpeedModifier;                           		// 0x03D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobViewVertModifier;                             		// 0x03D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobViewHorizModifier;                            		// 0x03D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBobViewSpeedModifier;                            		// 0x03DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnBobDamping;                                  		// 0x03E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnBobFadeSpeed;                                		// 0x03E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinBobFadeSpeed;                                 		// 0x03E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vTurningBobCenter;                                		// 0x03EC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    vTurningBobMinRotation;                           		// 0x03F8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    vTurningBobMaxRotation;                           		// 0x0404 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeAngle;                                      		// 0x0410 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeHitTime;                                    		// 0x0414 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeHitAltTime;                                 		// 0x0418 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vMeleeRayExtends;                                 		// 0x041C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeMaxRange;                                   		// 0x0428 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMeleeMinRange;                                   		// 0x042C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRangeExponent;                                   		// 0x0430 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rRangeDmg;                                        		// 0x0434 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              FireRate;                                         		// 0x0440 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AltFireRate;                                      		// 0x0444 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      DamageType;                                       		// 0x0448 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSingleShotReinitPct;                             		// 0x044C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MomentumTransfer;                                 		// 0x0450 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iBulletsPerShot;                                  		// 0x0454 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SemiModeShotCount;                                		// 0x0458 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTFireEffectsPattern >              FirePatterns;                                     		// 0x045C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FTFireEffectsInfo >                 FireEffectsInfoArray;                             		// 0x0468 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fSpawnProjectileTime;                             		// 0x0474 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpawnProjectileTimeAlt;                          		// 0x0478 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fProjThrowStrength;                               		// 0x047C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fProjThrowStrengthAlt;                            		// 0x0480 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vProjSpawnOffset;                                 		// 0x0484 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vProjSpawnOffsetAlt;                              		// 0x0490 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class APBProjectile*                               ProjectileArchetype;                              		// 0x049C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       GrenadeThrowStart;                                		// 0x04A0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       GrenadeThrowHigh;                                 		// 0x04A8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       GrenadeThrowLow;                                  		// 0x04B0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fGrenadeThrowStartTime;                           		// 0x04B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fStrengthForHighThrow;                            		// 0x04BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxPauseTime;                                    		// 0x04C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fIncreaseSpeed;                                   		// 0x04C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDecreaseSpeed;                                   		// 0x04C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNormalThrowPerc;                                 		// 0x04CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinThrowVelocity;                                		// 0x04D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxThrowVelocity;                                		// 0x04D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fIdleBreakTimeout;                                		// 0x04D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FIdleBreak >                        rIdleBreaks;                                      		// 0x04DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UAnimSet*                                    Anim3PMale;                                       		// 0x04E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    Anim3PFemale;                                     		// 0x04EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    Anim3PBaseMale;                                   		// 0x04F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    Anim3PBaseFemale;                                 		// 0x04F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimTree*                                   AnimWeaponTreeTemplate3P;                         		// 0x04F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimWeapon3P;                                     		// 0x04FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimWeapon3PFemale;                               		// 0x0500 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireToIdleTime;                                  		// 0x0504 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimHands1P;                                      		// 0x0508 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimWeapon1P;                                     		// 0x050C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       IdlePoseAnimName;                                 		// 0x0510 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EquipAnim3P;                                      		// 0x0518 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       PutDownAnim3P;                                    		// 0x0520 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ActiveLoopingAnimation;                           		// 0x0528 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       InteractionAnimation;                             		// 0x0530 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LastBulletFireAnim1P;                             		// 0x0538 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EquipAnim1P;                                      		// 0x0540 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       PutDownAnim1P;                                    		// 0x0548 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       InteractionSuccessfulAnim;                        		// 0x0550 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AimingFire1P;                                     		// 0x0558 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AimOffsetProfile;                                 		// 0x0560 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponMenuOffsetProfile;                          		// 0x0568 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairShakeAmount;                            		// 0x0570 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LowOnBulletsThreshold;                            		// 0x0574 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CriticalBulletThreshhold;                         		// 0x0578 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MagazineAmmoSize;                                 		// 0x057C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                StartingTotalAmmo;                                		// 0x0580 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMesh*                                 MagazineMesh;                                     		// 0x0584 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MagazineAttachBone;                               		// 0x0588 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               WeaponMesh;                                       		// 0x0590 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ForcedLOD1P;                                      		// 0x0594 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ForcedLOD3P;                                      		// 0x0598 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     InteractionBoundsScale;                           		// 0x059C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     InteractionBoundsOrigin;                          		// 0x05A8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxImpactEffectDistance;                          		// 0x05B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFireEffectDistance;                            		// 0x05B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BulletWhizSoundDistance;                          		// 0x05BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AttachHolsterSocketName3P;                        		// 0x05C0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              WeaponScale3P;                                    		// 0x05C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WeaponScaleFrontEnd3P;                            		// 0x05CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             MuzzleFlashPSCTemplate1P;                         		// 0x05D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             MuzzleFlashPSCTemplate3P;                         		// 0x05D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ShellEjectPSCTemplate1P;                          		// 0x05D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ShellEjectPSCTemplate3P;                          		// 0x05DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MuzzleFlashDurationNonAutoTrigger;                		// 0x05E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fShellEjectDuration;                              		// 0x05E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fShellEjectDelayTime;                             		// 0x05E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLightRadius;                                     		// 0x05EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MuzzleFlashLightBrightnessMin;                    		// 0x05F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MuzzleFlashLightBrightnessMax;                    		// 0x05F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EquipTime;                                        		// 0x05F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InteractionSuccessfulTime;                        		// 0x05FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PutDownTime;                                      		// 0x0600 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              equipAttachPhase;                                 		// 0x0604 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              putDownDetachPhase;                               		// 0x0608 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimInTime;                                       		// 0x060C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAimOutTime;                                      		// 0x0610 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRecoilDef                                  Recoil_Hand;                                      		// 0x0614 (0x0070) [0x0000000000000001]              ( CPF_Edit )
	struct FRecoilDef                                  Recoil_Spine;                                     		// 0x0684 (0x0070) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponReloadStart;                                		// 0x06F4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponReloadMiddle;                               		// 0x06FC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponReloadEnd;                                  		// 0x0704 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponReloadSuccess;                              		// 0x070C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WeaponReloadFailure;                              		// 0x0714 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fReloadPerfectLength;                             		// 0x071C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadStartLength;                           		// 0x0720 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadMiddleLength;                          		// 0x0724 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadEndLength;                             		// 0x0728 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadSuccessLength;                         		// 0x072C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadFailureLength;                         		// 0x0730 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadMiddleSuccessModifier;                 		// 0x0734 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAnimReloadMiddleFailureModifier;                 		// 0x0738 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAmmoRefreshNormalPct;                            		// 0x073C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAmmoRefreshSuccessPct;                           		// 0x0740 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAmmoRefreshFailPct;                              		// 0x0744 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireLoop1PCue;                                    		// 0x0748 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireEnd1PCue;                                     		// 0x074C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireLoop3PCue;                                    		// 0x0750 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireEnd3PCue;                                     		// 0x0754 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireLoopSilenced1PCue;                            		// 0x0758 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireLoopSilenced3PCue;                            		// 0x075C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireEndSilenced1PCue;                             		// 0x0760 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireEndSilenced3PCue;                             		// 0x0764 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLoopFadeOutTimeOnStopFire;                       		// 0x0768 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   AimInSound1P;                                     		// 0x076C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   AimOutSound1P;                                    		// 0x0770 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponDrySnd1P;                                   		// 0x0774 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponReloadSuccess1P;                            		// 0x0778 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponReloadFailure1P;                            		// 0x077C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndBulletWhizCue;                                 		// 0x0780 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RangeInfo;                                        		// 0x0784 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AccuracyInfo;                                     		// 0x0788 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageInfo;                                       		// 0x078C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpeedInfo;                                        		// 0x0790 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RateOfFireInfo;                                   		// 0x0794 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CustomAnimation1;                                 		// 0x0798 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomAnimation1Length;                           		// 0x07A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CustomAnimation2;                                 		// 0x07A4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomAnimation2Length;                           		// 0x07AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CustomAnimation3;                                 		// 0x07B0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomAnimation3Length;                           		// 0x07B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CustomAnimation4;                                 		// 0x07BC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomAnimation4Length;                           		// 0x07C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBNWebViewObject
// 0x0080 (0x00BC - 0x003C)
class UPBNWebViewObject : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    WebViewPtr;                                       		// 0x0040 (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	unsigned long                                      m_bLoadingPage : 1;                               		// 0x0044 (0x0004) [0x0000000000001002] [0x00000001] ( CPF_Const | CPF_Native )
	unsigned long                                      m_bSimulatingDropDown : 1;                        		// 0x0044 (0x0004) [0x0000000000021002] [0x00000002] ( CPF_Const | CPF_Native | CPF_EditConst )
	class UTexture2DDynamic*                           pTexture;                                         		// 0x0048 (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	int                                                WebViewWidth;                                     		// 0x004C (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	int                                                WebViewHeight;                                    		// 0x0050 (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	int                                                m_lastMouseX;                                     		// 0x0054 (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	int                                                m_lastMouseY;                                     		// 0x0058 (0x0004) [0x0000000000021002]              ( CPF_Const | CPF_Native | CPF_EditConst )
	struct FScriptDelegate                             __OnDynamicTextureChanged__Delegate;              		// 0x005C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnURLChanged__Delegate;                         		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnTitleChanged__Delegate;                       		// 0x0074 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnDocumentReady__Delegate;                      		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnHoverLink__Delegate;                          		// 0x008C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLoadingBegun__Delegate;                       		// 0x0098 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLoadingFinished__Delegate;                    		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnPopupOpen__Delegate;                          		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBPawn
// 0x02D4 (0x08D8 - 0x0604)
class APBPawn : public APBBasePawn
{
public:
	TArray< struct FDamageIndicator >                  DamageList;                                       		// 0x0604 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FAttentionIndicator >               AttentionList;                                    		// 0x0610 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UMaterialInstanceConstant*                   GMaterialDamageInd;                               		// 0x061C (0x0004) [0x0000000000000000]              
	float                                              DMI_Duration;                                     		// 0x0620 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   DMI_Material;                                     		// 0x0624 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DMI_Height;                                       		// 0x0628 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DMI_Width;                                        		// 0x062C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DMI_HeightPerHitPoint;                            		// 0x0630 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DMI_WidthPerHitPoint;                             		// 0x0634 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DMI_Radius;                                       		// 0x0638 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_Duration;                                     		// 0x063C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_FadeoutDuration;                              		// 0x0640 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_HealthBlinkThreshhold;                        		// 0x0644 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_MinAlphaAtZeroDmg;                            		// 0x0648 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_MinDamageForFullAlpha;                        		// 0x064C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_BlinkSpeedFactor;                             		// 0x0650 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_BlinkMinAlpha;                                		// 0x0654 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ATI_BlinkMaxAlpha;                                		// 0x0658 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAttentionIndicator : 1;                          		// 0x065C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bShakeWeaponOnDamage : 1;                         		// 0x065C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFlashed : 1;                                     		// 0x065C (0x0004) [0x0000000000002020] [0x00000004] ( CPF_Net | CPF_Transient )
	unsigned long                                      bBerserkActive : 1;                               		// 0x065C (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bPauseOnDamage : 1;                               		// 0x065C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bJustLanded : 1;                                  		// 0x065C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bLandRecovery : 1;                                		// 0x065C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bShadowLOD : 1;                                   		// 0x065C (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bFixedView : 1;                                   		// 0x065C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bComponentDebug : 1;                              		// 0x065C (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bWantsToSprint : 1;                               		// 0x065C (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bKeepSprintFlag : 1;                              		// 0x065C (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bWasSprintingBeforeJump : 1;                      		// 0x065C (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bIsSprinting : 1;                                 		// 0x065C (0x0004) [0x0000000000002020] [0x00002000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsInvulnerable : 1;                              		// 0x065C (0x0004) [0x0000000000002020] [0x00004000] ( CPF_Net | CPF_Transient )
	unsigned long                                      JumpingFromLadder : 1;                            		// 0x065C (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      bEnableFootPlacement : 1;                         		// 0x065C (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bStealthAmmo : 1;                                 		// 0x065C (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bIsDeaf_ : 1;                                     		// 0x065C (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      bIsTargeting : 1;                                 		// 0x065C (0x0004) [0x0000000000002020] [0x00080000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bCustomUpStandPlaying : 1;                        		// 0x065C (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      bWeaponActivatePlaying : 1;                       		// 0x065C (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	unsigned long                                      bCanDoTurnInPlaceAnim : 1;                        		// 0x065C (0x0004) [0x0000000000000001] [0x00400000] ( CPF_Edit )
	unsigned long                                      bIsFiring : 1;                                    		// 0x065C (0x0004) [0x0000000000002020] [0x00800000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bReloading : 1;                                   		// 0x065C (0x0004) [0x0000000000002020] [0x01000000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bReloadingActive : 1;                             		// 0x065C (0x0004) [0x0000000000002000] [0x02000000] ( CPF_Transient )
	unsigned long                                      bPlayEndReload : 1;                               		// 0x065C (0x0004) [0x0000000000002020] [0x04000000] ( CPF_Net | CPF_Transient )
	float                                              LastFallHeight;                                   		// 0x0660 (0x0004) [0x0000000000000000]              
	float                                              MinHeight;                                        		// 0x0664 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxHeight;                                        		// 0x0668 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FallDamageExpModifier;                            		// 0x066C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   PickupSound;                                      		// 0x0670 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFootsteps1PAmplitudeModifier;                    		// 0x0674 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAcceptInputChangesTime;                          		// 0x0678 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBeginStrifeValue;                                		// 0x067C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBeginForwardValue;                               		// 0x0680 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fWeaponShakePower;                                		// 0x0684 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FViewShakeInfo                              BaseDamageShake;                                  		// 0x0688 (0x0040) [0x0000000000000001]              ( CPF_Edit )
	struct FViewShakeInfo                              CurrentViewShake;                                 		// 0x06C8 (0x0040) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      CurrentViewShakePhase;                            		// 0x0708 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      PawnShadowMode;                                   		// 0x0709 (0x0001) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	unsigned char                                      replSprintStamina;                                		// 0x070A (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      iSprintMinStaminaRequired;                        		// 0x070B (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      minimapRevealRefresh;                             		// 0x070C (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      CurrentTauntIndex;                                		// 0x070D (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class UMaterialInterface*                          CharInGame_Default;                               		// 0x0710 (0x0004) [0x0000000000000000]              
	float                                              NoGlowDistance;                                   		// 0x0714 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              FullGlowDistance;                                 		// 0x0718 (0x0004) [0x0000000000004000]              ( CPF_Config )
	class UAudioComponent*                             PlayerGlidingAudioComponent;                      		// 0x071C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    PlayerGlidingParticleComponent;                   		// 0x0720 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    InvulnerabilityPSC;                               		// 0x0724 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              fFlashBangDuration;                               		// 0x0728 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              Anim3PWeaponActivateBlendOutTime;                 		// 0x072C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Anim3PWeaponDeactivateBlendInTime;                		// 0x0730 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              lastHitTime;                                      		// 0x0734 (0x0004) [0x0000000000000000]              
	float                                              MaxShadowDistSq;                                  		// 0x0738 (0x0004) [0x0000000000000000]              
	float                                              ForceShadowDistSq;                                		// 0x073C (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  DMG_IndTex;                                       		// 0x0740 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              nextPlayTime;                                     		// 0x0744 (0x0004) [0x0000000000000000]              
	struct FVector                                     debugHitLocation;                                 		// 0x0748 (0x000C) [0x0000000000000000]              
	float                                              fSpectatingCameraDistance;                        		// 0x0754 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpectatingCameraHeightOffset;                    		// 0x0758 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FixedViewLoc;                                     		// 0x075C (0x000C) [0x0000000000000000]              
	struct FRotator                                    FixedViewRot;                                     		// 0x0768 (0x000C) [0x0000000000000000]              
	float                                              CameraScale;                                      		// 0x0774 (0x0004) [0x0000000000000000]              
	float                                              CurrentCameraScale;                               		// 0x0778 (0x0004) [0x0000000000000000]              
	float                                              CameraScaleMin;                                   		// 0x077C (0x0004) [0x0000000000000000]              
	float                                              CameraScaleMax;                                   		// 0x0780 (0x0004) [0x0000000000000000]              
	int                                                MaxLeanRoll;                                      		// 0x0784 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNormalStrafeAccelModifier;                       		// 0x0788 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iSprintRecheckCounter;                            		// 0x078C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fStaminaStartRegenTime;                           		// 0x0790 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSprintStamina;                                   		// 0x0794 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSprintRegenWaitTime;                             		// 0x0798 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintRegenJumpWaitTime;                         		// 0x079C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintStrafeAccelModifier;                       		// 0x07A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintStaminaCost;                               		// 0x07A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintStaminaCostWhenJumping;                    		// 0x07A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSprintStaminaRecovery;                           		// 0x07AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              m_trans;                                          		// 0x07B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     m_worldBackup;                                    		// 0x07B4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class UClass*                                      SoundGroupClass;                                  		// 0x07C0 (0x0004) [0x0000000000000000]              
	struct FName                                       CurrentAimOffsetProfileName;                      		// 0x07C4 (0x0008) [0x0000000000000000]              
	class USkeletalMesh*                               CharacterMesh1P;                                  		// 0x07CC (0x0004) [0x0000000000000000]              
	class USkeletalMesh*                               WeaponMesh3P;                                     		// 0x07D0 (0x0004) [0x0000000000000000]              
	float                                              landingSpeedFactor;                               		// 0x07D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimationCycleLadderHeight;                       		// 0x07D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             PawnAmbientSound;                                 		// 0x07DC (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   AmbientSoundCue;                                  		// 0x07E0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              TeamBeaconMaxDist;                                		// 0x07E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TeamBeaconPlayerInfoMaxDist;                      		// 0x07E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    SpeakingBeaconTexture;                            		// 0x07EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastPainSound;                                    		// 0x07F0 (0x0004) [0x0000000000000000]              
	float                                              RagdollLifespan;                                  		// 0x07F4 (0x0004) [0x0000000000000000]              
	int                                                LookYaw;                                          		// 0x07F8 (0x0004) [0x0000000000000000]              
	struct FName                                       LeftFootControlName;                              		// 0x07FC (0x0008) [0x0000000000000000]              
	struct FName                                       RightFootControlName;                             		// 0x0804 (0x0008) [0x0000000000000000]              
	float                                              BaseTranslationOffset;                            		// 0x080C (0x0004) [0x0000000000000000]              
	float                                              CrouchTranslationOffset;                          		// 0x0810 (0x0004) [0x0000000000000000]              
	float                                              OldLocationZ;                                     		// 0x0814 (0x0004) [0x0000000000000000]              
	float                                              ZSmoothingRate;                                   		// 0x0818 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              MaxFootPlacementDistSquared;                      		// 0x081C (0x0004) [0x0000000000000000]              
	class USkelControlFootPlacement*                   LeftLegControl;                                   		// 0x0820 (0x0004) [0x0000000000000000]              
	class USkelControlFootPlacement*                   RightLegControl;                                  		// 0x0824 (0x0004) [0x0000000000000000]              
	float                                              interact_distance;                                		// 0x0828 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   deafSound;                                        		// 0x082C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDeafStart_;                                      		// 0x0830 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fDeafFull_;                                       		// 0x0834 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fDeafOut_;                                        		// 0x0838 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fDeafFactor;                                      		// 0x083C (0x0004) [0x0000000000000000]              
	TArray< class UPBSkelControl_Recoil* >             RecoilNodes;                                      		// 0x0840 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       PawnBodyNodeName;                                 		// 0x084C (0x0008) [0x0000000000000000]              
	class UAnimNodeSlot*                               PawnBodyNode;                                     		// 0x0854 (0x0004) [0x0000000000000000]              
	TArray< class UAnimNodeAimOffset* >                AimOffsetNodes;                                   		// 0x0858 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UAnimNodeSlot* >                     BodyStanceNodes;                                  		// 0x0864 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UPBAnimNodeSlot* >                   CustomBodyAnimNodes;                              		// 0x0870 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                RootYaw;                                          		// 0x087C (0x0004) [0x0000000000000000]              
	float                                              RootYawSpeed;                                     		// 0x0880 (0x0004) [0x0000000000000000]              
	int                                                MaxYawAim;                                        		// 0x0884 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   CurrentSkelAim;                                   		// 0x0888 (0x0008) [0x0000000000000000]              
	class USkelControlSingleBone*                      RootRotControl;                                   		// 0x0890 (0x0004) [0x0000000000000000]              
	struct FCustomWeaponData                           WeaponData;                                       		// 0x0894 (0x0010) [0x0000000000000020]              ( CPF_Net )
	struct FName                                       TauntingViewMode;                                 		// 0x08A4 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                TurnInPlaceYawOffest;                             		// 0x08AC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x08B0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class APlayerController*                           SpectatedByLocalPlayer;                           		// 0x08B4 (0x0004) [0x0000000000000000]              
	class USkeletalMeshComponent*                      CurrentCustomWeapon;                              		// 0x08B8 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< struct FPBDamagePerPlayer >                DamageTakenPerPlayer;                             		// 0x08BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                MiniGameLastResult;                               		// 0x08C8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class AActor*                                      pCurrentAimedActor;                               		// 0x08CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentScopeAlpha;                                		// 0x08D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBKWeaponGlobals*                           pGlobals;                                         		// 0x08D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBCharacter
// 0x0300 (0x0BD8 - 0x08D8)
class APBCharacter : public APBPawn
{
public:
	class USkeletalMesh*                               FirstPersonMesh;                                  		// 0x08D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHideInSmokeTime;                                 		// 0x08DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                GrenadeAmmo;                                      		// 0x08E0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bWasPlayerPawn : 1;                               		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bUsedSpecialWeapon : 1;                           		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bSetUpdateSkelWhenNotRendered : 1;                		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bLaserPointerEnabled : 1;                         		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bIsInteracting : 1;                               		// 0x08E4 (0x0004) [0x0000000000002020] [0x00000010] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsBerserk : 1;                                   		// 0x08E4 (0x0004) [0x0000000000002020] [0x00000020] ( CPF_Net | CPF_Transient )
	unsigned long                                      bHandIKEnabled : 1;                               		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      PlayHolsterWeaponAnimation : 1;                   		// 0x08E4 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      PlayUnholsterWeaponAnimation : 1;                 		// 0x08E4 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      IsTurningOnLadder : 1;                            		// 0x08E4 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      IsHeadCrabbed : 1;                                		// 0x08E4 (0x0004) [0x0000000000002020] [0x00000400] ( CPF_Net | CPF_Transient )
	unsigned long                                      IsUsingSkill : 1;                                 		// 0x08E4 (0x0004) [0x0000000000002020] [0x00000800] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsHealingCharacter : 1;                          		// 0x08E4 (0x0004) [0x0000000000000020] [0x00001000] ( CPF_Net )
	unsigned long                                      bIsThrowingPaperPlane : 1;                        		// 0x08E4 (0x0004) [0x0000000000000020] [0x00002000] ( CPF_Net )
	unsigned long                                      bIsThrowingHeadCrab : 1;                          		// 0x08E4 (0x0004) [0x0000000000000020] [0x00004000] ( CPF_Net )
	float                                              fLastTimeInSmoke;                                 		// 0x08E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vSmoothedLaserPos;                                		// 0x08EC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vSmoothedLaserDir;                                		// 0x08F8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLaserPosSmoothSpeed;                             		// 0x0904 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             pTauntSoundAC;                                    		// 0x0908 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< struct FTHealOverTime >                    rHOTs;                                            		// 0x090C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              FiringCountInfoLastUpdateTime;                    		// 0x0918 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              FiringCountInfoClearTimer;                        		// 0x091C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      FiringCountInfo;                                  		// 0x0920 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      repShotCount;                                     		// 0x0921 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      iCurShotCount;                                    		// 0x0922 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iWorldShotIndex;                                  		// 0x0923 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iPawnShotIndex;                                   		// 0x0924 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      BerserkCharging;                                  		// 0x0925 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FTWorldShotInfo                             allWorldShots[ 0x6 ];                             		// 0x0928 (0x0060) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FTPawnShotInfo                              allPawnShots[ 0x6 ];                              		// 0x0988 (0x0048) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              allWorldShotsUpdateTime[ 0x6 ];                   		// 0x09D0 (0x0018) [0x0000000000002000]              ( CPF_Transient )
	float                                              allPawnShotsUpdateTime[ 0x6 ];                    		// 0x09E8 (0x0018) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBoneInfoLastSendTime;                            		// 0x0A00 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FDebugBoneInfo >                    rDebugBoneInfo;                                   		// 0x0A04 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              HandsIKBlendTime;                                 		// 0x0A10 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimNodeSynch*                              SynchNode;                                        		// 0x0A14 (0x0004) [0x0000000000000000]              
	class UPBSkelControl_Recoil*                       GunRecoilNode;                                    		// 0x0A18 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       WeaponInHandBoneName;                             		// 0x0A1C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FTWeaponPresetCodes                         AllWeaponInfoCodes;                               		// 0x0A24 (0x0084) [0x0000000000002021]              ( CPF_Edit | CPF_Net | CPF_Transient )
	struct FSWeaponCode                                PendingWeaponInfoCode;                            		// 0x0AA8 (0x000C) [0x0000000000002021]              ( CPF_Edit | CPF_Net | CPF_Transient )
	struct FSWeaponCode                                CurrentWeaponInfoCode;                            		// 0x0AB4 (0x000C) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	class APBKWeaponInfo*                              pCurrentWeaponInfo;                               		// 0x0AC0 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	class APBKWeaponInfo*                              pPendingWeaponInfo;                               		// 0x0AC4 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	TArray< class APBKWeaponInfo* >                    rAllWeaponInfo;                                   		// 0x0AC8 (0x000C) [0x0000000000402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink )
	struct FName                                       Recoil_SpineControlName;                          		// 0x0AD4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       Recoil_GunRecoilName;                             		// 0x0ADC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       Recoil_SecondaryGunRecoilName;                    		// 0x0AE4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    pBerserkPSLeftHand;                               		// 0x0AEC (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pBerserkPSRightHand;                              		// 0x0AF0 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pWeaponFireLoop;                                  		// 0x0AF4 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pWeaponFireTail;                                  		// 0x0AF8 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pBerserkLoopComp;                                 		// 0x0AFC (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pBerserkChargeLoopComp;                           		// 0x0B00 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   BerserkHitWallSound1P;                            		// 0x0B04 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkHitWallSound3P;                            		// 0x0B08 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             BerserkHitWallSound;                              		// 0x0B0C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   BerserkInjectPain1PSoundCue;                      		// 0x0B10 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkInjectPain3PSoundCue;                      		// 0x0B14 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkLoop1PSoundCue;                            		// 0x0B18 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkLoop3PSoundCue;                            		// 0x0B1C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkChargeLoop1PSoundCue;                      		// 0x0B20 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BerserkChargeLoop3PSoundCue;                      		// 0x0B24 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBerserkLoopFadeIn;                               		// 0x0B28 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBerserkLoopFadeOut;                              		// 0x0B2C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBerserkChargeLoopFadeIn;                         		// 0x0B30 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBerserkChargeLoopFadeOut;                        		// 0x0B34 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BerserkParticleSystemLeftHandName;                		// 0x0B38 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BerserkParticleSystemRightHandName;               		// 0x0B40 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             BerserkHandsPS3P;                                 		// 0x0B48 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             BerserkHandsPS1P;                                 		// 0x0B4C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pGettingHitSoundCue;                              		// 0x0B50 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fGettingHitRetriggerTime;                         		// 0x0B54 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLastGettingHitSoundPlayedTime;                   		// 0x0B58 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPrimitiveComponent*                         LaserDotMesh;                                     		// 0x0B5C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     smoothedViewRotation;                             		// 0x0B60 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     CachedLaserHitPosition;                           		// 0x0B6C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class APBLadderVolume*                             atLadder;                                         		// 0x0B78 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ManualTurnTimerInterval;                          		// 0x0B7C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ManualTurnStepValue;                              		// 0x0B80 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LadderViewAngleClamp;                             		// 0x0B84 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBLadderVolume*                             RotateTowardsLadder;                              		// 0x0B88 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              GlidingViewAngleClamp;                            		// 0x0B8C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlidingSlopeThreshold;                            		// 0x0B90 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlidingHitWallThreshold;                          		// 0x0B94 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             CharacterHitSound;                                		// 0x0B98 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class APBSkill_HeadCrabActor*                      pWhichHeadcrab;                                   		// 0x0B9C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UParticleSystemComponent*                    HealEffectParticleSystem3P;                       		// 0x0BA0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    BerserkChargingPS;                                		// 0x0BA4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             HeadCrabEffectParticleSystem3PTemplate;           		// 0x0BA8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    HeadCrabEffectParticleSystem3P;                   		// 0x0BAC (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	float                                              PlaneThrowHideMesh3PDelay;                        		// 0x0BB0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeadCrabThrowHideMesh3PDelay;                     		// 0x0BB4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     CageDiffuseColorFriendly;                         		// 0x0BB8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     CageDiffuseColorEnemy;                            		// 0x0BC4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               LowDetailCharacter;                               		// 0x0BD0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        pMagazineComponent;                               		// 0x0BD4 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBPhysicalMaterialProperty
// 0x0030 (0x006C - 0x003C)
class UPBPhysicalMaterialProperty : public UPhysicalMaterialPropertyBase
{
public:
	struct FName                                       MaterialType;                                     		// 0x003C (0x0008) [0x0000000000000000]              
	unsigned char                                      HitZoneType;                                      		// 0x0044 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UPBImpactData* >                     impact;                                           		// 0x0048 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UPBImpactData* >                     RuntimeImpactDataDA;                              		// 0x0054 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class UPhysicalMaterial*                           PhysMaterial;                                     		// 0x0060 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bRuntimeImpactDataInitialized : 1;                		// 0x0064 (0x0004) [0x0000000000003002] [0x00000001] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bInsideRuntimeImpactDataInitialization : 1;       		// 0x0064 (0x0004) [0x0000000000003002] [0x00000002] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bEditorDontWarnAgain : 1;                         		// 0x0064 (0x0004) [0x0000000000001000] [0x00000004] ( CPF_Native )
	unsigned long                                      bMirrorCollisionEvent : 1;                        		// 0x0064 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              DampSpeedPercent;                                 		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBPlayerController
// 0x0248 (0x08B4 - 0x066C)
class APBPlayerController : public APBBasePlayerController
{
public:
	unsigned long                                      bMute : 1;                                        		// 0x066C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bQuittingToMainMenu : 1;                          		// 0x066C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bShowEmitters : 1;                                		// 0x066C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bInvalidateCameraCache : 1;                       		// 0x066C (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bRetrievedWeaponPresets : 1;                      		// 0x066C (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bRetrievedSkills : 1;                             		// 0x066C (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bRetrievedTaunts : 1;                             		// 0x066C (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      skipScreenshot : 1;                               		// 0x066C (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      _surveyPanelOpen : 1;                             		// 0x066C (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      _ignoreLastState : 1;                             		// 0x066C (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bLandingShake : 1;                                		// 0x066C (0x0004) [0x0000000000044000] [0x00000400] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bRetrieveSettingsFromProfileOnNextTick : 1;       		// 0x066C (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      m_bComCenterEnabled : 1;                          		// 0x066C (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bProcessItemInteraction : 1;                      		// 0x066C (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      ActorInViewThisTickIsDirty : 1;                   		// 0x066C (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bChangedWeaponPreset : 1;                         		// 0x066C (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      bAlreadySavedProgression : 1;                     		// 0x066C (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bGlidingBackwards : 1;                            		// 0x066C (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bCanSuicide : 1;                                  		// 0x066C (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      bInitialProcessingComplete : 1;                   		// 0x066C (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bFriendOrFoe : 1;                                 		// 0x066C (0x0004) [0x0000000000004000] [0x00100000] ( CPF_Config )
	unsigned long                                      bDisplayEnemyHealth : 1;                          		// 0x066C (0x0004) [0x0000000000004000] [0x00200000] ( CPF_Config )
	unsigned long                                      bOnlyShowEnemyInsideCrosshair : 1;                		// 0x066C (0x0004) [0x0000000000004000] [0x00400000] ( CPF_Config )
	unsigned long                                      bDisplayTeamatesThroughWalls : 1;                 		// 0x066C (0x0004) [0x0000000000004000] [0x00800000] ( CPF_Config )
	unsigned long                                      bPlayPromotionMusic : 1;                          		// 0x066C (0x0004) [0x0000000000044000] [0x01000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bEnableProgressionScreen : 1;                     		// 0x066C (0x0004) [0x0000000000004000] [0x02000000] ( CPF_Config )
	unsigned long                                      bWeaponPresetSceneOpen : 1;                       		// 0x066C (0x0004) [0x0000000000002000] [0x04000000] ( CPF_Transient )
	unsigned long                                      bEMPEffectPlaying : 1;                            		// 0x066C (0x0004) [0x0000000000002000] [0x08000000] ( CPF_Transient )
	unsigned long                                      bDebugFootstepOcclusion : 1;                      		// 0x066C (0x0004) [0x0000000000002000] [0x10000000] ( CPF_Transient )
	unsigned long                                      DisplayPlayerNames : 1;                           		// 0x066C (0x0004) [0x0000000000002000] [0x20000000] ( CPF_Transient )
	unsigned long                                      bPickingUpWeapon : 1;                             		// 0x066C (0x0004) [0x0000000000000020] [0x40000000] ( CPF_Net )
	unsigned long                                      bAllowRotationClamping : 1;                       		// 0x066C (0x0004) [0x0000000000000000] [0x80000000] 
	unsigned long                                      bMinimapCameraActive : 1;                         		// 0x0670 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bOnTeamtalk : 1;                                  		// 0x0670 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bBerserkHitWall : 1;                              		// 0x0670 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bAkimboCheckingPawnFalling : 1;                   		// 0x0670 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bBerserkEffectEnabled : 1;                        		// 0x0670 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bBerserkEffectChargeEnabled : 1;                  		// 0x0670 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bNoTextToSpeechVoiceMessages : 1;                 		// 0x0670 (0x0004) [0x0000000000044000] [0x00000040] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bTextToSpeechTeamMessagesOnly : 1;                		// 0x0670 (0x0004) [0x0000000000044000] [0x00000080] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bDynamicNetSpeed : 1;                             		// 0x0670 (0x0004) [0x0000000000044000] [0x00000100] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bIsChangingWeapon : 1;                            		// 0x0670 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bCanChangeTeam : 1;                               		// 0x0670 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bAutoMoving : 1;                                  		// 0x0670 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bAutoStrafing : 1;                                		// 0x0670 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bAutoStrafingLeft : 1;                            		// 0x0670 (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bAutoMoveForward : 1;                             		// 0x0670 (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bHitIndicatorVisible : 1;                         		// 0x0670 (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      bLeftServer : 1;                                  		// 0x0670 (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bIgnoreErrors : 1;                                		// 0x0670 (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bShouldAwardStyleBonus : 1;                       		// 0x0670 (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	class UPBUIDataStore_OnlineStats*                  OnlinePlayerStatistics;                           		// 0x0674 (0x0004) [0x0000000000000000]              
	int                                                nSpawnedTimes;                                    		// 0x0678 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                nLastSpectatorCameraIndex;                        		// 0x067C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< float >                                    rSentRadioMessages;                               		// 0x0680 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iPendingRadioMessage;                             		// 0x068C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fixedViewSpeedFactor;                             		// 0x0690 (0x0004) [0x0000000000000000]              
	class UPBCustomChar_MenuData*                      TransientCustomCharacterData;                     		// 0x0694 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBAnnouncer*                                Announcer;                                        		// 0x0698 (0x0004) [0x0000000000000000]              
	float                                              LastKickWarningTime;                              		// 0x069C (0x0004) [0x0000000000000000]              
	class USceneCapture2DComponent*                    SceneCapture;                                     		// 0x06A0 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	unsigned char                                      iSelectedTaunt;                                   		// 0x06A4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iOverrideSelectedTaunt;                           		// 0x06A5 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iHitIndicator;                                    		// 0x06A6 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                _surveyId;                                        		// 0x06A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBCameraAction*                             DeathCameraArchetype;                             		// 0x06AC (0x0004) [0x0000000000000000]              
	class USoundCue*                                   pSoundDeathCameraWhoosh;                          		// 0x06B0 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   pSoundDeathCameraBang;                            		// 0x06B4 (0x0004) [0x0000000000000000]              
	int                                                interact_distance;                                		// 0x06B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                iCurrentInteractionProgress;                      		// 0x06BC (0x0004) [0x0000000000000000]              
	class UIPBInteractible*                            currentHoldUseInteractible;                       		// 0x06C0 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x06C4 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UIPBInteractible*                            CurrentInteractible;                              		// 0x06C8 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData01[ 0x4 ];                             		// 0x06CC (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UIPBInteractible*                            PreviousInteractibleInView;                       		// 0x06D0 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData02[ 0x4 ];                             		// 0x06D4 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UIPBInteractible*                            CurrentInteractionVolume;                         		// 0x06D8 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      UnknownData03[ 0x4 ];                             		// 0x06DC (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	float                                              fCameraShakeRemainTime;                           		// 0x06E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCameraShakeInitialTime;                          		// 0x06E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCameraShakeMaxIntensity;                         		// 0x06E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      ActorInViewThisTick;                              		// 0x06EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              OldMessageTime;                                   		// 0x06F0 (0x0004) [0x0000000000000000]              
	int                                                iCurrentWeaponPreset;                             		// 0x06F4 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	int                                                m_nNextWeaponPreset;                              		// 0x06F8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iOldWeaponPreset;                                 		// 0x06FC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class AActor*                                      OldViewTarget;                                    		// 0x0700 (0x0004) [0x0000000000000000]              
	struct FRotator                                    VTP_OldCamRot;                                    		// 0x0704 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    VTP_OldRawRot;                                    		// 0x0710 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              VTP_OldRawRotAge;                                 		// 0x071C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    VTP_ExtrapolatedRawRot;                           		// 0x0720 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    VTP_RotVelocity;                                  		// 0x072C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    GlidingRotation;                                  		// 0x0738 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     LastGlidePosition;                                		// 0x0744 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    RealGlidingDirection;                             		// 0x0750 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastGlidePositionUpdate;                         		// 0x075C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fGlidingStartTime;                                		// 0x0760 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SLOW_WEAPON_CONDITION;                            		// 0x0764 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FRotator                                    ChargeDirection;                                  		// 0x0768 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     LastDeathLocation;                                		// 0x0774 (0x000C) [0x0000000000000000]              
	struct FString                                     ProgressMessageSceneClassName;                    		// 0x0780 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class USoundCue*                                   pSoundLostTheLead;                                		// 0x078C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   pSoundTakenTheLead;                               		// 0x0790 (0x0004) [0x0000000000000000]              
	int                                                iCurrentWinningTeam;                              		// 0x0794 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   pSoundUnavaliableAction;                          		// 0x0798 (0x0004) [0x0000000000000000]              
	int                                                iLengthOfCharNamesOnHUD;                          		// 0x079C (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< class UPBWeaponPreset* >                   rWeaponPresets;                                   		// 0x07A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                iPendingWeaponPresetId;                           		// 0x07AC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< struct FTWeaponCondition >                 rWeaponConditions;                                		// 0x07B0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBAchievementManager*                       m_AchievementManager;                             		// 0x07BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FUniqueNetId >                      InterfaceVoiceMuteList;                           		// 0x07C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     HSReply;                                          		// 0x07CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                HSSendNum;                                        		// 0x07D8 (0x0004) [0x0000000000000000]              
	int                                                HSSent;                                           		// 0x07DC (0x0004) [0x0000000000000000]              
	int                                                HSHandle;                                         		// 0x07E0 (0x0004) [0x0000000000000000]              
	float                                              fCampingCheckInterval;                            		// 0x07E4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iCampingReferenceCount;                           		// 0x07E8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fCampWarningDistance;                             		// 0x07EC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fLastFpsUpdate;                                   		// 0x07F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastCampingCheckTime;                            		// 0x07F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FVector >                           rCampingReferencePoints;                          		// 0x07F8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              fTauntAllowedMovementEndTime;                     		// 0x0804 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBCameraAction*                             TauntCameraArchetype;                             		// 0x0808 (0x0004) [0x0000000000000000]              
	float                                              aForwardCachedValue;                              		// 0x080C (0x0004) [0x0000000000000000]              
	float                                              aStrafeCachedValue;                               		// 0x0810 (0x0004) [0x0000000000000000]              
	class APBActorController*                          ControllingActor;                                 		// 0x0814 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialEffect*                             ControllingActorHUDEffect;                        		// 0x0818 (0x0004) [0x0000000000000000]              
	float                                              HUDMaterialFadeInTimeElapsed;                     		// 0x081C (0x0004) [0x0000000000000000]              
	float                                              HUDMaterialFadeInTime;                            		// 0x0820 (0x0004) [0x0000000000000000]              
	struct FName                                       ControllingActorHUDOpacityParamName;              		// 0x0824 (0x0008) [0x0000000000000000]              
	class UAudioComponent*                             pSafetyBuyCrowdAC;                                		// 0x082C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	float                                              bAkimboCheckingPawnFallingDelay;                  		// 0x0830 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBerserkEffectSaturation;                         		// 0x0834 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBerserkEffectBlur;                               		// 0x0838 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBerserkEffectMaxBlur;                            		// 0x083C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBerserkEffectSaturationSpeed;                    		// 0x0840 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fBerserkEffectBlurSpeed;                          		// 0x0844 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       BerserkEffectSaturationParamName;                 		// 0x0848 (0x0008) [0x0000000000000000]              
	struct FName                                       BerserkEffectBlurParamName;                       		// 0x0850 (0x0008) [0x0000000000000000]              
	class APBSpawnPointTDM*                            AssociatedSpawnPoint;                             		// 0x0858 (0x0004) [0x0000000000000000]              
	float                                              fDeathTime;                                       		// 0x085C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxActiveClientKActors;                           		// 0x0860 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                currentActiveClientKActors;                       		// 0x0864 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                DistToActivateClientKActors;                      		// 0x0868 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxActiveClientKActorsPerImpulse;                 		// 0x086C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                currentImpulseActiveClientKActors;                		// 0x0870 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBFlashBangLogic*                           FlashBangArchetype;                               		// 0x0874 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBFlashBangLogic*                           FlashBangLogic;                                   		// 0x0878 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fChangeTeamCheckTime;                             		// 0x087C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   pDenyChangeTeam;                                  		// 0x0880 (0x0004) [0x0000000000000000]              
	float                                              fTimeToAutoMove;                                  		// 0x0884 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLastPlayHitIndicationTime;                       		// 0x0888 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBKWeaponGlobals*                           pGlobals;                                         		// 0x088C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __UseCallback__Delegate;                          		// 0x0890 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __EndUseCallback__Delegate;                       		// 0x089C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnTeamMessageReceived__Delegate;                		// 0x08A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBEntryPlayerController
// 0x0040 (0x08F4 - 0x08B4)
class APBEntryPlayerController : public APBPlayerController
{
public:
	class UPostProcessChain*                           EntryPostProcessChain;                            		// 0x08B4 (0x0004) [0x0000000000000000]              
	TArray< class UPostProcessChain* >                 OldPostProcessChain;                              		// 0x08B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ULocalPlayer*                                OldPlayer;                                        		// 0x08C4 (0x0004) [0x0000000000000000]              
	struct FString                                     strCasTicket;                                     		// 0x08C8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bDoMoreSteps : 1;                                 		// 0x08D4 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FString                                     strSteamId;                                       		// 0x08D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                iSteamPaymentSourceId;                            		// 0x08E4 (0x0004) [0x0000000000000000]              
	struct FString                                     strSteamCurrency;                                 		// 0x08E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBPlayerReplicationInfo
// 0x0558 (0x07F8 - 0x02A0)
class APBPlayerReplicationInfo : public APlayerReplicationInfo
{
public:
	class APBSquadAI*                                  Squad;                                            		// 0x02A0 (0x0004) [0x0000000000000000]              
	float                                              fSpeakDuration;                                   		// 0x02A4 (0x0004) [0x0000000000000000]              
	float                                              fSpeakingTime;                                    		// 0x02A8 (0x0004) [0x0000000000000000]              
	unsigned long                                      IsDead : 1;                                       		// 0x02AC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bBlockRespawn : 1;                                		// 0x02AC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bHasFlag : 1;                                     		// 0x02AC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bPlayerReady : 1;                                 		// 0x02AC (0x0004) [0x0000000000000020] [0x00000008] ( CPF_Net )
	unsigned long                                      bQuittingToMainMenu : 1;                          		// 0x02AC (0x0004) [0x0000000000000020] [0x00000010] ( CPF_Net )
	unsigned long                                      bHasMadeDamageToEnemy : 1;                        		// 0x02AC (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bHasCompletedObjective : 1;                       		// 0x02AC (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bIsSuperMaster : 1;                               		// 0x02AC (0x0004) [0x0000000000002020] [0x00000080] ( CPF_Net | CPF_Transient )
	unsigned long                                      bInReinforcementZone : 1;                         		// 0x02AC (0x0004) [0x0000000000002020] [0x00000100] ( CPF_Net | CPF_Transient )
	unsigned long                                      isGameMaster : 1;                                 		// 0x02AC (0x0004) [0x0000000000000020] [0x00000200] ( CPF_Net )
	unsigned long                                      isUnverifiedGameMaster : 1;                       		// 0x02AC (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bCanSelectPreset : 1;                             		// 0x02AC (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bCharDataProcessingRequested : 1;                 		// 0x02AC (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bPresetsReceived : 1;                             		// 0x02AC (0x0004) [0x0000000000000020] [0x00002000] ( CPF_Net )
	unsigned long                                      bVIP : 1;                                         		// 0x02AC (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bPreventTeamSpectating : 1;                       		// 0x02AC (0x0004) [0x0000000000002020] [0x00008000] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsCamping : 1;                                   		// 0x02AC (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bHeatSubmitted : 1;                               		// 0x02AC (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	float                                              fCombatSlide_Duration;                            		// 0x02B0 (0x0004) [0x0000000000000000]              
	int                                                iCombatSlide_Kills;                               		// 0x02B4 (0x0004) [0x0000000000000000]              
	int                                                iMyVote;                                          		// 0x02B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iStartVoteTimeout;                                		// 0x02BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPartVoteTimeout;                                 		// 0x02C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FParticipationInfo                          Participation;                                    		// 0x02C4 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                iRespawnTimeLeft;                                 		// 0x02D4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FString                                     gameSessionId;                                    		// 0x02D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       guidProfileId;                                    		// 0x02E4 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     strSessionId;                                     		// 0x02F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     strSessionHash;                                   		// 0x0300 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       guidSubscriptionId;                               		// 0x030C (0x0010) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      SubscriptionType;                                 		// 0x031C (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      PEKillCount[ 0x10 ];                              		// 0x031D (0x0010) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      CharacterDataChangeCount;                         		// 0x032D (0x0001) [0x0000000000000000]              
	unsigned char                                      rTaunts[ 0x4 ];                                   		// 0x032E (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FString                                     CharacterName;                                    		// 0x0334 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     GSPlayerName;                                     		// 0x0340 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iCurrentRank;                                     		// 0x034C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iCurrentFans;                                     		// 0x0350 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iCurrentIGC;                                      		// 0x0354 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iGroupFansBoost;                                  		// 0x0358 (0x0004) [0x0000000000000000]              
	int                                                iGroupIGCBoost;                                   		// 0x035C (0x0004) [0x0000000000000000]              
	int                                                iPremiumSelfIGCBoost;                             		// 0x0360 (0x0004) [0x0000000000000000]              
	int                                                iPremiumSelfFansBoost;                            		// 0x0364 (0x0004) [0x0000000000000000]              
	int                                                iPremiumGroupIGCBoost;                            		// 0x0368 (0x0004) [0x0000000000000000]              
	int                                                iPremiumGroupFansBoost;                           		// 0x036C (0x0004) [0x0000000000000000]              
	TArray< struct FServiceBoostInfo >                 rServicesBoost;                                   		// 0x0370 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iStyle;                                           		// 0x037C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FPEInfo                                     PECounter[ 0x10 ];                                		// 0x0380 (0x00C0) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                PEID[ 0x10 ];                                     		// 0x0440 (0x0040) [0x0000000000000020]              ( CPF_Net )
	int                                                nPENumCounters;                                   		// 0x0480 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class APBGameObjective*                            pCarryingDevice;                                  		// 0x0484 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              fTimeOfLastRZMsg;                                 		// 0x0488 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                PlayerAccountLevel;                               		// 0x048C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     EnteredGamePassword;                              		// 0x0490 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              fSlowWeaponDamageBooster;                         		// 0x049C (0x0004) [0x0000000000000000]              
	struct FAwardInfo                                  Awards[ 0x4 ];                                    		// 0x04A0 (0x0150) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UPBPlayerStatistics*                         PlayerStatistics;                                 		// 0x05F0 (0x0004) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	int                                                iAvatarPicture;                                   		// 0x05F4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FCustomCharData                             CharacterData;                                    		// 0x05F8 (0x010C) [0x0000000000000020]              ( CPF_Net )
	class USkeletalMesh*                               CharacterMesh3P;                                  		// 0x0704 (0x0004) [0x0000000000000000]              
	class USkeletalMesh*                               CharacterMesh1P;                                  		// 0x0708 (0x0004) [0x0000000000000000]              
	float                                              LastReceivedCharacterDataTime;                    		// 0x070C (0x0004) [0x0000000000000000]              
	class APBCharacterProgression*                     CharacterProgression;                             		// 0x0710 (0x0004) [0x0000000000000000]              
	float                                              fJoinedTime;                                      		// 0x0714 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iAssists;                                         		// 0x0718 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iLastAchievementIndex;                            		// 0x071C (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FGuid                                       LastBoughtItemId;                                 		// 0x0720 (0x0010) [0x0000000000000020]              ( CPF_Net )
	int                                                iLastBoughtItemOwnerGender;                       		// 0x0730 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FTWeaponPresetCodesPRI                      NextWeaponInfoCodes;                              		// 0x0734 (0x0084) [0x0000000000002021]              ( CPF_Edit | CPF_Net | CPF_Transient )
	struct FString                                     StartPortal;                                      		// 0x07B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBSkill*                                    rTiers[ 0x4 ];                                    		// 0x07C4 (0x0010) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fPrevHeat;                                        		// 0x07D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevMatchHeat;                                   		// 0x07D8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              iCurHeat;                                         		// 0x07DC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iStoredHeat;                                      		// 0x07E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBHeatEventManager*                         heatManager;                                      		// 0x07E4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fWeaponEquipTimeModifier;                         		// 0x07E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnIncrementCoolnessServerDone__Delegate;        		// 0x07EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBPlayerStart
// 0x0002 (0x02C2 - 0x02C0)
class APBPlayerStart : public APlayerStart
{
public:
	unsigned char                                      teamNumber;                                       		// 0x02C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      nPriorityRate;                                    		// 0x02C1 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSpawnPointTDM
// 0x001E (0x02E0 - 0x02C2)
class APBSpawnPointTDM : public APBPlayerStart
{
public:
	TArray< struct FWeightedSpawnVolume >              spawnVolumes;                                     		// 0x02C4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fSpawnScore;                                      		// 0x02D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bAssociatedPlayer : 1;                            		// 0x02D4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bTextExist : 1;                                   		// 0x02D4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              fGrenades;                                        		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMortars;                                         		// 0x02DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBPlaystyleList
// 0x0000 (0x003C - 0x003C)
class UPBPlaystyleList : public UObject
{
public:
public:
};

// Class PlanBGame.PBProfileSettings
// 0x0018 (0x00E4 - 0x00CC)
class UPBProfileSettings : public UOnlineProfileSettings
{
public:
	TArray< struct FString >                           KeyCommandArray;                                  		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FName >                             KeyMappingArray;                                  		// 0x00D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBProjectileNoPhysic
// 0x008C (0x02A0 - 0x0214)
class APBProjectileNoPhysic : public AProjectile
{
public:
	class AActor*                                      NotifyActorWhenExploded;                          		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FExplosionInfo                              ExplosionFX;                                      		// 0x0218 (0x0020) [0x0000000000080001]              ( CPF_Edit | CPF_Component )
	class UPBPhysicsEffectGenerator*                   PhysicsEffectGenerator;                           		// 0x0238 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     LastLocation;                                     		// 0x023C (0x000C) [0x0000000000000000]              
	unsigned long                                      bInitialized : 1;                                 		// 0x0248 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bWaitForEffects : 1;                              		// 0x0248 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCreateProjectileLight : 1;                       		// 0x0248 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FVector                                     InitialLocation;                                  		// 0x024C (0x000C) [0x0000000000000000]              
	float                                              AccelRate;                                        		// 0x0258 (0x0004) [0x0000000000000000]              
	float                                              TossZ;                                            		// 0x025C (0x0004) [0x0000000000000000]              
	class UParticleSystemComponent*                    ProjEffects;                                      		// 0x0260 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             ProjFlightTemplate;                               		// 0x0264 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x0268 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             Ambient;                                          		// 0x026C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UClass*                                      ProjectileLightClass;                             		// 0x0270 (0x0004) [0x0000000000000000]              
	class UPBExplosionLight*                           ProjectileLight;                                  		// 0x0274 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< struct FLightValues >                      LightTimeShift;                                   		// 0x0278 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LightBrightness;                                  		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightRadius;                                      		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      LightColor;                                       		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                iFiredFromWeaponCode;                             		// 0x0290 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class AEmitter*                                    projExplosion;                                    		// 0x029C (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBRegionList
// 0x0010 (0x004C - 0x003C)
class UPBRegionList : public UObject
{
public:
	class UPBRegionList*                               pRegionListArchetype;                             		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBRegionsContainer >               RegionList;                                       		// 0x0040 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBReNamePackageCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBReNamePackageCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBScout
// 0x0004 (0x0534 - 0x0530)
class APBScout : public AScout
{
public:
	class UClass*                                      PrototypePawnClass;                               		// 0x0530 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBServerCheckCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBServerCheckCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBServerRequestHandlerParent
// 0x009C (0x00D8 - 0x003C)
class UPBServerRequestHandlerParent : public UObject
{
public:
	struct FScriptDelegate                             __tmpOnPingServerDone__Delegate;                  		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnLoginServerDone__Delegate;                 		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnGetProfileDetailsServerDone__Delegate;     		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnLogoutServerDone__Delegate;                		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnUpdateProfileDetailsServerDone__Delegate;  		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnGetPresetsServerDone__Delegate;            		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnGetSubscriptionModeServerDone__Delegate;   		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnSendPlayerStatusServerDone__Delegate;      		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnIncrementCoolnessServerDone__Delegate;     		// 0x009C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnGetProgressionDone__Delegate;              		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnSubmitProgressionServerDone__Delegate;     		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnDeleteEventByBackendDone__Delegate;        		// 0x00C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __tmpOnGetBoostersServerDone__Delegate;           		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBServicesStorage
// 0x001C (0x0058 - 0x003C)
class UPBServicesStorage : public UObject
{
public:
	TArray< struct FTPBServiceCategory >               m_ServiceCategoriesArray;                         		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FTPBSubscriptionMode >              m_SubscriptionModesArray;                         		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBServicesStorage*                          m_pServicesStorageArchetype;                      		// 0x0054 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSingleton
// 0x0004 (0x0040 - 0x003C)
class UPBSingleton : public UObject
{
public:
	struct FPointer                                    mInstance;                                        		// 0x003C (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
public:
};

// Class PlanBGame.PBSkelControl_Recoil
// 0x0080 (0x013C - 0x00BC)
class UPBSkelControl_Recoil : public USkelControlBase
{
public:
	class APBPawn*                                     WarPawnOwner;                                     		// 0x00BC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FRecoilDef                                  SkelRecoil;                                       		// 0x00C0 (0x0070) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   Aim;                                              		// 0x0130 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPlayRecoil : 1;                                  		// 0x0138 (0x0004) [0x0000000000002001] [0x00000001] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bOldPlayRecoil : 1;                               		// 0x0138 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bApplyControl : 1;                                		// 0x0138 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
public:
};

// Class PlanBGame.PBSkelControl_Twist
// 0x0050 (0x010C - 0x00BC)
class UPBSkelControl_Twist : public USkelControlBase
{
public:
	TArray< struct FTwistBoneData >                    TwistData;                                        		// 0x00BC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FLeanBoneData >                     LeanData;                                         		// 0x00C8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                HeadYaw;                                          		// 0x00D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastHeadYaw;                                      		// 0x00D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              LastZeroed;                                       		// 0x00DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bInitialized : 1;                                 		// 0x00E0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bDormant : 1;                                     		// 0x00E0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bForcedLookAt : 1;                                		// 0x00E0 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bRecentering : 1;                                 		// 0x00E0 (0x0004) [0x0000000000000000] [0x00000008] 
	struct FVector                                     ForceFocalPoint;                                  		// 0x00E4 (0x000C) [0x0000000000000000]              
	class AActor*                                      ForceFocalActor;                                  		// 0x00F0 (0x0004) [0x0000000000000000]              
	struct FString                                     debugstr;                                         		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OwnerNotification__Delegate;                    		// 0x0100 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSkelControlSingleBoneByWeapon
// 0x0028 (0x00E4 - 0x00BC)
class UPBSkelControlSingleBoneByWeapon : public USkelControlBase
{
public:
	TArray< struct FPBWeaponAdjustments >              Adjustments;                                      		// 0x00BC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FName                                       PreviewProfileName;                               		// 0x00C8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPreviewAim : 1;                                  		// 0x00D0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	class APBPawn*                                     PBPawnOwner;                                      		// 0x00D4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FName                                       CurProfileName;                                   		// 0x00D8 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                CurProfileIndex;                                  		// 0x00E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSkeletalMeshComponent
// 0x000F (0x0614 - 0x0605)
class UPBSkeletalMeshComponent : public USkeletalMeshComponent
{
public:
	float                                              FOV;                                              		// 0x0608 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bForceLoadTextures : 1;                           		// 0x060C (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              ClearStreamingTime;                               		// 0x0610 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBSkill
// 0x00C4 (0x029C - 0x01D8)
class APBSkill : public AActor
{
public:
	struct FGuid                                       ItemShopGuid;                                     		// 0x01D8 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     ItemShopGuidStr;                                  		// 0x01E8 (0x000C) [0x0000000000402003]              ( CPF_Edit | CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	int                                                iDefaultSkillLevel;                               		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Tier;                                             		// 0x01F8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      iLowEnergyValue;                                  		// 0x01F9 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      iCriticalEnergyValue;                             		// 0x01FA (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      replEnergy;                                       		// 0x01FB (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fMinimumEnergyRequiredPerUse;                     		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinimumEnergyRequiredToSelect;                   		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnergyCostPerUse;                                		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnergyBaseRefreshRate;                           		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxEnergy;                                       		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCostWhileActive;                                 		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInitialEnergy;                                   		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAlwaysAtFullEnergy : 1;                          		// 0x0218 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNotifiedOfEnergyDepletion : 1;                   		// 0x0218 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bIsDrainingEnergy : 1;                            		// 0x0218 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bIsUnlocked : 1;                                  		// 0x0218 (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	struct FString                                     sInternalName;                                    		// 0x021C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     sLocalizedSkillName;                              		// 0x0228 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     sIconName;                                        		// 0x0234 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FPBGameItem_IconCoordsInfo                  Icon;                                             		// 0x0240 (0x001C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBSkillImprovementInfo >           rImprovements;                                    		// 0x025C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     SkillWeaponParamName;                             		// 0x0268 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APBKWeapon_Skill*                            pWeapon;                                          		// 0x0274 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FSWeaponCode                                SkillWeaponCode;                                  		// 0x0278 (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APawn*                                       pOwningPawn;                                      		// 0x0284 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iSkillLevel;                                      		// 0x0288 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iMasterLevel;                                     		// 0x028C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fEnergy;                                          		// 0x0290 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBKWeaponInfo*                              pLinkedWeaponInfo;                                		// 0x0294 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iHeatToUnlock;                                    		// 0x0298 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSoeMon
// 0x0028 (0x0064 - 0x003C)
class UPBSoeMon : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	unsigned long                                      bInitialized : 1;                                 		// 0x0040 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              CycleUpdateFrequency;                             		// 0x0044 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              currUpdateFrequency;                              		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           MonitorElements;                                  		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           MonitorElementDescriptions;                       		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSoundOcclusionVolume
// 0x0000 (0x0214 - 0x0214)
class APBSoundOcclusionVolume : public AVolume
{
public:
public:
};

// Class PlanBGame.PBSpawnVolumeTDM
// 0x0020 (0x0234 - 0x0214)
class APBSpawnVolumeTDM : public AVolume
{
public:
	TArray< class AActor* >                            ActorsInside;                                     		// 0x0214 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                MortarsInside;                                    		// 0x0220 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                GrenadesInside;                                   		// 0x0224 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fEnemiesAspect;                                   		// 0x0228 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fGrenadesAspect;                                  		// 0x022C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMortarsAspect;                                   		// 0x0230 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSpecialList
// 0x0010 (0x004C - 0x003C)
class UPBSpecialList : public UObject
{
public:
	class UPBSpecialList*                              pSpecialListArchetype;                            		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBSpecialContainer >               SpecialList;                                      		// 0x0040 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSpecialMove
// 0x0000 (0x003C - 0x003C)
class UPBSpecialMove : public UObject
{
public:
public:
};

// Class PlanBGame.PBSpecialMove_BaseVariableFall
// 0x0000 (0x003C - 0x003C)
class UPBSpecialMove_BaseVariableFall : public UPBSpecialMove
{
public:
public:
};

// Class PlanBGame.PBSquadAI
// 0x00BC (0x0294 - 0x01D8)
class APBSquadAI : public AReplicationInfo
{
public:
	class APBTeamInfo*                                 Team;                                             		// 0x01D8 (0x0004) [0x0000000000000000]              
	class AController*                                 SquadLeader;                                      		// 0x01DC (0x0004) [0x0000000000000000]              
	class APBPlayerReplicationInfo*                    LeaderPRI;                                        		// 0x01E0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class APBSquadAI*                                  NextSquad;                                        		// 0x01E4 (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            SquadObjective;                                   		// 0x01E8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                Size;                                             		// 0x01EC (0x0004) [0x0000000000000000]              
	class APBBot*                                      SquadMembers;                                     		// 0x01F0 (0x0004) [0x0000000000000000]              
	struct FString                                     SupportString;                                    		// 0x01F4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     DefendString;                                     		// 0x0200 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     AttackString;                                     		// 0x020C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     HoldString;                                       		// 0x0218 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     FreelanceString;                                  		// 0x0224 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     SupportStringTrailer;                             		// 0x0230 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FName                                       CurrentOrders;                                    		// 0x023C (0x0008) [0x0000000000000020]              ( CPF_Net )
	class APawn*                                       Enemies[ 0x8 ];                                   		// 0x0244 (0x0020) [0x0000000000000000]              
	int                                                MaxSquadSize;                                     		// 0x0264 (0x0004) [0x0000000000000000]              
	unsigned long                                      bFreelance : 1;                                   		// 0x0268 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bFreelanceAttack : 1;                             		// 0x0268 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bFreelanceDefend : 1;                             		// 0x0268 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bRoamingSquad : 1;                                		// 0x0268 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bAddTransientCosts : 1;                           		// 0x0268 (0x0004) [0x0000000000000000] [0x00000010] 
	float                                              FormationSize;                                    		// 0x026C (0x0004) [0x0000000000000000]              
	float                                              GatherThreshold;                                  		// 0x0270 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            RouteObjective;                                   		// 0x0274 (0x0004) [0x0000000000000000]              
	TArray< class ANavigationPoint* >                  ObjectiveRouteCache;                              		// 0x0278 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class ANavigationPoint* >                  PreviousObjectiveRouteCache;                      		// 0x0284 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class APBBot*                                      PendingSquadRouteMaker;                           		// 0x0290 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBSynchronizeItemsCommandlet
// 0x0000 (0x007C - 0x007C)
class UPBSynchronizeItemsCommandlet : public UCommandlet
{
public:
public:
};

// Class PlanBGame.PBTaunts
// 0x0018 (0x0054 - 0x003C)
class UPBTaunts : public UObject
{
public:
	TArray< struct FPBTaunt >                          rTaunts;                                          		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBTaunts*                                   pTauntsArchetype;                                 		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      FemaleDefaultTaunts[ 0x4 ];                       		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MaleDefaultTaunts[ 0x4 ];                         		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBTeamInfo
// 0x004C (0x0240 - 0x01F4)
class APBTeamInfo : public ATeamInfo
{
public:
	int                                                DesiredTeamSize;                                  		// 0x01F4 (0x0004) [0x0000000000000000]              
	class APBTeamAI*                                   TAI;                                              		// 0x01F8 (0x0004) [0x0000000000000000]              
	class UMaterial*                                   TeamIcon;                                         		// 0x01FC (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            HomeBase;                                         		// 0x0200 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     tTeamNames[ 0x3 ];                                		// 0x0204 (0x0024) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FColor                                      BaseTeamColor[ 0x2 ];                             		// 0x0228 (0x0008) [0x0000000000000000]              
	struct FColor                                      TextColor[ 0x2 ];                                 		// 0x0230 (0x0008) [0x0000000000000000]              
	int                                                iStartingTeamPlayers;                             		// 0x0238 (0x0004) [0x0000000000000000]              
	unsigned long                                      bPendingPerfectVictory : 1;                       		// 0x023C (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBTexture2DComposite
// 0x001C (0x010C - 0x00F0)
class UPBTexture2DComposite : public UTexture
{
public:
	int                                                SizeX;                                            		// 0x00F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SizeY;                                            		// 0x00F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct FPBSourceTexture2DRegion >          SourceRegions;                                    		// 0x00F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                CurrentFinishStep;                                		// 0x0104 (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FPointer                                    ValidRegions;                                     		// 0x0108 (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class PlanBGame.PBUIDataStore_OnlineBuddies
// 0x0030 (0x0098 - 0x0068)
class UPBUIDataStore_OnlineBuddies : public UUIDataStore
{
public:
	TArray< struct FBuddyEntry >                       BuddyList;                                        		// 0x0068 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FBuddyEntry                                 TempBuddyEntry;                                   		// 0x0074 (0x0024) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class PlanBGame.PBUIDataStore_OnlineStats
// 0x00D4 (0x01A4 - 0x00D0)
class UPBUIDataStore_OnlineStats : public UUIDataStore_OnlineStats
{
public:
	unsigned long                                      bInRead : 1;                                      		// 0x00D0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bStatisticsChanged : 1;                           		// 0x00D0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bInQueuePump : 1;                                 		// 0x00D0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	TArray< class UOnlineStatsRead* >                  ReadQueue;                                        		// 0x00D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UOnlineStatsRead*                            PlayerStats;                                      		// 0x00E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FStatsArray                                 WeaponStats;                                      		// 0x00E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FStatsArray >                       MapStats;                                         		// 0x00F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FUniqueNetId                                DetailsPlayerNetId;                               		// 0x00FC (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     DetailsPlayerNick;                                		// 0x0104 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                GameModeId;                                       		// 0x0110 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MatchTypeId;                                      		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                StatsReadObjectStartIndex;                        		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FScriptDelegate >                   TempStatsReadDelegateArray;                       		// 0x011C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FName >                             CalculatedOverallWeaponStats;                     		// 0x0128 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCalculatedOverallWeaponStatistics > CalculatedOverallWeaponStatsStruct;               		// 0x0134 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTCalculatedOverallWeaponStatistics         CalculatedStatsForAllMaps;                        		// 0x0140 (0x0034) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             CalculatedOverallPerWeaponStats;                  		// 0x0174 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCalculatedOverallWeaponStatistics > CalculatedOverallPerWeaponStatsStruct;            		// 0x0180 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UPBGameComplexStatRead* >            m_ComplexReaders;                                 		// 0x018C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnStatsReadComplete__Delegate;                  		// 0x0198 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBViewportClient
// 0x005C (0x0184 - 0x0128)
class UPBViewportClient : public UGameViewportClient
{
public:
	class UTexture2D*                                  LoadBackground;                                   		// 0x0128 (0x0004) [0x0000000000000000]              
	struct FString                                     LevelActionMessages[ 0x6 ];                       		// 0x012C (0x0048) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	float                                              LastTimeIdle;                                     		// 0x0174 (0x0004) [0x0000000000000000]              
	float                                              IdleTimeToKick;                                   		// 0x0178 (0x0004) [0x0000000000000000]              
	float                                              IdleWarningTime;                                  		// 0x017C (0x0004) [0x0000000000000000]              
	unsigned long                                      bLoadingMovieShown : 1;                           		// 0x0180 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bKickNotified : 1;                                		// 0x0180 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBWeapon
// 0x0000 (0x02C8 - 0x02C8)
class APBWeapon : public AWeapon
{
public:
public:
};

// Class PlanBGame.PBWeaponAttachment
// 0x0000 (0x01D8 - 0x01D8)
class APBWeaponAttachment : public AActor
{
public:
public:
};

// Class PlanBGame.PBWeaponAttachmentComponent
// 0x0007 (0x060C - 0x0605)
class UPBWeaponAttachmentComponent : public USkeletalMeshComponent
{
public:
	class APBWeaponAttachment*                         WeaponAttachment;                                 		// 0x0608 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
public:
};

// Class PlanBGame.PlanBTypes
// 0x0000 (0x003C - 0x003C)
class UPlanBTypes : public UObject
{
public:
public:
};

// Class PlanBGame.PBActorFactoryPhysicsAssetDestructible
// 0x0000 (0x0080 - 0x0080)
class UPBActorFactoryPhysicsAssetDestructible : public UActorFactoryPhysicsAsset
{
public:
public:
};

// Class PlanBGame.PBPhysicsAssetDestructible
// 0x0000 (0x01E8 - 0x01E8)
class APBPhysicsAssetDestructible : public APBPhysicsAssetSynchronized
{
public:
public:
};

// Class PlanBGame.PBSkeletalBoneStates
// 0x0000 (0x005C - 0x005C)
class UPBSkeletalBoneStates : public UPBSkeletalBoneStatesBase
{
public:
public:
};

// Class PlanBGame.PBSeqAct_Base
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_Base : public USequenceAction
{
public:
public:
};

// Class PlanBGame.PBSeqAct_SetVelocity
// 0x0018 (0x0114 - 0x00FC)
class UPBSeqAct_SetVelocity : public USequenceAction
{
public:
	struct FVector                                     MinVelocity;                                      		// 0x00FC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MaxVelocity;                                      		// 0x0108 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSeqCond_IsExternalBuild
// 0x0000 (0x00E4 - 0x00E4)
class UPBSeqCond_IsExternalBuild : public USequenceCondition
{
public:
public:
};

// Class PlanBGame.PBSeqCond_IsTeam
// 0x0004 (0x00E8 - 0x00E4)
class UPBSeqCond_IsTeam : public USequenceCondition
{
public:
	float                                              teamNumber;                                       		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNodeBlendHeadCrab
// 0x0004 (0x0124 - 0x0120)
class UPBAnimNodeBlendHeadCrab : public UPBAnim_BlendList
{
public:
	class APBActorController*                          HeadCrabPawn;                                     		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnim_BlendBySprint
// 0x0004 (0x0128 - 0x0124)
class UPBAnim_BlendBySprint : public UPBAnimBlendBase
{
public:
	class APBPawn*                                     pCachedPawn;                                      		// 0x0124 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnimBlendByTurnInPlace
// 0x0008 (0x012C - 0x0124)
class UPBAnimBlendByTurnInPlace : public UPBAnimBlendBase
{
public:
	float                                              RootYawSpeedThresh;                               		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TurnInPlaceBlendSpeed;                            		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimBlendByGliding
// 0x0000 (0x0114 - 0x0114)
class UPBAnimBlendByGliding : public UAnimNodeBlendList
{
public:
public:
};

// Class PlanBGame.PBAnimBlendByProfile
// 0x001C (0x0130 - 0x0114)
class UPBAnimBlendByProfile : public UAnimNodeBlendList
{
public:
	TArray< struct FName >                             ProfileNames;                                     		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              BlendTime;                                        		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBPawn*                                     WarPawnOwner;                                     		// 0x0124 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FName                                       CurProfileName;                                   		// 0x0128 (0x0008) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnimBlendByReloadMinigame
// 0x0008 (0x011C - 0x0114)
class UPBAnimBlendByReloadMinigame : public UAnimNodeBlendList
{
public:
	class APBPawn*                                     WarPawnOwner;                                     		// 0x0114 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bReadyForNewMinigame : 1;                         		// 0x0118 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bAlreadyInterruptedReload : 1;                    		// 0x0118 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
public:
};

// Class PlanBGame.PBAnimBlendByTaunt
// 0x0009 (0x011D - 0x0114)
class UPBAnimBlendByTaunt : public UAnimNodeBlendList
{
public:
	float                                              BlendTime;                                        		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBPawn*                                     WarPawnOwner;                                     		// 0x0118 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned char                                      CurrentTauntIndex;                                		// 0x011C (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnimNodeBlendDirectional
// 0x0013 (0x0104 - 0x00F1)
class UPBAnimNodeBlendDirectional : public UAnimNodeBlendBase
{
public:
	float                                              BlendSpeed;                                       		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInterpolateWeights : 1;                          		// 0x00F8 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	float                                              DirAngle;                                         		// 0x00FC (0x0004) [0x0000000000000000]              
	int                                                SingleAnimAtOrAboveLOD;                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNodeBlendGliding
// 0x0003 (0x00F4 - 0x00F1)
class UPBAnimNodeBlendGliding : public UAnimNodeBlendBase
{
public:
public:
};

// Class PlanBGame.PBAnimNodeBlendPaperPlane
// 0x0037 (0x0128 - 0x00F1)
class UPBAnimNodeBlendPaperPlane : public UAnimNodeBlendBase
{
public:
	class APBPaperPlanePawn*                           PaperPlanePawn;                                   		// 0x00F4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                DirectionState;                                   		// 0x00F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentWeightIdle;                                		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetWeightIdle;                                 		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentWeightUp;                                  		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetWeightUp;                                   		// 0x0108 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentWeightRight;                               		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetWeightRight;                                		// 0x0110 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentWeightDown;                                		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetWeightDown;                                 		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurrentWeightLeft;                                		// 0x011C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetWeightLeft;                                 		// 0x0120 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              BlendSpeed;                                       		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNodeBlendSkillUsage
// 0x0010 (0x0124 - 0x0114)
class UPBAnimNodeBlendSkillUsage : public UAnimNodeBlendList
{
public:
	unsigned long                                      bBlendToIdleOnlyAfterUseFinishes : 1;             		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      PlayingUseOnce : 1;                               		// 0x0114 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              fBlendToIdleTime;                                 		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBlendToUseTime;                                  		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBCharacter*                                PBCharacterCached;                                		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBAnimNodeRandom
// 0x001C (0x0130 - 0x0114)
class UPBAnimNodeRandom : public UAnimNodeBlendList
{
public:
	TArray< struct FRandomAnimInfo >                   RandomInfo;                                       		// 0x0114 (0x000C) [0x0000000004400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
	class UAnimNodeSequence*                           PlayingSeqNode;                                   		// 0x0120 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                PendingChildIndex;                                		// 0x0124 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                RandomSeed;                                       		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      RandomSeedValid : 1;                              		// 0x012C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnimNotify_SetBoneScale
// 0x000C (0x004C - 0x0040)
class UPBAnimNotify_SetBoneScale : public UAnimNotify
{
public:
	struct FName                                       BoneName;                                         		// 0x0040 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              NewScale;                                         		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNotify_Sound
// 0x0004 (0x0060 - 0x005C)
class UPBAnimNotify_Sound : public UAnimNotify_Sound
{
public:
	unsigned long                                      PlayOnAllButOwningClient : 1;                     		// 0x005C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      PlayOnOwningClientOnly : 1;                       		// 0x005C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnimNotify_SoundEx
// 0x0004 (0x0064 - 0x0060)
class UPBAnimNotify_SoundEx : public UPBAnimNotify_Sound
{
public:
	unsigned long                                      NotifyOnReversePlay : 1;                          		// 0x0060 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class PlanBGame.PBSkelControl_AddRotation
// 0x0030 (0x00EC - 0x00BC)
class UPBSkelControl_AddRotation : public USkelControlBase
{
public:
	unsigned long                                      bApplyTranslation : 1;                            		// 0x00BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAddTranslation : 1;                              		// 0x00BC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bApplyRotation : 1;                               		// 0x00BC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAddRotation : 1;                                 		// 0x00BC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FVector                                     BoneTranslation;                                  		// 0x00C0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneTranslationSpace;                             		// 0x00CC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TranslationSpaceBoneName;                         		// 0x00D0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    BoneRotation;                                     		// 0x00D8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       RotationSpaceBoneName;                            		// 0x00E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSkelControl_LookAt
// 0x0010 (0x0168 - 0x0158)
class UPBSkelControl_LookAt : public USkelControlLookAt
{
public:
	unsigned long                                      bLimitYaw : 1;                                    		// 0x0158 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLimitPitch : 1;                                  		// 0x0158 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLimitRoll : 1;                                   		// 0x0158 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bShowPerAxisLimits : 1;                           		// 0x0158 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              YawLimit;                                         		// 0x015C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchLimit;                                       		// 0x0160 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RollLimit;                                        		// 0x0164 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBCameraMover
// 0x0038 (0x0074 - 0x003C)
class UPBCameraMover : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class AActor*                                      mCamera;                                          		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbMove : 1;                                       		// 0x0044 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FTMoverStruct                               mMover;                                           		// 0x0048 (0x002C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBCharacterNamesPrinterScaleform
// 0x00D8 (0x0114 - 0x003C)
class UPBCharacterNamesPrinterScaleform : public UObject
{
public:
	class UPBGFxObject_HUD*                            m_Owner;                                          		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTCharPrinterInfoScaleform >        m_InfoArray;                                      		// 0x0040 (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharPrinterInfoScannedScaleform > m_InfoArrayScanned;                               		// 0x004C (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharPrinterInfoScaleform >        m_InfoArrayTurrets;                               		// 0x0058 (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharPrinterBasicScaleform >       m_BasicInfo;                                      		// 0x0064 (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharPrinterMinimapInfoScaleform > m_MinimapArray;                                   		// 0x0070 (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharPrinterMinimapInfoScaleform > m_MinimapArrayScanned;                            		// 0x007C (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBPlayerController*                         m_playerController;                               		// 0x0088 (0x0004) [0x0000000000102000]              ( CPF_Transient )
	TArray< struct FTReveal >                          m_RevealBuffer;                                   		// 0x008C (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m_PlayerTeam;                                     		// 0x0098 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      m_PlayerIndicatorWidgets;                         		// 0x009C (0x000C) [0x0000000000502000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m_NextWidget;                                     		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fZOffset;                                         		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxAlpha;                                        		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTransparentColorAlpha;                           		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTeamNameFadeoutTime;                             		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCrosshairArea;                                   		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnemyNameFadeoutTime;                            		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnemyNameFadeinTime;                             		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cDamageColor;                                     		// 0x00C8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cObjectiveColor;                                  		// 0x00D8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cObjectiveDamageColor;                            		// 0x00E8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDamageStateFlickTime;                            		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDamageStateDuration;                             		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScannedInfoTime;                                 		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScannedMinimapTime;                              		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScannedFadeoutTime;                              		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                initialTickValue;                                 		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMaxPlayerIndications;                            		// 0x0110 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBCharacterRotator
// 0x003C (0x0078 - 0x003C)
class UPBCharacterRotator : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	TArray< struct FTCharacterRotator >                mCharacters;                                      		// 0x0040 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTCharacterRotator                          mBase;                                            		// 0x004C (0x0024) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      mCamera;                                          		// 0x0070 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbRotate : 1;                                     		// 0x0074 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBCharacterSelector
// 0x006C (0x00A8 - 0x003C)
class UPBCharacterSelector : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	float                                              PositionPercent;                                  		// 0x0040 (0x0004) [0x0000000000000000]              
	float                                              MaxSpeed;                                         		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              FadeInPerc;                                       		// 0x0048 (0x0004) [0x0000000000000000]              
	float                                              FadeOutPerc;                                      		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              MinSpeed;                                         		// 0x0050 (0x0004) [0x0000000000000000]              
	TArray< struct FTCharacterSelector >               mCharacters;                                      		// 0x0054 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class ASplineActor* >                      SplineTargetList;                                 		// 0x0060 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTCharacterPath >                   PathList;                                         		// 0x006C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTCharacterRotator                          mBase;                                            		// 0x0078 (0x0024) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      mCamera;                                          		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                CurrPosition;                                     		// 0x00A0 (0x0004) [0x0000000000000000]              
	int                                                TargetPosition;                                   		// 0x00A4 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBEquipmentMap
// 0x003C (0x0078 - 0x003C)
class UPBEquipmentMap : public UObject
{
public:
	struct FMap_Mirror                                 EquipmentMap;                                     		// 0x003C (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class PlanBGame.PBGameInteraction
// 0x0004 (0x016C - 0x0168)
class UPBGameInteraction : public UUIInteraction
{
public:
	int                                                BlockUIInputSemaphore;                            		// 0x0168 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGameUISceneClient
// 0x0000 (0x015C - 0x015C)
class UPBGameUISceneClient : public UGameUISceneClient
{
public:
public:
};

// Class PlanBGame.PBGFxGameUISceneClient
// 0x0004 (0x0160 - 0x015C)
class UPBGFxGameUISceneClient : public UPBGameUISceneClient
{
public:
	class UPBGFxMovie_Main*                            mMainMovie;                                       		// 0x015C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGenericDataStore
// 0x0000 (0x0068 - 0x0068)
class UPBGenericDataStore : public UUIDataStore
{
public:
public:
};

// Class PlanBGame.PBGFxMoviePlayer_Tickable
// 0x0004 (0x0184 - 0x0180)
class UPBGFxMoviePlayer_Tickable : public UGFxMoviePlayer
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0180 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
public:
};

// Class PlanBGame.PBGFxMovie_Layered
// 0x0070 (0x01F4 - 0x0184)
class UPBGFxMovie_Layered : public UPBGFxMoviePlayer_Tickable
{
public:
	TArray< struct FTGFxLayer >                        mLayers;                                          		// 0x0184 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTGFxClasses >                      mClasses;                                         		// 0x0190 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  mMainScene;                                       		// 0x019C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTGFxLayer >                        mDeletedMovies;                                   		// 0x01A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           mDeletedMovieNames;                               		// 0x01AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_commandToKey__Delegate;                  		// 0x01B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __NotifyResolutionChanged__Delegate;              		// 0x01C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __onMovieOpened__Delegate;                        		// 0x01D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __onMovieClosed__Delegate;                        		// 0x01DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __onMovieDeleted__Delegate;                       		// 0x01E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxMovie_Main
// 0x0104 (0x02F8 - 0x01F4)
class UPBGFxMovie_Main : public UPBGFxMovie_Layered
{
public:
	class UPBGFxMovie_Background*                      mBackground;                                      		// 0x01F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbCriticalError : 1;                              		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbAsyncCriticalError : 1;                         		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbAsyncPopupError : 1;                            		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      mbAsyncModalError : 1;                            		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      mbLogoutPlayer : 1;                               		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      mbAttempReconnect : 1;                            		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      mbIgnoreNextInvalidSession : 1;                   		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      mbLoadingScreenVisible : 1;                       		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      mbVisible : 1;                                    		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      mbWrongVersion : 1;                               		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bWasLoadingScreenVisible : 1;                     		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      mbSecurityCamera : 1;                             		// 0x01F8 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      SkipToServerBrowser : 1;                          		// 0x01F8 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      SkipToQuickPlay : 1;                              		// 0x01F8 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      AttemptedAutoLogin : 1;                           		// 0x01F8 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bAttemptedPreAuthedLogin : 1;                     		// 0x01F8 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bAttemptedAutoCharSelection : 1;                  		// 0x01F8 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bAttemptedAutoOpenCmd : 1;                        		// 0x01F8 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      mbLoginOpened : 1;                                		// 0x01F8 (0x0004) [0x0000000000000000] [0x00040000] 
	struct FString                                     mbAsyncCriticalErrorStr;                          		// 0x01FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     mbAsyncPopupErrorStr;                             		// 0x0208 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     mbAsyncModalErrorStr;                             		// 0x0214 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     notificationDetail_title;                         		// 0x0220 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     notificationDetail_text;                          		// 0x022C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     notificationDetail_iconPath;                      		// 0x0238 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     notificationMessage_text;                         		// 0x0244 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              notificationMessage_duration;                     		// 0x0250 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mErrorCode;                                       		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       mPlayerControllerName;                            		// 0x0258 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              _3dMenuMovement;                                  		// 0x0260 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              _3dHUDMovement;                                   		// 0x0264 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fLoadingMovieTimeOut;                             		// 0x0268 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fTimeLoadingMovieOpened;                          		// 0x026C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ReconnectTimeout;                                 		// 0x0270 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                mEULAIndex;                                       		// 0x0274 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mDelayedPopupErrorMovie;                          		// 0x0278 (0x0004) [0x0000000000000000]              
	struct FString                                     mDelayedPopupErrorMovieReason;                    		// 0x027C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UPBUICache*                                  m_UICacheReference;                               		// 0x0288 (0x0004) [0x0000000000000000]              
	TArray< struct FScriptDelegate >                   mForegroundDelegates;                             		// 0x028C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __onForegroundChanged__Delegate;                  		// 0x0298 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_IgnorePlayerInput__Delegate;             		// 0x02A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onSetMouseVisibility__Delegate;          		// 0x02B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onTextInputFocused__Delegate;            		// 0x02BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_playSound__Delegate;                     		// 0x02C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __PostInitialize__Delegate;                       		// 0x02D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __openBackground__Delegate;                       		// 0x02E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __closeBackground__Delegate;                      		// 0x02EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Tickable
// 0x000C (0x0090 - 0x0084)
class UPBGFxObject_Tickable : public UGFxObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x0084 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	unsigned long                                      bRequiresTick : 1;                                		// 0x0088 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbInitialized : 1;                                		// 0x0088 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbReleased : 1;                                   		// 0x0088 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	class UPBGFxMovie_Main*                            mMainMovie;                                       		// 0x008C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_ContainerBased
// 0x0010 (0x00A0 - 0x0090)
class UPBGFxObject_ContainerBased : public UPBGFxObject_Tickable
{
public:
	class UGFxObject*                                  mContainer;                                       		// 0x0090 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_playSound__Delegate;                     		// 0x0094 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_MusicContainer
// 0x005C (0x00FC - 0x00A0)
class UPBGFxObject_MusicContainer : public UPBGFxObject_ContainerBased
{
public:
	struct FMusicTrackStruct                           mMusicTrack;                                      		// 0x00A0 (0x0024) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           mActiveMusicTracks;                               		// 0x00C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class USoundNodeWave* >                    mActivate;                                        		// 0x00D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class USoundNodeWave* >                    mDeactivate;                                      		// 0x00DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              mfFadeIn;                                         		// 0x00E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              mfFadeOut;                                        		// 0x00EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      mShopRequests;                                    		// 0x00F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Login
// 0x0050 (0x014C - 0x00FC)
class UPBGFxObject_Login : public UPBGFxObject_MusicContainer
{
public:
	unsigned long                                      bSaveAccountName : 1;                             		// 0x00FC (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      bDoingPreloggedInSessionValidation : 1;           		// 0x00FC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbHasStationHandle : 1;                           		// 0x00FC (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	struct FString                                     msLastLoginName;                                  		// 0x0100 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class USoundCue*                                   mSound_LoginSound;                                		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onHideForeground__Delegate;              		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusIn__Delegate;                     		// 0x0128 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Login__Delegate;                                		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Options
// 0x0114 (0x01B4 - 0x00A0)
class UPBGFxObject_Options : public UPBGFxObject_ContainerBased
{
public:
	unsigned long                                      bCustomVideoSettings : 1;                         		// 0x00A0 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      mbloodEffects : 1;                                		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbInvertMouse : 1;                                		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      mbSmoothMouse : 1;                                		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      mbAccelerateMouse : 1;                            		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      mProfanityFilter : 1;                             		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      keyHolding : 1;                                   		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	TArray< struct FString >                           languages;                                        		// 0x00A4 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UGFxObject*                                  mControlsContainer;                               		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mControlsContainerMove;                           		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mControlsContainerCombat;                         		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mControlsContainerMisc;                           		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mGeneralContainer;                                		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVideoContainer;                                  		// 0x00C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mAudioContainer;                                  		// 0x00C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     mLanguage;                                        		// 0x00CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m3dMenu;                                          		// 0x00D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m3dHUD;                                           		// 0x00DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              mMouseSensivity;                                  		// 0x00E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mAimMode;                                         		// 0x00E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                AnisotropicArray[ 0x5 ];                          		// 0x00E8 (0x0014) [0x0000000000002000]              ( CPF_Transient )
	int                                                ShadowResolutionArray[ 0x4 ];                     		// 0x00FC (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                MultisamplingArray[ 0x2 ];                        		// 0x010C (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxDecalsArray[ 0x5 ];                            		// 0x0114 (0x0014) [0x0000000000002000]              ( CPF_Transient )
	int                                                DecalsLifeArray[ 0x5 ];                           		// 0x0128 (0x0014) [0x0000000000002000]              ( CPF_Transient )
	float                                              keyHoldEventTime;                                 		// 0x013C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       lastKeyPressed;                                   		// 0x0140 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_setGeneralValues__Delegate;              		// 0x0148 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setValues__Delegate;                     		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setKeybind__Delegate;                    		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setVideoValues__Delegate;                		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setAudioValues__Delegate;                		// 0x0178 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_saveAudioValues__Delegate;               		// 0x0184 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_restartNow__Delegate;                    		// 0x0190 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setEULAIndex__Delegate;                  		// 0x019C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMousePressed__Delegate;                       		// 0x01A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGlobalBasket
// 0x0228 (0x0264 - 0x003C)
class UPBGlobalBasket : public UObject
{
public:
	unsigned long                                      m_bRemoveRequiredItems : 1;                       		// 0x003C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bNameReserved : 1;                              		// 0x003C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      m_bCharDataSaved : 1;                             		// 0x003C (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      m_bEquipAllOffers : 1;                            		// 0x003C (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      m_bGettingMarketingCategories : 1;                		// 0x003C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      m_bFinishedGettingMarketingCategories : 1;        		// 0x003C (0x0004) [0x0000000000000000] [0x00000020] 
	struct FString                                     m_ReservedName;                                   		// 0x0040 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           mWeaponCategories;                                		// 0x004C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0058 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FCustomCharData                             m_InitialCharacterData;                           		// 0x005C (0x010C) [0x0000000000002000]              ( CPF_Transient )
	struct FPBPendingSetCustomWeaponData               m_InitialWeaponData;                              		// 0x0168 (0x001C) [0x0000000000002000]              ( CPF_Transient )
	class UPBGlobalBasket*                             m_Instance;                                       		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBEquipmentMap*                             m_EquipmentMap;                                   		// 0x0188 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBBasketItem >                     m_BasketItems;                                    		// 0x018C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FGuid >                             m_RemoveItems;                                    		// 0x0198 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_UIOffers;                                       		// 0x01A4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            mTempUIOffersArray;                               		// 0x01B0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBUIFilter >                      m_UIFilters;                                      		// 0x01BC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBLocalizedFilter >               m_LocalizedFilters;                               		// 0x01C8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   m_ErrorDelegates;                                 		// 0x01D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FGuid >                             m_TemporaryCheckoutArray;                         		// 0x01E0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      m_MarketCategoryRequests;                         		// 0x01EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                m_nCoinsRequest;                                  		// 0x01F8 (0x0004) [0x0000000000000000]              
	int                                                m_nCreditsRequest;                                		// 0x01FC (0x0004) [0x0000000000000000]              
	struct FString                                     m_NullSubscriptionString;                         		// 0x0200 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       m_NullSubscription;                               		// 0x020C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTColorGuid >                       m_ColorSortingArray;                              		// 0x021C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTColorGuid >                       m_HairColorSortingArray;                          		// 0x0228 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTColorGuid >                       m_SynthTypesSortingArray;                         		// 0x0234 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FGuid >                             m_AddingOfferGuidArray;                           		// 0x0240 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGetMarketCategoryOffersDone__Delegate;        		// 0x024C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnBasketError__Delegate;                        		// 0x0258 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBUIDataProvider_SimpleElementProvider
// 0x0000 (0x0048 - 0x0048)
class UPBUIDataProvider_SimpleElementProvider : public UUIDataProvider
{
public:
public:
};

// Class PlanBGame.PBUIDataProvider_StringArray
// 0x000C (0x0054 - 0x0048)
class UPBUIDataProvider_StringArray : public UPBUIDataProvider_SimpleElementProvider
{
public:
	TArray< struct FString >                           Strings;                                          		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBUIDataStore_StringList
// 0x000C (0x0074 - 0x0068)
class UPBUIDataStore_StringList : public UUIDataStore
{
public:
	TArray< struct FEStringListData >                  StringData;                                       		// 0x0068 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAvatarData
// 0x0020 (0x01F8 - 0x01D8)
class APBAvatarData : public AActor
{
public:
	TArray< class UTexture2D* >                        rAvatarPictures;                                  		// 0x01D8 (0x000C) [0x0000000020400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_Deprecated )
	class UTexture2D*                                  NoAvatarTexture;                                  		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBAvatarData*                               Archetype;                                        		// 0x01E8 (0x0004) [0x0000000000000000]              
	TArray< struct FavatarPicture >                    AvatarPictures;                                   		// 0x01EC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCharacterProgression
// 0x0040 (0x0218 - 0x01D8)
class APBCharacterProgression : public AActor
{
public:
	TArray< struct FPBRankInfo >                       RankList;                                         		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                Rank_Initial;                                     		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Rank_Max;                                         		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWinWeight;                                       		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLoseWeight;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnableGameWeight : 1;                            		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDebug_DisableGamemodeWeight : 1;                 		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              fWinBonus;                                        		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLoseBonus;                                       		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iStylePointsPerPercent;                           		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxStyleBonus;                                   		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBPlayerController*                         pDebuggingController;                             		// 0x0208 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FDebugProgressionInfo >             rDebugFunctions;                                  		// 0x020C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_AssetStore
// 0x009C (0x0274 - 0x01D8)
class APBCustomChar_AssetStore : public AActor
{
public:
	unsigned char                                      DefaultGender;                                    		// 0x01D8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FGenderStore >                      GenderStores;                                     		// 0x01DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USkeletalMesh*                               DefaultSkMesh;                                    		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FCustomTextureSchemeSlot >          GenericTextureSchemeSlots;                        		// 0x01EC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UMaterial*                                   FinalMaterial;                                    		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FMergeableTextureInfo >             MergeableTextures;                                		// 0x01FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FCharLOD_Info >                     LODsOptionsOverride;                              		// 0x0208 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMaterial* >                         MergeableMaterials;                               		// 0x0214 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                DropAttachmentsStartingFromLODNumber;             		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomCharTextureStreamTimeout;                   		// 0x0224 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FPBGameItem_IconLayout                      IconLayout;                                       		// 0x0228 (0x0020) [0x0000000000000001]              ( CPF_Edit )
	struct FPBIconInfo                                 Icon_SelectedItem;                                		// 0x0248 (0x0014) [0x0000000000000001]              ( CPF_Edit )
	struct FPBIconInfo                                 Icon_UnavailableItem;                             		// 0x025C (0x0014) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      Color_UnavailableItem;                            		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBCustomChar_AttachmentList
// 0x000C (0x01E4 - 0x01D8)
class APBCustomChar_AttachmentList : public AActor
{
public:
	TArray< struct FCharAttachment >                   Attachments;                                      		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_ColorSchemeList
// 0x000C (0x01E4 - 0x01D8)
class APBCustomChar_ColorSchemeList : public AActor
{
public:
	TArray< struct FCustomColorScheme >                AvailableSchemes;                                 		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_Data
// 0x0000 (0x003C - 0x003C)
class UPBCustomChar_Data : public UObject
{
public:
public:
};

// Class PlanBGame.PBCustomChar_Dummy
// 0x0164 (0x033C - 0x01D8)
class APBCustomChar_Dummy : public AActor
{
public:
	struct FString                                     CharacterDataString;                              		// 0x01D8 (0x000C) [0x0000000000402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink )
	struct FCustomCharData                             CharacterData;                                    		// 0x01E4 (0x010C) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimSet;                                          		// 0x02F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName;                                         		// 0x02F4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPauseAnimation : 1;                              		// 0x02FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bMeshUpToDate : 1;                                		// 0x02FC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              AnimPhase;                                        		// 0x0300 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxParts;                                         		// 0x0304 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxAttachments;                                   		// 0x0308 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBCustomChar_AssetStore*                    DataStore;                                        		// 0x030C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USkeletalMeshComponent*                      MeshTemplate;                                     		// 0x0310 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x0314 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      WeaponLeftHand;                                   		// 0x0318 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       WeaponLeftBone;                                   		// 0x031C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMeshComponent*                      WeaponRightHand;                                  		// 0x0324 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       WeaponRightBone;                                  		// 0x0328 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FCustomPartData2 >                  CharParts;                                        		// 0x0330 (0x000C) [0x0000000000482000]              ( CPF_Transient | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_Merge
// 0x0024 (0x01FC - 0x01D8)
class APBCustomChar_Merge : public AActor
{
public:
	class APBCustomChar_AssetStore*                    DefaultStore;                                     		// 0x01D8 (0x0004) [0x0000000000000000]              
	int                                                ActiveMergeJobCount;                              		// 0x01DC (0x0004) [0x0000000000000000]              
	TArray< struct FPBCharAsyncTaskInfo >              AsyncTasks;                                       		// 0x01E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NextTaskID;                                       		// 0x01EC (0x0004) [0x0000000000000000]              
	int                                                CompletedTaskCount;                               		// 0x01F0 (0x0004) [0x0000000000000000]              
	int                                                ActiveTaskCount;                                  		// 0x01F4 (0x0004) [0x0000000000000000]              
	float                                              RemainTickTime;                                   		// 0x01F8 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBCustomChar_MeshPartList
// 0x000C (0x01E4 - 0x01D8)
class APBCustomChar_MeshPartList : public AActor
{
public:
	TArray< struct FMeshPart >                         MeshParts;                                        		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomChar_Preview
// 0x0408 (0x05E0 - 0x01D8)
class APBCustomChar_Preview : public AActor
{
public:
	int                                                ActorID;                                          		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< unsigned long >                            mProcessedFootSteps;                              		// 0x01DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      CustomizationMode;                                		// 0x01E8 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	class APBCustomChar_AssetStore*                    DataStore;                                        		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FCustomCharData                             CurCharData;                                      		// 0x01F0 (0x010C) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxParts;                                         		// 0x02FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxAttachments;                                   		// 0x0300 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      PreviewMode3P : 1;                                		// 0x0304 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bWeaponMode : 1;                                  		// 0x0304 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bRecievedAnimEndEvent : 1;                        		// 0x0304 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bHasPrimaryWeapon : 1;                            		// 0x0304 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bPlayingCustomAnimation : 1;                      		// 0x0304 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bPendingCustomAnimation : 1;                      		// 0x0304 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      AsyncLoadingEnabled : 1;                          		// 0x0304 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bPaused : 1;                                      		// 0x0304 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	struct FName                                       PendingWeaponAnimationSlot;                       		// 0x0308 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class ULightEnvironmentComponent*                  LightEnvironmentChar;                             		// 0x0310 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      SkMeshTemplate;                                   		// 0x0314 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FString                                     mFootstepSoundCuePath;                            		// 0x0318 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBWeaponAttachmentPreviewInfo >    WeaponPreviewInfo;                                		// 0x0324 (0x000C) [0x0000000000482000]              ( CPF_Transient | CPF_Component | CPF_NeedCtorLink )
	TArray< struct FCustomPartData >                   CharParts;                                        		// 0x0330 (0x000C) [0x0000000000482000]              ( CPF_Transient | CPF_Component | CPF_NeedCtorLink )
	TArray< struct FAnimSetPerGender >                 AnimSets;                                         		// 0x033C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UAnimSet*                                    AnimSet1P;                                        		// 0x0348 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendInTime;                                      		// 0x034C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendOutTime;                                     		// 0x0350 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     CustomWeaponTranslation;                          		// 0x0354 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    CustomWeaponRotation;                             		// 0x0360 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomWeaponScale;                                		// 0x036C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     CustomWeaponRootBoneName;                         		// 0x0370 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UAnimSet*                                    CurrentAnimSet;                                   		// 0x037C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                CurrentAnimSetIndex;                              		// 0x0380 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UAnimNodeSlot* >                     CurrentIdleBreakSlots;                            		// 0x0384 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UAnimNodeSlot* >                     CurrentCustomAnimSlots;                           		// 0x0390 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UPBAnimNodeSlot* >                   CurrentWeaponAnimSlots;                           		// 0x039C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UPBAnimNodeRandom* >                 CurrentRandomIdleSlots;                           		// 0x03A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              IdleBreakDelayMin;                                		// 0x03B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              IdleBreakDelayMax;                                		// 0x03B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastIdleBreakIndex;                               		// 0x03BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       RandomIdleBreakSlotName;                          		// 0x03C0 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       PendingCustomAnimation;                           		// 0x03C8 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     PendingWeapon;                                    		// 0x03D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class USkeletalMeshComponent*                      CustomWeaponMeshComponent;                        		// 0x03DC (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class APBKWeaponParams*                            WeaponParams;                                     		// 0x03E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBNWeaponCustomParams*                      WeaponCustomParams;                               		// 0x03E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FBox                                        CustomWeaponMeshBounds;                           		// 0x03E8 (0x001C) [0x0000000000002000]              ( CPF_Transient )
	class UAnimTree*                                   AnimTreeReference;                                		// 0x0404 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterial*                                   InvisibleMaterial;                                		// 0x0408 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBObjectCacheItem >                CachedObjects;                                    		// 0x040C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                CurrentLoadRequestId;                             		// 0x0418 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                PendingLoadRequestCount;                          		// 0x041C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FPBPendingSetCharData                       PendingSetCharData;                               		// 0x0420 (0x0120) [0x0000000000002000]              ( CPF_Transient )
	struct FPBPendingSetWeapon                         PendingSetWeapon[ 0x4 ];                          		// 0x0540 (0x0070) [0x0000000000002000]              ( CPF_Transient )
	struct FPBPendingSetCustomWeaponData               PendingSetCustomWeaponData;                       		// 0x05B0 (0x001C) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInterface*                          PendingMaterialOverride;                          		// 0x05CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UTextureRenderTarget2D*                      BackgroundTexture;                                		// 0x05D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __AsyncObjectLoadCallback__Delegate;              		// 0x05D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBNWeapon_Merge
// 0x0020 (0x01F8 - 0x01D8)
class APBNWeapon_Merge : public AActor
{
public:
	int                                                ActiveMergeJobCount;                              		// 0x01D8 (0x0004) [0x0000000000000000]              
	TArray< struct FAsyncTaskInfo >                    AsyncTasks;                                       		// 0x01DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NextTaskID;                                       		// 0x01E8 (0x0004) [0x0000000000000000]              
	int                                                CompletedTaskCount;                               		// 0x01EC (0x0004) [0x0000000000000000]              
	int                                                ActiveTaskCount;                                  		// 0x01F0 (0x0004) [0x0000000000000000]              
	float                                              RemainTickTime;                                   		// 0x01F4 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.IPBDrawableOnMinimap
// 0x0000 (0x003C - 0x003C)
class UIPBDrawableOnMinimap : public UInterface
{
public:
public:
};

// Class PlanBGame.IPBEventSystemStorage
// 0x0000 (0x003C - 0x003C)
class UIPBEventSystemStorage : public UInterface
{
public:
public:
};

// Class PlanBGame.IPBEventSystemViewer
// 0x0000 (0x003C - 0x003C)
class UIPBEventSystemViewer : public UInterface
{
public:
public:
};

// Class PlanBGame.IPBInteractible
// 0x0000 (0x003C - 0x003C)
class UIPBInteractible : public UInterface
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer : public UObject
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer_Objective
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer_Objective : public UPBMinimapDrawer
{
public:
public:
};

// Class PlanBGame.PBPersistentLobby
// 0x00DC (0x0544 - 0x0468)
class APBPersistentLobby : public APBGameInfo
{
public:
	class APBGameRules*                                pCurrentRules;                                    		// 0x0468 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPersistentGameReplicationInfo*            pPersistentGameInfo;                              		// 0x046C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       NextLevelPackageName;                             		// 0x0470 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       CurrentLevelPackageName;                          		// 0x0478 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeSinceMapLoadingFinished;                     		// 0x0480 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLobbyInactivityShutdownTime;                     		// 0x0484 (0x0004) [0x0000000000004000]              ( CPF_Config )
	unsigned long                                      bLobbyLocked : 1;                                 		// 0x0488 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bForceGotoLobbyAfterMatchEnd : 1;                 		// 0x0488 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bSkipMapCycling : 1;                              		// 0x0488 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bDisableEOR : 1;                                  		// 0x0488 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bAllowEmptyTeams : 1;                             		// 0x0488 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bForceClientCommitMap : 1;                        		// 0x0488 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bFinalizeVotePaused : 1;                          		// 0x0488 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bVotingPaused : 1;                                		// 0x0488 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bPlayersVsBots : 1;                               		// 0x0488 (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	unsigned long                                      bAutoNumBots : 1;                                 		// 0x0488 (0x0004) [0x0000000000004000] [0x00000200] ( CPF_Config )
	unsigned long                                      bAllowAI : 1;                                     		// 0x0488 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bForceAllRed : 1;                                 		// 0x0488 (0x0004) [0x0000000000004000] [0x00000800] ( CPF_Config )
	unsigned long                                      bRoundTimerExpired : 1;                           		// 0x0488 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned char                                      CurrentEORScreen;                                 		// 0x048C (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      StandAloneGameMode;                               		// 0x048D (0x0001) [0x0000000000000000]              
	class UClass*                                      clVictoryMessage[ 0x2 ];                          		// 0x0490 (0x0008) [0x0000000000000000]              
	int                                                iKismetVictoriousTeam;                            		// 0x0498 (0x0004) [0x0000000000000000]              
	class UClass*                                      cKismetVictoryMessage;                            		// 0x049C (0x0004) [0x0000000000000000]              
	int                                                iStateTimeout;                                    		// 0x04A0 (0x0004) [0x0000000000000000]              
	float                                              fSafetyBuyInterval;                               		// 0x04A4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                NewMatchDelay;                                    		// 0x04A8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iNextMapVoteEndDelay;                             		// 0x04AC (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iNextMapVoteTime;                                 		// 0x04B0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iSpawnTimeout;                                    		// 0x04B4 (0x0004) [0x0000000000000000]              
	int                                                iTeamsNotReadyTimeout;                            		// 0x04B8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fFinishedPlayerPercentageBeforeCommit;            		// 0x04BC (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxTeamSize;                                      		// 0x04C0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fVoteTime;                                        		// 0x04C4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fRequiredVotePercent;                             		// 0x04C8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fEndVoteDelay;                                    		// 0x04CC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fResetVoteDelay;                                  		// 0x04D0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fPassiveVotingTimeout;                            		// 0x04D4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fPassiveVotingAnnouncement;                       		// 0x04D8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iKickVote_DefaultBanTime;                         		// 0x04DC (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iStartVotePreventTime_JoinGame;                   		// 0x04E0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iStartVotePreventTime_StartVote;                  		// 0x04E4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FString >                           BotBackupNames;                                   		// 0x04E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                BotBackupNameOffset;                              		// 0x04F4 (0x0004) [0x0000000000000000]              
	int                                                ServerSkillLevel;                                 		// 0x04F8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                DesiredPlayerCount;                               		// 0x04FC (0x0004) [0x0000000000000000]              
	class APBTeamInfo*                                 Teams[ 0x2 ];                                     		// 0x0500 (0x0008) [0x0000000000000000]              
	struct FString                                     ServerName;                                       		// 0x0508 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< class APBPlayerController* >               toRespawnPC;                                      		// 0x0514 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBPlayerController* >               toAnouncePC;                                      		// 0x0520 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __GetAwardParameter__Delegate;                    		// 0x052C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __GetAwardTimeChanged__Delegate;                  		// 0x0538 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameRules
// 0x0090 (0x027C - 0x01EC)
class APBGameRules : public AMutator
{
public:
	int                                                iPlayerCountCap;                                  		// 0x01EC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fGameWeightOptimalMatchLength;                    		// 0x01F0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fGameWeightConstantValue;                         		// 0x01F4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fGameWeightValuePerPlayer;                        		// 0x01F8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	class APBPersistentLobby*                          pLobby;                                           		// 0x01FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPersistentGameReplicationInfo*            pLobbyInfo;                                       		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBMatchStatistics*                          mMatchStatistics;                                 		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UClass*                                      OnlineGameSettingsClass;                          		// 0x0208 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                iWinningTeam;                                     		// 0x020C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bJoinOnGoingGame : 1;                             		// 0x0210 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      bFriendlyFire : 1;                                		// 0x0210 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bDropWeaponsOnDeath : 1;                          		// 0x0210 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bShowHalfTimeScene : 1;                           		// 0x0210 (0x0004) [0x0000000000000020] [0x00000008] ( CPF_Net )
	unsigned long                                      bPEAllowRevengeReset : 1;                         		// 0x0210 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	int                                                iRoundEndDelay;                                   		// 0x0214 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iRoundTime;                                       		// 0x0218 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iSafetyTime;                                      		// 0x021C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iGoalScore;                                       		// 0x0220 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iEndingStateDelay;                                		// 0x0224 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iSpawnTime;                                       		// 0x0228 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iRespawnWaveTime;                                 		// 0x022C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iInvulnerableTime;                                		// 0x0230 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iTeamScorePerKill;                                		// 0x0234 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iPenaltyPerTeamKill;                              		// 0x0238 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iScorePerKill;                                    		// 0x023C (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FStructCommentator                          CommentatorEvent;                                 		// 0x0240 (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iPERoundLimit;                                    		// 0x024C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fPETimeLimit;                                     		// 0x0250 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iPEKillReq;                                       		// 0x0254 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< class APBChest* >                          ChestList;                                        		// 0x0258 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                ChestRandomMax;                                   		// 0x0264 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ChestNumber0;                                     		// 0x0268 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ChestThreshold1;                                  		// 0x026C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ChestNumber1;                                     		// 0x0270 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ChestThreshold2;                                  		// 0x0274 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ChestNumber2;                                     		// 0x0278 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSeqEvent_FlagEvent
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_FlagEvent : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ObjectiveCompleted
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObjectiveCompleted : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ObjectiveSet
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObjectiveSet : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ObjectiveDefused
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObjectiveDefused : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBAAMTerminal
// 0x004F (0x03A0 - 0x0351)
class APBAAMTerminal : public APBInteractiveObjective
{
public:
	class UStaticMeshComponent*                        pStMesh;                                          		// 0x0354 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        pBrokenMesh;                                      		// 0x0358 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class APBAAMTerminal_WC*                           pMyWC;                                            		// 0x035C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UParticleSystemComponent*                    pExplosionParticleSystem;                         		// 0x0360 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pBrokenParticleSystem;                            		// 0x0364 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pTeamLogoPSC;                                     		// 0x0368 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInterface*                          SmileyFaceParentMaterial;                         		// 0x036C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SmileyFaceMaterialIndex;                          		// 0x0370 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TeamLogoColorParamName;                           		// 0x0374 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cAngryColor;                                      		// 0x037C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cPacifiedColor;                                   		// 0x038C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   pSmileyFace;                                      		// 0x039C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAAMTerminal_WC
// 0x0008 (0x01E0 - 0x01D8)
class APBAAMTerminal_WC : public AActor
{
public:
	class UStaticMeshComponent*                        pStMesh;                                          		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        pBrokenMesh;                                      		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBPlaceableDevice
// 0x006B (0x03BC - 0x0351)
class APBPlaceableDevice : public APBInteractiveObjective
{
public:
	class UMaterialInstance*                           pIconItemPickupMaterial;                          		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCorrectiveYawRotation;                           		// 0x0358 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cZoneIconColor;                                   		// 0x035C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpeedModifier;                                   		// 0x0360 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAttachToObject : 1;                              		// 0x0364 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHasArmingTime : 1;                               		// 0x0364 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bHasPulseTime : 1;                                		// 0x0364 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bDroppedWhenKilled : 1;                           		// 0x0364 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	float                                              fDisableInteractTime;                             		// 0x0368 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fPickupInteractTime;                              		// 0x036C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fArmingTime;                                      		// 0x0370 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fPulseTime0;                                      		// 0x0374 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fPulseTimeV;                                      		// 0x0378 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fPulseTime;                                       		// 0x037C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fArmingTimeElapsed;                               		// 0x0380 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      pAffectsActor;                                    		// 0x0384 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     vStartingLocation;                                		// 0x0388 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rStartingRotation;                                		// 0x0394 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class APBPawn*                                     pPickedupByPawn;                                  		// 0x03A0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     vPlacementPosition;                               		// 0x03A4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rPlacementRotation;                               		// 0x03B0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBC4
// 0x0048 (0x0404 - 0x03BC)
class APBC4 : public APBPlaceableDevice
{
public:
	class UStaticMeshComponent*                        pDeviceMesh;                                      		// 0x03BC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   ExplosionSound;                                   		// 0x03C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pExplosionParticleSystemTemplate;                 		// 0x03C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    pExplosionParticleSystem;                         		// 0x03C8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pPickupParticleSystemComp;                        		// 0x03CC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pLinkParticleSystemComp;                          		// 0x03D0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       LinkActorParamName;                               		// 0x03D4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMesh*                                 pDeactivatedMesh;                                 		// 0x03DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMesh*                                 pActivatedMesh;                                   		// 0x03E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBPawn*                                     pCarriedByPawn;                                   		// 0x03E4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class AController*                                 pPlacedByController;                              		// 0x03E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UClass*                                      DamageType;                                       		// 0x03EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Momentum;                                         		// 0x03F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageAmount;                                     		// 0x03F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageRadius;                                     		// 0x03F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDamageFalloff : 1;                               		// 0x03FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              fShowMeshAfterInteractionOverTime;                		// 0x0400 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBPersistentGameReplicationInfo
// 0x052C (0x08A0 - 0x0374)
class APBPersistentGameReplicationInfo : public APBGameReplicationInfo
{
public:
	unsigned long                                      bLobbyLocked : 1;                                 		// 0x0374 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      bPassiveVotingAllowed : 1;                        		// 0x0374 (0x0004) [0x0000000000002020] [0x00000002] ( CPF_Net | CPF_Transient )
	unsigned long                                      bPassiveVotingAnnounced : 1;                      		// 0x0374 (0x0004) [0x0000000000002020] [0x00000004] ( CPF_Net | CPF_Transient )
	unsigned long                                      bActiveVotingAllowed : 1;                         		// 0x0374 (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	unsigned long                                      bCanLaunchGame : 1;                               		// 0x0374 (0x0004) [0x0000000000002020] [0x00000010] ( CPF_Net | CPF_Transient )
	unsigned long                                      bCanChangeLobbySetting : 1;                       		// 0x0374 (0x0004) [0x0000000000002020] [0x00000020] ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsPasswordProtected : 1;                         		// 0x0374 (0x0004) [0x0000000000002020] [0x00000040] ( CPF_Net | CPF_Transient )
	unsigned long                                      bNextMapVoteRequired : 1;                         		// 0x0374 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	class APBPlayerReplicationInfo*                    pRoomMasterPRI;                                   		// 0x0378 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      eGameMode;                                        		// 0x037C (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FString                                     strGameMode;                                      		// 0x0380 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     strMapName;                                       		// 0x038C (0x000C) [0x0000000000402020]              ( CPF_Net | CPF_Transient | CPF_NeedCtorLink )
	int                                                iMaxPlayers;                                      		// 0x0398 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FName                                       nServerCurrentMapToLoad;                          		// 0x039C (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FName                                       nCurrentMapLoading;                               		// 0x03A4 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeToWaitBeforeCommitSameMap;                   		// 0x03AC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fTimeToWaitBeforeCommit;                          		// 0x03B0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iNextRoundStartTimeRemain;                        		// 0x03B4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iMatchWinner;                                     		// 0x03B8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iInitialMatchRounds;                              		// 0x03BC (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iCurMatchRounds;                                  		// 0x03C0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class APBGameRules*                                pCurrentRules;                                    		// 0x03C4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iTeamsNotReadyTimer;                              		// 0x03C8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                rGameSetupOptionIndex[ 0x8 ];                     		// 0x03CC (0x0020) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FString                                     rNextMapVoteOptions[ 0x64 ];                      		// 0x03EC (0x04B0) [0x0000000000400020]              ( CPF_Net | CPF_NeedCtorLink )
	int                                                iNextMapVoteTimeRemaining;                        		// 0x089C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_Skill
// 0x0008 (0x05C0 - 0x05B8)
class APBKWeapon_Skill : public APBKWeapon
{
public:
	class APBSkill*                                    Skill;                                            		// 0x05B8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bSchedulePutDown : 1;                             		// 0x05BC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAccessControl
// 0x0000 (0x02AC - 0x02AC)
class APBAccessControl : public AAccessControl
{
public:
public:
};

// Class PlanBGame.PBAchievementManager
// 0x00C4 (0x0100 - 0x003C)
class UPBAchievementManager : public UObject
{
public:
	class APlayerController*                           m_Owner;                                          		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bCreateAchievementsRecord : 1;                  		// 0x0040 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bInReading : 1;                                 		// 0x0040 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      m_bInWriting : 1;                                 		// 0x0040 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      m_bLog : 1;                                       		// 0x0040 (0x0004) [0x0000000000006000] [0x00000008] ( CPF_Transient | CPF_Config )
	TArray< class UPBAchievement* >                    m_Achievements;                                   		// 0x0044 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTAchievementEventArray                     m_AchievementEvents[ 0xB ];                       		// 0x0050 (0x0084) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBAchievementList*                          m_AchievementListArchetype;                       		// 0x00D4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FString >                           m_SaveLoadCommands;                               		// 0x00D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_Data;                                           		// 0x00E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m_nMaxClosedID;                                   		// 0x00F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnAchievementEvent__Delegate;                   		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAchievementWinRound
// 0x0000 (0x00AC - 0x00AC)
class UPBAchievementWinRound : public UPBAchievement
{
public:
public:
};

// Class PlanBGame.PBAchievement_DontContribute
// 0x0008 (0x00B4 - 0x00AC)
class UPBAchievement_DontContribute : public UPBAchievementWinRound
{
public:
	int                                                m_nKillsMax;                                      		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nKillsDid;                                      		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBDamageType
// 0x0028 (0x0100 - 0x00D8)
class UPBDamageType : public UPBBaseDamageType
{
public:
	unsigned long                                      bThrowRagdoll : 1;                                		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAlwaysSevers : 1;                                		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bBloodWithCustomHit : 1;                          		// 0x00D8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned char                                      SoundToPlay;                                      		// 0x00DC (0x0001) [0x0000000000000000]              
	float                                              GibPerterbation;                                  		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDeathIconU;                                      		// 0x00E4 (0x0004) [0x0000000000000000]              
	float                                              fDeathIconV;                                      		// 0x00E8 (0x0004) [0x0000000000000000]              
	float                                              fDeathIconUL;                                     		// 0x00EC (0x0004) [0x0000000000000000]              
	float                                              fDeathIconVL;                                     		// 0x00F0 (0x0004) [0x0000000000000000]              
	class UClass*                                      HeadShotDmgType;                                  		// 0x00F4 (0x0004) [0x0000000000000000]              
	class UClass*                                      CustomHitEffect;                                  		// 0x00F8 (0x0004) [0x0000000000000000]              
	float                                              CustomHitDamageThreshold;                         		// 0x00FC (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBCommentatorSystemArc
// 0x0064 (0x00A0 - 0x003C)
class UPBCommentatorSystemArc : public UObject
{
public:
	TArray< struct FGlobalTrackStruct >                GlobalEvents;                                     		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FSafetyBuyTrackStruct >             SafetyBuyEvents;                                  		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FGameModeTrackStruct >              GameModes;                                        		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FLevelTrackStruct >                 Level;                                            		// 0x0060 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FCommentatorTrackInfo >             Advertising;                                      		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FCommentatorTrackInfo >             Story;                                            		// 0x0078 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FCommentatorTrackInfo >             Humor;                                            		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fFillerTimePeriod;                                		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFillerTriggerPercent;                            		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      eDefaultGameModeForSinglePlayer;                  		// 0x0098 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlobalVODelay;                                    		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBInventoryManager
// 0x000C (0x0200 - 0x01F4)
class APBInventoryManager : public AInventoryManager
{
public:
	unsigned long                                      bPendingAim : 1;                                  		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	class AWeapon*                                     PrevCurrentWeapon;                                		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AWeapon*                                     pEquipFirstWeapon;                                		// 0x01FC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBDamageIndicator
// 0x0020 (0x01F8 - 0x01D8)
class APBDamageIndicator : public AActor
{
public:
	float                                              Damage;                                           		// 0x01D8 (0x0004) [0x0000000000000000]              
	struct FVector                                     repulsion;                                        		// 0x01DC (0x000C) [0x0000000000000000]              
	struct FVector                                     ScreenPos;                                        		// 0x01E8 (0x000C) [0x0000000000000000]              
	unsigned long                                      bOnScreen : 1;                                    		// 0x01F4 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBHeatSystemHandler
// 0x0014 (0x01EC - 0x01D8)
class APBHeatSystemHandler : public AReplicationInfo
{
public:
	TArray< struct FPlayerEventInfo >                  rPlayerEventInfo;                                 		// 0x01D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bAllowFirstKill : 1;                              		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	class UPBHeatSystemArc*                            pHeatSystemArc;                                   		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBWeaponStatistics
// 0x0010 (0x004C - 0x003C)
class UPBWeaponStatistics : public UObject
{
public:
	TArray< struct FTPBWeaponStat >                    WeaponStatistics;                                 		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class APBPlayerReplicationInfo*                    PlayerInfo;                                       		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBPlayerStatistics
// 0x0110 (0x014C - 0x003C)
class UPBPlayerStatistics : public UObject
{
public:
	class UPBWeaponStatistics*                         WeaponStatistics;                                 		// 0x003C (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class APBPlayerReplicationInfo*                    PlayerInfo;                                       		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           PlayerEventStrings;                               		// 0x0044 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FString >                           ObjectiveEventStrings;                            		// 0x0050 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                PlayerEvents[ 0x8 ];                              		// 0x005C (0x0020) [0x0000000000002000]              ( CPF_Transient )
	int                                                Objectives[ 0x3 ];                                		// 0x007C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nPlayTime;                                      		// 0x0088 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nStartTime;                                     		// 0x008C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FPBMatchProfileStatData                     mProgression;                                     		// 0x0090 (0x00BC) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBDmgType_HeadShot
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_HeadShot : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBWeaponTarget
// 0x0020 (0x01F8 - 0x01D8)
class APBWeaponTarget : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x01D8 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	float                                              fTargetSize;                                      		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iLastDamage;                                      		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bShowDebugHud : 1;                                		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              fLastDistance;                                    		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     LastTraceLoc;                                     		// 0x01EC (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBRoundHUD
// 0x0193 (0x0638 - 0x04A5)
class APBRoundHUD : public APBHUD
{
public:
	TArray< struct FHUDIcon >                          rHudIcons;                                        		// 0x04A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              fChatMsgLifeTime;                                 		// 0x04B4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              UnitsPerPixel;                                    		// 0x04B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bShowRole : 1;                                    		// 0x04BC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      m_bHudVisible : 1;                                		// 0x04BC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      m_bPrevHeatUpdated : 1;                           		// 0x04BC (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bToggleStaminaDebugHud : 1;                       		// 0x04BC (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bRenderSaturateEffect : 1;                        		// 0x04BC (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bSaturatePostProcessEnabled : 1;                  		// 0x04BC (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bShowNukeVideo : 1;                               		// 0x04BC (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bEnableInstructionVideo_CampaignStarts : 1;       		// 0x04BC (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bEnableInstructionVideo_EnterMortarZone : 1;      		// 0x04BC (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	unsigned long                                      bEnableInstructionVideo_EnterFinalCampaignMap : 1;		// 0x04BC (0x0004) [0x0000000000004000] [0x00000200] ( CPF_Config )
	unsigned long                                      bShowSkillSelectionMenu : 1;                      		// 0x04BC (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bShowTauntSelectionMenu : 1;                      		// 0x04BC (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bPrevShowScoreboard : 1;                          		// 0x04BC (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bShowingCommcenter : 1;                           		// 0x04BC (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bShowingSNDMinigame : 1;                          		// 0x04BC (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bConsolidatedLobbyShown : 1;                      		// 0x04BC (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      bRewardStatsReady : 1;                            		// 0x04BC (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bShowMortarMinimap : 1;                           		// 0x04BC (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bRightClickToCloseMortar : 1;                     		// 0x04BC (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      bHasPremium : 1;                                  		// 0x04BC (0x0004) [0x0000000000002000] [0x00080000] ( CPF_Transient )
	TArray< struct FIconInfo >                         IconInfoTable;                                    		// 0x04C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class USwfMovie*                                   HudSwfMovie;                                      		// 0x04CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USwfMovie*                                   LobbySwfMovie;                                    		// 0x04D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USwfMovie*                                   TVTransitionMovie;                                		// 0x04D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USwfMovie*                                   SafetyBuyMovie;                                   		// 0x04D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USwfMovie*                                   DeathCameraMovie;                                 		// 0x04DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FMsgHudInfo                                 DeathHudInfoTable;                                		// 0x04E0 (0x0010) [0x0000000000000000]              
	float                                              DeathInfoScreenSize;                              		// 0x04F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cDefaultWarningColor;                             		// 0x04F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cDefaultBlinkColor;                               		// 0x04F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cHealthDecreaseColor;                             		// 0x04FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBlinkSpeed;                                      		// 0x0500 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCurBlinkPercent;                                 		// 0x0504 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      cCheatColor;                                      		// 0x0508 (0x0004) [0x0000000000000000]              
	struct FColor                                      cDefaultColor;                                    		// 0x050C (0x0004) [0x0000000000000000]              
	struct FColor                                      cRadioColor;                                      		// 0x0510 (0x0004) [0x0000000000000000]              
	struct FColor                                      cFrameColor;                                      		// 0x0514 (0x0004) [0x0000000000000000]              
	float                                              fMapAlpha;                                        		// 0x0518 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMapMaxAlpha;                                     		// 0x051C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMapSize;                                         		// 0x0520 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRedMarkerAlphaModifier;                          		// 0x0524 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WeaponChangeFailedSoundCue;                       		// 0x0528 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RefreshScannerTime;                               		// 0x052C (0x0004) [0x0000000000000000]              
	float                                              DotSize;                                          		// 0x0530 (0x0004) [0x0000000000000000]              
	TArray< struct FObjectivesHUDInfo >                ObjectivesTable;                                  		// 0x0534 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UMaterial*                                   SaturateMaterial;                                 		// 0x0540 (0x0004) [0x0000000000000000]              
	class UMaterialInstanceConstant*                   GMaterialRadar;                                   		// 0x0544 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   HUDSliderMatInstance;                             		// 0x0548 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   GMaterialPointer;                                 		// 0x054C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   HelicoButton;                                     		// 0x0550 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBGFxMoviePlayer_ProgressionScene*          sfProgressionScene;                               		// 0x0554 (0x0004) [0x0000000000000000]              
	struct FVector2D                                   vSkillSelection;                                  		// 0x0558 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                iSkillSelection;                                  		// 0x0560 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iInitialSkillSelection;                           		// 0x0564 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSkillSelectionSensitivity;                       		// 0x0568 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fSkillNoSelectionSize;                            		// 0x056C (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FVector2D                                   vTauntSelection;                                  		// 0x0570 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                iTauntSelection;                                  		// 0x0578 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iInitialTauntSelection;                           		// 0x057C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTauntSelectionSensitivity;                       		// 0x0580 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fTauntNoSelectionSize;                            		// 0x0584 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FTHChatMessage >                    chatMessageHist;                                  		// 0x0588 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                lastChatMessageHistID;                            		// 0x0594 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iFinalHeat;                                       		// 0x0598 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iBaseHeat;                                        		// 0x059C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMatchBonusHeat;                                  		// 0x05A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fStyleMod;                                        		// 0x05A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMaxPossibleHeat;                                 		// 0x05A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iFansUnboosted;                                   		// 0x05AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iFansBoosted;                                     		// 0x05B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iFansTotal;                                       		// 0x05B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iFansGroup;                                       		// 0x05B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iIGCUnboosted;                                    		// 0x05BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iIGCBoosted;                                      		// 0x05C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iIGCTotal;                                        		// 0x05C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iIGCGroup;                                        		// 0x05C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCurFameLevel;                                    		// 0x05CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNewFameLevel;                                    		// 0x05D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMortarMasterLevel;                               		// 0x05D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      eVoteType;                                        		// 0x05D8 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      storedHudState;                                   		// 0x05D9 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      storedHudGameMode;                                		// 0x05DA (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     sVoteTarget;                                      		// 0x05DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mBoosterSubscriptionsXP;                          		// 0x05E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mBoosterSubscriptionsIGC;                         		// 0x05EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FHUDBoosterInfo >                   boostersData;                                     		// 0x05F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBOffer >                          m_UnlockedItems;                                  		// 0x05FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UMaterialInstanceConstant*                   pRefFlashBangMaterial;                            		// 0x0608 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialEffect*                             pFlashBangMatEffect;                              		// 0x060C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pRefScopeMaterial;                                		// 0x0610 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialEffect*                             pScopeMatEffect;                                  		// 0x0614 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pRefDamageIndicatorMaterial;                      		// 0x0618 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialEffect*                             pDamageIndMatEffect;                              		// 0x061C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pRefBerserkMaterial;                              		// 0x0620 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialEffect*                             pBerserkMatEffect;                                		// 0x0624 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pCrosshairMI;                                     		// 0x0628 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pCrosshairCenterMI;                               		// 0x062C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   pCrosshairEnemyHitMI;                             		// 0x0630 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              lastWarningPlayed;                                		// 0x0634 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBKActorDestructible
// 0x0074 (0x0388 - 0x0314)
class APBKActorDestructible : public APBKActor
{
public:
	unsigned char                                      impacttype;                                       		// 0x0314 (0x0001) [0x0000000000000000]              
	unsigned char                                      ImpactType_RigidBodyCollision;                    		// 0x0315 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      nExplosionEffectsTrigger;                         		// 0x0316 (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      nExplosionEffectsTrigger_Local;                   		// 0x0317 (0x0001) [0x0000000000000000]              
	float                                              LastCollisionEffectTime;                          		// 0x0318 (0x0004) [0x0000000000000000]              
	float                                              LastAudioEffectTime;                              		// 0x031C (0x0004) [0x0000000000000000]              
	float                                              CollisionParticleEffectIntervalSecs;              		// 0x0320 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UEngine*                                     TheEngine;                                        		// 0x0324 (0x0004) [0x0000000000000000]              
	class UPhysicalMaterial*                           forceLoadMaterial0;                               		// 0x0328 (0x0004) [0x0000000000000000]              
	class UPhysicalMaterial*                           forceLoadMaterial1;                               		// 0x032C (0x0004) [0x0000000000000000]              
	class UPhysicalMaterial*                           forceLoadMaterial2;                               		// 0x0330 (0x0004) [0x0000000000000000]              
	class UPhysicalMaterial*                           forceLoadMaterial3;                               		// 0x0334 (0x0004) [0x0000000000000000]              
	int                                                ExplodesOnDamage;                                 		// 0x0338 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Damage;                                           		// 0x033C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageRadius;                                     		// 0x0340 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MomentumTransfer;                                 		// 0x0344 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      MyDamageType;                                     		// 0x0348 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExplosionInfo                              ExplosionFX;                                      		// 0x034C (0x0020) [0x0000000000080001]              ( CPF_Edit | CPF_Component )
	class AEmitter*                                    ExplosionEffect;                                  		// 0x036C (0x0004) [0x0000000000000000]              
	struct FSWeaponCode                                iWeaponCode;                                      		// 0x0370 (0x000C) [0x0000000000000000]              
	class AController*                                 InstigatorController;                             		// 0x037C (0x0004) [0x0000000000000000]              
	class AActor*                                      ImpactedActor;                                    		// 0x0380 (0x0004) [0x0000000000000000]              
	unsigned long                                      bHasBeenBlownup : 1;                              		// 0x0384 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bTimedExplosionEffect : 1;                        		// 0x0384 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBProjectile
// 0x003C (0x03C4 - 0x0388)
class APBProjectile : public APBKActorDestructible
{
public:
	unsigned long                                      bBegunPlay : 1;                                   		// 0x0388 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bWaitForEffects : 1;                              		// 0x0388 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCreateProjectileLight : 1;                       		// 0x0388 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class UParticleSystemComponent*                    ProjEffects;                                      		// 0x038C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             ProjFlightTemplate;                               		// 0x0390 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             Ambient;                                          		// 0x0394 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UClass*                                      ProjectileLightClass;                             		// 0x0398 (0x0004) [0x0000000000000000]              
	class UPBExplosionLight*                           ProjectileLight;                                  		// 0x039C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< struct FLightValues >                      LightTimeShift;                                   		// 0x03A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LightBrightness;                                  		// 0x03AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightRadius;                                      		// 0x03B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      LightColor;                                       		// 0x03B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FSWeaponCode                                iFiredFromWeaponCode;                             		// 0x03B8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBProj_Explosive
// 0x0004 (0x03C8 - 0x03C4)
class APBProj_Explosive : public APBProjectile
{
public:
	unsigned long                                      bSuppressExplosionFX : 1;                         		// 0x03C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class PlanBGame.PBProj_Grenade
// 0x00A4 (0x046C - 0x03C8)
class APBProj_Grenade : public APBProj_Explosive
{
public:
	class APBKWeaponGlobals*                           pGlobals;                                         		// 0x03C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fEffectiveRadius;                                 		// 0x03CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxRadius;                                       		// 0x03D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEffectiveDamage;                                 		// 0x03D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisablePhysicsWhenStationary : 1;                		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDisablePhysicsWhenBlowup : 1;                    		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bHideModelAfterExplosion : 1;                     		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bDestroyAfterParticleSystemFinish : 1;            		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bBlowupWhenStationary : 1;                        		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bBlowupOnImpact : 1;                              		// 0x03D8 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNotifyExplosion : 1;                             		// 0x03D8 (0x0004) [0x0000000000002020] [0x00000040] ( CPF_Net | CPF_Transient )
	unsigned long                                      bInWater : 1;                                     		// 0x03D8 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bWantsToExplode : 1;                              		// 0x03D8 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bCanExplode : 1;                                  		// 0x03D8 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bActivated : 1;                                   		// 0x03D8 (0x0004) [0x0000000000002020] [0x00000400] ( CPF_Net | CPF_Transient )
	unsigned long                                      bUntouchedSpawnVolumes : 1;                       		// 0x03D8 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bExploded : 1;                                    		// 0x03D8 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bThrown : 1;                                      		// 0x03D8 (0x0004) [0x0000000000002020] [0x00002000] ( CPF_Net | CPF_Transient )
	struct FVector                                     vInitialAngularVel;                               		// 0x03DC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fActivationTimer;                                 		// 0x03E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMesh*                                 pSwitchToMeshAfterExplosion;                      		// 0x03EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pSwitchToMatAfterExplosion;                       		// 0x03F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    GrenadeTrail;                                     		// 0x03F4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             AfterBurnPariclesTemplate;                        		// 0x03F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxTimeBeforeBlowup;                             		// 0x03FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinTimeBeforeBlowup;                             		// 0x0400 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDestroyAfterBlowTime;                            		// 0x0404 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNumPulsesBeforeBlowup;                           		// 0x0408 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExplosionInfo                              ExplosionNormalFx;                                		// 0x040C (0x0020) [0x0000000000080001]              ( CPF_Edit | CPF_Component )
	struct FExplosionInfo                              ExplosionInWaterFx;                               		// 0x042C (0x0020) [0x0000000000080001]              ( CPF_Edit | CPF_Component )
	class UStaticMeshComponent*                        pProjMeshComp;                                    		// 0x044C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	float                                              EnterWaterLocationZ;                              		// 0x0450 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AEmitter*                                    projExplosion;                                    		// 0x0454 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBSpawnVolumeTDM* >                 spawnVolumes;                                     		// 0x0458 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UPBMinimapDrawer_Grenade*                    mMinimapDrawer;                                   		// 0x0464 (0x0004) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	class AActor*                                      lastHit;                                          		// 0x0468 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBPlayerInput
// 0x0010 (0x0268 - 0x0258)
class UPBPlayerInput : public UPlayerInput
{
public:
	float                                              LastDuckTime;                                     		// 0x0258 (0x0004) [0x0000000000000000]              
	unsigned long                                      bHoldDuck : 1;                                    		// 0x025C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bHoldJump : 1;                                    		// 0x025C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bProfanityFilter : 1;                             		// 0x025C (0x0004) [0x0000000000044000] [0x00000004] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bToggleAimInput : 1;                              		// 0x025C (0x0004) [0x0000000000044000] [0x00000008] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bViewAccelEnabled : 1;                            		// 0x025C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	float                                              YawAccelThreshold;                                		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastTurnTime;                                     		// 0x0264 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBBulletDamageType
// 0x0000 (0x0100 - 0x0100)
class UPBBulletDamageType : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_M4A1
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_M4A1 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBAchievement_FastReloader
// 0x000C (0x00B8 - 0x00AC)
class UPBAchievement_FastReloader : public UPBAchievementWinRound
{
public:
	int                                                m_nReloadsCount;                                  		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nReloadsDone;                                   		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bWon : 1;                                       		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bFail : 1;                                      		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_GloriousReturn
// 0x0010 (0x00BC - 0x00AC)
class UPBAchievement_GloriousReturn : public UPBAchievementWinRound
{
public:
	int                                                m_nLooseCount;                                    		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nWinCount;                                      		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nLooseLeft;                                     		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nWinLeft;                                       		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBCGGameReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBCGGameReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBAchievement_InvincibleBunch
// 0x0008 (0x00B4 - 0x00AC)
class UPBAchievement_InvincibleBunch : public UPBAchievementWinRound
{
public:
	int                                                m_nMaxTeammatesKilled;                            		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nTeammatesKilled;                               		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievementKilledByWeapon
// 0x0014 (0x00C0 - 0x00AC)
class UPBAchievementKilledByWeapon : public UPBAchievementWinRound
{
public:
	struct FString                                     m_sWeaponName;                                    		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                m_nKillsToComplete;                               		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nKillsDone;                                     		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_KillerQueen
// 0x0001 (0x00C1 - 0x00C0)
class UPBAchievement_KillerQueen : public UPBAchievementKilledByWeapon
{
public:
	unsigned char                                      m_eGameMode;                                      		// 0x00C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAchievement_LastSecond
// 0x0008 (0x00B4 - 0x00AC)
class UPBAchievement_LastSecond : public UPBAchievementWinRound
{
public:
	unsigned long                                      m_bFinished : 1;                                  		// 0x00AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bFailed : 1;                                    		// 0x00AC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	int                                                m_nLastSeconds;                                   		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAchievement_MeanFreak
// 0x0010 (0x00BC - 0x00AC)
class UPBAchievement_MeanFreak : public UPBAchievementWinRound
{
public:
	struct FString                                     m_sWeaponName;                                    		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      m_bFinished : 1;                                  		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_MortalMortar
// 0x0000 (0x00C0 - 0x00C0)
class UPBAchievement_MortalMortar : public UPBAchievementKilledByWeapon
{
public:
public:
};

// Class PlanBGame.PBAchievement_MrNiceGuy
// 0x0008 (0x00B4 - 0x00AC)
class UPBAchievement_MrNiceGuy : public UPBAchievement
{
public:
	int                                                m_nBuddyCount;                                    		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nBuddyAdded;                                    		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_MrPostman
// 0x0008 (0x00B4 - 0x00AC)
class UPBAchievement_MrPostman : public UPBAchievement
{
public:
	int                                                m_nBuddyMessageCount;                             		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nBuddyMessageSent;                              		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_ReloadPunisher
// 0x0000 (0x00C0 - 0x00C0)
class UPBAchievement_ReloadPunisher : public UPBAchievementKilledByWeapon
{
public:
public:
};

// Class PlanBGame.PBAchievement_TerroristDomination
// 0x0004 (0x00B0 - 0x00AC)
class UPBAchievement_TerroristDomination : public UPBAchievementWinRound
{
public:
	unsigned long                                      m_bFinished : 1;                                  		// 0x00AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_Unscathed
// 0x000C (0x00B8 - 0x00AC)
class UPBAchievement_Unscathed : public UPBAchievementWinRound
{
public:
	int                                                m_nMaxKilled;                                     		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                m_nKilled;                                        		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bFinished : 1;                                  		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAchievement_Variete
// 0x0010 (0x00BC - 0x00AC)
class UPBAchievement_Variete : public UPBAchievementWinRound
{
public:
	int                                                m_nWeaponsCount;                                  		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FString >                           m_sWeapons;                                       		// 0x00B0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAchievementListLimiter
// 0x0018 (0x0054 - 0x003C)
class UPBAchievementListLimiter : public UPBChoiseLimiter
{
public:
	int                                                m_nCategory;                                      		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerController*                         m_pOwner;                                         		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCount;                                         		// 0x0044 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UPBAchievement* >                    m_Achievements;                                   		// 0x0048 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSkillsList
// 0x0030 (0x006C - 0x003C)
class UPBSkillsList : public UObject
{
public:
	class UPBSkillsList*                               pSkillsListArchetype;                             		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBSkill* >                          rSkills;                                          		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class APBSkill* >                          rDirectDefaultSkills;                             		// 0x004C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBTierInfo >                       rTiers;                                           		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fEnergyDrainRate;                                 		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEnergyDrainTimeOut;                              		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBDamagerDevice
// 0x000C (0x01E4 - 0x01D8)
class APBDamagerDevice : public AActor
{
public:
	class APBPlayerController*                         DeviceOwnerController;                            		// 0x01D8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBCharacter*                                DeviceOwnerCharacter;                             		// 0x01DC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              DeathCameraHeightFromCenter;                      		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSkill_TurretWeapon
// 0x01A4 (0x0388 - 0x01E4)
class APBSkill_TurretWeapon : public APBDamagerDevice
{
public:
	class USkeletalMeshComponent*                      pBaseTurret;                                      		// 0x01E4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      pTopTurret;                                       		// 0x01E8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x01EC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pCommonSoundComp;                                 		// 0x01F0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pAlwaysOnSoundComp;                               		// 0x01F4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pFiringSoundComp;                                 		// 0x01F8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pLaserComp;                                       		// 0x01FC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pMuzzleFlashComp;                                 		// 0x0200 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pHealingParticleComp;                             		// 0x0204 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        AutoRepairMeshComp;                               		// 0x0208 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        ScannerBaseMeshComp;                              		// 0x020C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        ScannerTopMeshComp;                               		// 0x0210 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              fInitializingSoundFadeIn;                         		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInitializingSoundFadeOut;                        		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pInitializingSoundLoop;                           		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pWarmupSoundCue;                                  		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pIdleSoundCue;                                    		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pFiringSoundCue;                                  		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pEndFiringCue;                                    		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pFriendlyMaterialInstance;                        		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pEnemyMaterialInstance;                           		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTracerSpawnTimer;                                		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScannerRotateYawSpeed;                           		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pTracerParticleSystem;                            		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pMuzzleFlashPS;                                   		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             BreakingPS;                                       		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             LaserPS;                                          		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BaseTurretAttachBoneName;                         		// 0x0250 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MuzzleFlashSocketName;                            		// 0x0258 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LaserSocketName;                                  		// 0x0260 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AutoRepairSocketName;                             		// 0x0268 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ScannerStaticSocketName;                          		// 0x0270 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ScannerDynamicSocketName;                         		// 0x0278 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ShootSocketName;                                  		// 0x0280 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fStartTraceHeight;                                		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRegenHealthPerSecond;                            		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxBulletRange;                                  		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fUpFOV;                                           		// 0x0294 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDownFOV;                                         		// 0x0298 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCharacterHeightCompensation;                     		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurretHeightCompensation;                        		// 0x02A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bShouldDestroyAllPreviouslyPlacedTurrets : 1;     		// 0x02A4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCanTargetTurrets : 1;                            		// 0x02A4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLaserActive : 1;                                 		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bInitialized : 1;                                 		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bRegenEffectsActive : 1;                          		// 0x02A4 (0x0004) [0x0000000000002020] [0x00000010] ( CPF_Net | CPF_Transient )
	unsigned long                                      bScanActive : 1;                                  		// 0x02A4 (0x0004) [0x0000000000002020] [0x00000020] ( CPF_Net | CPF_Transient )
	unsigned long                                      bRegenImprovement : 1;                            		// 0x02A4 (0x0004) [0x0000000000002020] [0x00000040] ( CPF_Net | CPF_Transient )
	unsigned long                                      bScanImprovement : 1;                             		// 0x02A4 (0x0004) [0x0000000000002020] [0x00000080] ( CPF_Net | CPF_Transient )
	unsigned long                                      bHeadcrabbed : 1;                                 		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	float                                              fScanTimer;                                       		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fScanRange;                                       		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireRate;                                        		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurretRotSpeed;                                  		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CharacterShootAtBoneName;                         		// 0x02B8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRangeDmgInfo >                     rRangeDmg;                                        		// 0x02C0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FName                                       InitializingAnimName;                             		// 0x02CC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       FiringAnimName;                                   		// 0x02D4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       IdleAnimName;                                     		// 0x02DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       DestroyedAnimName;                                		// 0x02E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDestroyTimer;                                    		// 0x02EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilTurretStopsFiring;                      		// 0x02F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRegenStartAfterActivityTime;                     		// 0x02F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWarmupTime;                                      		// 0x02F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTrackingTimer;                                   		// 0x02FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iDamagePerBullet;                                 		// 0x0300 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fYawFOV;                                          		// 0x0304 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              fInitializingTime;                                		// 0x0308 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTargetTurretYaw;                                 		// 0x030C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTargetTurretPitch;                               		// 0x0310 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentTurretYaw;                                		// 0x0314 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentTurretPitch;                              		// 0x0318 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fAggressionRange;                                 		// 0x031C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAttackRange;                                     		// 0x0320 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEffectiveRange;                                  		// 0x0324 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iTargetTeam;                                      		// 0x0328 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fLifeTime;                                        		// 0x032C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLifeTimeDefault;                                 		// 0x0330 (0x0004) [0x0000000000000000]              
	float                                              fHitPoints;                                       		// 0x0334 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCurrentHitPoints;                                		// 0x0338 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iReplicatedHealth;                                		// 0x033C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iReplicatedHitPoints;                             		// 0x0340 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              ScanRadius;                                       		// 0x0344 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMasterLevel;                                     		// 0x0348 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      TargetActor;                                      		// 0x034C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fLastActivityTime;                                		// 0x0350 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       targetStateName;                                  		// 0x0354 (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APlayerReplicationInfo*                      OwnerPRI;                                         		// 0x035C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     vHitLocation;                                     		// 0x0360 (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FSWeaponCode                                SkillWeaponCode;                                  		// 0x036C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fInteractTime;                                    		// 0x0378 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     indicatorOffset;                                  		// 0x037C (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBActorFactoryDestructibleStaticActor
// 0x0000 (0x006C - 0x006C)
class UPBActorFactoryDestructibleStaticActor : public UActorFactoryStaticMesh
{
public:
public:
};

// Class PlanBGame.PBActorFactoryDynamicSkeletalMeshActor
// 0x0000 (0x006C - 0x006C)
class UPBActorFactoryDynamicSkeletalMeshActor : public UActorFactorySkeletalMesh
{
public:
public:
};

// Class PlanBGame.PBDynamicSkeletalMeshActor
// 0x0000 (0x0218 - 0x0218)
class APBDynamicSkeletalMeshActor : public ASkeletalMeshActor
{
public:
public:
};

// Class PlanBGame.PBActorFactoryDynamicSMActor
// 0x0000 (0x006C - 0x006C)
class UPBActorFactoryDynamicSMActor : public UActorFactoryStaticMesh
{
public:
public:
};

// Class PlanBGame.PBDynamicSMActor
// 0x0000 (0x01E0 - 0x01E0)
class APBDynamicSMActor : public AStaticMeshActor
{
public:
public:
};

// Class PlanBGame.PBActorFactoryRigidBodyDestructible
// 0x0000 (0x0098 - 0x0098)
class UPBActorFactoryRigidBodyDestructible : public UActorFactoryRigidBody
{
public:
public:
};

// Class PlanBGame.PBActorFactoryStaticMeshDestructible
// 0x0000 (0x006C - 0x006C)
class UPBActorFactoryStaticMeshDestructible : public UActorFactoryStaticMesh
{
public:
public:
};

// Class PlanBGame.PBDmgType_ChangeTeam
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_ChangeTeam : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBPawnSoundGroup
// 0x0040 (0x007C - 0x003C)
class UPBPawnSoundGroup : public UObject
{
public:
	class USoundCue*                                   DodgeSound;                                       		// 0x003C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   DoubleJumpSound;                                  		// 0x0040 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   JumpSound;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   LandSound;                                        		// 0x0048 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   DoubleLandSound;                                  		// 0x004C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   DyingSound;                                       		// 0x0050 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   IAmHitSound;                                      		// 0x0054 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   SniperHitSound;                                   		// 0x0058 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   ReloadSound;                                      		// 0x005C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   KillSound;                                        		// 0x0060 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   SpotSound;                                        		// 0x0064 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   ThrowGrenadeSound;                                		// 0x0068 (0x0004) [0x0000000000000000]              
	TArray< struct FFootstepSoundInfo >                FootstepSounds;                                   		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class USoundCue*                                   DefaultFootstepSound;                             		// 0x0078 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBLocalMessage
// 0x0010 (0x0060 - 0x0050)
class UPBLocalMessage : public ULocalMessage
{
public:
	TArray< struct FTextVoiceMsg >                     AMsg;                                             		// 0x0050 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned long                                      bTeamMessage : 1;                                 		// 0x005C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAutoVoiceMessage : 1;                            		// 0x005C (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBVoiceOverList
// 0x0078 (0x00B4 - 0x003C)
class UPBVoiceOverList : public UObject
{
public:
	float                                              fRadioMessageDelay;                               		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRadioMessageBatchDelay;                          		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iRadioMessageBatchMaxAmount;                      		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     sRadioPrefix;                                     		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBVoiceOverInfo >                  rAutomaticVoiceOvers;                             		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBVoiceOverInfo >                  rRadioMessages;                                   		// 0x0060 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBRadioCommandGroup >              rRadioCommands;                                   		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USoundCue*                                   pReceiver1PSoundCue;                              		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pReceiver3PSoundCue;                              		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pSender1PSoundCue;                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSafetyBuyCrowdFadeInTime;                        		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSafetyBuyCrowdFadeOutTime;                       		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SafetyBuyCrowdLoop;                               		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iStartingSecondForTickVolumeIncrease;             		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinimumTickVolumeMultiplier;                     		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SafetyBuyCrowdExcitedOneShot;                     		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   TickingSoundCue;                                  		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FinalTickingSoundCue;                             		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPBTakeHitSoundInfo >               rPainSounds;                                      		// 0x00A4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBVoiceOverList*                            pVoiceoverListArchetype;                          		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBImpactFootstepData
// 0x0006 (0x0042 - 0x003C)
class UPBImpactFootstepData : public UObject
{
public:
	unsigned char                                      FootstepArray[ 0x6 ];                             		// 0x003C (0x0006) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBObjectiveVolume
// 0x0004 (0x0218 - 0x0214)
class APBObjectiveVolume : public AVolume
{
public:
	class APBGameObjectiveByVolume*                    ObjectiveOwner;                                   		// 0x0214 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBKWeapon_Akimbo
// 0x0010 (0x05D0 - 0x05C0)
class APBKWeapon_Akimbo : public APBKWeapon_Skill
{
public:
	float                                              currentFOVAlpha;                                  		// 0x05C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SlideFOV;                                         		// 0x05C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SlideWeaponFOV;                                   		// 0x05C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SlideFOVChangeSpeed;                              		// 0x05CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_Berserk
// 0x0014 (0x05D4 - 0x05C0)
class APBKWeapon_Berserk : public APBKWeapon_Skill
{
public:
	unsigned long                                      bEffectCancelled : 1;                             		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      b1PBerserkEffectActive : 1;                       		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              currentFOVAlpha;                                  		// 0x05C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ChargeFOV;                                        		// 0x05C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ChargeWeaponFOV;                                  		// 0x05CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ChargeFOVChangeSpeed;                             		// 0x05D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_GattlingGun
// 0x0008 (0x05C8 - 0x05C0)
class APBKWeapon_GattlingGun : public APBKWeapon_Skill
{
public:
	unsigned long                                      bWeaponChangePending : 1;                         		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsSpinning : 1;                                  		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bFirePending : 1;                                 		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	float                                              fSpinPerc;                                        		// 0x05C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_HeadCrab
// 0x0001 (0x05C1 - 0x05C0)
class APBKWeapon_HeadCrab : public APBKWeapon_Skill
{
public:
	unsigned char                                      DeployMode;                                       		// 0x05C0 (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_PPlane
// 0x0000 (0x05C0 - 0x05C0)
class APBKWeapon_PPlane : public APBKWeapon_Skill
{
public:
public:
};

// Class PlanBGame.PBDmgType_Suicided
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Suicided : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Fell
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Fell : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Mortar
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Mortar : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Turret
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Turret : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Explosion
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Explosion : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBSkill_HeadCrabActor
// 0x00DC (0x05BC - 0x04E0)
class APBSkill_HeadCrabActor : public APBActorController
{
public:
	float                                              AttackDistance;                                   		// 0x04E0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              ActivatedLifeTime;                                		// 0x04E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      CurAnim;                                          		// 0x04E8 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       CurrentState;                                     		// 0x04EC (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bJumpEnabled : 1;                                 		// 0x04F4 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      bCanAttachToTurrets : 1;                          		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bDelayReleaseControl : 1;                         		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bAligningToCamera : 1;                            		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bFirstCameraView : 1;                             		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bSwitchToPDAPending : 1;                          		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bSkipExplosionEffect : 1;                         		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bStopAutoMovement : 1;                            		// 0x04F4 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	class APBSkill_HeadCrab*                           SkillArchetype;                                   		// 0x04F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                TargetTeam;                                       		// 0x04FC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class AActor*                                      TargetEnemyActor;                                 		// 0x0500 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     CameraStartLocation;                              		// 0x0504 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    CameraStartRotation;                              		// 0x0510 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              AlignTimeLeft;                                    		// 0x051C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              AlignTimeMax;                                     		// 0x0520 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              StopAutoMovementAngle;                            		// 0x0524 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< class APBCharacter* >                      MakeInvisible;                                    		// 0x0528 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FVector                                     vCameraPosAtJump;                                 		// 0x0534 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerController*                         TargetEnemyController;                            		// 0x0540 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vStartJumpPosition;                               		// 0x0544 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentJumpTime;                                 		// 0x0550 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USkeletalMeshComponent*                      pSkelMesh;                                        		// 0x0554 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pHeadCrabLoopAC;                                  		// 0x0558 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pHeadCrabAttackAC;                                		// 0x055C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             BreakingPS;                                       		// 0x0560 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fBreakingPSScale;                                 		// 0x0564 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x0568 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInterface*                          pFriendlyMaterialInstance;                        		// 0x056C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pEnemyMaterialInstance;                           		// 0x0570 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vCameraFocusOffset;                               		// 0x0574 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCameraDistanceFromLocation;                      		// 0x0580 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinPitchAngle;                                   		// 0x0584 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxPitchAngle;                                   		// 0x0588 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fCameraBackwardSpeed;                             		// 0x058C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTargetCamDistance;                               		// 0x0590 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentCamDistance;                              		// 0x0594 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMinCamDistance;                                  		// 0x0598 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fJumpToEnemyTime;                                 		// 0x059C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FinalAttachedScale;                               		// 0x05A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeToReleaseControlWhenGrab;                    		// 0x05A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilDestroyAfterDeath;                      		// 0x05A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilReleaseControlAfterDeath;               		// 0x05AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   WalkingLoopingSound;                              		// 0x05B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   Attack1pSound;                                    		// 0x05B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   Attack3pSound;                                    		// 0x05B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBLadderVolume
// 0x0008 (0x02BC - 0x02B4)
class APBLadderVolume : public ALadderVolume
{
public:
	float                                              JumpStrength;                                     		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              JumpSideStrength;                                 		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBGameRules_TDM
// 0x0028 (0x02A4 - 0x027C)
class APBGameRules_TDM : public APBGameRules
{
public:
	float                                              WinPctSmall;                                      		// 0x027C (0x0004) [0x0000000000000000]              
	float                                              WinPctMed;                                        		// 0x0280 (0x0004) [0x0000000000000000]              
	int                                                iChestSpawnTDMFrequency;                          		// 0x0284 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                iChestSpawnTDMChance;                             		// 0x0288 (0x0004) [0x0000000000004000]              ( CPF_Config )
	unsigned long                                      ChestSpawnTDMDone : 1;                            		// 0x028C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	int                                                TDMChestNumber0;                                  		// 0x0290 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                TDMChestThreshold1;                               		// 0x0294 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                TDMChestNumber1;                                  		// 0x0298 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                TDMChestThreshold2;                               		// 0x029C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                TDMChestNumber2;                                  		// 0x02A0 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class PlanBGame.PBVoteList
// 0x0010 (0x004C - 0x003C)
class UPBVoteList : public UObject
{
public:
	class UPBVoteList*                                 pVoteListArchetype;                               		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBVoteEvent >                      VoteEvents;                                       		// 0x0040 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxMoviePlayer_SNDMinigame
// 0x003C (0x01C0 - 0x0184)
class UPBGFxMoviePlayer_SNDMinigame : public UPBGFxMoviePlayer_Tickable
{
public:
	class UGFxObject*                                  mMinigame;                                        		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMinigameTime;                                    		// 0x0188 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fHitZoneDuration;                                 		// 0x018C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fWinBonusInterval;                                		// 0x0190 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numHitZones;                                      		// 0x0194 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FhitZoneInfo >                      fHitZoneTimes;                                    		// 0x0198 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                numAttempts;                                      		// 0x01A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numFailures;                                      		// 0x01A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numSuccesses;                                     		// 0x01AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              minigameStartTime;                                		// 0x01B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bMinigameResultsSent : 1;                         		// 0x01B4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bMouseButtonVisible : 1;                          		// 0x01B4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class USoundCue*                                   soundSuccess;                                     		// 0x01B8 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   soundFail;                                        		// 0x01BC (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGFxMoviePlayer_NextMapVote
// 0x002C (0x01B0 - 0x0184)
class UPBGFxMoviePlayer_NextMapVote : public UPBGFxMoviePlayer_Tickable
{
public:
	class UGFxObject*                                  mOptionsContainer;                                		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UGFxObject* >                        mOptions;                                         		// 0x0188 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      rCurrentVotes;                                    		// 0x0194 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bIsDirty : 1;                                     		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbFirstUpdate : 1;                                		// 0x01A0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	struct FScriptDelegate                             __OnOptionSelected__Delegate;                     		// 0x01A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HalfTime_Base
// 0x0000 (0x00A0 - 0x00A0)
class UPBGFxObject_HalfTime_Base : public UPBGFxObject_ContainerBased
{
public:
public:
};

// Class PlanBGame.PBGDR_TeamBase
// 0x0044 (0x021C - 0x01D8)
class APBGDR_TeamBase : public AActor
{
public:
	class USpriteComponent*                            GoodSprite;                                       		// 0x01D8 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	int                                                ownerTeam;                                        		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DefaultHP;                                        		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HPIncrease;                                       		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMeshComponent*                      BaseSkeletalMesh;                                 		// 0x01E8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMesh*                               BaseDefaultMesh;                                  		// 0x01EC (0x0004) [0x0000000000000000]              
	TArray< struct FBaseStage >                        Stages;                                           		// 0x01F0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      BaseHealthPercent;                                		// 0x01FC (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      replicateStateId;                                 		// 0x01FD (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                NumTimesBaseDestroyed;                            		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             stateNames;                                       		// 0x0204 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                startingHealth;                                   		// 0x0210 (0x0004) [0x0000000000000000]              
	int                                                currentHealth;                                    		// 0x0214 (0x0004) [0x0000000000000000]              
	int                                                actualStage;                                      		// 0x0218 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGameRules_GDR
// 0x0025 (0x02A1 - 0x027C)
class APBGameRules_GDR : public APBGameRules
{
public:
	class UClass*                                      GiantRobotClass;                                  		// 0x027C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBGDR_GiantRobot*                           pCurrentRobot;                                    		// 0x0280 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_TeamBase*                             TeamABase;                                        		// 0x0284 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_TeamBase*                             TeamBBase;                                        		// 0x0288 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< class APBGDR_BlockingGateActor* >          rAllBlockingGates;                                		// 0x028C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBGDR_TeamBase*                             DefendingBase;                                    		// 0x0298 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_CaptureObjective*                     CaptureObjective;                                 		// 0x029C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RoundState;                                       		// 0x02A0 (0x0001) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class PlanBGame.PBGDR_CaptureObjective
// 0x0038 (0x0334 - 0x02FC)
class APBGDR_CaptureObjective : public APBGameObjectiveByVolume
{
public:
	float                                              ControlObjective;                                 		// 0x02FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecaySpeed;                                       		// 0x0300 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< int >                                      PointsPerPlayers;                                 		// 0x0304 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class APBPawn* >                           TeamAPlayers;                                     		// 0x0310 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBPawn* >                           TeamBPlayers;                                     		// 0x031C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              ControlAmt;                                       		// 0x0328 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      TeamA;                                            		// 0x032C (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      TeamB;                                            		// 0x032D (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RepControlPercent;                                		// 0x032E (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bIsLocalPlayerInside : 1;                         		// 0x0330 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBGDR_GiantRobot
// 0x0130 (0x0308 - 0x01D8)
class APBGDR_GiantRobot : public AActor
{
public:
	class USkeletalMeshComponent*                      pRobotRightTread;                                 		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      pRobotLeftTread;                                  		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      pRobotHeadPart;                                   		// 0x01E0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMeshComponent*                      pRobotBodyPart;                                   		// 0x01E4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pTreadSoundComp;                                  		// 0x01E8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x01EC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       HeadSocket;                                       		// 0x01F0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LeftTreadSocket;                                  		// 0x01F8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       RightTreadSocket;                                 		// 0x0200 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   BaseTreadsMaterial;                               		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TreadsMaterialPosParameterName;                   		// 0x020C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTreadMaterialSpeedPerVelocity;                   		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTreadMaterialSpeedPerYaw;                        		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ActivatingOneShotSound;                           		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BFGFiringWeaponSoundCue;                          		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pTreadStartSoundCue;                              		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pTreadStopSoundCue;                               		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTreadLoopFadeInTime;                             		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTreadLoopFadeOutTime;                            		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   TreadsMaterialLeft;                               		// 0x0234 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   TreadsMaterialRight;                              		// 0x0238 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurTreadPosLeft;                                 		// 0x023C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurTreadPosRight;                                		// 0x0240 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBGDR_RobotWaypoint*                        pCurrentWaypoint;                                 		// 0x0244 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bSmoothTurnToWaypoint : 1;                        		// 0x0248 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bTreadSoundPlaying : 1;                           		// 0x0248 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bCanTurnWhileMoving : 1;                          		// 0x0248 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEnableEscort : 1;                                		// 0x0248 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              fOriginalDotToTarget;                             		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iOwningTeam;                                      		// 0x0250 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      iBFGShootCounter;                                 		// 0x0251 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      replicateStateId;                                 		// 0x0252 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      repCurrentHealth;                                 		// 0x0253 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fCurrentSpeed;                                    		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTargetSpeed;                                     		// 0x0258 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeToUntilActivationComplete;                   		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeToUntilReactivationComplete;                 		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAngleDegreeDiffToIgnore;                         		// 0x0264 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWaypointReachedDistanceThreshhold;               		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class APBGDR_HitZoneActor* >               hitZones;                                         		// 0x026C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                lives;                                            		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fStunnedTime;                                     		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDestroyedTime;                                   		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iFireAtBaseDamage;                                		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireAtBaseRate;                                  		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscortSquaredRadius;                              		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PlayersInEscortArea;                              		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnSpeedYawMin;                                 		// 0x0294 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnSpeedYawMinAngle;                            		// 0x0298 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnSpeedYawMax;                                 		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurnSpeedYawMaxAngle;                            		// 0x02A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDeceleration;                                    		// 0x02A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAcceleration;                                    		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpeed;                                        		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxSpeedWhileTurn;                               		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             stateNames;                                       		// 0x02B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FName >                             socketAttachNames;                                		// 0x02C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBGDR_RobotWeaponTurret*                    turret1;                                          		// 0x02CC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_RobotWeaponTurret*                    turret2;                                          		// 0x02D0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_RobotWeaponTurret*                    turret3;                                          		// 0x02D4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class APBGDR_RobotWeaponTurret*                    turret4;                                          		// 0x02D8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FRotator                                    serverRot;                                        		// 0x02DC (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     serverLocation;                                   		// 0x02E8 (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              clientLocationSnapLimit;                          		// 0x02F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              clientAngleSnapLimit;                             		// 0x02F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              clientSmothMovement;                              		// 0x02FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currHits;                                         		// 0x0300 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                currLives;                                        		// 0x0304 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_ConsolidatedLobby
// 0x09F4 (0x0A94 - 0x00A0)
class UPBGFxObject_ConsolidatedLobby : public UPBGFxObject_ContainerBased
{
public:
	TArray< struct FPlayerInfo >                       mPlayers;                                         		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTLobbyScoreboardInfo                       friendlyInfo[ 0xB ];                              		// 0x00AC (0x0294) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTLobbyScoreboardInfo                       enemyInfo[ 0xB ];                                 		// 0x0340 (0x0294) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iNumOnFriendlyTeam;                               		// 0x05D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNumOnEnemyTeam;                                  		// 0x05D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyHeat;                                		// 0x05DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyKills;                               		// 0x05E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyDeaths;                              		// 0x05E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyAssists;                             		// 0x05E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyHeat;                                   		// 0x05EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyKills;                                  		// 0x05F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyDeaths;                                 		// 0x05F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyAssists;                                		// 0x05F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mLocalPlayersTeam;                                		// 0x05FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mCurrentTickValue;                                		// 0x0600 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mGameStartClicked : 1;                            		// 0x0604 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bSwapTeamsButtonEnabled : 1;                    		// 0x0604 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      isRoomMaster : 1;                                 		// 0x0604 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      hasSetBackground : 1;                             		// 0x0604 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      isInitialised : 1;                                		// 0x0604 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bLeaveServerRewardScreen : 1;                     		// 0x0604 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      prevLaunchValid : 1;                              		// 0x0604 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      rewardDataReady : 1;                              		// 0x0604 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      firstPass1 : 1;                                   		// 0x0604 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      firstPass2 : 1;                                   		// 0x0604 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      isConfirmationVisible : 1;                        		// 0x0604 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      mbUpdateShopButtons : 1;                          		// 0x0604 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      mbRepairWeapon : 1;                               		// 0x0604 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned char                                      mbMatchStartingTimerVisible;                      		// 0x0608 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      InitialState;                                     		// 0x0609 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      CurrentState;                                     		// 0x060A (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      flowState;                                        		// 0x060B (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     prevMapName;                                      		// 0x060C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              stateInitTime;                                    		// 0x0618 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              flowStateInitTime;                                		// 0x061C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeInVictory;                                    		// 0x0620 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeInMapVote;                                    		// 0x0624 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeInReward;                                     		// 0x0628 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                friendlyColour;                                   		// 0x062C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                enemyColour;                                      		// 0x0630 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                playerColour;                                     		// 0x0634 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_finalHeat;                                      		// 0x0638 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                unboostedHeat;                                    		// 0x063C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                matchBonus;                                       		// 0x0640 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                percentageStyleStars;                             		// 0x0644 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                unboostedIGC;                                     		// 0x0648 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                boostedIGC;                                       		// 0x064C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                percentageIGCStars;                               		// 0x0650 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                unboostedFans;                                    		// 0x0654 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                boostedFans;                                      		// 0x0658 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                percentageFansStars;                              		// 0x065C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currentIGC;                                       		// 0x0660 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currentFans;                                      		// 0x0664 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currentFameLevel;                                 		// 0x0668 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                newFameLevel;                                     		// 0x066C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FFameLevelData >                    fameLevelArray;                                   		// 0x0670 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                currentFameLevelData;                             		// 0x067C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                heatDelta;                                        		// 0x0680 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToStartHeatCountUp;                           		// 0x0684 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToStartIGCAppear;                             		// 0x0688 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToStartFansAppear;                            		// 0x068C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishFansAppear;                           		// 0x0690 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishHeatCountUp;                          		// 0x0694 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToGoToBoostedDisplay;                         		// 0x0698 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishNoIGCStars;                           		// 0x069C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishNoFansStars;                          		// 0x06A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToGoToPause;                                  		// 0x06A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishHeatStars;                            		// 0x06A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishIGCStars;                             		// 0x06AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishFansStars;                            		// 0x06B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishCountingBoostUp;                      		// 0x06B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToStartFadingFansBarUp;                       		// 0x06B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishHoldingBeforeCountdown;               		// 0x06BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFinishCountingDown;                         		// 0x06C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              timeToFadeUpButtons;                              		// 0x06C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numHeatStarsDisplayed;                            		// 0x06C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numIGCStarsDisplayed;                             		// 0x06CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numFansStarsDisplayed;                            		// 0x06D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numHeatStarsToDisplay;                            		// 0x06D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numIGCStarsToDisplay;                             		// 0x06D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                numFansStarsToDisplay;                            		// 0x06DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                lastTimeTick;                                     		// 0x06E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   m_YouDraw;                                        		// 0x06E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_YouWin;                                         		// 0x06E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_YouLose;                                        		// 0x06EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardNumbersCalculating2sec;                   		// 0x06F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardNumbersCalculating3sec;                   		// 0x06F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardFansIGCMoving;                            		// 0x06F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardFansIGCImpact;                            		// 0x06FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardHeatBoosterStars;                         		// 0x0700 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardFansIGCBoosterStars;                      		// 0x0704 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_RewardProgressBarCountup;                       		// 0x0708 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             RSLoopAC;                                         		// 0x070C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FString                                     nPlayersString;                                   		// 0x0710 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     rewardString;                                     		// 0x071C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     scoreboardString;                                 		// 0x0728 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     lobbyString;                                      		// 0x0734 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     quitServerString;                                 		// 0x0740 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     okString;                                         		// 0x074C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     cancelString;                                     		// 0x0758 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     nToLevelXString;                                  		// 0x0764 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     nToMaxFansString;                                 		// 0x0770 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     maxFansAchievedString;                            		// 0x077C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipBaseFans;                                  		// 0x0788 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipBaseHeat;                                  		// 0x0794 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipBaseIGC;                                   		// 0x07A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipFansEarned;                                		// 0x07AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipFullFansBoosters;                          		// 0x07B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipFullIGCBoosters;                           		// 0x07C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipHeatTotal;                                 		// 0x07D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipIGCReward;                                 		// 0x07DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipMatchBonus;                                		// 0x07E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipOtherPlayers;                              		// 0x07F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipStyle;                                     		// 0x0800 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TooltipTotal;                                     		// 0x080C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     QuitString;                                       		// 0x0818 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     SwitchTeamString;                                 		// 0x0824 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     GameModeString;                                   		// 0x0830 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     MapString;                                        		// 0x083C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     MatchTimeString;                                  		// 0x0848 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     FriendlyFireString;                               		// 0x0854 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     EndMatchWinString;                                		// 0x0860 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     MatchWillStartInString;                           		// 0x086C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     WaitingForRoomMasterString;                       		// 0x0878 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     LoadingString;                                    		// 0x0884 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     HeatLabelString;                                  		// 0x0890 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     FansLabelString;                                  		// 0x089C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     IGCLabelString;                                   		// 0x08A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TotalIGCString;                                   		// 0x08B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     RepairWeaponsString;                              		// 0x08C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     UnlockedItemsString;                              		// 0x08CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     TeamEmptyString;                                  		// 0x08D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     LaunchGameString;                                 		// 0x08E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     PersonalEnemyString;                              		// 0x08F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     PersonalVictimString;                             		// 0x08FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     PremiumDescriptionString;                         		// 0x0908 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  mLobbyHolder;                                     		// 0x0914 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mSwapTeamsButton;                                 		// 0x0918 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mTeamsHolder;                                     		// 0x091C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mChatHolder;                                      		// 0x0920 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mChatHolder1;                                     		// 0x0924 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mTeamEmptyMessage;                                		// 0x0928 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                lastProcessedMsgId;                               		// 0x092C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorGameMaster;                               		// 0x0930 (0x0004) [0x0000000000000000]              
	int                                                msgColorSameTeam;                                 		// 0x0934 (0x0004) [0x0000000000000000]              
	int                                                msgColorOposingTeam;                              		// 0x0938 (0x0004) [0x0000000000000000]              
	int                                                msgColorSelf;                                     		// 0x093C (0x0004) [0x0000000000000000]              
	class UGFxObject*                                  mScoreboardHolder;                                		// 0x0940 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRewardScreenHolder;                              		// 0x0944 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mMapVoteHolder;                                   		// 0x0948 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryScreenHolder;                             		// 0x094C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryResultMessage;                            		// 0x0950 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam0Icon;                                		// 0x0954 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam1Icon;                                		// 0x0958 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam1Score;                               		// 0x095C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam2Score;                               		// 0x0960 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam1Name;                                		// 0x0964 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryTeam2Name;                                		// 0x0968 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVictoryAwards[ 0x4 ];                            		// 0x096C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mTopNavigation;                                   		// 0x097C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mBottomNavigation;                                		// 0x0980 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRoomMasterHolder;                                		// 0x0984 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mGameModeDropdown;                                		// 0x0988 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mMapDropdown;                                     		// 0x098C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mMatchLengthDropdown;                             		// 0x0990 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mFriendlyFireDropdown;                            		// 0x0994 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mEndMatchWinDropdown;                             		// 0x0998 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mLaunchGameButton;                                		// 0x099C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRMGameModeHeader;                                		// 0x09A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRMMapHeader;                                     		// 0x09A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRMMatchLengthHeader;                             		// 0x09A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRMFriendlyFireHeader;                            		// 0x09AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRMEndMatchWinHeader;                             		// 0x09B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNormalPlayerHolder;                              		// 0x09B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mGameModeValue;                                   		// 0x09B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mMapValue;                                        		// 0x09BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mMatchLengthValue;                                		// 0x09C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mFriendlyFireValue;                               		// 0x09C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mEndMatchWinValue;                                		// 0x09C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNPGameModeHeader;                                		// 0x09CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNPMapHeader;                                     		// 0x09D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNPMatchLengthHeader;                             		// 0x09D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNPFriendlyFireHeader;                            		// 0x09D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mNPEndMatchWinHeader;                             		// 0x09DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mStartTimerLabel;                                 		// 0x09E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mStartTimerValue;                                 		// 0x09E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mLoadingSpinner;                                  		// 0x09E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mRewardScreenButton;                              		// 0x09EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mLobbyButton;                                     		// 0x09F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mScoreboardButton;                                		// 0x09F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mQuitButton;                                      		// 0x09F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mControlBarContainer;                             		// 0x09FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mChatHolder0;                                     		// 0x0A00 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                testStart;                                        		// 0x0A04 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                testFinish;                                       		// 0x0A08 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              testDuration;                                     		// 0x0A0C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnMapVoteClick__Delegate;                       		// 0x0A10 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMapVoteSendChatMsgClick__Delegate;            		// 0x0A1C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSendMsg__Delegate;                            		// 0x0A28 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_setNavigationInfo__Delegate;             		// 0x0A34 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_disconnect__Delegate;                    		// 0x0A40 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusIn__Delegate;                     		// 0x0A4C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x0A58 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_showNavigation__Delegate;                		// 0x0A64 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_playOneShot__Delegate;                   		// 0x0A70 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_playLoop__Delegate;                      		// 0x0A7C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_stopLoop__Delegate;                      		// 0x0A88 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CommCenter
// 0x0150 (0x01F0 - 0x00A0)
class UPBGFxObject_CommCenter : public UPBGFxObject_ContainerBased
{
public:
	unsigned long                                      updateBuddies : 1;                                		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      updateSearch : 1;                                 		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      messageReceived : 1;                              		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bSystemBusy : 1;                                  		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bBusyOnPreRequest : 1;                            		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bAdding : 1;                                      		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bLastOperationSuccessful : 1;                     		// 0x00A0 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	int                                                lastMessageNotificationTime;                      		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FbuddyItem >                        buddies;                                          		// 0x00A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FChatButtonItem >                   openedChats;                                      		// 0x00B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FSearchResultItem >                 SearchResults;                                    		// 0x00C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iPrevNotificationsPending;                        		// 0x00CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mBuddiesListObject;                               		// 0x00D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      myStatus;                                         		// 0x00D4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     sModifiedBINick;                                  		// 0x00D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sModifiedSRNick;                                  		// 0x00E4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sCurrentCharacterName;                            		// 0x00F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              fSystemResultTime;                                		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSystemResultTimeToDisplay;                       		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     sJoinGameNick;                                    		// 0x0104 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class USoundCue*                                   soundMessageReceived;                             		// 0x0110 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   soundFriendRequest;                               		// 0x0114 (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __Unreal_getBasketQuantity__Delegate;             		// 0x0118 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_openNotifications__Delegate;             		// 0x0124 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_openChat__Delegate;                      		// 0x0130 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_sendChatMsg__Delegate;                   		// 0x013C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_changeActiveChat__Delegate;              		// 0x0148 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_closeIndividualChat__Delegate;           		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onPlayerStatusChanged__Delegate;         		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_SearchForBuddies__Delegate;              		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_AddBuddy__Delegate;                      		// 0x0178 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_RemoveBuddy__Delegate;                   		// 0x0184 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_joinBuddy__Delegate;                     		// 0x0190 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_submitGamePassword__Delegate;            		// 0x019C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_notifyJoinServerClose__Delegate;         		// 0x01A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_handleCloseSelf__Delegate;               		// 0x01B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusIn__Delegate;                     		// 0x01C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x01CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_CallCloseCommcenter__Delegate;           		// 0x01D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_OpenCommcenter__Delegate;                		// 0x01E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD
// 0x0608 (0x06A8 - 0x00A0)
class UPBGFxObject_HUD : public UPBGFxObject_ContainerBased
{
public:
	TArray< class APBChest* >                          rActiveChests;                                    		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iCurrentHealth;                                   		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentHeat;                                     		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCurrentSkillTier;                                		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bIsShowingSkillInAmmo : 1;                        		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsCooking : 1;                                   		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bweaponHasSecondaryZoom : 1;                      		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bweaponInSecondaryZoom : 1;                       		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bVotedForSomething : 1;                           		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bSNDBombCarryingIconVisible : 1;                  		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      isFadingOut : 1;                                  		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bIsScrolling : 1;                                 		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      isInReloadState : 1;                              		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bReloadColourSet : 1;                             		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bReloadGameFinished : 1;                          		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      isInGrenadeState : 1;                             		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      mDefinitelyDisplayScores : 1;                     		// 0x00B8 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      prevACaptured : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      prevAInactive : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      prevAMinimapMarkerCreated : 1;                    		// 0x00B8 (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      prevBCaptured : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      prevBInactive : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      prevBMinimapMarkerCreated : 1;                    		// 0x00B8 (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      prevADisabled : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00080000] ( CPF_Transient )
	unsigned long                                      prevBDisabled : 1;                                		// 0x00B8 (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      prevSNDC4Visible : 1;                             		// 0x00B8 (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	unsigned long                                      prevSNDC4Active : 1;                              		// 0x00B8 (0x0004) [0x0000000000002000] [0x00400000] ( CPF_Transient )
	unsigned long                                      prevSNDObjectivesVisible : 1;                     		// 0x00B8 (0x0004) [0x0000000000002000] [0x00800000] ( CPF_Transient )
	unsigned long                                      bSNDRoundEndScreenShown : 1;                      		// 0x00B8 (0x0004) [0x0000000000002000] [0x01000000] ( CPF_Transient )
	unsigned long                                      bVoteShown : 1;                                   		// 0x00B8 (0x0004) [0x0000000000002000] [0x02000000] ( CPF_Transient )
	unsigned long                                      bIsSkillSelectVisible : 1;                        		// 0x00B8 (0x0004) [0x0000000000002000] [0x04000000] ( CPF_Transient )
	unsigned long                                      bIsTauntSelectVisible : 1;                        		// 0x00B8 (0x0004) [0x0000000000002000] [0x08000000] ( CPF_Transient )
	unsigned long                                      isChatFadingOut : 1;                              		// 0x00B8 (0x0004) [0x0000000000002000] [0x10000000] ( CPF_Transient )
	unsigned long                                      bIsChatScrolling : 1;                             		// 0x00B8 (0x0004) [0x0000000000002000] [0x20000000] ( CPF_Transient )
	unsigned long                                      renew : 1;                                        		// 0x00B8 (0x0004) [0x0000000000002000] [0x40000000] ( CPF_Transient )
	unsigned long                                      killMinimap : 1;                                  		// 0x00B8 (0x0004) [0x0000000000002000] [0x80000000] ( CPF_Transient )
	unsigned long                                      IsTaunting : 1;                                   		// 0x00BC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      wasTaunting : 1;                                  		// 0x00BC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bGlobalChat : 1;                                  		// 0x00BC (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      mSurpressChatInput : 1;                           		// 0x00BC (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      mSurpressSkillRadial : 1;                         		// 0x00BC (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      isControllingPlane : 1;                           		// 0x00BC (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      wasControllingPlane : 1;                          		// 0x00BC (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      isControllingHeadCrab : 1;                        		// 0x00BC (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      wasControllingHeadCrab : 1;                       		// 0x00BC (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      isHeatBufferTransitioning : 1;                    		// 0x00BC (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      heatBufferTransitionMovementFinished : 1;         		// 0x00BC (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      heatUnitsAdded : 1;                               		// 0x00BC (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      heatTensAdded : 1;                                		// 0x00BC (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      heatHundredsAdded : 1;                            		// 0x00BC (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      heatThousandsAdded : 1;                           		// 0x00BC (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bHeatBufferLocked : 1;                            		// 0x00BC (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	unsigned long                                      isHeatEventTransitioning : 1;                     		// 0x00BC (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      hasHeatEventTransitioned : 1;                     		// 0x00BC (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      hasEventZoomedUp : 1;                             		// 0x00BC (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      isEventZooming : 1;                               		// 0x00BC (0x0004) [0x0000000000002000] [0x00080000] ( CPF_Transient )
	unsigned long                                      bTurretHealthVisible : 1;                         		// 0x00BC (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      bShowingNotificationMessage : 1;                  		// 0x00BC (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	unsigned long                                      canShowNotificationMessage : 1;                   		// 0x00BC (0x0004) [0x0000000000002000] [0x00400000] ( CPF_Transient )
	unsigned long                                      bVictoryScreenVisible : 1;                        		// 0x00BC (0x0004) [0x0000000000002000] [0x00800000] ( CPF_Transient )
	unsigned long                                      bWasAllowedToStartVote : 1;                       		// 0x00BC (0x0004) [0x0000000000002000] [0x01000000] ( CPF_Transient )
	struct FString                                     currentSkillName;                                 		// 0x00C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     timeLeftString;                                   		// 0x00CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  m_minimapImage;                                   		// 0x00D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_dynamicImage;                                   		// 0x00DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_mMinimapContainer;                              		// 0x00E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_mSkillsContainer;                               		// 0x00E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_pnl_chatContainer;                              		// 0x00E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_GameInformationContainer;                       		// 0x00EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_KillMessagesContainer;                          		// 0x00F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  m_SNDEndRoundPanel;                               		// 0x00F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              _3dHUDMovement;                                   		// 0x00F8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FName                                       m_storedWeaponName;                               		// 0x00FC (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              fzoomDisplayAlpha;                                		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           rZoomStrings;                                     		// 0x0108 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iCurrentTeam;                                     		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevTeam;                                        		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBSkill*                                    rTiers[ 0x4 ];                                    		// 0x011C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FEnergyTrack                                rEnergy[ 0x4 ];                                   		// 0x012C (0x0040) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMaxDeathMessages;                                		// 0x016C (0x0004) [0x0000000000000000]              
	struct FLinearColor                                EnemyColor;                                       		// 0x0170 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                FriendlyColor;                                    		// 0x0180 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                YouColor;                                         		// 0x0190 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTDeathMessage >                    rDeathMessage;                                    		// 0x01A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iPersonalEnemyX;                                  		// 0x01AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPersonalEnemyW;                                  		// 0x01B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iHeadshotSizeX;                                   		// 0x01B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SpecialIconPadding;                               		// 0x01B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iHMessage;                                        		// 0x01BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iVerticalSpacing;                                 		// 0x01C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fKillMessageDisplayTime;                          		// 0x01C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fKillMessageFadeOut;                              		// 0x01C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fKillMessageMoveTime;                             		// 0x01CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fKillMessageFadeIn;                               		// 0x01D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iYTop;                                            		// 0x01D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fScrollRefTime;                                   		// 0x01D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FLinearColor                                cFailure;                                         		// 0x01DC (0x0010) [0x0000000000000000]              
	struct FLinearColor                                cSuccess;                                         		// 0x01EC (0x0010) [0x0000000000000000]              
	float                                              fArrowStartDegrees;                               		// 0x01FC (0x0004) [0x0000000000000000]              
	float                                              fArrowEndDegrees;                                 		// 0x0200 (0x0004) [0x0000000000000000]              
	int                                                iCurrentTime;                                     		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     TimerPausedString;                                		// 0x0208 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                iPrevTeam1Points;                                 		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevTeam2Points;                                 		// 0x0218 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevAControlPercentage;                           		// 0x021C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevANumFriendly;                                 		// 0x0220 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevANumEnemy;                                    		// 0x0224 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      prevATimer;                                       		// 0x0228 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      prevBTimer;                                       		// 0x0229 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      currentGDRState;                                  		// 0x022A (0x0001) [0x0000000000000000]              
	unsigned char                                      currentHUDGameMode;                               		// 0x022B (0x0001) [0x0000000000000000]              
	unsigned char                                      currentRoundState;                                		// 0x022C (0x0001) [0x0000000000000000]              
	unsigned char                                      iPrevRobotControlTeam;                            		// 0x022D (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      iRobotControlTeam;                                		// 0x022E (0x0001) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevA10Percents;                                  		// 0x0230 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevBControlPercentage;                           		// 0x0234 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevBNumFriendly;                                 		// 0x0238 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevBNumEnemy;                                    		// 0x023C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevB10Percents;                                  		// 0x0240 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevAttackingTeam;                                		// 0x0244 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevSNDAttackingTeam;                             		// 0x0248 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevCurrentRounds;                                		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                prevTotalRounds;                                  		// 0x0250 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              prevTeamMateStatusScan;                           		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   soundGDRFriendlyScore;                            		// 0x0258 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   soundGDREnemyScore;                               		// 0x025C (0x0004) [0x0000000000000000]              
	class USoundCue*                                   soundC4Beep;                                      		// 0x0260 (0x0004) [0x0000000000000000]              
	struct FString                                     sGDRCaptureObjective;                             		// 0x0264 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDRFriendlyCaptured;                             		// 0x0270 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDREnemyCaptured;                                		// 0x027C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDRFriendlyControl;                              		// 0x0288 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDREnemyControl;                                 		// 0x0294 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDRSuccessfulDefend;                             		// 0x02A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDRSuccessfulScore;                              		// 0x02AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sGDRRobotNeutral;                                 		// 0x02B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sDominionTimer;                                   		// 0x02C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sIndicatorDisabled;                               		// 0x02D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sIndicatorAttack;                                 		// 0x02DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sIndicatorDefend;                                 		// 0x02E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sAdvertString;                                    		// 0x02F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sTeamEmptyString;                                 		// 0x0300 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDBombDefuse;                                   		// 0x030C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDBombPickup;                                   		// 0x0318 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDBombProtect;                                  		// 0x0324 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDBonusHeat;                                    		// 0x0330 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDEndOfMatchIn;                                 		// 0x033C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDNextRoundIn;                                  		// 0x0348 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDHalfTimeIn;                                   		// 0x0354 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinAnnounce;                                  		// 0x0360 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByC4;                                      		// 0x036C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByC4Neutral;                               		// 0x0378 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByDefuse;                                  		// 0x0384 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByDefuseNeutral;                           		// 0x0390 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByTimer;                                   		// 0x039C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByDefault;                                 		// 0x03A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByWipeoutAttacker;                         		// 0x03B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sSNDWinByWipeoutDefender;                         		// 0x03C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                iPrevGDRControlPercentage;                        		// 0x03CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevGDRControlTeamA;                             		// 0x03D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevGDRControlTeamB;                             		// 0x03D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevGDRBarDirection;                             		// 0x03D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevGDRRobotHealth;                              		// 0x03DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevGDRRobotLives;                               		// 0x03E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSkillArrowMaxPos;                                		// 0x03E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevSkillIndex;                                  		// 0x03E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FLinearColor                                cSelectable;                                      		// 0x03EC (0x0010) [0x0000000000000000]              
	struct FLinearColor                                cUnSelectable;                                    		// 0x03FC (0x0010) [0x0000000000000000]              
	class USoundCue*                                   m_SkillSelected0;                                 		// 0x040C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_SkillSelected1;                                 		// 0x0410 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_SkillSelected2;                                 		// 0x0414 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_SkillSelected3;                                 		// 0x0418 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iPrevTauntIndex;                                  		// 0x041C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iMaxChatMessages;                                 		// 0x0420 (0x0004) [0x0000000000000000]              
	TArray< struct FTChatMessage >                     rChatMessage;                                     		// 0x0424 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              fChatMessageDisplayTime;                          		// 0x0430 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fChatMessageFadeOut;                              		// 0x0434 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fChatMessageMoveTime;                             		// 0x0438 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fChatMessageFadeIn;                               		// 0x043C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iChatYTop;                                        		// 0x0440 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fChatScrollRefTime;                               		// 0x0444 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                pixelsToLineBreak;                                		// 0x0448 (0x0004) [0x0000000000000000]              
	struct FString                                     sGlobalChannel;                                   		// 0x044C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     sTeamChannel;                                     		// 0x0458 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FLinearColor                                cGlobalColor;                                     		// 0x0464 (0x0010) [0x0000000000000000]              
	struct FLinearColor                                cGMColor;                                         		// 0x0474 (0x0010) [0x0000000000000000]              
	class UPBCharacterNamesPrinterScaleform*           pCharPrinter;                                     		// 0x0484 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       minimapTextureName;                               		// 0x0488 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              mapOffsetX;                                       		// 0x0490 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mapOffsetY;                                       		// 0x0494 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              map_scale;                                        		// 0x0498 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              scaleScene;                                       		// 0x049C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              map_display_width;                                		// 0x04A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              map_display_height;                               		// 0x04A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              map_display_unrealunits;                          		// 0x04A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              map_display_scale;                                		// 0x04AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     mapWorld;                                         		// 0x04B0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              ms[ 0x9 ];                                        		// 0x04BC (0x0024) [0x0000000000002000]              ( CPF_Transient )
	float                                              mt[ 0x9 ];                                        		// 0x04E0 (0x0024) [0x0000000000002000]              ( CPF_Transient )
	float                                              mr[ 0x9 ];                                        		// 0x0504 (0x0024) [0x0000000000002000]              ( CPF_Transient )
	float                                              map_width;                                        		// 0x0528 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              map_height;                                       		// 0x052C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector2D                                   map_topL;                                         		// 0x0530 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FVector2D                                   map_bottomR;                                      		// 0x0538 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FVector2D                                   map_midpoint;                                     		// 0x0540 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCurrentMarkerIndex;                              		// 0x0548 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              tauntStartTime;                                   		// 0x054C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevDamageIndicators;                            		// 0x0550 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayDisplayTime;                         		// 0x0554 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayDisplayDuration;                     		// 0x0558 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iDamageOverlayMaxDisplacement0;                   		// 0x055C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iDamageOverlayMaxDisplacement1;                   		// 0x0560 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iDamageOverlayMaxOffset0;                         		// 0x0564 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iDamageOverlayMaxOffset1;                         		// 0x0568 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayTargetX0;                            		// 0x056C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayTargetY0;                            		// 0x0570 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayTargetX1;                            		// 0x0574 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              damageOverlayTargetY1;                            		// 0x0578 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APawn*                                       mKiller;                                          		// 0x057C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerReplicationInfo*                    mKillerPRI;                                       		// 0x0580 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mHeatBufferContainerMoveable;                     		// 0x0584 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mHeatBufferUnitsMoveable;                         		// 0x0588 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mHeatBufferTensMoveable;                          		// 0x058C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mHeatBufferHundredsMoveable;                      		// 0x0590 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mVotingContainer;                                 		// 0x0594 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatBufferTransitionStartTime;                    		// 0x0598 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatBufferTransitionDuration;                     		// 0x059C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatBufferTransitionMotionDuration;               		// 0x05A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevHeatBuffer;                                  		// 0x05A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iHeldBufferProgressBar;                           		// 0x05A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iHeldBufferNumStars;                              		// 0x05AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevHeatEvent;                                   		// 0x05B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatEventTransitionStartTime;                     		// 0x05B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatEventTransitionDuration;                      		// 0x05B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              heatEventTransitionMotionDuration;                		// 0x05BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     prevHeatEventID;                                  		// 0x05C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              zoomStartTime;                                    		// 0x05CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevHeatBufferLength;                            		// 0x05D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                weaponSelectTimeout;                              		// 0x05D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                WeaponSelectEndTime;                              		// 0x05D8 (0x0004) [0x0000000000000000]              
	TArray< struct FSkillUnlockData >                  skillUnlocks;                                     		// 0x05DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     newSkillMessageID;                                		// 0x05E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              fTimeToFadeUpSkillUnlock;                         		// 0x05F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeToHoldUpSkillUnlock;                         		// 0x05F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeToFadeDownSkillUnlock;                       		// 0x05FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FWeaponPickupDisplayed >            rDisplayedWeaponPickups;                          		// 0x0600 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              weaponPickupMaxRadius;                            		// 0x060C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              weaponPickupFullAlphaRadius;                      		// 0x0610 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              weaponPickupMaxRadiusSquared;                     		// 0x0614 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              weaponPickupFullAlphaRadiusSquared;               		// 0x0618 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              weaponPickupAlphaFadeInSpeed;                     		// 0x061C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              weaponPickupAlphaFadeOutSpeed;                    		// 0x0620 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FAdvertAugmentedRealityDisplayed >  rDisplayedAugmentedAdverts;                       		// 0x0624 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              augmentedAdvertMaxRadius;                         		// 0x0630 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              augmentedAdvertFullAlphaRadius;                   		// 0x0634 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              augmentedAdvertMaxRadiusSquared;                  		// 0x0638 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              augmentedAdvertFullAlphaRadiusSquared;            		// 0x063C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FAmmoCrateDisplayed >               rDisplayedAmmoCrates;                             		// 0x0640 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              ammoCrateMaxRadius;                               		// 0x064C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ammoCrateFullAlphaRadius;                         		// 0x0650 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ammoCrateMaxRadiusSquared;                        		// 0x0654 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ammoCrateFullAlphaRadiusSquared;                  		// 0x0658 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     ammoCrateName;                                    		// 0x065C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTurretDisplayed >                  rDisplayedTurrets;                                		// 0x0668 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class USoundCue*                                   m_HeatBufferEventPopup;                           		// 0x0674 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndTier1;                                         		// 0x0678 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndTier2;                                         		// 0x067C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndTier3;                                         		// 0x0680 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndTier4;                                         		// 0x0684 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              notificationShowTime;                             		// 0x0688 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                previTeamsNotReadyTimer;                          		// 0x068C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_sendChatMsg__Delegate;                   		// 0x0690 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __onFadeOut__Delegate;                            		// 0x069C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxMoviePlayer_ProgressionScene
// 0x0014 (0x0198 - 0x0184)
class UPBGFxMoviePlayer_ProgressionScene : public UPBGFxMoviePlayer_Tickable
{
public:
	unsigned long                                      mbFirstUpdate : 1;                                		// 0x0184 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	class UGFxObject*                                  mSceneContainer;                                  		// 0x0188 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnSceneClosed__Delegate;                        		// 0x018C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBDeathCamera
// 0x0130 (0x033C - 0x020C)
class APBDeathCamera : public APBCameraAction
{
public:
	unsigned long                                      bZoomToTarget : 1;                                		// 0x020C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableSmartZoom : 1;                             		// 0x020C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bWaitForRotationStability : 1;                    		// 0x020C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bFollowKiller : 1;                                		// 0x020C (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bFollowFlyingSuicide : 1;                         		// 0x020C (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      zoomToPlayerReached : 1;                          		// 0x020C (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bTauntDelay : 1;                                  		// 0x020C (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bRotationComplete : 1;                            		// 0x020C (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bCameraPullBackComplete : 1;                      		// 0x020C (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bTauntedOnce : 1;                                 		// 0x020C (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bDrawNemesisEffects : 1;                          		// 0x020C (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bDebugKeepAlive : 1;                              		// 0x020C (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	float                                              fDeactivationProtectTime;                         		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSuicideCameraDistance;                           		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRotateSpeed;                                     		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRotateToKillerMaxTime;                           		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPullBackDistance;                                		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPullBackSpeed;                                   		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRotationFinishDelayTime;                         		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPullBackDelayTime;                               		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fZoomToDeviceFinishDelayTime;                     		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fZoomToTargetSpeed;                               		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDistanceFromObstacle;                            		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPEOptimalDistance;                               		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTauntFinishDelayTime;                            		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLookAtEyeRatio;                                  		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLookAtKillerRotateSpeed;                         		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLookAtKillerRotateMoveSpeed;                     		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLookAtInterpSpeed;                               		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPersonalEnemyStartFOV;                           		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPersonalEnemyFinalFOV;                           		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPersonalEnemyFOVBlendSpeed;                      		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     NemesisMeshPosition;                              		// 0x0260 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              NemesisMaterialFadeInDelayTime;                   		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NemesisMaterialFadeInTime;                        		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       NemesisMaterialOpacityParamName;                  		// 0x0274 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              NemesisEffectScale;                               		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageIndicatorOpacity;                           		// 0x0280 (0x0004) [0x0000000000000000]              
	class UMaterialEffect*                             NemesisEffect;                                    		// 0x0284 (0x0004) [0x0000000000000000]              
	class UMaterialInstanceConstant*                   NemesisMaterial;                                  		// 0x0288 (0x0004) [0x0000000000000000]              
	float                                              fActivateTime;                                    		// 0x028C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vViewPos;                                         		// 0x0290 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rViewRot;                                         		// 0x029C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vStartPos;                                        		// 0x02A8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vEndPos;                                          		// 0x02B4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rStartRot;                                        		// 0x02C0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fRotationDelayTimeLeft;                           		// 0x02CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fPullBackDelayTimeLeft;                           		// 0x02D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fPullBackTimeElapsed;                             		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APawn*                                       pKilledPawn;                                      		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APawn*                                       pKillerPawn;                                      		// 0x02DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerReplicationInfo*                    pKilledPRI;                                       		// 0x02E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerReplicationInfo*                    pKillerPRI;                                       		// 0x02E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTauntFinishedTime;                               		// 0x02E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      DamageCauser;                                     		// 0x02EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              delayAfterZoomToDeviceTimeLeft;                   		// 0x02F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              currentFOV;                                       		// 0x02F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              NemesisMaterialFadeInTimeElapsed;                 		// 0x02F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    KillerRotationLastStable;                         		// 0x02FC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FRotator >                          KillerRotationPrevious;                           		// 0x0308 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                KillerRotationPreviousMaxCount;                   		// 0x0314 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                KillerRotationPreviousYawTHreshold;               		// 0x0318 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vLookAt;                                          		// 0x031C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              fLookAtKillerCharacterOffset;                     		// 0x0328 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vBackDirectionMoveBehindPlayer;                   		// 0x032C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      PreviousLookAtActor;                              		// 0x0338 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBTauntCamera
// 0x008C (0x0298 - 0x020C)
class APBTauntCamera : public APBCameraAction
{
public:
	struct FRotator                                    vInitialCamRot;                                   		// 0x020C (0x000C) [0x0000000000000000]              
	struct FVector                                     vInitialCamPos;                                   		// 0x0218 (0x000C) [0x0000000000000000]              
	TArray< class APBCharacter* >                      MakeInvisible;                                    		// 0x0224 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bDeactivating : 1;                                		// 0x0230 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bActivating : 1;                                  		// 0x0230 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      DeactivationForceInitialRotation : 1;             		// 0x0230 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FRotator                                    vTargetRotation;                                  		// 0x0234 (0x000C) [0x0000000000000000]              
	struct FVector                                     vTargetPosition;                                  		// 0x0240 (0x000C) [0x0000000000000000]              
	float                                              fPlayTime;                                        		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rCurrentRotation;                                 		// 0x0250 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vCurrentPosition;                                 		// 0x025C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              ActivationRotationTime;                           		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ActivationTranslationTime;                        		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Activation3PTime;                                 		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                StartRotationOffset;                              		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ActivationStartPositionOffset;                    		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ActivationRotationInterpolation;                  		// 0x027C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ActivationTranslationInterpolation;               		// 0x027D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DeactivationRotationInterpolation;                		// 0x027E (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DeactivationTranslationInterpolation;             		// 0x027F (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              DeactivationRotationTime;                         		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DeactivationTranslationTime;                      		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Deactivation1PTime;                               		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DeactivationFinalPositionOffset;                  		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxCameraScale;                                   		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PitchLimitation;                                  		// 0x0294 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBFlashBangLogic
// 0x0047 (0x021F - 0x01D8)
class APBFlashBangLogic : public AActor
{
public:
	struct FName                                       BlankParam;                                       		// 0x01D8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SuperimposeParam;                                 		// 0x01E0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       FadingOutParam;                                   		// 0x01E8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       GrenadePosParam;                                  		// 0x01F0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEffectSpeed;                                     		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEffectActive_ : 1;                               		// 0x01FC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FLinearColor                                fOrigin_;                                         		// 0x0200 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FFlashBangInfo >                    rFlashBangs;                                      		// 0x0210 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      FadingBlendType;                                  		// 0x021C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SuperimposeBlendType;                             		// 0x021D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BlankBlendType;                                   		// 0x021E (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBWeaponPreset
// 0x0008 (0x0174 - 0x016C)
class UPBWeaponPreset : public UPBNWeaponPreset
{
public:
	float                                              fPresetEP;                                        		// 0x016C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      isHiddenPreset : 1;                               		// 0x0170 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bTemporaryPreset : 1;                             		// 0x0170 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class PlanBGame.PBAnnouncer
// 0x001C (0x01F4 - 0x01D8)
class APBAnnouncer : public AInfo
{
public:
	unsigned char                                      AnnouncerLevel;                                   		// 0x01D8 (0x0001) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	unsigned char                                      PlayingAnnouncementIndex;                         		// 0x01D9 (0x0001) [0x0000000000000000]              
	class UClass*                                      PlayingAnnouncementClass;                         		// 0x01DC (0x0004) [0x0000000000000000]              
	class APBQueuedAnnouncement*                       Queue;                                            		// 0x01E0 (0x0004) [0x0000000000000000]              
	float                                              GapTime;                                          		// 0x01E4 (0x0004) [0x0000000000000000]              
	class APBPlayerController*                         PlayerOwner;                                      		// 0x01E8 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   AnnouncerSoundCue;                                		// 0x01EC (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             CurrentAnnouncementComponent;                     		// 0x01F0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBLocalPlayer
// 0x0020 (0x04B0 - 0x0490)
class UPBLocalPlayer : public ULocalPlayer
{
public:
	class UPBCustomChar_MenuData*                      CustomCharMenuData;                               		// 0x0490 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomizationCache*                       CustomizationCache;                               		// 0x0494 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FTRankFormulaValues                         rankFormulaValues;                                		// 0x0498 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	class UPBChatMessageData*                          ChatMessages;                                     		// 0x04A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iRegionCode;                                      		// 0x04AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBPersistentPlayerReplicationInfo
// 0x0018 (0x0810 - 0x07F8)
class APBPersistentPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
	struct FName                                       nCurrentlyLoadedMap;                              		// 0x07F8 (0x0008) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bFinishedStreaming : 1;                           		// 0x0800 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	float                                              streamingProgress;                                		// 0x0804 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iVotedForOption;                                  		// 0x0808 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iNextMatchVote;                                   		// 0x080C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBGameStatCollector_Rules
// 0x0058 (0x0244 - 0x01EC)
class APBGameStatCollector_Rules : public AMutator
{
public:
	class AFileWriter*                                 LogFile;                                          		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           logData;                                          		// 0x01F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bLogComplete : 1;                                 		// 0x01FC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bLogPosition : 1;                                 		// 0x01FC (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bLogFPS : 1;                                      		// 0x01FC (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bLogCamping : 1;                                  		// 0x01FC (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bLogDeath : 1;                                    		// 0x01FC (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bLogSpawn : 1;                                    		// 0x01FC (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bIncludeInGameRules : 1;                          		// 0x01FC (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	unsigned long                                      bStartAutomatically : 1;                          		// 0x01FC (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bLogging : 1;                                     		// 0x01FC (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	struct FString                                     LogFileExtension;                                 		// 0x0200 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     FileName;                                         		// 0x020C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	float                                              fCampWarningTime;                                 		// 0x0218 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fLogPositionInterval;                             		// 0x021C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fFpsUpdateFrequency;                              		// 0x0220 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                CurrentMatch;                                     		// 0x0224 (0x0004) [0x0000000000000000]              
	int                                                CurrentRound;                                     		// 0x0228 (0x0004) [0x0000000000000000]              
	struct FString                                     SessionDesc;                                      		// 0x022C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     MapDesc;                                          		// 0x0238 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_StationHandleInput
// 0x005C (0x00FC - 0x00A0)
class UPBGFxObject_StationHandleInput : public UPBGFxObject_ContainerBased
{
public:
	TArray< int >                                      m_ShopRequests;                                   		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              lastCharacterRecievedTime;                        		// 0x00AC (0x0004) [0x0000000000000000]              
	struct FString                                     stringToCheck;                                    		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     stringChecking;                                   		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bIsChecking : 1;                                  		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __Unreal_onInputChanged__Delegate;                		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_handleOkClick__Delegate;                 		// 0x00D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_handleCancelClicked__Delegate;           		// 0x00E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealLogout__Delegate;                         		// 0x00F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBEMPEffect
// 0x0020 (0x005C - 0x003C)
class UPBEMPEffect : public UObject
{
public:
	class UPBEMPEffect*                                pEMPEffectArchetype;                              		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MatineeTotalTime;                                 		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MatineeWarmupTime;                                		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EffectPostEffectName;                             		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPBEMPEffect_MaterialParm >         EffectPostEffectDefaults;                         		// 0x0050 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBKWeapon_Mortar
// 0x0004 (0x05C4 - 0x05C0)
class APBKWeapon_Mortar : public APBKWeapon_Skill
{
public:
	unsigned long                                      bFiredMortar : 1;                                 		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsMortarMinimapOpen : 1;                         		// 0x05C0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class PlanBGame.PBSkill_Berserk
// 0x0064 (0x0300 - 0x029C)
class APBSkill_Berserk : public APBSkill
{
public:
	class APBKWeaponParams*                            SyringeBerserkWeapon;                             		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimNameInject1P;                                 		// 0x02A0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimDurationInject1P;                             		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimNamePostInject1P;                             		// 0x02AC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimDurationPostInject1P;                         		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimNameHandsUpAnim1P;                            		// 0x02B8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimDurationHandsUpAnim1P;                        		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInjectTiming;                                    		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HitWallDamage;                                    		// 0x02C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fChargeEnergyCostMultiplier;                      		// 0x02CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fChargeTime;                                      		// 0x02D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fChargeAccel;                                     		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ChargeFOV;                                        		// 0x02D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ChargeWeaponFOV;                                  		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iRequiredMasterLevelForCharge;                    		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAllowedSlidingAnglePct;                          		// 0x02E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fChargeRadiusOfKill;                              		// 0x02E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fChargeAngleOfKill;                               		// 0x02EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstance*                           MatTest;                                          		// 0x02F0 (0x0004) [0x0000000000000000]              
	TArray< struct FBerserkImprovementInfo >           rBerserkerImprovements;                           		// 0x02F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBDmgType_Burning
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Burning : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBMsgTurretDropped
// 0x0000 (0x0060 - 0x0060)
class UPBMsgTurretDropped : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgTurretPickedUp
// 0x0000 (0x0060 - 0x0060)
class UPBMsgTurretPickedUp : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBSeqAct_SetCameraAction
// 0x0004 (0x0100 - 0x00FC)
class UPBSeqAct_SetCameraAction : public USequenceAction
{
public:
	class APBCameraAction*                             pCameraActionArchetype;                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSeqAct_RemoveCameraAction
// 0x0004 (0x0100 - 0x00FC)
class UPBSeqAct_RemoveCameraAction : public USequenceAction
{
public:
	class APBCameraAction*                             pCameraActionObject;                              		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSeqAct_SetCameraActorView
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_SetCameraActorView : public USequenceAction
{
public:
public:
};

// Class PlanBGame.PBMinimapBoundary
// 0x0000 (0x01D8 - 0x01D8)
class APBMinimapBoundary : public AActor
{
public:
public:
};

// Class PlanBGame.PBSecurityCameraActor
// 0x0028 (0x0304 - 0x02DC)
class APBSecurityCameraActor : public ACameraActor
{
public:
	int                                                ForwardMaxRotation;                               		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                BackwardMaxRotation;                              		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LeftMaxRotation;                                  		// 0x02E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                RightMaxRotation;                                 		// 0x02E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    OldRotation;                                      		// 0x02EC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    rPlacedRot;                                       		// 0x02F8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGameRules_DTB
// 0x0020 (0x029C - 0x027C)
class APBGameRules_DTB : public APBGameRules
{
public:
	float                                              fGreatDefenceTimeLapse;                           		// 0x027C (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< class APBDTB_SiegeZone* >                  CaptureObjectives;                                		// 0x0280 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      attackingTeamNumber;                              		// 0x028C (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      iRemainHalfTime;                                  		// 0x028D (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RoundState;                                       		// 0x028E (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned long                                      bHalfTimeDone : 1;                                		// 0x0290 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	float                                              fSecondSafetyTime;                                		// 0x0294 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fHalfTimeTimer;                                   		// 0x0298 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class PlanBGame.PBTurret
// 0x0000 (0x03BC - 0x03BC)
class APBTurret : public APBPlaceableDevice
{
public:
public:
};

// Class PlanBGame.PBSplitTeamMessage
// 0x0018 (0x0078 - 0x0060)
class UPBSplitTeamMessage : public UPBLocalMessage
{
public:
	TArray< struct FTextVoiceMsg >                     PoliceMessage;                                    		// 0x0060 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FTextVoiceMsg >                     CriminalMessage;                                  		// 0x006C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBEnteredNukeZone
// 0x0000 (0x0078 - 0x0078)
class UPBEnteredNukeZone : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEnteredOfficeZone
// 0x0000 (0x0078 - 0x0078)
class UPBMsgEnteredOfficeZone : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEnteredReinforcementZone
// 0x0000 (0x0060 - 0x0060)
class UPBMsgEnteredReinforcementZone : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBEquipmentPointSettings
// 0x0018 (0x0054 - 0x003C)
class UPBEquipmentPointSettings : public UObject
{
public:
	float                                              StartEP;                                          		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WinEP;                                            		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LooseEP;                                          		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DefaultWeaponPresetEP;                            		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WeaponPresetEP;                                   		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPBEquipmentPointSettings*                   Archetype;                                        		// 0x0050 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class PlanBGame.PBSwearFilter
// 0x0030 (0x006C - 0x003C)
class UPBSwearFilter : public UObject
{
public:
	unsigned long                                      bFilterEnabled : 1;                               		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      inGameChatMode;                                   		// 0x0040 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FString >                           swearWordsList;                                   		// 0x0044 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           randomCharacters;                                 		// 0x0050 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FString >                           serviceWords;                                     		// 0x005C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBSwearFilter*                              Archetype;                                        		// 0x0068 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBOnlineStatsWrite
// 0x0030 (0x00B8 - 0x0088)
class UPBOnlineStatsWrite : public UOnlineStatsWrite
{
public:
	class UPBStatisticsKeys*                           StatisticsKeys;                                   		// 0x0088 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FSettingsProperty                           StringProperty;                                   		// 0x008C (0x0014) [0x0000000000002000]              ( CPF_Transient )
	struct FSettingsProperty                           IntegerProperty;                                  		// 0x00A0 (0x0014) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bGlobalGameStatsSaved : 1;                      		// 0x00B4 (0x0004) [0x0000000000006000] [0x00000001] ( CPF_Transient | CPF_Config )
public:
};

// Class PlanBGame.PBGameMessage
// 0x0198 (0x02FC - 0x0164)
class UPBGameMessage : public UGameMessage
{
public:
	struct FString                                     WaitingForAllReadyMessage;                        		// 0x0164 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     WaitingForAdminsToReady;                          		// 0x0170 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     WaitingForGameHost;                               		// 0x017C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PersonalEnemy1;                                   		// 0x0188 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PersonalEnemy2Part1;                              		// 0x0194 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PersonalEnemy2Part2;                              		// 0x01A0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PersonalEnemy3;                                   		// 0x01AC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     BecamePersonalEnemy;                              		// 0x01B8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     MoneyLooted;                                      		// 0x01C4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_PlacedRD;                                      		// 0x01D0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_DefusedFinalBomb;                              		// 0x01DC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_DefusedBomb;                                   		// 0x01E8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_PlacedBomb;                                    		// 0x01F4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_DisabledRD;                                    		// 0x0200 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_RoundWining;                                   		// 0x020C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_CampaignWining;                                		// 0x0218 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerWasKicked;                                  		// 0x0224 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     KickedPlayer;                                     		// 0x0230 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     YouWereKicked;                                    		// 0x023C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerWasBanned;                                  		// 0x0248 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     BannedPlayer;                                     		// 0x0254 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     YouWereBanned;                                    		// 0x0260 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerWasKickedHeader;                            		// 0x026C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ServerShuttingDown;                               		// 0x0278 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     BestLookingPlayer;                                		// 0x0284 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_RankUp;                                        		// 0x0290 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     XP_RankUpHeader;                                  		// 0x029C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerSwitchTeam;                                 		// 0x02A8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerPickedUpC4;                                 		// 0x02B4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerDroppedC4;                                  		// 0x02C0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerPlacedC4;                                   		// 0x02CC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PlayerDefusedC4;                                  		// 0x02D8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     EnterGameMessage;                                 		// 0x02E4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NewRoomMaster;                                    		// 0x02F0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_ShopClass
// 0x0004 (0x0100 - 0x00FC)
class UPBGFxObject_ShopClass : public UPBGFxObject_MusicContainer
{
public:
	float                                              NameSearchDelay;                                  		// 0x00FC (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGFxObject_QuickPlay
// 0x00D8 (0x01D8 - 0x0100)
class UPBGFxObject_QuickPlay : public UPBGFxObject_ShopClass
{
public:
	class UOnlineGameInterface*                        GameInterface;                                    		// 0x0100 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0104 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x0108 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_errorcode;                                      		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       m_gameServerId;                                   		// 0x0110 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_reason;                                         		// 0x0120 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_url;                                            		// 0x012C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0138 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x013C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0140 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxPing;                                          		// 0x0144 (0x0004) [0x0000000000000000]              
	int                                                BaseMaxPopulation;                                		// 0x0148 (0x0004) [0x0000000000000000]              
	float                                              MinPopulation;                                    		// 0x014C (0x0004) [0x0000000000000000]              
	class UOnlineGameSearch*                           GameSearch;                                       		// 0x0150 (0x0004) [0x0000000000000000]              
	int                                                GameSearchStep;                                   		// 0x0154 (0x0004) [0x0000000000000000]              
	unsigned long                                      bServerFound : 1;                                 		// 0x0158 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bSearchInProgress : 1;                            		// 0x0158 (0x0004) [0x0000000000000000] [0x00000002] 
	int                                                ServerIndex;                                      		// 0x015C (0x0004) [0x0000000000000000]              
	struct FString                                     SearchTypeInProgress;                             		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                regionId;                                         		// 0x016C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                AutoRegionId;                                     		// 0x0170 (0x0004) [0x0000000000000000]              
	int                                                QuickSearchTimeout;                               		// 0x0174 (0x0004) [0x0000000000000000]              
	int                                                SearchStartTime;                                  		// 0x0178 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              IdleSearchSeconds;                                		// 0x017C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              NextSearchSeconds;                                		// 0x0180 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0184 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Refresh__Delegate;                              		// 0x0190 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __QuitQuickPlay__Delegate;                        		// 0x019C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __SetNewRegion__Delegate;                         		// 0x01A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __ApplySearchFilter__Delegate;                    		// 0x01B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __cancelSearch__Delegate;                         		// 0x01C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __cancelJoinGame__Delegate;                       		// 0x01CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAdmin
// 0x000C (0x08C0 - 0x08B4)
class APBAdmin : public APBPlayerController
{
public:
	struct FString                                     ccTimerCmd;                                       		// 0x08B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAugmentedReality_CharManager
// 0x0010 (0x01EC - 0x01DC)
class APBAugmentedReality_CharManager : public AKeypoint
{
public:
	TArray< class APBAugmentedReality_Character* >     rAugChars;                                        		// 0x01DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBPlayerReplicationInfo*                    pHonoringPRI;                                     		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBDTB_SiegeZone
// 0x0070 (0x036C - 0x02FC)
class APBDTB_SiegeZone : public APBGameObjectiveByVolume
{
public:
	float                                              ControlObjective;                                 		// 0x02FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< int >                                      PointsPerPlayers;                                 		// 0x0300 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              DisabledTime;                                     		// 0x030C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AEmitter* >                          EmitterList;                                      		// 0x0310 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FVector                                     IndicatorActiveColor;                             		// 0x031C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     IndicatorInactiveColor;                           		// 0x0328 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DefendingTeam;                                    		// 0x0334 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      RepReenableTimer;                                 		// 0x0335 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      TeamA;                                            		// 0x0336 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      TeamB;                                            		// 0x0337 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RepControlPercent;                                		// 0x0338 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< class APBPawn* >                           TeamAPlayers;                                     		// 0x033C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class APBPawn* >                           TeamBPlayers;                                     		// 0x0348 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              fTimeSecondsObjectiveAchieved;                    		// 0x0354 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ControlAmt;                                       		// 0x0358 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bIsLocalPlayerInside : 1;                         		// 0x035C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bEnabled : 1;                                     		// 0x035C (0x0004) [0x0000000000002020] [0x00000002] ( CPF_Net | CPF_Transient )
	TArray< class APBPawn* >                           PlayersToDelete;                                  		// 0x0360 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameRules_SND
// 0x007C (0x02F8 - 0x027C)
class APBGameRules_SND : public APBGameRules
{
public:
	float                                              fTimeUntilNextRoundStarts;                        		// 0x027C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fNextRoundCountdownStartedTime;                   		// 0x0280 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTimeRemainNextRoundStarts;                       		// 0x0284 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      uiNextRoundIn;                                    		// 0x0288 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      attackingTeamNumber;                              		// 0x0289 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      iRemainHalfTime;                                  		// 0x028A (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RoundState;                                       		// 0x028B (0x0001) [0x0000000000000020]              ( CPF_Net )
	int                                                iMatchCount;                                      		// 0x028C (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                iMatchDuration;                                   		// 0x0290 (0x0004) [0x0000000000000000]              
	TArray< class APBAAMTerminal* >                    BlowUpObjectives;                                 		// 0x0294 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class APBC4*                                       c4;                                               		// 0x02A0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned long                                      bHalfTimeDone : 1;                                		// 0x02A4 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      bEarlyWin : 1;                                    		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bHasArmingTime : 1;                               		// 0x02A4 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	float                                              fSecondSafetyTime;                                		// 0x02A8 (0x0004) [0x0000000000000000]              
	float                                              fHalfTimeTimer;                                   		// 0x02AC (0x0004) [0x0000000000000000]              
	float                                              fPickupInteractTime;                              		// 0x02B0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fArmingTime;                                      		// 0x02B4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_Terminal_Duration;                           		// 0x02B8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_Terminal_MinTimePerc;                        		// 0x02BC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_Terminal_TargerZoneSize;                     		// 0x02C0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_Terminal_TargetZoneNum;                      		// 0x02C4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_Terminal_FailAddDuration;                    		// 0x02C8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_C4_Duration;                                 		// 0x02CC (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_C4_MinTimePerc;                              		// 0x02D0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_C4_TargerZoneSize;                           		// 0x02D4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_C4_TargetZoneNum;                            		// 0x02D8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              fIMG_C4_FailAddDuration;                          		// 0x02DC (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FRoundWinInfo                               roundVictoryReason;                               		// 0x02E0 (0x0018) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBMinimapCamera
// 0x0088 (0x0294 - 0x020C)
class APBMinimapCamera : public APBCameraAction
{
public:
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x020C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUpdateRefPoints : 1;                             		// 0x020C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      LockCameraRot : 1;                                		// 0x020C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      LockToCamera : 1;                                 		// 0x020C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FVector                                     vCamLoc;                                          		// 0x0210 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    vCamRot;                                          		// 0x021C (0x000C) [0x0000000000000000]              
	float                                              fFOV;                                             		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Initial_fov;                                      		// 0x022C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AWeapon*                                     Initial_Weapon;                                   		// 0x0230 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FPBMinimapCamera_ReferencePoint             rReferencePoints[ 0x4 ];                          		// 0x0234 (0x0060) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBTopdownCameraAction
// 0x0030 (0x023C - 0x020C)
class APBTopdownCameraAction : public APBCameraAction
{
public:
	float                                              fBlendFactor;                                     		// 0x020C (0x0004) [0x0000000000000000]              
	float                                              OldZ;                                             		// 0x0210 (0x0004) [0x0000000000000000]              
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x0214 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FVector                                     vPrevCamLoc;                                      		// 0x0218 (0x000C) [0x0000000000000000]              
	struct FRotator                                    vPrevCamRot;                                      		// 0x0224 (0x000C) [0x0000000000000000]              
	struct FRotator                                    rCamRot;                                          		// 0x0230 (0x000C) [0x0000000000000000]              
public:
};

// Class PlanBGame.SoundOcclusionMarker
// 0x0000 (0x01DC - 0x01DC)
class ASoundOcclusionMarker : public AKeypoint
{
public:
public:
};

// Class PlanBGame.PBQueuedAnnouncement
// 0x0010 (0x01E8 - 0x01D8)
class APBQueuedAnnouncement : public AInfo
{
public:
	class APBQueuedAnnouncement*                       nextAnnouncement;                                 		// 0x01D8 (0x0004) [0x0000000000000000]              
	class UClass*                                      AnnouncementClass;                                		// 0x01DC (0x0004) [0x0000000000000000]              
	unsigned char                                      MessageIndex;                                     		// 0x01E0 (0x0001) [0x0000000000000000]              
	class APBPlayerReplicationInfo*                    SenderPRI;                                        		// 0x01E4 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBAirSurveillanceCalled
// 0x0000 (0x0060 - 0x0060)
class UPBAirSurveillanceCalled : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBAllBombsDefusedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBAllBombsDefusedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBAllBombsDetonatedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBAllBombsDetonatedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBAmmunitionCrate
// 0x002F (0x0380 - 0x0351)
class APBAmmunitionCrate : public APBInteractiveObjective
{
public:
	class USoundCue*                                   m_ReloadSound;                                    		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   m_FailedSound;                                    		// 0x0358 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct APBAmmunitionCrate_FTInteractStruct > m_Controllers;                                    		// 0x035C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class AController* >                       m_SuccessfulControllers;                          		// 0x0368 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FVector                                     indicatorOffset;                                  		// 0x0374 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBAnim_Slot
// 0x0000 (0x0114 - 0x0114)
class UPBAnim_Slot : public UAnimNodeSlot
{
public:
public:
};

// Class PlanBGame.PBAnimNodeSequenceByBoneRotation
// 0x0018 (0x0158 - 0x0140)
class UPBAnimNodeSequenceByBoneRotation : public UAnimNodeSequence
{
public:
	struct FName                                       BoneName;                                         		// 0x0140 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneAxis;                                         		// 0x0148 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FAnimByRotation >                   AnimList;                                         		// 0x014C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBAntiAirTurret
// 0x0000 (0x02EC - 0x02EC)
class APBAntiAirTurret : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBAttackingTeam
// 0x0000 (0x0060 - 0x0060)
class UPBAttackingTeam : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBAugmentedReality_Character
// 0x0018 (0x01F4 - 0x01DC)
class APBAugmentedReality_Character : public AKeypoint
{
public:
	class USkeletalMeshComponent*                      pCharSkMeshComp;                                  		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x01E0 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bHonoringInProgress : 1;                          		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	class APBPlayerReplicationInfo*                    pHonoringPRI;                                     		// 0x01E8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	int                                                iRepAnimIndex;                                    		// 0x01EC (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fFadePerc;                                        		// 0x01F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAugmentedRealityArch
// 0x0048 (0x0084 - 0x003C)
class UPBAugmentedRealityArch : public UObject
{
public:
	float                                              fHonorPlayersTimeInterval;                        		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    MaleAnimSet;                                      		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    FemaleAnimSet;                                    		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTAnimInfo >                        rMaleAnimInfo;                                    		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FTAnimInfo >                        rFemaleAnimInfo;                                  		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              fGlobalAnimRateModifier;                          		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ARSwitchParamName;                                		// 0x0064 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAppearTime;                                      		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDisappearTime;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDisappearBeforeAnimEndSeconds;                   		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pPSTemplateFadeIn;                                		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pPSTemplateFadeOut;                               		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPBAugmentedRealityArch*                     pAugRealityArch;                                  		// 0x0080 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBAugmentedRealityAdvert
// 0x0000 (0x01DC - 0x01DC)
class APBAugmentedRealityAdvert : public AKeypoint
{
public:
public:
};

// Class PlanBGame.PBAugmentedRealityVolume
// 0x0000 (0x0214 - 0x0214)
class APBAugmentedRealityVolume : public AVolume
{
public:
public:
};

// Class PlanBGame.PBBaseHUD
// 0x0004 (0x0464 - 0x0460)
class APBBaseHUD : public AHUD
{
public:
	class APBPlayerController*                         PBPlayerOwner;                                    		// 0x0460 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGameStatisticsLog
// 0x000C (0x0048 - 0x003C)
class UPBGameStatisticsLog : public UObject
{
public:
	TArray< struct FStatFileLogStruct >                log_array;                                        		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBOperatorServerRequestHandler
// 0x00C8 (0x01A0 - 0x00D8)
class UPBOperatorServerRequestHandler : public UPBServerRequestHandlerParent
{
public:
	TArray< struct FPBRequestTypePriority >            rRequestTypePriority;                             		// 0x00D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                iRequestsRunning;                                 		// 0x00E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPBItemShopServerRequest >          ItemShopRequestQueue;                             		// 0x00E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBItemShopServer*                           pItemShop;                                        		// 0x00F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnAllRequestsAreDone__Delegate;                 		// 0x00F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnPingServerDone__Delegate;             		// 0x0104 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnLoginServerDone__Delegate;            		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnGetProfileDetailsServerDone__Delegate;		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnLogoutServerDone__Delegate;           		// 0x0128 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnUpdateProfileDetailsServerDone__Delegate;		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnGetPresetsServerDone__Delegate;       		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnGetSubscriptionModeServerDone__Delegate;		// 0x014C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnSendPlayerStatusServerDone__Delegate; 		// 0x0158 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnIncrementCoolnessServerDone__Delegate;		// 0x0164 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnGetProgressionDone__Delegate;         		// 0x0170 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnGetBoostersServerDone__Delegate;      		// 0x017C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnSubmitProgressionServerDone__Delegate;		// 0x0188 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateOnDeleteEventByBackendDone__Delegate;   		// 0x0194 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBBoostersList
// 0x0010 (0x004C - 0x003C)
class UPBBoostersList : public UObject
{
public:
	TArray< struct FString >                           rOffersGuidStr;                                   		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBBoostersList*                             pBoostersListArchetype;                           		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBBenchmarkGame
// 0x0014 (0x047C - 0x0468)
class APBBenchmarkGame : public APBGameInfo
{
public:
	float                                              TickCount;                                        		// 0x0468 (0x0004) [0x0000000000000000]              
	int                                                nWaitForFrame;                                    		// 0x046C (0x0004) [0x0000000000000000]              
	TArray< class APBLevelCheckCamera* >               Cameras;                                          		// 0x0470 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBTDMSpawnPoint
// 0x0086 (0x0348 - 0x02C2)
class APBTDMSpawnPoint : public APBPlayerStart
{
public:
	class AFileLog*                                    log_file;                                         		// 0x02C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSpawnScore;                                      		// 0x02C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AController*                                 AssociatedPlayer;                                 		// 0x02CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bTextExist : 1;                                   		// 0x02D0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              fLineOfSightVisibleDistance;                      		// 0x02D4 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightPunishmentValue;                      		// 0x02D8 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightBackPunishmentValue;                  		// 0x02DC (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightOffsetTop;                            		// 0x02E0 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightOffsetBottom;                         		// 0x02E4 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightOffsetLeft;                           		// 0x02E8 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightOffsetRight;                          		// 0x02EC (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightViewConeAngle;                        		// 0x02F0 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fLineOfSightViewConeStartRadius;                  		// 0x02F4 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDistance_SpawnDistance;                          		// 0x02F8 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDistance_SpawnPunishment;                        		// 0x02FC (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDistance_SafeDistance;                           		// 0x0300 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDistance_OpponentValue;                          		// 0x0304 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDistance_TeammateValue;                          		// 0x0308 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fGrenade_SafeDistance;                            		// 0x030C (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fGrenade_GrenadePunishment;                       		// 0x0310 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fMortar_SafeDistance;                             		// 0x0314 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fMortar_MortarPunishment;                         		// 0x0318 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDeath_DeathDistance;                             		// 0x031C (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fDeath_DeathPunishment;                           		// 0x0320 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fTurret_TurretDistance;                           		// 0x0324 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	float                                              fTurret_TurretPunishment;                         		// 0x0328 (0x0004) [0x0000000000024001]              ( CPF_Edit | CPF_Config | CPF_EditConst )
	TArray< struct FTPenaltyStruct >                   mPenaltyArray;                                    		// 0x032C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              mLastCalculatedTime;                              		// 0x0338 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBTDMSpawnPoint* >                  mNearestPoints;                                   		// 0x033C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBBroadcastHandler
// 0x0000 (0x01E0 - 0x01E0)
class APBBroadcastHandler : public ABroadcastHandler
{
public:
public:
};

// Class PlanBGame.PBLevelCheckCamera
// 0x0008 (0x02E4 - 0x02DC)
class APBLevelCheckCamera : public ACameraActor
{
public:
	struct FName                                       CameraName;                                       		// 0x02DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBBenchmarkReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBBenchmarkReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBKWeaponInfo_Grenade
// 0x0008 (0x0284 - 0x027C)
class APBKWeaponInfo_Grenade : public APBKWeaponInfo
{
public:
	unsigned long                                      bThrown : 1;                                      		// 0x027C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	int                                                GrenadeAmmo;                                      		// 0x0280 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeaponInfo_PPlane
// 0x0000 (0x027C - 0x027C)
class APBKWeaponInfo_PPlane : public APBKWeaponInfo
{
public:
public:
};

// Class PlanBGame.PBKWeaponInfo_HeadCrab
// 0x0000 (0x027C - 0x027C)
class APBKWeaponInfo_HeadCrab : public APBKWeaponInfo
{
public:
public:
};

// Class PlanBGame.PBCustomizationCache
// 0x000C (0x0048 - 0x003C)
class UPBCustomizationCache : public UObject
{
public:
	TArray< struct FPBWCC_PlayerCache >                PlayerCaches;                                     		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSeqEvent_ObjectivePickedup
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObjectivePickedup : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBBioBomb
// 0x0000 (0x03BC - 0x03BC)
class APBBioBomb : public APBPlaceableDevice
{
public:
public:
};

// Class PlanBGame.PBBird
// 0x0020 (0x01F8 - 0x01D8)
class APBBird : public APBFlockable
{
public:
	class UPBAnim_BlendList*                           AnimBlender;                                      		// 0x01D8 (0x0004) [0x0000000000000000]              
	class USkeletalMeshComponent*                      SKM;                                              		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              avoidanceRadius;                                  		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBFlock*                                    flock;                                            		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     avoidanceVector;                                  		// 0x01E8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x01F4 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBFlock
// 0x0020 (0x0260 - 0x0240)
class APBFlock : public APBBaseFlock
{
public:
	class UClass*                                      critterClass;                                     		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class APBFlockable* >                      critters;                                         		// 0x0244 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                numCritters;                                      		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              spawnRadius;                                      		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRange                                      critterScaleRange;                                		// 0x0258 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBBlueTeamDefensePoint
// 0x0000 (0x02D8 - 0x02D8)
class APBBlueTeamDefensePoint : public APBDefensePoint
{
public:
public:
};

// Class PlanBGame.PBBlueTeamStart
// 0x0002 (0x02C4 - 0x02C2)
class APBBlueTeamStart : public APBPlayerStart
{
public:
public:
};

// Class PlanBGame.PBBombMusic
// 0x0000 (0x01D8 - 0x01D8)
class APBBombMusic : public AInfo
{
public:
public:
};

// Class PlanBGame.PBHoldSpot
// 0x0000 (0x02D8 - 0x02D8)
class APBHoldSpot : public APBDefensePoint
{
public:
public:
};

// Class PlanBGame.PBBotBarrikade
// 0x0000 (0x02EC - 0x02EC)
class APBBotBarrikade : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBEmitter
// 0x0020 (0x0204 - 0x01E4)
class APBEmitter : public AEmitter
{
public:
	unsigned long                                      bCreateLightComponent : 1;                        		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FLightValues >                      LightTimeShift;                                   		// 0x01E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LightBrightness;                                  		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightRadius;                                      		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      LightColor;                                       		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      ExplosionLightClass;                              		// 0x0200 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBReplicatedEmitter
// 0x0020 (0x0224 - 0x0204)
class APBReplicatedEmitter : public APBEmitter
{
public:
	class UParticleSystem*                             EmitterTemplate;                                  		// 0x0204 (0x0004) [0x0000000000000000]              
	float                                              DedicatedServerLifeSpan;                          		// 0x0208 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   Sound_Effect;                                     		// 0x020C (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             Sound_Component;                                  		// 0x0210 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              fFadeOutTime;                                     		// 0x0214 (0x0004) [0x0000000000000000]              
	TArray< struct FName >                             FadeOutParameters;                                		// 0x0218 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBEmit_HitEffect
// 0x0008 (0x022C - 0x0224)
class APBEmit_HitEffect : public APBReplicatedEmitter
{
public:
	struct FName                                       BoneName;                                         		// 0x0224 (0x0008) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class PlanBGame.PBMsgC4Placed
// 0x0000 (0x02FC - 0x02FC)
class UPBMsgC4Placed : public UPBGameMessage
{
public:
public:
};

// Class PlanBGame.PBMsgC4PickedUp
// 0x0000 (0x02FC - 0x02FC)
class UPBMsgC4PickedUp : public UPBGameMessage
{
public:
public:
};

// Class PlanBGame.PBMsgC4Dropped
// 0x0000 (0x02FC - 0x02FC)
class UPBMsgC4Dropped : public UPBGameMessage
{
public:
public:
};

// Class PlanBGame.PBDmgType_C4
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_C4 : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBCampaign
// 0x0000 (0x0468 - 0x0468)
class APBCampaign : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBCampaignMap
// 0x0000 (0x01D8 - 0x01D8)
class APBCampaignMap : public APBNCampaignMap
{
public:
public:
};

// Class PlanBGame.PBCampaignMap_Node
// 0x0000 (0x01D8 - 0x01D8)
class APBCampaignMap_Node : public APBNCampaignMap
{
public:
public:
};

// Class PlanBGame.PBCampaignMap_ConnectionNode
// 0x0000 (0x01D8 - 0x01D8)
class APBCampaignMap_ConnectionNode : public APBCampaignMap_Node
{
public:
public:
};

// Class PlanBGame.PBCampaignMap_LevelNode
// 0x0000 (0x01D8 - 0x01D8)
class APBCampaignMap_LevelNode : public APBCampaignMap_Node
{
public:
public:
};

// Class PlanBGame.PBCampaignMapArc
// 0x0000 (0x003C - 0x003C)
class UPBCampaignMapArc : public UObject
{
public:
public:
};

// Class PlanBGame.PBCGPlayerReplicationInfo
// 0x0000 (0x07F8 - 0x07F8)
class APBCGPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBChangeClassMessage
// 0x0000 (0x0060 - 0x0060)
class UPBChangeClassMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBChatMessageData
// 0x0040 (0x007C - 0x003C)
class UPBChatMessageData : public UObject
{
public:
	struct FString                                     IRCServer;                                        		// 0x003C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     IRCGroup;                                         		// 0x0048 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                maxMessages;                                      		// 0x0054 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FPBChatMessage >                    ChatMessages;                                     		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   ChatMessageReceivedDelegates;                     		// 0x0064 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatMessageReceived__Delegate;                		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBChest
// 0x000F (0x0360 - 0x0351)
class APBChest : public APBInteractiveObjective
{
public:
	int                                                SpawnChance;                                      		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      TDM : 1;                                          		// 0x0358 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      DVN : 1;                                          		// 0x0358 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      SND : 1;                                          		// 0x0358 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      activatable : 1;                                  		// 0x0358 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	int                                                ActiveDuration;                                   		// 0x035C (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class PlanBGame.PBCivilianGetDownMessage
// 0x0000 (0x0078 - 0x0078)
class UPBCivilianGetDownMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBCivilianStart
// 0x0002 (0x02C4 - 0x02C2)
class APBCivilianStart : public APBPlayerStart
{
public:
public:
};

// Class PlanBGame.PBCLGameReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBCLGameReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBClientEmitter
// 0x0000 (0x01E4 - 0x01E4)
class APBClientEmitter : public AEmitter
{
public:
public:
};

// Class PlanBGame.PBCLPlayerReplicationInfo
// 0x0000 (0x07F8 - 0x07F8)
class APBCLPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBCLPlayerStart
// 0x0002 (0x02C4 - 0x02C2)
class APBCLPlayerStart : public APBPlayerStart
{
public:
public:
};

// Class PlanBGame.PBConsole
// 0x0004 (0x01D8 - 0x01D4)
class UPBConsole : public UConsole
{
public:
	unsigned long                                      m_bBlockConsole : 1;                              		// 0x01D4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBConstantLimiter
// 0x0004 (0x0040 - 0x003C)
class UPBConstantLimiter : public UPBChoiseLimiter
{
public:
	int                                                m_nLimitation;                                    		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBCreditsList
// 0x0018 (0x0054 - 0x003C)
class UPBCreditsList : public UObject
{
public:
	struct FString                                     CreditsList;                                      		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              CreditsMovementDelay;                             		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CreditsMovementTime;                              		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPBCreditsList*                              Archetype;                                        		// 0x0050 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBCriminalsEscapedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBCriminalsEscapedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBItemShopHelper
// 0x000C (0x004C - 0x0040)
class UPBItemShopHelper : public UPBSingleton
{
public:
	TArray< struct FString >                           SystemReservedNames;                              		// 0x0040 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBCustomWeapon_Preview
// 0x0000 (0x01D8 - 0x01D8)
class APBCustomWeapon_Preview : public AActor
{
public:
public:
};

// Class PlanBGame.PBDataStore_GameSettings
// 0x0000 (0x007C - 0x007C)
class UPBDataStore_GameSettings : public UUIDataStore_OnlineGameSettings
{
public:
public:
};

// Class PlanBGame.PBGameSettingsTDM
// 0x0000 (0x00E4 - 0x00E4)
class UPBGameSettingsTDM : public UPBGameSettingsCommon
{
public:
public:
};

// Class PlanBGame.PBDeathMessage
// 0x001C (0x007C - 0x0060)
class UPBDeathMessage : public UPBLocalMessage
{
public:
	struct FString                                     KilledString;                                     		// 0x0060 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     SomeoneString;                                    		// 0x006C (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bNoConsoleDeathMessages : 1;                      		// 0x0078 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
public:
};

// Class PlanBGame.PBDefendingTeam
// 0x0000 (0x0060 - 0x0060)
class UPBDefendingTeam : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBDefuseKit
// 0x0000 (0x03BC - 0x03BC)
class APBDefuseKit : public APBPlaceableDevice
{
public:
public:
};

// Class PlanBGame.PBDemoRecSpectator
// 0x0014 (0x08C8 - 0x08B4)
class APBDemoRecSpectator : public APBPlayerController
{
public:
	unsigned long                                      bTempBehindView : 1;                              		// 0x08B4 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bFoundPlayer : 1;                                 		// 0x08B4 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bLockRotationToViewTarget : 1;                    		// 0x08B4 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bAutoSwitchPlayers : 1;                           		// 0x08B4 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	struct FString                                     RemoteViewTarget;                                 		// 0x08B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              AutoSwitchPlayerInterval;                         		// 0x08C4 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class PlanBGame.PBDmgType_AK47
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_AK47 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_ALR3000
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_ALR3000 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_AS50
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_AS50 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_AWM
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_AWM : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_BareHands
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_BareHands : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Beretta_9mm
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Beretta_9mm : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_DSR1
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_DSR1 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Encroached
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Encroached : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Grenade
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Grenade : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Lupara
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Lupara : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Mac
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Mac : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Mossberg
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Mossberg : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_MP9
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_MP9 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_Nova
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_Nova : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_PKnife
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_PKnife : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_PSG1
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_PSG1 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_R870
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_R870 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_RocketLauncher
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_RocketLauncher : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_SigP226
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_SigP226 : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_SmokeGrenade
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_SmokeGrenade : public UPBDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_TankShell
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_TankShell : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_UMP
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_UMP : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBDmgType_USP
// 0x0000 (0x0100 - 0x0100)
class UPBDmgType_USP : public UPBBulletDamageType
{
public:
public:
};

// Class PlanBGame.PBInteractiveObstacle
// 0x0000 (0x02EC - 0x02EC)
class APBInteractiveObstacle : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBDoorObstacle
// 0x0000 (0x02EC - 0x02EC)
class APBDoorObstacle : public APBInteractiveObstacle
{
public:
public:
};

// Class PlanBGame.PBDrillerRestartedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBDrillerRestartedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBDrillerStoppedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBDrillerStoppedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBDTB_PlayerStart
// 0x0006 (0x02C8 - 0x02C2)
class APBDTB_PlayerStart : public APBPlayerStart
{
public:
	unsigned long                                      bDefendingStart : 1;                              		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class PlanBGame.PBEmit_BloodSpray
// 0x0000 (0x022C - 0x022C)
class APBEmit_BloodSpray : public APBEmit_HitEffect
{
public:
public:
};

// Class PlanBGame.PBEmitter_VehicleDead
// 0x0000 (0x0224 - 0x0224)
class APBEmitter_VehicleDead : public APBReplicatedEmitter
{
public:
public:
};

// Class PlanBGame.PBEmitter_VehicleDestruction
// 0x0000 (0x0224 - 0x0224)
class APBEmitter_VehicleDestruction : public APBReplicatedEmitter
{
public:
public:
};

// Class PlanBGame.PBEnemyCapturedHQMessage
// 0x0000 (0x0060 - 0x0060)
class UPBEnemyCapturedHQMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBEnemyDownMsg
// 0x0000 (0x0060 - 0x0060)
class UPBEnemyDownMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBEnemySpottedMsg
// 0x0000 (0x0060 - 0x0060)
class UPBEnemySpottedMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBEventList
// 0x0000 (0x003C - 0x003C)
class UPBEventList : public UObject
{
public:
public:
};

// Class PlanBGame.PBEventSystem_BaseViewer
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_BaseViewer : public UObject
{
public:
public:
};

// Class PlanBGame.PBEventSystem_ConsoleViewer
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_ConsoleViewer : public UPBEventSystem_BaseViewer
{
public:
public:
};

// Class PlanBGame.PBEventSystem_KOGSStorage
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_KOGSStorage : public UPBEventSystem_BaseStorage
{
public:
public:
};

// Class PlanBGame.PBEventSystem_KOGSStorageExpiredItems
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_KOGSStorageExpiredItems : public UPBEventSystem_KOGSStorage
{
public:
public:
};

// Class PlanBGame.PBEventSystem_TestStorage
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_TestStorage : public UPBEventSystem_BaseStorage
{
public:
public:
};

// Class PlanBGame.PBEventSystem_UIViewer
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_UIViewer : public UPBEventSystem_BaseViewer
{
public:
public:
};

// Class PlanBGame.PBEventSystem_UIGameViewer
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_UIGameViewer : public UPBEventSystem_UIViewer
{
public:
public:
};

// Class PlanBGame.PBEventSystem_UIMenuViewer
// 0x0000 (0x003C - 0x003C)
class UPBEventSystem_UIMenuViewer : public UPBEventSystem_UIViewer
{
public:
public:
};

// Class PlanBGame.PBEvidenceDestroyed
// 0x0000 (0x0060 - 0x0060)
class UPBEvidenceDestroyed : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBEvidenceSecured
// 0x0000 (0x0060 - 0x0060)
class UPBEvidenceSecured : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBExcluded
// 0x0000 (0x01D8 - 0x01D8)
class APBExcluded : public AActor
{
public:
public:
};

// Class PlanBGame.PBFinalMap_StateChanged
// 0x0000 (0x0078 - 0x0078)
class UPBFinalMap_StateChanged : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBInteractiveButton
// 0x0013 (0x0364 - 0x0351)
class APBInteractiveButton : public APBInteractiveObjective
{
public:
	float                                              fTimeToFireEvent;                                 		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FScriptDelegate                             __OnInteractionSuccessful__Delegate;              		// 0x0358 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSeqEvent_InteractiveButtonPressed
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_InteractiveButtonPressed : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBFinalObjectiveButton
// 0x0000 (0x0364 - 0x0364)
class APBFinalObjectiveButton : public APBInteractiveButton
{
public:
public:
};

// Class PlanBGame.PBFriendlyCapturedHQMessage
// 0x0000 (0x0060 - 0x0060)
class UPBFriendlyCapturedHQMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBStatisticsStats
// 0x0060 (0x009C - 0x003C)
class UPBStatisticsStats : public UObject
{
public:
	struct FTStatsSet                                  PlayerStats;                                      		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  WeaponStats;                                      		// 0x0048 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  MapStats;                                         		// 0x0054 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTStatsSet >                        WeaponPerMapStats;                                		// 0x0060 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  GameMapRFGStats;                                  		// 0x006C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  GameMapTDMStats;                                  		// 0x0078 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  GameMapCMPStats;                                  		// 0x0084 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTStatsSet                                  GameCampaignStats;                                		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGameLobby
// 0x0000 (0x0468 - 0x0468)
class APBGameLobby : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBGamePrototypeCL
// 0x0000 (0x0468 - 0x0468)
class APBGamePrototypeCL : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBMatchStatistics
// 0x0010 (0x004C - 0x003C)
class UPBMatchStatistics : public UObject
{
public:
	int                                                LevelEvents[ 0x4 ];                               		// 0x003C (0x0010) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBUWPlayerStart
// 0x0007 (0x02C9 - 0x02C2)
class APBUWPlayerStart : public APBPlayerStart
{
public:
	unsigned long                                      bAutomaticSetup : 1;                              		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      ePointDirection;                                  		// 0x02C8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBGDR_BlockingGateActor
// 0x008C (0x0264 - 0x01D8)
class APBGDR_BlockingGateActor : public AActor
{
public:
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        GateMesh;                                         		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	struct FVector                                     closeTranslation;                                 		// 0x01E0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              closeTime;                                        		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBGDR_RobotWaypoint*                        blocksNavigationPoint;                            		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartLocation;                                    		// 0x01F4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     openMovementSpeed;                                		// 0x0200 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     MovementSpeed;                                    		// 0x020C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              Hits;                                             		// 0x0218 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBGDR_HitZoneActor* >               hitZones;                                         		// 0x021C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APBInteractiveButton*                        gateSwitch;                                       		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      startClosed : 1;                                  		// 0x022C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      canBeClosed : 1;                                  		// 0x022C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class APBInteractiveButton*                        gateDestroySwitch;                                		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class APBPlayerStart* >                    DisabledSpwanWhenDestroyed;                       		// 0x0234 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class APBPlayerStart* >                    EnabledSpwanWhenDestroyed;                        		// 0x0240 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USpriteComponent*                            GoodSprite;                                       		// 0x024C (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< struct FName >                             stateNames;                                       		// 0x0250 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      GateClosePercent;                                 		// 0x025C (0x0001) [0x0000000000000020]              ( CPF_Net )
	float                                              SrvClosePercent;                                  		// 0x0260 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBGDR_RobotWaypoint
// 0x001C (0x01F4 - 0x01D8)
class APBGDR_RobotWaypoint : public AActor
{
public:
	class USpriteComponent*                            GoodSprite;                                       		// 0x01D8 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class APBGDR_RobotWaypoint*                        NextRobotPathNode[ 0x2 ];                         		// 0x01DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSmoothlyTurnToThisWaypoint : 1;                  		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bGivePointsToAttackersWhenRobotPassesThis : 1;    		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlocked : 1;                                     		// 0x01E4 (0x0004) [0x0000000000000021] [0x00000004] ( CPF_Edit | CPF_Net )
	float                                              fRobotMaxSpeedModifier;                           		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBGDR_BlockingGateActor*                    pWhichBlockingGate;                               		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHeightZUpToSpawnRobot;                           		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBGDR_MapInfo
// 0x0010 (0x0088 - 0x0078)
class UPBGDR_MapInfo : public UPBGameMapInfo
{
public:
	class APBGDR_RobotWaypoint*                        FirstWaypoint;                                    		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBGDR_GiantRobot*                           pRobotArchetypeToSpawn;                           		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      GiantRobotClass;                                  		// 0x0080 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBGDR_GiantRobot*                           pCurrentRobot;                                    		// 0x0084 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGDR_PlayerStart
// 0x0006 (0x02C8 - 0x02C2)
class APBGDR_PlayerStart : public APBPlayerStart
{
public:
	unsigned long                                      bCapturePhase : 1;                                		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDefendPhase : 1;                                 		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAttackPhase : 1;                                 		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class PlanBGame.PBGameSearchCommon
// 0x0000 (0x00F4 - 0x00F4)
class UPBGameSearchCommon : public UOnlineGameSearch
{
public:
public:
};

// Class PlanBGame.PBGameSearchTDM
// 0x0000 (0x00F4 - 0x00F4)
class UPBGameSearchTDM : public UPBGameSearchCommon
{
public:
public:
};

// Class PlanBGame.PBGameStatCollector
// 0x0000 (0x01EC - 0x01EC)
class APBGameStatCollector : public AMutator
{
public:
public:
};

// Class PlanBGame.PBSkill_AllClients
// 0x0000 (0x029C - 0x029C)
class APBSkill_AllClients : public APBSkill
{
public:
public:
};

// Class PlanBGame.PBSkill_Mortar
// 0x0078 (0x0314 - 0x029C)
class APBSkill_Mortar : public APBSkill_AllClients
{
public:
	TArray< struct FMortarImprovementInfo >            rMortarImprovements;                              		// 0x029C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APBProjectileNoPhysic*                       pMortarProjectileTemplate;                        		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFixedSpawnHeight;                                		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDelayBetweenStrikes;                             		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMinVariation;                                    		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxVariation;                                    		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInitialDelay;                                    		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTooFarHigh;                                      		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pUnusableSound;                                   		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBProjectileNoPhysic*                       pLastMortarProjectile;                            		// 0x02C8 (0x0004) [0x0000000000000000]              
	class UStaticMeshComponent*                        pMortarMesh;                                      		// 0x02CC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pPlacementMarker;                                 		// 0x02D0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	int                                                iCurrentMortarCount;                              		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fMarkerYaw;                                       		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fYawRotSpeed;                                     		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bActivated : 1;                                   		// 0x02E0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FVector                                     vActivatedPosition;                               		// 0x02E4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     vActivatedNormal;                                 		// 0x02F0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	TArray< class APBSpawnVolumeTDM* >                 spawnVolumes;                                     		// 0x02FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVector                                     vFinalActivatedPosition;                          		// 0x0308 (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBGasBombExploded
// 0x0000 (0x0078 - 0x0078)
class UPBGasBombExploded : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBGDR_HitZoneActor
// 0x0098 (0x0270 - 0x01D8)
class APBGDR_HitZoneActor : public AActor
{
public:
	class USkeletalMeshComponent*                      pHitZoneSkeletalMesh;                             		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterial*                                   BaseHitZoneMaterial;                              		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       HitZoneMaterialParamName;                         		// 0x01E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cFullHealth;                                      		// 0x01EC (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cZeroHealth;                                      		// 0x01FC (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                cDestroyedHealth;                                 		// 0x020C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       OpeningAnimName;                                  		// 0x021C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ClosingAnimname;                                  		// 0x0224 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       OpenedIdleAnimName;                               		// 0x022C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ClosedIdleAnimName;                               		// 0x0234 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       HitAreaBoneName;                                  		// 0x023C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fHealth;                                          		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fClosingDuration;                                 		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fOpeningDuration;                                 		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      AssociatedActor;                                  		// 0x0250 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      HitZone;                                          		// 0x0254 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      byteHealthPerc;                                   		// 0x0255 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      RepStateId;                                       		// 0x0256 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< struct FName >                             PossibleStates;                                   		// 0x0258 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UMaterialInstanceConstant*                   HitZoneMaterial;                                  		// 0x0264 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentHealth;                                   		// 0x0268 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bWantsToOpen : 1;                                 		// 0x026C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bWantsToClose : 1;                                		// 0x026C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class PlanBGame.PBGDR_RobotWeaponTurret
// 0x00E8 (0x02CC - 0x01E4)
class APBGDR_RobotWeaponTurret : public APBDamagerDevice
{
public:
	class USkeletalMeshComponent*                      pTopTurret;                                       		// 0x01E4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           pLightEnv;                                        		// 0x01E8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pLaserComp;                                       		// 0x01EC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pFiringSoundComp;                                 		// 0x01F0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pMuzzleFlashComp;                                 		// 0x01F4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInterface*                          pFriendlyMaterialInstance;                        		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          pEnemyMaterialInstance;                           		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       MuzzleFlashSocketName;                            		// 0x0200 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LaserSocketName;                                  		// 0x0208 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTracerSpawnTimer;                                		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pTracerParticleSystem;                            		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             pMuzzleFlashPS;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             LaserPS;                                          		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       IdleAnimName;                                     		// 0x0220 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       DestroyedAnimName;                                		// 0x0228 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTrackingTimer;                                   		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimeUntilTurretStopsFiring;                      		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWarmupTime;                                      		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pFiringSingleSoundCue;                            		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pWarmupSoundCue;                                  		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pFiringSoundCue;                                  		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   pEndFiringCue;                                    		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadDegrees;                                   		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iDamagePerBullet;                                 		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ShootSocketName;                                  		// 0x0254 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurretRotSpeed;                                  		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       CharacterShootAtBoneName;                         		// 0x0260 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fStartTraceHeight;                                		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFireRate;                                        		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fUpFOV;                                           		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDownFOV;                                         		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fYawFOV;                                          		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAggressionRange;                                 		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAttackRange;                                     		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEffectiveRange;                                  		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxBulletRange;                                  		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bCanTargetTurrets : 1;                            		// 0x028C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLaserActive : 1;                                 		// 0x028C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	float                                              fCharacterHeightCompensation;                     		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurretHeightCompensation;                        		// 0x0294 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iAttackWhichTeam;                                 		// 0x0298 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	struct FVector                                     vHitLocation;                                     		// 0x029C (0x000C) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      replicateStateId;                                 		// 0x02A8 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	TArray< struct FName >                             stateNames;                                       		// 0x02AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class AActor*                                      TargetActor;                                      		// 0x02B8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fTargetTurretYaw;                                 		// 0x02BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fTargetTurretPitch;                               		// 0x02C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentTurretYaw;                                		// 0x02C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fCurrentTurretPitch;                              		// 0x02C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGDR_GiantRobot_test
// 0x0004 (0x030C - 0x0308)
class APBGDR_GiantRobot_test : public APBGDR_GiantRobot
{
public:
	class APBGDR_RobotWaypoint*                        SpawnWaypoint;                                    		// 0x0308 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBGDR_HitZone_test
// 0x0018 (0x01F8 - 0x01E0)
class APBGDR_HitZone_test : public APBDynamicSMActor
{
public:
	float                                              Hits;                                             		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              currHits;                                         		// 0x01E4 (0x0004) [0x0000000000000000]              
	unsigned long                                      Destroyed : 1;                                    		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      indestructable : 1;                               		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      ReplicatedDestructable : 1;                       		// 0x01E8 (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
	unsigned long                                      ReplicatedDestroyed : 1;                          		// 0x01E8 (0x0004) [0x0000000000000020] [0x00000008] ( CPF_Net )
	struct FScriptDelegate                             __onDestroyed__Delegate;                          		// 0x01EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGDR_SpawnCoverPoint
// 0x0020 (0x01F8 - 0x01D8)
class APBGDR_SpawnCoverPoint : public AActor
{
public:
	TArray< class UStaticMesh* >                       SpawnList;                                        		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APBGDR_SpawnCoverPoint*                      useOtherSpawnList;                                		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpawnChance;                                      		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        SpawnedMesh;                                      		// 0x01EC (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	int                                                StaticMeshID;                                     		// 0x01F0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class USpriteComponent*                            GoodSprite;                                       		// 0x01F4 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBGFxBackground
// 0x000C (0x00AC - 0x00A0)
class UPBGFxBackground : public UPBGFxObject_ContainerBased
{
public:
	struct FString                                     msMoviePath;                                      		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxBackground_CharacterCreation
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_CharacterCreation : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_CharacterSelection
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_CharacterSelection : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_CharacterShop
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_CharacterShop : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_Login
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_Login : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_MainMenu
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_MainMenu : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_ServiceShop
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_ServiceShop : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxBackground_WeaponShop
// 0x0000 (0x00AC - 0x00AC)
class UPBGFxBackground_WeaponShop : public UPBGFxBackground
{
public:
public:
};

// Class PlanBGame.PBGFxMovie_Background
// 0x000C (0x0200 - 0x01F4)
class UPBGFxMovie_Background : public UPBGFxMovie_Layered
{
public:
	class UMaterialInstance*                           mBackgroundMaterial;                              		// 0x01F4 (0x0004) [0x0000000000000000]              
	class UMaterialInstanceConstant*                   mBackgroundMaterialInstance;                      		// 0x01F8 (0x0004) [0x0000000000000000]              
	unsigned long                                      mApplyMaterial : 1;                               		// 0x01FC (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBUICache
// 0x000C (0x0048 - 0x003C)
class UPBUICache : public UObject
{
public:
	TArray< class UObject* >                           m_UICache;                                        		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD_DeathCam
// 0x0038 (0x00D8 - 0x00A0)
class UPBGFxObject_HUD_DeathCam : public UPBGFxObject_ContainerBased
{
public:
	struct FString                                     mAvatarImage;                                     		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     mOpponentName;                                    		// 0x00AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     mRank;                                            		// 0x00B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      mShowNemesis : 1;                                 		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mShowNewNemesis : 1;                              		// 0x00C4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	int                                                mHealth;                                          		// 0x00C8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APawn*                                       mKiller;                                          		// 0x00CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerReplicationInfo*                    mKillerPRI;                                       		// 0x00D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   m_NemesisSoundCue;                                		// 0x00D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_HalfTime
// 0x004C (0x00EC - 0x00A0)
class UPBGFxObject_HalfTime : public UPBGFxObject_HalfTime_Base
{
public:
	class UGFxObject*                                  mChatHolder;                                      		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mChatHolderText;                                  		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                lastProcessedMsgId;                               		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorGameMaster;                               		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorSameTeam;                                 		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorOposingTeam;                              		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorSelf;                                     		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                friendlyColour;                                   		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                enemyColour;                                      		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                playerColour;                                     		// 0x00C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_sendChatMsg__Delegate;                   		// 0x00C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusIn__Delegate;                     		// 0x00D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x00E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HalfTime_SND
// 0x0064 (0x0104 - 0x00A0)
class UPBGFxObject_HalfTime_SND : public UPBGFxObject_HalfTime_Base
{
public:
	class UGFxObject*                                  mChatHolder;                                      		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mChatHolderText;                                  		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                lastProcessedMsgId;                               		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorGameMaster;                               		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorSameTeam;                                 		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorOposingTeam;                              		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                msgColorSelf;                                     		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                friendlyColour;                                   		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                enemyColour;                                      		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                playerColour;                                     		// 0x00C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     sIndicatorAttack;                                 		// 0x00C8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     sIndicatorDefend;                                 		// 0x00D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_sendChatMsg__Delegate;                   		// 0x00E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusIn__Delegate;                     		// 0x00EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x00F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Foreground
// 0x0010 (0x00B0 - 0x00A0)
class UPBGFxObject_Foreground : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_show__Delegate;                          		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Notifications
// 0x0024 (0x00C4 - 0x00A0)
class UPBGFxObject_Notifications : public UPBGFxObject_ContainerBased
{
public:
	struct FScriptDelegate                             __Unreal_onNextClick__Delegate;                   		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCloseAllClick__Delegate;               		// 0x00AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onAbortClick__Delegate;                  		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_ServerBrowser
// 0x0154 (0x0254 - 0x0100)
class UPBGFxObject_ServerBrowser : public UPBGFxObject_ShopClass
{
public:
	class UOnlineGameInterface*                        GameInterface;                                    		// 0x0100 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0104 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x0108 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_errorcode;                                      		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_CurrentRequestId;                               		// 0x0110 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_laststatus;                                     		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_lastseconds;                                    		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       m_gameServerId;                                   		// 0x011C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_reason;                                         		// 0x012C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_url;                                            		// 0x0138 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBMapList*                                  pMapList;                                         		// 0x0144 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0148 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x014C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fNextServerStatusUpdateTime;                      		// 0x0150 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              fSecondsBetweenServerStatusUpdates;               		// 0x0154 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_MaxPing;                                        		// 0x0158 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x015C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      ShowFullServerCfg : 1;                            		// 0x015C (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      PasswordServersCfg : 1;                           		// 0x015C (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	struct FString                                     ServerPassword;                                   		// 0x0160 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UOnlineGameSearch*                           GameSearch;                                       		// 0x016C (0x0004) [0x0000000000000000]              
	struct FString                                     ServerNameCheck;                                  		// 0x0170 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mnAvailabilityRequestId;                          		// 0x017C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      ServerStatus;                                     		// 0x0180 (0x0001) [0x0000000000000000]              
	struct FString                                     MaxPingCfg;                                       		// 0x0184 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                boostedServersCfg;                                		// 0x0190 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                friendlyFireServersCfg;                           		// 0x0194 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                lobbyServersCfg;                                  		// 0x0198 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     MapNameCfg;                                       		// 0x019C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     ServerRegionCfg;                                  		// 0x01A8 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                RegionIdCfg;                                      		// 0x01B4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                RegionCreateCfg;                                  		// 0x01B8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                AutoRegionId;                                     		// 0x01BC (0x0004) [0x0000000000000000]              
	TArray< struct FTPBServerDetail >                  ServerList;                                       		// 0x01C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  mCreateServerPanel;                               		// 0x01CC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x01D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onHideForeground__Delegate;              		// 0x01DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_serverNameUpdated__Delegate;             		// 0x01E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __quitServerBrowser__Delegate;                    		// 0x01F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __SetNewRegionCreate__Delegate;                   		// 0x0200 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Refresh__Delegate;                              		// 0x020C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __ApplySearchFilter__Delegate;                    		// 0x0218 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __cancelSearch__Delegate;                         		// 0x0224 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __ServerCreate__Delegate;                         		// 0x0230 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __JoinServer__Delegate;                           		// 0x023C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __cancelJoinGame__Delegate;                       		// 0x0248 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_MortarMinimap
// 0x0038 (0x00D8 - 0x00A0)
class UPBGFxObject_MortarMinimap : public UPBGFxObject_ContainerBased
{
public:
	struct FVector2D                                   map_topL;                                         		// 0x00A0 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FVector2D                                   map_bottomR;                                      		// 0x00A8 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              initTime;                                         		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      alphaSetToZero : 1;                               		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              enemyDisplayTime;                                 		// 0x00B8 (0x0004) [0x0000000000000000]              
	float                                              enemyFadeoutTime;                                 		// 0x00BC (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __Unreal_CanDropMortarHere__Delegate;             		// 0x00C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_DropMortarAt__Delegate;                  		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_GlobalBasket
// 0x006C (0x010C - 0x00A0)
class UPBGFxObject_GlobalBasket : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCoinsRequest;                                  		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCreditsRequest;                                		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCoins;                                         		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCredits;                                       		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bPurchaseFinished : 1;                          		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bGotoInventory : 1;                             		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      m_bRefreshMoneyCounts : 1;                        		// 0x00B4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onPurchase__Delegate;                    		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickRemove__Delegate;                 		// 0x00C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateBasket__Delegate;                  		// 0x00D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onFilterClick__Delegate;                 		// 0x00DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_changeCurrency__Delegate;                		// 0x00E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_changeCurrencyForItems__Delegate;        		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_getPremiumDiscount__Delegate;            		// 0x0100 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CharacterSelection
// 0x0088 (0x0184 - 0x00FC)
class UPBGFxObject_CharacterSelection : public UPBGFxObject_MusicContainer
{
public:
	class UMaterialInterface*                          mNewCharacterMaterial;                            		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastSelectedCharacterIndex;                       		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       LastSelectedCharacterGuid;                        		// 0x0104 (0x0010) [0x0000000000004000]              ( CPF_Config )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     msCurrentArea;                                    		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      m_bOpenAnimationHasBeenPlayed : 1;                		// 0x0124 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bProfilesHaveBeenLoaded : 1;                    		// 0x0124 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x012C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct UPBGFxObject_CharacterSelection_FTCharacterProfileInfo > mCharacterProfileInfoArray;                       		// 0x0130 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x013C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnDeleteClick__Delegate;                  		// 0x0148 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnEnterClick__Delegate;                   		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealLogout__Delegate;                         		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnAreaClick__Delegate;                    		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnAreaRollOver__Delegate;                 		// 0x0178 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CharacterCreation
// 0x0190 (0x0290 - 0x0100)
class UPBGFxObject_CharacterCreation : public UPBGFxObject_ShopClass
{
public:
	class UMaterialInterface*                          mNewCharacterMaterial;                            		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct UPBGFxObject_CharacterCreation_FTCharacterProfileInfo mCharacterProfileInfoArray[ 0x2 ];                		// 0x0108 (0x0050) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mnAvatarIndex;                                    		// 0x0158 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x015C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mnAvailabilityRequestId;                          		// 0x0160 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbProfileSelected : 1;                            		// 0x0164 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbValidName : 1;                                  		// 0x0164 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbCharactersInited : 1;                           		// 0x0164 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bTimerExpired : 1;                                		// 0x0164 (0x0004) [0x0000000000000000] [0x00000008] 
	struct FString                                     m_CurrentGender;                                  		// 0x0168 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     CharNameCheck;                                    		// 0x0174 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTCharInfo                                  mCharInfo;                                        		// 0x0180 (0x001C) [0x0000000000002000]              ( CPF_Transient )
	struct FTItems                                     mItems[ 0x2 ];                                    		// 0x019C (0x0028) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTHeadInfo                                  mHeads[ 0x2 ];                                    		// 0x01C4 (0x0078) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x023C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0248 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnNameChanged__Delegate;                  		// 0x0254 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnRaceChanged__Delegate;                  		// 0x0260 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnCreateClick__Delegate;                  		// 0x026C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnColorChanged__Delegate;                 		// 0x0278 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onSetCharacter__Delegate;                		// 0x0284 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_AvatarSelection
// 0x0010 (0x00B0 - 0x00A0)
class UPBGFxObject_AvatarSelection : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __onClickItem__Delegate;                          		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_MainMenu
// 0x0074 (0x0170 - 0x00FC)
class UPBGFxObject_MainMenu : public UPBGFxObject_MusicContainer
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbAnimationFinished : 1;                          		// 0x0108 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	int                                                maxHeatBonusAllowed;                              		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onSkillSelect__Delegate;                 		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x0128 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onPresetClick__Delegate;                 		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onShopClick__Delegate;                   		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onHideForeground__Delegate;              		// 0x014C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_getStyleBonusBoost__Delegate;            		// 0x0158 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_getStyleStartHeat__Delegate;             		// 0x0164 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CharacterDeletion
// 0x0010 (0x00B0 - 0x00A0)
class UPBGFxObject_CharacterDeletion : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __onOKClick__Delegate;                            		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CriticalError
// 0x0018 (0x00B8 - 0x00A0)
class UPBGFxObject_CriticalError : public UPBGFxObject_ContainerBased
{
public:
	struct FString                                     ErrorMessage;                                     		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnCloseClick__Delegate;                   		// 0x00AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Start
// 0x0000 (0x00A0 - 0x00A0)
class UPBGFxObject_Start : public UPBGFxObject_ContainerBased
{
public:
public:
};

// Class PlanBGame.PBGFxObject_Lobby
// 0x0024 (0x00C4 - 0x00A0)
class UPBGFxObject_Lobby : public UPBGFxObject_ContainerBased
{
public:
	int                                                mnPrevTeamIndex;                                  		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbIsLobbyAdmin : 1;                               		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbConsolidatedLobby : 1;                          		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UGFxObject*                                  mSharedServerContainer;                           		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mSetupContainer;                                  		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mSharedContainer;                                 		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mTeamsPanel;                                      		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mFaction0;                                        		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mFaction1;                                        		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mTempFaction;                                     		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_PlayerSettings
// 0x00E8 (0x0178 - 0x0090)
class UPBGFxObject_PlayerSettings : public UPBGFxObject_Tickable
{
public:
	TArray< struct FPBSubmenuInfo >                    rSubMenus;                                        		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UPBGFxObject_Tickable*                       mCurrentScene;                                    		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      eCurrentSceneType;                                		// 0x00A0 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	class UGFxObject*                                  mSceneContainer;                                  		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bIsDirty : 1;                                     		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bCanStartVote : 1;                                		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bCanSwitchTeam : 1;                               		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	class UGFxObject*                                  mBackgroundContainer;                             		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iRepeatMap;                                       		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNewMap;                                          		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNewSettings;                                     		// 0x00B8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPlayerVote;                                      		// 0x00BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iDisplayedTeam;                                   		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     SubMenuPath;                                      		// 0x00C4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     SceneContainerPath;                               		// 0x00D0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     FactionIconPath;                                  		// 0x00DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     FactionIconResource;                              		// 0x00E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     NextMatchVotePanelName;                           		// 0x00F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UTexture*                                    factionTexture;                                   		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              factionTextureHeight;                             		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              factionTextureWidth;                              		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FTextureCoordinates                         CTFCoordinates;                                   		// 0x010C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FTextureCoordinates                         SyndicateCoordinates;                             		// 0x011C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FTextureCoordinates                         SpectatorCoordinates;                             		// 0x012C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     prevMapName;                                      		// 0x013C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSceneClosed__Delegate;                        		// 0x0148 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __PreStateChanged__Delegate;                      		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __PostStateChanged__Delegate;                     		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnNextMatchVoteChanged__Delegate;               		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CharacterShop
// 0x01D4 (0x02D0 - 0x00FC)
class UPBGFxObject_CharacterShop : public UPBGFxObject_MusicContainer
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FString >                           m_headCategories;                                 		// 0x0100 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_headItemTypes;                                  		// 0x010C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_upperbodyCategories;                            		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_upperbodyItemTypes;                             		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_lowerbodyCategories;                            		// 0x0130 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_lowerbodyItemTypes;                             		// 0x013C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_headTypes;                                      		// 0x0148 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_upperbodyTypes;                                 		// 0x0154 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_lowerbodyTypes;                                 		// 0x0160 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_sCurrentCategory;                               		// 0x016C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      m_RequestIDs;                                     		// 0x0178 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_Items;                                          		// 0x0184 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_TemporaryItemsArray;                            		// 0x0190 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_Colors;                                         		// 0x019C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_TempColors;                                     		// 0x01A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_ColorGroups;                                    		// 0x01B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_Inventory;                                      		// 0x01C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       m_CurrentItem;                                    		// 0x01CC (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nItemInfoRequest;                               		// 0x01DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_CurrentColorGroup;                              		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nArmAccessoriesPreset;                          		// 0x01E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nLegAccessoriesPreset;                          		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x01F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      m_bIgnoreConflicts : 1;                           		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbOpenAnimationComplete : 1;                      		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbReadyForNavigation : 1;                         		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	struct FTPBPotentialItem                           m_PotentialItem;                                  		// 0x01F8 (0x0024) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOfferCache >       mItemsCache;                                      		// 0x021C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onHideForeground__Delegate;              		// 0x0228 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onPositionClick__Delegate;               		// 0x0234 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0240 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x024C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRollOut__Delegate;                 		// 0x0258 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRemoved__Delegate;                 		// 0x0264 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemColorsRemoved__Delegate;           		// 0x0270 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategorySelected__Delegate;            		// 0x027C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onfocusOut__Delegate;                    		// 0x0288 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemSelected__Delegate;                		// 0x0294 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRollOver__Delegate;                		// 0x02A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onGroupRollOver__Delegate;               		// 0x02AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onGroupSelected__Delegate;               		// 0x02B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemEquipped__Delegate;                		// 0x02C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_WeaponShop
// 0x01CC (0x02C8 - 0x00FC)
class UPBGFxObject_WeaponShop : public UPBGFxObject_MusicContainer
{
public:
	TArray< struct FTPBWeaponShopOfferCache >          mItemsCache;                                      		// 0x00FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0108 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FPBUIEquipModStruct                         m_TempEquipModStructure;                          		// 0x010C (0x0048) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  m_RenameContainer;                                		// 0x0154 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBNWeaponPreset*                            m_CurrentPreset;                                  		// 0x0158 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_CurrentPresetIndex;                             		// 0x015C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_LastPresetIndex;                                		// 0x0160 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FSWeaponCode                                m_CurrentWeaponCode;                              		// 0x0164 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_CurrentCategory;                                		// 0x0170 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_CurrentSubCategory;                             		// 0x017C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_Items;                                          		// 0x0188 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_RepairItems;                                    		// 0x0194 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_TemporaryItemsArray;                            		// 0x01A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_Inventory;                                      		// 0x01AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_PrimaryWeaponCategories;                        		// 0x01B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_PrimaryWeaponCategoriesTextures;                		// 0x01C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      m_GetOfferRequests;                               		// 0x01D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_SelectedGroup;                                  		// 0x01DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTPBCharacterShopOffer >            m_Groups;                                         		// 0x01F0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_TemporaryGroupsArray;                           		// 0x01FC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBUILoadoutInfo >                  m_PresetNames;                                    		// 0x0208 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                m_nItemInfoRequest;                               		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nRenamePresetRequest;                           		// 0x0218 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mNavigationWeaponGuid;                            		// 0x021C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_renameLoadout__Delegate;                 		// 0x022C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_startRename__Delegate;                   		// 0x0238 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCancelRenaming__Delegate;              		// 0x0244 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0250 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRollOver__Delegate;                		// 0x025C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRollOut__Delegate;                 		// 0x0268 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onGroupClick__Delegate;                  		// 0x0274 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x0280 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onLoadoutSelected__Delegate;             		// 0x028C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategorySelected__Delegate;            		// 0x0298 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemEquipped__Delegate;                		// 0x02A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemRemoved__Delegate;                 		// 0x02B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onGroupRemoved__Delegate;                		// 0x02BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_ServiceShop
// 0x0200 (0x0300 - 0x0100)
class UPBGFxObject_ServiceShop : public UPBGFxObject_ShopClass
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     msCurrentCategoryButton;                          		// 0x0108 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mnAvailabilityRequestId;                          		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     msNewName;                                        		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     msOldName;                                        		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      mbNameAvailable : 1;                              		// 0x0130 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbChangingAvatar : 1;                             		// 0x0130 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbChangingRace : 1;                               		// 0x0130 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x0130 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      mbGetAdditionalInfo : 1;                          		// 0x0130 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	struct FGuid                                       mOldAvatarGuid;                                   		// 0x0134 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mNewAvatarGuid;                                   		// 0x0144 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mAddAvatarGuid;                                   		// 0x0154 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mAddSkinGuid;                                     		// 0x0164 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                mNewRaceIndex;                                    		// 0x0174 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mOldRaceIndex;                                    		// 0x0178 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mNewColorIndex;                                   		// 0x017C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mOldColorIndex;                                   		// 0x0180 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mInBasketRaceIndex;                               		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mInBasketColorIndex;                              		// 0x0188 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FTHeadInfo                                  mHeads[ 0x2 ];                                    		// 0x018C (0x0078) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct UPBGFxObject_ServiceShop_FTServiceCategory > mItems;                                           		// 0x0204 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBServiceOffer >                  mTemporaryItems;                                  		// 0x0210 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onHideForeground__Delegate;              		// 0x021C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeSkin_Add__Delegate;     		// 0x0228 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeSkin_Cancel__Delegate;  		// 0x0234 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeSkin_Accept__Delegate;  		// 0x0240 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeSkin_Change__Delegate;  		// 0x024C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeAvatar_Add__Delegate;   		// 0x0258 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeAvatar_Accept__Delegate;		// 0x0264 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeAvatar_Cancel__Delegate;		// 0x0270 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeAvatar_Select__Delegate;		// 0x027C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0288 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategorySelected__Delegate;            		// 0x0294 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeName_Add__Delegate;     		// 0x02A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeName_Accept__Delegate;  		// 0x02AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickChangeName_Cancel__Delegate;  		// 0x02B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onChangeNameText__Delegate;              		// 0x02C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickAdd__Delegate;                		// 0x02D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickRemove__Delegate;             		// 0x02DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickPeriodRemove__Delegate;       		// 0x02E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onListClickPeriod__Delegate;             		// 0x02F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_QuitFromMainMenu
// 0x001C (0x00BC - 0x00A0)
class UPBGFxObject_QuitFromMainMenu : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __unrealLogout__Delegate;                         		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             ___OnLogoutDone__Delegate;                        		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Quit
// 0x0010 (0x010C - 0x00FC)
class UPBGFxObject_Quit : public UPBGFxObject_MusicContainer
{
public:
	unsigned long                                      m_bReadyForQuit : 1;                              		// 0x00FC (0x0004) [0x0000000000000000] [0x00000001] 
	struct FScriptDelegate                             __Unreal_onQuit__Delegate;                        		// 0x0100 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD_Scoreboard
// 0x0418 (0x04B8 - 0x00A0)
class UPBGFxObject_HUD_Scoreboard : public UPBGFxObject_ContainerBased
{
public:
	struct FTPlayerInfo                                friendlyInfo[ 0xB ];                              		// 0x00A0 (0x01E4) [0x0000000000002000]              ( CPF_Transient )
	struct FTPlayerInfo                                enemyInfo[ 0xB ];                                 		// 0x0284 (0x01E4) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNumOnFriendlyTeam;                               		// 0x0468 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevNumOnFriendlyTeam;                           		// 0x046C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNumOnEnemyTeam;                                  		// 0x0470 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevNumOnEnemyTeam;                              		// 0x0474 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currentTickValue;                                 		// 0x0478 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                currentPlayerTeam;                                		// 0x047C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyHeat;                                		// 0x0480 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyKills;                               		// 0x0484 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyDeaths;                              		// 0x0488 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalFriendlyAssists;                             		// 0x048C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyHeat;                                   		// 0x0490 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyKills;                                  		// 0x0494 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyDeaths;                                 		// 0x0498 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                totalEnemyAssists;                                		// 0x049C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     PersonalEnemyString;                              		// 0x04A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     PersonalVictimString;                             		// 0x04AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_RemoveItems
// 0x000C (0x00AC - 0x00A0)
class UPBGFxObject_RemoveItems : public UPBGFxObject_ContainerBased
{
public:
	struct FScriptDelegate                             __Unreal_onAcceptClick__Delegate;                 		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD_SafetyBuy
// 0x0015 (0x00B5 - 0x00A0)
class UPBGFxObject_HUD_SafetyBuy : public UPBGFxObject_ContainerBased
{
public:
	int                                                nSelectedPreset;                                  		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      ViewTarget;                                       		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      messageSet : 1;                                   		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      isInAttackingTeam : 1;                            		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbSecurityCamera : 1;                             		// 0x00A8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	int                                                iPrevRespawnTimeLeft;                             		// 0x00AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPrevSafetyBuyTimer;                              		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      prevGameModeType;                                 		// 0x00B4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_RemoveMod
// 0x0060 (0x0100 - 0x00A0)
class UPBGFxObject_RemoveMod : public UPBGFxObject_ContainerBased
{
public:
	struct FPBUIEquipModStruct                         m_TempEquipModStructure;                          		// 0x00A0 (0x0048) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onAcceptClick__Delegate;                 		// 0x00E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCancelClick__Delegate;                 		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Blur
// 0x0000 (0x00B0 - 0x00B0)
class UPBGFxObject_Blur : public UPBGFxObject_Foreground
{
public:
public:
};

// Class PlanBGame.PBGFxObject_PromotionCode
// 0x0094 (0x0134 - 0x00A0)
class UPBGFxObject_PromotionCode : public UPBGFxObject_ContainerBased
{
public:
	struct FString                                     PromocodeStartDateNotReached;                     		// 0x00A0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PromotionEndDatePassed;                           		// 0x00AC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PromotionAlreadyUsed;                             		// 0x00B8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     InvalidPromoCode;                                 		// 0x00C4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PromocodeFailedGeneral;                           		// 0x00D0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     GenderIsNotValid;                                 		// 0x00DC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ItemAlreadyOwned;                                 		// 0x00E8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ItemAwardFailedGeneral;                           		// 0x00F4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     days;                                             		// 0x0100 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     AwardedIGC;                                       		// 0x010C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      ctrlDown : 1;                                     		// 0x0118 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onSubmit__Delegate;                      		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onAccept__Delegate;                      		// 0x0128 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_SkillShop
// 0x007C (0x017C - 0x0100)
class UPBGFxObject_SkillShop : public UPBGFxObject_ShopClass
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTPBCharacterShopOffer >            mItems;                                           		// 0x0108 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x0114 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	TArray< struct FTPBSkillOffer >                    mTemporaryItems;                                  		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBSkillOffer >                    mReallyTemporaryItems;                            		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mnCurrentTier;                                    		// 0x0130 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onClickAdd__Delegate;                    		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickEquip__Delegate;                  		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickRemove__Delegate;                 		// 0x014C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onTierSelected__Delegate;                		// 0x0158 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0164 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_moveMouse__Delegate;                     		// 0x0170 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_ControlBar
// 0x0014 (0x00B4 - 0x00A0)
class UPBGFxObject_ControlBar : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbUpdateCharacterDetails : 1;                     		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbWaitingOnMainMenu : 1;                          		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbWaitingForOverlayToClear : 1;                   		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	TArray< struct FTPBCharacterShopOffer >            Services;                                         		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_TauntShop
// 0x0080 (0x0180 - 0x0100)
class UPBGFxObject_TauntShop : public UPBGFxObject_ShopClass
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTPBCharacterShopOffer >            mItems;                                           		// 0x0108 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UPBHeatSystemArc*                            mpHeatSystemArc;                                  		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTPBTauntOffer >                    mTemporaryItems;                                  		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FName                                       mCurrentAnimation;                                		// 0x0124 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_nCurrentItemIndex;                              		// 0x012C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x0130 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	class USoundCue*                                   m_CurrentSoundCue;                                		// 0x0134 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_startAnimation__Delegate;                		// 0x0138 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickAdd__Delegate;                    		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_moveMouse__Delegate;                     		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickEquip__Delegate;                  		// 0x015C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickRemove__Delegate;                 		// 0x0168 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0174 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_LoadingMovie
// 0x0004 (0x00A4 - 0x00A0)
class UPBGFxObject_LoadingMovie : public UPBGFxObject_ContainerBased
{
public:
	int                                                TipsCount;                                        		// 0x00A0 (0x0004) [0x0000000000006000]              ( CPF_Transient | CPF_Config )
public:
};

// Class PlanBGame.PBGFxObject_ModalError
// 0x000C (0x00AC - 0x00A0)
class UPBGFxObject_ModalError : public UPBGFxObject_ContainerBased
{
public:
	struct FScriptDelegate                             __unrealOnCloseClick__Delegate;                   		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_UnequipItems
// 0x000C (0x00AC - 0x00A0)
class UPBGFxObject_UnequipItems : public UPBGFxObject_ContainerBased
{
public:
	struct FScriptDelegate                             __Unreal_onAcceptClick__Delegate;                 		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD_UnlockedItems
// 0x0064 (0x0104 - 0x00A0)
class UPBGFxObject_HUD_UnlockedItems : public UPBGFxObject_ContainerBased
{
public:
	TArray< struct FTPBCharacterShopOffer >            mItems;                                           		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTColorStruct >                     mColors;                                          		// 0x00AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            mTemporaryItems;                                  		// 0x00B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     mCurrentCategory;                                 		// 0x00C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      mbUpdate : 1;                                     		// 0x00D0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	TArray< struct FString >                           mCategories;                                      		// 0x00D4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_requestColors__Delegate;                 		// 0x00E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategorySelected__Delegate;            		// 0x00EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemDoubleClick__Delegate;             		// 0x00F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_QuitConfirmation
// 0x001C (0x00BC - 0x00A0)
class UPBGFxObject_QuitConfirmation : public UPBGFxObject_ContainerBased
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOKClick__Delegate;                     		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCancelClick__Delegate;                 		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_HUD_RepairWeapon
// 0x001C (0x00BC - 0x00A0)
class UPBGFxObject_HUD_RepairWeapon : public UPBGFxObject_ContainerBased
{
public:
	TArray< struct FTPBCharacterShopOffer >            mItems;                                           		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      mbUpdate : 1;                                     		// 0x00AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onItemDoubleClick__Delegate;             		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CommonShop
// 0x00AC (0x01AC - 0x0100)
class UPBGFxObject_CommonShop : public UPBGFxObject_ShopClass
{
public:
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBShop*                                     m_CurrentShop;                                    		// 0x0104 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UPBShop* >                           m_Shops;                                          		// 0x0108 (0x000C) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x0118 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	TArray< int >                                      m_RemoveRequests;                                 		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     CharNameCheck;                                    		// 0x0128 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onSelectTab__Delegate;                   		// 0x0140 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategoryChanged__Delegate;             		// 0x014C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemSelected__Delegate;                		// 0x0158 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onColorSelected__Delegate;               		// 0x0164 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x0170 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_getPremiumDiscount__Delegate;            		// 0x017C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_addToBasket__Delegate;                   		// 0x0188 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_removeFromBasket__Delegate;              		// 0x0194 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onChangeNameText__Delegate;              		// 0x01A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_CommonInventory
// 0x00B0 (0x01B0 - 0x0100)
class UPBGFxObject_CommonInventory : public UPBGFxObject_ShopClass
{
public:
	TArray< class UPBInventory* >                      m_InventoryList;                                  		// 0x0100 (0x000C) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	class UPBInventory*                                m_CurrentInventory;                               		// 0x010C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBInventory*                                mprevInventory;                                   		// 0x0110 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         mRotator;                                         		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      mbOpenAnimationFinished : 1;                      		// 0x011C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x0120 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onSelectTab__Delegate;                   		// 0x012C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onCategoryChanged__Delegate;             		// 0x0138 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemSelected__Delegate;                		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickRepair__Delegate;                 		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onPositionClick__Delegate;               		// 0x015C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onItemSelectedAndEquipped__Delegate;     		// 0x0168 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onEquipItems__Delegate;                  		// 0x0174 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onLoadoutRename__Delegate;               		// 0x0180 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onChangeMods__Delegate;                  		// 0x018C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onClickEquipTaunt__Delegate;             		// 0x0198 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_updateCharacterRotation__Delegate;       		// 0x01A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_WebView_Basic
// 0x004C (0x00EC - 0x00A0)
class UPBGFxObject_WebView_Basic : public UPBGFxObject_ContainerBased
{
public:
	struct FString                                     defaultURL;                                       		// 0x00A0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                image_width;                                      		// 0x00AC (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                image_height;                                     		// 0x00B0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UPBNWebViewObject*                           m_WebObject;                                      		// 0x00B4 (0x0004) [0x0000000000000000]              
	unsigned long                                      bSetImagePathDone : 1;                            		// 0x00B8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bFirstTick : 1;                                   		// 0x00B8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onDropdownItemClick__Delegate;           		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onMouseMove__Delegate;                   		// 0x00C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onMouseButtonEvent__Delegate;            		// 0x00D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onMouseWheelEvent__Delegate;             		// 0x00E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_WebView
// 0x0000 (0x00EC - 0x00EC)
class UPBGFxObject_WebView : public UPBGFxObject_WebView_Basic
{
public:
public:
};

// Class PlanBGame.PBGFxObject_Credits
// 0x0000 (0x00A0 - 0x00A0)
class UPBGFxObject_Credits : public UPBGFxObject_ContainerBased
{
public:
public:
};

// Class PlanBGame.PBGFxObject_EULAView
// 0x0000 (0x00A0 - 0x00A0)
class UPBGFxObject_EULAView : public UPBGFxObject_ContainerBased
{
public:
public:
};

// Class PlanBGame.PBGFxObject_SteamPurchase
// 0x0020 (0x00C0 - 0x00A0)
class UPBGFxObject_SteamPurchase : public UPBGFxObject_ContainerBased
{
public:
	int                                                m_WalletPaymentSourceID;                          		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_DefaultCurrency;                                		// 0x00A4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      m_bAuthorised : 1;                                		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FScriptDelegate                             __Unreal_onBundleClick__Delegate;                 		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_Subscription_Get
// 0x0000 (0x00EC - 0x00EC)
class UPBGFxObject_Subscription_Get : public UPBGFxObject_WebView_Basic
{
public:
public:
};

// Class PlanBGame.PBGFxObject_CharacterSelection_new
// 0x0088 (0x0184 - 0x00FC)
class UPBGFxObject_CharacterSelection_new : public UPBGFxObject_MusicContainer
{
public:
	class UMaterialInterface*                          mNewCharacterMaterial;                            		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastSelectedCharacterIndex;                       		// 0x0100 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       LastSelectedCharacterGuid;                        		// 0x0104 (0x0010) [0x0000000000004000]              ( CPF_Config )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     msCurrentArea;                                    		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      m_bOpenAnimationHasBeenPlayed : 1;                		// 0x0124 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      m_bProfilesHaveBeenLoaded : 1;                    		// 0x0124 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UPBCameraMover*                              mMover;                                           		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterSelector*                        mSelector;                                        		// 0x012C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct UPBGFxObject_CharacterSelection_new_FTCharacterProfileInfo > mCharacterProfileInfoArray;                       		// 0x0130 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __Unreal_onOpenAnimationComplete__Delegate;       		// 0x013C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnDeleteClick__Delegate;                  		// 0x0148 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnEnterClick__Delegate;                   		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealLogout__Delegate;                         		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnAreaClick__Delegate;                    		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __unrealOnAreaRollOver__Delegate;                 		// 0x0178 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxMoviePlayer_Adverts
// 0x0000 (0x0184 - 0x0184)
class UPBGFxMoviePlayer_Adverts : public UPBGFxMoviePlayer_Tickable
{
public:
public:
};

// Class PlanBGame.PBGFxMoviePlayer_AdvertsHoriz
// 0x0000 (0x0184 - 0x0184)
class UPBGFxMoviePlayer_AdvertsHoriz : public UPBGFxMoviePlayer_Adverts
{
public:
public:
};

// Class PlanBGame.PBGFxMoviePlayer_AdvertsVert
// 0x0000 (0x0184 - 0x0184)
class UPBGFxMoviePlayer_AdvertsVert : public UPBGFxMoviePlayer_Adverts
{
public:
public:
};

// Class PlanBGame.PBGFxMoviePlayer_HUDScene
// 0x0010 (0x0194 - 0x0184)
class UPBGFxMoviePlayer_HUDScene : public UPBGFxMoviePlayer_Tickable
{
public:
	class UPBGFxObject_WeaponPresetsScreen*            pWeaponPresetsScreen;                             		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     WeaponPresetsScreenName;                          		// 0x0188 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_WeaponPresetsScreen
// 0x0018 (0x00A8 - 0x0090)
class UPBGFxObject_WeaponPresetsScreen : public UPBGFxObject_Tickable
{
public:
	unsigned long                                      bRequiresUpdate : 1;                              		// 0x0090 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsVisible : 1;                                   		// 0x0090 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bAlwaysVisible : 1;                               		// 0x0090 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bShowAll : 1;                                     		// 0x0090 (0x0004) [0x0000000000000000] [0x00000008] 
	TArray< class UGFxObject* >                        mPresets;                                         		// 0x0094 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCustomChar_MenuData*                      CharData;                                         		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCurrentlySelectedPreset;                         		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxMoviePlayer_SpectatorScene
// 0x0010 (0x0194 - 0x0184)
class UPBGFxMoviePlayer_SpectatorScene : public UPBGFxMoviePlayer_Tickable
{
public:
	class UPBGFxObject_WeaponPresetsScreen*            pWeaponPresetsScreen;                             		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     WeaponPresetsScreenName;                          		// 0x0188 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInventory
// 0x005C (0x0098 - 0x003C)
class UPBInventory : public UObject
{
public:
	struct FString                                     m_InventoryTabName;                               		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBGlobalBasket*                             mBasket;                                          		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_CurrentCategory;                                		// 0x0050 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UGFxObject*                                  mContainer;                                       		// 0x005C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerController*                         m_PC;                                             		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         m_Rotator;                                        		// 0x0064 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     CurrentCategory;                                  		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FMainPanelCategory >                m_Categories;                                     		// 0x0074 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_CurrentItems;                                   		// 0x0080 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateUniqueItems__Delegate;                  		// 0x008C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBShop
// 0x00E8 (0x0124 - 0x003C)
class UPBShop : public UObject
{
public:
	struct FString                                     m_ShopTabName;                                    		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     m_CurrentCategory;                                		// 0x0048 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       m_CurrentItem;                                    		// 0x0054 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       m_CurrentOffer;                                   		// 0x0064 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       m_CurrentColor;                                   		// 0x0074 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTPBCharacterShopOffer >            m_CurrentItems;                                   		// 0x0084 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTPBCharacterShopOffer >            m_CurrentColors;                                  		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UPBCustomChar_MenuData*                      mCharData;                                        		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBCharacterRotator*                         m_Rotator;                                        		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBPlayerController*                         m_PC;                                             		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPBGlobalBasket*                             m_Basket;                                         		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      m_ShopRequests;                                   		// 0x00AC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_SpecialCategories;                              		// 0x00B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_TempCategories;                                 		// 0x00C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FMainPanelCategory >                m_Categories;                                     		// 0x00D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateUniqueItems__Delegate;                  		// 0x00DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateColors__Delegate;                       		// 0x00E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateCategories__Delegate;                   		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnShowColourPanel__Delegate;                    		// 0x0100 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGetNewName__Delegate;                         		// 0x010C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnNameValidationComplete__Delegate;             		// 0x0118 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInventory_Appearance
// 0x00F8 (0x0190 - 0x0098)
class UPBInventory_Appearance : public UPBInventory
{
public:
	struct FName                                       m_CurrentAnimation;                               		// 0x0098 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   m_CurrentSoundCue;                                		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FTConflictingItem >                 conflicting_items;                                		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FAppearanceCategory >               HeadItems;                                        		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FAppearanceCategory >               UpperBodyItems;                                   		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FAppearanceCategory >               LowerBodyItems;                                   		// 0x00C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FPBItem                                     selectedItem;                                     		// 0x00D4 (0x00BC) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInventory_Weapons
// 0x0288 (0x0320 - 0x0098)
class UPBInventory_Weapons : public UPBInventory
{
public:
	class UPBNWeaponPreset*                            m_CurrentPreset;                                  		// 0x0098 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                m_CurrentPresetIndex;                             		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     m_CurrentWeaponType;                              		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FPBItem                                     CurrentWeapon;                                    		// 0x00AC (0x00BC) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBItem >                           EquippedWeaponList;                               		// 0x0168 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FPBItem                                     selectedItem;                                     		// 0x0174 (0x00BC) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                mRenameRequestId;                                 		// 0x0230 (0x0004) [0x0000000000000000]              
	TArray< struct FWeaponItem >                       CurrentEquippedItems;                             		// 0x0234 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBItem >                           ModsToRemove;                                     		// 0x0240 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                TotalSlots;                                       		// 0x024C (0x0004) [0x0000000000000000]              
	int                                                EquippedSlots;                                    		// 0x0250 (0x0004) [0x0000000000000000]              
	int                                                RequiredSlots;                                    		// 0x0254 (0x0004) [0x0000000000000000]              
	struct FPBItem                                     CurrentSelectedMod;                               		// 0x0258 (0x00BC) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __SortItems__Delegate;                            		// 0x0314 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInventory_SkillTaunt
// 0x00F8 (0x0190 - 0x0098)
class UPBInventory_SkillTaunt : public UPBInventory
{
public:
	struct FPBItem                                     CurrentItem;                                      		// 0x0098 (0x00BC) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBItem >                           SkillList;                                        		// 0x0154 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBItem >                           tauntList;                                        		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBItem >                           NewItemList;                                      		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       m_CurrentAnimation;                               		// 0x0178 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   m_CurrentSoundCue;                                		// 0x0180 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __SortItemList__Delegate;                         		// 0x0184 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSceneCapture2DActor
// 0x0038 (0x0218 - 0x01E0)
class APBSceneCapture2DActor : public ASceneCapture2DActor
{
public:
	class APBCustomChar_Preview*                       TargetPreview;                                    		// 0x01E0 (0x0004) [0x0000000000000000]              
	float                                              MinDistance;                                      		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              transitionSpeed;                                  		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     TargetLocation;                                   		// 0x01EC (0x000C) [0x0000000000000000]              
	struct FVector                                     OriginalLocation;                                 		// 0x01F8 (0x000C) [0x0000000000000000]              
	struct FVector                                     DistNormal;                                       		// 0x0204 (0x000C) [0x0000000000000000]              
	unsigned long                                      bTargetReached : 1;                               		// 0x0210 (0x0004) [0x0000000000000000] [0x00000001] 
	class USkeletalMeshComponent*                      CustomWeaponMeshComponent;                        		// 0x0214 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBShop_Appearance
// 0x006C (0x0190 - 0x0124)
class UPBShop_Appearance : public UPBShop
{
public:
	TArray< struct FString >                           m_headCategories;                                 		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_headItemTypes;                                  		// 0x0130 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_upperbodyCategories;                            		// 0x013C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_upperbodyItemTypes;                             		// 0x0148 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_lowerbodyCategories;                            		// 0x0154 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_lowerbodyItemTypes;                             		// 0x0160 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_headTypes;                                      		// 0x016C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_upperbodyTypes;                                 		// 0x0178 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            m_lowerbodyTypes;                                 		// 0x0184 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBShop_Weapon
// 0x0018 (0x013C - 0x0124)
class UPBShop_Weapon : public UPBShop
{
public:
	TArray< struct FString >                           m_WeaponCategories;                               		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_TypesOrder;                                     		// 0x0130 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBShop_Skill
// 0x0000 (0x0124 - 0x0124)
class UPBShop_Skill : public UPBShop
{
public:
public:
};

// Class PlanBGame.PBShop_Service
// 0x00FC (0x0220 - 0x0124)
class UPBShop_Service : public UPBShop
{
public:
	TArray< struct UPBShop_Service_FTServiceCategory > m_CachedItems;                                    		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      mbGetAdditionalInfo : 1;                          		// 0x0130 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      mbNameAvailable : 1;                              		// 0x0130 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      mbChangingRace : 1;                               		// 0x0130 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	int                                                mnAvailabilityRequestId;                          		// 0x0134 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     msNewName;                                        		// 0x0138 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FGuid                                       mOldAvatarGuid;                                   		// 0x0144 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mNewAvatarGuid;                                   		// 0x0154 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mAddAvatarGuid;                                   		// 0x0164 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FGuid                                       mAddSkinGuid;                                     		// 0x0174 (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                mNewRaceIndex;                                    		// 0x0184 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mOldRaceIndex;                                    		// 0x0188 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mNewColorIndex;                                   		// 0x018C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mOldColorIndex;                                   		// 0x0190 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mInBasketRaceIndex;                               		// 0x0194 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                mInBasketColorIndex;                              		// 0x0198 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FTHeadInfo                                  mHeads[ 0x2 ];                                    		// 0x019C (0x0078) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPBSBoosterList >                   mBoosters;                                        		// 0x0214 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBShop_Taunt
// 0x0018 (0x013C - 0x0124)
class UPBShop_Taunt : public UPBShop
{
public:
	TArray< struct FTPBCharacterShopOffer >            m_CachedItems;                                    		// 0x0124 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FName                                       m_CurrentAnimation;                               		// 0x0130 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class USoundCue*                                   m_CurrentSoundCue;                                		// 0x0138 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBUISettingsArc
// 0x0040 (0x007C - 0x003C)
class UPBUISettingsArc : public UObject
{
public:
	float                                              fHeatDisplayTime;                                 		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fOtherDisplayTime;                                		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLineDisplayTime;                                 		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fProgressionTime;                                 		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fButtonsFadeupTime;                               		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNavigationDelayTime;                             		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iWarningTime;                                     		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                iCriticalTime;                                    		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fAboveCrosshairMessageDisplayTime;                		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDelayBetweenTeamMateStatusScans;                 		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fKillMessageDisplayTime;                          		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fKillMessageFadeOut;                              		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fKillMessageMoveTime;                             		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fKillMessageFadeIn;                               		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSubmitDelayTime;                                 		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPBUISettingsArc*                            pPBHSAInstance;                                   		// 0x0078 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBGFxObject_PlayerSettings_Main
// 0x0024 (0x00B4 - 0x0090)
class UPBGFxObject_PlayerSettings_Main : public UPBGFxObject_Tickable
{
public:
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x0090 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsDirty : 1;                                     		// 0x0090 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UGFxObject*                                  pNextMatchVotePanel;                              		// 0x0094 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iRepeatMap;                                       		// 0x0098 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNewMap;                                          		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iNewSettings;                                     		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iPlayerVote;                                      		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     NextMatchVotePanelName;                           		// 0x00A8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_PlayerSettings_Class
// 0x0030 (0x00C0 - 0x0090)
class UPBGFxObject_PlayerSettings_Class : public UPBGFxObject_Tickable
{
public:
	TArray< struct FString >                           mButtonNames;                                     		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      mSelectableArray;                                 		// 0x009C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      mConditions;                                      		// 0x00A8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateChangeClass__Delegate;                  		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_PlayerSettings_Voting
// 0x0058 (0x00E8 - 0x0090)
class UPBGFxObject_PlayerSettings_Voting : public UPBGFxObject_Tickable
{
public:
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x0090 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bVoteClockVisible : 1;                            		// 0x0090 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bCommittedVote : 1;                               		// 0x0090 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	class UGFxObject*                                  mVoteOptionsContainer;                            		// 0x0094 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< unsigned char >                            rVoteTopics;                                      		// 0x0098 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           rVoteOptions;                                     		// 0x00A4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                currentVoteTimer;                                 		// 0x00B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                iCurrentVoteType;                                 		// 0x00B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __UpdateVoteTopics__Delegate;                     		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __UpdateVoteOptions__Delegate;                    		// 0x00C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSelectTopic__Delegate;                        		// 0x00D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSelectOption__Delegate;                       		// 0x00DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGFxObject_PlayerSettings_Faction
// 0x0028 (0x00B8 - 0x0090)
class UPBGFxObject_PlayerSettings_Faction : public UPBGFxObject_Tickable
{
public:
	struct FString                                     msContainerPath;                                  		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                mnCurrentTeam;                                    		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      mButtonsState;                                    		// 0x00A0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FScriptDelegate                             __delegateChangeFaction__Delegate;                		// 0x00AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBGlobalWeaponParam
// 0x0010 (0x01E8 - 0x01D8)
class APBGlobalWeaponParam : public AActor
{
public:
	float                                              SpreadFactor;                                     		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              damageFactor;                                     		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              runSpeed;                                         		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              jumpSpeed;                                        		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBHardcoreGame
// 0x0000 (0x0468 - 0x0468)
class APBHardcoreGame : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBHeliAvailable
// 0x0000 (0x0060 - 0x0060)
class UPBHeliAvailable : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBHistory
// 0x0000 (0x01D8 - 0x01D8)
class APBHistory : public AActor
{
public:
public:
};

// Class PlanBGame.PBHostilesEliminated
// 0x0000 (0x0060 - 0x0060)
class UPBHostilesEliminated : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBInstructionVideoList
// 0x0014 (0x0050 - 0x003C)
class UPBInstructionVideoList : public UObject
{
public:
	class UPBInstructionVideoList*                     pInstructionVideoListArchetype;                   		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bDisableAllVideos : 1;                            		// 0x0040 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FPBInstructionVideo >               rInstructionVideos;                               		// 0x0044 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBInteractibleZone
// 0x0003 (0x0354 - 0x0351)
class APBInteractibleZone : public APBInteractiveObjective
{
public:
public:
};

// Class PlanBGame.PBInvulnerabilityVolume
// 0x0000 (0x0214 - 0x0214)
class APBInvulnerabilityVolume : public AVolume
{
public:
public:
};

// Class PlanBGame.PBMenuHUD
// 0x0000 (0x0464 - 0x0464)
class APBMenuHUD : public APBBaseHUD
{
public:
public:
};

// Class PlanBGame.PBMenuReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBMenuReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBItemComparisonReplicationInfo
// 0x0004 (0x07FC - 0x07F8)
class APBItemComparisonReplicationInfo : public APBPlayerReplicationInfo
{
public:
	unsigned long                                      bIsProcessing : 1;                                		// 0x07F8 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class PlanBGame.PBWeaponComparisonReplicationInfo
// 0x0004 (0x0378 - 0x0374)
class APBWeaponComparisonReplicationInfo : public APBGameReplicationInfo
{
public:
	unsigned long                                      bIsProcessing : 1;                                		// 0x0374 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsSuccess : 1;                                   		// 0x0374 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class PlanBGame.PBSkill_Akimbo
// 0x0034 (0x02D0 - 0x029C)
class APBSkill_Akimbo : public APBSkill
{
public:
	TArray< struct FSSkillAkimbo_WeaponInfo >          rSkillWeaponParamNames;                           		// 0x029C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FSSkillAkimbo_WeaponInfo                    AkimboWeaponInfo;                                 		// 0x02A8 (0x0014) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              CombatGlideCost;                                  		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DefaultCostPerBullet;                             		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SlideFOVCharacter;                                		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SlideFOVWeapon;                                   		// 0x02C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bOutOfEnergy : 1;                                 		// 0x02CC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeaponInfo_Berserk
// 0x0008 (0x0284 - 0x027C)
class APBKWeaponInfo_Berserk : public APBKWeaponInfo
{
public:
	class UParticleSystemComponent*                    pBerserkPSLeftHand;                               		// 0x027C (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    pBerserkPSRightHand;                              		// 0x0280 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBKWeapon_BerserkSyringe
// 0x0000 (0x05C0 - 0x05C0)
class APBKWeapon_BerserkSyringe : public APBKWeapon_Skill
{
public:
public:
};

// Class PlanBGame.PBSkill_GattlingGun
// 0x0014 (0x02B0 - 0x029C)
class APBSkill_GattlingGun : public APBSkill_AllClients
{
public:
	TArray< struct FGattlingGunData >                  gattlingGunValues;                                		// 0x029C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      iSpinByte;                                        		// 0x02A8 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              fCurSpinPerc;                                     		// 0x02AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBKWeaponInfo_Gattling
// 0x002C (0x02A8 - 0x027C)
class APBKWeaponInfo_Gattling : public APBKWeaponInfo
{
public:
	class UStaticMesh*                                 BarrelMesh;                                       		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        BarrelComponent1P;                                		// 0x0280 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        BarrelComponent3P;                                		// 0x0284 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   SpinningLoop1P;                                   		// 0x0288 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   SpinningLoop3P;                                   		// 0x028C (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             SpinningSoundComp1P;                              		// 0x0290 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             SpinningSoundComp3P;                              		// 0x0294 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             SpinningSoundComp;                                		// 0x0298 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	unsigned long                                      bSpinSoundPlaying : 1;                            		// 0x029C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              fCurSpin;                                         		// 0x02A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UAnimNodeAdditiveBlending*                   pSpinAnimNode;                                    		// 0x02A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSkill_HeadCrab
// 0x0028 (0x02C4 - 0x029C)
class APBSkill_HeadCrab : public APBSkill
{
public:
	class APBSkill_HeadCrabActor*                      pHeadCrabActorTemplate;                           		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FHeadCrabData >                     headCrabValues;                                   		// 0x02A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USoundCue*                                   NegativePlacementSound;                           		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     vSpawnOffset;                                     		// 0x02B0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeadCrabReleaseTime;                              		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APBSkill_HeadCrabActor*                      currentPlacedHeadCrab;                            		// 0x02C0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBKWeapon_Interactible
// 0x0000 (0x05B8 - 0x05B8)
class APBKWeapon_Interactible : public APBKWeapon
{
public:
public:
};

// Class PlanBGame.PBKWeapon_MortarCaller
// 0x0000 (0x05B8 - 0x05B8)
class APBKWeapon_MortarCaller : public APBKWeapon
{
public:
public:
};

// Class PlanBGame.PBSkill_PPlane
// 0x0024 (0x02C0 - 0x029C)
class APBSkill_PPlane : public APBSkill
{
public:
	TArray< struct FPaperPlaneImprovement >            rPaperPlaneImprovementsArray;                     		// 0x029C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APBPaperPlanePawn*                           pPaperPlaneTemplate;                              		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      IsPlacePending : 1;                               		// 0x02AC (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
	unsigned long                                      IsControlModeUser : 1;                            		// 0x02AC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bFiringInProgress : 1;                            		// 0x02AC (0x0004) [0x0000000000002020] [0x00000004] ( CPF_Net | CPF_Transient )
	class APBPaperPlanePawn*                           currentPlacedPPlane;                              		// 0x02B0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              ThrowAnimationTime;                               		// 0x02B4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              PlaneReleaseTime;                                 		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PlaneSpawnDistance;                               		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeapon_SndBomb
// 0x0004 (0x05BC - 0x05B8)
class APBKWeapon_SndBomb : public APBKWeapon
{
public:
	class UAudioComponent*                             pSequenceLoopAC;                                  		// 0x05B8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBKWeapon_Syringe
// 0x0004 (0x05C4 - 0x05C0)
class APBKWeapon_Syringe : public APBKWeapon_Skill
{
public:
	unsigned long                                      skillUsed : 1;                                    		// 0x05C0 (0x0004) [0x0000000000002020] [0x00000001] ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBSkill_Heal
// 0x0010 (0x02AC - 0x029C)
class APBSkill_Heal : public APBSkill
{
public:
	TArray< struct FHealData >                         healValues;                                       		// 0x029C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                HealEffectDelay;                                  		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBKWeapon_Turret
// 0x0000 (0x05C0 - 0x05C0)
class APBKWeapon_Turret : public APBKWeapon_Skill
{
public:
public:
};

// Class PlanBGame.PBSkill_Turret
// 0x009C (0x0338 - 0x029C)
class APBSkill_Turret : public APBSkill
{
public:
	float                                              rotationAngle;                                    		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TargetRotationAngle;                              		// 0x02A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      IsPlacePending : 1;                               		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsPlaceable : 1;                                 		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bIsPlacementHelperVisible : 1;                    		// 0x02A4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x02A8 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        PlacementHelperStaticMeshComponent;               		// 0x02AC (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UStaticMesh*                                 PlacementHelperStaticMesh;                        		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        RangeHelperStaticMeshComponent;                   		// 0x02B4 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UStaticMesh*                                 RangeHelperStaticMesh;                            		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMeshComponent*                        FOVHelperStaticMeshComponentL;                    		// 0x02BC (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        FOVHelperStaticMeshComponentR;                    		// 0x02C0 (0x0004) [0x0000000004082009]              ( CPF_Edit | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UStaticMesh*                                 FOVHelperStaticMesh;                              		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class APBSkill_TurretWeapon* >             pTurretArchetypes;                                		// 0x02C8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                RotateAngleYaw;                                   		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRotationSpeed;                                   		// 0x02D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fZPositionSpeed;                                  		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fFourPointsHeightDifferenceTolerance;             		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fNormalDotProductDifferenceTolerance;             		// 0x02E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fPushEyeLocationUp;                               		// 0x02E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTurretPlacementStartOffset;                      		// 0x02EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxPlacementDistance;                             		// 0x02F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxPlacementDepth;                                		// 0x02F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fDiagonalRayDepth;                                		// 0x02F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PlacementHelperPosition;                          		// 0x02FC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    ExtraRotation;                                    		// 0x0308 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     PlacementLocationCached;                          		// 0x0314 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    PlacementRotationCached;                          		// 0x0320 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	int                                                iImmediateYaw;                                    		// 0x032C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              TurretCurrentZ;                                   		// 0x0330 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APBSkill_TurretWeapon*                       currentPlacedTurret;                              		// 0x0334 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class PlanBGame.PBPotentialClimbWatcher
// 0x0004 (0x01DC - 0x01D8)
class APBPotentialClimbWatcher : public AInfo
{
public:
	unsigned long                                      TurnedOnce : 1;                                   		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class PlanBGame.PBLightChain
// 0x0000 (0x01D8 - 0x01D8)
class APBLightChain : public AActor
{
public:
public:
};

// Class PlanBGame.PBLobbyInfo
// 0x0000 (0x01D8 - 0x01D8)
class APBLobbyInfo : public AActor
{
public:
public:
};

// Class PlanBGame.PBLobbyPlayerReplicationInfo
// 0x0000 (0x07F8 - 0x07F8)
class APBLobbyPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBLobbyReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBLobbyReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBLookFromCameraAction
// 0x0048 (0x0254 - 0x020C)
class APBLookFromCameraAction : public APBCameraAction
{
public:
	class ACameraActor*                                pCameraActor;                                     		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bTrackPlayer : 1;                                 		// 0x0210 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFreezePlayerMovement : 1;                        		// 0x0210 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x0210 (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              fPositionInterpTime;                              		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRotationInterpTime;                              		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fTimePassed;                                      		// 0x021C (0x0004) [0x0000000000000000]              
	float                                              fLocationAlpha;                                   		// 0x0220 (0x0004) [0x0000000000000000]              
	float                                              fRotationAlpha;                                   		// 0x0224 (0x0004) [0x0000000000000000]              
	float                                              fBlendFactor;                                     		// 0x0228 (0x0004) [0x0000000000000000]              
	float                                              OldZ;                                             		// 0x022C (0x0004) [0x0000000000000000]              
	struct FVector                                     vPrevCamLoc;                                      		// 0x0230 (0x000C) [0x0000000000000000]              
	struct FRotator                                    vPrevCamRot;                                      		// 0x023C (0x000C) [0x0000000000000000]              
	struct FRotator                                    rCamRot;                                          		// 0x0248 (0x000C) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBLosingObjective
// 0x0000 (0x0060 - 0x0060)
class UPBLosingObjective : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMapInfo
// 0x0000 (0x01D8 - 0x01D8)
class APBMapInfo : public AActor
{
public:
public:
};

// Class PlanBGame.PBMapListLimiter
// 0x000C (0x0048 - 0x003C)
class UPBMapListLimiter : public UPBChoiseLimiter
{
public:
	TArray< struct FString >                           m_Maps;                                           		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBMapSpot
// 0x0014 (0x02C4 - 0x02B0)
class APBMapSpot : public ANavigationPoint
{
public:
	unsigned char                                      mapSpot;                                          		// 0x02B0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  volumeTexture;                                    		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     v2DPosition;                                      		// 0x02B8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBMinimapReferencePoint
// 0x0000 (0x01DC - 0x01DC)
class APBMinimapReferencePoint : public AKeypoint
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer_Grenade
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer_Grenade : public UPBMinimapDrawer
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer_Pawn
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer_Pawn : public UPBMinimapDrawer
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer_PlaceableDevice
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer_PlaceableDevice : public UPBMinimapDrawer_Objective
{
public:
public:
};

// Class PlanBGame.PBMinimapDrawer_ReinforcementZone
// 0x0000 (0x003C - 0x003C)
class UPBMinimapDrawer_ReinforcementZone : public UPBMinimapDrawer_Objective
{
public:
public:
};

// Class PlanBGame.PBMoreBombsHandledMessage
// 0x0000 (0x0060 - 0x0060)
class UPBMoreBombsHandledMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMortarAvailable
// 0x0000 (0x0060 - 0x0060)
class UPBMortarAvailable : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMortarHeliAvailable
// 0x0000 (0x0060 - 0x0060)
class UPBMortarHeliAvailable : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMortarSupportCalled
// 0x0000 (0x0060 - 0x0060)
class UPBMortarSupportCalled : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMortarSupportToFriends
// 0x0000 (0x0060 - 0x0060)
class UPBMortarSupportToFriends : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMortarSupportUnderway
// 0x0000 (0x0060 - 0x0060)
class UPBMortarSupportUnderway : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMotionScanner
// 0x0003 (0x0354 - 0x0351)
class APBMotionScanner : public APBInteractiveObjective
{
public:
public:
};

// Class PlanBGame.PBMotionSensor
// 0x000C (0x03C4 - 0x03B8)
class APBMotionSensor : public AAIController
{
public:
	class AController*                                 InstigatorController;                             		// 0x03B8 (0x0004) [0x0000000000000000]              
	unsigned char                                      TeamNum;                                          		// 0x03BC (0x0001) [0x0000000000000000]              
	float                                              initTime;                                         		// 0x03C0 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBMsgAfterSafetyTime
// 0x0000 (0x0078 - 0x0078)
class UPBMsgAfterSafetyTime : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgAllCTFDead
// 0x0000 (0x0078 - 0x0078)
class UPBMsgAllCTFDead : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgAllTerroristsDead
// 0x0000 (0x0078 - 0x0078)
class UPBMsgAllTerroristsDead : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgAreaSecure
// 0x0000 (0x0060 - 0x0060)
class UPBMsgAreaSecure : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgAreaSecuredWarning
// 0x0000 (0x0060 - 0x0060)
class UPBMsgAreaSecuredWarning : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgBioBombDestroyed
// 0x0000 (0x0060 - 0x0060)
class UPBMsgBioBombDestroyed : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgBioBombDropped
// 0x0000 (0x0060 - 0x0060)
class UPBMsgBioBombDropped : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgBioBombExploded
// 0x0000 (0x0060 - 0x0060)
class UPBMsgBioBombExploded : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgBioBombPlaced
// 0x0000 (0x0078 - 0x0078)
class UPBMsgBioBombPlaced : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgC4Destroyed
// 0x0000 (0x02FC - 0x02FC)
class UPBMsgC4Destroyed : public UPBGameMessage
{
public:
public:
};

// Class PlanBGame.PBMsgC4Exploded
// 0x0000 (0x02FC - 0x02FC)
class UPBMsgC4Exploded : public UPBGameMessage
{
public:
public:
};

// Class PlanBGame.PBMsgCampaignDefeatCTF
// 0x0000 (0x0060 - 0x0060)
class UPBMsgCampaignDefeatCTF : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgCampaignDiffuseBomb
// 0x0000 (0x0060 - 0x0060)
class UPBMsgCampaignDiffuseBomb : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgCampaignOpenTheRoof
// 0x0000 (0x0060 - 0x0060)
class UPBMsgCampaignOpenTheRoof : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgCampaignTimeWarning
// 0x0000 (0x0078 - 0x0078)
class UPBMsgCampaignTimeWarning : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgDefuseKitDestroyed
// 0x0000 (0x0060 - 0x0060)
class UPBMsgDefuseKitDestroyed : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgDefuseKitDropped
// 0x0000 (0x0060 - 0x0060)
class UPBMsgDefuseKitDropped : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgDefuseReinforcementDevice
// 0x0000 (0x0060 - 0x0060)
class UPBMsgDefuseReinforcementDevice : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgDiffusingExpert
// 0x0000 (0x0060 - 0x0060)
class UPBMsgDiffusingExpert : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEMPExploded
// 0x0000 (0x0078 - 0x0078)
class UPBMsgEMPExploded : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEmpPlaced
// 0x0000 (0x0078 - 0x0078)
class UPBMsgEmpPlaced : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEnemyUnitWasEliminated
// 0x0000 (0x0060 - 0x0060)
class UPBMsgEnemyUnitWasEliminated : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEnteredDangerZone
// 0x0000 (0x0060 - 0x0060)
class UPBMsgEnteredDangerZone : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgEnteredTurretZone
// 0x0000 (0x0060 - 0x0060)
class UPBMsgEnteredTurretZone : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgGasBombPickedUp
// 0x0000 (0x0060 - 0x0060)
class UPBMsgGasBombPickedUp : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgMotionScannerDestroyed
// 0x0000 (0x0078 - 0x0078)
class UPBMsgMotionScannerDestroyed : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgNuclearDefused
// 0x0000 (0x0078 - 0x0078)
class UPBMsgNuclearDefused : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgObstacleActivated
// 0x0000 (0x0078 - 0x0078)
class UPBMsgObstacleActivated : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgOurUnitWasEliminated
// 0x0000 (0x0060 - 0x0060)
class UPBMsgOurUnitWasEliminated : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgReinforcementDeviceDestroyed
// 0x0000 (0x0060 - 0x0060)
class UPBMsgReinforcementDeviceDestroyed : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgReinforcementDeviceDropped
// 0x0000 (0x0060 - 0x0060)
class UPBMsgReinforcementDeviceDropped : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgReinforcementDeviceFinished
// 0x0000 (0x0060 - 0x0060)
class UPBMsgReinforcementDeviceFinished : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgReinforcementDevicePickedUp
// 0x0000 (0x0060 - 0x0060)
class UPBMsgReinforcementDevicePickedUp : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBMsgReinforcementDevicePlaced
// 0x0000 (0x0078 - 0x0078)
class UPBMsgReinforcementDevicePlaced : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgRoofOpening
// 0x0000 (0x0078 - 0x0078)
class UPBMsgRoofOpening : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgRoundTimedOut
// 0x0000 (0x0078 - 0x0078)
class UPBMsgRoundTimedOut : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgTurretDestroyed
// 0x0000 (0x0078 - 0x0078)
class UPBMsgTurretDestroyed : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgTurretFinished
// 0x0000 (0x0078 - 0x0078)
class UPBMsgTurretFinished : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMsgTurretPlaced
// 0x0000 (0x0078 - 0x0078)
class UPBMsgTurretPlaced : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBMusicManager
// 0x0000 (0x01D8 - 0x01D8)
class APBMusicManager : public AInfo
{
public:
public:
};

// Class PlanBGame.PBNukeZone
// 0x0000 (0x01D8 - 0x01D8)
class APBNukeZone : public AActor
{
public:
public:
};

// Class PlanBGame.PBNYCityDestroyedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBNYCityDestroyedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBNYCitySavedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBNYCitySavedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBObjectiveLost
// 0x0000 (0x0060 - 0x0060)
class UPBObjectiveLost : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBObjectiveSecured
// 0x0000 (0x0060 - 0x0060)
class UPBObjectiveSecured : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart : public ANavigationPoint
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_AAMTerminal
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_AAMTerminal : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_AmmunitionCrate
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_AmmunitionCrate : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_AntiAirTurret
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_AntiAirTurret : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_C4
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_C4 : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_DefuseKit
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_DefuseKit : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_InteractibleZone
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_InteractibleZone : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_MotionScanner
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_MotionScanner : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_ReinforcementZone
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_ReinforcementZone : public APBObjectiveStart_InteractibleZone
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_NukeZone
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_NukeZone : public APBObjectiveStart_ReinforcementZone
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_SecurityOfficeZone
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_SecurityOfficeZone : public APBObjectiveStart_ReinforcementZone
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_Turret
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_Turret : public APBObjectiveStart
{
public:
public:
};

// Class PlanBGame.PBObjectiveStart_TurretZone
// 0x0000 (0x02B0 - 0x02B0)
class APBObjectiveStart_TurretZone : public APBObjectiveStart_InteractibleZone
{
public:
public:
};

// Class PlanBGame.PBStatisticsKeys
// 0x0054 (0x0090 - 0x003C)
class UPBStatisticsKeys : public UObject
{
public:
	struct FTKeySet                                    PlayerKeys;                                       		// 0x003C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FTKeySet >                          WeaponKeys;                                       		// 0x0048 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTKeySet                                    MapKeys;                                          		// 0x0054 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTKeySet                                    GameMapRFGKeys;                                   		// 0x0060 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTKeySet                                    GameMapTDMKeys;                                   		// 0x006C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTKeySet                                    GameMapCMPKeys;                                   		// 0x0078 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FTKeySet                                    GameCampaignKeys;                                 		// 0x0084 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBTeamAI
// 0x009C (0x0274 - 0x01D8)
class APBTeamAI : public AInfo
{
public:
	class APBTeamInfo*                                 Team;                                             		// 0x01D8 (0x0004) [0x0000000000000000]              
	class APBTeamInfo*                                 EnemyTeam;                                        		// 0x01DC (0x0004) [0x0000000000000000]              
	int                                                NumSupportingPlayer;                              		// 0x01E0 (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            Objectives;                                       		// 0x01E4 (0x0004) [0x0000000000000000]              
	class APBGameObjective*                            PickedObjective;                                  		// 0x01E8 (0x0004) [0x0000000000000000]              
	class APBSquadAI*                                  Squads;                                           		// 0x01EC (0x0004) [0x0000000000000000]              
	class APBSquadAI*                                  AttackSquad;                                      		// 0x01F0 (0x0004) [0x0000000000000000]              
	class APBSquadAI*                                  FreelanceSquad;                                   		// 0x01F4 (0x0004) [0x0000000000000000]              
	class UClass*                                      SquadType;                                        		// 0x01F8 (0x0004) [0x0000000000000000]              
	int                                                OrderOffset;                                      		// 0x01FC (0x0004) [0x0000000000000000]              
	struct FName                                       OrderList[ 0x8 ];                                 		// 0x0200 (0x0040) [0x0000000000000000]              
	struct FString                                     BotWpClassNames[ 0x4 ];                           		// 0x0240 (0x0030) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                BotWpNameOffset;                                  		// 0x0270 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBProj_FragGrenade
// 0x0010 (0x047C - 0x046C)
class APBProj_FragGrenade : public APBProj_Grenade
{
public:
	class USoundCue*                                   BlowupOneShotSound;                               		// 0x046C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ExplosionTemplate;                                		// 0x0470 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fMaxImpulseForKActorsClientSideOnly;              		// 0x0474 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    ExplosionParticleSystem;                          		// 0x0478 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBSeqAct_SetTeamVictory
// 0x0008 (0x0104 - 0x00FC)
class UPBSeqAct_SetTeamVictory : public USequenceAction
{
public:
	int                                                iVictoriousTeam;                                  		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      MessageToBroadcast;                               		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBRoundEndMessage
// 0x0000 (0x0060 - 0x0060)
class UPBRoundEndMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBPhysMat_Destructible
// 0x0000 (0x006C - 0x006C)
class UPBPhysMat_Destructible : public UPBPhysicalMaterialProperty
{
public:
public:
};

// Class PlanBGame.PBPigeonFlock
// 0x0000 (0x0260 - 0x0260)
class APBPigeonFlock : public APBFlock
{
public:
public:
};

// Class PlanBGame.PBPlayerCamera
// 0x0000 (0x0450 - 0x0450)
class APBPlayerCamera : public ACamera
{
public:
public:
};

// Class PlanBGame.PBPlayerDyingMsg
// 0x0000 (0x0060 - 0x0060)
class UPBPlayerDyingMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBPlayerHitMsg
// 0x0000 (0x0060 - 0x0060)
class UPBPlayerHitMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBPlayerReloadMsg
// 0x0000 (0x0060 - 0x0060)
class UPBPlayerReloadMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBWaterVolume
// 0x0008 (0x025C - 0x0254)
class APBWaterVolume : public APhysicsVolume
{
public:
	class USoundCue*                                   EntrySound;                                       		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             EntryParticleSystem;                              		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBProj_FlashGrenade
// 0x0024 (0x0490 - 0x046C)
class APBProj_FlashGrenade : public APBProj_Grenade
{
public:
	class USoundCue*                                   BlowupOneShotSound;                               		// 0x046C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ExplosionTemplate;                                		// 0x0470 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashIn;                                          		// 0x0474 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashFull;                                        		// 0x0478 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashOut;                                         		// 0x047C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashSuperimposeDelay;                            		// 0x0480 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashSuperimposeFade;                             		// 0x0484 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlashMaxDirectionDecrease;                        		// 0x0488 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystemComponent*                    ExplosionParticleSystem;                          		// 0x048C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBProj_Mortar
// 0x0010 (0x02B0 - 0x02A0)
class APBProj_Mortar : public APBProjectileNoPhysic
{
public:
	class UStaticMeshComponent*                        pMortarMesh;                                      		// 0x02A0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             pFallingSound;                                    		// 0x02A4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USoundCue*                                   pMortarStartAudio;                                		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fEffectiveRadius;                                 		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBProj_SmokeGrenade
// 0x0034 (0x04A0 - 0x046C)
class APBProj_SmokeGrenade : public APBProj_Grenade
{
public:
	float                                              fFadeoutLoopAfter;                                		// 0x046C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSmokeLoopFadeInDuration;                         		// 0x0470 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSmokeLoopFadeOutDuration;                        		// 0x0474 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   BlowupOneShotSound;                               		// 0x0478 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SmokeLoopSound;                                   		// 0x047C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SmokeEndOneShotSound;                             		// 0x0480 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ExplosionTemplate;                                		// 0x0484 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fRadiusForSmoke;                                  		// 0x0488 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fInSmokeTestInterval;                             		// 0x048C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSmokeEmitting : 1;                               		// 0x0490 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              fLastSmokeTestTime;                               		// 0x0494 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UAudioComponent*                             pSmokeLoop;                                       		// 0x0498 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    SmokeParticleSystem;                              		// 0x049C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class PlanBGame.PBRadioMessage
// 0x0000 (0x0060 - 0x0060)
class UPBRadioMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBRankAnnouncement
// 0x000C (0x006C - 0x0060)
class UPBRankAnnouncement : public UPBLocalMessage
{
public:
	TArray< struct FString >                           strRanks;                                         		// 0x0060 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBRedTeamDefensePoint
// 0x0000 (0x02D8 - 0x02D8)
class APBRedTeamDefensePoint : public APBDefensePoint
{
public:
public:
};

// Class PlanBGame.PBRedTeamStart
// 0x0002 (0x02C4 - 0x02C2)
class APBRedTeamStart : public APBPlayerStart
{
public:
public:
};

// Class PlanBGame.PBReinforcementDevice
// 0x0000 (0x03BC - 0x03BC)
class APBReinforcementDevice : public APBPlaceableDevice
{
public:
public:
};

// Class PlanBGame.PBReinforcementGame
// 0x0000 (0x0468 - 0x0468)
class APBReinforcementGame : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBReinforcementZone
// 0x0000 (0x0354 - 0x0354)
class APBReinforcementZone : public APBInteractibleZone
{
public:
public:
};

// Class PlanBGame.PBRFGGameReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBRFGGameReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBRFGPlayerReplicationInfo
// 0x0000 (0x07F8 - 0x07F8)
class APBRFGPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBRoundDrawMessage
// 0x0000 (0x0060 - 0x0060)
class UPBRoundDrawMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBSafeBreachedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBSafeBreachedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBSafeBreachStoppedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBSafeBreachStoppedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBScoreboard
// 0x0000 (0x0460 - 0x0460)
class APBScoreboard : public AHUD
{
public:
public:
};

// Class PlanBGame.PBSecureVolume
// 0x0000 (0x0254 - 0x0254)
class APBSecureVolume : public APhysicsVolume
{
public:
public:
};

// Class PlanBGame.PBSecurityActivatedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBSecurityActivatedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBSecurityDeactivatedMessage
// 0x0000 (0x0078 - 0x0078)
class UPBSecurityDeactivatedMessage : public UPBSplitTeamMessage
{
public:
public:
};

// Class PlanBGame.PBSecurityOfficeZone
// 0x0000 (0x0354 - 0x0354)
class APBSecurityOfficeZone : public APBReinforcementZone
{
public:
public:
};

// Class PlanBGame.PBSensor
// 0x0024 (0x08FC - 0x08D8)
class APBSensor : public APBPawn
{
public:
	unsigned char                                      TeamNum;                                          		// 0x08D8 (0x0001) [0x0000000000000020]              ( CPF_Net )
	float                                              MaxSensorRange;                                   		// 0x08DC (0x0004) [0x0000000000000000]              
	float                                              SensorScale;                                      		// 0x08E0 (0x0004) [0x0000000000000000]              
	class UMaterialInstanceConstant*                   SensorMaterialInstance;                           		// 0x08E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterial*                                   HudMaterial;                                      		// 0x08E8 (0x0004) [0x0000000000000000]              
	class APBSensorVolume*                             Volume;                                           		// 0x08EC (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __OnDeployableUsedUp__Delegate;                   		// 0x08F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSensorVolume
// 0x0000 (0x0254 - 0x0254)
class APBSensorVolume : public APBSecureVolume
{
public:
public:
};

// Class PlanBGame.PBSeqAct_ActivateCrackingDev
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_ActivateCrackingDev : public USequenceAction
{
public:
public:
};

// Class PlanBGame.PBSeqAct_CameraShake
// 0x0040 (0x013C - 0x00FC)
class UPBSeqAct_CameraShake : public USequenceAction
{
public:
	struct FViewShakeInfo                              CameraShake;                                      		// 0x00FC (0x0040) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSeqAct_CampaignSetPhase
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_CampaignSetPhase : public UPBSeqAct_ActivateOnScript
{
public:
public:
};

// Class PlanBGame.PBSeqAct_ChangeNodeStatus
// 0x0001 (0x00FD - 0x00FC)
class UPBSeqAct_ChangeNodeStatus : public USequenceAction
{
public:
	unsigned char                                      ownerTeam;                                        		// 0x00FC (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBSeqAct_ChangeTvMaterial
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_ChangeTvMaterial : public UPBSeqAct_ActivateOnScript
{
public:
public:
};

// Class PlanBGame.PBSeqAct_InstallObjectiveDevice
// 0x0000 (0x00FC - 0x00FC)
class UPBSeqAct_InstallObjectiveDevice : public UPBSeqAct_Base
{
public:
public:
};

// Class PlanBGame.PBSeqAct_WaitForPlayerMovement
// 0x0018 (0x0114 - 0x00FC)
class UPBSeqAct_WaitForPlayerMovement : public UPBSeqAct_Base
{
public:
	class UObject*                                     Player;                                           		// 0x00FC (0x0004) [0x0000000000000000]              
	float                                              RequiredDistance;                                 		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     LastLocation;                                     		// 0x0104 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              TraveledDistance;                                 		// 0x0110 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class PlanBGame.PBSeqCond_CampaignPhase
// 0x0000 (0x00E4 - 0x00E4)
class UPBSeqCond_CampaignPhase : public USequenceCondition
{
public:
public:
};

// Class PlanBGame.PBSeqCond_CampaignZone
// 0x0000 (0x00E4 - 0x00E4)
class UPBSeqCond_CampaignZone : public USequenceCondition
{
public:
public:
};

// Class PlanBGame.PBSeqCond_IsInCombat
// 0x000C (0x00F0 - 0x00E4)
class UPBSeqCond_IsInCombat : public USequenceCondition
{
public:
	TArray< struct FString >                           MenuMapNames;                                     		// 0x00E4 (0x000C) [0x0000000020404001]              ( CPF_Edit | CPF_Config | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class PlanBGame.PBSeqCond_IsObstacleActivated
// 0x0000 (0x00E4 - 0x00E4)
class UPBSeqCond_IsObstacleActivated : public USequenceCondition
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ApplyDamage
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ApplyDamage : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_BigExplosion
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_BigExplosion : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_BiologicalBombExploded
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_BiologicalBombExploded : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_BotsKilled
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_BotsKilled : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_C4Exploded
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_C4Exploded : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_CampaignPhaseChanged
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_CampaignPhaseChanged : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_CampaignStarting
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_CampaignStarting : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_DestructionStateChange
// 0x0001 (0x0115 - 0x0114)
class UPBSeqEvent_DestructionStateChange : public USequenceEvent
{
public:
	unsigned char                                      DestructionState;                                 		// 0x0114 (0x0001) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBSeqEvent_ObstacleClose
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObstacleClose : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ObstacleOpen
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObstacleOpen : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_ObstacleReset
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_ObstacleReset : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_TurrentArmed
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_TurrentArmed : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_UpdateEMP
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_UpdateEMP : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_WarfareCampaignEnd
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_WarfareCampaignEnd : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSeqEvent_WarfareCampaignStart
// 0x0000 (0x0114 - 0x0114)
class UPBSeqEvent_WarfareCampaignStart : public USequenceEvent
{
public:
public:
};

// Class PlanBGame.PBSGNuclearBomb
// 0x0003 (0x0354 - 0x0351)
class APBSGNuclearBomb : public APBInteractiveObjective
{
public:
public:
};

// Class PlanBGame.PBShakingCameraAction
// 0x0040 (0x024C - 0x020C)
class APBShakingCameraAction : public APBCameraAction
{
public:
	float                                              fIntensity;                                       		// 0x020C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              fSpeedHorizontal;                                 		// 0x0210 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              fSpeedVertical;                                   		// 0x0214 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UMaterial*                                   ScreenShader;                                     		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fWeaponShakeFactor;                               		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAlwaysShakeAtMaxIntensity : 1;                   		// 0x0220 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHorizontalInc : 1;                               		// 0x0220 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bVerticalInc : 1;                                 		// 0x0220 (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              fShaderIntensityFactor;                           		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLastDeltaTime;                                   		// 0x0228 (0x0004) [0x0000000000000000]              
	float                                              fHorizontalComponent;                             		// 0x022C (0x0004) [0x0000000000000000]              
	float                                              fVerticalComponent;                               		// 0x0230 (0x0004) [0x0000000000000000]              
	int                                                iCurrentFrame;                                    		// 0x0234 (0x0004) [0x0000000000000000]              
	int                                                iShakeDir;                                        		// 0x0238 (0x0004) [0x0000000000000000]              
	class UMaterialInstanceConstant*                   pShaderInstance;                                  		// 0x023C (0x0004) [0x0000000000000000]              
	struct FVector                                     vShakeOffset;                                     		// 0x0240 (0x000C) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBSideRollCameraAction
// 0x0000 (0x020C - 0x020C)
class APBSideRollCameraAction : public APBCameraAction
{
public:
public:
};

// Class PlanBGame.PBSingleSquad
// 0x0000 (0x0294 - 0x0294)
class APBSingleSquad : public APBSquadAI
{
public:
public:
};

// Class PlanBGame.PBSkill_PPlaneActor
// 0x0000 (0x04E0 - 0x04E0)
class APBSkill_PPlaneActor : public APBActorController
{
public:
public:
};

// Class PlanBGame.PBZone
// 0x0000 (0x02EC - 0x02EC)
class APBZone : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBSlideZone
// 0x0000 (0x02EC - 0x02EC)
class APBSlideZone : public APBZone
{
public:
public:
};

// Class PlanBGame.PBSlowVolume
// 0x001C (0x0274 - 0x0258)
class APBSlowVolume : public AGravityVolume
{
public:
	float                                              ScalingFactor;                                    		// 0x0258 (0x0004) [0x0000000000000000]              
	TArray< class AActor* >                            PendingEntered;                                   		// 0x025C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class AActor* >                            PendingLeaving;                                   		// 0x0268 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBSniperHitMsg
// 0x0000 (0x0060 - 0x0060)
class UPBSniperHitMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBSoundEmitter
// 0x0000 (0x02EC - 0x02EC)
class APBSoundEmitter : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBSpecialMove_Move2IdleTransition
// 0x0000 (0x003C - 0x003C)
class UPBSpecialMove_Move2IdleTransition : public UPBSpecialMove
{
public:
public:
};

// Class PlanBGame.PBSpecialMove_TransitionRun2Idle
// 0x0000 (0x003C - 0x003C)
class UPBSpecialMove_TransitionRun2Idle : public UPBSpecialMove_Move2IdleTransition
{
public:
public:
};

// Class PlanBGame.PBSpecialMove_TransitionWalk2Idle
// 0x0000 (0x003C - 0x003C)
class UPBSpecialMove_TransitionWalk2Idle : public UPBSpecialMove_Move2IdleTransition
{
public:
public:
};

// Class PlanBGame.PBSpecialZoneInfo
// 0x0000 (0x01D8 - 0x01D8)
class APBSpecialZoneInfo : public AReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBSpecialZoneEquipment
// 0x0000 (0x01D8 - 0x01D8)
class APBSpecialZoneEquipment : public APBSpecialZoneInfo
{
public:
public:
};

// Class PlanBGame.PBSpecialZoneExtraLife
// 0x0000 (0x01D8 - 0x01D8)
class APBSpecialZoneExtraLife : public APBSpecialZoneInfo
{
public:
public:
};

// Class PlanBGame.PBSpecialZoneMortar
// 0x0000 (0x01D8 - 0x01D8)
class APBSpecialZoneMortar : public APBSpecialZoneInfo
{
public:
public:
};

// Class PlanBGame.PBSpecialZoneScanner
// 0x0000 (0x01D8 - 0x01D8)
class APBSpecialZoneScanner : public APBSpecialZoneInfo
{
public:
public:
};

// Class PlanBGame.PBSpectatorRestrictVolume
// 0x0010 (0x0224 - 0x0214)
class APBSpectatorRestrictVolume : public AVolume
{
public:
	struct FVector                                     PrevPosition;                                     		// 0x0214 (0x000C) [0x0000000000000000]              
	class APBPlayerController*                         pLocalPlayerController;                           		// 0x0220 (0x0004) [0x0000000000000000]              
public:
};

// Class PlanBGame.PBStaticMesh
// 0x0000 (0x026C - 0x026C)
class UPBStaticMesh : public UStaticMeshComponent
{
public:
public:
};

// Class PlanBGame.PBStrategicMapCell
// 0x0000 (0x01D8 - 0x01D8)
class APBStrategicMapCell : public APBBaseStrategicMapCell
{
public:
public:
};

// Class PlanBGame.PBStrategicMapManager
// 0x0000 (0x01D8 - 0x01D8)
class APBStrategicMapManager : public APBBaseStrategicMapCell
{
public:
public:
};

// Class PlanBGame.PBSun
// 0x003C (0x021C - 0x01E0)
class APBSun : public AStaticMeshActor
{
public:
	unsigned long                                      LightRender : 1;                                  		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      CoronaRender : 1;                                 		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      BlindRender : 1;                                  		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              LightPower;                                       		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightBrightness;                                  		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightMinValue;                                    		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                Light_Corona_color;                               		// 0x01F0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              CoronaPower;                                      		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CoronaBrightness;                                 		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CoronaMinValue;                                   		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CoronaFadeOut;                                    		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CoronaRadius;                                     		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          CoronaMaterial;                                   		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlindPower;                                       		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBTeamEliminatedMessage
// 0x0000 (0x0060 - 0x0060)
class UPBTeamEliminatedMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBTeamVoiceMsg
// 0x0000 (0x0060 - 0x0060)
class UPBTeamVoiceMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBTestCameraAction
// 0x0000 (0x020C - 0x020C)
class APBTestCameraAction : public APBCameraAction
{
public:
public:
};

// Class PlanBGame.PBThrowGrenadeMsg
// 0x0000 (0x0060 - 0x0060)
class UPBThrowGrenadeMsg : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBTriggerDeathVolume
// 0x0000 (0x0214 - 0x0214)
class APBTriggerDeathVolume : public ATriggerVolume
{
public:
public:
};

// Class PlanBGame.PBTurretBlockVolume
// 0x0004 (0x0218 - 0x0214)
class APBTurretBlockVolume : public AVolume
{
public:
	unsigned long                                      bDestroyTurret : 1;                               		// 0x0214 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class PlanBGame.PBTurretInfo
// 0x00A8 (0x00E4 - 0x003C)
class UPBTurretInfo : public UObject
{
public:
	class UParticleSystem*                             MuzzleFlashPSCTemplate;                           		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             DisabledEffectPSCTemplate;                        		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       DisabledEffectSocketName;                         		// 0x0044 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              MuzzleFlashDuration;                              		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bHasLightEffect : 1;                              		// 0x0050 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              MuzzleFlashLightBrightnessMin;                    		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MuzzleFlashLightBrightnessMax;                    		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fLightRadius;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ShellEjectPSCTemplate;                            		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ShellEjectionSocketName;                          		// 0x0064 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              fShellEjectDuration;                              		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fShellEjectDelayTime;                             		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              fSpreadPerBullet;                                 		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FiringSpeed;                                      		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TurretMaxDamage;                                  		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TurretMinDamage;                                  		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TurretSpeed;                                      		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TargetMinFocusTime;                               		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TargetLostTime;                                   		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EndFireDelay;                                     		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartFireDelay;                                   		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartUpDelay;                                     		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDist;                                          		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFollowDist;                                    		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EffectiveRange;                                   		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WarnDist;                                         		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpawnDist;                                        		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ThinkTimeInterval;                                		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                FOV;                                              		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FireSound;                                        		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FireSoundFadeOutTime;                             		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ActivatedSound;                                   		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   IdleSound;                                        		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   DisabledSound;                                    		// 0x00C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ArmingSound;                                      		// 0x00CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SndBulletWhizCue;                                 		// 0x00D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SpinningUpSound;                                  		// 0x00D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SpinningDownSound;                                		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BulletWhizSoundDistance;                          		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  AvatarImage;                                      		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.PBTurretSpot
// 0x0003 (0x0354 - 0x0351)
class APBTurretSpot : public APBInteractiveObjective
{
public:
public:
};

// Class PlanBGame.PBTurretZone
// 0x0000 (0x0354 - 0x0354)
class APBTurretZone : public APBInteractibleZone
{
public:
public:
};

// Class PlanBGame.PBTv
// 0x0000 (0x02EC - 0x02EC)
class APBTv : public APBGameObjective
{
public:
public:
};

// Class PlanBGame.PBUIDataProvider_OnlineFriendMessages
// 0x003C (0x00E0 - 0x00A4)
class UPBUIDataProvider_OnlineFriendMessages : public UUIDataProvider_OnlineFriendMessages
{
public:
	TArray< struct FOnlineFriendMessage >              m_Archive;                                        		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   m_OnNewMessageDelegateArray;                      		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   m_OnMessageSentDelegateArray;                     		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnNewMessageDelegate__Delegate;                 		// 0x00C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMessageSentDelegate__Delegate;                		// 0x00D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBUIDataProvider_OnlineFriends
// 0x0073 (0x0178 - 0x0105)
class UPBUIDataProvider_OnlineFriends : public UUIDataProvider_OnlineFriends
{
public:
	TArray< struct FString >                           getPictureList;                                   		// 0x0108 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FOnlineFriend >                     m_AuthorizationList;                              		// 0x0114 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FOnlineFriend >                     m_RequestList;                                    		// 0x0120 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           m_deleteFromAuthorizationStorage;                 		// 0x012C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_deleteFromRequestStorage;                       		// 0x0138 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_PopupsSent;                                     		// 0x0144 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FString >                           m_FriendsAdded;                                   		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      m_bAuthorizedUpdated : 1;                         		// 0x015C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      m_bRequestedUpdated : 1;                          		// 0x015C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      m_bRetrievingPictures : 1;                        		// 0x015C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      m_bIAmOnlineShown : 1;                            		// 0x015C (0x0004) [0x0000000000000000] [0x00000008] 
	TArray< struct FScriptDelegate >                   m_OnBuddyListsChangedDelegates;                   		// 0x0160 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnBuddyListsChangedDelegate__Delegate;          		// 0x016C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class PlanBGame.PBVictimMessage
// 0x0000 (0x0060 - 0x0060)
class UPBVictimMessage : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBVolume
// 0x0000 (0x0214 - 0x0214)
class APBVolume : public AVolume
{
public:
public:
};

// Class PlanBGame.PBWarfareCampaignVictory
// 0x0000 (0x0060 - 0x0060)
class UPBWarfareCampaignVictory : public UPBLocalMessage
{
public:
public:
};

// Class PlanBGame.PBWarfareGame
// 0x0000 (0x0468 - 0x0468)
class APBWarfareGame : public APBRoundGame
{
public:
public:
};

// Class PlanBGame.PBWarfareMapInfo
// 0x0000 (0x01D8 - 0x01D8)
class APBWarfareMapInfo : public AInfo
{
public:
public:
};

// Class PlanBGame.PBWeaponListLimiter
// 0x0000 (0x003C - 0x003C)
class UPBWeaponListLimiter : public UPBChoiseLimiter
{
public:
public:
};

// Class PlanBGame.PBWeaponSpread
// 0x0000 (0x003C - 0x003C)
class UPBWeaponSpread : public UPBWeaponSpreadBase
{
public:
public:
};

// Class PlanBGame.PBWGGameReplicationInfo
// 0x0000 (0x0374 - 0x0374)
class APBWGGameReplicationInfo : public APBGameReplicationInfo
{
public:
public:
};

// Class PlanBGame.PBWGPlayerReplicationInfo
// 0x0000 (0x07F8 - 0x07F8)
class APBWGPlayerReplicationInfo : public APBPlayerReplicationInfo
{
public:
public:
};

// Class PlanBGame.SeqAct_PBCameraShake
// 0x0074 (0x0170 - 0x00FC)
class USeqAct_PBCameraShake : public USequenceAction
{
public:
	struct FScreenShakeStruct                          CameraShake;                                      		// 0x00FC (0x0068) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlobalScale;                                      		// 0x0164 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlobalAmplitudeScale;                             		// 0x0168 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlobalFrequencyScale;                             		// 0x016C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class PlanBGame.SeqAct_SetBreakableMesh
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_SetBreakableMesh : public USequenceAction
{
public:
	class UStaticMesh*                                 NewStaticMesh;                                    		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      NoCollision : 1;                                  		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class PlanBGame.SeqAct_SetWheelParticles
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_SetWheelParticles : public USequenceAction
{
public:
	class UParticleSystem*                             NewParticleSystem;                                		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif